Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 16-sinkgate-vanilla-2
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = VanillaExecute(config)
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights*y + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=True
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True

Warmup steps: 100
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 124,354,560 parameters
num non-decayed parameter tensors: 86, with 112,128 parameters
@ 0 train 10.9751 , allloss: 10.9751, dt: 1900.79ms, fracRes: 0.0062, norm(attn): 0.0410, norm(output): 0.0854, norm(x): 0.0867, norm(y): 0.9995, norm:21.4820, tok/sec: 68956.56, flops:60.40, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.2080, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1562, 0.2559, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.1167, 0.1504, 0.3125, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.1240, 0.3086, 0.1729, 0.1309, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1270, 0.1040, 0.1953, 0.1465, 0.1055, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.0820, 0.1226, 0.1523, 0.1167, 0.1021, 0.1729, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1001, 0.2100, 0.0923, 0.1099, 0.1045, 0.0947, 0.0608, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0825, 0.0391, 0.0996, 0.0977, 0.1543, 0.1279, 0.0986, 0.0527, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.1641, 0.0981, 0.0811, 0.0498, 0.1147, 0.1299, 0.0493, 0.0481, 0.1035, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0461, 0.0864, 0.0850, 0.1001, 0.0684, 0.0854, 0.0776, 0.0835, 0.1152, 0.1226, 0.0454, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.1040, 0.0693, 0.1069, 0.0547, 0.0564, 0.0630, 0.0693, 0.0757, 0.0820, 0.0928, 0.0603, 0.0947, 0.0000, 0.0000],
        [0.0640, 0.0859, 0.0703, 0.0474, 0.1279, 0.0713, 0.0640, 0.0977, 0.0708, 0.0664, 0.0354, 0.0564, 0.0532, 0.0894, 0.0000],
        [0.0610, 0.0786, 0.0723, 0.0234, 0.0889, 0.0674, 0.0688, 0.0703, 0.0757, 0.0874, 0.0503, 0.0408, 0.0469, 0.0996, 0.0684]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000],
        [     0.0000,     -0.1221,     -0.3145,      0.4941,      0.2734,      0.7266,      0.1016,      0.0025,     -0.2451,      0.0500,     -0.0801,     -0.1797,      0.1128,     -0.3555,      0.3652],
        [    -0.0000,     -0.7734,     -0.2734,     -0.0400,      0.1514,      0.0486,     -0.3301,     -0.3984,      0.0996,     -0.1846,      0.9609,     -0.0728,     -0.4805,      0.3047,      0.2500],
        [    -0.0000,     -0.4336,      0.0618,      0.3613,      0.0569,      0.4824,      0.0476,     -0.5078,      0.0488,      0.3594,      0.1196,      0.3711,     -0.5469,     -0.0566,     -0.1523],
        [    -0.0000,     -0.5000,     -0.2490,      0.4805,      0.1699,     -0.2158,     -0.0762,      0.1426,      0.1982,     -0.4551,      0.2949,      0.0031,      0.0160,      0.2451,     -0.0703],
        [    -0.0000,     -0.4121,      0.5039,     -0.0776,     -0.3594,     -0.8906,     -0.0194,      0.1357,      0.2363,     -0.0942,     -0.0801,     -0.2109,     -0.6055,      0.5352,      0.4531],
        [    -0.0000,     -0.0603,     -0.2637,      0.3652,      0.0791,     -0.2480,      0.3203,     -0.1226,     -0.0815,     -0.1533,      0.0050,      0.0493,     -0.3262,      0.1914,     -0.1074],
        [    -0.0000,     -0.4570,     -0.0559,      0.1660,     -0.1045,     -0.2393,      0.2910,     -0.0603,     -0.2061,      0.0918,      0.4199,     -0.0684,      0.1367,     -0.3223,      0.2598],
        [     0.0000,     -0.0874,      0.6484,     -0.1689,      0.0054,     -0.0479,     -0.1445,     -0.5859,      0.0825,     -0.2852,     -0.1943,     -0.1367,     -0.4160,      0.3516,     -0.4355],
        [    -0.0000,      0.0437,     -0.7031,      0.2334,      0.2129,      0.6680,      0.4824,      0.2217,     -0.4023,      0.7539,     -0.3613,      0.3340,     -0.3184,      0.0386,     -0.3418],
        [     0.0000,      0.7266,      0.2139,      0.0237,     -0.4648,      0.3711,      0.4961,     -0.4727,     -0.4961,      0.2695,      0.0549,      0.1992,      0.6875,     -0.6172,     -0.4395],
        [     0.0000,     -0.5977,      0.0275,      0.0061,      0.1719,     -0.2080,      0.0167,     -0.0820,     -0.0058,      0.3125,      0.3730,     -0.6211,      0.3242,     -0.0376,     -0.0903],
        [    -0.0000,      0.3770,     -0.0330,      0.4023,     -0.2656,     -0.2373,     -0.1289,     -0.0282,      0.0549,      0.1377,      0.2598,     -0.1709,      0.2832,      0.2373,     -0.1108],
        [     0.0000,      0.2949,      0.0957,     -0.3008,      0.6953,      0.1074,      0.0034,      0.4258,      0.1006,      0.0378,     -0.5938,     -0.1270,     -0.1836,      0.3340,     -0.4922],
        [     0.0000,      0.2539,      0.1689,     -0.9531,      0.3789,      0.0996,      0.1221,      0.1445,      0.2148,      0.3633,     -0.1904,     -0.4023,     -0.2617,      0.4922,      0.1143]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4976],
        [0.3307],
        [0.2377],
        [0.1930],
        [0.1628],
        [0.1428],
        [0.1247],
        [0.1064],
        [0.0959],
        [0.0878],
        [0.0793],
        [0.0746],
        [0.0703],
        [0.0658]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.1699, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.1465, 0.2930, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.0898, 0.3711, 0.1592, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.0928, 0.2012, 0.1108, 0.1235, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1118, 0.1147, 0.1299, 0.1572, 0.1895, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1533, 0.1426, 0.0977, 0.1201, 0.1045, 0.1436, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0996, 0.0845, 0.1172, 0.0894, 0.1396, 0.1523, 0.0874, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0859, 0.1006, 0.1104, 0.0737, 0.1001, 0.0762, 0.0938, 0.1611, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0728, 0.0977, 0.0767, 0.0664, 0.1226, 0.0889, 0.1709, 0.0503, 0.0693, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1289, 0.0588, 0.0684, 0.0923, 0.0566, 0.0854, 0.0605, 0.0815, 0.0339, 0.1357, 0.1230, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0608, 0.0408, 0.0586, 0.1084, 0.0889, 0.0850, 0.0820, 0.0654, 0.0635, 0.1235, 0.0537, 0.1030, 0.0000, 0.0000],
        [0.0732, 0.0820, 0.0447, 0.0806, 0.0417, 0.0649, 0.0513, 0.0698, 0.0620, 0.0757, 0.0972, 0.0679, 0.1377, 0.0522, 0.0000],
        [0.0664, 0.0669, 0.0435, 0.1021, 0.0674, 0.0525, 0.1108, 0.0505, 0.0403, 0.0679, 0.0889, 0.0562, 0.0713, 0.0542, 0.0603]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000],
        [     0.0000,     -0.1299,      0.2402,     -0.0962,      0.0209,     -0.1631,      0.2969,     -0.2891,      0.5664,     -0.2656,      0.4238,     -0.3594,      0.1885,      0.2773,     -0.1099],
        [     0.0000,     -0.7656,      0.2344,     -0.1445,      0.2773,      0.4004,      0.4512,      0.2021,     -0.5469,     -0.0811,     -0.3926,      0.0591,      0.4609,     -0.5625,     -0.1611],
        [     0.0000,     -0.5898,      0.1006,      0.1133,     -0.3008,      0.4590,      0.6367,      0.3652,      0.2617,     -0.1055,      0.3477,      0.1807,     -0.2188,      0.3047,     -0.0194],
        [    -0.0000,     -0.7617,      0.6602,     -0.1865,     -0.0135,      0.0635,      0.5195,      0.0669,      0.0977,      0.2695,     -0.3145,     -0.4941,      0.0859,      0.1162,      0.0894],
        [     0.0000,     -0.5039,      0.2695,     -0.3301,     -0.2207,      0.7227,      0.0061,      0.2412,      0.0269,      0.3945,      0.3965,     -0.3184,      0.1226,      0.2021,     -0.3164],
        [     0.0000,     -0.2031,     -0.1777,     -0.0562,      0.1377,      0.3203,      0.1533,      0.1206,     -0.2832,     -0.4668,      0.0143,      0.1235,      0.0496,      0.0825,     -0.3457],
        [     0.0000,      0.1777,      0.1045,     -0.2695,     -0.0625,     -0.2012,      0.1123,     -0.1426,      0.2656,     -0.0811,      0.3477,      0.3008,     -0.2539,      0.3711,      0.1797],
        [    -0.0000,     -0.2422,     -0.4062,     -0.0762,     -0.3477,      0.0938,      0.1855,     -0.3711,     -0.2002,     -0.1060,      0.7656,     -0.3008,      0.2578,     -0.4082,     -0.0981],
        [     0.0000,     -0.1777,     -0.0221,      0.0728,     -0.3340,     -0.0247,     -0.2969,     -0.0933,      0.4512,     -0.0820,      0.3262,      0.1016,      0.0254,      0.4102,     -0.2891],
        [    -0.0000,     -0.2402,      0.0554,     -0.1875,     -0.3281,      0.2852,     -0.0378,      0.6172,     -0.6055,     -0.2871,      0.0086,      0.2852,      0.0408,     -0.2100,      0.2178],
        [     0.0000,      0.5430,     -0.2451,     -0.0923,      0.2080,     -0.2812,      0.1289,     -0.2158,      0.0820,     -0.7930,      0.5938,      0.4961,      0.1279,     -0.2090,      0.4434],
        [    -0.0000,     -0.0820,     -0.4785,     -0.1206,      0.4980,      0.2969,      0.2539,      0.2188,     -0.0077,     -0.0364,      0.6250,     -0.2070,      0.4453,     -0.2754,      0.1650],
        [    -0.0000,      0.1147,     -0.4902,      0.0967,     -0.5586,     -0.1172,     -0.3535,     -0.0461,     -0.1660,      0.0322,      0.2852,     -0.0752,      0.6328,     -0.3359,     -0.2930],
        [    -0.0000,      0.0059,     -0.4219,      0.4316,      0.0184,     -0.2324,      0.5117,     -0.2715,     -0.5000,      0.0215,      0.2930,     -0.1650,      0.0728,     -0.2012,     -0.0967]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5174],
        [0.3446],
        [0.2472],
        [0.1987],
        [0.1544],
        [0.1408],
        [0.1232],
        [0.1091],
        [0.0955],
        [0.0884],
        [0.0786],
        [0.0727],
        [0.0645],
        [0.0653]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.4980, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.4395, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3359, 0.2344, 0.1777, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2393, 0.1289, 0.1963, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.1592, 0.1865, 0.1953, 0.1143, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1226, 0.1699, 0.1123, 0.1377, 0.1592, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.0918, 0.1270, 0.1377, 0.1494, 0.1465, 0.0986, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0732, 0.0903, 0.2236, 0.0581, 0.0854, 0.1250, 0.0942, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.0908, 0.1187, 0.1030, 0.1465, 0.0762, 0.0535, 0.1016, 0.0977, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0933, 0.1035, 0.0630, 0.0747, 0.0811, 0.0923, 0.1196, 0.0688, 0.1035, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0645, 0.0903, 0.1338, 0.0991, 0.0508, 0.0674, 0.0776, 0.0811, 0.0835, 0.0781, 0.0811, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0991, 0.0757, 0.0889, 0.0967, 0.0571, 0.0659, 0.0908, 0.0500, 0.0583, 0.0566, 0.1069, 0.0757, 0.0000, 0.0000],
        [0.0615, 0.0664, 0.1138, 0.0771, 0.0728, 0.0496, 0.0469, 0.0601, 0.1240, 0.0613, 0.0850, 0.0515, 0.0408, 0.0894, 0.0000],
        [0.0625, 0.0493, 0.0718, 0.0564, 0.0610, 0.1465, 0.0942, 0.0420, 0.0820, 0.0454, 0.0481, 0.0708, 0.0552, 0.0603, 0.0547]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000],
        [    -0.0000,     -0.0101,     -0.0253,      0.3926,      0.2949,      0.2002,     -0.1030,     -0.5586,      0.1396,      0.7656,     -0.5625,      0.1523,     -0.1494,     -0.0232,      0.4453],
        [     0.0000,      0.5078,      0.1074,     -0.0151,     -0.5547,     -0.3047,     -0.2041,      0.1338,     -0.5781,      0.2100,     -0.3906,     -0.5547,     -0.1719,     -0.2432,      0.4199],
        [    -0.0000,     -0.3633,     -0.6406,     -0.2910,      0.1592,      0.5586,      0.3457,      0.0171,      0.1445,      0.3457,      0.2422,      0.0913,      0.3086,      0.2578,     -0.2285],
        [    -0.0000,      0.3281,     -0.2910,      0.1289,      0.4277,      0.3145,     -0.0623,     -0.4316,     -0.1221,     -0.2031,      0.3125,      0.2871,      0.2363,     -0.2051,     -0.3223],
        [     0.0000,      0.0264,      0.1846,      0.2314,     -0.3066,      0.2021,      0.0913,     -0.0522,      0.1016,      0.7891,     -0.5352,     -0.0354,     -0.2695,     -0.0361,      0.8672],
        [    -0.0000,     -0.0806,      0.2422,     -0.1699,      0.0359,      0.1797,      0.2148,     -0.0669,     -0.2119,     -0.1270,      0.1396,      0.4238,     -0.2520,     -0.0967,     -0.4062],
        [    -0.0000,     -0.6250,     -0.2988,     -0.2168,     -0.1367,     -0.1533,     -0.5508,     -0.8008,      0.1167,     -0.1934,     -0.1045,     -0.3164,      0.0031,     -0.8828,     -0.4316],
        [    -0.0000,     -0.2207,     -0.0090,      0.8984,     -0.4551,     -0.0645,      0.3145,      0.0317,      0.5469,      0.0688,      0.4707,     -0.4785,     -0.1138,      0.3320,     -0.2158],
        [     0.0000,     -0.3203,     -0.0554,     -0.1963,      0.1602,     -0.5000,     -0.8516,     -0.2070,     -0.2461,     -0.3633,     -0.4238,     -0.0566,     -0.1445,     -0.7734,     -0.3340],
        [     0.0000,      0.1270,      0.2305,     -0.2676,     -0.0986,     -0.0151,      0.1182,      0.3770,     -0.1748,      0.2324,      0.3613,      0.3555,     -0.0444,     -0.3809,      0.3379],
        [    -0.0000,     -0.3594,     -0.0237,      0.3730,      0.0688,     -0.5977,     -0.3184,     -0.1729,     -0.1279,     -0.1001,     -0.1650,     -0.1289,     -0.5977,     -0.5000,     -0.1045],
        [     0.0000,      0.2441,     -0.0295,      0.1338,      0.2148,     -0.3105,     -0.1660,      0.1562,     -0.4434,     -0.2871,     -0.3184,      0.3184,     -0.0247,     -0.6094,      0.2832],
        [    -0.0000,      0.0776,      0.6133,      0.2256,      0.1660,     -0.2178,     -0.2734,     -0.0247,      0.7031,     -0.0070,      0.3223,     -0.1797,     -0.4160,      0.3691,     -0.1758],
        [    -0.0000,     -0.2363,      0.1416,     -0.1040,     -0.0247,      0.8516,      0.4121,     -0.3965,      0.2695,     -0.3164,     -0.2637,      0.1235,     -0.1240,     -0.0369,     -0.1348]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4915],
        [0.3136],
        [0.2418],
        [0.1983],
        [0.1557],
        [0.1332],
        [0.1224],
        [0.1067],
        [0.0989],
        [0.0860],
        [0.0809],
        [0.0748],
        [0.0684],
        [0.0632]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3066, 0.2295, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.2695, 0.1904, 0.2852, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.2520, 0.1807, 0.1924, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.2324, 0.1094, 0.1709, 0.1904, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.1934, 0.0967, 0.1221, 0.1377, 0.1240, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.1216, 0.1157, 0.1719, 0.1182, 0.0825, 0.1797, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1738, 0.1357, 0.0591, 0.1147, 0.0889, 0.0623, 0.1338, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1064, 0.1455, 0.1191, 0.0537, 0.1064, 0.0869, 0.0776, 0.0942, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0732, 0.1279, 0.1680, 0.0981, 0.0747, 0.0781, 0.0664, 0.1035, 0.0703, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.0820, 0.0996, 0.0669, 0.0359, 0.1089, 0.0493, 0.0688, 0.1016, 0.1484, 0.0938, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0613, 0.0640, 0.0498, 0.1367, 0.0417, 0.0889, 0.0608, 0.0854, 0.1108, 0.1099, 0.0728, 0.0703, 0.0483, 0.0000, 0.0000],
        [0.0581, 0.1021, 0.0889, 0.0459, 0.0747, 0.0649, 0.0547, 0.0767, 0.1138, 0.0718, 0.0752, 0.0408, 0.0566, 0.0757, 0.0000],
        [0.0596, 0.0645, 0.1030, 0.0542, 0.0491, 0.0603, 0.0903, 0.0413, 0.0713, 0.0471, 0.0630, 0.0708, 0.0610, 0.0947, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000],
        [     0.0000,     -0.1289,      0.0045,      0.1973,      0.0654,     -0.0098,      0.0718,      0.1260,      0.0359,      0.3301,     -0.1211,      0.0608,      0.1108,      0.1069,     -0.0488],
        [     0.0000,     -0.2910,      0.4082,     -0.2598,     -0.0977,     -0.4043,     -0.2480,     -0.4277,      0.1406,     -0.0046,     -0.1079,     -0.2041,     -0.1533,     -0.5703,     -0.4980],
        [     0.0000,      0.0608,     -0.2871,      0.1172,     -0.2168,      0.1436,      0.0232,     -0.4824,      0.3828,      0.4766,      0.3125,      0.3730,      0.1797,      0.2520,      0.2734],
        [     0.0000,      0.2119,     -0.1235,     -0.0579,     -0.1729,     -0.5117,      0.2324,     -0.1494,      0.1748,      0.6172,     -0.0288,      0.2314,     -0.0089,      0.0684,      0.6211],
        [    -0.0000,      0.4375,     -0.3145,      0.1279,      0.2393,     -0.0195,     -0.5430,      0.2148,      0.3359,      0.2197,      0.4160,      0.0771,      0.2930,      0.2471,      0.0347],
        [     0.0000,      0.1172,     -0.5742,     -0.3418,     -0.2188,     -0.3262,     -0.1064,     -0.0056,     -0.1562,      0.0654,      0.1426,      0.0393,     -0.3496,     -0.0635,      0.0082],
        [    -0.0000,      0.0033,     -0.0457,      0.3516,     -0.0238,     -0.3867,      0.3926,     -0.3027,      0.2930,     -0.2305,      0.2578,      0.2969,     -0.2178,      0.2100,     -0.4453],
        [    -0.0000,      0.4727,      0.2275,     -0.6055,      0.0571,     -0.1973,     -0.5547,      0.2129,      0.1260,      0.4297,      0.1357,     -0.1196,     -0.2812,     -0.1641,      0.7539],
        [    -0.0000,      0.1108,      0.4258,      0.2227,     -0.5703,      0.1099,     -0.0908,     -0.2061,     -0.0096,      0.1865,      0.4512,     -0.0693,     -0.0374,      0.3574,     -0.0908],
        [    -0.0000,      0.0679,      0.6211,      0.8984,      0.3594,      0.0894,      0.1318,     -0.0315,      0.4121,      0.0272,      0.0513,      0.2617,     -0.1030,      0.2734,      0.2373],
        [    -0.0000,      0.1699,      0.3613,     -0.0393,     -0.6602,      0.4492,     -0.3379,     -0.0041,      0.3828,      0.7578,      0.3008,      0.0923,     -0.1582,      0.2236,      0.3418],
        [    -0.0000,      0.0420,     -0.2041,      0.8008,     -0.3828,      0.3730,     -0.0062,      0.3320,      0.5938,      0.5859,      0.1719,      0.1357,     -0.2363,      0.9258,      0.5078],
        [    -0.0000,      0.5664,      0.4258,     -0.2363,      0.2520,      0.1133,     -0.0603,      0.2754,      0.6719,      0.2139,      0.2559,     -0.3516,     -0.0261,      0.2637,      0.7266],
        [    -0.0000,      0.0762,      0.5469,     -0.0952,     -0.1943,      0.0108,      0.4141,     -0.3691,      0.1787,     -0.2334,      0.0564,      0.1699,      0.0242,      0.4668,      0.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4681],
        [0.3260],
        [0.2435],
        [0.2058],
        [0.1632],
        [0.1460],
        [0.1196],
        [0.1053],
        [0.0942],
        [0.0857],
        [0.0836],
        [0.0727],
        [0.0646],
        [0.0628]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.4844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.3594, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.2109, 0.1836, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2031, 0.1973, 0.1021, 0.2637, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1309, 0.1562, 0.1504, 0.2773, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.1787, 0.1582, 0.1074, 0.1377, 0.1318, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1206, 0.1592, 0.1357, 0.2002, 0.1045, 0.0825, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0664, 0.0786, 0.0796, 0.1289, 0.1416, 0.1914, 0.1089, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0505, 0.1035, 0.0728, 0.0928, 0.1157, 0.1348, 0.1064, 0.1055, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0708, 0.0884, 0.1089, 0.1279, 0.0688, 0.1011, 0.0879, 0.0767, 0.0566, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0654, 0.0981, 0.0515, 0.0586, 0.0674, 0.0723, 0.1138, 0.0767, 0.0654, 0.0962, 0.1045, 0.1299, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0869, 0.0874, 0.0449, 0.1348, 0.0596, 0.0601, 0.0591, 0.0544, 0.0908, 0.0840, 0.0493, 0.1074, 0.0000, 0.0000],
        [0.0708, 0.0601, 0.0630, 0.0496, 0.0771, 0.1016, 0.1084, 0.0579, 0.0586, 0.0713, 0.0684, 0.0603, 0.0879, 0.0649, 0.0000],
        [0.0635, 0.0601, 0.0796, 0.0693, 0.0967, 0.0630, 0.0610, 0.0698, 0.0471, 0.0618, 0.0703, 0.0557, 0.0825, 0.0564, 0.0635]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000],
        [     0.0000,     -0.0586,      0.5039,      0.2236,      0.1562,     -0.0859,     -0.3047,      0.2949,      0.1064,      0.2891,     -0.2715,     -0.5664,     -0.0649,     -0.0625,      0.3633],
        [    -0.0000,      0.0088,     -0.2295,      0.5781,      0.3027,      0.0220,     -0.1484,      0.1572,     -0.4980,     -0.2314,     -0.1914,     -0.2812,      0.1475,     -0.4805,     -0.2188],
        [    -0.0000,     -0.0410,     -0.1826,      0.5625,      0.5352,      0.0977,     -0.2041,     -0.0129,      0.3047,      0.2793,     -0.2422,      0.2119,      0.0884,      0.3164,     -0.2129],
        [     0.0000,     -0.0306,     -0.6914,      0.2578,      0.1426,      0.1885,      0.2910,     -0.2910,     -0.0942,     -0.0055,     -0.3359,      0.1748,     -0.0530,      0.0356,      0.0192],
        [     0.0000,     -0.0310,      0.1514,      0.1113,      0.7266,      0.1099,      0.4180,     -0.0825,      0.3398,     -0.1631,     -0.1270,     -0.0613,     -0.2471,     -0.0767,     -0.3242],
        [    -0.0000,      0.1406,      0.0183,     -0.3691,     -0.1235,     -0.1689,     -0.1797,      0.1445,     -0.2754,     -0.0967,     -0.3945,      0.0815,      0.1484,     -0.1865,     -0.0898],
        [     0.0000,      0.2119,      0.4902,      0.3281,      0.7188,      0.0698,     -0.1670,      0.0245,     -0.1011,      0.3320,      0.1396,     -0.5430,     -0.2178,      0.3359,      0.3652],
        [     0.0000,     -0.3281,     -0.1582,     -0.1484,      0.3340,      0.4316,      0.7344,      0.1670,      0.1992,      0.3926,      0.3574,     -0.3340,      0.3633,      0.1143,      0.0381],
        [    -0.0000,     -0.5703,      0.1455,     -0.2070,      0.0364,      0.2578,      0.4082,      0.1768,      0.1650,      0.3711,      0.1416,      0.0033,      0.4102,      0.4824,      0.7305],
        [    -0.0000,     -0.2178,      0.0021,      0.2139,      0.3730,     -0.2480,      0.1387,     -0.0039,     -0.1387,     -0.4395,      0.3535,     -0.0898,      0.1523,     -0.0962,      0.0525],
        [    -0.0000,      0.4062,     -0.2393,     -0.1099,      0.0253,      0.0991,      0.5547,      0.1543,      0.0006,      0.3828,      0.4668,      0.6836,      0.4648,      0.2061,      0.4102],
        [    -0.0000,      0.0674,      0.0742,     -0.5938,      0.5078,     -0.3086,     -0.3008,     -0.3184,     -0.4004,      0.1133,      0.0361,     -0.4961,      0.2812,      0.1689,      0.1768],
        [    -0.0000,     -0.1670,     -0.1143,     -0.3594,      0.0874,      0.3574,      0.4258,     -0.2031,     -0.1895,      0.0084,     -0.0391,     -0.1631,      0.2148,     -0.0854,      0.0100],
        [    -0.0000,     -0.0542,      0.2285,      0.0874,      0.4180,     -0.0077,     -0.0383,      0.0952,     -0.2969,     -0.0291,      0.1011,     -0.1299,      0.2637,     -0.1201,     -0.0017]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5688],
        [0.3110],
        [0.2587],
        [0.1813],
        [0.1618],
        [0.1424],
        [0.1174],
        [0.1036],
        [0.0988],
        [0.0871],
        [0.0881],
        [0.0766],
        [0.0697],
        [0.0699]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3672, 0.6328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3223, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.2988, 0.2578, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1504, 0.2275, 0.3457, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1992, 0.1660, 0.2041, 0.1982, 0.0903, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.2393, 0.1099, 0.1040, 0.1455, 0.1729, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.2363, 0.1025, 0.0894, 0.1367, 0.0933, 0.1387, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.1689, 0.1572, 0.0903, 0.0933, 0.1157, 0.0767, 0.0967, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1543, 0.0664, 0.0801, 0.0962, 0.1069, 0.1133, 0.0977, 0.0923, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0869, 0.0996, 0.1221, 0.0520, 0.1064, 0.0703, 0.0737, 0.1226, 0.0718, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.1099, 0.0737, 0.0557, 0.0806, 0.0598, 0.0574, 0.0903, 0.0664, 0.1084, 0.1357, 0.0835, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.1133, 0.0923, 0.0425, 0.0986, 0.0728, 0.0510, 0.0781, 0.0923, 0.0574, 0.0498, 0.1191, 0.0649, 0.0000, 0.0000],
        [0.0654, 0.1074, 0.0669, 0.0364, 0.0586, 0.0889, 0.0586, 0.0884, 0.0728, 0.0879, 0.0498, 0.0942, 0.0562, 0.0688, 0.0000],
        [0.0659, 0.0850, 0.0820, 0.0488, 0.0693, 0.0596, 0.0393, 0.0708, 0.0825, 0.0820, 0.0544, 0.0649, 0.0674, 0.0728, 0.0552]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.5430,     -0.1562,     -0.0192,      0.6758,      0.6211,      0.0261,     -0.0825,      0.3926,      0.1934,      0.3262,      0.0825,      0.2461,      0.4043,      0.3633],
        [    -0.0000,     -0.0315,      0.0447,      0.2559,     -0.1069,      0.3555,      0.2715,      0.4980,      0.4961,      0.1934,      0.1582,      0.3203,      0.2715,      0.4629,      0.4355],
        [    -0.0000,      0.3496,      0.2012,      0.0967,      0.5312,      0.4316,      0.2852,      0.4062,      0.7227,      0.2812,     -0.0474,      0.5000,     -0.3281,      0.4336,      0.5703],
        [    -0.0000,     -0.0903,      0.3262,      0.7461,     -0.3789,     -0.2012,     -0.3438,     -0.4023,     -0.4004,     -0.5625,     -0.1187,     -0.4160,      0.1738,     -0.2051,     -0.0593],
        [     0.0000,      0.3418,      0.1631,      0.3652,      0.3398,     -0.4512,      0.0330,      0.1348,     -0.1055,     -0.0796,     -0.1001,      0.0258,     -0.4316,      0.2793,      0.3340],
        [    -0.0000,      0.8242,      0.0464,     -0.0118,      0.3242,      0.4980,      0.1631,     -0.0078,      0.0483,      0.2656,      0.1826,     -0.1045,     -0.0574,      0.2500,      0.3613],
        [     0.0000,      0.7383,     -0.0952,     -0.2334,      0.1895,     -0.1924,      0.2051,     -0.2266,     -0.3496,      0.1982,      0.0198,      0.1797,     -0.3496,      0.3555,      0.0503],
        [     0.0000,      0.3867,      0.3184,     -0.2373,     -0.2051,      0.0127,     -0.4023,     -0.1689,     -0.2773,      0.0471,     -0.2949,      0.2285,     -0.3359,     -0.3965,     -0.0031],
        [     0.0000,      0.5117,     -0.3320,     -0.1426,      0.0391,      0.1494,      0.2041,      0.0542,      0.0012,      0.0947,      0.2383,      0.1582,     -0.2090,      0.1128,      0.1230],
        [     0.0000,     -0.0135,      0.1245,      0.3281,     -0.5234,      0.1895,     -0.2256,     -0.1768,      0.3320,     -0.2051,      0.1914,      0.1040,     -0.2559,      0.0381,     -0.1465],
        [     0.0000,      0.3359,     -0.0654,     -0.3438,      0.0294,     -0.2715,     -0.3145,      0.1406,     -0.1670,      0.3242,      0.5508,      0.0630,      0.0723,      0.3398,      0.1514],
        [     0.0000,      0.5156,      0.3125,     -0.4629,      0.3809,      0.0767,     -0.2793,      0.1436,      0.3145,     -0.1631,     -0.3047,      0.5703,     -0.0400,      0.4414,      0.7617],
        [     0.0000,      0.4922,      0.0171,     -0.5859,     -0.1133,      0.3047,     -0.1133,      0.2988,      0.1016,      0.2969,     -0.2754,      0.3633,     -0.1572,      0.0505,     -0.0130],
        [     0.0000,      0.2520,      0.2158,     -0.3027,      0.0530,     -0.1040,     -0.5195,      0.0674,      0.2227,      0.2188,     -0.1904,     -0.0197,      0.0236,      0.1011,     -0.1777]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4653],
        [0.3320],
        [0.2498],
        [0.1972],
        [0.1650],
        [0.1324],
        [0.1200],
        [0.1110],
        [0.0991],
        [0.0891],
        [0.0805],
        [0.0790],
        [0.0712],
        [0.0650]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.3105, 0.3652, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.2100, 0.3242, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.1943, 0.1641, 0.2441, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.0859, 0.2041, 0.1367, 0.1611, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.1309, 0.1592, 0.1011, 0.1387, 0.1562, 0.1748, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1123, 0.1436, 0.1216, 0.0898, 0.1367, 0.1348, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0752, 0.1357, 0.1055, 0.1230, 0.1025, 0.1367, 0.0801, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1167, 0.0791, 0.0688, 0.0718, 0.1050, 0.1118, 0.0845, 0.1309, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0684, 0.1021, 0.0635, 0.1001, 0.1094, 0.1128, 0.0825, 0.0986, 0.0742, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0703, 0.1001, 0.0708, 0.0625, 0.0820, 0.0981, 0.0693, 0.0913, 0.1113, 0.0952, 0.0596, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0554, 0.0752, 0.0371, 0.1079, 0.0747, 0.0962, 0.0674, 0.0928, 0.0762, 0.0918, 0.1064, 0.0581, 0.0000, 0.0000],
        [0.0540, 0.0698, 0.0615, 0.0500, 0.0505, 0.0542, 0.0728, 0.0610, 0.0869, 0.1152, 0.1079, 0.0635, 0.0903, 0.0630, 0.0000],
        [0.0527, 0.0645, 0.0630, 0.0427, 0.0645, 0.0544, 0.0864, 0.0576, 0.0801, 0.0801, 0.0549, 0.0723, 0.0747, 0.0630, 0.0898]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000],
        [     0.0000,      0.0938,      0.2275,     -0.0183,     -0.2793,      0.0564,      0.1484,     -0.2539,      0.0203,     -0.6484,     -0.5234,     -0.4941,     -0.2734,      0.1196,     -0.2178],
        [    -0.0000,     -0.0454,      0.1172,      0.0479,     -0.0684,      0.3203,      0.1157,      0.2295,     -0.0698,     -0.1240,      0.0297,     -0.3828,     -0.0107,      0.0737,     -0.3125],
        [     0.0000,     -0.2021,      0.2334,     -0.2168,     -0.1533,     -0.2988,      0.3652,     -0.2002,     -0.2988,      0.2041,      0.1436,      0.2852,     -0.1514,     -0.0845,     -0.1729],
        [     0.0000,     -0.1973,     -0.3672,      0.0305,     -0.3965,     -0.3457,     -0.2383,     -0.1748,      0.0889,      0.1807,      0.1147,     -0.2695,      0.3711,      0.0610,     -0.1572],
        [    -0.0000,     -0.6719,      0.1973,     -0.2070,     -0.0393,      0.3770,     -0.1523,     -0.2422,      0.1133,     -0.1729,      0.1592,     -0.5117,     -0.2119,      0.1934,      0.1416],
        [    -0.0000,     -0.0713,      0.1260,     -0.3262,     -0.0074,      0.1079,      0.2188,     -0.2852,      0.1001,     -0.1118,     -0.1543,     -0.0154,     -0.0713,      0.3086,      0.1133],
        [    -0.0000,     -0.1465,      0.0947,     -0.0688,     -0.3691,      0.0518,      0.0376,     -0.0015,     -0.0072,      0.0300,     -0.0537,      0.0603,     -0.0493,      0.0952,     -0.2500],
        [    -0.0000,     -0.4160,      0.1787,     -0.0752,      0.0801,     -0.1021,      0.1855,     -0.3496,      0.1079,      0.4512,      0.7422,      0.1855,      0.2393,     -0.4766,      0.4824],
        [    -0.0000,      0.2070,     -0.1865,     -0.3242,     -0.2793,      0.0986,      0.1631,     -0.1206,      0.3164,      0.3633,      0.0664,     -0.1943,      0.1060,      0.2051,      0.0432],
        [    -0.0000,     -0.3457,      0.0579,     -0.4199,      0.0376,      0.1289,      0.1582,     -0.1553,      0.0228,     -0.2617,     -0.0400,      0.1621,     -0.2559,     -0.2734,      0.1250],
        [     0.0000,     -0.2422,      0.1094,     -0.2354,     -0.3633,     -0.0918,      0.0889,     -0.2578,      0.0167,      0.2148,      0.0613,     -0.4102,     -0.0718,      0.3281,      0.0815],
        [    -0.0000,     -0.1079,      0.1953,     -0.5039,      0.5586,      0.1895,      0.4414,      0.0859,      0.4102,      0.2100,      0.3984,      0.5469,     -0.0588,      0.4102,      0.7148],
        [    -0.0000,      0.2598,      0.1299,     -0.0767,     -0.0649,      0.0022,      0.2949,      0.1206,      0.4766,      0.7578,      0.6914,      0.1592,      0.5117,      0.1553,      0.5820],
        [    -0.0000,      0.2012,      0.1787,     -0.2109,      0.1992,      0.0352,      0.4961,      0.0894,      0.4199,      0.4160,      0.0425,      0.3184,      0.3477,      0.1758,      0.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5044],
        [0.3128],
        [0.2532],
        [0.2060],
        [0.1768],
        [0.1306],
        [0.1224],
        [0.1102],
        [0.0975],
        [0.0918],
        [0.0852],
        [0.0731],
        [0.0684],
        [0.0616]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.3984, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.2832, 0.2051, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.2109, 0.1885, 0.1299, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2236, 0.1650, 0.1582, 0.1562, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1230, 0.1123, 0.1963, 0.1104, 0.1348, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1875, 0.1118, 0.1484, 0.1025, 0.1147, 0.1177, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.1201, 0.0776, 0.1562, 0.0957, 0.0830, 0.0908, 0.1260, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0859, 0.0693, 0.1797, 0.0635, 0.0869, 0.1143, 0.0859, 0.1206, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.0762, 0.0591, 0.0708, 0.0796, 0.1025, 0.0825, 0.1348, 0.0947, 0.1064, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0742, 0.0889, 0.0898, 0.0781, 0.0405, 0.0669, 0.0786, 0.1016, 0.1436, 0.0737, 0.0977, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0933, 0.0623, 0.0894, 0.0688, 0.0635, 0.0674, 0.0752, 0.1099, 0.0776, 0.0659, 0.0767, 0.0776, 0.0000, 0.0000],
        [0.0684, 0.0771, 0.0447, 0.0864, 0.0520, 0.0537, 0.0581, 0.0898, 0.0830, 0.0757, 0.0845, 0.0747, 0.0664, 0.0859, 0.0000],
        [0.0664, 0.0732, 0.0605, 0.0747, 0.0596, 0.0493, 0.0654, 0.0547, 0.0574, 0.0854, 0.0564, 0.0679, 0.0520, 0.0835, 0.0933]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,     -0.9727,     -0.8711,     -0.0398,      0.4336,      0.3262,     -0.0889,      0.0520,      0.1885,      0.2852,      0.0771,      0.3516,      0.1240,      0.2070,     -0.1514],
        [    -0.0000,      0.1396,     -0.3086,     -0.4570,     -0.0294,      0.2383,     -0.1826,     -0.0386,      0.1934,     -0.6406,     -0.1357,      0.0684,     -0.3242,      0.2275,      0.3418],
        [    -0.0000,      0.2812,     -0.0413,      0.3340,      0.0023,     -0.4863,     -0.1494,     -0.4980,      0.1592,     -0.4844,     -0.1777,     -0.6328,     -0.2754,     -0.1738,     -0.2354],
        [    -0.0000,     -0.1504,     -0.2598,     -0.6328,     -0.0850,      0.0972,     -0.4473,      0.1079,     -0.4453,      0.1182,      0.1167,      0.0038,     -0.1338,      0.0194,     -0.2461],
        [     0.0000,      0.0796,     -0.2285,     -0.2656,     -0.2773,     -0.8398,     -0.7695,     -0.6523,     -0.3164,      0.0593,     -0.0147,     -0.2715,     -0.1807,      0.0522,     -0.4316],
        [     0.0000,     -0.0461,     -0.1396,      0.4219,     -0.1562,      0.0457,      0.4082,     -0.0036,      0.2832,      0.3164,      0.6992,     -0.1650,      0.0181,      0.1572,      0.1216],
        [     0.0000,      0.3203,     -0.1963,      0.0898,     -0.2812,     -0.1680,     -0.1445,     -0.5078,     -0.2461,     -0.1396,     -0.0508,      0.1069,     -0.2012,     -0.0289,     -0.0334],
        [     0.0000,      0.1113,     -0.3281,      0.3750,     -0.1162,     -0.2578,     -0.1680,      0.1592,      0.2852,      0.6328,      0.3164,      0.4062,      0.4922,      0.4395,      0.1621],
        [     0.0000,     -0.0991,     -0.3105,      0.6406,     -0.3984,     -0.0869,      0.1855,     -0.0962,      0.2393,      0.0447,     -0.2676,     -0.0596,      0.1875,      0.5586,      0.4180],
        [     0.0000,     -0.3164,     -0.5664,     -0.3867,     -0.2734,     -0.0197,     -0.2354,      0.2559,     -0.0991,      0.0194,     -0.1611,      0.2559,     -0.0299,      0.2324,      0.1318],
        [     0.0000,      0.1094,      0.2891,      0.2988,      0.1582,     -0.4961,      0.0088,      0.1689,      0.4258,      0.7656,      0.1060,      0.3828,      0.1143,      0.4688,      0.2480],
        [     0.0000,      0.2402,     -0.1631,      0.2002,     -0.0649,     -0.1465,     -0.0815,      0.0240,      0.4023,      0.0559,     -0.1060,      0.0420,      0.0566,      0.5508,      0.1982],
        [     0.0000,      0.1172,     -0.4258,      0.2334,     -0.2754,     -0.2441,     -0.1650,      0.2734,      0.1934,      0.0991,      0.2129,      0.0854,     -0.0332,      0.2285,      0.2139],
        [     0.0000,      0.0957,     -0.0933,      0.1177,     -0.1099,     -0.2949,     -0.0149,     -0.1934,     -0.1455,      0.2539,     -0.1621,      0.0229,     -0.2432,      0.2314,      0.3398]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5094],
        [0.3416],
        [0.2552],
        [0.1909],
        [0.1784],
        [0.1308],
        [0.1215],
        [0.1054],
        [0.0943],
        [0.0882],
        [0.0791],
        [0.0750],
        [0.0683],
        [0.0593]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4160, 0.5820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.4160, 0.2891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.2852, 0.3047, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.2256, 0.2334, 0.2285, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1924, 0.2188, 0.1162, 0.1768, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.1021, 0.1484, 0.1289, 0.1621, 0.1758, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.0742, 0.1299, 0.1484, 0.1021, 0.1143, 0.1738, 0.1216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1167, 0.0947, 0.0981, 0.0986, 0.1465, 0.0708, 0.1089, 0.1211, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0869, 0.1377, 0.0635, 0.0811, 0.0767, 0.0869, 0.1221, 0.1289, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.1143, 0.0708, 0.0713, 0.0894, 0.0918, 0.0598, 0.1118, 0.1118, 0.0977, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0596, 0.0464, 0.0928, 0.0564, 0.0703, 0.0806, 0.1089, 0.0564, 0.1138, 0.0986, 0.0981, 0.1182, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0564, 0.1270, 0.0884, 0.0811, 0.0771, 0.0737, 0.0654, 0.0684, 0.0776, 0.0664, 0.0957, 0.0508, 0.0000, 0.0000],
        [0.0752, 0.0417, 0.0508, 0.0603, 0.0869, 0.0476, 0.0608, 0.0747, 0.0894, 0.0757, 0.0835, 0.1191, 0.0554, 0.0786, 0.0000],
        [0.0674, 0.0598, 0.0488, 0.0869, 0.0767, 0.0486, 0.0703, 0.0664, 0.0693, 0.0786, 0.0679, 0.0786, 0.0554, 0.0493, 0.0757]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.3359,      0.3027,     -0.1235,      0.3359,      0.4336,     -0.2676,     -0.2559,      0.0884,     -0.1162,     -0.1025,     -0.2695,      0.3242,      0.1650,      0.1924],
        [     0.0000,      0.3418,     -0.0189,      0.0957,     -0.3320,     -0.0613,     -0.0962,     -0.2178,     -0.2002,     -0.0659,     -0.2354,     -0.1465,     -0.2158,     -0.4844,     -0.3066],
        [     0.0000,      0.1826,      0.2520,     -0.3125,      0.2695,     -0.2314,     -0.2930,     -0.1650,     -0.0396,      0.0540,     -0.0986,     -0.1133,      0.0090,      0.0193,      0.0104],
        [    -0.0000,      0.1484,      0.1855,      0.1650,     -0.4941,     -0.6094,      0.0938,      0.1216,     -0.2158,     -0.0459,      0.4648,     -0.2217,     -0.2305,     -0.2109,      0.0420],
        [     0.0000,      0.1455,      0.2734,     -0.3594,      0.0613,     -0.2432,      0.4688,     -0.0962,      0.2256,      0.0933,      0.3164,      0.0574,     -0.0074,      0.3477,      0.4941],
        [     0.0000,      0.0240,      0.3984,      0.2539,      0.4844,      0.5625,      0.6055,     -0.1011,      0.1050,      0.1504,     -0.2656,     -0.2812,      0.2168,      0.4531,      0.2969],
        [     0.0000,     -0.5977,     -0.0417,      0.0923,     -0.2832,     -0.1680,      0.2520,     -0.1089,      0.0342,      0.1514,      0.1396,     -0.0796,     -0.1484,      0.0605,     -0.3047],
        [     0.0000,     -0.2061,     -0.1689,     -0.1641,      0.2314,     -0.4941,     -0.0688,      0.0403,      0.2109,      0.2910,      0.1592,      0.0608,     -0.1816,      0.0488,      0.3086],
        [     0.0000,     -0.0593,      0.4043,     -0.3691,     -0.1289,     -0.1807,     -0.0549,      0.2832,      0.3359,      0.3008,      0.0003,      0.4609,     -0.1738,      0.0488,      0.1895],
        [     0.0000,      0.2676,     -0.2080,     -0.2070,      0.0243,      0.0515,     -0.3809,      0.2451,      0.2471,      0.1108,      0.0688,      0.2617,     -0.2354,      0.2949,      0.3379],
        [     0.0000,     -0.2480,      0.4473,     -0.0522,      0.1689,      0.3008,      0.6016,     -0.0549,      0.6484,      0.5078,      0.4980,      0.6836,     -0.3281,      0.2539,      0.2637],
        [     0.0000,     -0.2393,      0.5742,      0.2070,      0.1245,      0.0757,      0.0309,     -0.0884,     -0.0479,      0.0781,     -0.0752,      0.2871,     -0.3457,     -0.2285,      0.0625],
        [     0.0000,     -0.5898,     -0.3887,     -0.2197,      0.1484,     -0.4551,     -0.2119,     -0.0037,      0.1729,      0.0109,      0.1035,      0.4629,     -0.3047,      0.0444,      0.3535],
        [     0.0000,     -0.1216,     -0.3223,      0.2520,      0.1250,     -0.3281,      0.0388,     -0.0195,      0.0288,      0.1543,      0.0074,      0.1484,     -0.1963,     -0.3145,      0.1143]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4803],
        [0.3204],
        [0.2380],
        [0.1998],
        [0.1560],
        [0.1368],
        [0.1168],
        [0.1086],
        [0.0954],
        [0.0821],
        [0.0789],
        [0.0754],
        [0.0711],
        [0.0659]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.2539, 0.3926, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2598, 0.3711, 0.1533, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.2324, 0.2168, 0.2773, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.1836, 0.2090, 0.1455, 0.1367, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1357, 0.1621, 0.1973, 0.1250, 0.1299, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1768, 0.1562, 0.1113, 0.1270, 0.0967, 0.0854, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.1377, 0.1357, 0.1187, 0.1128, 0.0869, 0.1318, 0.1006, 0.0588, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1187, 0.1177, 0.1040, 0.1094, 0.1045, 0.1152, 0.0835, 0.0557, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0898, 0.1104, 0.1045, 0.0569, 0.0908, 0.1230, 0.1099, 0.0654, 0.0884, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.0713, 0.0684, 0.0830, 0.1089, 0.1230, 0.0942, 0.0559, 0.0640, 0.1064, 0.0596, 0.0933, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0542, 0.0679, 0.0928, 0.1216, 0.0947, 0.0850, 0.0684, 0.0593, 0.0654, 0.0659, 0.0718, 0.0835, 0.0000, 0.0000],
        [0.0767, 0.0579, 0.0708, 0.0786, 0.0898, 0.0825, 0.0923, 0.0635, 0.0554, 0.0684, 0.0845, 0.0703, 0.0583, 0.0508, 0.0000],
        [0.0713, 0.0654, 0.0762, 0.0869, 0.0732, 0.0786, 0.0796, 0.0659, 0.0488, 0.0586, 0.0544, 0.0684, 0.0571, 0.0405, 0.0747]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,     -0.0022,      0.2617,     -0.2432,     -0.0762,     -0.0050,      0.2500,      0.2969,      0.0369,      0.4902,      0.3848,      0.2002,      0.2949,      0.7344,      0.6211],
        [     0.0000,     -0.3340,      0.1074,     -0.0101,     -0.0530,      0.0302,     -0.1934,     -0.4980,     -0.2383,     -0.2080,      0.0034,     -0.3945,      0.1040,      0.0415,     -0.2910],
        [     0.0000,      0.3594,     -0.5234,     -0.1826,     -0.3984,      0.1069,      0.3242,      0.0126,      0.0498,      0.4688,      0.2363,      0.0737,     -0.1377,      0.1030,      0.4863],
        [     0.0000,      0.2930,      0.2236,      0.4668,     -0.5430,      0.3809,     -0.0481,     -0.1123,     -0.1226,      0.1348,     -0.0215,     -0.6133,     -0.3457,      0.2139,      0.1025],
        [     0.0000,      0.0030,      0.1318,     -0.2285,     -0.2891,     -0.2432,      0.1084,      0.0231,     -0.0845,     -0.1025,     -0.1094,     -0.0603,     -0.2949,      0.2236,     -0.1641],
        [    -0.0000,      0.1621,      0.3418,      0.5391,      0.0850,      0.1172,      0.1650,      0.0908,     -0.2734,     -0.0806,     -0.0374,      0.0344,     -0.0408,      0.0378,      0.4199],
        [    -0.0000,      0.1953,      0.0718,     -0.2695,     -0.1348,     -0.4102,     -0.5312,     -0.3711,     -0.3320,     -0.2715,     -0.3613,     -0.3359,     -0.3574,     -0.3047,     -0.4531],
        [    -0.0000,      0.1572,      0.1426,      0.0129,     -0.0376,     -0.3008,      0.1143,     -0.1523,     -0.6875,     -0.3652,     -0.0752,     -0.3438,     -0.6367,     -0.7617,     -0.2129],
        [    -0.0000,      0.1914,      0.1836,      0.0615,      0.1104,      0.0645,      0.1621,     -0.1572,     -0.5625,     -0.0447,      0.2217,     -0.0938,     -0.1514,     -0.4883,      0.1758],
        [    -0.0000,      0.0190,      0.2246,      0.1699,     -0.4375,      0.0337,      0.3359,      0.2207,     -0.2988,      0.0063,     -0.1826,      0.0583,      0.4062,      0.2676,      0.2158],
        [    -0.0000,     -0.0001,     -0.0410,      0.1514,      0.4199,      0.5430,      0.2793,     -0.2461,     -0.1064,      0.4004,     -0.1807,      0.2656,     -0.0204,      0.0669,      0.2598],
        [    -0.0000,     -0.2637,     -0.0403,      0.2734,      0.5430,      0.2930,      0.1846,     -0.0334,     -0.1738,     -0.0737,     -0.0698,      0.0147,      0.1680,     -0.1387,     -0.1455],
        [    -0.0000,     -0.2793,     -0.0757,      0.0253,      0.1602,      0.0757,      0.1875,     -0.1836,     -0.3223,     -0.1133,      0.1006,     -0.0869,     -0.2734,     -0.4082,     -0.1543],
        [    -0.0000,     -0.0894,      0.0645,      0.1973,      0.0221,      0.0977,      0.1064,     -0.0845,     -0.3789,     -0.1973,     -0.2715,     -0.0481,     -0.2227,     -0.5703,      0.0444]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4961],
        [0.3547],
        [0.2365],
        [0.1996],
        [0.1662],
        [0.1344],
        [0.1199],
        [0.1050],
        [0.0976],
        [0.0874],
        [0.0796],
        [0.0734],
        [0.0720],
        [0.0666]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2949, 0.2832, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2441, 0.2354, 0.2637, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.2852, 0.1680, 0.1738, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.2578, 0.1982, 0.0874, 0.1709, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.2344, 0.1816, 0.0815, 0.1543, 0.1250, 0.1187, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.2021, 0.1924, 0.0859, 0.1455, 0.0693, 0.1074, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.2090, 0.1523, 0.0776, 0.0918, 0.0688, 0.0679, 0.0796, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1123, 0.1099, 0.0796, 0.1143, 0.0427, 0.0776, 0.0864, 0.1250, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.1006, 0.1553, 0.0527, 0.0762, 0.0615, 0.0908, 0.0864, 0.0684, 0.1035, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.1582, 0.1240, 0.0708, 0.0728, 0.0535, 0.0874, 0.0742, 0.0635, 0.0732, 0.0806, 0.0688, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1069, 0.1040, 0.0669, 0.0747, 0.0427, 0.0645, 0.0806, 0.0688, 0.0684, 0.1021, 0.0845, 0.0601, 0.0000, 0.0000],
        [0.0933, 0.1689, 0.0869, 0.0483, 0.0693, 0.0503, 0.0535, 0.0559, 0.0566, 0.0530, 0.0986, 0.0747, 0.0571, 0.0342, 0.0000],
        [0.0679, 0.0669, 0.1060, 0.0544, 0.0718, 0.0264, 0.0518, 0.0767, 0.0540, 0.0593, 0.0972, 0.0762, 0.0684, 0.0547, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.0508,     -0.2227,      0.4453,      0.1030,      0.2461,      0.3965,     -0.0036,     -0.0938,     -0.1934,     -0.0496,      0.1289,      0.2949,     -0.1943,     -0.3887],
        [     0.0000,     -0.0393,      0.3633,     -0.3809,     -0.0708,     -0.5117,     -0.4121,     -0.6055,     -0.1465,     -0.3145,     -0.3242,     -0.1484,     -0.2695,     -0.4531,     -0.0820],
        [     0.0000,     -0.0337,      0.0820,      0.0479,     -0.0471,      0.4570,      0.4902,      0.2402,      0.0266,      0.2520,      0.2051,      0.5195,      0.1270,     -0.1465,      0.4316],
        [    -0.0000,      0.5508,      0.0168,      0.0522,      0.2305,      0.2061,      0.0391,      0.1855,      0.3262,     -0.0481,      0.0278,      0.1299,      0.0222,      0.0564,     -0.1533],
        [    -0.0000,      0.6641,      0.4004,     -0.4180,      0.2500,      0.1377,      0.1162,      0.0481,     -0.0679,      0.1069,      0.1641,      0.4102,      0.1523,     -0.4062,      0.1719],
        [    -0.0000,      0.8047,      0.5508,     -0.2520,      0.3848,      0.1758,      0.1260,     -0.0280,     -0.0923,      0.1025,      0.4199,      0.3320,      0.1001,     -0.3359,      0.1533],
        [    -0.0000,      0.4355,      0.3867,     -0.4238,      0.1025,     -0.6367,     -0.1963,     -0.6875,     -0.6250,      0.1162,      0.1147,     -0.1631,     -0.3301,     -0.8438,     -0.2832],
        [     0.0000,      0.3145,     -0.0038,     -0.6719,     -0.5078,     -0.7930,     -0.8086,     -0.6484,     -0.4160,     -0.2852,     -0.3262,     -0.5625,     -0.6406,     -0.8945,     -0.3945],
        [    -0.0000,     -0.0282,     -0.0510,     -0.3750,     -0.0107,     -0.9961,     -0.3965,     -0.2930,      0.0762,      0.1621,      0.3379,     -0.1357,     -0.4785,     -0.5664,      0.1055],
        [    -0.0000,     -0.0942,      0.3398,     -0.7422,     -0.3730,     -0.5859,     -0.1973,     -0.2480,     -0.4844,     -0.0654,     -0.1670,     -0.2334,     -0.3770,     -0.5078,     -0.2285],
        [    -0.0000,      0.7656,      0.5234,     -0.0400,     -0.0142,     -0.3203,      0.1729,      0.0112,     -0.1514,     -0.0048,      0.0903,     -0.0664,      0.1348,     -0.3027,     -0.0305],
        [    -0.0000,      0.3535,      0.3242,     -0.1143,     -0.0038,     -0.5664,     -0.1504,      0.0708,     -0.0840,     -0.0942,      0.3047,      0.1187,     -0.2236,     -0.5234,     -0.1455],
        [    -0.0000,      0.5938,     -0.0713,     -0.6562,     -0.2949,     -0.6172,     -0.5547,     -0.5078,     -0.4961,     -0.5625,      0.0571,     -0.2178,     -0.4883,     -1.0078,     -0.6797],
        [    -0.0000,     -0.0147,      0.4492,     -0.2197,      0.0586,     -0.9414,     -0.2676,      0.1206,     -0.2285,     -0.1328,      0.3613,      0.1152,      0.0084,     -0.2139,      0.0184]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4945],
        [0.3301],
        [0.2438],
        [0.1855],
        [0.1558],
        [0.1425],
        [0.1280],
        [0.1145],
        [0.1004],
        [0.0880],
        [0.0876],
        [0.0821],
        [0.0738],
        [0.0669]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3867, 0.3496, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.4082, 0.1914, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.1650, 0.2295, 0.2119, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.1465, 0.1582, 0.1572, 0.1533, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1689, 0.1123, 0.0957, 0.1377, 0.1367, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1680, 0.1216, 0.0757, 0.1436, 0.1328, 0.1113, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.0962, 0.1162, 0.0864, 0.0928, 0.1084, 0.1455, 0.1035, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.0850, 0.0991, 0.0596, 0.1035, 0.1157, 0.1367, 0.0928, 0.1079, 0.0874, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0815, 0.0806, 0.0610, 0.1001, 0.0977, 0.1167, 0.0757, 0.0977, 0.0820, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0903, 0.0747, 0.0583, 0.1030, 0.0723, 0.0967, 0.0811, 0.1074, 0.0767, 0.0981, 0.0645, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0542, 0.0840, 0.0598, 0.0703, 0.0703, 0.1235, 0.0566, 0.0991, 0.0732, 0.0830, 0.0840, 0.0728, 0.0000, 0.0000],
        [0.0684, 0.0425, 0.0854, 0.0610, 0.0596, 0.0576, 0.0796, 0.0771, 0.0933, 0.0757, 0.0918, 0.0806, 0.0620, 0.0649, 0.0000],
        [0.0688, 0.0688, 0.0732, 0.0520, 0.0674, 0.0684, 0.0781, 0.0659, 0.0786, 0.0540, 0.0659, 0.0776, 0.0645, 0.0586, 0.0588]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.4023,      0.0400,      0.5781,     -0.1318,      0.2432,      0.0237,      0.2012,      0.4434,      0.0211,     -0.1084,      0.3984,      0.1953,      0.4141,      0.3516],
        [     0.0000,     -0.1011,     -0.3906,     -0.4082,     -0.0277,     -0.0119,      0.1875,      0.0026,     -0.2734,     -0.4160,     -0.0327,     -0.5664,     -0.0149,     -0.2451,     -0.2578],
        [     0.0000,      0.5664,     -0.1914,     -0.3145,     -0.1641,     -0.0157,     -0.0413,      0.1494,      0.3184,     -0.4707,      0.1904,     -0.4531,     -0.2500,      0.0469,     -0.2539],
        [    -0.0000,     -0.3477,     -0.0205,     -0.0981,     -0.3867,     -0.1523,      0.2236,     -0.1953,     -0.2812,     -0.0806,      0.1484,     -0.3242,     -0.0688,     -0.4238,     -0.4297],
        [    -0.0000,     -0.3359,     -0.2598,     -0.2676,     -0.2891,     -0.1348,      0.3223,     -0.2236,      0.1240,      0.1973,     -0.1118,     -0.0023,     -0.2217,     -0.2305,     -0.0469],
        [     0.0000,     -0.0874,     -0.4941,     -0.6523,     -0.2871,     -0.2949,     -0.1128,     -0.3750,     -0.4395,      0.2178,      0.0439,     -0.0030,      0.1426,     -0.1914,      0.2207],
        [     0.0000,      0.1895,     -0.1318,     -0.6055,      0.0298,     -0.0420,     -0.2207,     -0.2500,      0.0469,      0.0073,     -0.1104,     -0.5273,      0.1797,      0.0957,     -0.3848],
        [     0.0000,     -0.2334,     -0.0430,     -0.3379,     -0.2676,     -0.1113,      0.1816,     -0.1592,      0.0688,     -0.0654,      0.2051,     -0.1631,     -0.0923,     -0.1104,     -0.2988],
        [     0.0000,     -0.2793,     -0.1260,     -0.6367,     -0.0845,      0.0298,      0.1973,     -0.1934,     -0.0405,     -0.2539,      0.0757,     -0.0913,     -0.1230,     -0.1982,     -0.1934],
        [     0.0000,     -0.0894,     -0.1045,     -0.3789,      0.1133,      0.0894,      0.2676,     -0.1660,      0.0908,     -0.0864,      0.2734,     -0.0309,      0.1309,     -0.0703,     -0.1992],
        [     0.0000,      0.1689,     -0.0211,     -0.2695,      0.3008,     -0.0542,      0.2373,      0.0601,      0.3379,      0.0024,      0.2520,     -0.1738,      0.0796,      0.0103,     -0.1162],
        [    -0.0000,     -0.2354,      0.2041,     -0.1377,      0.0259,      0.0239,      0.5859,     -0.1895,      0.3672,      0.0679,      0.1934,      0.2061,      0.0610,     -0.0593,      0.0991],
        [    -0.0000,     -0.4785,      0.2197,     -0.1152,     -0.1406,     -0.1719,      0.1504,      0.1206,      0.3105,      0.0991,      0.2930,      0.1621,     -0.0981,     -0.0513,      0.0791],
        [    -0.0000,     -0.0003,      0.0613,     -0.2793,     -0.0199,     -0.0051,      0.1270,     -0.0437,      0.1338,     -0.2402,     -0.0454,      0.1221,     -0.0640,     -0.1592,     -0.1533]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4722],
        [0.3324],
        [0.2593],
        [0.2037],
        [0.1682],
        [0.1479],
        [0.1225],
        [0.1119],
        [0.1040],
        [0.0877],
        [0.0795],
        [0.0728],
        [0.0678],
        [0.0643]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( evil:0.0002 favorite:0.0002Prom:0.0001 tom:0.0002 transport:0.0002oon:0.0002aviour:0.0002 withdraw:0.0002)
 withdraw
------
		( favorite:0.0002Prom:0.0001 tom:0.0002 transport:0.0002oon:0.0002aviour:0.0002 withdraw:0.0002 ISO:0.0002)
 ISO})………… Liam ID Carey Liam built onlook defunctHunter Liam defunct virginity virginity
@ 1 train 10.5947 , allloss: 10.5947, dt: 1397.79ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.0879, norm(x): 0.0899, norm(y): 0.9995, norm:14.6525, tok/sec: 93771.14, flops:82.13, batch-reuse:1
@ 2 train 10.2385 , allloss: 10.2385, dt: 665.13ms, fracRes: 0.0063, norm(attn): 0.0464, norm(output): 0.0933, norm(x): 0.0943, norm(y): 0.9996, norm:10.2814, tok/sec: 197062.12, flops:172.60, batch-reuse:1
@ 3 train 9.9833 , allloss: 9.9833, dt: 665.84ms, fracRes: 0.0063, norm(attn): 0.0483, norm(output): 0.0962, norm(x): 0.0991, norm(y): 0.9996, norm:6.4966, tok/sec: 196852.76, flops:172.41, batch-reuse:1
@ 4 train 9.8466 , allloss: 9.8466, dt: 668.91ms, fracRes: 0.0062, norm(attn): 0.0515, norm(output): 0.1035, norm(x): 0.1064, norm(y): 0.9997, norm:4.2330, tok/sec: 195949.60, flops:171.62, batch-reuse:1
@ 5 train 9.8048 , allloss: 9.8048, dt: 673.49ms, fracRes: 0.0062, norm(attn): 0.0549, norm(output): 0.1113, norm(x): 0.1149, norm(y): 0.9998, norm:2.9380, tok/sec: 194617.54, flops:170.46, batch-reuse:1
@ 6 train 9.6901 , allloss: 9.6901, dt: 680.35ms, fracRes: 0.0061, norm(attn): 0.0588, norm(output): 0.1235, norm(x): 0.1250, norm(y): 0.9998, norm:2.7531, tok/sec: 192653.90, flops:168.74, batch-reuse:1
@ 7 train 9.6635 , allloss: 9.6635, dt: 680.04ms, fracRes: 0.0059, norm(attn): 0.0623, norm(output): 0.1338, norm(x): 0.1370, norm(y): 0.9999, norm:2.4556, tok/sec: 192742.24, flops:168.81, batch-reuse:1
@ 8 train 9.6247 , allloss: 9.6247, dt: 683.11ms, fracRes: 0.0058, norm(attn): 0.0664, norm(output): 0.1484, norm(x): 0.1504, norm(y): 1.0000, norm:2.3341, tok/sec: 191874.19, flops:168.05, batch-reuse:1
@ 9 train 9.5415 , allloss: 9.5415, dt: 671.25ms, fracRes: 0.0056, norm(attn): 0.0708, norm(output): 0.1611, norm(x): 0.1638, norm(y): 1.0000, norm:2.2903, tok/sec: 195264.83, flops:171.02, batch-reuse:1
@ 10 train 9.4967 , allloss: 9.4967, dt: 676.61ms, fracRes: 0.0054, norm(attn): 0.0742, norm(output): 0.1729, norm(x): 0.1765, norm(y): 1.0000, norm:2.1758, tok/sec: 193719.78, flops:169.67, batch-reuse:1
@ 11 train 9.4807 , allloss: 9.4807, dt: 678.22ms, fracRes: 0.0052, norm(attn): 0.0771, norm(output): 0.1865, norm(x): 0.1877, norm(y): 1.0001, norm:2.1008, tok/sec: 193258.41, flops:169.27, batch-reuse:1
@ 12 train 9.3590 , allloss: 9.3590, dt: 678.20ms, fracRes: 0.0050, norm(attn): 0.0786, norm(output): 0.1934, norm(x): 0.1969, norm(y): 1.0001, norm:2.1921, tok/sec: 193265.47, flops:169.27, batch-reuse:1
@ 13 train 9.2878 , allloss: 9.2878, dt: 675.96ms, fracRes: 0.0048, norm(attn): 0.0791, norm(output): 0.2021, norm(x): 0.2039, norm(y): 1.0001, norm:2.1752, tok/sec: 193905.70, flops:169.83, batch-reuse:1
@ 14 train 9.1937 , allloss: 9.1937, dt: 678.47ms, fracRes: 0.0046, norm(attn): 0.0791, norm(output): 0.2041, norm(x): 0.2083, norm(y): 1.0001, norm:2.1286, tok/sec: 193187.37, flops:169.20, batch-reuse:1
@ 15 train 9.1138 , allloss: 9.1138, dt: 679.29ms, fracRes: 0.0045, norm(attn): 0.0781, norm(output): 0.2070, norm(x): 0.2099, norm(y): 1.0001, norm:1.9772, tok/sec: 192954.26, flops:169.00, batch-reuse:1
@ 16 train 9.0298 , allloss: 9.0298, dt: 669.66ms, fracRes: 0.0043, norm(attn): 0.0771, norm(output): 0.2070, norm(x): 0.2103, norm(y): 1.0001, norm:1.8577, tok/sec: 195730.26, flops:171.43, batch-reuse:1
@ 17 train 8.9697 , allloss: 8.9697, dt: 683.35ms, fracRes: 0.0042, norm(attn): 0.0776, norm(output): 0.2168, norm(x): 0.2153, norm(y): 1.0001, norm:2.1553, tok/sec: 191807.45, flops:168.00, batch-reuse:1
@ 18 train 8.8816 , allloss: 8.8816, dt: 688.85ms, fracRes: 0.0040, norm(attn): 0.0811, norm(output): 0.2314, norm(x): 0.2308, norm(y): 1.0001, norm:1.8178, tok/sec: 190275.84, flops:166.65, batch-reuse:1
@ 19 train 8.7408 , allloss: 8.7408, dt: 699.38ms, fracRes: 0.0039, norm(attn): 0.0830, norm(output): 0.2373, norm(x): 0.2412, norm(y): 1.0002, norm:1.9960, tok/sec: 187411.35, flops:164.15, batch-reuse:1
@ 20 train 8.6754 , allloss: 8.6754, dt: 706.54ms, fracRes: 0.0039, norm(attn): 0.0854, norm(output): 0.2500, norm(x): 0.2511, norm(y): 1.0002, norm:1.7862, tok/sec: 185511.41, flops:162.48, batch-reuse:1
@ 21 train 8.5682 , allloss: 8.5682, dt: 700.02ms, fracRes: 0.0039, norm(attn): 0.0859, norm(output): 0.2520, norm(x): 0.2567, norm(y): 1.0002, norm:1.6932, tok/sec: 187241.30, flops:164.00, batch-reuse:1
@ 22 train 8.4922 , allloss: 8.4922, dt: 704.11ms, fracRes: 0.0039, norm(attn): 0.0864, norm(output): 0.2637, norm(x): 0.2643, norm(y): 1.0002, norm:1.7737, tok/sec: 186153.83, flops:163.04, batch-reuse:1
@ 23 train 8.4942 , allloss: 8.4942, dt: 706.46ms, fracRes: 0.0039, norm(attn): 0.0898, norm(output): 0.2793, norm(x): 0.2796, norm(y): 1.0002, norm:1.5514, tok/sec: 185534.26, flops:162.50, batch-reuse:1
@ 24 train 8.4343 , allloss: 8.4343, dt: 680.06ms, fracRes: 0.0039, norm(attn): 0.0928, norm(output): 0.2852, norm(x): 0.2919, norm(y): 1.0002, norm:1.5729, tok/sec: 192736.84, flops:168.81, batch-reuse:1
@ 25 train 8.1786 , allloss: 8.1786, dt: 682.43ms, fracRes: 0.0039, norm(attn): 0.0938, norm(output): 0.3008, norm(x): 0.3000, norm(y): 1.0002, norm:1.4969, tok/sec: 192067.38, flops:168.22, batch-reuse:1
@ 26 train 8.1768 , allloss: 8.1768, dt: 696.39ms, fracRes: 0.0038, norm(attn): 0.0942, norm(output): 0.3027, norm(x): 0.3054, norm(y): 1.0002, norm:1.4621, tok/sec: 188216.53, flops:164.85, batch-reuse:1
@ 27 train 8.0739 , allloss: 8.0739, dt: 687.30ms, fracRes: 0.0037, norm(attn): 0.0938, norm(output): 0.3105, norm(x): 0.3110, norm(y): 1.0002, norm:1.3141, tok/sec: 190705.74, flops:167.03, batch-reuse:1
@ 28 train 8.0052 , allloss: 8.0052, dt: 689.97ms, fracRes: 0.0037, norm(attn): 0.0933, norm(output): 0.3105, norm(x): 0.3133, norm(y): 1.0002, norm:1.1872, tok/sec: 189968.27, flops:166.38, batch-reuse:1
@ 29 train 7.9852 , allloss: 7.9852, dt: 680.84ms, fracRes: 0.0035, norm(attn): 0.0923, norm(output): 0.3125, norm(x): 0.3133, norm(y): 1.0002, norm:1.1660, tok/sec: 192515.66, flops:168.62, batch-reuse:1
@ 30 train 7.8099 , allloss: 7.8099, dt: 702.66ms, fracRes: 0.0035, norm(attn): 0.0938, norm(output): 0.3145, norm(x): 0.3204, norm(y): 1.0002, norm:1.0637, tok/sec: 186536.35, flops:163.38, batch-reuse:1
@ 31 train 7.8060 , allloss: 7.8060, dt: 702.27ms, fracRes: 0.0034, norm(attn): 0.0938, norm(output): 0.3242, norm(x): 0.3248, norm(y): 1.0002, norm:1.0240, tok/sec: 186640.71, flops:163.47, batch-reuse:1
@ 32 train 7.7339 , allloss: 7.7339, dt: 701.84ms, fracRes: 0.0033, norm(attn): 0.0938, norm(output): 0.3242, norm(x): 0.3270, norm(y): 1.0002, norm:1.0810, tok/sec: 186754.39, flops:163.57, batch-reuse:1
@ 33 train 7.6297 , allloss: 7.6297, dt: 682.67ms, fracRes: 0.0034, norm(attn): 0.0938, norm(output): 0.3320, norm(x): 0.3320, norm(y): 1.0002, norm:0.8798, tok/sec: 191998.29, flops:168.16, batch-reuse:1
@ 34 train 7.5989 , allloss: 7.5989, dt: 685.27ms, fracRes: 0.0037, norm(attn): 0.0933, norm(output): 0.3340, norm(x): 0.3340, norm(y): 1.0002, norm:0.7771, tok/sec: 191271.97, flops:167.53, batch-reuse:1
@ 35 train 7.5555 , allloss: 7.5555, dt: 696.56ms, fracRes: 0.0040, norm(attn): 0.0903, norm(output): 0.3242, norm(x): 0.3278, norm(y): 1.0002, norm:0.9181, tok/sec: 188170.33, flops:164.81, batch-reuse:1
@ 36 train 7.4470 , allloss: 7.4470, dt: 701.57ms, fracRes: 0.0043, norm(attn): 0.0913, norm(output): 0.3340, norm(x): 0.3346, norm(y): 1.0002, norm:0.7787, tok/sec: 186827.19, flops:163.63, batch-reuse:1
@ 37 train 7.4565 , allloss: 7.4565, dt: 696.38ms, fracRes: 0.0046, norm(attn): 0.0884, norm(output): 0.3340, norm(x): 0.3346, norm(y): 1.0001, norm:0.8634, tok/sec: 188219.04, flops:164.85, batch-reuse:1
@ 38 train 7.3791 , allloss: 7.3791, dt: 695.17ms, fracRes: 0.0049, norm(attn): 0.0811, norm(output): 0.3223, norm(x): 0.3241, norm(y): 1.0001, norm:0.7358, tok/sec: 188546.38, flops:165.14, batch-reuse:1
@ 39 train 7.3987 , allloss: 7.3987, dt: 687.69ms, fracRes: 0.0051, norm(attn): 0.0864, norm(output): 0.3398, norm(x): 0.3394, norm(y): 1.0001, norm:0.4676, tok/sec: 190598.69, flops:166.94, batch-reuse:1
@ 40 train 7.3993 , allloss: 7.3993, dt: 695.00ms, fracRes: 0.0051, norm(attn): 0.0864, norm(output): 0.3418, norm(x): 0.3435, norm(y): 1.0001, norm:0.4957, tok/sec: 188592.11, flops:165.18, batch-reuse:1
@ 41 train 7.3422 , allloss: 7.3422, dt: 693.82ms, fracRes: 0.0050, norm(attn): 0.0820, norm(output): 0.3281, norm(x): 0.3336, norm(y): 1.0001, norm:0.4110, tok/sec: 188913.55, flops:165.46, batch-reuse:1
@ 42 train 7.2990 , allloss: 7.2990, dt: 694.43ms, fracRes: 0.0048, norm(attn): 0.0776, norm(output): 0.3223, norm(x): 0.3267, norm(y): 1.0001, norm:0.4346, tok/sec: 188747.51, flops:165.32, batch-reuse:1
@ 43 train 7.2847 , allloss: 7.2847, dt: 692.78ms, fracRes: 0.0048, norm(attn): 0.0757, norm(output): 0.3242, norm(x): 0.3257, norm(y): 1.0001, norm:0.5286, tok/sec: 189197.14, flops:165.71, batch-reuse:1
@ 44 train 7.2890 , allloss: 7.2890, dt: 697.04ms, fracRes: 0.0047, norm(attn): 0.0728, norm(output): 0.3145, norm(x): 0.3193, norm(y): 1.0001, norm:0.4495, tok/sec: 188041.29, flops:164.70, batch-reuse:1
@ 45 train 7.1909 , allloss: 7.1909, dt: 685.08ms, fracRes: 0.0045, norm(attn): 0.0703, norm(output): 0.3105, norm(x): 0.3118, norm(y): 1.0000, norm:0.5997, tok/sec: 191322.49, flops:167.57, batch-reuse:1
@ 46 train 7.2260 , allloss: 7.2260, dt: 689.28ms, fracRes: 0.0046, norm(attn): 0.0786, norm(output): 0.3242, norm(x): 0.3306, norm(y): 1.0001, norm:0.9379, tok/sec: 190158.03, flops:166.55, batch-reuse:1
@ 47 train 7.1810 , allloss: 7.1810, dt: 690.73ms, fracRes: 0.0044, norm(attn): 0.0732, norm(output): 0.3242, norm(x): 0.3259, norm(y): 1.0000, norm:1.0794, tok/sec: 189757.85, flops:166.20, batch-reuse:1
@ 48 train 7.1446 , allloss: 7.1446, dt: 691.33ms, fracRes: 0.0044, norm(attn): 0.0762, norm(output): 0.3242, norm(x): 0.3300, norm(y): 1.0000, norm:0.9177, tok/sec: 189595.29, flops:166.06, batch-reuse:1
@ 49 train 7.1467 , allloss: 7.1467, dt: 680.75ms, fracRes: 0.0044, norm(attn): 0.0762, norm(output): 0.3398, norm(x): 0.3375, norm(y): 1.0000, norm:0.9744, tok/sec: 192539.53, flops:168.64, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0297, 0.9688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.1235, 0.7969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1279, 0.2598, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.2246, 0.1650, 0.3633, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1079, 0.3984, 0.1650, 0.1226, 0.0864, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.1855, 0.1118, 0.2227, 0.1445, 0.0952, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0491, 0.0918, 0.1768, 0.1445, 0.0977, 0.1846, 0.1299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0537, 0.1562, 0.1138, 0.1182, 0.1543, 0.1084, 0.0669, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1128, 0.0298, 0.1143, 0.0859, 0.1475, 0.1245, 0.0820, 0.0486, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.1426, 0.1084, 0.1040, 0.0496, 0.1406, 0.1592, 0.0376, 0.0476, 0.0859, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0310, 0.0776, 0.0762, 0.1118, 0.0752, 0.0806, 0.0747, 0.0884, 0.1089, 0.1494, 0.0481, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0703, 0.0703, 0.1074, 0.0613, 0.0557, 0.0610, 0.0732, 0.0771, 0.0820, 0.0986, 0.0640, 0.1060, 0.0000, 0.0000],
        [0.0608, 0.0703, 0.0679, 0.0518, 0.1299, 0.0962, 0.0664, 0.1016, 0.0708, 0.0603, 0.0376, 0.0537, 0.0552, 0.0771, 0.0000],
        [0.0569, 0.0771, 0.0874, 0.0223, 0.0933, 0.0801, 0.0747, 0.0654, 0.0693, 0.0703, 0.0659, 0.0364, 0.0452, 0.0981, 0.0579]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0033,      0.0018,      0.0027,      0.0014,      0.0020,      0.0023,      0.0004,     -0.0006,      0.0005,      0.0000,     -0.0004,      0.0005,     -0.0010,     -0.0001],
        [    -0.0001,      3.4844,     -0.3359,      0.8398,      0.2793,      0.9844,      0.5273,     -0.0447,     -0.2793,      0.5391,     -0.2871,     -0.4961,      0.3125,     -0.6406,      0.1621],
        [     0.0000,      0.4551,      2.3281,     -0.0223,     -0.0134,     -0.3340,     -0.1211,     -0.7305,     -0.2080,     -0.0889,      0.7773,     -0.4629,     -0.4805,      0.4746,      0.5234],
        [     0.0000,      0.2793,      0.9883,      1.6719,      0.2871,      0.8516,      0.5430,     -0.6445,      0.0073,      0.6719,      0.1709,      0.1709,     -0.6406,     -0.0579,      0.0114],
        [    -0.0001,      1.1562,      0.8477,      1.6406,      0.9102,      0.3633,      0.3809,     -0.0366,      0.2217,     -0.1167,      0.4648,     -0.3496,     -0.1025,      0.0161,     -0.0080],
        [     0.0001,     -0.0928,      1.2188,      0.3359,      0.0361,     -0.3125,      0.1738,      0.0737,      0.1689,     -0.1270,      0.0344,     -0.3711,     -0.5781,      0.4004,      0.3770],
        [     0.0001,      0.9258,      0.4219,      1.1094,      0.6797,      0.2617,      0.8203,     -0.1963,     -0.0718,     -0.1221,      0.1758,     -0.1709,     -0.3477,     -0.0500,     -0.3379],
        [     0.0000,     -0.9492,     -0.3203,      0.3340,      0.1309,     -0.2559,      0.3770,      0.0276,     -0.1299,      0.2949,      0.3105,      0.0073,      0.0189,     -0.1836,      0.3438],
        [     0.0001,     -0.5508,      0.5195,      0.1973,      0.2393,      0.5039,      0.1504,     -0.3320,      0.3770,     -0.3945,     -0.0371,     -0.1748,     -0.3848,      0.1328,     -0.4062],
        [    -0.0000,      0.5508,     -0.7773,      0.5664,      0.2793,      0.8164,      0.6523,      0.2334,     -0.2910,      1.0703,     -0.2422,      0.2617,     -0.2910,     -0.1221,     -0.2793],
        [     0.0000,      0.8750,      0.6055,      0.5625,     -0.1797,      0.8672,      0.9922,     -0.4590,     -0.2178,      0.3691,      0.0908,      0.1318,      0.5820,     -0.7500,     -0.3789],
        [    -0.0000,     -0.9219,     -0.0050,     -0.0254,      0.3633,     -0.0364,      0.0322,     -0.0420,      0.1235,      0.3359,      0.6523,     -0.4824,      0.3242,      0.1074,     -0.0620],
        [    -0.0000,     -0.0442,     -0.0403,      0.3848,     -0.1768,     -0.2754,     -0.1816,     -0.0034,      0.0537,      0.1113,      0.2969,     -0.1338,      0.3672,      0.2852,     -0.2109],
        [     0.0000,      0.1436,      0.1108,     -0.1611,      0.7617,      0.4551,      0.0908,      0.5117,      0.1514,     -0.0076,     -0.4805,     -0.1245,     -0.0991,      0.2344,     -0.5039],
        [     0.0001,      0.3047,      0.4277,     -0.9375,      0.4941,      0.3398,      0.2734,      0.1416,      0.1992,      0.2090,      0.1445,     -0.4492,     -0.2344,      0.5430,      0.0182]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0180],
        [0.0546],
        [0.0794],
        [0.0848],
        [0.0905],
        [0.0972],
        [0.1142],
        [0.0905],
        [0.0807],
        [0.0668],
        [0.0776],
        [0.0743],
        [0.0640],
        [0.0612]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.8711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0417, 0.4980, 0.4590, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.2793, 0.1377, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.2520, 0.2539, 0.2500, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1631, 0.1147, 0.2188, 0.2119, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1650, 0.0850, 0.1680, 0.1787, 0.1904, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.2695, 0.1299, 0.1982, 0.0923, 0.0757, 0.1553, 0.0425, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.0693, 0.0515, 0.1582, 0.1250, 0.1553, 0.2266, 0.0334, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.1187, 0.0527, 0.1875, 0.1021, 0.1426, 0.1289, 0.0327, 0.1060, 0.0620, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0483, 0.0461, 0.0581, 0.0942, 0.1436, 0.1904, 0.0635, 0.0649, 0.0967, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0391, 0.1797, 0.1250, 0.1738, 0.0903, 0.0537, 0.0908, 0.0464, 0.0262, 0.0454, 0.0752, 0.0537, 0.0000, 0.0000, 0.0000],
        [0.0471, 0.1943, 0.0693, 0.1621, 0.1543, 0.0579, 0.1064, 0.0198, 0.0334, 0.0442, 0.0593, 0.0176, 0.0347, 0.0000, 0.0000],
        [0.1021, 0.0356, 0.0216, 0.0884, 0.1006, 0.1201, 0.1138, 0.0179, 0.0659, 0.0713, 0.1196, 0.0260, 0.0322, 0.0854, 0.0000],
        [0.0933, 0.0527, 0.0281, 0.0588, 0.1167, 0.0540, 0.1328, 0.0183, 0.0718, 0.0530, 0.0850, 0.0396, 0.0275, 0.0684, 0.1006]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0004,     -0.0015,      0.0009,      0.0016,     -0.0002,      0.0028,     -0.0041,     -0.0004,     -0.0021,      0.0001,     -0.0033,     -0.0031,     -0.0005,      0.0011],
        [     0.0001,      1.8984,      1.0859,      1.6172,      0.9766,      1.1094,      1.4453,     -0.2119,      0.4258,      0.1191,      0.0747,     -0.5117,      0.1592,      0.1074,      0.5312],
        [     0.0001,      2.4844,      2.3906,      2.4531,      1.1016,      1.1797,      1.2812,      0.4141,     -0.2305,      0.2520,      0.5039,     -0.0608,      1.1797,     -0.1816,      0.4023],
        [    -0.0000,      1.4219,      0.7148,      2.0469,      0.8242,      0.9766,      1.3750,     -0.1631,      0.4844,      0.0776,      0.1289,     -0.3438,      0.0234,      0.2275,      0.3574],
        [     0.0000,      1.2656,      1.2734,      1.2578,      0.8945,      0.4473,      1.1172,      0.5820,      0.5625,      0.7031,     -0.5664,     -0.3887,      0.3516,      0.2871,      0.2412],
        [    -0.0001,      0.3184,     -0.0339,      0.6094,      0.5820,      0.3770,      0.5625,     -0.7500,      0.5898,     -0.0742,     -0.1084,     -0.8320,     -0.5703,      0.4082,     -0.4160],
        [    -0.0001,      0.6289,     -0.0415,      0.6445,      0.7031,      0.7695,      0.3359,     -0.3984,      0.1631,     -0.2373,      0.2695,     -0.1406,     -0.1934,      0.0874,     -0.2197],
        [     0.0000,      2.0000,      1.2656,      1.6875,      0.9258,      0.7266,      1.4453,      0.1475,     -0.2227,      0.3496,      0.5000,     -0.1680,      0.4297,     -0.0354,      0.3398],
        [     0.0000,     -0.4023,     -0.7031,      0.4238,      0.1855,      0.4004,      0.7773,     -1.1328,     -0.2988,      0.0247,      0.4375,     -0.9688,     -0.5547,     -0.1543,      0.3184],
        [     0.0001,      0.5703,     -0.2383,      1.0312,      0.4180,      0.7578,      0.6523,     -0.7188,      0.4570,     -0.0781,      0.3867,     -0.4512,     -0.3340,      0.4082,      0.4648],
        [    -0.0000,     -0.9805,     -1.0234,     -0.7930,     -0.3145,      0.1064,      0.3887,     -0.7031,     -0.6875,     -0.2871,     -0.6680,     -0.7969,     -1.0469,     -0.6328,     -0.1582],
        [    -0.0000,      1.5234,      1.1641,      1.4922,      0.8398,      0.3184,      0.8438,      0.1719,     -0.3984,      0.1523,      0.6562,      0.3203,      0.6289,     -0.4238,      0.3477],
        [     0.0000,      1.4219,      0.3848,      1.2344,      1.1875,      0.2090,      0.8164,     -0.8672,     -0.3418,     -0.0645,      0.2344,     -0.9844,     -0.3066,     -0.2412,     -0.0879],
        [     0.0000,     -1.0547,     -1.5547,     -0.1475,     -0.0159,      0.1602,      0.1055,     -1.7422,     -0.4414,     -0.3574,      0.1582,     -1.3672,     -1.1562,     -0.1807,     -0.1187],
        [    -0.0000,     -0.5703,     -1.1953,     -0.4609,      0.2266,     -0.5469,      0.3496,     -1.6328,     -0.2617,     -0.5664,     -0.0923,     -0.8555,     -1.2188,     -0.3086,      0.0752]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1556],
        [0.1068],
        [0.0903],
        [0.0888],
        [0.1028],
        [0.0969],
        [0.0717],
        [0.0890],
        [0.0802],
        [0.0769],
        [0.0641],
        [0.0587],
        [0.0682],
        [0.0667]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5508, 0.2539, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.1040, 0.0928, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4609, 0.0603, 0.1826, 0.1318, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.0356, 0.0227, 0.0284, 0.5664, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.2656, 0.2148, 0.1260, 0.1221, 0.1069, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1152, 0.0801, 0.0698, 0.1943, 0.0698, 0.2930, 0.0664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.0356, 0.0767, 0.0688, 0.1357, 0.0791, 0.2188, 0.1128, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.0035, 0.0036, 0.0042, 0.1660, 0.0270, 0.5859, 0.0055, 0.0459, 0.0029, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.0608, 0.0767, 0.1201, 0.0564, 0.1089, 0.1572, 0.1055, 0.0383, 0.0674, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.0859, 0.0496, 0.0557, 0.1514, 0.0554, 0.1904, 0.0408, 0.0850, 0.0684, 0.1079, 0.0330, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0544, 0.0302, 0.0322, 0.1865, 0.0488, 0.2354, 0.0261, 0.0933, 0.0388, 0.1211, 0.0226, 0.0219, 0.0000, 0.0000],
        [0.1338, 0.0195, 0.0304, 0.0305, 0.1387, 0.0593, 0.1177, 0.0520, 0.0723, 0.0119, 0.1953, 0.0500, 0.0349, 0.0527, 0.0000],
        [0.0308, 0.1387, 0.0564, 0.0530, 0.0874, 0.0520, 0.0254, 0.0500, 0.1187, 0.1069, 0.0361, 0.0359, 0.0461, 0.1455, 0.0167]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0101,     -0.0088,     -0.0082,     -0.0020,     -0.0044,      0.0047,     -0.0078,     -0.0051,     -0.0099,     -0.0001,     -0.0060,     -0.0082,     -0.0054,      0.0025],
        [     0.0001,     -2.6250,     -2.6094,     -2.6875,      0.5352,     -1.3281,      0.9844,     -2.3281,     -0.5586,     -2.9219,      0.4062,     -2.0625,     -2.5938,     -0.8945,     -0.0579],
        [     0.0000,     -0.7734,     -1.0312,     -1.3828,      0.5664,     -0.6836,      0.6836,     -1.0859,     -0.1416,     -1.2188,      0.5039,     -1.2891,     -1.3672,     -0.1904,     -0.2500],
        [     0.0001,     -1.9453,     -2.0625,     -2.2188,      0.5664,     -1.2578,      1.2188,     -2.0625,     -0.2266,     -2.0781,      0.1118,     -1.8594,     -2.3125,     -0.3906,     -0.0289],
        [     0.0000,     -2.0312,     -0.9258,     -1.2500,     -1.0156,     -0.9336,      0.8320,     -0.7109,     -1.2188,     -1.9141,     -0.4434,     -0.2412,     -0.6172,     -1.5234,      1.0469],
        [     0.0001,     -1.8906,     -2.3438,     -2.1250,      0.8711,     -0.7617,     -0.3613,     -1.9219,     -0.0227,     -2.1719,      0.3926,     -1.7422,     -1.9922,     -0.1895,     -1.0000],
        [    -0.0001,      1.1797,      0.9688,      0.4336,      0.4023,      0.2715,      0.0129,      0.7031,      1.1328,      1.0547,     -0.2100,      0.5859,      0.7539,      1.3281,     -0.0579],
        [     0.0001,      0.0231,     -0.3438,     -0.4805,      0.5430,     -0.4746,      0.9570,     -0.5273,      0.0625,     -0.3496,      0.1572,     -0.6602,     -0.5898,      0.0728,      0.0562],
        [     0.0001,     -1.6797,     -0.9180,     -1.0234,     -0.3477,     -0.8867,      0.1309,     -0.5312,     -0.8633,     -2.1250,      0.0183,     -0.5547,     -0.8320,     -1.2188,     -0.0664],
        [     0.0001,     -3.7969,     -3.7500,     -3.6094,      0.0659,     -1.7500,      1.3281,     -3.3281,     -1.2188,     -4.0000,      0.4375,     -3.0312,     -3.7344,     -1.4375,      0.1338],
        [     0.0001,     -0.5820,     -0.3555,      0.0957,     -0.6602,     -0.0027,      0.3633,     -0.0330,     -1.0469,     -0.4824,     -0.0913,      0.3379,      0.0228,     -1.1094,      0.8047],
        [     0.0000,      0.1094,     -0.4434,     -0.3262,      0.6758,     -0.3301,      0.9023,     -0.6406,      0.0942,     -0.1240,      0.3340,     -0.8516,     -0.8047,      0.1719,     -0.0439],
        [     0.0001,     -0.4922,     -1.0781,     -1.0156,      0.7383,     -0.5977,      0.9766,     -1.2266,      0.0466,     -0.8281,      0.3125,     -1.3672,     -1.3984,      0.1035,     -0.1484],
        [     0.0001,     -1.9297,     -1.4844,     -1.4766,      0.0366,     -0.8125,     -0.1299,     -0.9453,     -0.6133,     -2.4219,      0.3789,     -0.9844,     -1.3438,     -0.9297,     -0.4160],
        [    -0.0001,      1.5078,      0.6055,      0.5391,      1.0391,      0.5234,     -0.1953,      0.4863,      1.3516,      1.2422,      0.1611,      0.1562,      0.4043,      1.5547,     -0.6133]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7705],
        [0.5980],
        [0.5583],
        [0.2239],
        [0.2456],
        [0.1282],
        [0.1722],
        [0.1204],
        [0.1389],
        [0.0892],
        [0.1147],
        [0.1158],
        [0.0800],
        [0.0699]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.6680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4668, 0.3008, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4375, 0.1875, 0.2041, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.3027, 0.2324, 0.2480, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1689, 0.1885, 0.1338, 0.1670, 0.1836, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1123, 0.1001, 0.1309, 0.1006, 0.1118, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.0898, 0.0581, 0.0498, 0.3398, 0.0476, 0.2559, 0.0356, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.1846, 0.1147, 0.1465, 0.0889, 0.1611, 0.0277, 0.1050, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.0479, 0.0559, 0.0530, 0.0664, 0.0618, 0.4844, 0.0698, 0.0299, 0.0330, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0527, 0.1504, 0.1279, 0.1226, 0.0688, 0.0718, 0.0148, 0.0742, 0.1230, 0.1455, 0.0479, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.0369, 0.0312, 0.0240, 0.2158, 0.0288, 0.3125, 0.0259, 0.0781, 0.0178, 0.1099, 0.0247, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0522, 0.0361, 0.0289, 0.2305, 0.0320, 0.2559, 0.0249, 0.0820, 0.0216, 0.1011, 0.0233, 0.0226, 0.0000, 0.0000],
        [0.0442, 0.1084, 0.0703, 0.1030, 0.0339, 0.1367, 0.0247, 0.0723, 0.0403, 0.1260, 0.0369, 0.0728, 0.0757, 0.0552, 0.0000],
        [0.0718, 0.0183, 0.0186, 0.0200, 0.0540, 0.0226, 0.3828, 0.0194, 0.0366, 0.0154, 0.0635, 0.0231, 0.0192, 0.0381, 0.1973]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0021,     -0.0031,     -0.0025,      0.0001,     -0.0015,      0.0034,     -0.0030,     -0.0018,     -0.0033,      0.0003,     -0.0028,     -0.0031,     -0.0017,      0.0015],
        [     0.0004,      0.6914,      0.3711,      0.3047,      0.0879,     -0.2100,      0.3320,     -0.0801,     -0.1016,     -0.0420,     -0.2080,     -0.0791,     -0.0129,      0.0261,      0.1865],
        [     0.0003,     -0.4395,     -0.6992,     -0.8945,      0.6641,     -0.8945,      0.9805,     -0.9961,     -0.1973,     -1.2266,     -0.0099,     -1.0156,     -1.0547,     -0.3301,      0.2949],
        [     0.0002,     -0.8477,     -0.7617,     -0.9375,     -0.0430,     -1.2812,      1.5469,     -0.9570,     -0.9219,     -1.3984,     -0.2539,     -0.8008,     -0.9766,     -0.9961,      1.0234],
        [     0.0000,      1.0938,      0.8359,      0.8984,      0.1396,      0.5898,     -1.5781,      0.6406,      0.8750,      1.2500,     -0.0292,      0.4766,      0.6484,      1.1172,     -1.3203],
        [     0.0002,      0.1094,     -0.2363,     -0.0096,      0.0830,     -0.0664,      0.7227,     -0.4453,     -0.3711,     -0.1621,     -0.2676,     -0.3848,     -0.4258,     -0.2051,      0.3848],
        [    -0.0003,     -0.4355,     -0.5547,     -0.2832,     -0.5469,     -0.4414,      0.4375,     -0.7031,     -0.1475,     -0.2500,     -0.2715,     -0.5000,     -0.5977,      0.1099,      0.3242],
        [     0.0004,     -0.3262,     -0.7617,     -0.9180,      1.0000,     -0.9609,      0.7188,     -1.2500,      0.1138,     -1.1562,     -0.0026,     -1.2969,     -1.3203,      0.0396,     -0.1973],
        [     0.0002,      0.9336,      0.4551,      0.6992,      0.1973,      0.7969,     -0.9688,      0.3672,      0.2910,      1.0156,     -0.1885,      0.3203,      0.3848,      0.5352,     -0.7578],
        [     0.0001,     -0.7227,     -0.5664,     -0.6211,     -0.3945,     -0.4668,      1.5938,     -0.3418,     -1.1875,     -1.0938,     -0.0854,     -0.3145,     -0.3965,     -1.3047,      1.3359],
        [     0.0003,      1.0469,      0.8867,      0.8438,      0.2656,      0.3105,     -1.2734,      0.3398,      0.8477,      1.0156,     -0.0991,      0.3047,      0.4707,      0.9609,     -0.9844],
        [     0.0002,     -0.9375,     -1.1016,     -1.3672,      0.8281,     -1.1797,      1.2031,     -1.2891,     -0.1875,     -1.6641,      0.1543,     -1.3438,     -1.4062,     -0.4102,      0.2275],
        [     0.0004,     -0.5312,     -0.9023,     -1.1250,      0.9492,     -1.0234,      1.0547,     -1.2734,     -0.0825,     -1.4141,      0.1245,     -1.3438,     -1.3750,     -0.2158,      0.0552],
        [     0.0001,      0.8984,      0.4609,      0.8438,     -0.2637,      1.1250,     -0.5859,      0.4922,     -0.0933,      1.0391,     -0.1826,      0.4980,      0.5352,      0.2197,     -0.2129],
        [    -0.0003,     -1.3672,     -1.3516,     -1.2812,     -0.2891,     -1.1562,      1.6719,     -1.3047,     -0.6719,     -1.5391,     -0.1240,     -1.1406,     -1.3203,     -0.6328,      1.0078]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6421],
        [0.5537],
        [0.5656],
        [0.1091],
        [0.2163],
        [0.1141],
        [0.1453],
        [0.0791],
        [0.0943],
        [0.0685],
        [0.1053],
        [0.1027],
        [0.0593],
        [0.0721]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.3320, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.2354, 0.0801, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.1768, 0.2832, 0.2500, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.0957, 0.0806, 0.0806, 0.3887, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.2119, 0.2539, 0.2324, 0.0510, 0.1357, 0.0427, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.0889, 0.0410, 0.0417, 0.2197, 0.0679, 0.3867, 0.0278, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.0535, 0.0703, 0.0762, 0.0688, 0.1079, 0.3516, 0.0781, 0.0583, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0608, 0.0118, 0.0050, 0.0077, 0.1348, 0.0107, 0.6836, 0.0027, 0.0752, 0.0081, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.0742, 0.0947, 0.0708, 0.0815, 0.1069, 0.1250, 0.0913, 0.0835, 0.0967, 0.0654, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0625, 0.0272, 0.0298, 0.1777, 0.0442, 0.2754, 0.0182, 0.1514, 0.0339, 0.0723, 0.0173, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0547, 0.0226, 0.0247, 0.1670, 0.0393, 0.3359, 0.0142, 0.1377, 0.0304, 0.0586, 0.0139, 0.0131, 0.0000, 0.0000],
        [0.1006, 0.0273, 0.0334, 0.0413, 0.0547, 0.0586, 0.3926, 0.0330, 0.0400, 0.0483, 0.0415, 0.0439, 0.0330, 0.0508, 0.0000],
        [0.0476, 0.1001, 0.0776, 0.0762, 0.0742, 0.0496, 0.0378, 0.0762, 0.0747, 0.0540, 0.0977, 0.0645, 0.0723, 0.0664, 0.0309]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0023,     -0.0041,     -0.0034,      0.0003,     -0.0027,      0.0048,     -0.0051,     -0.0009,     -0.0032,     -0.0019,     -0.0047,     -0.0053,      0.0003,      0.0017],
        [     0.0000,     -1.2109,     -2.4375,     -2.0000,      0.5039,     -1.4609,      2.5781,     -3.3906,     -0.1025,     -1.7578,     -1.1328,     -3.1250,     -3.5000,      0.6797,      0.6992],
        [     0.0001,     -0.5234,     -1.6484,     -1.4062,      0.6211,     -0.7773,      1.5234,     -2.2500,      0.4141,     -1.0547,     -0.5781,     -2.1562,     -2.2969,      0.9570,      0.1309],
        [     0.0001,     -0.8906,     -1.9688,     -1.6172,      0.7344,     -1.2969,      2.1094,     -2.6719,      0.2891,     -1.4844,     -0.5820,     -2.5312,     -2.7812,      0.8516,      0.3457],
        [    -0.0001,     -0.0923,      0.3770,      0.2520,     -0.6953,      0.2891,      0.0547,      0.5430,     -0.6836,      0.2930,     -0.2354,      0.6367,      0.6094,     -0.7578,      0.6250],
        [     0.0000,     -1.0312,     -1.2109,     -1.2031,      0.3672,     -1.1484,      0.9922,     -1.4844,      0.0962,     -1.0391,     -0.1689,     -1.4062,     -1.6094,      0.2461,      0.0598],
        [    -0.0000,      1.0938,      1.2734,      1.1875,     -0.3301,      0.6523,     -0.5039,      1.4062,     -0.2539,      0.9727,      0.3398,      1.3750,      1.4766,     -0.3926,      0.1348],
        [     0.0001,     -0.3496,     -1.1250,     -1.1094,      0.5547,     -0.6211,      1.1172,     -1.5078,      0.4219,     -0.8867,     -0.2891,     -1.5469,     -1.5781,      0.7773,     -0.0500],
        [    -0.0000,     -0.9336,     -0.6562,     -0.5781,     -0.6836,     -0.2314,      0.9492,     -0.5586,     -0.8477,     -0.4043,     -0.6562,     -0.3457,     -0.5312,     -0.7305,      0.9805],
        [     0.0002,     -1.6328,     -2.5000,     -2.0625,      0.7930,     -1.7344,      2.4219,     -3.1250,      0.2168,     -2.0156,     -0.8047,     -2.9531,     -3.2812,      0.7812,      0.4746],
        [    -0.0000,     -0.3848,     -0.1436,     -0.4375,     -0.2930,     -0.0209,      0.1348,     -0.1807,     -0.2695,     -0.1201,     -0.5078,     -0.1309,     -0.1436,     -0.2373,      0.2578],
        [     0.0001,     -0.3574,     -1.1875,     -1.1016,      0.6836,     -0.7070,      1.1250,     -1.5938,      0.5273,     -0.9648,     -0.2158,     -1.6406,     -1.6719,      0.8828,     -0.1299],
        [     0.0001,     -0.4746,     -1.3594,     -1.2734,      0.6406,     -0.8008,      1.3438,     -1.8281,      0.4531,     -1.0625,     -0.4062,     -1.8359,     -1.9062,      0.8750,     -0.0122],
        [    -0.0000,     -1.3047,     -1.1016,     -0.8906,     -0.6094,     -0.5391,      1.3672,     -1.1172,     -0.9180,     -0.7305,     -0.8828,     -0.8320,     -1.1172,     -0.6836,      1.1172],
        [     0.0001,      0.7422,      0.4902,      0.4688,      0.4473,      0.0398,     -0.2295,      0.4707,      0.4531,      0.1270,      0.7227,      0.3008,      0.4199,      0.3359,     -0.4297]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5833],
        [0.4541],
        [0.4192],
        [0.1870],
        [0.1799],
        [0.1359],
        [0.1390],
        [0.0850],
        [0.1012],
        [0.0772],
        [0.0941],
        [0.0902],
        [0.0641],
        [0.0621]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6133, 0.1846, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.1406, 0.1582, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.2520, 0.1777, 0.2383, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.1074, 0.1309, 0.1777, 0.1543, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.0869, 0.0786, 0.0894, 0.1069, 0.0532, 0.4746, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.0238, 0.0342, 0.0393, 0.0461, 0.0206, 0.6953, 0.0239, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1445, 0.0874, 0.1187, 0.1006, 0.2051, 0.0393, 0.0938, 0.1240, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.0405, 0.0549, 0.0496, 0.0742, 0.0238, 0.4922, 0.0483, 0.0454, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.0850, 0.0698, 0.1035, 0.0674, 0.0854, 0.1670, 0.0542, 0.0601, 0.1592, 0.0371, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.0177, 0.0271, 0.0295, 0.0330, 0.0135, 0.6328, 0.0198, 0.0199, 0.0820, 0.0138, 0.0300, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0178, 0.0262, 0.0299, 0.0349, 0.0154, 0.5898, 0.0190, 0.0215, 0.0928, 0.0139, 0.0294, 0.0199, 0.0000, 0.0000],
        [0.0452, 0.0972, 0.0527, 0.0625, 0.0791, 0.1377, 0.0143, 0.0615, 0.1006, 0.0427, 0.1060, 0.0503, 0.0605, 0.0903, 0.0000],
        [0.0471, 0.0179, 0.0287, 0.0280, 0.0269, 0.0089, 0.5117, 0.0222, 0.0162, 0.0354, 0.0172, 0.0280, 0.0220, 0.0211, 0.1680]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0013,     -0.0017,     -0.0009,     -0.0004,     -0.0030,      0.0056,     -0.0024,     -0.0017,     -0.0004,     -0.0013,     -0.0018,     -0.0025,     -0.0009,      0.0030],
        [    -0.0004,     -0.9844,     -1.1797,     -0.8281,     -0.2715,     -1.0781,      1.2422,     -1.5469,     -0.9609,     -0.0143,     -1.3438,     -1.1875,     -1.5156,     -0.4141,      0.8438],
        [    -0.0004,     -1.2031,     -1.1094,     -0.9375,     -0.5664,     -1.4844,      1.7578,     -1.5156,     -1.1406,      0.0264,     -1.6719,     -1.1172,     -1.4766,     -0.5312,      1.0703],
        [    -0.0003,     -1.3203,     -1.2031,     -1.0781,     -0.4570,     -1.7734,      1.8047,     -1.5625,     -1.1094,     -0.0583,     -1.6172,     -1.1328,     -1.5078,     -0.5469,      1.0938],
        [    -0.0001,      0.4102,      0.0625,      0.3555,     -0.0146,      0.7109,     -0.4414,      0.1030,      0.1582,      0.2070,      0.1240,      0.0613,      0.1025,      0.2734,     -0.1514],
        [    -0.0002,     -1.1094,     -0.9141,     -0.6094,     -0.7539,     -1.1562,      1.1016,     -0.9336,     -1.0703,      0.2451,     -1.1562,     -0.6172,     -0.9023,     -0.5820,      0.9961],
        [    -0.0002,     -0.2246,     -0.3281,     -0.1973,     -0.0172,     -0.7148,      1.4766,     -0.5938,     -0.3164,     -0.4355,     -0.3730,     -0.5547,     -0.6250,     -0.1709,      0.4688],
        [    -0.0004,     -1.5781,     -1.2188,     -1.0781,     -0.9180,     -1.7266,      1.7969,     -1.5703,     -1.3906,      0.0613,     -1.8906,     -1.1328,     -1.5312,     -0.6992,      1.1875],
        [    -0.0001,      0.5117,      0.0096,      0.3164,      0.1504,      0.8633,     -0.7852,      0.0820,      0.3613,      0.1738,      0.2812,      0.0002,      0.0830,      0.4629,     -0.4297],
        [    -0.0002,     -0.8359,     -0.5352,     -0.6406,     -0.2344,     -1.3750,      1.6562,     -0.6641,     -0.7266,     -0.1836,     -0.7148,     -0.4297,     -0.6523,     -0.5078,      0.9805],
        [    -0.0003,     -0.2715,     -0.4688,     -0.0776,     -0.5039,     -0.2656,      0.4004,     -0.7227,     -0.6211,      0.3535,     -1.1016,     -0.4922,     -0.6719,     -0.1309,      0.4746],
        [    -0.0004,     -1.5312,     -1.1094,     -1.0234,     -0.9102,     -1.8047,      2.0469,     -1.4219,     -1.4219,      0.0010,     -1.7812,     -1.0078,     -1.3828,     -0.7930,      1.3125],
        [    -0.0004,     -1.6250,     -1.2344,     -1.1016,     -0.9453,     -1.7656,      1.8828,     -1.5547,     -1.4297,      0.0312,     -1.8672,     -1.1172,     -1.5078,     -0.7500,      1.2344],
        [     0.0000,      0.7617,      0.1514,      0.3242,      0.5586,      1.1094,     -1.1484,      0.3066,      0.7969,     -0.0552,      0.8516,      0.1050,      0.2891,      0.6914,     -0.8320],
        [    -0.0003,     -0.9648,     -0.4980,     -0.5273,     -0.5664,     -1.6719,      2.3906,     -0.7539,     -1.0703,     -0.2910,     -1.0078,     -0.5234,     -0.7656,     -0.8047,      1.2734]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4985],
        [0.3763],
        [0.3466],
        [0.1605],
        [0.2109],
        [0.1227],
        [0.1159],
        [0.0963],
        [0.0819],
        [0.0809],
        [0.0736],
        [0.0745],
        [0.0623],
        [0.0541]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7031, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.2656, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.1914, 0.1914, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.2139, 0.2139, 0.2383, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1533, 0.1436, 0.2168, 0.1318, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1162, 0.1377, 0.1807, 0.0942, 0.1064, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2178, 0.0889, 0.0796, 0.1289, 0.1177, 0.0991, 0.2178, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1143, 0.1113, 0.1318, 0.0850, 0.1504, 0.1118, 0.0972, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.0747, 0.0884, 0.1055, 0.0879, 0.0850, 0.1201, 0.0737, 0.0571, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0723, 0.0583, 0.0972, 0.0640, 0.0884, 0.1641, 0.0405, 0.0640, 0.1904, 0.0282, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0593, 0.0564, 0.0869, 0.0815, 0.0703, 0.1387, 0.0369, 0.0571, 0.2031, 0.0264, 0.0508, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.0554, 0.0505, 0.0830, 0.0762, 0.0645, 0.1396, 0.0317, 0.0564, 0.2002, 0.0228, 0.0439, 0.0310, 0.0000, 0.0000],
        [0.0500, 0.0806, 0.0850, 0.0869, 0.0488, 0.0884, 0.0554, 0.0830, 0.0557, 0.0864, 0.0625, 0.0815, 0.0830, 0.0527, 0.0000],
        [0.0491, 0.0510, 0.0620, 0.0728, 0.0566, 0.0588, 0.0918, 0.0518, 0.0352, 0.1172, 0.0344, 0.0654, 0.0515, 0.0349, 0.1680]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0023,      0.0030,      0.0032,      0.0021,      0.0015,      0.0045,      0.0029,      0.0006,      0.0033,      0.0023,      0.0031,      0.0028,     -0.0002,      0.0045],
        [    -0.0002,     -0.8594,     -0.8203,     -0.3965,     -0.5859,     -0.8164,      0.1533,     -1.3438,     -0.8242,      0.3828,     -1.7109,     -1.0859,     -1.3828,     -0.2080,      0.4609],
        [    -0.0003,     -0.6133,     -0.6992,     -0.3184,     -0.4375,     -0.5664,      0.0825,     -1.1172,     -0.7500,      0.3457,     -1.3984,     -0.8672,     -1.1406,     -0.2773,      0.5117],
        [    -0.0003,     -0.5977,     -0.5977,     -0.2559,     -0.4805,     -0.5742,      0.1758,     -0.9492,     -0.8164,      0.4688,     -1.3438,     -0.6758,     -0.9609,     -0.4023,      0.6914],
        [    -0.0002,      0.2383,      0.2402,      0.3477,     -0.0134,      0.4980,      0.3262,      0.1167,     -0.0008,      0.4453,     -0.1387,      0.1553,      0.1084,      0.0391,      0.3750],
        [    -0.0003,     -0.2344,     -0.3008,      0.1138,     -0.3848,     -0.1777,      0.3672,     -0.6211,     -0.5938,      0.7617,     -1.0859,     -0.3496,     -0.6094,     -0.2207,      0.7812],
        [    -0.0004,     -0.0830,      0.0840,      0.3555,     -0.2949,     -0.1709,      0.6367,     -0.1865,     -0.5508,      0.6797,     -0.6680,      0.0152,     -0.1904,     -0.4297,      0.9180],
        [    -0.0004,     -0.8945,     -1.0078,     -0.5273,     -0.6172,     -0.7852,     -0.0017,     -1.4688,     -0.9102,      0.2871,     -1.7812,     -1.1562,     -1.4844,     -0.3066,      0.4746],
        [    -0.0002,      0.0889,      0.0623,      0.2275,     -0.2080,      0.3652,      0.0645,     -0.0757,     -0.1084,      0.4297,     -0.3594,     -0.0141,     -0.0718,      0.0294,      0.2197],
        [    -0.0004,     -0.1934,     -0.0275,      0.1484,     -0.0304,     -0.0659,      0.2793,     -0.2080,     -0.4648,      0.8711,     -0.6484,      0.0415,     -0.2139,     -0.3203,      1.0469],
        [    -0.0003,     -0.6133,     -0.8242,     -0.3125,     -0.7305,     -0.4102,      0.2070,     -1.1875,     -0.7344,      0.3594,     -1.5469,     -0.9336,     -1.1797,     -0.1709,      0.3613],
        [    -0.0004,     -0.8086,     -0.8594,     -0.4258,     -0.4902,     -0.6328,      0.0398,     -1.2812,     -0.8438,      0.4238,     -1.6172,     -0.9609,     -1.2969,     -0.3223,      0.6367],
        [    -0.0004,     -0.9570,     -1.0547,     -0.5547,     -0.6367,     -0.8086,     -0.0302,     -1.5156,     -0.9414,      0.3262,     -1.8438,     -1.1875,     -1.5391,     -0.3223,      0.5078],
        [    -0.0001,      0.4727,      0.5312,      0.5508,     -0.0247,      0.5703,      0.1035,      0.5078,      0.1045,      0.5469,      0.2236,      0.4863,      0.5078,      0.0515,      0.2598],
        [    -0.0005,      0.0396,      0.2344,      0.3926,      0.1436,      0.1826,      0.6250,      0.0537,     -0.3340,      0.8711,     -0.3535,      0.2852,      0.0505,     -0.3379,      1.2266]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5397],
        [0.4370],
        [0.2996],
        [0.1672],
        [0.1780],
        [0.1074],
        [0.1744],
        [0.1033],
        [0.0832],
        [0.1196],
        [0.1106],
        [0.1152],
        [0.0536],
        [0.0474]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.7305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2227, 0.4355, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.3125, 0.2695, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.3164, 0.1660, 0.1602, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.2832, 0.1816, 0.1592, 0.1729, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.2119, 0.1426, 0.1709, 0.1064, 0.1289, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.2168, 0.1631, 0.1494, 0.1064, 0.1030, 0.0840, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0598, 0.1846, 0.1001, 0.0996, 0.1406, 0.1196, 0.0928, 0.0728, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0564, 0.1660, 0.1226, 0.1406, 0.0728, 0.1016, 0.0791, 0.0723, 0.0684, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0530, 0.1562, 0.0879, 0.0825, 0.1211, 0.0889, 0.0762, 0.0615, 0.1152, 0.0918, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0564, 0.1562, 0.1162, 0.1147, 0.0742, 0.0781, 0.0649, 0.0669, 0.0679, 0.0933, 0.0476, 0.0640, 0.0000, 0.0000, 0.0000],
        [0.0532, 0.1484, 0.1099, 0.1040, 0.0737, 0.0728, 0.0593, 0.0630, 0.0679, 0.0840, 0.0474, 0.0596, 0.0562, 0.0000, 0.0000],
        [0.0337, 0.1221, 0.0703, 0.0752, 0.0767, 0.0796, 0.0669, 0.0483, 0.0728, 0.0894, 0.0408, 0.0532, 0.0476, 0.1240, 0.0000],
        [0.0352, 0.1108, 0.0781, 0.0923, 0.0493, 0.0645, 0.0618, 0.0503, 0.0476, 0.0952, 0.0320, 0.0544, 0.0479, 0.0894, 0.0913]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0043,      0.0032,      0.0032,      0.0039,      0.0035,      0.0040,      0.0026,      0.0038,      0.0035,      0.0031,      0.0029,      0.0027,      0.0047,      0.0035],
        [     0.0002,      1.0078,      0.5898,      0.4316,      0.7266,      0.5234,      0.1279,      0.0815,      0.6094,      0.3652,      0.0884,      0.0420,     -0.0068,      1.0781,      0.1562],
        [     0.0003,      0.6719,      0.4258,      0.3184,     -0.0552,     -0.0186,     -0.2910,     -0.1309,     -0.1445,      0.0137,     -0.4355,     -0.2207,     -0.2578,      0.2715,     -0.1846],
        [     0.0003,      0.7188,      0.5703,      0.5469,      0.0325,      0.1426,      0.0972,      0.0752,     -0.0559,      0.3477,     -0.2910,      0.0422,     -0.0277,      0.3984,      0.2266],
        [     0.0002,      1.1172,      0.4766,      0.4375,      0.9023,      0.6445,      0.4590,      0.2217,      0.8750,      0.6133,      0.3164,      0.2676,      0.2207,      1.2812,      0.4570],
        [     0.0003,      1.3984,      0.9531,      0.8203,      0.9023,      0.6367,      0.4453,      0.4375,      0.8594,      0.6484,      0.3535,      0.3691,      0.3320,      1.3906,      0.3828],
        [     0.0004,      1.0859,      0.6875,      0.8672,      0.3984,      0.5938,      0.8516,      0.4258,      0.3770,      1.2891,      0.0228,      0.6055,      0.4531,      0.9883,      1.2266],
        [     0.0003,      0.9609,      0.6758,      0.5898,      0.2520,      0.2178,      0.0134,      0.1216,      0.1670,      0.3438,     -0.1572,      0.0442,     -0.0004,      0.6445,      0.1338],
        [     0.0003,      1.1250,      0.5156,      0.5117,      0.8516,      0.6953,      0.4414,      0.1973,      0.7852,      0.6797,      0.1895,      0.2539,      0.1807,      1.2656,      0.5234],
        [     0.0004,      1.0781,      0.7734,      0.9141,      0.2500,      0.5859,      0.3340,      0.2480,      0.1904,      0.7578,     -0.2295,      0.2773,      0.1631,      0.8164,      0.7148],
        [     0.0003,      1.0859,      0.5039,      0.4453,      0.8281,      0.5156,      0.3613,      0.1494,      0.7812,      0.5508,      0.2061,      0.1641,      0.1138,      1.2891,      0.3652],
        [     0.0004,      1.0234,      0.7266,      0.7109,      0.2754,      0.3262,      0.1396,      0.1729,      0.1904,      0.5039,     -0.1650,      0.1299,      0.0603,      0.7188,      0.3398],
        [     0.0003,      1.0234,      0.7266,      0.6719,      0.3262,      0.3125,      0.1079,      0.1689,      0.2383,      0.4570,     -0.1196,      0.1094,      0.0515,      0.7422,      0.2617],
        [     0.0004,      1.2891,      0.7344,      0.8047,      0.8242,      0.8594,      0.6836,      0.3613,      0.7695,      0.9766,      0.1934,      0.4570,      0.3477,      1.3047,      0.8516],
        [     0.0004,      1.1484,      0.8008,      0.9688,      0.3418,      0.6094,      0.5664,      0.3613,      0.3047,      1.0000,     -0.0889,      0.4395,      0.3125,      0.9336,      0.9570]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2003],
        [0.1965],
        [0.1408],
        [0.0762],
        [0.0588],
        [0.0610],
        [0.0709],
        [0.0431],
        [0.0443],
        [0.0429],
        [0.0456],
        [0.0437],
        [0.0216],
        [0.0279]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.9062, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.5312, 0.4043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.3848, 0.2949, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0223, 0.2441, 0.1680, 0.1650, 0.4004, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0199, 0.2021, 0.1484, 0.1387, 0.2930, 0.1982, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0168, 0.1660, 0.1289, 0.1226, 0.2520, 0.1670, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0151, 0.1494, 0.1147, 0.1045, 0.2139, 0.1475, 0.1309, 0.1245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0115, 0.1226, 0.0825, 0.0825, 0.2002, 0.1245, 0.1055, 0.0933, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0114, 0.1094, 0.0786, 0.0762, 0.1719, 0.1147, 0.0977, 0.0884, 0.1562, 0.0952, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0099, 0.1006, 0.0723, 0.0674, 0.1592, 0.0996, 0.0889, 0.0806, 0.1396, 0.0796, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0095, 0.0928, 0.0713, 0.0654, 0.1357, 0.0938, 0.0815, 0.0776, 0.1245, 0.0781, 0.0918, 0.0786, 0.0000, 0.0000, 0.0000],
        [0.0087, 0.0859, 0.0659, 0.0603, 0.1260, 0.0864, 0.0757, 0.0718, 0.1152, 0.0718, 0.0854, 0.0728, 0.0742, 0.0000, 0.0000],
        [0.0069, 0.0742, 0.0496, 0.0515, 0.1270, 0.0776, 0.0669, 0.0569, 0.1133, 0.0640, 0.0757, 0.0593, 0.0603, 0.1167, 0.0000],
        [0.0075, 0.0708, 0.0535, 0.0508, 0.1074, 0.0728, 0.0625, 0.0583, 0.0986, 0.0618, 0.0708, 0.0601, 0.0608, 0.1025, 0.0618]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0070,      0.0058,      0.0061,      0.0085,      0.0073,      0.0074,      0.0065,      0.0084,      0.0070,      0.0075,      0.0067,      0.0068,      0.0085,      0.0069],
        [    -0.0005,      2.2656,      1.7344,      1.6484,      2.5781,      2.0781,      2.0312,      1.8828,      2.4219,      1.8906,      2.1406,      1.9141,      1.9453,      2.4062,      1.9219],
        [    -0.0005,      2.0781,      1.8125,      1.7188,      2.3906,      2.0469,      1.9766,      1.8828,      2.3125,      1.9062,      2.0469,      1.8984,      1.9141,      2.3281,      1.9141],
        [    -0.0005,      2.1562,      1.8984,      1.8359,      2.4844,      2.1719,      2.0625,      1.9688,      2.4219,      2.0156,      2.1406,      1.9922,      2.0000,      2.4531,      2.0000],
        [    -0.0007,      2.3906,      2.0156,      2.0000,      2.8906,      2.4062,      2.2344,      2.1250,      2.7500,      2.1719,      2.4062,      2.1562,      2.1875,      2.7500,      2.1719],
        [    -0.0006,      2.3125,      2.0156,      1.9375,      2.6875,      2.2969,      2.1562,      2.0938,      2.5938,      2.1094,      2.2969,      2.1094,      2.1406,      2.6250,      2.1406],
        [    -0.0007,      2.2969,      2.0469,      1.9844,      2.7031,      2.2969,      2.1719,      2.0938,      2.5938,      2.1094,      2.2812,      2.1094,      2.1250,      2.6094,      2.1094],
        [    -0.0006,      2.2969,      2.0312,      1.9375,      2.6562,      2.2812,      2.1562,      2.1094,      2.5625,      2.1094,      2.2812,      2.1250,      2.1406,      2.5938,      2.1250],
        [    -0.0007,      2.3594,      1.9688,      1.9688,      2.8594,      2.3750,      2.2188,      2.0938,      2.7344,      2.1562,      2.3750,      2.1250,      2.1406,      2.7500,      2.1562],
        [    -0.0007,      2.2656,      1.9375,      1.9062,      2.7188,      2.3125,      2.1562,      2.0469,      2.6250,      2.1250,      2.2656,      2.0938,      2.0938,      2.6562,      2.1250],
        [    -0.0006,      2.3125,      1.9844,      1.9141,      2.7812,      2.3125,      2.1875,      2.0938,      2.6406,      2.0781,      2.3281,      2.1094,      2.1250,      2.6406,      2.1094],
        [    -0.0006,      2.2812,      2.0156,      1.9375,      2.6562,      2.2969,      2.1562,      2.1094,      2.5781,      2.1094,      2.2812,      2.1094,      2.1406,      2.6094,      2.1250],
        [    -0.0006,      2.2812,      2.0156,      1.9297,      2.6719,      2.2812,      2.1562,      2.1094,      2.5781,      2.1094,      2.2812,      2.1250,      2.1406,      2.5938,      2.1250],
        [    -0.0007,      2.3750,      1.9766,      2.0156,      2.9219,      2.4219,      2.2656,      2.1094,      2.7969,      2.2344,      2.4062,      2.1562,      2.1719,      2.8281,      2.2188],
        [    -0.0007,      2.2344,      1.9609,      1.9062,      2.6562,      2.2656,      2.1094,      2.0469,      2.5781,      2.1094,      2.2344,      2.0781,      2.0938,      2.6094,      2.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0745],
        [0.0504],
        [0.0308],
        [0.0186],
        [0.0153],
        [0.0126],
        [0.0130],
        [0.0098],
        [0.0086],
        [0.0093],
        [0.0081],
        [0.0077],
        [0.0056],
        [0.0057]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.8594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.5000, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0461, 0.3535, 0.2988, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0325, 0.2656, 0.2246, 0.2246, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0276, 0.2168, 0.1826, 0.1826, 0.2051, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0215, 0.1846, 0.1553, 0.1543, 0.1719, 0.1562, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0203, 0.1592, 0.1338, 0.1338, 0.1494, 0.1357, 0.1357, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0172, 0.1396, 0.1177, 0.1172, 0.1318, 0.1187, 0.1196, 0.1157, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0148, 0.1270, 0.1060, 0.1055, 0.1182, 0.1069, 0.1079, 0.1045, 0.1108, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0145, 0.1123, 0.0952, 0.0952, 0.1064, 0.0962, 0.0972, 0.0942, 0.0996, 0.0894, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0129, 0.1040, 0.0874, 0.0869, 0.0972, 0.0884, 0.0889, 0.0859, 0.0913, 0.0815, 0.0918, 0.0835, 0.0000, 0.0000, 0.0000],
        [0.0120, 0.0957, 0.0806, 0.0801, 0.0898, 0.0815, 0.0815, 0.0796, 0.0845, 0.0752, 0.0845, 0.0771, 0.0776, 0.0000, 0.0000],
        [0.0106, 0.0889, 0.0742, 0.0742, 0.0835, 0.0752, 0.0762, 0.0732, 0.0781, 0.0698, 0.0786, 0.0713, 0.0718, 0.0742, 0.0000],
        [0.0096, 0.0835, 0.0698, 0.0693, 0.0781, 0.0703, 0.0708, 0.0688, 0.0728, 0.0649, 0.0732, 0.0669, 0.0674, 0.0693, 0.0654]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0062,     0.0059,     0.0059,     0.0060,     0.0059,     0.0058,     0.0058,     0.0059,     0.0057,     0.0059,     0.0057,     0.0057,     0.0058,     0.0057],
        [    0.0004,     1.8047,     1.6406,     1.6484,     1.7656,     1.6641,     1.6875,     1.6406,     1.7109,     1.6094,     1.7109,     1.6250,     1.6328,     1.6719,     1.6172],
        [    0.0004,     1.8828,     1.7188,     1.7188,     1.8281,     1.7344,     1.7500,     1.7109,     1.7734,     1.6719,     1.7734,     1.6875,     1.6953,     1.7344,     1.6797],
        [    0.0004,     2.0469,     1.8672,     1.8750,     1.9766,     1.8828,     1.8906,     1.8594,     1.9219,     1.8125,     1.9219,     1.8359,     1.8438,     1.8750,     1.8203],
        [    0.0004,     2.0938,     1.9297,     1.9297,     2.0469,     1.9375,     1.9531,     1.9141,     1.9766,     1.8672,     1.9766,     1.8828,     1.8906,     1.9219,     1.8672],
        [    0.0004,     2.0625,     1.8906,     1.8906,     2.0000,     1.9062,     1.9141,     1.8828,     1.9375,     1.8281,     1.9453,     1.8516,     1.8594,     1.8906,     1.8359],
        [    0.0004,     2.1562,     1.9766,     1.9766,     2.0781,     1.9844,     1.9922,     1.9609,     2.0156,     1.9062,     2.0156,     1.9297,     1.9375,     1.9688,     1.9141],
        [    0.0004,     2.0625,     1.8828,     1.8828,     2.0000,     1.8984,     1.9062,     1.8750,     1.9375,     1.8203,     1.9375,     1.8438,     1.8516,     1.8828,     1.8281],
        [    0.0004,     2.0938,     1.9219,     1.9219,     2.0312,     1.9297,     1.9375,     1.9062,     1.9688,     1.8516,     1.9688,     1.8750,     1.8828,     1.9141,     1.8594],
        [    0.0004,     2.1562,     1.9688,     1.9688,     2.0781,     1.9844,     1.9844,     1.9609,     2.0156,     1.8984,     2.0156,     1.9297,     1.9375,     1.9688,     1.9062],
        [    0.0004,     2.0469,     1.8828,     1.8750,     1.9922,     1.8906,     1.8984,     1.8672,     1.9219,     1.8125,     1.9297,     1.8359,     1.8438,     1.8750,     1.8203],
        [    0.0004,     2.0938,     1.9141,     1.9141,     2.0312,     1.9297,     1.9297,     1.9062,     1.9609,     1.8516,     1.9688,     1.8750,     1.8828,     1.9141,     1.8516],
        [    0.0004,     2.0781,     1.9062,     1.9062,     2.0156,     1.9219,     1.9219,     1.8906,     1.9531,     1.8438,     1.9531,     1.8672,     1.8750,     1.9062,     1.8438],
        [    0.0004,     2.1250,     1.9531,     1.9531,     2.0625,     1.9609,     1.9688,     1.9375,     2.0000,     1.8828,     2.0000,     1.9062,     1.9141,     1.9453,     1.8906],
        [    0.0004,     2.1719,     1.9844,     1.9844,     2.0938,     2.0000,     2.0000,     1.9766,     2.0312,     1.9141,     2.0312,     1.9453,     1.9531,     1.9844,     1.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1786],
        [0.1014],
        [0.0660],
        [0.0483],
        [0.0399],
        [0.0327],
        [0.0288],
        [0.0248],
        [0.0219],
        [0.0203],
        [0.0185],
        [0.0169],
        [0.0153],
        [0.0143]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4102, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.3613, 0.4219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.2490, 0.2949, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.1855, 0.2197, 0.2432, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.1465, 0.1748, 0.1934, 0.2061, 0.2080, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.1201, 0.1445, 0.1592, 0.1709, 0.1719, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.1025, 0.1226, 0.1357, 0.1455, 0.1465, 0.1494, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.0889, 0.1064, 0.1177, 0.1260, 0.1270, 0.1299, 0.1299, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0359, 0.0781, 0.0938, 0.1040, 0.1113, 0.1123, 0.1147, 0.1147, 0.1172, 0.1172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.0698, 0.0840, 0.0933, 0.0996, 0.1006, 0.1025, 0.1025, 0.1050, 0.1045, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0289, 0.0635, 0.0762, 0.0845, 0.0903, 0.0908, 0.0933, 0.0928, 0.0952, 0.0947, 0.0957, 0.0952, 0.0000, 0.0000, 0.0000],
        [0.0264, 0.0579, 0.0693, 0.0771, 0.0825, 0.0830, 0.0850, 0.0845, 0.0869, 0.0864, 0.0874, 0.0869, 0.0874, 0.0000, 0.0000],
        [0.0239, 0.0530, 0.0635, 0.0708, 0.0757, 0.0762, 0.0781, 0.0781, 0.0796, 0.0796, 0.0801, 0.0801, 0.0806, 0.0815, 0.0000],
        [0.0220, 0.0488, 0.0588, 0.0654, 0.0698, 0.0708, 0.0723, 0.0723, 0.0737, 0.0737, 0.0742, 0.0742, 0.0742, 0.0752, 0.0747]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0014,      0.0016,      0.0017,      0.0018,      0.0018,      0.0018,      0.0018,      0.0019,      0.0019,      0.0019,      0.0019,      0.0019,      0.0019,      0.0019],
        [    -0.0001,      0.3633,      0.4863,      0.5625,      0.6133,      0.6211,      0.6328,      0.6328,      0.6484,      0.6445,      0.6523,      0.6484,      0.6523,      0.6641,      0.6562],
        [    -0.0001,      0.5117,      0.6602,      0.7500,      0.8086,      0.8203,      0.8320,      0.8320,      0.8516,      0.8477,      0.8594,      0.8516,      0.8594,      0.8711,      0.8594],
        [    -0.0001,      0.6289,      0.7969,      0.8945,      0.9609,      0.9688,      0.9883,      0.9844,      1.0078,      1.0000,      1.0156,      1.0078,      1.0156,      1.0234,      1.0156],
        [    -0.0001,      0.6914,      0.8633,      0.9609,      1.0312,      1.0391,      1.0547,      1.0547,      1.0781,      1.0703,      1.0781,      1.0781,      1.0859,      1.0938,      1.0859],
        [    -0.0001,      0.7148,      0.8867,      0.9883,      1.0547,      1.0625,      1.0781,      1.0781,      1.1016,      1.0938,      1.1094,      1.1016,      1.1094,      1.1172,      1.1094],
        [    -0.0001,      0.7383,      0.9219,      1.0234,      1.0938,      1.1016,      1.1172,      1.1172,      1.1406,      1.1406,      1.1484,      1.1406,      1.1484,      1.1641,      1.1562],
        [    -0.0001,      0.7422,      0.9258,      1.0234,      1.0938,      1.1016,      1.1250,      1.1172,      1.1406,      1.1406,      1.1484,      1.1484,      1.1484,      1.1641,      1.1562],
        [    -0.0001,      0.7656,      0.9492,      1.0469,      1.1172,      1.1250,      1.1484,      1.1484,      1.1719,      1.1641,      1.1719,      1.1719,      1.1797,      1.1875,      1.1797],
        [    -0.0001,      0.7773,      0.9609,      1.0625,      1.1328,      1.1406,      1.1641,      1.1641,      1.1875,      1.1797,      1.1875,      1.1875,      1.1953,      1.2031,      1.1953],
        [    -0.0001,      0.7734,      0.9570,      1.0547,      1.1250,      1.1328,      1.1562,      1.1562,      1.1797,      1.1719,      1.1797,      1.1797,      1.1875,      1.1953,      1.1875],
        [    -0.0001,      0.7812,      0.9648,      1.0703,      1.1328,      1.1406,      1.1641,      1.1641,      1.1875,      1.1875,      1.1953,      1.1875,      1.1953,      1.2109,      1.1953],
        [    -0.0001,      0.7852,      0.9688,      1.0703,      1.1406,      1.1484,      1.1719,      1.1719,      1.1953,      1.1875,      1.1953,      1.1953,      1.1953,      1.2109,      1.2031],
        [    -0.0001,      0.7930,      0.9805,      1.0859,      1.1562,      1.1641,      1.1875,      1.1797,      1.2031,      1.2031,      1.2109,      1.2109,      1.2109,      1.2266,      1.2188],
        [    -0.0001,      0.8008,      0.9883,      1.0938,      1.1641,      1.1719,      1.1953,      1.1875,      1.2109,      1.2109,      1.2188,      1.2188,      1.2188,      1.2344,      1.2266]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3708],
        [0.1864],
        [0.1141],
        [0.0798],
        [0.0617],
        [0.0499],
        [0.0419],
        [0.0357],
        [0.0313],
        [0.0279],
        [0.0251],
        [0.0228],
        [0.0207],
        [0.0192]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9180, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.1055, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.0967, 0.1875, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.0781, 0.1514, 0.2197, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2021, 0.0618, 0.1201, 0.1748, 0.2100, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.0500, 0.0977, 0.1416, 0.1699, 0.1885, 0.2021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.0417, 0.0811, 0.1177, 0.1406, 0.1562, 0.1680, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.0354, 0.0688, 0.1001, 0.1196, 0.1328, 0.1426, 0.1494, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0306, 0.0598, 0.0864, 0.1035, 0.1147, 0.1235, 0.1289, 0.1338, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0270, 0.0525, 0.0762, 0.0913, 0.1011, 0.1084, 0.1133, 0.1177, 0.1206, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0603, 0.0242, 0.0469, 0.0679, 0.0811, 0.0898, 0.0967, 0.1011, 0.1050, 0.1074, 0.1094, 0.1108, 0.0000, 0.0000, 0.0000],
        [0.0532, 0.0217, 0.0422, 0.0610, 0.0732, 0.0811, 0.0869, 0.0908, 0.0942, 0.0967, 0.0981, 0.0996, 0.1016, 0.0000, 0.0000],
        [0.0476, 0.0197, 0.0383, 0.0554, 0.0664, 0.0732, 0.0786, 0.0825, 0.0854, 0.0879, 0.0894, 0.0903, 0.0923, 0.0933, 0.0000],
        [0.0432, 0.0181, 0.0352, 0.0508, 0.0608, 0.0674, 0.0723, 0.0752, 0.0781, 0.0801, 0.0815, 0.0830, 0.0840, 0.0850, 0.0859]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0030,     -0.0022,     -0.0018,     -0.0015,     -0.0014,     -0.0013,     -0.0012,     -0.0012,     -0.0012,     -0.0011,     -0.0011,     -0.0011,     -0.0011,     -0.0011],
        [     0.0002,     -2.4375,     -1.8438,     -1.4922,     -1.3125,     -1.2109,     -1.1406,     -1.0859,     -1.0469,     -1.0234,     -1.0078,     -0.9922,     -0.9727,     -0.9609,     -0.9531],
        [     0.0002,     -1.8828,     -1.2422,     -0.8672,     -0.6836,     -0.5781,     -0.5000,     -0.4512,     -0.4102,     -0.3848,     -0.3672,     -0.3496,     -0.3320,     -0.3203,     -0.3105],
        [     0.0002,     -1.5234,     -0.8633,     -0.4863,     -0.3008,     -0.1953,     -0.1206,     -0.0718,     -0.0322,     -0.0068,      0.0110,      0.0277,      0.0454,      0.0564,      0.0659],
        [     0.0002,     -1.3047,     -0.6367,     -0.2637,     -0.0786,      0.0256,      0.0991,      0.1475,      0.1865,      0.2109,      0.2285,      0.2451,      0.2617,      0.2734,      0.2832],
        [     0.0002,     -1.1875,     -0.5195,     -0.1455,      0.0376,      0.1416,      0.2139,      0.2617,      0.3008,      0.3262,      0.3418,      0.3594,      0.3750,      0.3867,      0.3965],
        [     0.0002,     -1.0938,     -0.4316,     -0.0596,      0.1230,      0.2256,      0.2988,      0.3457,      0.3828,      0.4082,      0.4258,      0.4414,      0.4590,      0.4688,      0.4785],
        [     0.0001,     -1.0469,     -0.3770,     -0.0044,      0.1777,      0.2793,      0.3516,      0.3984,      0.4375,      0.4609,      0.4785,      0.4941,      0.5117,      0.5234,      0.5312],
        [     0.0001,     -0.9961,     -0.3301,      0.0415,      0.2227,      0.3262,      0.3965,      0.4434,      0.4805,      0.5039,      0.5234,      0.5391,      0.5547,      0.5664,      0.5742],
        [     0.0001,     -0.9609,     -0.2969,      0.0737,      0.2539,      0.3574,      0.4277,      0.4746,      0.5117,      0.5352,      0.5508,      0.5703,      0.5859,      0.5977,      0.6055],
        [     0.0001,     -0.9375,     -0.2715,      0.0986,      0.2793,      0.3809,      0.4512,      0.4980,      0.5352,      0.5586,      0.5781,      0.5938,      0.6094,      0.6211,      0.6289],
        [     0.0001,     -0.9180,     -0.2520,      0.1177,      0.2969,      0.3984,      0.4688,      0.5156,      0.5547,      0.5781,      0.5938,      0.6094,      0.6250,      0.6367,      0.6445],
        [     0.0001,     -0.8984,     -0.2324,      0.1367,      0.3164,      0.4180,      0.4883,      0.5352,      0.5742,      0.5977,      0.6133,      0.6289,      0.6445,      0.6562,      0.6641],
        [     0.0001,     -0.8828,     -0.2178,      0.1523,      0.3320,      0.4336,      0.5039,      0.5508,      0.5859,      0.6133,      0.6289,      0.6445,      0.6602,      0.6719,      0.6797],
        [     0.0001,     -0.8711,     -0.2061,      0.1631,      0.3418,      0.4434,      0.5156,      0.5586,      0.5977,      0.6211,      0.6367,      0.6523,      0.6680,      0.6797,      0.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8945],
        [0.6566],
        [0.4190],
        [0.2706],
        [0.1907],
        [0.1419],
        [0.1116],
        [0.0902],
        [0.0756],
        [0.0649],
        [0.0565],
        [0.0498],
        [0.0446],
        [0.0404]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0435.:0.0425.:0.0427.:0.0430.:0.0432.:0.0432.:0.0435.:0.0422)
.
------
		(.:0.0425.:0.0427.:0.0430.:0.0432.:0.0432.:0.0435.:0.0422.:0.0425)
...............
@ 50 train 7.2585 , allloss: 7.2585, dt: 1161.19ms, fracRes: 0.0044, norm(attn): 0.0703, norm(output): 0.3242, norm(x): 0.3305, norm(y): 1.0000, norm:0.9678, tok/sec: 112877.63, flops:98.86, batch-reuse:1
@ 51 train 7.2896 , allloss: 7.2896, dt: 687.98ms, fracRes: 0.0045, norm(attn): 0.0718, norm(output): 0.3340, norm(x): 0.3367, norm(y): 1.0000, norm:0.6694, tok/sec: 190516.19, flops:166.86, batch-reuse:1
@ 52 train 7.1068 , allloss: 7.1068, dt: 699.87ms, fracRes: 0.0044, norm(attn): 0.0708, norm(output): 0.3340, norm(x): 0.3355, norm(y): 1.0000, norm:1.0992, tok/sec: 187280.66, flops:164.03, batch-reuse:1
@ 53 train 7.0506 , allloss: 7.0506, dt: 692.55ms, fracRes: 0.0044, norm(attn): 0.0732, norm(output): 0.3438, norm(x): 0.3470, norm(y): 1.0000, norm:0.8301, tok/sec: 189258.76, flops:165.76, batch-reuse:1
@ 54 train 7.1526 , allloss: 7.1526, dt: 686.91ms, fracRes: 0.0046, norm(attn): 0.0737, norm(output): 0.3535, norm(x): 0.3568, norm(y): 1.0000, norm:0.8199, tok/sec: 190812.97, flops:167.12, batch-reuse:1
@ 55 train 7.2409 , allloss: 7.2409, dt: 699.71ms, fracRes: 0.0043, norm(attn): 0.0708, norm(output): 0.3438, norm(x): 0.3460, norm(y): 0.9999, norm:1.2317, tok/sec: 187324.37, flops:164.07, batch-reuse:1
@ 56 train 7.0477 , allloss: 7.0477, dt: 691.63ms, fracRes: 0.0047, norm(attn): 0.0830, norm(output): 0.3633, norm(x): 0.3655, norm(y): 0.9999, norm:1.1320, tok/sec: 189510.78, flops:165.98, batch-reuse:1
@ 57 train 6.9456 , allloss: 6.9456, dt: 695.08ms, fracRes: 0.0046, norm(attn): 0.0786, norm(output): 0.3750, norm(x): 0.3756, norm(y): 0.9999, norm:1.3323, tok/sec: 188570.12, flops:165.16, batch-reuse:1
@ 58 train 7.0004 , allloss: 7.0004, dt: 702.02ms, fracRes: 0.0042, norm(attn): 0.0728, norm(output): 0.3750, norm(x): 0.3770, norm(y): 0.9999, norm:0.9178, tok/sec: 186707.84, flops:163.53, batch-reuse:1
@ 59 train 6.7981 , allloss: 6.7981, dt: 698.49ms, fracRes: 0.0041, norm(attn): 0.0762, norm(output): 0.3789, norm(x): 0.3835, norm(y): 0.9999, norm:0.9047, tok/sec: 187650.27, flops:164.35, batch-reuse:1
@ 60 train 6.9911 , allloss: 6.9911, dt: 716.03ms, fracRes: 0.0042, norm(attn): 0.0830, norm(output): 0.3984, norm(x): 0.3988, norm(y): 0.9999, norm:0.8991, tok/sec: 183054.91, flops:160.33, batch-reuse:1
@ 61 train 6.9064 , allloss: 6.9064, dt: 710.55ms, fracRes: 0.0042, norm(attn): 0.0801, norm(output): 0.3867, norm(x): 0.3916, norm(y): 0.9999, norm:0.6152, tok/sec: 184465.78, flops:161.57, batch-reuse:1
@ 62 train 6.9617 , allloss: 6.9617, dt: 714.67ms, fracRes: 0.0040, norm(attn): 0.0791, norm(output): 0.3984, norm(x): 0.3982, norm(y): 0.9999, norm:1.0847, tok/sec: 183401.78, flops:160.63, batch-reuse:1
@ 63 train 6.9412 , allloss: 6.9412, dt: 709.86ms, fracRes: 0.0044, norm(attn): 0.0864, norm(output): 0.4102, norm(x): 0.4172, norm(y): 0.9999, norm:1.2896, tok/sec: 184644.84, flops:161.72, batch-reuse:1
@ 64 train 6.8821 , allloss: 6.8821, dt: 715.78ms, fracRes: 0.0041, norm(attn): 0.0815, norm(output): 0.4082, norm(x): 0.4121, norm(y): 0.9998, norm:0.6025, tok/sec: 183117.47, flops:160.38, batch-reuse:1
@ 65 train 6.9861 , allloss: 6.9861, dt: 715.44ms, fracRes: 0.0041, norm(attn): 0.0771, norm(output): 0.3984, norm(x): 0.4002, norm(y): 0.9998, norm:0.9159, tok/sec: 183204.61, flops:160.46, batch-reuse:1
@ 66 train 7.0105 , allloss: 7.0105, dt: 703.43ms, fracRes: 0.0041, norm(attn): 0.0825, norm(output): 0.4102, norm(x): 0.4150, norm(y): 0.9998, norm:0.8067, tok/sec: 186333.21, flops:163.20, batch-reuse:1
@ 67 train 6.9034 , allloss: 6.9034, dt: 709.85ms, fracRes: 0.0039, norm(attn): 0.0806, norm(output): 0.4082, norm(x): 0.4138, norm(y): 0.9998, norm:0.7217, tok/sec: 184648.19, flops:161.73, batch-reuse:1
@ 68 train 6.9431 , allloss: 6.9431, dt: 693.98ms, fracRes: 0.0039, norm(attn): 0.0845, norm(output): 0.4160, norm(x): 0.4204, norm(y): 0.9997, norm:1.3413, tok/sec: 188870.78, flops:165.42, batch-reuse:1
@ 69 train 6.8043 , allloss: 6.8043, dt: 698.23ms, fracRes: 0.0039, norm(attn): 0.0859, norm(output): 0.4258, norm(x): 0.4253, norm(y): 0.9997, norm:0.5115, tok/sec: 187719.28, flops:164.41, batch-reuse:1
@ 70 train 6.8189 , allloss: 6.8189, dt: 697.83ms, fracRes: 0.0038, norm(attn): 0.0845, norm(output): 0.4180, norm(x): 0.4235, norm(y): 0.9997, norm:0.7779, tok/sec: 187828.12, flops:164.51, batch-reuse:1
@ 71 train 6.7733 , allloss: 6.7733, dt: 708.81ms, fracRes: 0.0038, norm(attn): 0.0801, norm(output): 0.4102, norm(x): 0.4164, norm(y): 0.9997, norm:0.7726, tok/sec: 184918.67, flops:161.96, batch-reuse:1
@ 72 train 6.8213 , allloss: 6.8213, dt: 689.28ms, fracRes: 0.0040, norm(attn): 0.0854, norm(output): 0.4316, norm(x): 0.4304, norm(y): 0.9997, norm:0.5271, tok/sec: 190157.71, flops:166.55, batch-reuse:1
@ 73 train 6.9304 , allloss: 6.9304, dt: 691.43ms, fracRes: 0.0041, norm(attn): 0.0820, norm(output): 0.4297, norm(x): 0.4287, norm(y): 0.9996, norm:0.9235, tok/sec: 189567.05, flops:166.03, batch-reuse:1
@ 74 train 6.8336 , allloss: 6.8336, dt: 700.84ms, fracRes: 0.0041, norm(attn): 0.0811, norm(output): 0.4238, norm(x): 0.4249, norm(y): 0.9996, norm:0.5203, tok/sec: 187022.56, flops:163.80, batch-reuse:1
@ 75 train 7.5011 , allloss: 7.5011, dt: 698.07ms, fracRes: 0.0042, norm(attn): 0.0903, norm(output): 0.4375, norm(x): 0.4445, norm(y): 0.9996, norm:1.1814, tok/sec: 187763.52, flops:164.45, batch-reuse:1
@ 76 train 6.7973 , allloss: 6.7973, dt: 699.71ms, fracRes: 0.0042, norm(attn): 0.0825, norm(output): 0.4199, norm(x): 0.4272, norm(y): 0.9996, norm:0.7999, tok/sec: 187322.52, flops:164.07, batch-reuse:1
@ 77 train 7.5890 , allloss: 7.5890, dt: 698.75ms, fracRes: 0.0043, norm(attn): 0.1021, norm(output): 0.4531, norm(x): 0.4548, norm(y): 0.9996, norm:1.7788, tok/sec: 187579.84, flops:164.29, batch-reuse:1
@ 78 train 7.0493 , allloss: 7.0493, dt: 694.60ms, fracRes: 0.0043, norm(attn): 0.0967, norm(output): 0.4453, norm(x): 0.4494, norm(y): 0.9996, norm:0.9601, tok/sec: 188702.74, flops:165.28, batch-reuse:1
@ 79 train 6.7624 , allloss: 6.7624, dt: 695.76ms, fracRes: 0.0040, norm(attn): 0.0796, norm(output): 0.4336, norm(x): 0.4307, norm(y): 0.9995, norm:1.0649, tok/sec: 188388.15, flops:165.00, batch-reuse:1
@ 80 train 6.7871 , allloss: 6.7871, dt: 698.01ms, fracRes: 0.0038, norm(attn): 0.1021, norm(output): 0.4453, norm(x): 0.4537, norm(y): 0.9996, norm:1.1181, tok/sec: 187778.78, flops:164.47, batch-reuse:1
@ 81 train 6.8002 , allloss: 6.8002, dt: 692.70ms, fracRes: 0.0039, norm(attn): 0.0908, norm(output): 0.4688, norm(x): 0.4660, norm(y): 0.9995, norm:0.6331, tok/sec: 189218.83, flops:165.73, batch-reuse:1
@ 82 train 6.7766 , allloss: 6.7766, dt: 690.32ms, fracRes: 0.0042, norm(attn): 0.0928, norm(output): 0.4824, norm(x): 0.4882, norm(y): 0.9995, norm:0.7347, tok/sec: 189870.18, flops:166.30, batch-reuse:1
@ 83 train 6.7354 , allloss: 6.7354, dt: 694.56ms, fracRes: 0.0042, norm(attn): 0.0923, norm(output): 0.4766, norm(x): 0.4836, norm(y): 0.9995, norm:0.5888, tok/sec: 188712.13, flops:165.28, batch-reuse:1
@ 84 train 6.7735 , allloss: 6.7735, dt: 702.29ms, fracRes: 0.0046, norm(attn): 0.0957, norm(output): 0.4922, norm(x): 0.4928, norm(y): 0.9995, norm:0.5449, tok/sec: 186634.06, flops:163.46, batch-reuse:1
@ 85 train 6.7055 , allloss: 6.7055, dt: 699.68ms, fracRes: 0.0045, norm(attn): 0.0972, norm(output): 0.4941, norm(x): 0.4964, norm(y): 0.9995, norm:0.5112, tok/sec: 187330.18, flops:164.07, batch-reuse:1
@ 86 train 6.6680 , allloss: 6.6680, dt: 702.65ms, fracRes: 0.0042, norm(attn): 0.0938, norm(output): 0.4883, norm(x): 0.4898, norm(y): 0.9995, norm:0.4724, tok/sec: 186539.89, flops:163.38, batch-reuse:1
@ 87 train 6.7297 , allloss: 6.7297, dt: 698.35ms, fracRes: 0.0041, norm(attn): 0.0996, norm(output): 0.5000, norm(x): 0.5043, norm(y): 0.9995, norm:0.5220, tok/sec: 187686.85, flops:164.39, batch-reuse:1
@ 88 train 6.7164 , allloss: 6.7164, dt: 694.03ms, fracRes: 0.0039, norm(attn): 0.0884, norm(output): 0.4707, norm(x): 0.4720, norm(y): 0.9994, norm:0.8156, tok/sec: 188855.40, flops:165.41, batch-reuse:1
@ 89 train 6.6885 , allloss: 6.6885, dt: 693.15ms, fracRes: 0.0040, norm(attn): 0.1113, norm(output): 0.5352, norm(x): 0.5371, norm(y): 0.9995, norm:0.9726, tok/sec: 189095.95, flops:165.62, batch-reuse:1
@ 90 train 6.6657 , allloss: 6.6657, dt: 702.27ms, fracRes: 0.0041, norm(attn): 0.1055, norm(output): 0.5273, norm(x): 0.5286, norm(y): 0.9995, norm:0.6949, tok/sec: 186640.96, flops:163.47, batch-reuse:1
@ 91 train 6.6755 , allloss: 6.6755, dt: 705.63ms, fracRes: 0.0038, norm(attn): 0.1025, norm(output): 0.5273, norm(x): 0.5277, norm(y): 0.9995, norm:0.8916, tok/sec: 185752.41, flops:162.69, batch-reuse:1
@ 92 train 6.6267 , allloss: 6.6267, dt: 688.96ms, fracRes: 0.0041, norm(attn): 0.1187, norm(output): 0.5625, norm(x): 0.5658, norm(y): 0.9995, norm:0.5994, tok/sec: 190246.21, flops:166.63, batch-reuse:1
@ 93 train 6.6243 , allloss: 6.6243, dt: 709.28ms, fracRes: 0.0041, norm(attn): 0.1230, norm(output): 0.5703, norm(x): 0.5781, norm(y): 0.9995, norm:0.8047, tok/sec: 184796.72, flops:161.86, batch-reuse:1
@ 94 train 6.8872 , allloss: 6.8872, dt: 686.93ms, fracRes: 0.0041, norm(attn): 0.1201, norm(output): 0.5703, norm(x): 0.5703, norm(y): 0.9995, norm:0.8700, tok/sec: 190808.00, flops:167.12, batch-reuse:1
@ 95 train 6.6312 , allloss: 6.6312, dt: 698.40ms, fracRes: 0.0039, norm(attn): 0.1104, norm(output): 0.5547, norm(x): 0.5554, norm(y): 0.9995, norm:0.6929, tok/sec: 187674.81, flops:164.38, batch-reuse:1
@ 96 train 6.4968 , allloss: 6.4968, dt: 688.23ms, fracRes: 0.0041, norm(attn): 0.1206, norm(output): 0.5664, norm(x): 0.5716, norm(y): 0.9995, norm:0.6124, tok/sec: 190446.96, flops:166.80, batch-reuse:1
@ 97 train 6.5646 , allloss: 6.5646, dt: 691.09ms, fracRes: 0.0044, norm(attn): 0.1270, norm(output): 0.5781, norm(x): 0.5826, norm(y): 0.9994, norm:0.6160, tok/sec: 189660.50, flops:166.12, batch-reuse:1
@ 98 train 6.6338 , allloss: 6.6338, dt: 705.85ms, fracRes: 0.0043, norm(attn): 0.1260, norm(output): 0.5781, norm(x): 0.5828, norm(y): 0.9994, norm:0.6590, tok/sec: 185694.25, flops:162.64, batch-reuse:1
@ 99 train 6.5262 , allloss: 6.5262, dt: 697.67ms, fracRes: 0.0044, norm(attn): 0.1250, norm(output): 0.5703, norm(x): 0.5778, norm(y): 0.9994, norm:0.5730, tok/sec: 187870.55, flops:164.55, batch-reuse:1
@ 100 train 6.5531 , allloss: 6.5531, dt: 703.29ms, fracRes: 0.0047, norm(attn): 0.1279, norm(output): 0.5703, norm(x): 0.5815, norm(y): 0.9993, norm:0.6077, tok/sec: 186370.29, flops:163.23, batch-reuse:1
@ 101 train 6.4022 , allloss: 6.4022, dt: 690.89ms, fracRes: 0.0050, norm(attn): 0.1289, norm(output): 0.5859, norm(x): 0.5920, norm(y): 0.9993, norm:0.5367, tok/sec: 189714.89, flops:166.16, batch-reuse:1
@ 102 train 6.4802 , allloss: 6.4802, dt: 698.07ms, fracRes: 0.0050, norm(attn): 0.1289, norm(output): 0.5820, norm(x): 0.5890, norm(y): 0.9992, norm:0.4653, tok/sec: 187762.17, flops:164.45, batch-reuse:1
@ 103 train 6.4821 , allloss: 6.4821, dt: 695.43ms, fracRes: 0.0048, norm(attn): 0.1279, norm(output): 0.5703, norm(x): 0.5724, norm(y): 0.9992, norm:0.5412, tok/sec: 188477.02, flops:165.08, batch-reuse:1
@ 104 train 6.5645 , allloss: 6.5645, dt: 703.98ms, fracRes: 0.0046, norm(attn): 0.1235, norm(output): 0.5859, norm(x): 0.5857, norm(y): 0.9992, norm:0.4094, tok/sec: 186188.19, flops:163.07, batch-reuse:1
@ 105 train 6.5421 , allloss: 6.5421, dt: 697.24ms, fracRes: 0.0046, norm(attn): 0.1279, norm(output): 0.5938, norm(x): 0.5974, norm(y): 0.9991, norm:0.3396, tok/sec: 187986.82, flops:164.65, batch-reuse:1
@ 106 train 6.4321 , allloss: 6.4321, dt: 702.50ms, fracRes: 0.0045, norm(attn): 0.1270, norm(output): 0.5859, norm(x): 0.5911, norm(y): 0.9991, norm:0.4205, tok/sec: 186579.20, flops:163.42, batch-reuse:1
@ 107 train 6.4554 , allloss: 6.4554, dt: 692.29ms, fracRes: 0.0043, norm(attn): 0.1206, norm(output): 0.5820, norm(x): 0.5826, norm(y): 0.9991, norm:0.4093, tok/sec: 189331.37, flops:165.83, batch-reuse:1
@ 108 train 6.4250 , allloss: 6.4250, dt: 707.04ms, fracRes: 0.0046, norm(attn): 0.1318, norm(output): 0.6016, norm(x): 0.6073, norm(y): 0.9991, norm:0.4649, tok/sec: 185380.35, flops:162.37, batch-reuse:1
@ 109 train 6.4185 , allloss: 6.4185, dt: 685.67ms, fracRes: 0.0046, norm(attn): 0.1357, norm(output): 0.6133, norm(x): 0.6158, norm(y): 0.9990, norm:0.3568, tok/sec: 191160.30, flops:167.43, batch-reuse:1
@ 110 train 6.4220 , allloss: 6.4220, dt: 692.85ms, fracRes: 0.0044, norm(attn): 0.1318, norm(output): 0.6055, norm(x): 0.6082, norm(y): 0.9990, norm:0.3504, tok/sec: 189177.35, flops:165.69, batch-reuse:1
@ 111 train 6.4384 , allloss: 6.4384, dt: 689.74ms, fracRes: 0.0043, norm(attn): 0.1299, norm(output): 0.6016, norm(x): 0.6004, norm(y): 0.9990, norm:0.3413, tok/sec: 190030.25, flops:166.44, batch-reuse:1
@ 112 train 6.4592 , allloss: 6.4592, dt: 688.46ms, fracRes: 0.0043, norm(attn): 0.1338, norm(output): 0.6016, norm(x): 0.6030, norm(y): 0.9990, norm:0.3907, tok/sec: 190383.58, flops:166.75, batch-reuse:1
@ 113 train 6.4128 , allloss: 6.4128, dt: 701.17ms, fracRes: 0.0043, norm(attn): 0.1309, norm(output): 0.5938, norm(x): 0.5994, norm(y): 0.9990, norm:0.3717, tok/sec: 186934.42, flops:163.73, batch-reuse:1
@ 114 train 6.4143 , allloss: 6.4143, dt: 703.50ms, fracRes: 0.0043, norm(attn): 0.1318, norm(output): 0.5977, norm(x): 0.5981, norm(y): 0.9990, norm:0.3488, tok/sec: 186314.32, flops:163.18, batch-reuse:1
@ 115 train 6.3437 , allloss: 6.3437, dt: 709.21ms, fracRes: 0.0044, norm(attn): 0.1348, norm(output): 0.6016, norm(x): 0.5980, norm(y): 0.9990, norm:0.3477, tok/sec: 184814.92, flops:161.87, batch-reuse:1
@ 116 train 6.3315 , allloss: 6.3315, dt: 699.62ms, fracRes: 0.0045, norm(attn): 0.1387, norm(output): 0.6016, norm(x): 0.6031, norm(y): 0.9990, norm:0.3608, tok/sec: 187347.61, flops:164.09, batch-reuse:1
@ 117 train 6.3595 , allloss: 6.3595, dt: 700.14ms, fracRes: 0.0044, norm(attn): 0.1348, norm(output): 0.6016, norm(x): 0.6042, norm(y): 0.9990, norm:0.3843, tok/sec: 187208.72, flops:163.97, batch-reuse:1
@ 118 train 6.3605 , allloss: 6.3605, dt: 698.66ms, fracRes: 0.0042, norm(attn): 0.1348, norm(output): 0.6016, norm(x): 0.6010, norm(y): 0.9990, norm:0.3130, tok/sec: 187605.64, flops:164.32, batch-reuse:1
@ 119 train 6.3098 , allloss: 6.3098, dt: 684.46ms, fracRes: 0.0042, norm(attn): 0.1299, norm(output): 0.5938, norm(x): 0.5923, norm(y): 0.9989, norm:0.4072, tok/sec: 191498.10, flops:167.72, batch-reuse:1
@ 120 train 6.4592 , allloss: 6.4592, dt: 698.91ms, fracRes: 0.0042, norm(attn): 0.1318, norm(output): 0.5938, norm(x): 0.5941, norm(y): 0.9989, norm:0.3502, tok/sec: 187536.91, flops:164.26, batch-reuse:1
@ 121 train 6.5145 , allloss: 6.5145, dt: 695.01ms, fracRes: 0.0041, norm(attn): 0.1387, norm(output): 0.5938, norm(x): 0.5928, norm(y): 0.9989, norm:0.4048, tok/sec: 188589.46, flops:165.18, batch-reuse:1
@ 122 train 6.4892 , allloss: 6.4892, dt: 697.27ms, fracRes: 0.0042, norm(attn): 0.1328, norm(output): 0.5859, norm(x): 0.5883, norm(y): 0.9988, norm:0.3619, tok/sec: 187978.60, flops:164.64, batch-reuse:1
@ 123 train 6.3578 , allloss: 6.3578, dt: 700.07ms, fracRes: 0.0043, norm(attn): 0.1416, norm(output): 0.5938, norm(x): 0.5971, norm(y): 0.9988, norm:0.3337, tok/sec: 187228.04, flops:163.98, batch-reuse:1
@ 124 train 6.3906 , allloss: 6.3906, dt: 695.19ms, fracRes: 0.0045, norm(attn): 0.1455, norm(output): 0.6016, norm(x): 0.6042, norm(y): 0.9987, norm:0.3242, tok/sec: 188541.02, flops:165.13, batch-reuse:1
@ 125 train 6.4155 , allloss: 6.4155, dt: 695.24ms, fracRes: 0.0046, norm(attn): 0.1455, norm(output): 0.6094, norm(x): 0.6074, norm(y): 0.9987, norm:0.4099, tok/sec: 188527.37, flops:165.12, batch-reuse:1
@ 126 train 6.4161 , allloss: 6.4161, dt: 701.88ms, fracRes: 0.0046, norm(attn): 0.1494, norm(output): 0.6055, norm(x): 0.6073, norm(y): 0.9986, norm:0.5735, tok/sec: 186744.37, flops:163.56, batch-reuse:1
@ 127 train 6.3521 , allloss: 6.3521, dt: 704.87ms, fracRes: 0.0045, norm(attn): 0.1396, norm(output): 0.6016, norm(x): 0.6046, norm(y): 0.9988, norm:0.9684, tok/sec: 185951.02, flops:162.87, batch-reuse:1
@ 128 train 6.3303 , allloss: 6.3303, dt: 701.08ms, fracRes: 0.0041, norm(attn): 0.1289, norm(output): 0.5859, norm(x): 0.5890, norm(y): 0.9987, norm:0.7420, tok/sec: 186957.94, flops:163.75, batch-reuse:1
@ 129 train 6.4382 , allloss: 6.4382, dt: 699.48ms, fracRes: 0.0044, norm(attn): 0.1426, norm(output): 0.6211, norm(x): 0.6168, norm(y): 0.9987, norm:0.6963, tok/sec: 187384.71, flops:164.12, batch-reuse:1
@ 130 train 6.4329 , allloss: 6.4329, dt: 700.28ms, fracRes: 0.0043, norm(attn): 0.1436, norm(output): 0.6211, norm(x): 0.6200, norm(y): 0.9987, norm:0.5341, tok/sec: 187171.94, flops:163.94, batch-reuse:1
@ 131 train 6.4313 , allloss: 6.4313, dt: 684.34ms, fracRes: 0.0040, norm(attn): 0.1387, norm(output): 0.6133, norm(x): 0.6122, norm(y): 0.9987, norm:0.6109, tok/sec: 191529.32, flops:167.75, batch-reuse:1
@ 132 train 6.4872 , allloss: 6.4872, dt: 697.60ms, fracRes: 0.0038, norm(attn): 0.1484, norm(output): 0.6250, norm(x): 0.6247, norm(y): 0.9987, norm:0.6990, tok/sec: 187890.58, flops:164.57, batch-reuse:1
@ 133 train 6.3734 , allloss: 6.3734, dt: 685.26ms, fracRes: 0.0039, norm(attn): 0.1514, norm(output): 0.6328, norm(x): 0.6367, norm(y): 0.9986, norm:0.5994, tok/sec: 191274.57, flops:167.53, batch-reuse:1
@ 134 train 6.4398 , allloss: 6.4398, dt: 700.21ms, fracRes: 0.0039, norm(attn): 0.1562, norm(output): 0.6367, norm(x): 0.6416, norm(y): 0.9986, norm:0.4800, tok/sec: 187190.87, flops:163.95, batch-reuse:1
@ 135 train 6.3097 , allloss: 6.3097, dt: 688.15ms, fracRes: 0.0039, norm(attn): 0.1465, norm(output): 0.6250, norm(x): 0.6303, norm(y): 0.9986, norm:0.5354, tok/sec: 190470.52, flops:166.82, batch-reuse:1
@ 136 train 6.3458 , allloss: 6.3458, dt: 698.38ms, fracRes: 0.0040, norm(attn): 0.1494, norm(output): 0.6250, norm(x): 0.6296, norm(y): 0.9985, norm:0.4170, tok/sec: 187681.02, flops:164.38, batch-reuse:1
@ 137 train 6.2313 , allloss: 6.2313, dt: 703.06ms, fracRes: 0.0040, norm(attn): 0.1523, norm(output): 0.6289, norm(x): 0.6341, norm(y): 0.9985, norm:0.5154, tok/sec: 186430.45, flops:163.29, batch-reuse:1
@ 138 train 6.2463 , allloss: 6.2463, dt: 700.22ms, fracRes: 0.0040, norm(attn): 0.1533, norm(output): 0.6250, norm(x): 0.6256, norm(y): 0.9985, norm:0.4103, tok/sec: 187187.30, flops:163.95, batch-reuse:1
@ 139 train 6.2269 , allloss: 6.2269, dt: 698.38ms, fracRes: 0.0042, norm(attn): 0.1523, norm(output): 0.6250, norm(x): 0.6297, norm(y): 0.9985, norm:0.4356, tok/sec: 187680.13, flops:164.38, batch-reuse:1
@ 140 train 6.2382 , allloss: 6.2382, dt: 702.66ms, fracRes: 0.0041, norm(attn): 0.1514, norm(output): 0.6328, norm(x): 0.6363, norm(y): 0.9985, norm:0.6017, tok/sec: 186535.90, flops:163.38, batch-reuse:1
@ 141 train 6.2205 , allloss: 6.2205, dt: 714.14ms, fracRes: 0.0040, norm(attn): 0.1484, norm(output): 0.6211, norm(x): 0.6212, norm(y): 0.9984, norm:0.4240, tok/sec: 183537.52, flops:160.75, batch-reuse:1
@ 142 train 6.3094 , allloss: 6.3094, dt: 696.16ms, fracRes: 0.0041, norm(attn): 0.1475, norm(output): 0.6250, norm(x): 0.6258, norm(y): 0.9984, norm:0.4161, tok/sec: 188278.15, flops:164.90, batch-reuse:1
@ 143 train 6.2490 , allloss: 6.2490, dt: 686.47ms, fracRes: 0.0042, norm(attn): 0.1533, norm(output): 0.6289, norm(x): 0.6325, norm(y): 0.9984, norm:0.3661, tok/sec: 190935.04, flops:167.23, batch-reuse:1
@ 144 train 6.2317 , allloss: 6.2317, dt: 688.22ms, fracRes: 0.0040, norm(attn): 0.1504, norm(output): 0.6289, norm(x): 0.6284, norm(y): 0.9984, norm:0.3464, tok/sec: 190451.38, flops:166.81, batch-reuse:1
@ 145 train 6.2308 , allloss: 6.2308, dt: 696.54ms, fracRes: 0.0039, norm(attn): 0.1475, norm(output): 0.6211, norm(x): 0.6201, norm(y): 0.9983, norm:0.3772, tok/sec: 188177.03, flops:164.82, batch-reuse:1
@ 146 train 6.3985 , allloss: 6.3985, dt: 697.27ms, fracRes: 0.0039, norm(attn): 0.1592, norm(output): 0.6250, norm(x): 0.6307, norm(y): 0.9983, norm:0.4194, tok/sec: 187977.76, flops:164.64, batch-reuse:1
@ 147 train 6.2583 , allloss: 6.2583, dt: 702.65ms, fracRes: 0.0039, norm(attn): 0.1514, norm(output): 0.6250, norm(x): 0.6254, norm(y): 0.9983, norm:0.5366, tok/sec: 186538.88, flops:163.38, batch-reuse:1
@ 148 train 6.2190 , allloss: 6.2190, dt: 699.91ms, fracRes: 0.0042, norm(attn): 0.1631, norm(output): 0.6289, norm(x): 0.6328, norm(y): 0.9983, norm:0.5735, tok/sec: 187269.30, flops:164.02, batch-reuse:1
@ 149 train 6.0935 , allloss: 6.0935, dt: 699.18ms, fracRes: 0.0045, norm(attn): 0.1426, norm(output): 0.6250, norm(x): 0.6231, norm(y): 0.9983, norm:0.4495, tok/sec: 187465.86, flops:164.19, batch-reuse:1
@ 150 train 6.3307 , allloss: 6.3307, dt: 698.77ms, fracRes: 0.0055, norm(attn): 0.1504, norm(output): 0.6289, norm(x): 0.6363, norm(y): 0.9983, norm:0.4218, tok/sec: 187576.26, flops:164.29, batch-reuse:1
@ 151 train 6.1202 , allloss: 6.1202, dt: 691.39ms, fracRes: 0.0054, norm(attn): 0.1533, norm(output): 0.6328, norm(x): 0.6400, norm(y): 0.9982, norm:0.3897, tok/sec: 189577.51, flops:166.04, batch-reuse:1
@ 152 train 6.1534 , allloss: 6.1534, dt: 695.92ms, fracRes: 0.0041, norm(attn): 0.1465, norm(output): 0.6250, norm(x): 0.6308, norm(y): 0.9982, norm:0.5950, tok/sec: 188342.85, flops:164.96, batch-reuse:1
@ 153 train 6.1096 , allloss: 6.1096, dt: 683.36ms, fracRes: 0.0036, norm(attn): 0.1455, norm(output): 0.6328, norm(x): 0.6336, norm(y): 0.9982, norm:0.5917, tok/sec: 191805.91, flops:167.99, batch-reuse:1
@ 154 train 6.2019 , allloss: 6.2019, dt: 706.01ms, fracRes: 0.0036, norm(attn): 0.1514, norm(output): 0.6328, norm(x): 0.6367, norm(y): 0.9981, norm:0.4688, tok/sec: 185650.67, flops:162.60, batch-reuse:1
@ 155 train 6.3657 , allloss: 6.3657, dt: 722.94ms, fracRes: 0.0037, norm(attn): 0.1455, norm(output): 0.6289, norm(x): 0.6333, norm(y): 0.9981, norm:0.4907, tok/sec: 181303.65, flops:158.80, batch-reuse:1
@ 156 train 6.1737 , allloss: 6.1737, dt: 722.27ms, fracRes: 0.0037, norm(attn): 0.1533, norm(output): 0.6406, norm(x): 0.6413, norm(y): 0.9981, norm:0.4293, tok/sec: 181472.78, flops:158.94, batch-reuse:1
@ 157 train 6.2909 , allloss: 6.2909, dt: 717.82ms, fracRes: 0.0038, norm(attn): 0.1582, norm(output): 0.6367, norm(x): 0.6431, norm(y): 0.9981, norm:0.5001, tok/sec: 182598.11, flops:159.93, batch-reuse:1
@ 158 train 6.2394 , allloss: 6.2394, dt: 711.13ms, fracRes: 0.0039, norm(attn): 0.1504, norm(output): 0.6289, norm(x): 0.6308, norm(y): 0.9980, norm:0.4300, tok/sec: 184314.88, flops:161.43, batch-reuse:1
@ 159 train 6.2798 , allloss: 6.2798, dt: 709.88ms, fracRes: 0.0040, norm(attn): 0.1553, norm(output): 0.6289, norm(x): 0.6350, norm(y): 0.9980, norm:0.4500, tok/sec: 184639.19, flops:161.72, batch-reuse:1
@ 160 train 6.1637 , allloss: 6.1637, dt: 708.54ms, fracRes: 0.0040, norm(attn): 0.1523, norm(output): 0.6250, norm(x): 0.6260, norm(y): 0.9980, norm:0.3824, tok/sec: 184987.93, flops:162.02, batch-reuse:1
@ 161 train 6.1538 , allloss: 6.1538, dt: 707.59ms, fracRes: 0.0040, norm(attn): 0.1562, norm(output): 0.6211, norm(x): 0.6211, norm(y): 0.9979, norm:0.4227, tok/sec: 185236.81, flops:162.24, batch-reuse:1
@ 162 train 6.2980 , allloss: 6.2980, dt: 701.97ms, fracRes: 0.0042, norm(attn): 0.1562, norm(output): 0.6289, norm(x): 0.6308, norm(y): 0.9979, norm:0.3693, tok/sec: 186720.14, flops:163.54, batch-reuse:1
@ 163 train 6.1913 , allloss: 6.1913, dt: 712.33ms, fracRes: 0.0044, norm(attn): 0.1543, norm(output): 0.6250, norm(x): 0.6286, norm(y): 0.9978, norm:0.3879, tok/sec: 184005.38, flops:161.16, batch-reuse:1
@ 164 train 6.1107 , allloss: 6.1107, dt: 715.62ms, fracRes: 0.0043, norm(attn): 0.1484, norm(output): 0.6211, norm(x): 0.6190, norm(y): 0.9978, norm:0.4309, tok/sec: 183157.86, flops:160.42, batch-reuse:1
@ 165 train 6.2323 , allloss: 6.2323, dt: 716.19ms, fracRes: 0.0044, norm(attn): 0.1523, norm(output): 0.6328, norm(x): 0.6341, norm(y): 0.9978, norm:0.5266, tok/sec: 183013.78, flops:160.29, batch-reuse:1
@ 166 train 6.2039 , allloss: 6.2039, dt: 708.63ms, fracRes: 0.0042, norm(attn): 0.1475, norm(output): 0.6250, norm(x): 0.6310, norm(y): 0.9978, norm:0.5099, tok/sec: 184965.15, flops:162.00, batch-reuse:1
@ 167 train 6.2616 , allloss: 6.2616, dt: 707.00ms, fracRes: 0.0042, norm(attn): 0.1582, norm(output): 0.6328, norm(x): 0.6391, norm(y): 0.9978, norm:0.6163, tok/sec: 185392.79, flops:162.38, batch-reuse:1
@ 168 train 6.1055 , allloss: 6.1055, dt: 708.31ms, fracRes: 0.0042, norm(attn): 0.1504, norm(output): 0.6250, norm(x): 0.6303, norm(y): 0.9977, norm:0.4336, tok/sec: 185048.33, flops:162.08, batch-reuse:1
@ 169 train 6.1512 , allloss: 6.1512, dt: 709.14ms, fracRes: 0.0041, norm(attn): 0.1543, norm(output): 0.6250, norm(x): 0.6314, norm(y): 0.9977, norm:0.4409, tok/sec: 184831.88, flops:161.89, batch-reuse:1
@ 170 train 6.1400 , allloss: 6.1400, dt: 709.52ms, fracRes: 0.0041, norm(attn): 0.1562, norm(output): 0.6289, norm(x): 0.6398, norm(y): 0.9977, norm:0.5385, tok/sec: 184733.87, flops:161.80, batch-reuse:1
@ 171 train 6.1223 , allloss: 6.1223, dt: 710.49ms, fracRes: 0.0039, norm(attn): 0.1504, norm(output): 0.6250, norm(x): 0.6310, norm(y): 0.9977, norm:0.3745, tok/sec: 184481.07, flops:161.58, batch-reuse:1
@ 172 train 6.1606 , allloss: 6.1606, dt: 709.06ms, fracRes: 0.0039, norm(attn): 0.1562, norm(output): 0.6328, norm(x): 0.6391, norm(y): 0.9976, norm:0.3916, tok/sec: 184854.07, flops:161.91, batch-reuse:1
@ 173 train 6.1450 , allloss: 6.1450, dt: 700.09ms, fracRes: 0.0039, norm(attn): 0.1680, norm(output): 0.6484, norm(x): 0.6504, norm(y): 0.9975, norm:0.4299, tok/sec: 187220.64, flops:163.98, batch-reuse:1
@ 174 train 6.2949 , allloss: 6.2949, dt: 697.14ms, fracRes: 0.0038, norm(attn): 0.1621, norm(output): 0.6328, norm(x): 0.6415, norm(y): 0.9975, norm:0.5780, tok/sec: 188014.86, flops:164.67, batch-reuse:1
@ 175 train 6.1831 , allloss: 6.1831, dt: 699.07ms, fracRes: 0.0036, norm(attn): 0.1641, norm(output): 0.6289, norm(x): 0.6342, norm(y): 0.9975, norm:1.3826, tok/sec: 187495.01, flops:164.22, batch-reuse:1
@ 176 train 6.2215 , allloss: 6.2215, dt: 689.03ms, fracRes: 0.0038, norm(attn): 0.1689, norm(output): 0.6562, norm(x): 0.6580, norm(y): 0.9976, norm:0.5394, tok/sec: 190226.33, flops:166.61, batch-reuse:1
@ 177 train 6.1759 , allloss: 6.1759, dt: 707.90ms, fracRes: 0.0041, norm(attn): 0.1729, norm(output): 0.6641, norm(x): 0.6629, norm(y): 0.9976, norm:0.5496, tok/sec: 185157.14, flops:162.17, batch-reuse:1
@ 178 train 6.2187 , allloss: 6.2187, dt: 721.37ms, fracRes: 0.0039, norm(attn): 0.1787, norm(output): 0.6602, norm(x): 0.6609, norm(y): 0.9975, norm:0.5370, tok/sec: 181697.46, flops:159.14, batch-reuse:1
@ 179 train 6.0921 , allloss: 6.0921, dt: 706.38ms, fracRes: 0.0040, norm(attn): 0.1816, norm(output): 0.6680, norm(x): 0.6688, norm(y): 0.9975, norm:0.4882, tok/sec: 185555.42, flops:162.52, batch-reuse:1
@ 180 train 6.2023 , allloss: 6.2023, dt: 705.47ms, fracRes: 0.0043, norm(attn): 0.1748, norm(output): 0.6719, norm(x): 0.6683, norm(y): 0.9974, norm:0.5139, tok/sec: 185794.41, flops:162.73, batch-reuse:1
@ 181 train 6.0803 , allloss: 6.0803, dt: 704.75ms, fracRes: 0.0041, norm(attn): 0.1699, norm(output): 0.6562, norm(x): 0.6605, norm(y): 0.9974, norm:0.4395, tok/sec: 185983.98, flops:162.90, batch-reuse:1
@ 182 train 6.1928 , allloss: 6.1928, dt: 711.45ms, fracRes: 0.0040, norm(attn): 0.1670, norm(output): 0.6680, norm(x): 0.6696, norm(y): 0.9973, norm:0.4132, tok/sec: 184232.61, flops:161.36, batch-reuse:1
@ 183 train 6.1341 , allloss: 6.1341, dt: 709.68ms, fracRes: 0.0040, norm(attn): 0.1660, norm(output): 0.6797, norm(x): 0.6783, norm(y): 0.9972, norm:0.3486, tok/sec: 184692.11, flops:161.76, batch-reuse:1
@ 184 train 6.0272 , allloss: 6.0272, dt: 692.89ms, fracRes: 0.0038, norm(attn): 0.1660, norm(output): 0.6758, norm(x): 0.6758, norm(y): 0.9972, norm:0.3140, tok/sec: 189166.81, flops:165.68, batch-reuse:1
@ 185 train 6.0613 , allloss: 6.0613, dt: 685.66ms, fracRes: 0.0039, norm(attn): 0.1709, norm(output): 0.6758, norm(x): 0.6722, norm(y): 0.9972, norm:0.4241, tok/sec: 191160.70, flops:167.43, batch-reuse:1
@ 186 train 6.2170 , allloss: 6.2170, dt: 695.95ms, fracRes: 0.0042, norm(attn): 0.1738, norm(output): 0.6562, norm(x): 0.6651, norm(y): 0.9971, norm:0.4460, tok/sec: 188335.10, flops:164.95, batch-reuse:1
@ 187 train 6.3765 , allloss: 6.3765, dt: 685.49ms, fracRes: 0.0042, norm(attn): 0.1982, norm(output): 0.6992, norm(x): 0.6997, norm(y): 0.9973, norm:0.6580, tok/sec: 191209.17, flops:167.47, batch-reuse:1
@ 188 train 6.2110 , allloss: 6.2110, dt: 699.81ms, fracRes: 0.0041, norm(attn): 0.1875, norm(output): 0.6914, norm(x): 0.6948, norm(y): 0.9972, norm:0.5161, tok/sec: 187295.40, flops:164.04, batch-reuse:1
@ 189 train 6.3425 , allloss: 6.3425, dt: 710.11ms, fracRes: 0.0047, norm(attn): 0.1963, norm(output): 0.7031, norm(x): 0.7073, norm(y): 0.9972, norm:0.6276, tok/sec: 184579.19, flops:161.66, batch-reuse:1
@ 190 train 6.2878 , allloss: 6.2878, dt: 709.39ms, fracRes: 0.0048, norm(attn): 0.1924, norm(output): 0.7305, norm(x): 0.7284, norm(y): 0.9972, norm:0.5311, tok/sec: 184766.41, flops:161.83, batch-reuse:1
@ 191 train 6.2566 , allloss: 6.2566, dt: 709.89ms, fracRes: 0.0048, norm(attn): 0.1973, norm(output): 0.7383, norm(x): 0.7403, norm(y): 0.9971, norm:0.4498, tok/sec: 184637.27, flops:161.72, batch-reuse:1
@ 192 train 6.3091 , allloss: 6.3091, dt: 699.65ms, fracRes: 0.0045, norm(attn): 0.1914, norm(output): 0.7344, norm(x): 0.7359, norm(y): 0.9972, norm:0.3494, tok/sec: 187340.39, flops:164.08, batch-reuse:1
@ 193 train 6.1908 , allloss: 6.1908, dt: 677.46ms, fracRes: 0.0045, norm(attn): 0.1963, norm(output): 0.7344, norm(x): 0.7357, norm(y): 0.9972, norm:0.4623, tok/sec: 193474.62, flops:169.46, batch-reuse:1
@ 194 train 6.3257 , allloss: 6.3257, dt: 711.00ms, fracRes: 0.0042, norm(attn): 0.2061, norm(output): 0.7500, norm(x): 0.7513, norm(y): 0.9971, norm:0.5549, tok/sec: 184348.69, flops:161.46, batch-reuse:1
@ 195 train 6.2771 , allloss: 6.2771, dt: 711.52ms, fracRes: 0.0043, norm(attn): 0.1895, norm(output): 0.7422, norm(x): 0.7398, norm(y): 0.9971, norm:0.4010, tok/sec: 184215.32, flops:161.35, batch-reuse:1
@ 196 train 6.1789 , allloss: 6.1789, dt: 707.83ms, fracRes: 0.0043, norm(attn): 0.1846, norm(output): 0.7383, norm(x): 0.7348, norm(y): 0.9971, norm:0.4434, tok/sec: 185175.67, flops:162.19, batch-reuse:1
@ 197 train 6.1865 , allloss: 6.1865, dt: 702.40ms, fracRes: 0.0041, norm(attn): 0.1904, norm(output): 0.7500, norm(x): 0.7455, norm(y): 0.9971, norm:0.4092, tok/sec: 186606.94, flops:163.44, batch-reuse:1
@ 198 train 6.1663 , allloss: 6.1663, dt: 710.43ms, fracRes: 0.0041, norm(attn): 0.1875, norm(output): 0.7461, norm(x): 0.7400, norm(y): 0.9971, norm:0.3442, tok/sec: 184497.11, flops:161.59, batch-reuse:1
@ 199 train 6.2758 , allloss: 6.2758, dt: 703.21ms, fracRes: 0.0044, norm(attn): 0.1855, norm(output): 0.7344, norm(x): 0.7324, norm(y): 0.9971, norm:0.4438, tok/sec: 186391.90, flops:163.25, batch-reuse:1
@ 200 train 6.2707 , allloss: 6.2707, dt: 698.41ms, fracRes: 0.0055, norm(attn): 0.1943, norm(output): 0.7383, norm(x): 0.7366, norm(y): 0.9971, norm:0.3475, tok/sec: 187672.63, flops:164.37, batch-reuse:1
@ 201 train 6.1789 , allloss: 6.1789, dt: 682.96ms, fracRes: 0.0048, norm(attn): 0.2051, norm(output): 0.7383, norm(x): 0.7393, norm(y): 0.9970, norm:0.3975, tok/sec: 191917.26, flops:168.09, batch-reuse:1
@ 202 train 6.2794 , allloss: 6.2794, dt: 694.57ms, fracRes: 0.0040, norm(attn): 0.1943, norm(output): 0.7266, norm(x): 0.7267, norm(y): 0.9970, norm:0.3566, tok/sec: 188709.87, flops:165.28, batch-reuse:1
@ 203 train 6.2349 , allloss: 6.2349, dt: 705.28ms, fracRes: 0.0039, norm(attn): 0.1973, norm(output): 0.7188, norm(x): 0.7210, norm(y): 0.9969, norm:0.4360, tok/sec: 185843.40, flops:162.77, batch-reuse:1
@ 204 train 6.2224 , allloss: 6.2224, dt: 704.30ms, fracRes: 0.0039, norm(attn): 0.2070, norm(output): 0.7266, norm(x): 0.7317, norm(y): 0.9969, norm:0.3557, tok/sec: 186101.52, flops:163.00, batch-reuse:1
@ 205 train 6.2151 , allloss: 6.2151, dt: 687.71ms, fracRes: 0.0039, norm(attn): 0.2070, norm(output): 0.7305, norm(x): 0.7290, norm(y): 0.9969, norm:0.4136, tok/sec: 190592.88, flops:166.93, batch-reuse:1
@ 206 train 6.2284 , allloss: 6.2284, dt: 698.61ms, fracRes: 0.0039, norm(attn): 0.2031, norm(output): 0.7266, norm(x): 0.7252, norm(y): 0.9969, norm:0.2962, tok/sec: 187618.64, flops:164.33, batch-reuse:1
@ 207 train 6.1446 , allloss: 6.1446, dt: 692.45ms, fracRes: 0.0043, norm(attn): 0.1914, norm(output): 0.7188, norm(x): 0.7155, norm(y): 0.9968, norm:0.3212, tok/sec: 189288.34, flops:165.79, batch-reuse:1
@ 208 train 6.1939 , allloss: 6.1939, dt: 706.57ms, fracRes: 0.0066, norm(attn): 0.1895, norm(output): 0.7070, norm(x): 0.7167, norm(y): 0.9968, norm:0.3803, tok/sec: 185505.46, flops:162.48, batch-reuse:1
@ 209 train 6.2530 , allloss: 6.2530, dt: 687.73ms, fracRes: 0.0046, norm(attn): 0.1904, norm(output): 0.7266, norm(x): 0.7245, norm(y): 0.9967, norm:0.3679, tok/sec: 190585.54, flops:166.93, batch-reuse:1
@ 210 train 6.2172 , allloss: 6.2172, dt: 697.95ms, fracRes: 0.0042, norm(attn): 0.1963, norm(output): 0.7188, norm(x): 0.7262, norm(y): 0.9967, norm:0.3670, tok/sec: 187795.01, flops:164.48, batch-reuse:1
@ 211 train 6.1302 , allloss: 6.1302, dt: 698.42ms, fracRes: 0.0040, norm(attn): 0.1914, norm(output): 0.7070, norm(x): 0.7202, norm(y): 0.9966, norm:0.3369, tok/sec: 187669.43, flops:164.37, batch-reuse:1
@ 212 train 6.1884 , allloss: 6.1884, dt: 708.89ms, fracRes: 0.0040, norm(attn): 0.1904, norm(output): 0.7031, norm(x): 0.7134, norm(y): 0.9966, norm:0.3268, tok/sec: 184897.09, flops:161.94, batch-reuse:1
@ 213 train 6.1351 , allloss: 6.1351, dt: 701.88ms, fracRes: 0.0038, norm(attn): 0.1895, norm(output): 0.6953, norm(x): 0.7077, norm(y): 0.9966, norm:0.4471, tok/sec: 186743.67, flops:163.56, batch-reuse:1
@ 214 train 6.1543 , allloss: 6.1543, dt: 697.55ms, fracRes: 0.0040, norm(attn): 0.1875, norm(output): 0.7031, norm(x): 0.7140, norm(y): 0.9966, norm:0.3445, tok/sec: 187902.33, flops:164.58, batch-reuse:1
@ 215 train 6.0534 , allloss: 6.0534, dt: 692.27ms, fracRes: 0.0041, norm(attn): 0.1846, norm(output): 0.6992, norm(x): 0.7105, norm(y): 0.9966, norm:0.4057, tok/sec: 189336.85, flops:165.83, batch-reuse:1
@ 216 train 6.0547 , allloss: 6.0547, dt: 702.39ms, fracRes: 0.0043, norm(attn): 0.1895, norm(output): 0.6953, norm(x): 0.7081, norm(y): 0.9965, norm:0.3380, tok/sec: 186609.54, flops:163.44, batch-reuse:1
@ 217 train 6.1424 , allloss: 6.1424, dt: 705.12ms, fracRes: 0.0046, norm(attn): 0.1895, norm(output): 0.6992, norm(x): 0.7044, norm(y): 0.9965, norm:0.3672, tok/sec: 185885.56, flops:162.81, batch-reuse:1
@ 218 train 6.0500 , allloss: 6.0500, dt: 717.24ms, fracRes: 0.0051, norm(attn): 0.1865, norm(output): 0.6914, norm(x): 0.6960, norm(y): 0.9965, norm:0.3287, tok/sec: 182744.15, flops:160.06, batch-reuse:1
@ 219 train 6.2688 , allloss: 6.2688, dt: 703.04ms, fracRes: 0.0052, norm(attn): 0.1914, norm(output): 0.7031, norm(x): 0.7096, norm(y): 0.9965, norm:0.3835, tok/sec: 186436.90, flops:163.29, batch-reuse:1
@ 220 train 6.1875 , allloss: 6.1875, dt: 696.08ms, fracRes: 0.0046, norm(attn): 0.1885, norm(output): 0.6992, norm(x): 0.7059, norm(y): 0.9964, norm:0.3363, tok/sec: 188300.72, flops:164.92, batch-reuse:1
@ 221 train 6.1011 , allloss: 6.1011, dt: 710.29ms, fracRes: 0.0045, norm(attn): 0.1973, norm(output): 0.7070, norm(x): 0.7131, norm(y): 0.9963, norm:0.5174, tok/sec: 184533.83, flops:161.62, batch-reuse:1
@ 222 train 6.1134 , allloss: 6.1134, dt: 714.26ms, fracRes: 0.0045, norm(attn): 0.1875, norm(output): 0.6953, norm(x): 0.7026, norm(y): 0.9964, norm:0.4109, tok/sec: 183508.30, flops:160.73, batch-reuse:1
@ 223 train 6.1442 , allloss: 6.1442, dt: 697.55ms, fracRes: 0.0045, norm(attn): 0.1904, norm(output): 0.6914, norm(x): 0.6991, norm(y): 0.9964, norm:0.4085, tok/sec: 187902.59, flops:164.58, batch-reuse:1
@ 224 train 6.0591 , allloss: 6.0591, dt: 699.84ms, fracRes: 0.0047, norm(attn): 0.1855, norm(output): 0.6914, norm(x): 0.6972, norm(y): 0.9964, norm:0.4254, tok/sec: 187289.65, flops:164.04, batch-reuse:1
@ 225 train 6.1417 , allloss: 6.1417, dt: 692.28ms, fracRes: 0.0046, norm(attn): 0.1816, norm(output): 0.6875, norm(x): 0.6919, norm(y): 0.9964, norm:0.4210, tok/sec: 189333.26, flops:165.83, batch-reuse:1
@ 226 train 6.1590 , allloss: 6.1590, dt: 702.86ms, fracRes: 0.0049, norm(attn): 0.1895, norm(output): 0.6953, norm(x): 0.7082, norm(y): 0.9963, norm:0.3779, tok/sec: 186484.52, flops:163.33, batch-reuse:1
@ 227 train 6.1467 , allloss: 6.1467, dt: 705.71ms, fracRes: 0.0046, norm(attn): 0.1855, norm(output): 0.6992, norm(x): 0.7048, norm(y): 0.9963, norm:0.3565, tok/sec: 185730.89, flops:162.67, batch-reuse:1
@ 228 train 6.1333 , allloss: 6.1333, dt: 701.62ms, fracRes: 0.0048, norm(attn): 0.1914, norm(output): 0.7070, norm(x): 0.7105, norm(y): 0.9963, norm:0.3702, tok/sec: 186812.90, flops:163.62, batch-reuse:1
@ 229 train 6.1643 , allloss: 6.1643, dt: 693.12ms, fracRes: 0.0047, norm(attn): 0.1875, norm(output): 0.6914, norm(x): 0.7026, norm(y): 0.9963, norm:0.3309, tok/sec: 189104.66, flops:165.63, batch-reuse:1
@ 230 train 6.1394 , allloss: 6.1394, dt: 707.75ms, fracRes: 0.0050, norm(attn): 0.1865, norm(output): 0.6992, norm(x): 0.7049, norm(y): 0.9963, norm:0.3213, tok/sec: 185194.32, flops:162.20, batch-reuse:1
@ 231 train 6.0840 , allloss: 6.0840, dt: 706.11ms, fracRes: 0.0052, norm(attn): 0.1895, norm(output): 0.6953, norm(x): 0.7010, norm(y): 0.9963, norm:0.3177, tok/sec: 185626.35, flops:162.58, batch-reuse:1
@ 232 train 6.0364 , allloss: 6.0364, dt: 707.43ms, fracRes: 0.0056, norm(attn): 0.1914, norm(output): 0.6875, norm(x): 0.6909, norm(y): 0.9962, norm:0.3497, tok/sec: 185279.64, flops:162.28, batch-reuse:1
@ 233 train 6.1287 , allloss: 6.1287, dt: 694.89ms, fracRes: 0.0053, norm(attn): 0.1934, norm(output): 0.6914, norm(x): 0.6990, norm(y): 0.9962, norm:0.4235, tok/sec: 188623.95, flops:165.21, batch-reuse:1
@ 234 train 5.9856 , allloss: 5.9856, dt: 690.09ms, fracRes: 0.0051, norm(attn): 0.1885, norm(output): 0.6836, norm(x): 0.6884, norm(y): 0.9963, norm:0.3877, tok/sec: 189935.06, flops:166.36, batch-reuse:1
@ 235 train 6.1030 , allloss: 6.1030, dt: 703.70ms, fracRes: 0.0058, norm(attn): 0.1934, norm(output): 0.6914, norm(x): 0.6990, norm(y): 0.9962, norm:0.3798, tok/sec: 186262.50, flops:163.14, batch-reuse:1
@ 236 train 6.0096 , allloss: 6.0096, dt: 703.63ms, fracRes: 0.0055, norm(attn): 0.2002, norm(output): 0.6914, norm(x): 0.6995, norm(y): 0.9962, norm:0.3636, tok/sec: 186279.35, flops:163.15, batch-reuse:1
@ 237 train 6.0982 , allloss: 6.0982, dt: 694.88ms, fracRes: 0.0056, norm(attn): 0.1963, norm(output): 0.6875, norm(x): 0.6946, norm(y): 0.9962, norm:0.4044, tok/sec: 188625.37, flops:165.21, batch-reuse:1
@ 238 train 6.0636 , allloss: 6.0636, dt: 696.79ms, fracRes: 0.0060, norm(attn): 0.1953, norm(output): 0.6875, norm(x): 0.6915, norm(y): 0.9962, norm:0.3758, tok/sec: 188107.62, flops:164.76, batch-reuse:1
@ 239 train 6.0517 , allloss: 6.0517, dt: 692.71ms, fracRes: 0.0058, norm(attn): 0.2002, norm(output): 0.6875, norm(x): 0.6919, norm(y): 0.9961, norm:0.3322, tok/sec: 189217.46, flops:165.73, batch-reuse:1
@ 240 train 6.1074 , allloss: 6.1074, dt: 701.09ms, fracRes: 0.0058, norm(attn): 0.2070, norm(output): 0.6836, norm(x): 0.6868, norm(y): 0.9960, norm:0.3798, tok/sec: 186954.26, flops:163.74, batch-reuse:1
@ 241 train 6.0875 , allloss: 6.0875, dt: 697.66ms, fracRes: 0.0056, norm(attn): 0.2051, norm(output): 0.6875, norm(x): 0.6913, norm(y): 0.9961, norm:0.3978, tok/sec: 187872.41, flops:164.55, batch-reuse:1
@ 242 train 6.0616 , allloss: 6.0616, dt: 684.94ms, fracRes: 0.0058, norm(attn): 0.1982, norm(output): 0.6875, norm(x): 0.6898, norm(y): 0.9959, norm:0.4781, tok/sec: 191362.45, flops:167.61, batch-reuse:1
@ 243 train 5.9813 , allloss: 5.9813, dt: 692.75ms, fracRes: 0.0063, norm(attn): 0.2002, norm(output): 0.6875, norm(x): 0.6950, norm(y): 0.9960, norm:0.3741, tok/sec: 189206.26, flops:165.72, batch-reuse:1
@ 244 train 6.0899 , allloss: 6.0899, dt: 697.89ms, fracRes: 0.0069, norm(attn): 0.1924, norm(output): 0.6875, norm(x): 0.6950, norm(y): 0.9959, norm:0.3619, tok/sec: 187812.78, flops:164.50, batch-reuse:1
@ 245 train 5.8851 , allloss: 5.8851, dt: 698.75ms, fracRes: 0.0073, norm(attn): 0.1934, norm(output): 0.6914, norm(x): 0.6920, norm(y): 0.9960, norm:0.4257, tok/sec: 187580.23, flops:164.29, batch-reuse:1
@ 246 train 6.1610 , allloss: 6.1610, dt: 699.13ms, fracRes: 0.0074, norm(attn): 0.2031, norm(output): 0.7031, norm(x): 0.7068, norm(y): 0.9960, norm:0.4328, tok/sec: 187479.79, flops:164.21, batch-reuse:1
@ 247 train 6.0543 , allloss: 6.0543, dt: 689.52ms, fracRes: 0.0070, norm(attn): 0.1953, norm(output): 0.6953, norm(x): 0.7018, norm(y): 0.9959, norm:0.4533, tok/sec: 190092.48, flops:166.49, batch-reuse:1
@ 248 train 5.9896 , allloss: 5.9896, dt: 702.21ms, fracRes: 0.0066, norm(attn): 0.2041, norm(output): 0.6914, norm(x): 0.7004, norm(y): 0.9959, norm:0.3248, tok/sec: 186655.48, flops:163.48, batch-reuse:1
@ 249 train 5.9812 , allloss: 5.9812, dt: 707.85ms, fracRes: 0.0071, norm(attn): 0.2061, norm(output): 0.6914, norm(x): 0.6983, norm(y): 0.9959, norm:0.4231, tok/sec: 185169.18, flops:162.18, batch-reuse:1
@ 250 train 6.0581 , allloss: 6.0581, dt: 712.00ms, fracRes: 0.0073, norm(attn): 0.1982, norm(output): 0.6914, norm(x): 0.6940, norm(y): 0.9959, norm:0.4889, tok/sec: 184089.61, flops:161.24, batch-reuse:1
@ 251 train 5.9747 , allloss: 5.9747, dt: 697.40ms, fracRes: 0.0080, norm(attn): 0.1992, norm(output): 0.6875, norm(x): 0.6935, norm(y): 0.9959, norm:0.3676, tok/sec: 187944.60, flops:164.61, batch-reuse:1
@ 252 train 6.1050 , allloss: 6.1050, dt: 691.84ms, fracRes: 0.0080, norm(attn): 0.1973, norm(output): 0.6875, norm(x): 0.6940, norm(y): 0.9959, norm:0.4308, tok/sec: 189453.44, flops:165.93, batch-reuse:1
@ 253 train 6.0026 , allloss: 6.0026, dt: 701.85ms, fracRes: 0.0086, norm(attn): 0.1953, norm(output): 0.6875, norm(x): 0.6900, norm(y): 0.9959, norm:0.4901, tok/sec: 186751.54, flops:163.57, batch-reuse:1
@ 254 train 5.9311 , allloss: 5.9311, dt: 689.06ms, fracRes: 0.0080, norm(attn): 0.2012, norm(output): 0.6953, norm(x): 0.7018, norm(y): 0.9958, norm:0.4253, tok/sec: 190218.17, flops:166.60, batch-reuse:1
@ 255 train 5.9357 , allloss: 5.9357, dt: 689.26ms, fracRes: 0.0085, norm(attn): 0.2002, norm(output): 0.6914, norm(x): 0.6982, norm(y): 0.9958, norm:0.3442, tok/sec: 190163.82, flops:166.56, batch-reuse:1
@ 256 train 6.0001 , allloss: 6.0001, dt: 695.09ms, fracRes: 0.0079, norm(attn): 0.2021, norm(output): 0.6914, norm(x): 0.6973, norm(y): 0.9958, norm:0.3440, tok/sec: 188567.53, flops:165.16, batch-reuse:1
@ 257 train 5.9890 , allloss: 5.9890, dt: 701.26ms, fracRes: 0.0084, norm(attn): 0.2080, norm(output): 0.6953, norm(x): 0.7072, norm(y): 0.9958, norm:0.3340, tok/sec: 186909.00, flops:163.71, batch-reuse:1
@ 258 train 5.9268 , allloss: 5.9268, dt: 691.93ms, fracRes: 0.0092, norm(attn): 0.2070, norm(output): 0.6914, norm(x): 0.7084, norm(y): 0.9958, norm:0.3151, tok/sec: 189429.36, flops:165.91, batch-reuse:1
@ 259 train 5.9779 , allloss: 5.9779, dt: 687.08ms, fracRes: 0.0099, norm(attn): 0.2090, norm(output): 0.6953, norm(x): 0.7020, norm(y): 0.9958, norm:0.3418, tok/sec: 190765.56, flops:167.08, batch-reuse:1
@ 260 train 6.0156 , allloss: 6.0156, dt: 687.34ms, fracRes: 0.0095, norm(attn): 0.2080, norm(output): 0.6914, norm(x): 0.7037, norm(y): 0.9958, norm:0.2855, tok/sec: 190695.28, flops:167.02, batch-reuse:1
@ 261 train 5.9996 , allloss: 5.9996, dt: 703.17ms, fracRes: 0.0086, norm(attn): 0.2178, norm(output): 0.6953, norm(x): 0.7083, norm(y): 0.9958, norm:0.3573, tok/sec: 186401.19, flops:163.26, batch-reuse:1
@ 262 train 6.0663 , allloss: 6.0663, dt: 686.65ms, fracRes: 0.0084, norm(attn): 0.2285, norm(output): 0.6914, norm(x): 0.7046, norm(y): 0.9958, norm:0.4764, tok/sec: 190886.24, flops:167.19, batch-reuse:1
@ 263 train 5.9890 , allloss: 5.9890, dt: 697.49ms, fracRes: 0.0087, norm(attn): 0.2227, norm(output): 0.6914, norm(x): 0.6994, norm(y): 0.9958, norm:0.4170, tok/sec: 187920.51, flops:164.59, batch-reuse:1
@ 264 train 5.9801 , allloss: 5.9801, dt: 691.06ms, fracRes: 0.0095, norm(attn): 0.2227, norm(output): 0.6875, norm(x): 0.6928, norm(y): 0.9957, norm:0.5044, tok/sec: 189667.18, flops:166.12, batch-reuse:1
@ 265 train 5.9784 , allloss: 5.9784, dt: 672.02ms, fracRes: 0.0100, norm(attn): 0.2188, norm(output): 0.6875, norm(x): 0.6904, norm(y): 0.9957, norm:0.4486, tok/sec: 195042.80, flops:170.83, batch-reuse:1
@ 266 train 5.9217 , allloss: 5.9217, dt: 692.23ms, fracRes: 0.0101, norm(attn): 0.2324, norm(output): 0.6992, norm(x): 0.7058, norm(y): 0.9957, norm:0.4073, tok/sec: 189348.39, flops:165.84, batch-reuse:1
@ 267 train 5.9668 , allloss: 5.9668, dt: 687.90ms, fracRes: 0.0107, norm(attn): 0.2227, norm(output): 0.6914, norm(x): 0.7065, norm(y): 0.9957, norm:0.3709, tok/sec: 190540.23, flops:166.89, batch-reuse:1
@ 268 train 6.0456 , allloss: 6.0456, dt: 694.68ms, fracRes: 0.0104, norm(attn): 0.2305, norm(output): 0.7109, norm(x): 0.7198, norm(y): 0.9956, norm:0.4450, tok/sec: 188678.72, flops:165.26, batch-reuse:1
@ 269 train 5.9842 , allloss: 5.9842, dt: 703.93ms, fracRes: 0.0100, norm(attn): 0.2207, norm(output): 0.7188, norm(x): 0.7260, norm(y): 0.9956, norm:0.3278, tok/sec: 186199.73, flops:163.08, batch-reuse:1
@ 270 train 6.0598 , allloss: 6.0598, dt: 690.14ms, fracRes: 0.0091, norm(attn): 0.2207, norm(output): 0.7188, norm(x): 0.7211, norm(y): 0.9956, norm:0.3722, tok/sec: 189921.60, flops:166.34, batch-reuse:1
@ 271 train 5.9424 , allloss: 5.9424, dt: 708.08ms, fracRes: 0.0089, norm(attn): 0.2305, norm(output): 0.7109, norm(x): 0.7147, norm(y): 0.9956, norm:0.3809, tok/sec: 185109.76, flops:162.13, batch-reuse:1
@ 272 train 5.9556 , allloss: 5.9556, dt: 699.19ms, fracRes: 0.0111, norm(attn): 0.2227, norm(output): 0.7031, norm(x): 0.7083, norm(y): 0.9956, norm:0.3362, tok/sec: 187462.53, flops:164.19, batch-reuse:1
@ 273 train 5.9977 , allloss: 5.9977, dt: 693.67ms, fracRes: 0.0112, norm(attn): 0.2217, norm(output): 0.6914, norm(x): 0.7030, norm(y): 0.9956, norm:0.4451, tok/sec: 188955.50, flops:165.50, batch-reuse:1
@ 274 train 5.9621 , allloss: 5.9621, dt: 700.05ms, fracRes: 0.0122, norm(attn): 0.2236, norm(output): 0.6875, norm(x): 0.7014, norm(y): 0.9956, norm:0.3203, tok/sec: 187231.61, flops:163.99, batch-reuse:1
@ 275 train 5.9521 , allloss: 5.9521, dt: 699.05ms, fracRes: 0.0134, norm(attn): 0.2285, norm(output): 0.6914, norm(x): 0.6995, norm(y): 0.9956, norm:0.3395, tok/sec: 187500.32, flops:164.22, batch-reuse:1
@ 276 train 5.9254 , allloss: 5.9254, dt: 696.74ms, fracRes: 0.0128, norm(attn): 0.2305, norm(output): 0.6914, norm(x): 0.6988, norm(y): 0.9955, norm:0.3734, tok/sec: 188122.36, flops:164.77, batch-reuse:1
@ 277 train 5.7744 , allloss: 5.7744, dt: 699.56ms, fracRes: 0.0116, norm(attn): 0.2324, norm(output): 0.6914, norm(x): 0.7022, norm(y): 0.9956, norm:0.4608, tok/sec: 187363.06, flops:164.10, batch-reuse:1
@ 278 train 5.9258 , allloss: 5.9258, dt: 699.54ms, fracRes: 0.0109, norm(attn): 0.2266, norm(output): 0.6875, norm(x): 0.6959, norm(y): 0.9955, norm:0.4576, tok/sec: 187367.59, flops:164.11, batch-reuse:1
@ 279 train 5.8281 , allloss: 5.8281, dt: 685.73ms, fracRes: 0.0106, norm(attn): 0.2334, norm(output): 0.6914, norm(x): 0.7015, norm(y): 0.9956, norm:0.3496, tok/sec: 191141.29, flops:167.41, batch-reuse:1
@ 280 train 5.9610 , allloss: 5.9610, dt: 698.94ms, fracRes: 0.0117, norm(attn): 0.2324, norm(output): 0.6914, norm(x): 0.6988, norm(y): 0.9955, norm:0.4632, tok/sec: 187530.57, flops:164.25, batch-reuse:1
@ 281 train 5.8720 , allloss: 5.8720, dt: 696.15ms, fracRes: 0.0109, norm(attn): 0.2227, norm(output): 0.6914, norm(x): 0.6995, norm(y): 0.9954, norm:0.3615, tok/sec: 188281.37, flops:164.91, batch-reuse:1
@ 282 train 5.8496 , allloss: 5.8496, dt: 700.48ms, fracRes: 0.0109, norm(attn): 0.2314, norm(output): 0.7109, norm(x): 0.7165, norm(y): 0.9954, norm:0.3647, tok/sec: 187116.52, flops:163.89, batch-reuse:1
@ 283 train 5.7991 , allloss: 5.7991, dt: 701.74ms, fracRes: 0.0110, norm(attn): 0.2324, norm(output): 0.6992, norm(x): 0.7081, norm(y): 0.9955, norm:0.3454, tok/sec: 186780.79, flops:163.59, batch-reuse:1
@ 284 train 5.8776 , allloss: 5.8776, dt: 688.78ms, fracRes: 0.0116, norm(attn): 0.2324, norm(output): 0.6875, norm(x): 0.6964, norm(y): 0.9955, norm:0.3140, tok/sec: 190295.41, flops:166.67, batch-reuse:1
@ 285 train 5.9007 , allloss: 5.9007, dt: 676.63ms, fracRes: 0.0125, norm(attn): 0.2334, norm(output): 0.6914, norm(x): 0.7023, norm(y): 0.9955, norm:0.3348, tok/sec: 193714.18, flops:169.67, batch-reuse:1
@ 286 train 5.8625 , allloss: 5.8625, dt: 709.33ms, fracRes: 0.0120, norm(attn): 0.2363, norm(output): 0.6992, norm(x): 0.7094, norm(y): 0.9954, norm:0.3529, tok/sec: 184782.80, flops:161.84, batch-reuse:1
@ 287 train 5.9032 , allloss: 5.9032, dt: 713.90ms, fracRes: 0.0120, norm(attn): 0.2432, norm(output): 0.7070, norm(x): 0.7151, norm(y): 0.9954, norm:0.3381, tok/sec: 183601.02, flops:160.81, batch-reuse:1
@ 288 train 5.8435 , allloss: 5.8435, dt: 711.40ms, fracRes: 0.0117, norm(attn): 0.2451, norm(output): 0.7031, norm(x): 0.7117, norm(y): 0.9954, norm:0.4065, tok/sec: 184244.65, flops:161.37, batch-reuse:1
@ 289 train 5.8657 , allloss: 5.8657, dt: 696.27ms, fracRes: 0.0119, norm(attn): 0.2422, norm(output): 0.7031, norm(x): 0.7155, norm(y): 0.9954, norm:0.4435, tok/sec: 188249.52, flops:164.88, batch-reuse:1
@ 290 train 5.8899 , allloss: 5.8899, dt: 696.65ms, fracRes: 0.0122, norm(attn): 0.2373, norm(output): 0.7031, norm(x): 0.7094, norm(y): 0.9954, norm:0.4727, tok/sec: 188146.64, flops:164.79, batch-reuse:1
@ 291 train 5.7802 , allloss: 5.7802, dt: 703.06ms, fracRes: 0.0124, norm(attn): 0.2471, norm(output): 0.7070, norm(x): 0.7156, norm(y): 0.9954, norm:0.4740, tok/sec: 186429.50, flops:163.29, batch-reuse:1
@ 292 train 5.7966 , allloss: 5.7966, dt: 691.57ms, fracRes: 0.0125, norm(attn): 0.2432, norm(output): 0.7070, norm(x): 0.7140, norm(y): 0.9954, norm:0.4550, tok/sec: 189528.49, flops:166.00, batch-reuse:1
@ 293 train 5.8626 , allloss: 5.8626, dt: 699.45ms, fracRes: 0.0120, norm(attn): 0.2354, norm(output): 0.7031, norm(x): 0.7112, norm(y): 0.9954, norm:0.3298, tok/sec: 187393.97, flops:164.13, batch-reuse:1
@ 294 train 5.8647 , allloss: 5.8647, dt: 702.17ms, fracRes: 0.0114, norm(attn): 0.2363, norm(output): 0.6953, norm(x): 0.7096, norm(y): 0.9954, norm:0.4752, tok/sec: 186666.06, flops:163.49, batch-reuse:1
@ 295 train 5.8721 , allloss: 5.8721, dt: 703.69ms, fracRes: 0.0122, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.7109, norm(y): 0.9954, norm:0.4209, tok/sec: 186264.83, flops:163.14, batch-reuse:1
@ 296 train 5.7754 , allloss: 5.7754, dt: 684.65ms, fracRes: 0.0123, norm(attn): 0.2402, norm(output): 0.7031, norm(x): 0.7125, norm(y): 0.9953, norm:0.4641, tok/sec: 191442.89, flops:167.68, batch-reuse:1
@ 297 train 5.7617 , allloss: 5.7617, dt: 698.32ms, fracRes: 0.0129, norm(attn): 0.2520, norm(output): 0.6914, norm(x): 0.7065, norm(y): 0.9952, norm:0.5075, tok/sec: 187697.36, flops:164.40, batch-reuse:1
@ 298 train 5.8170 , allloss: 5.8170, dt: 704.61ms, fracRes: 0.0115, norm(attn): 0.2432, norm(output): 0.7070, norm(x): 0.7121, norm(y): 0.9953, norm:0.4207, tok/sec: 186021.74, flops:162.93, batch-reuse:1
@ 299 train 5.8049 , allloss: 5.8049, dt: 695.42ms, fracRes: 0.0106, norm(attn): 0.2500, norm(output): 0.7305, norm(x): 0.7298, norm(y): 0.9953, norm:0.4593, tok/sec: 188479.54, flops:165.08, batch-reuse:1
@ 300 train 5.8120 , allloss: 5.8120, dt: 695.79ms, fracRes: 0.0104, norm(attn): 0.2383, norm(output): 0.7422, norm(x): 0.7379, norm(y): 0.9953, norm:0.4333, tok/sec: 188379.89, flops:164.99, batch-reuse:1
@ 301 train 5.9158 , allloss: 5.9158, dt: 697.03ms, fracRes: 0.0111, norm(attn): 0.2461, norm(output): 0.7383, norm(x): 0.7362, norm(y): 0.9952, norm:0.4179, tok/sec: 188044.70, flops:164.70, batch-reuse:1
@ 302 train 5.7694 , allloss: 5.7694, dt: 706.03ms, fracRes: 0.0122, norm(attn): 0.2373, norm(output): 0.7266, norm(x): 0.7219, norm(y): 0.9952, norm:0.3661, tok/sec: 185647.09, flops:162.60, batch-reuse:1
@ 303 train 5.8062 , allloss: 5.8062, dt: 685.31ms, fracRes: 0.0126, norm(attn): 0.2373, norm(output): 0.7188, norm(x): 0.7211, norm(y): 0.9952, norm:0.3495, tok/sec: 191259.79, flops:167.52, batch-reuse:1
@ 304 train 5.7432 , allloss: 5.7432, dt: 692.62ms, fracRes: 0.0128, norm(attn): 0.2451, norm(output): 0.7148, norm(x): 0.7258, norm(y): 0.9952, norm:0.3913, tok/sec: 189239.67, flops:165.75, batch-reuse:1
@ 305 train 5.7418 , allloss: 5.7418, dt: 708.84ms, fracRes: 0.0136, norm(attn): 0.2500, norm(output): 0.7266, norm(x): 0.7273, norm(y): 0.9952, norm:0.4104, tok/sec: 184910.09, flops:161.95, batch-reuse:1
@ 306 train 5.7547 , allloss: 5.7547, dt: 695.18ms, fracRes: 0.0127, norm(attn): 0.2500, norm(output): 0.7148, norm(x): 0.7224, norm(y): 0.9952, norm:0.4629, tok/sec: 188543.28, flops:165.14, batch-reuse:1
@ 307 train 5.8861 , allloss: 5.8861, dt: 694.92ms, fracRes: 0.0126, norm(attn): 0.2617, norm(output): 0.7148, norm(x): 0.7236, norm(y): 0.9952, norm:0.7007, tok/sec: 188615.79, flops:165.20, batch-reuse:1
@ 308 train 5.7688 , allloss: 5.7688, dt: 699.39ms, fracRes: 0.0107, norm(attn): 0.2734, norm(output): 0.7266, norm(x): 0.7282, norm(y): 0.9953, norm:0.5060, tok/sec: 187408.47, flops:164.14, batch-reuse:1
@ 309 train 5.8024 , allloss: 5.8024, dt: 695.19ms, fracRes: 0.0117, norm(attn): 0.2676, norm(output): 0.7305, norm(x): 0.7335, norm(y): 0.9954, norm:0.4444, tok/sec: 188540.18, flops:165.13, batch-reuse:1
@ 310 train 5.8486 , allloss: 5.8486, dt: 695.65ms, fracRes: 0.0131, norm(attn): 0.2695, norm(output): 0.7422, norm(x): 0.7419, norm(y): 0.9954, norm:0.4694, tok/sec: 188416.17, flops:165.03, batch-reuse:1
@ 311 train 5.8769 , allloss: 5.8769, dt: 713.74ms, fracRes: 0.0137, norm(attn): 0.2617, norm(output): 0.7305, norm(x): 0.7331, norm(y): 0.9954, norm:0.3690, tok/sec: 183640.03, flops:160.84, batch-reuse:1
@ 312 train 5.8993 , allloss: 5.8993, dt: 696.82ms, fracRes: 0.0130, norm(attn): 0.2559, norm(output): 0.7266, norm(x): 0.7287, norm(y): 0.9952, norm:0.4488, tok/sec: 188100.67, flops:164.75, batch-reuse:1
@ 313 train 5.7687 , allloss: 5.7687, dt: 712.18ms, fracRes: 0.0123, norm(attn): 0.2656, norm(output): 0.7305, norm(x): 0.7270, norm(y): 0.9953, norm:0.4088, tok/sec: 184042.22, flops:161.19, batch-reuse:1
@ 314 train 5.7533 , allloss: 5.7533, dt: 710.12ms, fracRes: 0.0122, norm(attn): 0.2500, norm(output): 0.7109, norm(x): 0.7206, norm(y): 0.9952, norm:0.3312, tok/sec: 184576.21, flops:161.66, batch-reuse:1
@ 315 train 5.7436 , allloss: 5.7436, dt: 694.62ms, fracRes: 0.0122, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.7296, norm(y): 0.9951, norm:0.3373, tok/sec: 188696.72, flops:165.27, batch-reuse:1
@ 316 train 5.7737 , allloss: 5.7737, dt: 710.12ms, fracRes: 0.0118, norm(attn): 0.2471, norm(output): 0.7383, norm(x): 0.7332, norm(y): 0.9952, norm:0.3417, tok/sec: 184577.20, flops:161.66, batch-reuse:1
@ 317 train 5.8297 , allloss: 5.8297, dt: 712.98ms, fracRes: 0.0113, norm(attn): 0.2539, norm(output): 0.7266, norm(x): 0.7318, norm(y): 0.9953, norm:0.3553, tok/sec: 183836.29, flops:161.01, batch-reuse:1
@ 318 train 5.6997 , allloss: 5.6997, dt: 716.14ms, fracRes: 0.0119, norm(attn): 0.2656, norm(output): 0.7383, norm(x): 0.7334, norm(y): 0.9953, norm:0.3109, tok/sec: 183025.11, flops:160.30, batch-reuse:1
@ 319 train 5.6519 , allloss: 5.6519, dt: 712.71ms, fracRes: 0.0127, norm(attn): 0.2656, norm(output): 0.7305, norm(x): 0.7331, norm(y): 0.9953, norm:0.2818, tok/sec: 183907.01, flops:161.08, batch-reuse:1
@ 320 train 5.7512 , allloss: 5.7512, dt: 701.36ms, fracRes: 0.0138, norm(attn): 0.2656, norm(output): 0.7305, norm(x): 0.7309, norm(y): 0.9952, norm:0.4337, tok/sec: 186883.58, flops:163.68, batch-reuse:1
@ 321 train 5.7929 , allloss: 5.7929, dt: 710.96ms, fracRes: 0.0144, norm(attn): 0.2656, norm(output): 0.7109, norm(x): 0.7211, norm(y): 0.9952, norm:0.5107, tok/sec: 184357.90, flops:161.47, batch-reuse:1
@ 322 train 5.6912 , allloss: 5.6912, dt: 710.74ms, fracRes: 0.0139, norm(attn): 0.2520, norm(output): 0.7070, norm(x): 0.7215, norm(y): 0.9951, norm:0.4586, tok/sec: 184415.17, flops:161.52, batch-reuse:1
@ 323 train 5.7689 , allloss: 5.7689, dt: 702.48ms, fracRes: 0.0133, norm(attn): 0.2617, norm(output): 0.7422, norm(x): 0.7385, norm(y): 0.9951, norm:0.3629, tok/sec: 186585.60, flops:163.42, batch-reuse:1
@ 324 train 5.6533 , allloss: 5.6533, dt: 694.11ms, fracRes: 0.0136, norm(attn): 0.2598, norm(output): 0.7344, norm(x): 0.7371, norm(y): 0.9952, norm:0.3881, tok/sec: 188834.06, flops:165.39, batch-reuse:1
@ 325 train 5.6766 , allloss: 5.6766, dt: 694.90ms, fracRes: 0.0138, norm(attn): 0.2637, norm(output): 0.7344, norm(x): 0.7312, norm(y): 0.9952, norm:0.4334, tok/sec: 188619.87, flops:165.20, batch-reuse:1
@ 326 train 5.7546 , allloss: 5.7546, dt: 701.83ms, fracRes: 0.0130, norm(attn): 0.2637, norm(output): 0.7383, norm(x): 0.7348, norm(y): 0.9952, norm:0.3561, tok/sec: 186757.25, flops:163.57, batch-reuse:1
@ 327 train 5.7706 , allloss: 5.7706, dt: 700.86ms, fracRes: 0.0122, norm(attn): 0.2617, norm(output): 0.7344, norm(x): 0.7321, norm(y): 0.9952, norm:0.3630, tok/sec: 187014.99, flops:163.80, batch-reuse:1
@ 328 train 5.7428 , allloss: 5.7428, dt: 700.55ms, fracRes: 0.0114, norm(attn): 0.2598, norm(output): 0.7305, norm(x): 0.7320, norm(y): 0.9951, norm:0.3585, tok/sec: 187098.05, flops:163.87, batch-reuse:1
@ 329 train 5.6783 , allloss: 5.6783, dt: 702.18ms, fracRes: 0.0113, norm(attn): 0.2637, norm(output): 0.7305, norm(x): 0.7313, norm(y): 0.9951, norm:0.3760, tok/sec: 186664.41, flops:163.49, batch-reuse:1
@ 330 train 5.6856 , allloss: 5.6856, dt: 694.44ms, fracRes: 0.0120, norm(attn): 0.2637, norm(output): 0.7266, norm(x): 0.7278, norm(y): 0.9951, norm:0.4365, tok/sec: 188743.56, flops:165.31, batch-reuse:1
@ 331 train 5.6661 , allloss: 5.6661, dt: 696.74ms, fracRes: 0.0128, norm(attn): 0.2578, norm(output): 0.7227, norm(x): 0.7245, norm(y): 0.9952, norm:0.3676, tok/sec: 188122.11, flops:164.77, batch-reuse:1
@ 332 train 5.6024 , allloss: 5.6024, dt: 702.24ms, fracRes: 0.0128, norm(attn): 0.2617, norm(output): 0.7188, norm(x): 0.7227, norm(y): 0.9951, norm:0.4584, tok/sec: 186648.00, flops:163.48, batch-reuse:1
@ 333 train 5.7005 , allloss: 5.7005, dt: 706.17ms, fracRes: 0.0132, norm(attn): 0.2617, norm(output): 0.7266, norm(x): 0.7226, norm(y): 0.9951, norm:0.4501, tok/sec: 185608.67, flops:162.57, batch-reuse:1
@ 334 train 5.6229 , allloss: 5.6229, dt: 701.06ms, fracRes: 0.0135, norm(attn): 0.2559, norm(output): 0.7109, norm(x): 0.7188, norm(y): 0.9950, norm:0.4640, tok/sec: 186962.65, flops:163.75, batch-reuse:1
@ 335 train 5.5990 , allloss: 5.5990, dt: 704.86ms, fracRes: 0.0135, norm(attn): 0.2656, norm(output): 0.7266, norm(x): 0.7290, norm(y): 0.9950, norm:0.5269, tok/sec: 185953.53, flops:162.87, batch-reuse:1
@ 336 train 5.6666 , allloss: 5.6666, dt: 702.50ms, fracRes: 0.0144, norm(attn): 0.2598, norm(output): 0.7148, norm(x): 0.7237, norm(y): 0.9951, norm:0.4686, tok/sec: 186579.46, flops:163.42, batch-reuse:1
@ 337 train 5.6282 , allloss: 5.6282, dt: 705.48ms, fracRes: 0.0141, norm(attn): 0.2656, norm(output): 0.7266, norm(x): 0.7258, norm(y): 0.9951, norm:0.4005, tok/sec: 185790.45, flops:162.73, batch-reuse:1
@ 338 train 5.6216 , allloss: 5.6216, dt: 703.88ms, fracRes: 0.0146, norm(attn): 0.2695, norm(output): 0.7227, norm(x): 0.7259, norm(y): 0.9951, norm:0.4411, tok/sec: 186212.34, flops:163.10, batch-reuse:1
@ 339 train 5.6953 , allloss: 5.6953, dt: 703.00ms, fracRes: 0.0143, norm(attn): 0.2715, norm(output): 0.7227, norm(x): 0.7245, norm(y): 0.9951, norm:0.3661, tok/sec: 186447.52, flops:163.30, batch-reuse:1
@ 340 train 5.6457 , allloss: 5.6457, dt: 697.89ms, fracRes: 0.0135, norm(attn): 0.2676, norm(output): 0.7305, norm(x): 0.7290, norm(y): 0.9951, norm:0.3109, tok/sec: 187810.54, flops:164.49, batch-reuse:1
@ 341 train 5.6027 , allloss: 5.6027, dt: 705.52ms, fracRes: 0.0132, norm(attn): 0.2656, norm(output): 0.7266, norm(x): 0.7282, norm(y): 0.9951, norm:0.3413, tok/sec: 185780.91, flops:162.72, batch-reuse:1
@ 342 train 5.5386 , allloss: 5.5386, dt: 693.75ms, fracRes: 0.0135, norm(attn): 0.2715, norm(output): 0.7109, norm(x): 0.7191, norm(y): 0.9951, norm:0.3817, tok/sec: 188931.53, flops:165.48, batch-reuse:1
@ 343 train 5.6261 , allloss: 5.6261, dt: 715.55ms, fracRes: 0.0135, norm(attn): 0.2656, norm(output): 0.7109, norm(x): 0.7194, norm(y): 0.9951, norm:0.3224, tok/sec: 183176.04, flops:160.44, batch-reuse:1
@ 344 train 5.5840 , allloss: 5.5840, dt: 716.84ms, fracRes: 0.0137, norm(attn): 0.2598, norm(output): 0.7227, norm(x): 0.7203, norm(y): 0.9950, norm:0.3197, tok/sec: 182847.91, flops:160.15, batch-reuse:1
@ 345 train 5.5530 , allloss: 5.5530, dt: 688.26ms, fracRes: 0.0136, norm(attn): 0.2559, norm(output): 0.7109, norm(x): 0.7194, norm(y): 0.9949, norm:0.3133, tok/sec: 190438.38, flops:166.80, batch-reuse:1
@ 346 train 5.6180 , allloss: 5.6180, dt: 691.76ms, fracRes: 0.0136, norm(attn): 0.2637, norm(output): 0.7266, norm(x): 0.7273, norm(y): 0.9949, norm:0.3590, tok/sec: 189476.56, flops:165.95, batch-reuse:1
@ 347 train 5.6155 , allloss: 5.6155, dt: 704.08ms, fracRes: 0.0135, norm(attn): 0.2578, norm(output): 0.7188, norm(x): 0.7204, norm(y): 0.9949, norm:0.3969, tok/sec: 186160.76, flops:163.05, batch-reuse:1
@ 348 train 5.6289 , allloss: 5.6289, dt: 696.48ms, fracRes: 0.0142, norm(attn): 0.2578, norm(output): 0.7266, norm(x): 0.7286, norm(y): 0.9949, norm:0.4284, tok/sec: 188191.14, flops:164.83, batch-reuse:1
@ 349 train 5.6733 , allloss: 5.6733, dt: 709.41ms, fracRes: 0.0147, norm(attn): 0.2734, norm(output): 0.7344, norm(x): 0.7314, norm(y): 0.9949, norm:0.4790, tok/sec: 184761.25, flops:161.82, batch-reuse:1
@ 350 train 5.6537 , allloss: 5.6537, dt: 704.14ms, fracRes: 0.0153, norm(attn): 0.2715, norm(output): 0.7305, norm(x): 0.7319, norm(y): 0.9950, norm:0.4864, tok/sec: 186144.44, flops:163.04, batch-reuse:1
@ 351 train 5.6558 , allloss: 5.6558, dt: 720.60ms, fracRes: 0.0158, norm(attn): 0.2812, norm(output): 0.7344, norm(x): 0.7319, norm(y): 0.9950, norm:0.4788, tok/sec: 181892.53, flops:159.31, batch-reuse:1
@ 352 train 5.6527 , allloss: 5.6527, dt: 692.16ms, fracRes: 0.0178, norm(attn): 0.2695, norm(output): 0.7188, norm(x): 0.7228, norm(y): 0.9950, norm:0.4290, tok/sec: 189366.13, flops:165.86, batch-reuse:1
@ 353 train 5.6254 , allloss: 5.6254, dt: 695.81ms, fracRes: 0.0211, norm(attn): 0.2715, norm(output): 0.7188, norm(x): 0.7225, norm(y): 0.9950, norm:0.4337, tok/sec: 188374.47, flops:164.99, batch-reuse:1
@ 354 train 5.6104 , allloss: 5.6104, dt: 702.66ms, fracRes: 0.0170, norm(attn): 0.2676, norm(output): 0.7188, norm(x): 0.7196, norm(y): 0.9950, norm:0.4618, tok/sec: 186535.84, flops:163.38, batch-reuse:1
@ 355 train 5.6077 , allloss: 5.6077, dt: 691.79ms, fracRes: 0.0159, norm(attn): 0.2715, norm(output): 0.7109, norm(x): 0.7207, norm(y): 0.9950, norm:0.4363, tok/sec: 189467.22, flops:165.95, batch-reuse:1
@ 356 train 5.6185 , allloss: 5.6185, dt: 682.56ms, fracRes: 0.0151, norm(attn): 0.2812, norm(output): 0.7344, norm(x): 0.7290, norm(y): 0.9950, norm:0.4037, tok/sec: 192031.36, flops:168.19, batch-reuse:1
@ 357 train 5.6457 , allloss: 5.6457, dt: 684.17ms, fracRes: 0.0152, norm(attn): 0.2832, norm(output): 0.7422, norm(x): 0.7397, norm(y): 0.9949, norm:0.4517, tok/sec: 191578.51, flops:167.80, batch-reuse:1
@ 358 train 5.5886 , allloss: 5.5886, dt: 704.29ms, fracRes: 0.0157, norm(attn): 0.2852, norm(output): 0.7461, norm(x): 0.7441, norm(y): 0.9950, norm:0.4907, tok/sec: 186106.44, flops:163.00, batch-reuse:1
@ 359 train 5.7392 , allloss: 5.7392, dt: 699.88ms, fracRes: 0.0152, norm(attn): 0.2812, norm(output): 0.7500, norm(x): 0.7462, norm(y): 0.9949, norm:0.6085, tok/sec: 187277.59, flops:164.03, batch-reuse:1
@ 360 train 5.6242 , allloss: 5.6242, dt: 694.84ms, fracRes: 0.0151, norm(attn): 0.2734, norm(output): 0.7344, norm(x): 0.7324, norm(y): 0.9949, norm:0.6444, tok/sec: 188636.25, flops:165.22, batch-reuse:1
@ 361 train 5.6372 , allloss: 5.6372, dt: 688.13ms, fracRes: 0.0167, norm(attn): 0.2832, norm(output): 0.7461, norm(x): 0.7448, norm(y): 0.9950, norm:0.6260, tok/sec: 190475.20, flops:166.83, batch-reuse:1
@ 362 train 5.5862 , allloss: 5.5862, dt: 699.91ms, fracRes: 0.0184, norm(attn): 0.2871, norm(output): 0.7461, norm(x): 0.7435, norm(y): 0.9950, norm:0.5200, tok/sec: 187268.60, flops:164.02, batch-reuse:1
@ 363 train 5.6090 , allloss: 5.6090, dt: 698.25ms, fracRes: 0.0183, norm(attn): 0.2812, norm(output): 0.7461, norm(x): 0.7403, norm(y): 0.9950, norm:0.4716, tok/sec: 187714.03, flops:164.41, batch-reuse:1
@ 364 train 5.5984 , allloss: 5.5984, dt: 702.24ms, fracRes: 0.0188, norm(attn): 0.2832, norm(output): 0.7461, norm(x): 0.7418, norm(y): 0.9951, norm:0.4400, tok/sec: 186647.68, flops:163.48, batch-reuse:1
@ 365 train 5.5993 , allloss: 5.5993, dt: 701.32ms, fracRes: 0.0191, norm(attn): 0.2832, norm(output): 0.7188, norm(x): 0.7281, norm(y): 0.9950, norm:0.4709, tok/sec: 186893.24, flops:163.69, batch-reuse:1
@ 366 train 5.6804 , allloss: 5.6804, dt: 694.89ms, fracRes: 0.0190, norm(attn): 0.2832, norm(output): 0.7109, norm(x): 0.7254, norm(y): 0.9950, norm:0.3643, tok/sec: 188623.82, flops:165.21, batch-reuse:1
@ 367 train 5.5548 , allloss: 5.5548, dt: 700.62ms, fracRes: 0.0178, norm(attn): 0.2852, norm(output): 0.7266, norm(x): 0.7309, norm(y): 0.9949, norm:0.4653, tok/sec: 187080.03, flops:163.86, batch-reuse:1
@ 368 train 5.6773 , allloss: 5.6773, dt: 695.86ms, fracRes: 0.0163, norm(attn): 0.2852, norm(output): 0.7305, norm(x): 0.7326, norm(y): 0.9948, norm:0.4820, tok/sec: 188359.24, flops:164.98, batch-reuse:1
@ 369 train 5.5669 , allloss: 5.5669, dt: 710.55ms, fracRes: 0.0173, norm(attn): 0.3008, norm(output): 0.7383, norm(x): 0.7367, norm(y): 0.9949, norm:0.5867, tok/sec: 184464.48, flops:161.56, batch-reuse:1
@ 370 train 5.7449 , allloss: 5.7449, dt: 711.81ms, fracRes: 0.0182, norm(attn): 0.2930, norm(output): 0.7422, norm(x): 0.7418, norm(y): 0.9950, norm:0.6091, tok/sec: 184137.76, flops:161.28, batch-reuse:1
@ 371 train 5.6937 , allloss: 5.6937, dt: 708.85ms, fracRes: 0.0191, norm(attn): 0.2910, norm(output): 0.7461, norm(x): 0.7490, norm(y): 0.9950, norm:0.5446, tok/sec: 184908.66, flops:161.95, batch-reuse:1
@ 372 train 5.7449 , allloss: 5.7449, dt: 681.43ms, fracRes: 0.0208, norm(attn): 0.2871, norm(output): 0.7461, norm(x): 0.7503, norm(y): 0.9949, norm:0.4810, tok/sec: 192349.02, flops:168.47, batch-reuse:1
@ 373 train 5.6645 , allloss: 5.6645, dt: 676.98ms, fracRes: 0.0222, norm(attn): 0.2852, norm(output): 0.7500, norm(x): 0.7568, norm(y): 0.9948, norm:0.4786, tok/sec: 193613.42, flops:169.58, batch-reuse:1
@ 374 train 5.7076 , allloss: 5.7076, dt: 695.33ms, fracRes: 0.0215, norm(attn): 0.2871, norm(output): 0.7539, norm(x): 0.7591, norm(y): 0.9948, norm:0.4046, tok/sec: 188503.65, flops:165.10, batch-reuse:1
@ 375 train 5.7999 , allloss: 5.7999, dt: 714.57ms, fracRes: 0.0208, norm(attn): 0.2891, norm(output): 0.7500, norm(x): 0.7590, norm(y): 0.9949, norm:0.3596, tok/sec: 183427.11, flops:160.66, batch-reuse:1
@ 376 train 5.8349 , allloss: 5.8349, dt: 692.46ms, fracRes: 0.0188, norm(attn): 0.2852, norm(output): 0.7500, norm(x): 0.7602, norm(y): 0.9948, norm:0.4682, tok/sec: 189283.39, flops:165.78, batch-reuse:1
@ 377 train 5.7201 , allloss: 5.7201, dt: 695.67ms, fracRes: 0.0197, norm(attn): 0.2949, norm(output): 0.7539, norm(x): 0.7594, norm(y): 0.9949, norm:0.4848, tok/sec: 188409.85, flops:165.02, batch-reuse:1
@ 378 train 5.6724 , allloss: 5.6724, dt: 687.49ms, fracRes: 0.0191, norm(attn): 0.2910, norm(output): 0.7500, norm(x): 0.7579, norm(y): 0.9949, norm:0.3510, tok/sec: 190653.75, flops:166.99, batch-reuse:1
@ 379 train 5.8039 , allloss: 5.8039, dt: 702.13ms, fracRes: 0.0190, norm(attn): 0.2910, norm(output): 0.7500, norm(x): 0.7531, norm(y): 0.9948, norm:0.4446, tok/sec: 186678.23, flops:163.50, batch-reuse:1
@ 380 train 5.8082 , allloss: 5.8082, dt: 699.91ms, fracRes: 0.0198, norm(attn): 0.2930, norm(output): 0.7500, norm(x): 0.7484, norm(y): 0.9948, norm:0.3954, tok/sec: 187270.51, flops:164.02, batch-reuse:1
@ 381 train 5.7378 , allloss: 5.7378, dt: 697.21ms, fracRes: 0.0207, norm(attn): 0.2910, norm(output): 0.7461, norm(x): 0.7486, norm(y): 0.9948, norm:0.4859, tok/sec: 187995.57, flops:164.66, batch-reuse:1
@ 382 train 5.6938 , allloss: 5.6938, dt: 697.14ms, fracRes: 0.0212, norm(attn): 0.2910, norm(output): 0.7422, norm(x): 0.7494, norm(y): 0.9947, norm:0.4155, tok/sec: 188014.73, flops:164.67, batch-reuse:1
@ 383 train 5.7080 , allloss: 5.7080, dt: 693.44ms, fracRes: 0.0221, norm(attn): 0.3008, norm(output): 0.7461, norm(x): 0.7528, norm(y): 0.9948, norm:0.3873, tok/sec: 189017.99, flops:165.55, batch-reuse:1
@ 384 train 5.6484 , allloss: 5.6484, dt: 698.28ms, fracRes: 0.0230, norm(attn): 0.2910, norm(output): 0.7461, norm(x): 0.7479, norm(y): 0.9948, norm:0.3879, tok/sec: 187706.33, flops:164.40, batch-reuse:1
@ 385 train 5.6532 , allloss: 5.6532, dt: 684.25ms, fracRes: 0.0226, norm(attn): 0.2910, norm(output): 0.7461, norm(x): 0.7489, norm(y): 0.9948, norm:0.3735, tok/sec: 191555.49, flops:167.77, batch-reuse:1
@ 386 train 5.7580 , allloss: 5.7580, dt: 703.62ms, fracRes: 0.0224, norm(attn): 0.3027, norm(output): 0.7461, norm(x): 0.7462, norm(y): 0.9949, norm:0.4719, tok/sec: 186281.94, flops:163.16, batch-reuse:1
@ 387 train 5.6945 , allloss: 5.6945, dt: 694.67ms, fracRes: 0.0232, norm(attn): 0.2949, norm(output): 0.7461, norm(x): 0.7506, norm(y): 0.9948, norm:0.4345, tok/sec: 188681.43, flops:165.26, batch-reuse:1
@ 388 train 5.5667 , allloss: 5.5667, dt: 687.24ms, fracRes: 0.0223, norm(attn): 0.2949, norm(output): 0.7539, norm(x): 0.7600, norm(y): 0.9948, norm:0.3750, tok/sec: 190722.41, flops:167.05, batch-reuse:1
@ 389 train 5.6337 , allloss: 5.6337, dt: 698.39ms, fracRes: 0.0225, norm(attn): 0.2988, norm(output): 0.7500, norm(x): 0.7606, norm(y): 0.9948, norm:0.3103, tok/sec: 187677.24, flops:164.38, batch-reuse:1
@ 390 train 5.6883 , allloss: 5.6883, dt: 689.25ms, fracRes: 0.0236, norm(attn): 0.2949, norm(output): 0.7500, norm(x): 0.7584, norm(y): 0.9948, norm:0.3426, tok/sec: 190165.60, flops:166.56, batch-reuse:1
@ 391 train 5.6104 , allloss: 5.6104, dt: 684.23ms, fracRes: 0.0236, norm(attn): 0.2949, norm(output): 0.7461, norm(x): 0.7515, norm(y): 0.9948, norm:0.3724, tok/sec: 191560.09, flops:167.78, batch-reuse:1
@ 392 train 5.7326 , allloss: 5.7326, dt: 713.39ms, fracRes: 0.0240, norm(attn): 0.2930, norm(output): 0.7422, norm(x): 0.7447, norm(y): 0.9948, norm:0.4714, tok/sec: 183731.05, flops:160.92, batch-reuse:1
@ 393 train 5.6769 , allloss: 5.6769, dt: 695.55ms, fracRes: 0.0225, norm(attn): 0.2871, norm(output): 0.7422, norm(x): 0.7422, norm(y): 0.9947, norm:0.5715, tok/sec: 188442.78, flops:165.05, batch-reuse:1
@ 394 train 5.6252 , allloss: 5.6252, dt: 686.99ms, fracRes: 0.0219, norm(attn): 0.2910, norm(output): 0.7266, norm(x): 0.7275, norm(y): 0.9947, norm:0.5081, tok/sec: 190790.38, flops:167.10, batch-reuse:1
@ 395 train 5.6814 , allloss: 5.6814, dt: 681.02ms, fracRes: 0.0222, norm(attn): 0.3008, norm(output): 0.7461, norm(x): 0.7455, norm(y): 0.9947, norm:0.5309, tok/sec: 192465.52, flops:168.57, batch-reuse:1
@ 396 train 5.5951 , allloss: 5.5951, dt: 696.85ms, fracRes: 0.0225, norm(attn): 0.2949, norm(output): 0.7461, norm(x): 0.7523, norm(y): 0.9948, norm:0.4830, tok/sec: 188091.79, flops:164.74, batch-reuse:1
@ 397 train 5.7272 , allloss: 5.7272, dt: 695.21ms, fracRes: 0.0232, norm(attn): 0.3008, norm(output): 0.7461, norm(x): 0.7491, norm(y): 0.9947, norm:0.6667, tok/sec: 188534.81, flops:165.13, batch-reuse:1
@ 398 train 5.6955 , allloss: 5.6955, dt: 692.65ms, fracRes: 0.0236, norm(attn): 0.2969, norm(output): 0.7461, norm(x): 0.7543, norm(y): 0.9947, norm:0.6435, tok/sec: 189232.70, flops:165.74, batch-reuse:1
@ 399 train 5.6930 , allloss: 5.6930, dt: 697.00ms, fracRes: 0.0247, norm(attn): 0.2891, norm(output): 0.7422, norm(x): 0.7491, norm(y): 0.9948, norm:0.4795, tok/sec: 188050.68, flops:164.71, batch-reuse:1
@ 400 train 5.7364 , allloss: 5.7364, dt: 682.09ms, fracRes: 0.0239, norm(attn): 0.2910, norm(output): 0.7539, norm(x): 0.7635, norm(y): 0.9948, norm:0.4977, tok/sec: 192161.24, flops:168.31, batch-reuse:1
@ 401 train 5.6395 , allloss: 5.6395, dt: 684.25ms, fracRes: 0.0249, norm(attn): 0.2988, norm(output): 0.7578, norm(x): 0.7675, norm(y): 0.9947, norm:0.4922, tok/sec: 191556.35, flops:167.78, batch-reuse:1
@ 402 train 5.6396 , allloss: 5.6396, dt: 702.92ms, fracRes: 0.0251, norm(attn): 0.3047, norm(output): 0.7539, norm(x): 0.7625, norm(y): 0.9946, norm:0.3987, tok/sec: 186466.69, flops:163.32, batch-reuse:1
@ 403 train 5.7058 , allloss: 5.7058, dt: 707.22ms, fracRes: 0.0244, norm(attn): 0.3047, norm(output): 0.7500, norm(x): 0.7571, norm(y): 0.9946, norm:0.4511, tok/sec: 185334.60, flops:162.33, batch-reuse:1
@ 404 train 5.6010 , allloss: 5.6010, dt: 690.34ms, fracRes: 0.0237, norm(attn): 0.3027, norm(output): 0.7461, norm(x): 0.7513, norm(y): 0.9946, norm:0.4263, tok/sec: 189866.11, flops:166.30, batch-reuse:1
@ 405 train 5.6477 , allloss: 5.6477, dt: 694.75ms, fracRes: 0.0243, norm(attn): 0.2949, norm(output): 0.7500, norm(x): 0.7527, norm(y): 0.9945, norm:0.4652, tok/sec: 188661.30, flops:165.24, batch-reuse:1
@ 406 train 5.6384 , allloss: 5.6384, dt: 705.89ms, fracRes: 0.0240, norm(attn): 0.2949, norm(output): 0.7500, norm(x): 0.7558, norm(y): 0.9946, norm:0.4592, tok/sec: 185682.65, flops:162.63, batch-reuse:1
@ 407 train 5.6315 , allloss: 5.6315, dt: 708.19ms, fracRes: 0.0240, norm(attn): 0.3027, norm(output): 0.7500, norm(x): 0.7528, norm(y): 0.9947, norm:0.4576, tok/sec: 185081.03, flops:162.10, batch-reuse:1
@ 408 train 5.6035 , allloss: 5.6035, dt: 721.44ms, fracRes: 0.0253, norm(attn): 0.2969, norm(output): 0.7500, norm(x): 0.7527, norm(y): 0.9946, norm:0.3848, tok/sec: 181680.22, flops:159.13, batch-reuse:1
@ 409 train 5.5655 , allloss: 5.5655, dt: 697.50ms, fracRes: 0.0258, norm(attn): 0.3008, norm(output): 0.7500, norm(x): 0.7578, norm(y): 0.9946, norm:0.4222, tok/sec: 187916.46, flops:164.59, batch-reuse:1
@ 410 train 5.6294 , allloss: 5.6294, dt: 704.49ms, fracRes: 0.0258, norm(attn): 0.3008, norm(output): 0.7500, norm(x): 0.7521, norm(y): 0.9946, norm:0.5071, tok/sec: 186053.53, flops:162.96, batch-reuse:1
@ 411 train 5.6778 , allloss: 5.6778, dt: 706.38ms, fracRes: 0.0248, norm(attn): 0.3027, norm(output): 0.7500, norm(x): 0.7572, norm(y): 0.9946, norm:0.5138, tok/sec: 185554.67, flops:162.52, batch-reuse:1
@ 412 train 5.6652 , allloss: 5.6652, dt: 705.77ms, fracRes: 0.0245, norm(attn): 0.3008, norm(output): 0.7500, norm(x): 0.7578, norm(y): 0.9945, norm:0.4848, tok/sec: 185714.70, flops:162.66, batch-reuse:1
@ 413 train 5.3008 , allloss: 5.3008, dt: 708.93ms, fracRes: 0.0239, norm(attn): 0.3027, norm(output): 0.7422, norm(x): 0.7471, norm(y): 0.9945, norm:0.5611, tok/sec: 184887.14, flops:161.93, batch-reuse:1
@ 414 train 5.6004 , allloss: 5.6004, dt: 711.47ms, fracRes: 0.0269, norm(attn): 0.3086, norm(output): 0.7305, norm(x): 0.7370, norm(y): 0.9945, norm:0.5646, tok/sec: 184226.62, flops:161.36, batch-reuse:1
@ 415 train 5.5486 , allloss: 5.5486, dt: 694.79ms, fracRes: 0.0280, norm(attn): 0.3105, norm(output): 0.7188, norm(x): 0.7304, norm(y): 0.9945, norm:0.4301, tok/sec: 188650.23, flops:165.23, batch-reuse:1
@ 416 train 5.6763 , allloss: 5.6763, dt: 708.51ms, fracRes: 0.0288, norm(attn): 0.3086, norm(output): 0.7461, norm(x): 0.7444, norm(y): 0.9945, norm:0.4170, tok/sec: 184997.01, flops:162.03, batch-reuse:1
@ 417 train 5.5717 , allloss: 5.5717, dt: 706.57ms, fracRes: 0.0292, norm(attn): 0.3105, norm(output): 0.7461, norm(x): 0.7523, norm(y): 0.9945, norm:0.4486, tok/sec: 185505.90, flops:162.48, batch-reuse:1
@ 418 train 5.6511 , allloss: 5.6511, dt: 680.62ms, fracRes: 0.0276, norm(attn): 0.3027, norm(output): 0.7461, norm(x): 0.7550, norm(y): 0.9945, norm:0.4342, tok/sec: 192576.63, flops:168.67, batch-reuse:1
@ 419 train 5.5744 , allloss: 5.5744, dt: 700.12ms, fracRes: 0.0275, norm(attn): 0.3027, norm(output): 0.7500, norm(x): 0.7567, norm(y): 0.9946, norm:0.4442, tok/sec: 187214.90, flops:163.97, batch-reuse:1
@ 420 train 5.5504 , allloss: 5.5504, dt: 700.24ms, fracRes: 0.0299, norm(attn): 0.3066, norm(output): 0.7461, norm(x): 0.7527, norm(y): 0.9946, norm:0.4339, tok/sec: 187181.95, flops:163.94, batch-reuse:1
@ 421 train 5.6442 , allloss: 5.6442, dt: 701.35ms, fracRes: 0.0303, norm(attn): 0.3008, norm(output): 0.7500, norm(x): 0.7530, norm(y): 0.9945, norm:0.6252, tok/sec: 186885.30, flops:163.68, batch-reuse:1
@ 422 train 5.5858 , allloss: 5.5858, dt: 694.94ms, fracRes: 0.0308, norm(attn): 0.3105, norm(output): 0.7500, norm(x): 0.7491, norm(y): 0.9946, norm:0.5820, tok/sec: 188610.03, flops:165.20, batch-reuse:1
@ 423 train 5.5093 , allloss: 5.5093, dt: 699.53ms, fracRes: 0.0309, norm(attn): 0.3145, norm(output): 0.7461, norm(x): 0.7479, norm(y): 0.9947, norm:0.5741, tok/sec: 187372.38, flops:164.11, batch-reuse:1
@ 424 train 5.5918 , allloss: 5.5918, dt: 695.56ms, fracRes: 0.0302, norm(attn): 0.3125, norm(output): 0.7461, norm(x): 0.7545, norm(y): 0.9947, norm:0.3640, tok/sec: 188440.78, flops:165.05, batch-reuse:1
@ 425 train 5.6047 , allloss: 5.6047, dt: 708.25ms, fracRes: 0.0293, norm(attn): 0.3086, norm(output): 0.7500, norm(x): 0.7547, norm(y): 0.9946, norm:0.3760, tok/sec: 185063.65, flops:162.09, batch-reuse:1
@ 426 train 5.4688 , allloss: 5.4688, dt: 685.63ms, fracRes: 0.0286, norm(attn): 0.3047, norm(output): 0.7461, norm(x): 0.7505, norm(y): 0.9945, norm:0.4290, tok/sec: 191171.14, flops:167.44, batch-reuse:1
@ 427 train 5.5494 , allloss: 5.5494, dt: 706.15ms, fracRes: 0.0274, norm(attn): 0.3066, norm(output): 0.7539, norm(x): 0.7639, norm(y): 0.9944, norm:0.4750, tok/sec: 185616.13, flops:162.57, batch-reuse:1
@ 428 train 5.4938 , allloss: 5.4938, dt: 711.33ms, fracRes: 0.0290, norm(attn): 0.3086, norm(output): 0.7461, norm(x): 0.7474, norm(y): 0.9944, norm:0.4143, tok/sec: 184262.99, flops:161.39, batch-reuse:1
@ 429 train 5.4873 , allloss: 5.4873, dt: 715.17ms, fracRes: 0.0283, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7560, norm(y): 0.9944, norm:0.5413, tok/sec: 183272.89, flops:160.52, batch-reuse:1
@ 430 train 5.5562 , allloss: 5.5562, dt: 713.89ms, fracRes: 0.0279, norm(attn): 0.3164, norm(output): 0.7500, norm(x): 0.7541, norm(y): 0.9944, norm:0.6534, tok/sec: 183602.62, flops:160.81, batch-reuse:1
@ 431 train 5.5355 , allloss: 5.5355, dt: 715.50ms, fracRes: 0.0290, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7578, norm(y): 0.9943, norm:0.4849, tok/sec: 183190.32, flops:160.45, batch-reuse:1
@ 432 train 5.6219 , allloss: 5.6219, dt: 711.98ms, fracRes: 0.0299, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7541, norm(y): 0.9943, norm:0.6340, tok/sec: 184094.29, flops:161.24, batch-reuse:1
@ 433 train 5.5424 , allloss: 5.5424, dt: 712.56ms, fracRes: 0.0309, norm(attn): 0.3125, norm(output): 0.7461, norm(x): 0.7510, norm(y): 0.9944, norm:0.4088, tok/sec: 183944.61, flops:161.11, batch-reuse:1
@ 434 train 5.5673 , allloss: 5.5673, dt: 711.32ms, fracRes: 0.0309, norm(attn): 0.3105, norm(output): 0.7461, norm(x): 0.7559, norm(y): 0.9944, norm:0.4070, tok/sec: 184265.27, flops:161.39, batch-reuse:1
@ 435 train 5.4341 , allloss: 5.4341, dt: 711.52ms, fracRes: 0.0315, norm(attn): 0.3105, norm(output): 0.7500, norm(x): 0.7599, norm(y): 0.9944, norm:0.3603, tok/sec: 184214.52, flops:161.35, batch-reuse:1
@ 436 train 5.6219 , allloss: 5.6219, dt: 713.86ms, fracRes: 0.0320, norm(attn): 0.3105, norm(output): 0.7500, norm(x): 0.7571, norm(y): 0.9944, norm:0.3842, tok/sec: 183609.98, flops:160.82, batch-reuse:1
@ 437 train 5.4684 , allloss: 5.4684, dt: 686.40ms, fracRes: 0.0318, norm(attn): 0.3125, norm(output): 0.7461, norm(x): 0.7512, norm(y): 0.9944, norm:0.3834, tok/sec: 190955.26, flops:167.25, batch-reuse:1
@ 438 train 5.4873 , allloss: 5.4873, dt: 705.17ms, fracRes: 0.0309, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7554, norm(y): 0.9943, norm:0.4501, tok/sec: 185874.06, flops:162.80, batch-reuse:1
@ 439 train 5.4472 , allloss: 5.4472, dt: 697.58ms, fracRes: 0.0317, norm(attn): 0.3066, norm(output): 0.7422, norm(x): 0.7443, norm(y): 0.9943, norm:0.3880, tok/sec: 187895.20, flops:164.57, batch-reuse:1
@ 440 train 5.4358 , allloss: 5.4358, dt: 695.05ms, fracRes: 0.0306, norm(attn): 0.3086, norm(output): 0.7383, norm(x): 0.7485, norm(y): 0.9943, norm:0.5110, tok/sec: 188580.14, flops:165.17, batch-reuse:1
@ 441 train 5.5310 , allloss: 5.5310, dt: 695.59ms, fracRes: 0.0300, norm(attn): 0.3125, norm(output): 0.7461, norm(x): 0.7450, norm(y): 0.9944, norm:0.5044, tok/sec: 188432.19, flops:165.04, batch-reuse:1
@ 442 train 5.5480 , allloss: 5.5480, dt: 697.01ms, fracRes: 0.0308, norm(attn): 0.3125, norm(output): 0.7344, norm(x): 0.7405, norm(y): 0.9944, norm:0.4318, tok/sec: 188048.04, flops:164.70, batch-reuse:1
@ 443 train 5.5212 , allloss: 5.5212, dt: 681.64ms, fracRes: 0.0316, norm(attn): 0.3145, norm(output): 0.7422, norm(x): 0.7486, norm(y): 0.9943, norm:0.4402, tok/sec: 192290.08, flops:168.42, batch-reuse:1
@ 444 train 5.5119 , allloss: 5.5119, dt: 700.59ms, fracRes: 0.0336, norm(attn): 0.3145, norm(output): 0.7383, norm(x): 0.7406, norm(y): 0.9944, norm:0.4570, tok/sec: 187087.99, flops:163.86, batch-reuse:1
@ 445 train 5.4698 , allloss: 5.4698, dt: 698.55ms, fracRes: 0.0337, norm(attn): 0.3145, norm(output): 0.7422, norm(x): 0.7420, norm(y): 0.9945, norm:0.4417, tok/sec: 187634.58, flops:164.34, batch-reuse:1
@ 446 train 5.4208 , allloss: 5.4208, dt: 703.88ms, fracRes: 0.0322, norm(attn): 0.3145, norm(output): 0.7422, norm(x): 0.7483, norm(y): 0.9944, norm:0.4176, tok/sec: 186212.28, flops:163.10, batch-reuse:1
@ 447 train 5.4858 , allloss: 5.4858, dt: 706.15ms, fracRes: 0.0317, norm(attn): 0.3164, norm(output): 0.7422, norm(x): 0.7419, norm(y): 0.9944, norm:0.3975, tok/sec: 185614.06, flops:162.57, batch-reuse:1
@ 448 train 5.4290 , allloss: 5.4290, dt: 707.57ms, fracRes: 0.0315, norm(attn): 0.3105, norm(output): 0.7383, norm(x): 0.7406, norm(y): 0.9945, norm:0.3768, tok/sec: 185243.24, flops:162.25, batch-reuse:1
@ 449 train 5.4679 , allloss: 5.4679, dt: 711.20ms, fracRes: 0.0329, norm(attn): 0.3125, norm(output): 0.7422, norm(x): 0.7404, norm(y): 0.9945, norm:0.3879, tok/sec: 184297.64, flops:161.42, batch-reuse:1
@ 450 train 5.4555 , allloss: 5.4555, dt: 711.18ms, fracRes: 0.0331, norm(attn): 0.3086, norm(output): 0.7344, norm(x): 0.7427, norm(y): 0.9944, norm:0.3874, tok/sec: 184301.54, flops:161.42, batch-reuse:1
@ 451 train 5.4510 , allloss: 5.4510, dt: 694.64ms, fracRes: 0.0342, norm(attn): 0.3105, norm(output): 0.7344, norm(x): 0.7431, norm(y): 0.9943, norm:0.4912, tok/sec: 188690.11, flops:165.27, batch-reuse:1
@ 452 train 5.4108 , allloss: 5.4108, dt: 697.16ms, fracRes: 0.0337, norm(attn): 0.3125, norm(output): 0.7305, norm(x): 0.7404, norm(y): 0.9943, norm:0.4728, tok/sec: 188009.00, flops:164.67, batch-reuse:1
@ 453 train 5.4307 , allloss: 5.4307, dt: 684.13ms, fracRes: 0.0337, norm(attn): 0.3145, norm(output): 0.7383, norm(x): 0.7400, norm(y): 0.9944, norm:0.4631, tok/sec: 191589.33, flops:167.80, batch-reuse:1
@ 454 train 5.4834 , allloss: 5.4834, dt: 696.68ms, fracRes: 0.0339, norm(attn): 0.3125, norm(output): 0.7383, norm(x): 0.7404, norm(y): 0.9944, norm:0.4728, tok/sec: 188137.56, flops:164.78, batch-reuse:1
@ 455 train 5.4360 , allloss: 5.4360, dt: 694.88ms, fracRes: 0.0346, norm(attn): 0.3145, norm(output): 0.7461, norm(x): 0.7464, norm(y): 0.9944, norm:0.4400, tok/sec: 188625.50, flops:165.21, batch-reuse:1
@ 456 train 5.5158 , allloss: 5.5158, dt: 695.43ms, fracRes: 0.0353, norm(attn): 0.3125, norm(output): 0.7305, norm(x): 0.7351, norm(y): 0.9944, norm:0.3883, tok/sec: 188475.86, flops:165.08, batch-reuse:1
@ 457 train 5.5220 , allloss: 5.5220, dt: 695.82ms, fracRes: 0.0365, norm(attn): 0.3125, norm(output): 0.7266, norm(x): 0.7365, norm(y): 0.9944, norm:0.4186, tok/sec: 188369.30, flops:164.98, batch-reuse:1
@ 458 train 5.5234 , allloss: 5.5234, dt: 701.93ms, fracRes: 0.0377, norm(attn): 0.3164, norm(output): 0.7383, norm(x): 0.7447, norm(y): 0.9944, norm:0.4890, tok/sec: 186731.49, flops:163.55, batch-reuse:1
@ 459 train 5.4492 , allloss: 5.4492, dt: 696.94ms, fracRes: 0.0366, norm(attn): 0.3145, norm(output): 0.7266, norm(x): 0.7380, norm(y): 0.9944, norm:0.4324, tok/sec: 188066.89, flops:164.72, batch-reuse:1
@ 460 train 5.4466 , allloss: 5.4466, dt: 697.92ms, fracRes: 0.0359, norm(attn): 0.3125, norm(output): 0.7344, norm(x): 0.7395, norm(y): 0.9943, norm:0.4567, tok/sec: 187803.10, flops:164.49, batch-reuse:1
@ 461 train 5.4397 , allloss: 5.4397, dt: 681.89ms, fracRes: 0.0345, norm(attn): 0.3145, norm(output): 0.7305, norm(x): 0.7403, norm(y): 0.9944, norm:0.5743, tok/sec: 192218.28, flops:168.36, batch-reuse:1
@ 462 train 5.5599 , allloss: 5.5599, dt: 703.76ms, fracRes: 0.0343, norm(attn): 0.3105, norm(output): 0.7344, norm(x): 0.7366, norm(y): 0.9943, norm:0.5370, tok/sec: 186244.33, flops:163.12, batch-reuse:1
@ 463 train 5.5171 , allloss: 5.5171, dt: 705.22ms, fracRes: 0.0348, norm(attn): 0.3105, norm(output): 0.7383, norm(x): 0.7416, norm(y): 0.9942, norm:0.6828, tok/sec: 185860.55, flops:162.79, batch-reuse:1
@ 464 train 5.4809 , allloss: 5.4809, dt: 700.99ms, fracRes: 0.0355, norm(attn): 0.3145, norm(output): 0.7461, norm(x): 0.7567, norm(y): 0.9944, norm:0.5726, tok/sec: 186981.03, flops:163.77, batch-reuse:1
@ 465 train 5.4163 , allloss: 5.4163, dt: 688.92ms, fracRes: 0.0388, norm(attn): 0.3340, norm(output): 0.7500, norm(x): 0.7625, norm(y): 0.9944, norm:0.4824, tok/sec: 190258.26, flops:166.64, batch-reuse:1
@ 466 train 5.5281 , allloss: 5.5281, dt: 684.51ms, fracRes: 0.0383, norm(attn): 0.3340, norm(output): 0.7539, norm(x): 0.7704, norm(y): 0.9943, norm:0.6375, tok/sec: 191482.56, flops:167.71, batch-reuse:1
@ 467 train 5.3938 , allloss: 5.3938, dt: 676.97ms, fracRes: 0.0381, norm(attn): 0.3281, norm(output): 0.7539, norm(x): 0.7651, norm(y): 0.9942, norm:0.5357, tok/sec: 193615.05, flops:169.58, batch-reuse:1
@ 468 train 5.3961 , allloss: 5.3961, dt: 684.68ms, fracRes: 0.0367, norm(attn): 0.3281, norm(output): 0.7500, norm(x): 0.7581, norm(y): 0.9942, norm:0.6473, tok/sec: 191435.15, flops:167.67, batch-reuse:1
@ 469 train 5.4010 , allloss: 5.4010, dt: 691.99ms, fracRes: 0.0382, norm(attn): 0.3340, norm(output): 0.7500, norm(x): 0.7590, norm(y): 0.9944, norm:0.6856, tok/sec: 189413.69, flops:165.90, batch-reuse:1
@ 470 train 5.4489 , allloss: 5.4489, dt: 681.44ms, fracRes: 0.0361, norm(attn): 0.3223, norm(output): 0.7656, norm(x): 0.7712, norm(y): 0.9942, norm:0.4744, tok/sec: 192346.26, flops:168.47, batch-reuse:1
@ 471 train 5.3724 , allloss: 5.3724, dt: 677.30ms, fracRes: 0.0395, norm(attn): 0.3203, norm(output): 0.7500, norm(x): 0.7643, norm(y): 0.9942, norm:0.4785, tok/sec: 193521.89, flops:169.50, batch-reuse:1
@ 472 train 5.4647 , allloss: 5.4647, dt: 673.30ms, fracRes: 0.0401, norm(attn): 0.3223, norm(output): 0.7539, norm(x): 0.7672, norm(y): 0.9942, norm:0.6366, tok/sec: 194672.26, flops:170.50, batch-reuse:1
@ 473 train 5.4082 , allloss: 5.4082, dt: 686.85ms, fracRes: 0.0409, norm(attn): 0.3262, norm(output): 0.7539, norm(x): 0.7679, norm(y): 0.9943, norm:0.5848, tok/sec: 190831.97, flops:167.14, batch-reuse:1
@ 474 train 5.3335 , allloss: 5.3335, dt: 690.01ms, fracRes: 0.0414, norm(attn): 0.3223, norm(output): 0.7539, norm(x): 0.7669, norm(y): 0.9943, norm:0.4506, tok/sec: 189956.84, flops:166.37, batch-reuse:1
@ 475 train 5.3613 , allloss: 5.3613, dt: 684.52ms, fracRes: 0.0411, norm(attn): 0.3223, norm(output): 0.7461, norm(x): 0.7569, norm(y): 0.9943, norm:0.4161, tok/sec: 191479.09, flops:167.71, batch-reuse:1
@ 476 train 5.3636 , allloss: 5.3636, dt: 686.28ms, fracRes: 0.0414, norm(attn): 0.3262, norm(output): 0.7461, norm(x): 0.7517, norm(y): 0.9943, norm:0.4032, tok/sec: 190987.90, flops:167.28, batch-reuse:1
@ 477 train 5.4410 , allloss: 5.4410, dt: 674.73ms, fracRes: 0.0404, norm(attn): 0.3281, norm(output): 0.7461, norm(x): 0.7558, norm(y): 0.9943, norm:0.4402, tok/sec: 194258.29, flops:170.14, batch-reuse:1
@ 478 train 5.3491 , allloss: 5.3491, dt: 681.18ms, fracRes: 0.0398, norm(attn): 0.3281, norm(output): 0.7500, norm(x): 0.7608, norm(y): 0.9943, norm:0.5074, tok/sec: 192418.23, flops:168.53, batch-reuse:1
@ 479 train 5.4224 , allloss: 5.4224, dt: 678.49ms, fracRes: 0.0409, norm(attn): 0.3242, norm(output): 0.7500, norm(x): 0.7632, norm(y): 0.9943, norm:0.4713, tok/sec: 193181.26, flops:169.20, batch-reuse:1
@ 480 train 5.3025 , allloss: 5.3025, dt: 688.94ms, fracRes: 0.0417, norm(attn): 0.3262, norm(output): 0.7500, norm(x): 0.7572, norm(y): 0.9944, norm:0.4615, tok/sec: 190250.82, flops:166.63, batch-reuse:1
@ 481 train 5.3815 , allloss: 5.3815, dt: 689.36ms, fracRes: 0.0421, norm(attn): 0.3242, norm(output): 0.7461, norm(x): 0.7573, norm(y): 0.9943, norm:0.4322, tok/sec: 190137.05, flops:166.53, batch-reuse:1
@ 482 train 5.3533 , allloss: 5.3533, dt: 695.67ms, fracRes: 0.0424, norm(attn): 0.3242, norm(output): 0.7461, norm(x): 0.7578, norm(y): 0.9943, norm:0.4176, tok/sec: 188410.94, flops:165.02, batch-reuse:1
@ 483 train 5.4503 , allloss: 5.4503, dt: 692.78ms, fracRes: 0.0424, norm(attn): 0.3223, norm(output): 0.7500, norm(x): 0.7563, norm(y): 0.9943, norm:0.4054, tok/sec: 189197.92, flops:165.71, batch-reuse:1
@ 484 train 5.2630 , allloss: 5.2630, dt: 688.72ms, fracRes: 0.0419, norm(attn): 0.3223, norm(output): 0.7422, norm(x): 0.7515, norm(y): 0.9943, norm:0.4565, tok/sec: 190311.74, flops:166.69, batch-reuse:1
@ 485 train 5.2494 , allloss: 5.2494, dt: 689.14ms, fracRes: 0.0408, norm(attn): 0.3242, norm(output): 0.7461, norm(x): 0.7544, norm(y): 0.9943, norm:0.5299, tok/sec: 190197.84, flops:166.59, batch-reuse:1
@ 486 train 5.4133 , allloss: 5.4133, dt: 690.03ms, fracRes: 0.0410, norm(attn): 0.3281, norm(output): 0.7461, norm(x): 0.7585, norm(y): 0.9943, norm:0.4772, tok/sec: 189952.05, flops:166.37, batch-reuse:1
@ 487 train 5.2964 , allloss: 5.2964, dt: 688.84ms, fracRes: 0.0406, norm(attn): 0.3242, norm(output): 0.7461, norm(x): 0.7590, norm(y): 0.9942, norm:0.4237, tok/sec: 190278.15, flops:166.66, batch-reuse:1
@ 488 train 5.2581 , allloss: 5.2581, dt: 695.52ms, fracRes: 0.0419, norm(attn): 0.3242, norm(output): 0.7461, norm(x): 0.7555, norm(y): 0.9943, norm:0.4038, tok/sec: 188452.02, flops:165.06, batch-reuse:1
@ 489 train 5.2845 , allloss: 5.2845, dt: 684.84ms, fracRes: 0.0418, norm(attn): 0.3203, norm(output): 0.7422, norm(x): 0.7452, norm(y): 0.9943, norm:0.4041, tok/sec: 191390.57, flops:167.63, batch-reuse:1
@ 490 train 5.4123 , allloss: 5.4123, dt: 684.85ms, fracRes: 0.0421, norm(attn): 0.3164, norm(output): 0.7422, norm(x): 0.7487, norm(y): 0.9942, norm:0.4160, tok/sec: 191387.30, flops:167.63, batch-reuse:1
@ 491 train 5.3916 , allloss: 5.3916, dt: 693.33ms, fracRes: 0.0426, norm(attn): 0.3145, norm(output): 0.7500, norm(x): 0.7574, norm(y): 0.9942, norm:0.4927, tok/sec: 189047.11, flops:165.58, batch-reuse:1
@ 492 train 5.4215 , allloss: 5.4215, dt: 709.41ms, fracRes: 0.0428, norm(attn): 0.3164, norm(output): 0.7500, norm(x): 0.7615, norm(y): 0.9942, norm:0.7033, tok/sec: 184760.88, flops:161.82, batch-reuse:1
@ 493 train 5.3453 , allloss: 5.3453, dt: 688.83ms, fracRes: 0.0435, norm(attn): 0.3184, norm(output): 0.7500, norm(x): 0.7596, norm(y): 0.9942, norm:0.4792, tok/sec: 190282.17, flops:166.66, batch-reuse:1
@ 494 train 5.3466 , allloss: 5.3466, dt: 699.41ms, fracRes: 0.0467, norm(attn): 0.3203, norm(output): 0.7461, norm(x): 0.7506, norm(y): 0.9942, norm:0.4531, tok/sec: 187403.36, flops:164.14, batch-reuse:1
@ 495 train 5.2394 , allloss: 5.2394, dt: 717.12ms, fracRes: 0.0485, norm(attn): 0.3184, norm(output): 0.7344, norm(x): 0.7391, norm(y): 0.9942, norm:0.4465, tok/sec: 182775.14, flops:160.08, batch-reuse:1
@ 496 train 5.3295 , allloss: 5.3295, dt: 714.97ms, fracRes: 0.0488, norm(attn): 0.3184, norm(output): 0.7266, norm(x): 0.7401, norm(y): 0.9941, norm:0.3924, tok/sec: 183324.96, flops:160.57, batch-reuse:1
@ 497 train 5.2669 , allloss: 5.2669, dt: 711.99ms, fracRes: 0.0483, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7444, norm(y): 0.9940, norm:0.4552, tok/sec: 184093.49, flops:161.24, batch-reuse:1
@ 498 train 5.3855 , allloss: 5.3855, dt: 684.06ms, fracRes: 0.0471, norm(attn): 0.3184, norm(output): 0.7383, norm(x): 0.7461, norm(y): 0.9940, norm:0.3631, tok/sec: 191608.63, flops:167.82, batch-reuse:1
@ 499 train 5.3583 , allloss: 5.3583, dt: 681.49ms, fracRes: 0.0470, norm(attn): 0.3203, norm(output): 0.7344, norm(x): 0.7450, norm(y): 0.9941, norm:0.4324, tok/sec: 192330.85, flops:168.45, batch-reuse:1
@ 500 train 5.2535 , allloss: 5.2535, dt: 680.31ms, fracRes: 0.0460, norm(attn): 0.3242, norm(output): 0.7305, norm(x): 0.7394, norm(y): 0.9940, norm:0.4138, tok/sec: 192663.96, flops:168.75, batch-reuse:1
@ 501 train 5.3811 , allloss: 5.3811, dt: 682.98ms, fracRes: 0.0459, norm(attn): 0.3184, norm(output): 0.7344, norm(x): 0.7388, norm(y): 0.9940, norm:0.4223, tok/sec: 191911.76, flops:168.09, batch-reuse:1
@ 502 train 5.3670 , allloss: 5.3670, dt: 680.24ms, fracRes: 0.0458, norm(attn): 0.3145, norm(output): 0.7344, norm(x): 0.7391, norm(y): 0.9940, norm:0.4226, tok/sec: 192685.36, flops:168.76, batch-reuse:1
@ 503 train 5.3082 , allloss: 5.3082, dt: 684.76ms, fracRes: 0.0457, norm(attn): 0.3145, norm(output): 0.7344, norm(x): 0.7452, norm(y): 0.9940, norm:0.4301, tok/sec: 191414.36, flops:167.65, batch-reuse:1
@ 504 train 5.3339 , allloss: 5.3339, dt: 687.03ms, fracRes: 0.0474, norm(attn): 0.3145, norm(output): 0.7422, norm(x): 0.7513, norm(y): 0.9940, norm:0.4530, tok/sec: 190781.38, flops:167.10, batch-reuse:1
@ 505 train 5.2698 , allloss: 5.2698, dt: 681.39ms, fracRes: 0.0494, norm(attn): 0.3145, norm(output): 0.7383, norm(x): 0.7475, norm(y): 0.9940, norm:0.4290, tok/sec: 192360.19, flops:168.48, batch-reuse:1
@ 506 train 5.3375 , allloss: 5.3375, dt: 679.42ms, fracRes: 0.0516, norm(attn): 0.3164, norm(output): 0.7266, norm(x): 0.7394, norm(y): 0.9940, norm:0.3953, tok/sec: 192918.57, flops:168.97, batch-reuse:1
@ 507 train 5.2761 , allloss: 5.2761, dt: 671.90ms, fracRes: 0.0513, norm(attn): 0.3203, norm(output): 0.7305, norm(x): 0.7395, norm(y): 0.9940, norm:0.4002, tok/sec: 195076.64, flops:170.86, batch-reuse:1
@ 508 train 5.1979 , allloss: 5.1979, dt: 682.25ms, fracRes: 0.0509, norm(attn): 0.3242, norm(output): 0.7344, norm(x): 0.7422, norm(y): 0.9940, norm:0.3957, tok/sec: 192116.11, flops:168.27, batch-reuse:1
@ 509 train 5.3081 , allloss: 5.3081, dt: 683.57ms, fracRes: 0.0516, norm(attn): 0.3242, norm(output): 0.7344, norm(x): 0.7421, norm(y): 0.9940, norm:0.3683, tok/sec: 191745.03, flops:167.94, batch-reuse:1
@ 510 train 5.2513 , allloss: 5.2513, dt: 671.98ms, fracRes: 0.0522, norm(attn): 0.3242, norm(output): 0.7227, norm(x): 0.7364, norm(y): 0.9940, norm:0.4175, tok/sec: 195053.66, flops:170.84, batch-reuse:1
@ 511 train 5.3247 , allloss: 5.3247, dt: 679.89ms, fracRes: 0.0523, norm(attn): 0.3164, norm(output): 0.7148, norm(x): 0.7311, norm(y): 0.9940, norm:0.4351, tok/sec: 192785.50, flops:168.85, batch-reuse:1
@ 512 train 5.2330 , allloss: 5.2330, dt: 675.39ms, fracRes: 0.0508, norm(attn): 0.3145, norm(output): 0.7266, norm(x): 0.7389, norm(y): 0.9940, norm:0.3961, tok/sec: 194069.78, flops:169.98, batch-reuse:1
@ 513 train 5.2150 , allloss: 5.2150, dt: 677.32ms, fracRes: 0.0513, norm(attn): 0.3164, norm(output): 0.7266, norm(x): 0.7380, norm(y): 0.9940, norm:0.3960, tok/sec: 193516.57, flops:169.49, batch-reuse:1
@ 514 train 5.2129 , allloss: 5.2129, dt: 675.87ms, fracRes: 0.0533, norm(attn): 0.3184, norm(output): 0.7344, norm(x): 0.7430, norm(y): 0.9940, norm:0.4258, tok/sec: 193931.97, flops:169.86, batch-reuse:1
@ 515 train 5.1590 , allloss: 5.1590, dt: 679.87ms, fracRes: 0.0520, norm(attn): 0.3203, norm(output): 0.7188, norm(x): 0.7352, norm(y): 0.9940, norm:0.5919, tok/sec: 192789.09, flops:168.86, batch-reuse:1
@ 516 train 5.1746 , allloss: 5.1746, dt: 681.76ms, fracRes: 0.0539, norm(attn): 0.3145, norm(output): 0.7109, norm(x): 0.7283, norm(y): 0.9940, norm:0.6074, tok/sec: 192254.38, flops:168.39, batch-reuse:1
@ 517 train 5.1620 , allloss: 5.1620, dt: 677.65ms, fracRes: 0.0548, norm(attn): 0.3125, norm(output): 0.7109, norm(x): 0.7309, norm(y): 0.9940, norm:0.5222, tok/sec: 193420.85, flops:169.41, batch-reuse:1
@ 518 train 5.2360 , allloss: 5.2360, dt: 680.27ms, fracRes: 0.0499, norm(attn): 0.3145, norm(output): 0.7070, norm(x): 0.7290, norm(y): 0.9939, norm:0.5805, tok/sec: 192676.04, flops:168.76, batch-reuse:1
@ 519 train 5.2138 , allloss: 5.2138, dt: 674.31ms, fracRes: 0.0521, norm(attn): 0.3320, norm(output): 0.7188, norm(x): 0.7308, norm(y): 0.9939, norm:0.6540, tok/sec: 194380.62, flops:170.25, batch-reuse:1
@ 520 train 5.2532 , allloss: 5.2532, dt: 682.31ms, fracRes: 0.0497, norm(attn): 0.3262, norm(output): 0.7188, norm(x): 0.7367, norm(y): 0.9939, norm:0.5760, tok/sec: 192099.73, flops:168.25, batch-reuse:1
@ 521 train 5.3422 , allloss: 5.3422, dt: 679.56ms, fracRes: 0.0514, norm(attn): 0.3203, norm(output): 0.7305, norm(x): 0.7436, norm(y): 0.9939, norm:0.4928, tok/sec: 192878.50, flops:168.93, batch-reuse:1
@ 522 train 5.1727 , allloss: 5.1727, dt: 682.75ms, fracRes: 0.0539, norm(attn): 0.3164, norm(output): 0.7266, norm(x): 0.7451, norm(y): 0.9940, norm:0.4471, tok/sec: 191976.84, flops:168.14, batch-reuse:1
@ 523 train 5.2430 , allloss: 5.2430, dt: 679.48ms, fracRes: 0.0551, norm(attn): 0.3203, norm(output): 0.7266, norm(x): 0.7403, norm(y): 0.9940, norm:0.4802, tok/sec: 192901.11, flops:168.95, batch-reuse:1
@ 524 train 5.1215 , allloss: 5.1215, dt: 691.18ms, fracRes: 0.0568, norm(attn): 0.3262, norm(output): 0.7305, norm(x): 0.7427, norm(y): 0.9940, norm:0.3904, tok/sec: 189635.32, flops:166.09, batch-reuse:1
@ 525 train 5.2045 , allloss: 5.2045, dt: 684.82ms, fracRes: 0.0593, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7427, norm(y): 0.9940, norm:0.4598, tok/sec: 191397.30, flops:167.64, batch-reuse:1
@ 526 train 5.2322 , allloss: 5.2322, dt: 680.80ms, fracRes: 0.0575, norm(attn): 0.3242, norm(output): 0.7227, norm(x): 0.7383, norm(y): 0.9939, norm:0.5655, tok/sec: 192526.25, flops:168.63, batch-reuse:1
@ 527 train 5.2318 , allloss: 5.2318, dt: 685.95ms, fracRes: 0.0548, norm(attn): 0.3242, norm(output): 0.7266, norm(x): 0.7405, norm(y): 0.9939, norm:0.4847, tok/sec: 191079.64, flops:167.36, batch-reuse:1
@ 528 train 5.1367 , allloss: 5.1367, dt: 689.59ms, fracRes: 0.0555, norm(attn): 0.3281, norm(output): 0.7148, norm(x): 0.7310, norm(y): 0.9940, norm:0.4638, tok/sec: 190072.50, flops:166.48, batch-reuse:1
@ 529 train 5.1886 , allloss: 5.1886, dt: 680.31ms, fracRes: 0.0578, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7298, norm(y): 0.9940, norm:0.4003, tok/sec: 192664.03, flops:168.75, batch-reuse:1
@ 530 train 5.2384 , allloss: 5.2384, dt: 688.57ms, fracRes: 0.0554, norm(attn): 0.3242, norm(output): 0.7188, norm(x): 0.7336, norm(y): 0.9939, norm:0.4024, tok/sec: 190353.92, flops:166.72, batch-reuse:1
@ 531 train 5.4119 , allloss: 5.4119, dt: 681.65ms, fracRes: 0.0551, norm(attn): 0.3164, norm(output): 0.7188, norm(x): 0.7392, norm(y): 0.9938, norm:0.4655, tok/sec: 192285.51, flops:168.41, batch-reuse:1
@ 532 train 5.0820 , allloss: 5.0820, dt: 675.64ms, fracRes: 0.0543, norm(attn): 0.3145, norm(output): 0.7148, norm(x): 0.7337, norm(y): 0.9938, norm:0.5133, tok/sec: 193996.77, flops:169.91, batch-reuse:1
@ 533 train 5.1789 , allloss: 5.1789, dt: 675.74ms, fracRes: 0.0577, norm(attn): 0.3184, norm(output): 0.7031, norm(x): 0.7255, norm(y): 0.9938, norm:0.4792, tok/sec: 193968.37, flops:169.89, batch-reuse:1
@ 534 train 5.1144 , allloss: 5.1144, dt: 677.14ms, fracRes: 0.0566, norm(attn): 0.3223, norm(output): 0.7031, norm(x): 0.7300, norm(y): 0.9939, norm:0.4343, tok/sec: 193566.65, flops:169.54, batch-reuse:1
@ 535 train 5.2724 , allloss: 5.2724, dt: 677.67ms, fracRes: 0.0573, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7326, norm(y): 0.9939, norm:0.5077, tok/sec: 193417.03, flops:169.41, batch-reuse:1
@ 536 train 5.1465 , allloss: 5.1465, dt: 672.42ms, fracRes: 0.0555, norm(attn): 0.3203, norm(output): 0.7109, norm(x): 0.7287, norm(y): 0.9939, norm:0.4441, tok/sec: 194924.68, flops:170.73, batch-reuse:1
@ 537 train 5.1392 , allloss: 5.1392, dt: 681.63ms, fracRes: 0.0567, norm(attn): 0.3223, norm(output): 0.7109, norm(x): 0.7279, norm(y): 0.9938, norm:0.4211, tok/sec: 192291.63, flops:168.42, batch-reuse:1
@ 538 train 5.2660 , allloss: 5.2660, dt: 674.41ms, fracRes: 0.0621, norm(attn): 0.3164, norm(output): 0.6953, norm(x): 0.7246, norm(y): 0.9938, norm:0.4999, tok/sec: 194349.83, flops:170.22, batch-reuse:1
@ 539 train 5.1799 , allloss: 5.1799, dt: 671.28ms, fracRes: 0.0618, norm(attn): 0.3223, norm(output): 0.7109, norm(x): 0.7345, norm(y): 0.9938, norm:0.5452, tok/sec: 195255.95, flops:171.02, batch-reuse:1
@ 540 train 5.2095 , allloss: 5.2095, dt: 677.40ms, fracRes: 0.0596, norm(attn): 0.3164, norm(output): 0.7070, norm(x): 0.7314, norm(y): 0.9938, norm:0.4148, tok/sec: 193492.46, flops:169.47, batch-reuse:1
@ 541 train 5.2070 , allloss: 5.2070, dt: 687.41ms, fracRes: 0.0603, norm(attn): 0.3145, norm(output): 0.7031, norm(x): 0.7260, norm(y): 0.9937, norm:0.4175, tok/sec: 190675.97, flops:167.00, batch-reuse:1
@ 542 train 5.1648 , allloss: 5.1648, dt: 685.50ms, fracRes: 0.0609, norm(attn): 0.3145, norm(output): 0.7031, norm(x): 0.7292, norm(y): 0.9937, norm:0.4506, tok/sec: 191205.71, flops:167.47, batch-reuse:1
@ 543 train 5.2081 , allloss: 5.2081, dt: 686.32ms, fracRes: 0.0621, norm(attn): 0.3164, norm(output): 0.7031, norm(x): 0.7310, norm(y): 0.9937, norm:0.4423, tok/sec: 190978.15, flops:167.27, batch-reuse:1
@ 544 train 5.1376 , allloss: 5.1376, dt: 678.77ms, fracRes: 0.0635, norm(attn): 0.3184, norm(output): 0.7031, norm(x): 0.7288, norm(y): 0.9937, norm:0.4236, tok/sec: 193101.13, flops:169.13, batch-reuse:1
@ 545 train 5.1675 , allloss: 5.1675, dt: 678.83ms, fracRes: 0.0632, norm(attn): 0.3164, norm(output): 0.7109, norm(x): 0.7341, norm(y): 0.9937, norm:0.4091, tok/sec: 193084.78, flops:169.11, batch-reuse:1
@ 546 train 5.0471 , allloss: 5.0471, dt: 684.47ms, fracRes: 0.0637, norm(attn): 0.3184, norm(output): 0.7109, norm(x): 0.7347, norm(y): 0.9937, norm:0.3879, tok/sec: 191494.37, flops:167.72, batch-reuse:1
@ 547 train 5.2200 , allloss: 5.2200, dt: 691.77ms, fracRes: 0.0629, norm(attn): 0.3203, norm(output): 0.7109, norm(x): 0.7333, norm(y): 0.9937, norm:0.4564, tok/sec: 189474.53, flops:165.95, batch-reuse:1
@ 548 train 5.1844 , allloss: 5.1844, dt: 688.20ms, fracRes: 0.0614, norm(attn): 0.3203, norm(output): 0.7070, norm(x): 0.7293, norm(y): 0.9937, norm:0.4247, tok/sec: 190457.19, flops:166.81, batch-reuse:1
@ 549 train 5.1035 , allloss: 5.1035, dt: 683.06ms, fracRes: 0.0618, norm(attn): 0.3203, norm(output): 0.7070, norm(x): 0.7241, norm(y): 0.9937, norm:0.4563, tok/sec: 191889.59, flops:168.07, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0240,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0106,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0017,     0.0193,     0.9805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0630,     0.0889,     0.5391,     0.0679,     0.2412,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0079,     0.0461,     0.2402,     0.1924,     0.4453,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0518,     0.1885,     0.3594,     0.0588,     0.1245,     0.1196,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0981,     0.0674,     0.1953,     0.1094,     0.1289,     0.1060,     0.2090,     0.0864,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0288,     0.0728,     0.1099,     0.0258,     0.1768,     0.3027,     0.0605,     0.0476,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0625,     0.0192,     0.0630,     0.1777,     0.1250,     0.0588,     0.0825,     0.0306,     0.1201,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1777,     0.0845,     0.0703,     0.0127,     0.1299,     0.1914,     0.0242,     0.1025,     0.0938,     0.0928,     0.0203,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0041,     0.0559,     0.5352,     0.0588,     0.0108,     0.0161,     0.0107,     0.0198,     0.0315,     0.2451,     0.0081,     0.0000,     0.0000,     0.0000],
        [    0.2158,     0.0757,     0.1143,     0.0262,     0.0317,     0.0267,     0.0630,     0.0559,     0.0520,     0.0298,     0.0410,     0.1011,     0.1670,     0.0000,     0.0000],
        [    0.0400,     0.1230,     0.0496,     0.0145,     0.1016,     0.1943,     0.0786,     0.0261,     0.1133,     0.0417,     0.0154,     0.0579,     0.0520,     0.0908,     0.0000],
        [    0.0084,     0.0334,     0.1611,     0.2236,     0.0757,     0.0036,     0.0280,     0.0237,     0.0332,     0.0132,     0.0391,     0.0474,     0.1572,     0.0767,     0.0757]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.3242,     -0.4043,     -0.6094,     -0.6758,     -0.5820,     -0.3828,     -0.3340,     -0.5469,     -0.5625,     -0.7070,     -0.3125,     -0.0522,     -0.5586,     -0.5586],
        [     0.0010,      3.7031,      3.0625,      3.5000,      3.2344,      3.3594,      2.7969,      1.5312,      2.5781,      2.3906,      2.9062,      2.0312,      1.4453,      2.8281,      3.1406],
        [     0.0009,      2.6250,      7.1562,      8.4375,      5.4688,      2.9531,      3.4062,      2.3281,      3.4688,      4.1250,      7.3125,      2.9219,      2.2656,      4.2188,      5.1250],
        [    -0.0004,      2.2031,      4.6250,      8.5625,      6.0000,      3.3906,      3.2031,      2.5312,      4.5938,      4.1250,      7.7188,      3.4531,      1.7891,      5.0938,      4.4688],
        [    -0.0069,      0.3379,      2.1406,      0.0688,      1.3359,      1.8594,      0.8984,      0.5703,      0.7852,      1.5938,      1.0469,      0.9688,     -1.2422,      0.5820,      0.1138],
        [    -0.0054,      1.7578,      3.4062,      3.1875,      4.0312,      2.1406,      2.6250,      1.7344,      3.1875,      3.0469,      4.3750,      1.8438,     -0.3477,      3.5469,      2.0625],
        [    -0.0070,      1.2891,      1.9297,      0.1250,      0.8750,      0.8359,      0.6328,      0.4297,     -0.5352,     -0.7578,     -0.6016,      1.1250,      0.9805,      0.2832,     -0.0344],
        [     0.0102,     -0.3652,      0.6992,      0.1182,      0.2871,      0.0898,      0.7656,     -0.1182,      0.0271,      0.4473,      1.0859,     -0.2578,     -0.3828,     -0.4316,     -0.4199],
        [     0.0010,      0.9297,      1.3438,     -0.1113,      1.8203,      2.3594,      0.7422,      0.5039,      1.7969,      0.6367,      0.5391,      1.3906,     -0.3594,      1.7031,      0.8477],
        [     0.0105,     -1.1719,      0.0193,      1.0547,      0.6992,     -0.0500,      0.2852,     -0.7031,      0.6641,      1.4375,      1.6719,     -0.1138,     -1.1562,      0.1279,      0.4043],
        [    -0.0134,     -0.7578,     -0.9414,     -2.6562,     -0.3223,      0.0623,     -2.0000,     -0.5586,     -0.6523,     -0.6641,     -2.1875,      0.0811,     -0.5234,     -0.8086,     -0.2969],
        [     0.0031,      0.6562,      3.2656,      5.5312,      3.3125,      1.6250,      2.0156,      1.6250,      2.2344,      2.7031,      4.7500,      1.3281,      1.7656,      1.8281,      2.6250],
        [     0.0046,     -1.0391,     -0.6289,     -2.1094,     -1.9141,     -2.0781,     -1.2188,     -1.3438,     -1.4141,     -1.9766,     -1.6562,     -0.7539,     -0.2490,     -1.4844,     -2.0156],
        [    -0.0036,      1.1172,      0.2070,     -1.0234,      0.9258,      1.5781,      0.6719,     -0.4336,      1.0391,      0.0386,     -0.9570,      0.3633,      0.2539,      0.8125,     -0.6250],
        [    -0.0060,      1.3672,      2.9375,      3.2812,      2.1875,     -0.8594,      1.1953,      1.0312,      1.3594,      0.4414,      1.5312,      1.7188,      2.9219,      2.2031,      2.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3264],
        [0.0336],
        [0.1927],
        [0.1813],
        [0.1613],
        [0.1624],
        [0.0348],
        [0.1070],
        [0.0406],
        [0.1747],
        [0.0193],
        [0.0878],
        [0.1080],
        [0.0240]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0014,     0.0058,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7812,     0.0186,     0.0554,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0012,     0.0630,     0.0002,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0150,     0.0075,     0.0020,     0.0122,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0002,     0.0000,     0.0004,     0.0002,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0001,     0.0007,     0.0001,     0.0029,     0.0003,     0.0193,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0004,     0.0012,     0.0001,     0.0011,     0.0002,     0.0014,     0.0121,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0481,     0.0002,     0.0215,     0.0010,     0.0007,     0.0006,     0.0035,     0.6484,     0.0001,     0.2773,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5742,     0.0072,     0.0166,     0.0016,     0.0054,     0.0172,     0.0181,     0.2988,     0.0248,     0.0344,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7617,     0.0026,     0.0049,     0.0223,     0.0009,     0.0004,     0.0017,     0.1816,     0.0028,     0.0001,     0.0000,     0.0216,     0.0000,     0.0000,     0.0000],
        [    0.8320,     0.0007,     0.0010,     0.0001,     0.0053,     0.0008,     0.0166,     0.0026,     0.0195,     0.0004,     0.0001,     0.0023,     0.1187,     0.0000,     0.0000],
        [    0.8945,     0.0010,     0.0022,     0.0002,     0.0023,     0.0010,     0.0030,     0.0186,     0.0011,     0.0120,     0.0001,     0.0021,     0.0613,     0.0010,     0.0000],
        [    0.4434,     0.0006,     0.0011,     0.0014,     0.0006,     0.0000,     0.0001,     0.0028,     0.0000,     0.0000,     0.0000,     0.0033,     0.5430,     0.0000,     0.0027]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.1196,     -0.0688,     -0.1387,     -0.1377,     -0.1387,     -0.1260,     -0.0332,     -0.1631,     -0.1167,     -0.2451,     -0.0615,     -0.0281,     -0.1826,     -0.1113],
        [     0.0203,     -4.7188,     -3.8906,     -7.0938,     -5.0312,     -9.1250,     -7.3125,     -3.4844,     -9.3750,     -6.5000,    -13.0625,     -5.7812,     -3.0312,    -10.1875,     -6.1562],
        [     0.0439,     -6.5000,     -5.0938,     -4.9375,     -6.3125,    -11.1875,     -8.3125,     -2.7031,    -10.5000,     -8.6250,    -15.6875,     -7.1562,     -0.9492,    -11.5000,     -8.1875],
        [     0.0481,     -3.6875,     -2.5938,     -1.6406,     -3.8125,     -6.9062,     -6.3750,     -0.3398,     -5.8750,     -4.6562,    -10.4375,     -4.4688,      1.3594,     -6.9688,     -4.9375],
        [     0.0354,     -6.6562,     -2.6719,     -8.3125,     -7.1562,     -6.5938,     -6.6875,     -0.4688,     -9.9375,     -2.7031,    -12.5625,     -3.0469,     -3.0625,    -10.6875,     -6.3125],
        [    -0.0308,     -4.1875,     -4.8750,     -6.2188,     -4.4062,     -5.8438,     -3.0781,     -2.2188,     -1.6953,     -6.2812,     -7.9062,     -4.4688,     -0.5352,     -2.6562,     -3.1719],
        [    -0.0097,     -7.8125,     -8.6875,    -10.6875,     -7.8125,     -8.8125,     -6.0000,     -6.2500,     -7.0625,    -11.3125,    -12.6250,     -6.1562,     -3.7188,     -7.2500,     -5.1562],
        [    -0.0057,     -8.8750,     -7.3125,     -9.6250,     -5.8125,     -8.1875,     -3.9219,     -4.8750,     -5.2500,     -8.2500,    -10.0000,     -6.0938,     -1.9531,     -5.6250,     -4.5312],
        [     0.0147,     -7.9062,     -6.7500,     -9.5625,     -6.7500,     -8.3125,     -6.5625,     -4.3750,     -8.1250,     -5.7812,    -11.3750,     -6.8438,     -3.3281,     -8.5000,     -6.8438],
        [     0.0398,     -5.3750,     -0.7617,     -3.8438,     -4.2500,     -4.3438,     -2.5781,      2.6406,     -5.9062,      1.7891,     -6.7188,     -2.4844,      1.1406,     -6.5000,     -4.8750],
        [    -0.0007,     -4.3750,     -3.5469,     -5.9062,     -4.6562,     -3.5156,     -3.4531,     -0.6523,     -3.1406,     -2.8125,     -6.7500,     -2.3281,      0.1143,     -3.5781,     -2.8906],
        [     0.0295,     -5.6562,     -5.0000,     -3.5000,     -6.7500,     -7.6250,     -6.0938,     -1.4062,     -5.5938,     -8.7500,    -12.3750,     -3.5312,      2.6094,     -6.7812,     -4.6250],
        [    -0.0244,     -7.0938,     -6.7812,     -9.5625,     -5.0625,     -6.9688,     -3.9375,     -5.7812,     -3.7812,     -7.6875,     -9.0625,     -5.9062,     -1.9766,     -3.6406,     -2.7969],
        [     0.0117,     -6.8125,     -6.0312,     -8.6250,     -5.9688,     -6.7500,     -5.6875,     -3.8594,     -6.6875,     -4.3125,     -9.4375,     -6.0625,     -2.6719,     -6.7812,     -5.7188],
        [     0.0138,     -6.5938,     -5.9375,     -5.7188,     -6.5938,     -9.8125,     -8.6250,     -5.0312,     -9.7500,     -9.8125,    -13.9375,     -4.8750,      0.2148,    -10.1875,     -5.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7793],
        [0.6612],
        [0.5956],
        [0.6666],
        [0.6246],
        [0.5057],
        [0.5679],
        [0.4126],
        [0.4194],
        [0.3311],
        [0.4061],
        [0.4563],
        [0.3510],
        [0.3672]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0024,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0042,     0.0029,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0051,     0.0034,     0.0009,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0041,     0.0022,     0.0003,     0.0439,     0.0083,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8594,     0.0042,     0.0019,     0.0003,     0.0525,     0.0051,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8281,     0.0074,     0.0025,     0.0006,     0.0698,     0.0028,     0.0703,     0.0165,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0084,     0.0049,     0.0012,     0.0559,     0.0076,     0.0996,     0.0265,     0.0182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8711,     0.0041,     0.0018,     0.0003,     0.0420,     0.0024,     0.0540,     0.0137,     0.0096,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7227,     0.0070,     0.0043,     0.0009,     0.0630,     0.0088,     0.1201,     0.0354,     0.0243,     0.0060,     0.0091,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8594,     0.0045,     0.0017,     0.0004,     0.0356,     0.0049,     0.0493,     0.0136,     0.0166,     0.0013,     0.0033,     0.0076,     0.0000,     0.0000,     0.0000],
        [    0.7422,     0.0068,     0.0033,     0.0007,     0.0884,     0.0033,     0.0781,     0.0211,     0.0223,     0.0025,     0.0028,     0.0079,     0.0208,     0.0000,     0.0000],
        [    0.7383,     0.0071,     0.0046,     0.0010,     0.0488,     0.0059,     0.0884,     0.0222,     0.0147,     0.0035,     0.0048,     0.0106,     0.0248,     0.0244,     0.0000],
        [    0.8398,     0.0018,     0.0009,     0.0001,     0.0334,     0.0013,     0.0417,     0.0094,     0.0073,     0.0010,     0.0017,     0.0030,     0.0132,     0.0139,     0.0320]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0981,     -0.1157,     -0.1436,     -0.0596,     -0.1157,     -0.0520,     -0.0820,     -0.0869,     -0.1309,     -0.1108,     -0.0879,     -0.0840,     -0.0771,     -0.0496],
        [    -0.0102,     -5.1250,     -5.5625,     -7.5000,     -2.8281,     -4.9375,     -2.3750,     -3.3594,     -4.2500,     -5.8438,     -5.3125,     -4.1562,     -2.9219,     -3.6719,     -2.9062],
        [    -0.0138,     -6.0625,     -7.0312,     -8.8125,     -3.4688,     -6.0625,     -3.2500,     -4.4375,     -5.1875,     -7.1875,     -6.5625,     -5.7500,     -3.9688,     -4.6875,     -4.0938],
        [    -0.0123,     -5.5000,     -5.8438,     -7.4688,     -3.2188,     -5.0625,     -2.6719,     -3.6719,     -4.5625,     -6.0625,     -5.3750,     -4.3750,     -3.1250,     -4.0000,     -3.0000],
        [    -0.0079,     -5.2188,     -5.6250,     -7.0000,     -2.8594,     -4.6875,     -2.3125,     -3.4844,     -3.9688,     -6.0938,     -5.1562,     -4.2812,     -3.5000,     -3.4844,     -2.9219],
        [    -0.0130,     -5.4375,     -6.0625,     -8.0625,     -3.0781,     -4.7500,     -2.4062,     -3.7344,     -4.5625,     -6.2500,     -6.1875,     -5.3438,     -3.5781,     -4.0938,     -4.2188],
        [    -0.0104,     -5.3438,     -6.1250,     -7.8750,     -2.7969,     -5.1562,     -2.4062,     -3.9219,     -3.8438,     -6.2812,     -5.8438,     -5.1562,     -3.7656,     -3.3750,     -3.7812],
        [    -0.0071,     -4.7188,     -5.8125,     -7.2812,     -2.4844,     -5.6875,     -2.4688,     -3.9219,     -3.4844,     -6.1875,     -5.5938,     -4.8750,     -3.9531,     -3.0781,     -3.2656],
        [    -0.0084,     -4.5312,     -5.0938,     -6.4688,     -2.6406,     -4.6562,     -2.0625,     -3.3906,     -3.7656,     -5.3438,     -4.8750,     -4.1875,     -3.2969,     -3.3281,     -2.7969],
        [    -0.0106,     -5.3750,     -6.1875,     -7.8750,     -3.0469,     -5.9062,     -2.7969,     -4.1562,     -4.5312,     -6.5000,     -5.6562,     -5.3750,     -3.9844,     -4.0312,     -3.3750],
        [    -0.0070,     -4.6250,     -5.1250,     -6.6875,     -2.4531,     -4.4062,     -1.7969,     -3.0156,     -3.3906,     -4.7812,     -4.3750,     -4.4062,     -2.8750,     -2.9688,     -2.5938],
        [    -0.0119,     -5.2500,     -6.2812,     -7.7500,     -3.2031,     -5.1875,     -2.8750,     -4.1562,     -3.9531,     -6.5000,     -5.5625,     -4.7500,     -3.6094,     -3.4844,     -3.6250],
        [    -0.0045,     -4.6875,     -5.4062,     -6.9375,     -2.1250,     -5.4375,     -2.2500,     -3.5625,     -3.5000,     -5.7188,     -5.5938,     -4.5625,     -3.5781,     -2.9688,     -3.2031],
        [    -0.0075,     -4.6562,     -5.0938,     -6.6250,     -2.7188,     -4.8438,     -2.1406,     -3.5156,     -3.9219,     -5.3750,     -5.0625,     -4.2500,     -3.4062,     -3.4219,     -2.7969],
        [    -0.0096,     -6.1250,     -6.8125,     -8.9375,     -3.2344,     -6.4688,     -3.0000,     -4.5000,     -4.7500,     -6.7500,     -6.2188,     -5.6250,     -4.1562,     -4.1250,     -3.2656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7476],
        [0.7254],
        [0.6591],
        [0.6082],
        [0.6186],
        [0.5910],
        [0.5407],
        [0.4843],
        [0.4893],
        [0.4537],
        [0.5019],
        [0.4778],
        [0.4393],
        [0.4972]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0192,     0.0322,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0056,     0.0245,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0007,     0.0131,     0.0035,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0005,     0.0150,     0.0027,     0.0640,     0.0123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0004,     0.0051,     0.0016,     0.0454,     0.0187,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8164,     0.0006,     0.0066,     0.0029,     0.0649,     0.0226,     0.0092,     0.0776,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0002,     0.0015,     0.0004,     0.0159,     0.0187,     0.0102,     0.1001,     0.1631,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0864,     0.0001,     0.0008,     0.0004,     0.0112,     0.0091,     0.0016,     0.0292,     0.0588,     0.8008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0874,     0.0000,     0.0003,     0.0001,     0.0023,     0.0042,     0.0007,     0.0284,     0.0260,     0.8320,     0.0178,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.0002,     0.0011,     0.0002,     0.0205,     0.0103,     0.0417,     0.0352,     0.0752,     0.3262,     0.1680,     0.0532,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.0000,     0.0007,     0.0002,     0.0050,     0.0020,     0.0011,     0.0048,     0.0226,     0.4043,     0.0226,     0.0476,     0.0530,     0.0000,     0.0000],
        [    0.2617,     0.0000,     0.0001,     0.0000,     0.0014,     0.0015,     0.0008,     0.0054,     0.0102,     0.4141,     0.0156,     0.0190,     0.0933,     0.1787,     0.0000],
        [    0.1797,     0.0001,     0.0003,     0.0001,     0.0030,     0.0049,     0.0038,     0.0151,     0.0219,     0.1172,     0.0265,     0.0300,     0.2656,     0.2715,     0.0601]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,     -0.1816,     -0.1157,     -0.1650,     -0.1572,     -0.1973,     -0.2598,     -0.2295,     -0.2471,     -0.1650,     -0.2480,     -0.2324,     -0.2402,     -0.2500,     -0.2598],
        [    -0.0459,     -8.4375,     -4.5625,     -6.6250,     -3.2344,     -4.4062,     -5.6562,     -3.5312,     -3.3750,      0.4609,     -3.2656,     -2.6406,     -2.0938,     -1.7344,     -3.2656],
        [    -0.0258,     -3.9219,     -3.4062,     -5.0312,     -1.5625,     -2.3281,     -1.4844,     -1.7500,     -2.0625,      0.2432,     -0.9961,     -2.1875,     -0.9492,     -1.0469,     -0.9375],
        [    -0.0527,     -5.1875,     -3.7344,     -5.6875,     -1.1172,     -1.4531,     -0.7266,     -0.2412,     -0.2949,      2.8438,      1.0391,     -0.5352,      1.1562,      1.3594,      0.9531],
        [    -0.0542,     -7.2500,     -4.3125,     -5.6250,     -2.9219,     -2.5469,     -4.9062,     -1.6719,     -1.6250,      2.4219,     -1.5625,     -1.6328,     -0.1963,      0.1094,     -2.1094],
        [    -0.0608,     -7.6562,     -4.1562,     -5.8750,     -2.7031,     -4.3750,     -3.7500,     -2.4531,     -1.6797,      0.9062,     -1.6875,     -1.0156,     -1.1328,      0.0459,     -1.2578],
        [    -0.0684,     -7.9062,     -5.2500,     -6.4375,     -3.0781,     -3.9688,     -4.8438,     -2.7500,     -1.8906,      0.6875,     -2.0469,     -1.4062,     -0.6289,      0.2061,     -1.8672],
        [    -0.0723,     -7.3125,     -4.9062,     -5.6875,     -2.5938,     -3.6562,     -4.5625,     -2.4219,     -1.1875,      1.4844,     -1.4609,     -0.6250,     -0.4512,      0.8359,     -1.4531],
        [    -0.0845,     -8.4375,     -6.2188,     -7.5625,     -3.8594,     -3.6875,     -4.3125,     -2.0156,     -1.5234,      2.0000,     -1.1797,     -0.9766,      0.5781,      1.1562,     -0.9961],
        [    -0.0645,     -6.6562,     -4.8125,     -5.5000,     -2.1094,     -2.3125,     -4.0312,     -1.1484,     -0.4473,      2.1719,     -0.8555,     -0.2070,      1.1094,      1.6250,     -0.7305],
        [    -0.0854,     -8.7500,     -5.6875,     -6.9062,     -3.7031,     -3.1250,     -4.9688,     -1.2031,     -1.2969,      2.1719,     -1.6719,     -0.1050,      1.4766,      1.2891,     -1.2656],
        [    -0.0679,     -7.2812,     -5.5625,     -7.3750,     -2.6406,     -3.3438,     -1.9375,     -2.1094,     -1.3438,      0.1211,     -0.5391,     -1.6875,     -0.1279,      0.6992,     -0.3125],
        [    -0.0728,     -9.1875,     -6.5625,     -7.7812,     -4.5312,     -5.4688,     -6.0938,     -4.5938,     -3.0312,     -0.1484,     -3.0312,     -2.2812,     -2.1875,     -0.6094,     -2.8750],
        [    -0.0820,     -9.8750,     -7.5625,     -9.1875,     -5.3125,     -5.2188,     -5.9062,     -3.9688,     -3.3281,      0.3750,     -2.9062,     -2.7031,     -1.1172,     -0.4648,     -2.6250],
        [    -0.0708,     -7.9688,     -6.4062,     -7.6875,     -4.1562,     -3.6562,     -3.9219,     -2.5469,     -2.1719,     -0.4961,     -1.9844,     -1.8594,      0.3242,      0.3438,     -1.1641]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7579],
        [0.5377],
        [0.5966],
        [0.6841],
        [0.6080],
        [0.5466],
        [0.3813],
        [0.3685],
        [0.2297],
        [0.3141],
        [0.2247],
        [0.3523],
        [0.3103],
        [0.1961]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.1094,     0.0168,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.1001,     0.0099,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0466,     0.0226,     0.0179,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4004,     0.0057,     0.0020,     0.0009,     0.0079,     0.5820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0422,     0.0018,     0.0030,     0.0010,     0.0003,     0.0094,     0.9414,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.9766,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1465,     0.0001,     0.0001,     0.0000,     0.0000,     0.0107,     0.7734,     0.0095,     0.0615,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1738,     0.0003,     0.0001,     0.0001,     0.0001,     0.0067,     0.1729,     0.0026,     0.0520,     0.5938,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0352,     0.0002,     0.0000,     0.0000,     0.0000,     0.0051,     0.0884,     0.0013,     0.0620,     0.3516,     0.4570,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0564,     0.0002,     0.0002,     0.0001,     0.0002,     0.0026,     0.5391,     0.0021,     0.0081,     0.0474,     0.3379,     0.0054,     0.0000,     0.0000,     0.0000],
        [    0.0293,     0.0001,     0.0000,     0.0000,     0.0000,     0.0062,     0.4102,     0.0004,     0.0049,     0.0605,     0.4863,     0.0001,     0.0016,     0.0000,     0.0000],
        [    0.0718,     0.0002,     0.0001,     0.0001,     0.0001,     0.0250,     0.1934,     0.0027,     0.0342,     0.1836,     0.4121,     0.0015,     0.0064,     0.0684,     0.0000],
        [    0.0364,     0.0002,     0.0001,     0.0001,     0.0001,     0.0069,     0.0540,     0.0018,     0.0280,     0.1250,     0.3242,     0.0035,     0.0069,     0.0654,     0.3477]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.0635,     -0.0923,     -0.0952,     -0.0811,     -0.0459,     -0.0376,     -0.1040,     -0.0967,     -0.0835,     -0.0623,     -0.1172,     -0.1040,     -0.0977,     -0.0947],
        [     0.0017,     -3.2031,     -5.2812,     -5.7188,     -3.1875,      0.2949,      2.4219,     -2.1406,     -1.0938,     -0.5039,      0.9375,     -3.5625,     -1.8359,     -0.8086,     -0.5586],
        [     0.0042,     -2.0781,     -3.9531,     -3.7656,     -2.8438,      0.4766,      1.3203,     -3.7656,     -2.4688,     -1.5234,      0.4375,     -4.0625,     -1.9766,     -1.3750,     -1.6250],
        [     0.0060,     -2.1562,     -4.4688,     -4.2500,     -3.0156,      0.8750,      1.3516,     -3.9688,     -2.0938,     -1.5469,      0.3125,     -5.0000,     -2.5156,     -1.2734,     -2.3594],
        [     0.0003,     -2.9531,     -3.6875,     -3.9062,     -4.1562,     -0.3086,      0.5430,     -3.0312,     -1.9609,     -0.8281,     -0.5273,     -3.4062,     -2.6094,     -1.5156,     -1.8828],
        [     0.0000,     -4.2500,     -5.2812,     -6.0625,     -3.9375,      0.3770,      2.0625,     -3.3125,     -1.2031,     -0.1670,      1.4375,     -3.8438,     -2.7500,     -0.8555,     -0.1953],
        [     0.0069,     -3.1562,     -2.6562,     -3.7344,     -4.9375,     -1.5000,      3.1094,      1.6328,      1.5625,      3.2500,      0.1196,     -0.7500,     -0.8242,      0.1328,     -0.4434],
        [     0.0019,     -8.3125,     -9.0625,    -10.8125,     -9.8750,     -4.5000,      3.7031,     -3.1562,     -2.2812,      0.6523,      0.7344,     -6.0312,     -5.1250,     -3.2656,     -2.3906],
        [     0.0081,     -7.2188,     -7.0312,     -8.0625,     -8.0625,     -2.6094,      1.6719,     -2.7188,     -0.8555,      0.9492,      0.6719,     -4.2500,     -3.8750,     -1.4531,     -1.0703],
        [     0.0091,     -6.3750,     -7.1250,     -7.7188,     -7.5000,     -3.2500,      0.0024,     -4.2188,     -1.1953,      1.2344,      1.6719,     -4.5938,     -3.5625,     -0.9102,     -0.3789],
        [     0.0120,     -5.3438,     -6.5625,     -6.7500,     -7.0000,     -1.9141,      0.9336,     -3.3125,      0.5781,      2.3125,      2.5781,     -3.3281,     -2.4531,      0.8594,      0.9531],
        [     0.0066,     -5.5312,     -5.5312,     -6.4062,     -5.5312,     -3.0625,      2.2656,     -3.2812,     -1.9297,     -0.1670,      1.7969,     -2.3281,     -2.7812,     -1.3125,      0.9766],
        [     0.0003,     -6.1250,     -8.1250,     -8.8750,     -8.0000,     -1.5547,      2.6406,     -4.1875,     -1.7812,      0.7266,      2.8125,     -5.6250,     -2.9062,     -0.8359,     -0.1982],
        [     0.0072,     -5.7500,     -6.3750,     -6.8125,     -7.0625,     -1.0469,      1.0000,     -3.2500,     -0.7305,      0.9492,      1.7578,     -3.8281,     -2.4062,     -0.0361,      0.0391],
        [     0.0033,     -5.4375,     -5.5312,     -5.8750,     -6.3125,     -1.6562,      0.3965,     -3.0156,     -0.2598,      1.2422,      2.1875,     -2.3438,     -1.6641,      0.5898,      2.2656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7399],
        [0.5406],
        [0.5460],
        [0.5011],
        [0.3757],
        [0.3858],
        [0.2959],
        [0.3364],
        [0.2854],
        [0.2555],
        [0.3253],
        [0.2779],
        [0.2970],
        [0.2503]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0510,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0059,     0.0101,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0131,     0.0275,     0.0267,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9219,     0.0311,     0.0177,     0.0096,     0.0182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3047,     0.0510,     0.1377,     0.1021,     0.0972,     0.3066,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8672,     0.0008,     0.0007,     0.0003,     0.0006,     0.0008,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5508,     0.0081,     0.0203,     0.0103,     0.0171,     0.0496,     0.2520,     0.0923,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3379,     0.0293,     0.0347,     0.0251,     0.0437,     0.0713,     0.1865,     0.1641,     0.1074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.0221,     0.0253,     0.0200,     0.0219,     0.0452,     0.2119,     0.0447,     0.0287,     0.0339,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0053,     0.0024,     0.0021,     0.0056,     0.0036,     0.1553,     0.0076,     0.0053,     0.0041,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1582,     0.0293,     0.0508,     0.0435,     0.0498,     0.0579,     0.1680,     0.2080,     0.0574,     0.0464,     0.0444,     0.0864,     0.0000,     0.0000,     0.0000],
        [    0.7148,     0.0115,     0.0105,     0.0052,     0.0061,     0.0231,     0.0967,     0.0153,     0.0168,     0.0093,     0.0376,     0.0089,     0.0452,     0.0000,     0.0000],
        [    0.3574,     0.0234,     0.0183,     0.0151,     0.0276,     0.0347,     0.1191,     0.0664,     0.0415,     0.0542,     0.0640,     0.0454,     0.0786,     0.0540,     0.0000],
        [    0.5469,     0.0021,     0.0031,     0.0014,     0.0021,     0.0054,     0.3262,     0.0219,     0.0146,     0.0017,     0.0079,     0.0045,     0.0130,     0.0157,     0.0327]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0603,     -0.0679,     -0.0771,     -0.0659,     -0.0593,     -0.0439,     -0.0957,     -0.0791,     -0.0708,     -0.0532,     -0.0757,     -0.0732,     -0.0762,     -0.0850],
        [    -0.0029,     -2.9219,     -2.2031,     -2.1250,     -1.5469,     -1.6641,      0.3770,     -1.0938,     -1.3281,     -1.7969,     -1.0469,     -1.1484,     -2.1562,     -1.3359,     -0.8477],
        [     0.0020,     -5.1250,     -4.5938,     -4.9062,     -3.9062,     -3.2656,     -0.9805,     -3.2812,     -4.1875,     -4.0312,     -3.3125,     -3.8281,     -3.6562,     -4.1875,     -3.5938],
        [    -0.0031,     -4.2500,     -3.5312,     -3.5625,     -3.3594,     -2.5781,      0.2539,     -2.0938,     -2.9688,     -3.1406,     -2.5938,     -2.7656,     -3.0000,     -2.8906,     -2.0625],
        [    -0.0013,     -3.3906,     -3.9531,     -4.5625,     -3.9375,     -2.6094,     -2.5000,     -5.5312,     -4.0312,     -3.8594,     -2.7969,     -4.5938,     -4.5000,     -3.8281,     -4.5938],
        [     0.0039,     -1.7812,     -0.7852,     -1.0859,     -1.1328,      0.0111,      0.0396,      0.0845,      0.2578,     -0.5781,     -0.2949,     -0.8906,     -0.2734,     -0.2412,      0.1924],
        [    -0.0058,     -6.9688,     -7.0625,     -7.8750,     -7.2812,     -7.0312,     -1.9141,     -6.9375,     -6.6250,     -7.6875,     -5.8438,     -7.0000,     -6.5938,     -6.1250,     -5.9375],
        [    -0.0035,     -4.2188,     -3.3125,     -3.9844,     -3.4688,     -2.4062,     -0.7852,     -1.7891,     -2.4375,     -3.3438,     -2.6562,     -3.2031,     -2.4844,     -2.5938,     -2.7969],
        [     0.0005,     -2.4531,     -2.2812,     -2.5938,     -2.0469,     -1.5625,     -0.5977,     -0.7266,     -1.1484,     -1.1641,     -1.1406,     -1.3672,     -1.1094,     -1.0938,     -1.5078],
        [    -0.0027,     -3.2031,     -3.0781,     -3.3125,     -3.2188,     -2.5000,     -0.9492,     -2.5000,     -2.9531,     -2.7812,     -2.1719,     -2.9844,     -2.2656,     -2.7344,     -3.0312],
        [    -0.0006,     -5.0000,     -5.8125,     -5.9375,     -4.9688,     -5.3750,     -1.6328,     -4.6562,     -5.0312,     -5.2812,     -3.9844,     -4.8750,     -4.1250,     -4.5938,     -4.7500],
        [     0.0009,     -1.6875,     -1.1406,     -1.2969,     -1.1562,     -1.0078,      0.0569,      0.2695,     -1.0156,     -1.2344,     -1.2734,     -0.6055,      0.0099,     -1.0547,     -0.2754],
        [    -0.0023,     -4.1250,     -4.2188,     -4.9062,     -4.7500,     -3.4375,     -2.0000,     -3.8438,     -3.7500,     -4.3438,     -2.9375,     -4.3750,     -2.7656,     -3.4062,     -3.7500],
        [     0.0007,     -2.7188,     -2.9688,     -3.1562,     -2.5625,     -2.3281,     -1.1016,     -1.6875,     -2.1562,     -1.8828,     -1.7188,     -2.0625,     -1.5156,     -1.8906,     -2.3125],
        [    -0.0040,     -5.5938,     -5.1875,     -6.0000,     -5.5938,     -4.6250,     -0.5195,     -3.2188,     -3.6250,     -5.7812,     -4.2500,     -4.7812,     -3.7500,     -3.5469,     -2.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7110],
        [0.6962],
        [0.6254],
        [0.5553],
        [0.5219],
        [0.4564],
        [0.3728],
        [0.5303],
        [0.3902],
        [0.4220],
        [0.3303],
        [0.4132],
        [0.3845],
        [0.3741]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0014,     0.0005,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0002,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0004,     0.0001,     0.0003,     0.0001,     0.0053,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0001,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0012,     0.0002,     0.0005,     0.0002,     0.0036,     0.0004,     0.0001,     0.0001,     0.0009,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0042,     0.0020,     0.0029,     0.0016,     0.0255,     0.0020,     0.0022,     0.0014,     0.0060,     0.0115,     0.0008,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0000,     0.0001,     0.0000,     0.0017,     0.0001,     0.0000,     0.0000,     0.0001,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6562,     0.0432,     0.0330,     0.0369,     0.0154,     0.0664,     0.0181,     0.0143,     0.0075,     0.0354,     0.0342,     0.0166,     0.0122,     0.0061,     0.0061]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.1123,     -0.1357,     -0.1235,     -0.1475,     -0.1050,     -0.1611,     -0.1631,     -0.1572,     -0.1055,     -0.0815,     -0.1729,     -0.1465,     -0.1504,     -0.1855],
        [    -0.0121,     -7.2500,     -8.6875,     -7.7500,    -10.3750,     -7.7188,    -12.1250,    -11.6875,    -11.3125,     -6.7500,     -5.6250,    -11.3750,    -10.0000,    -10.3125,    -13.1250],
        [    -0.0101,     -8.0625,     -9.4375,     -8.8750,    -11.3125,     -8.5000,    -13.3125,    -13.0000,    -12.0625,     -8.1250,     -6.7188,    -12.5625,    -11.3750,    -11.6250,    -14.3125],
        [    -0.0085,     -6.5625,     -7.6562,     -7.4688,     -9.7500,     -7.5938,    -11.6250,    -11.7500,    -10.3750,     -7.2812,     -5.7812,    -10.7500,    -10.0000,    -10.0000,    -12.0625],
        [    -0.0087,     -7.5000,     -8.5000,     -8.1875,     -9.4375,     -6.4375,    -10.2500,    -10.9375,    -10.0625,     -7.6875,     -6.2188,    -11.2500,    -10.0000,    -10.2500,    -12.1875],
        [    -0.0120,    -10.1875,    -12.6250,    -11.2500,    -14.5000,    -10.3750,    -16.2500,    -15.9375,    -15.3750,     -9.5625,     -7.7812,    -16.6250,    -13.9375,    -14.2500,    -18.1250],
        [    -0.0093,     -9.0000,    -10.3125,     -9.5625,    -11.2500,     -7.1250,    -11.7500,    -11.5625,    -12.8125,     -8.4375,     -6.7812,    -12.1250,    -10.9375,    -12.3750,    -14.1875],
        [    -0.0077,     -9.1250,    -10.6875,    -10.5000,    -10.8125,     -7.1250,    -11.9375,    -11.6875,    -11.8125,     -9.5625,     -6.6875,    -13.4375,    -10.9375,    -12.5000,    -14.8125],
        [    -0.0095,     -7.8125,     -9.1875,     -8.1875,     -9.7500,     -5.2188,     -8.5625,     -9.6250,    -10.5000,     -7.4688,     -6.5312,    -11.1875,     -9.8125,    -10.8750,    -12.4375],
        [    -0.0101,     -8.0625,    -10.2500,     -9.3750,    -11.3125,     -7.3750,    -11.5000,    -12.4375,    -12.3750,     -8.7500,     -6.8750,    -13.7500,    -11.4375,    -12.4375,    -14.4375],
        [    -0.0071,     -6.7500,     -8.4375,     -7.5938,     -8.5625,     -5.6250,     -7.8125,     -9.0000,     -9.3125,     -6.9688,     -5.5625,    -10.3750,     -9.0000,     -9.5625,    -10.8125],
        [    -0.0037,     -5.4062,     -6.1562,     -5.7812,     -6.4062,     -3.6094,     -6.1875,     -6.0938,     -6.5312,     -5.0625,     -4.4062,     -7.1250,     -6.2812,     -7.1562,     -7.9688],
        [    -0.0153,    -13.4375,    -16.7500,    -15.5000,    -18.3750,    -12.6250,    -19.5000,    -20.7500,    -19.8750,    -14.5000,    -11.5625,    -22.2500,    -19.0000,    -20.1250,    -23.6250],
        [    -0.0107,     -9.0000,    -10.5625,     -9.6250,    -11.2500,     -6.3750,     -9.8750,    -11.4375,    -12.3750,     -8.8750,     -7.7812,    -12.8125,    -11.5000,    -12.8125,    -14.2500],
        [    -0.0037,     -2.7188,     -3.0000,     -2.8750,     -3.7500,     -2.2969,     -3.5938,     -3.8281,     -4.4688,     -2.9219,     -2.9531,     -3.6875,     -3.9844,     -4.6875,     -4.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6699],
        [0.5301],
        [0.4927],
        [0.5925],
        [0.4809],
        [0.5054],
        [0.3624],
        [0.3794],
        [0.3837],
        [0.3261],
        [0.2255],
        [0.3593],
        [0.2963],
        [0.2149]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0698,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7227,     0.2129,     0.0635,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6758,     0.2236,     0.0576,     0.0437,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.1582,     0.0442,     0.0383,     0.0698,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2852,     0.2891,     0.0703,     0.0591,     0.1138,     0.1133,     0.0698,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.1436,     0.0184,     0.0172,     0.0537,     0.1553,     0.0286,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4258,     0.1050,     0.0159,     0.0156,     0.0398,     0.3340,     0.0327,     0.0120,     0.0181,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0283,     0.0010,     0.0012,     0.0043,     0.0025,     0.0014,     0.0001,     0.0003,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3848,     0.1094,     0.0173,     0.0226,     0.0640,     0.1729,     0.0337,     0.0222,     0.0435,     0.0703,     0.0581,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0596,     0.0820,     0.0179,     0.0157,     0.0723,     0.3984,     0.0503,     0.0547,     0.0859,     0.0762,     0.0491,     0.0376,     0.0000,     0.0000,     0.0000],
        [    0.7266,     0.1118,     0.0097,     0.0103,     0.0339,     0.0439,     0.0186,     0.0021,     0.0084,     0.0096,     0.0221,     0.0007,     0.0024,     0.0000,     0.0000],
        [    0.2188,     0.0913,     0.0156,     0.0166,     0.0503,     0.3145,     0.0364,     0.0229,     0.0354,     0.0962,     0.0537,     0.0136,     0.0195,     0.0154,     0.0000],
        [    0.1465,     0.1328,     0.0293,     0.0308,     0.0757,     0.2305,     0.0535,     0.0310,     0.0427,     0.0747,     0.0654,     0.0227,     0.0253,     0.0222,     0.0171]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0181,     -0.0327,     -0.0327,     -0.0221,     -0.0233,     -0.0289,     -0.0415,     -0.0366,     -0.0304,     -0.0217,     -0.0503,     -0.0398,     -0.0400,     -0.0508],
        [     0.0030,     -2.5938,     -3.1562,     -3.2656,     -2.4062,     -3.5938,     -3.1875,     -5.1250,     -4.4375,     -4.4062,     -2.6094,     -5.7500,     -4.5938,     -4.3438,     -5.7500],
        [     0.0001,     -1.2266,     -2.4375,     -2.5625,     -1.4297,     -1.3047,     -2.0312,     -3.5156,     -2.2812,     -2.3281,     -1.4766,     -3.8594,     -2.9844,     -2.6562,     -3.6250],
        [     0.0029,     -1.1016,     -2.4531,     -2.7344,     -1.7734,     -1.9219,     -1.9141,     -3.8594,     -2.3438,     -3.0781,     -1.1406,     -3.9688,     -3.5938,     -2.6719,     -4.0000],
        [     0.0017,     -1.4766,     -2.7500,     -2.8906,     -2.2812,     -1.8047,     -2.2344,     -4.3438,     -3.6406,     -2.8594,     -2.5938,     -4.7188,     -4.5625,     -4.1562,     -4.7500],
        [     0.0119,     -6.8438,    -10.5625,    -10.3125,     -8.1250,     -9.8750,    -10.8750,    -15.8750,    -14.0000,    -11.5625,     -9.3750,    -18.5000,    -14.7500,    -14.1875,    -18.3750],
        [     0.0028,      0.0138,     -1.3984,     -1.5703,     -0.9180,     -0.9219,     -1.4062,     -2.1562,     -1.6797,     -1.7656,     -1.2578,     -2.5000,     -2.6250,     -1.9453,     -2.0000],
        [     0.0012,     -1.3906,     -3.4531,     -3.5156,     -2.3750,     -1.3125,     -3.0000,     -4.5312,     -3.2500,     -2.2812,     -2.8906,     -4.7188,     -4.4688,     -4.1562,     -4.4062],
        [    -0.0006,     -1.3984,     -3.2969,     -3.3125,     -2.3750,     -0.2412,     -2.5625,     -3.5781,     -3.1562,     -1.7344,     -1.9844,     -4.4375,     -3.4688,     -3.8750,     -4.2188],
        [     0.0082,     -3.5156,     -6.8438,     -6.6875,     -5.4062,     -5.9375,     -6.5312,     -9.5625,     -8.1250,     -7.2188,     -4.8750,    -11.2500,     -9.1875,     -8.1250,    -11.3125],
        [     0.0004,     -1.2578,     -3.0938,     -2.8438,     -1.7969,     -0.8008,     -2.4375,     -2.8594,     -2.1875,     -1.7031,     -1.8906,     -3.6250,     -3.1562,     -2.8750,     -3.3906],
        [    -0.0030,      0.3203,     -1.2031,     -1.3281,      0.1934,      1.8984,     -0.1719,     -0.0850,      0.3633,      0.2461,     -0.1973,     -0.4590,     -0.4512,     -0.7812,     -0.3438],
        [     0.0036,     -1.8672,     -4.3125,     -4.2500,     -3.0625,     -2.7969,     -3.6562,     -5.8750,     -4.4688,     -4.3125,     -3.4844,     -7.0000,     -5.6875,     -5.0312,     -6.4375],
        [    -0.0014,     -0.8750,     -2.6406,     -2.5781,     -1.4688,      0.3633,     -1.7969,     -2.2500,     -1.8203,     -0.8203,     -1.4062,     -2.7812,     -2.4219,     -2.6562,     -2.5312],
        [    -0.0012,     -0.1016,     -1.6094,     -1.5625,     -0.6641,      0.4512,     -1.0078,     -1.5547,     -1.2344,     -0.6758,     -0.8047,     -1.8672,     -1.7578,     -1.8906,     -2.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9316],
        [0.5653],
        [0.4838],
        [0.2084],
        [0.9033],
        [0.2736],
        [0.5934],
        [0.1844],
        [0.7126],
        [0.5042],
        [0.0571],
        [0.5015],
        [0.1936],
        [0.1245]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0026, 0.9961, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0035, 0.6797, 0.3164, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0031, 0.3770, 0.2734, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0062, 0.5117, 0.2051, 0.2451, 0.0304, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3047, 0.1338, 0.1650, 0.1582, 0.0845, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.4316, 0.1367, 0.1934, 0.0332, 0.1279, 0.0226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0125, 0.4238, 0.1426, 0.1660, 0.0280, 0.0430, 0.0479, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0153, 0.5430, 0.0854, 0.1187, 0.0167, 0.0447, 0.0349, 0.1211, 0.0206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.1475, 0.0781, 0.0776, 0.0304, 0.1680, 0.0259, 0.0923, 0.0203, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.1689, 0.0967, 0.1094, 0.0339, 0.1465, 0.0265, 0.0801, 0.0305, 0.0874, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0178, 0.4531, 0.0835, 0.1152, 0.0251, 0.0559, 0.0251, 0.0728, 0.0171, 0.0566, 0.0593, 0.0176, 0.0000, 0.0000, 0.0000],
        [0.0579, 0.2070, 0.1250, 0.1406, 0.0300, 0.0488, 0.0356, 0.0815, 0.0325, 0.0437, 0.0679, 0.0344, 0.0947, 0.0000, 0.0000],
        [0.0120, 0.3457, 0.0703, 0.1030, 0.0154, 0.0410, 0.0219, 0.0776, 0.0145, 0.0449, 0.0593, 0.0172, 0.1553, 0.0233, 0.0000],
        [0.0101, 0.4629, 0.0688, 0.1006, 0.0125, 0.0337, 0.0159, 0.0562, 0.0078, 0.0325, 0.0422, 0.0111, 0.1230, 0.0131, 0.0093]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.0270,      0.0190,      0.0203,      0.0093,      0.0063,      0.0137,      0.0159,      0.0128,      0.0085,      0.0134,      0.0139,      0.0157,      0.0153,      0.0133],
        [     0.0269,      5.9688,      4.2188,      4.4688,      1.9375,      1.2500,      3.6250,      3.3906,      2.5625,      2.4375,      3.5781,      3.9219,      4.2812,      3.9219,      3.4062],
        [     0.0211,      5.2812,      4.5312,      4.6562,      2.2344,      0.5859,      3.7031,      3.3281,      2.6406,      2.1875,      2.9219,      3.8906,      3.7031,      3.5000,      3.5156],
        [     0.0184,      4.8125,      4.5000,      4.7188,      2.3281,      0.6328,      3.1719,      3.0938,      2.3125,      1.6484,      2.4844,      3.2969,      3.2031,      3.0625,      3.0781],
        [     0.0198,      4.4375,      3.5156,      3.7031,      1.6172,      1.2500,      1.8438,      2.8281,      1.6250,      1.7422,      2.6250,      1.9219,      3.0781,      2.1875,      1.8203],
        [    -0.0033,     -0.8281,     -0.6211,     -0.6641,     -1.2891,     -0.6953,     -1.9688,     -1.2344,     -1.9219,     -1.6875,     -1.2266,     -1.5391,     -1.5156,     -1.7188,     -1.6172],
        [     0.0058,      2.0625,      0.9141,      1.2656,     -0.4941,      0.8555,     -0.8828,      0.8555,     -1.3125,      0.1738,      0.6953,     -1.2500,      1.2969,     -1.0703,     -1.3828],
        [     0.0172,      3.5469,      2.4531,      2.6094,      0.8242,      1.2578,      1.3672,      2.4062,      1.4062,      1.2969,      2.1250,      1.4141,      2.5312,      1.6406,      1.2734],
        [     0.0153,      3.5781,      1.7344,      2.0625,      0.1060,      1.0859,      0.8398,      2.0781,      0.3164,      1.4922,      2.1719,      0.7266,      2.7031,      1.0312,      0.4258],
        [    -0.0024,     -0.5859,     -1.2188,     -1.2266,     -2.1719,     -0.4570,     -2.3281,     -1.0547,     -2.5625,     -1.0156,     -0.6797,     -2.5781,     -0.9219,     -2.3594,     -2.7344],
        [     0.0007,      0.3496,     -0.2090,     -0.0845,     -1.2578,      0.2070,     -1.5000,     -0.3945,     -1.3594,     -0.3047,     -0.1533,     -1.5078,      0.0840,     -1.2969,     -1.6406],
        [     0.0112,      3.2500,      1.5625,      1.8828,      0.3594,      1.1562,      0.3594,      1.4219,     -0.0276,      1.1719,      1.2188,      0.0030,      2.1875,      0.2715,     -0.1035],
        [     0.0024,      1.2812,      0.7773,      0.8906,     -0.6523,     -0.1660,     -0.4785,      0.3496,     -0.5742,     -0.2793,      0.1660,     -0.5117,      0.4980,     -0.3867,     -0.6172],
        [     0.0135,      3.3750,      1.7812,      2.1719,      0.2598,      1.2422,      0.6094,      1.8750,      0.2002,      1.3359,      1.6094,      0.3711,      2.5781,      0.6797,      0.1934],
        [     0.0137,      3.8438,      1.9297,      2.3125,      0.2217,      1.2188,      0.4609,      1.7266,     -0.2539,      1.1797,      1.4453,      0.1060,      2.5156,      0.2715,     -0.0757]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0283],
        [0.0146],
        [0.0079],
        [0.0442],
        [0.0768],
        [0.0750],
        [0.0102],
        [0.0444],
        [0.0431],
        [0.0782],
        [0.0596],
        [0.0108],
        [0.0411],
        [0.0315]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.3652,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.2852,     0.7109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0032,     0.1846,     0.4453,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0791,     0.2275,     0.2021,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4414,     0.0928,     0.1221,     0.1094,     0.1465,     0.0879,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0537,     0.1602,     0.1436,     0.3555,     0.0050,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0684,     0.1523,     0.1328,     0.2793,     0.0135,     0.2539,     0.0991,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0400,     0.1157,     0.1030,     0.2617,     0.0037,     0.2100,     0.0503,     0.2158,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0280,     0.0864,     0.0723,     0.2754,     0.0021,     0.2324,     0.0378,     0.2256,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0432,     0.1084,     0.1006,     0.2041,     0.0065,     0.1660,     0.0581,     0.1729,     0.0544,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0305,     0.0894,     0.0801,     0.1875,     0.0031,     0.1504,     0.0405,     0.1553,     0.0388,     0.0693,     0.1562,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0376,     0.0811,     0.0723,     0.1465,     0.0082,     0.1338,     0.0530,     0.1367,     0.0562,     0.0825,     0.1367,     0.0542,     0.0000,     0.0000],
        [    0.0000,     0.0233,     0.0693,     0.0623,     0.1592,     0.0021,     0.1250,     0.0299,     0.1279,     0.0286,     0.0549,     0.1309,     0.0277,     0.1582,     0.0000],
        [    0.0000,     0.0198,     0.0598,     0.0530,     0.1426,     0.0016,     0.1143,     0.0248,     0.1147,     0.0242,     0.0483,     0.1191,     0.0236,     0.1445,     0.1099]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.0854,      0.0996,      0.0972,      0.1138,      0.0554,      0.1118,      0.0874,      0.1099,      0.0879,      0.1001,      0.1118,      0.0879,      0.1133,      0.1104],
        [    -0.0024,     -0.5586,     -0.1543,     -0.2676,     -0.2520,     -0.5273,     -0.1377,      0.2051,     -0.0070,      0.2734,      0.0005,     -0.1328,      0.2617,     -0.0398,     -0.0270],
        [     0.0049,      4.5625,      5.4688,      5.2812,      6.3438,      2.7344,      6.2500,      5.0938,      6.2812,      5.1875,      5.7188,      6.3125,      5.1562,      6.4688,      6.2812],
        [     0.0045,      4.0625,      4.9375,      4.7500,      5.7812,      2.3438,      5.7188,      4.5938,      5.7500,      4.7188,      5.2500,      5.7812,      4.6875,      5.9375,      5.7500],
        [     0.0060,      7.3125,      8.3750,      8.2500,      9.1250,      5.0625,      8.9375,      7.6250,      8.9375,      7.5938,      8.1875,      9.0000,      7.5625,      9.1250,      8.9375],
        [    -0.0015,     -1.5625,     -1.2891,     -1.3984,     -1.1016,     -1.6094,     -0.9805,     -0.9180,     -0.8906,     -0.8242,     -0.8047,     -0.9648,     -0.8164,     -0.9297,     -0.9258],
        [     0.0067,      7.8125,      8.8750,      8.8125,      9.6875,      5.4375,      9.5000,      8.1250,      9.5000,      8.0625,      8.6875,      9.5000,      8.0625,      9.6875,      9.4375],
        [     0.0041,      4.6562,      5.4688,      5.3438,      6.0625,      3.0469,      5.9688,      5.0312,      6.0312,      5.0625,      5.5000,      6.0000,      5.0625,      6.1562,      6.0000],
        [     0.0069,      7.8750,      8.9375,      8.8125,      9.7500,      5.5000,      9.5000,      8.1250,      9.5625,      8.0625,      8.7500,      9.5625,      8.0625,      9.7500,      9.5000],
        [     0.0080,      7.2500,      8.3750,      8.1875,      9.5625,      4.6562,      9.3750,      7.5625,      9.3125,      7.5938,      8.5000,      9.4375,      7.5938,      9.6250,      9.3125],
        [     0.0050,      6.1250,      7.0312,      6.9375,      7.6562,      4.2188,      7.4688,      6.4062,      7.5000,      6.3438,      6.7812,      7.5000,      6.3438,      7.6562,      7.4375],
        [     0.0064,      7.6562,      8.7500,      8.6250,      9.4375,      5.3750,      9.2500,      7.9375,      9.2500,      7.9062,      8.5000,      9.3125,      7.8750,      9.5000,      9.2500],
        [     0.0040,      4.2812,      5.0312,      4.9062,      5.6250,      2.7500,      5.5312,      4.5938,      5.5625,      4.6562,      5.0625,      5.5625,      4.6250,      5.7188,      5.5312],
        [     0.0070,      8.0000,      9.0625,      9.0000,      9.9375,      5.5938,      9.6875,      8.2500,      9.6875,      8.1875,      8.8750,      9.7500,      8.1875,      9.9375,      9.6250],
        [     0.0073,      8.1250,      9.2500,      9.1250,     10.1250,      5.6562,      9.8750,      8.3750,      9.8750,      8.3125,      9.0000,      9.9375,      8.3125,     10.1250,      9.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8614],
        [0.6047],
        [0.6590],
        [0.0486],
        [0.7729],
        [0.0166],
        [0.1553],
        [0.0077],
        [0.0293],
        [0.0109],
        [0.0065],
        [0.0786],
        [0.0039],
        [0.0036]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9727, 0.0266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0251, 0.0466, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8867, 0.0262, 0.0498, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8242, 0.0229, 0.0256, 0.0256, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.0255, 0.0422, 0.0327, 0.4023, 0.0259, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7109, 0.0243, 0.0255, 0.0262, 0.0811, 0.0352, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.0134, 0.0176, 0.0165, 0.1064, 0.0189, 0.1328, 0.0547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6172, 0.0220, 0.0228, 0.0236, 0.0703, 0.0317, 0.0835, 0.0420, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5781, 0.0175, 0.0187, 0.0190, 0.0674, 0.0255, 0.0806, 0.0383, 0.0830, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5391, 0.0181, 0.0188, 0.0194, 0.0610, 0.0262, 0.0728, 0.0361, 0.0747, 0.0640, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.0184, 0.0189, 0.0197, 0.0566, 0.0266, 0.0669, 0.0342, 0.0684, 0.0591, 0.0664, 0.0713, 0.0000, 0.0000, 0.0000],
        [0.4473, 0.0119, 0.0135, 0.0134, 0.0591, 0.0172, 0.0723, 0.0325, 0.0742, 0.0630, 0.0703, 0.0771, 0.0486, 0.0000, 0.0000],
        [0.4395, 0.0170, 0.0175, 0.0182, 0.0505, 0.0245, 0.0596, 0.0308, 0.0610, 0.0527, 0.0591, 0.0635, 0.0425, 0.0635, 0.0000],
        [0.4121, 0.0164, 0.0166, 0.0173, 0.0474, 0.0236, 0.0557, 0.0289, 0.0569, 0.0493, 0.0552, 0.0593, 0.0398, 0.0593, 0.0613]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0049,     -0.0049,     -0.0049,     -0.0042,     -0.0037,     -0.0039,     -0.0048,     -0.0039,     -0.0042,     -0.0039,     -0.0038,     -0.0044,     -0.0038,     -0.0038],
        [     0.0022,     -3.5938,     -2.9375,     -3.2031,     -0.2080,     -3.4531,      0.0486,     -0.9609,      0.1069,     -0.0752,      0.0029,      0.1064,     -0.4160,      0.1748,      0.1885],
        [     0.0019,     -3.6094,     -2.9844,     -3.2344,     -0.4785,     -3.4531,     -0.2275,     -1.2188,     -0.1787,     -0.3594,     -0.2715,     -0.1689,     -0.6836,     -0.1128,     -0.1021],
        [     0.0022,     -3.5156,     -2.8750,     -3.1406,     -0.3105,     -3.4062,     -0.0630,     -1.0547,     -0.0126,     -0.1924,     -0.1060,     -0.0046,     -0.5156,      0.0549,      0.0640],
        [    -0.0013,     -3.5781,     -3.4688,     -3.4688,     -2.1094,     -3.2031,     -1.9141,     -2.6719,     -1.8828,     -2.0469,     -1.9219,     -1.8438,     -2.2969,     -1.8359,     -1.7969],
        [     0.0016,     -2.9062,     -2.4062,     -2.6562,     -0.1543,     -2.9062,      0.0537,     -0.7930,      0.0977,     -0.0479,      0.0099,      0.1079,     -0.3301,      0.1670,      0.1807],
        [    -0.0014,     -3.3750,     -3.3281,     -3.2969,     -2.1719,     -3.0000,     -2.0000,     -2.7031,     -1.9688,     -2.1250,     -2.0156,     -1.9297,     -2.3438,     -1.9297,     -1.8984],
        [    -0.0005,     -3.8594,     -3.5938,     -3.6562,     -1.7969,     -3.5312,     -1.5703,     -2.4688,     -1.5391,     -1.7188,     -1.6016,     -1.5000,     -2.0156,     -1.4844,     -1.4531],
        [    -0.0015,     -3.3438,     -3.2969,     -3.2656,     -2.1719,     -2.9688,     -2.0000,     -2.6875,     -1.9766,     -2.1250,     -2.0156,     -1.9375,     -2.3594,     -1.9375,     -1.9062],
        [    -0.0013,     -3.5000,     -3.4375,     -3.4219,     -2.1562,     -3.1250,     -1.9688,     -2.7188,     -1.9453,     -2.1094,     -1.9922,     -1.9062,     -2.3438,     -1.8984,     -1.8672],
        [    -0.0015,     -3.3906,     -3.3594,     -3.3281,     -2.1719,     -3.0156,     -2.0000,     -2.7031,     -1.9766,     -2.1250,     -2.0156,     -1.9375,     -2.3594,     -1.9297,     -1.8984],
        [    -0.0015,     -3.2969,     -3.2656,     -3.2188,     -2.1719,     -2.9219,     -2.0000,     -2.6719,     -1.9766,     -2.1250,     -2.0156,     -1.9375,     -2.3438,     -1.9297,     -1.8984],
        [    -0.0010,     -3.6250,     -3.5000,     -3.5000,     -2.0156,     -3.2656,     -1.8203,     -2.6250,     -1.7969,     -1.9609,     -1.8438,     -1.7578,     -2.2188,     -1.7422,     -1.7109],
        [    -0.0015,     -3.2500,     -3.2344,     -3.1875,     -2.1562,     -2.8906,     -2.0000,     -2.6562,     -1.9766,     -2.1250,     -2.0156,     -1.9375,     -2.3281,     -1.9297,     -1.8984],
        [    -0.0015,     -3.2344,     -3.2188,     -3.1719,     -2.1719,     -2.8594,     -2.0000,     -2.6562,     -1.9844,     -2.1250,     -2.0156,     -1.9375,     -2.3438,     -1.9375,     -1.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9723],
        [0.9176],
        [0.8809],
        [0.5986],
        [0.3518],
        [0.4770],
        [0.4460],
        [0.4067],
        [0.3822],
        [0.3496],
        [0.3206],
        [0.2927],
        [0.2844],
        [0.2663]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8281,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3906,     0.2129,     0.3965,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3398,     0.1475,     0.2754,     0.2373,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.1426,     0.2715,     0.2734,     0.3086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0248,     0.1270,     0.2334,     0.2158,     0.3105,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1055,     0.1992,     0.2041,     0.2051,     0.1089,     0.1748,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.0801,     0.1582,     0.1562,     0.1865,     0.0767,     0.1562,     0.1846,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0781,     0.1465,     0.1514,     0.1436,     0.0791,     0.1216,     0.1553,     0.1230,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0708,     0.1338,     0.1377,     0.1309,     0.0679,     0.1094,     0.1396,     0.1099,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0649,     0.1240,     0.1289,     0.1177,     0.0625,     0.0981,     0.1270,     0.0986,     0.0879,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0625,     0.1177,     0.1226,     0.1089,     0.0581,     0.0903,     0.1172,     0.0903,     0.0801,     0.0811,     0.0703,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0571,     0.1099,     0.1128,     0.1055,     0.0503,     0.0864,     0.1104,     0.0859,     0.0762,     0.0767,     0.0659,     0.0625,     0.0000,     0.0000],
        [    0.0004,     0.0571,     0.1064,     0.1113,     0.0957,     0.0520,     0.0791,     0.1030,     0.0791,     0.0698,     0.0708,     0.0610,     0.0583,     0.0562,     0.0000],
        [    0.0004,     0.0554,     0.1035,     0.1084,     0.0913,     0.0488,     0.0752,     0.0981,     0.0752,     0.0664,     0.0669,     0.0574,     0.0547,     0.0527,     0.0457]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0093,      0.0110,      0.0110,      0.0100,      0.0081,      0.0092,      0.0099,      0.0092,      0.0088,      0.0088,      0.0083,      0.0082,      0.0081,      0.0077],
        [     0.0007,     -1.5781,     -0.9922,     -1.1641,     -0.1904,     -1.7812,     -0.3242,     -0.5273,     -0.4102,     -0.4668,     -0.5195,     -0.5781,     -0.7070,     -0.6484,     -0.7070],
        [     0.0002,     -0.6055,      0.0153,     -0.1226,      0.7539,     -0.6758,      0.6172,      0.4883,      0.5586,      0.4922,      0.4590,      0.3867,      0.2695,      0.3223,      0.2539],
        [     0.0003,     -0.8398,     -0.2148,     -0.3633,      0.5742,     -0.9492,      0.4258,      0.2695,      0.3594,      0.2891,      0.2500,      0.1748,      0.0461,      0.1064,      0.0364],
        [    -0.0027,      3.7656,      4.4062,      4.4062,      4.5312,      3.8438,      4.3750,      4.5938,      4.4062,      4.3125,      4.3125,      4.2188,      4.1562,      4.1562,      4.0312],
        [    -0.0017,      1.6328,      2.2500,      2.1562,      2.5312,      1.2812,      2.3281,      2.3438,      2.2500,      2.1562,      2.1094,      1.9922,      1.8906,      1.8984,      1.7891],
        [    -0.0031,      4.2812,      4.9062,      4.9375,      4.9375,      4.3125,      4.7812,      5.0000,      4.7812,      4.6875,      4.6875,      4.5625,      4.5312,      4.5000,      4.3750],
        [    -0.0026,      3.4531,      4.1250,      4.1250,      4.2812,      3.4062,      4.1250,      4.2812,      4.0938,      4.0000,      4.0000,      3.8750,      3.8125,      3.7969,      3.6719],
        [    -0.0033,      4.5000,      5.1250,      5.1562,      5.1250,      4.5312,      4.9375,      5.1875,      4.9688,      4.8438,      4.8750,      4.7188,      4.6875,      4.6562,      4.5312],
        [    -0.0034,      4.5000,      5.1562,      5.1562,      5.1250,      4.4688,      4.9375,      5.1875,      4.9375,      4.8438,      4.8438,      4.7188,      4.6562,      4.6250,      4.5000],
        [    -0.0035,      4.6875,      5.3438,      5.3750,      5.2812,      4.6562,      5.0938,      5.3438,      5.0938,      4.9688,      5.0000,      4.8750,      4.8125,      4.7812,      4.6562],
        [    -0.0036,      4.7500,      5.3750,      5.4062,      5.2812,      4.6562,      5.0938,      5.3750,      5.1250,      5.0000,      5.0000,      4.8750,      4.8125,      4.7812,      4.6250],
        [    -0.0034,      4.5000,      5.1562,      5.1875,      5.1250,      4.3750,      4.9062,      5.1562,      4.9062,      4.7812,      4.7812,      4.6562,      4.5938,      4.5625,      4.4062],
        [    -0.0037,      4.8438,      5.4688,      5.5312,      5.3750,      4.7500,      5.1875,      5.4375,      5.1875,      5.0625,      5.0625,      4.9062,      4.8750,      4.8438,      4.6875],
        [    -0.0037,      4.8750,      5.5000,      5.5312,      5.3750,      4.7500,      5.1875,      5.4375,      5.1875,      5.0625,      5.0625,      4.9062,      4.8438,      4.8125,      4.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.5395],
        [    0.2190],
        [    0.1647],
        [    0.0042],
        [    0.0132],
        [    0.0018],
        [    0.0021],
        [    0.0010],
        [    0.0009],
        [    0.0007],
        [    0.0006],
        [    0.0007],
        [    0.0005],
        [    0.0005]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(:0.0015:0.0016:0.0015:0.0016:0.0016:0.0016:0.0017:0.0016)

------
		(:0.0016:0.0015:0.0016:0.0016:0.0016:0.0017:0.0016:0.0017)
vidiavidiavidiavidiavidiavidiavidia
@ 550 train 5.1551 , allloss: 5.1551, dt: 1175.01ms, fracRes: 0.0618, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7265, norm(y): 0.9937, norm:0.5033, tok/sec: 111549.90, flops:97.70, batch-reuse:1
@ 551 train 5.2515 , allloss: 5.2515, dt: 682.93ms, fracRes: 0.0643, norm(attn): 0.3281, norm(output): 0.6992, norm(x): 0.7308, norm(y): 0.9937, norm:0.5443, tok/sec: 191926.91, flops:168.10, batch-reuse:1
@ 552 train 5.0814 , allloss: 5.0814, dt: 682.18ms, fracRes: 0.0607, norm(attn): 0.3262, norm(output): 0.7266, norm(x): 0.7366, norm(y): 0.9936, norm:0.4938, tok/sec: 192137.80, flops:168.28, batch-reuse:1
@ 553 train 5.2437 , allloss: 5.2437, dt: 680.71ms, fracRes: 0.0605, norm(attn): 0.3281, norm(output): 0.7188, norm(x): 0.7345, norm(y): 0.9937, norm:0.4748, tok/sec: 192552.48, flops:168.65, batch-reuse:1
@ 554 train 5.0911 , allloss: 5.0911, dt: 675.61ms, fracRes: 0.0616, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7283, norm(y): 0.9937, norm:0.4869, tok/sec: 194004.99, flops:169.92, batch-reuse:1
@ 555 train 5.1657 , allloss: 5.1657, dt: 683.09ms, fracRes: 0.0631, norm(attn): 0.3223, norm(output): 0.7070, norm(x): 0.7305, norm(y): 0.9937, norm:0.4045, tok/sec: 191881.02, flops:168.06, batch-reuse:1
@ 556 train 5.0746 , allloss: 5.0746, dt: 688.09ms, fracRes: 0.0635, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7324, norm(y): 0.9937, norm:0.4453, tok/sec: 190485.63, flops:166.84, batch-reuse:1
@ 557 train 5.1620 , allloss: 5.1620, dt: 677.43ms, fracRes: 0.0646, norm(attn): 0.3242, norm(output): 0.7109, norm(x): 0.7325, norm(y): 0.9937, norm:0.4112, tok/sec: 193484.56, flops:169.46, batch-reuse:1
@ 558 train 5.3449 , allloss: 5.3449, dt: 682.70ms, fracRes: 0.0649, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7331, norm(y): 0.9937, norm:0.4586, tok/sec: 191991.72, flops:168.16, batch-reuse:1
@ 559 train 5.4323 , allloss: 5.4323, dt: 678.52ms, fracRes: 0.0656, norm(attn): 0.3223, norm(output): 0.7109, norm(x): 0.7412, norm(y): 0.9936, norm:0.5930, tok/sec: 193172.03, flops:169.19, batch-reuse:1
@ 560 train 5.3342 , allloss: 5.3342, dt: 679.34ms, fracRes: 0.0652, norm(attn): 0.3242, norm(output): 0.7266, norm(x): 0.7399, norm(y): 0.9937, norm:0.5092, tok/sec: 192939.77, flops:168.99, batch-reuse:1
@ 561 train 5.4398 , allloss: 5.4398, dt: 677.99ms, fracRes: 0.0677, norm(attn): 0.3242, norm(output): 0.7188, norm(x): 0.7390, norm(y): 0.9937, norm:0.4798, tok/sec: 193323.31, flops:169.32, batch-reuse:1
@ 562 train 5.3355 , allloss: 5.3355, dt: 678.47ms, fracRes: 0.0661, norm(attn): 0.3242, norm(output): 0.7109, norm(x): 0.7352, norm(y): 0.9937, norm:0.4138, tok/sec: 193187.37, flops:169.20, batch-reuse:1
@ 563 train 5.4258 , allloss: 5.4258, dt: 685.41ms, fracRes: 0.0669, norm(attn): 0.3320, norm(output): 0.7109, norm(x): 0.7333, norm(y): 0.9937, norm:0.5125, tok/sec: 191232.58, flops:167.49, batch-reuse:1
@ 564 train 5.2490 , allloss: 5.2490, dt: 696.58ms, fracRes: 0.0671, norm(attn): 0.3320, norm(output): 0.7070, norm(x): 0.7353, norm(y): 0.9936, norm:0.5853, tok/sec: 188164.28, flops:164.80, batch-reuse:1
@ 565 train 5.2307 , allloss: 5.2307, dt: 684.95ms, fracRes: 0.0700, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7299, norm(y): 0.9937, norm:0.6769, tok/sec: 191360.79, flops:167.60, batch-reuse:1
@ 566 train 5.3536 , allloss: 5.3536, dt: 685.20ms, fracRes: 0.0665, norm(attn): 0.3223, norm(output): 0.7031, norm(x): 0.7357, norm(y): 0.9935, norm:0.6257, tok/sec: 191290.34, flops:167.54, batch-reuse:1
@ 567 train 5.3567 , allloss: 5.3567, dt: 681.60ms, fracRes: 0.0645, norm(attn): 0.3223, norm(output): 0.7109, norm(x): 0.7413, norm(y): 0.9935, norm:0.4315, tok/sec: 192300.98, flops:168.43, batch-reuse:1
@ 568 train 5.4083 , allloss: 5.4083, dt: 700.55ms, fracRes: 0.0662, norm(attn): 0.3301, norm(output): 0.7266, norm(x): 0.7521, norm(y): 0.9936, norm:0.4546, tok/sec: 187098.94, flops:163.87, batch-reuse:1
@ 569 train 5.3394 , allloss: 5.3394, dt: 702.75ms, fracRes: 0.0662, norm(attn): 0.3242, norm(output): 0.7305, norm(x): 0.7523, norm(y): 0.9936, norm:0.4591, tok/sec: 186513.12, flops:163.36, batch-reuse:1
@ 570 train 5.2810 , allloss: 5.2810, dt: 700.55ms, fracRes: 0.0679, norm(attn): 0.3320, norm(output): 0.7344, norm(x): 0.7507, norm(y): 0.9936, norm:0.4375, tok/sec: 187097.80, flops:163.87, batch-reuse:1
@ 571 train 5.2318 , allloss: 5.2318, dt: 711.62ms, fracRes: 0.0678, norm(attn): 0.3340, norm(output): 0.7344, norm(x): 0.7512, norm(y): 0.9936, norm:0.4009, tok/sec: 184188.47, flops:161.32, batch-reuse:1
@ 572 train 5.2138 , allloss: 5.2138, dt: 708.50ms, fracRes: 0.0674, norm(attn): 0.3320, norm(output): 0.7266, norm(x): 0.7482, norm(y): 0.9936, norm:0.4140, tok/sec: 184999.88, flops:162.03, batch-reuse:1
@ 573 train 5.2874 , allloss: 5.2874, dt: 713.39ms, fracRes: 0.0669, norm(attn): 0.3223, norm(output): 0.7266, norm(x): 0.7450, norm(y): 0.9936, norm:0.4359, tok/sec: 183732.21, flops:160.92, batch-reuse:1
@ 574 train 5.2915 , allloss: 5.2915, dt: 714.97ms, fracRes: 0.0688, norm(attn): 0.3242, norm(output): 0.7266, norm(x): 0.7469, norm(y): 0.9935, norm:0.4323, tok/sec: 183325.82, flops:160.57, batch-reuse:1
@ 575 train 5.2329 , allloss: 5.2329, dt: 711.15ms, fracRes: 0.0710, norm(attn): 0.3320, norm(output): 0.7383, norm(x): 0.7552, norm(y): 0.9935, norm:0.4382, tok/sec: 184310.37, flops:161.43, batch-reuse:1
@ 576 train 5.2395 , allloss: 5.2395, dt: 696.64ms, fracRes: 0.0719, norm(attn): 0.3340, norm(output): 0.7266, norm(x): 0.7451, norm(y): 0.9935, norm:0.4531, tok/sec: 188149.53, flops:164.79, batch-reuse:1
@ 577 train 5.2734 , allloss: 5.2734, dt: 706.80ms, fracRes: 0.0717, norm(attn): 0.3281, norm(output): 0.7109, norm(x): 0.7408, norm(y): 0.9935, norm:0.4690, tok/sec: 185443.38, flops:162.42, batch-reuse:1
@ 578 train 5.2397 , allloss: 5.2397, dt: 711.49ms, fracRes: 0.0741, norm(attn): 0.3320, norm(output): 0.7148, norm(x): 0.7394, norm(y): 0.9934, norm:0.4260, tok/sec: 184222.42, flops:161.35, batch-reuse:1
@ 579 train 5.2290 , allloss: 5.2290, dt: 690.44ms, fracRes: 0.0735, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7400, norm(y): 0.9934, norm:0.4219, tok/sec: 189839.30, flops:166.27, batch-reuse:1
@ 580 train 5.2333 , allloss: 5.2333, dt: 703.08ms, fracRes: 0.0699, norm(attn): 0.3320, norm(output): 0.7109, norm(x): 0.7355, norm(y): 0.9935, norm:0.4461, tok/sec: 186424.32, flops:163.28, batch-reuse:1
@ 581 train 5.2286 , allloss: 5.2286, dt: 693.35ms, fracRes: 0.0702, norm(attn): 0.3320, norm(output): 0.7148, norm(x): 0.7347, norm(y): 0.9934, norm:0.4294, tok/sec: 189040.68, flops:165.57, batch-reuse:1
@ 582 train 5.1865 , allloss: 5.1865, dt: 700.57ms, fracRes: 0.0698, norm(attn): 0.3320, norm(output): 0.7070, norm(x): 0.7351, norm(y): 0.9934, norm:0.4942, tok/sec: 187094.04, flops:163.87, batch-reuse:1
@ 583 train 5.1578 , allloss: 5.1578, dt: 701.31ms, fracRes: 0.0703, norm(attn): 0.3242, norm(output): 0.7109, norm(x): 0.7346, norm(y): 0.9934, norm:0.4727, tok/sec: 186896.10, flops:163.69, batch-reuse:1
@ 584 train 5.2653 , allloss: 5.2653, dt: 700.29ms, fracRes: 0.0701, norm(attn): 0.3242, norm(output): 0.7109, norm(x): 0.7400, norm(y): 0.9935, norm:0.4160, tok/sec: 187167.55, flops:163.93, batch-reuse:1
@ 585 train 5.2024 , allloss: 5.2024, dt: 690.47ms, fracRes: 0.0700, norm(attn): 0.3242, norm(output): 0.7188, norm(x): 0.7412, norm(y): 0.9935, norm:0.4137, tok/sec: 189831.43, flops:166.26, batch-reuse:1
@ 586 train 5.2238 , allloss: 5.2238, dt: 704.75ms, fracRes: 0.0721, norm(attn): 0.3301, norm(output): 0.7266, norm(x): 0.7411, norm(y): 0.9934, norm:0.4324, tok/sec: 185984.23, flops:162.90, batch-reuse:1
@ 587 train 5.2585 , allloss: 5.2585, dt: 709.39ms, fracRes: 0.0745, norm(attn): 0.3281, norm(output): 0.7031, norm(x): 0.7353, norm(y): 0.9934, norm:0.4547, tok/sec: 184766.22, flops:161.83, batch-reuse:1
@ 588 train 5.2908 , allloss: 5.2908, dt: 710.12ms, fracRes: 0.0734, norm(attn): 0.3242, norm(output): 0.7109, norm(x): 0.7403, norm(y): 0.9934, norm:0.4533, tok/sec: 184576.89, flops:161.66, batch-reuse:1
@ 589 train 5.2498 , allloss: 5.2498, dt: 707.62ms, fracRes: 0.0714, norm(attn): 0.3223, norm(output): 0.7148, norm(x): 0.7403, norm(y): 0.9934, norm:0.4586, tok/sec: 185230.45, flops:162.24, batch-reuse:1
@ 590 train 5.2628 , allloss: 5.2628, dt: 699.76ms, fracRes: 0.0735, norm(attn): 0.3223, norm(output): 0.7031, norm(x): 0.7354, norm(y): 0.9934, norm:0.3932, tok/sec: 187309.75, flops:164.06, batch-reuse:1
@ 591 train 5.1807 , allloss: 5.1807, dt: 688.83ms, fracRes: 0.0768, norm(attn): 0.3242, norm(output): 0.6992, norm(x): 0.7346, norm(y): 0.9934, norm:0.3975, tok/sec: 190280.85, flops:166.66, batch-reuse:1
@ 592 train 5.2433 , allloss: 5.2433, dt: 694.60ms, fracRes: 0.0805, norm(attn): 0.3281, norm(output): 0.6992, norm(x): 0.7382, norm(y): 0.9933, norm:0.4275, tok/sec: 188701.90, flops:165.28, batch-reuse:1
@ 593 train 5.2284 , allloss: 5.2284, dt: 705.71ms, fracRes: 0.0762, norm(attn): 0.3262, norm(output): 0.6992, norm(x): 0.7342, norm(y): 0.9933, norm:0.4096, tok/sec: 185730.83, flops:162.67, batch-reuse:1
@ 594 train 5.4652 , allloss: 5.4652, dt: 701.84ms, fracRes: 0.0737, norm(attn): 0.3281, norm(output): 0.7031, norm(x): 0.7356, norm(y): 0.9933, norm:0.4476, tok/sec: 186755.34, flops:163.57, batch-reuse:1
@ 595 train 5.1431 , allloss: 5.1431, dt: 694.11ms, fracRes: 0.0726, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7331, norm(y): 0.9933, norm:0.4813, tok/sec: 188835.10, flops:165.39, batch-reuse:1
@ 596 train 5.2007 , allloss: 5.2007, dt: 698.04ms, fracRes: 0.0764, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7343, norm(y): 0.9933, norm:0.4748, tok/sec: 187771.66, flops:164.46, batch-reuse:1
@ 597 train 5.2328 , allloss: 5.2328, dt: 699.60ms, fracRes: 0.0795, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7228, norm(y): 0.9933, norm:0.4571, tok/sec: 187352.59, flops:164.09, batch-reuse:1
@ 598 train 5.2343 , allloss: 5.2343, dt: 696.15ms, fracRes: 0.0751, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7315, norm(y): 0.9933, norm:0.4233, tok/sec: 188281.95, flops:164.91, batch-reuse:1
@ 599 train 5.1711 , allloss: 5.1711, dt: 704.14ms, fracRes: 0.0745, norm(attn): 0.3184, norm(output): 0.7070, norm(x): 0.7381, norm(y): 0.9932, norm:0.5389, tok/sec: 186144.56, flops:163.04, batch-reuse:1
@ 600 train 5.1783 , allloss: 5.1783, dt: 687.95ms, fracRes: 0.0749, norm(attn): 0.3223, norm(output): 0.7031, norm(x): 0.7339, norm(y): 0.9933, norm:0.4617, tok/sec: 190526.63, flops:166.87, batch-reuse:1
@ 601 train 5.2507 , allloss: 5.2507, dt: 698.08ms, fracRes: 0.0735, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7343, norm(y): 0.9933, norm:0.4480, tok/sec: 187760.76, flops:164.45, batch-reuse:1
@ 602 train 5.2450 , allloss: 5.2450, dt: 696.90ms, fracRes: 0.0730, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7396, norm(y): 0.9932, norm:0.4793, tok/sec: 188078.21, flops:164.73, batch-reuse:1
@ 603 train 5.1760 , allloss: 5.1760, dt: 707.16ms, fracRes: 0.0768, norm(attn): 0.3242, norm(output): 0.6992, norm(x): 0.7333, norm(y): 0.9932, norm:0.4752, tok/sec: 185349.16, flops:162.34, batch-reuse:1
@ 604 train 5.0999 , allloss: 5.0999, dt: 708.73ms, fracRes: 0.0772, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7245, norm(y): 0.9933, norm:0.4786, tok/sec: 184940.07, flops:161.98, batch-reuse:1
@ 605 train 5.0904 , allloss: 5.0904, dt: 694.01ms, fracRes: 0.0782, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7246, norm(y): 0.9933, norm:0.4619, tok/sec: 188860.98, flops:165.41, batch-reuse:1
@ 606 train 5.1568 , allloss: 5.1568, dt: 706.92ms, fracRes: 0.0789, norm(attn): 0.3262, norm(output): 0.6914, norm(x): 0.7284, norm(y): 0.9932, norm:0.4427, tok/sec: 185413.93, flops:162.40, batch-reuse:1
@ 607 train 5.1462 , allloss: 5.1462, dt: 714.25ms, fracRes: 0.0803, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7289, norm(y): 0.9932, norm:0.4265, tok/sec: 183510.69, flops:160.73, batch-reuse:1
@ 608 train 5.0785 , allloss: 5.0785, dt: 708.53ms, fracRes: 0.0790, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7292, norm(y): 0.9932, norm:0.3883, tok/sec: 184991.35, flops:162.03, batch-reuse:1
@ 609 train 5.1269 , allloss: 5.1269, dt: 692.48ms, fracRes: 0.0783, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7290, norm(y): 0.9932, norm:0.3683, tok/sec: 189278.44, flops:165.78, batch-reuse:1
@ 610 train 5.2856 , allloss: 5.2856, dt: 710.04ms, fracRes: 0.0787, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7328, norm(y): 0.9932, norm:0.4208, tok/sec: 184597.84, flops:161.68, batch-reuse:1
@ 611 train 5.1504 , allloss: 5.1504, dt: 706.74ms, fracRes: 0.0787, norm(attn): 0.3281, norm(output): 0.7109, norm(x): 0.7354, norm(y): 0.9932, norm:0.3620, tok/sec: 185460.46, flops:162.44, batch-reuse:1
@ 612 train 5.1495 , allloss: 5.1495, dt: 689.92ms, fracRes: 0.0785, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7354, norm(y): 0.9931, norm:0.3615, tok/sec: 189981.53, flops:166.40, batch-reuse:1
@ 613 train 5.2260 , allloss: 5.2260, dt: 685.33ms, fracRes: 0.0782, norm(attn): 0.3203, norm(output): 0.6992, norm(x): 0.7336, norm(y): 0.9931, norm:0.4644, tok/sec: 191254.87, flops:167.51, batch-reuse:1
@ 614 train 5.1883 , allloss: 5.1883, dt: 694.80ms, fracRes: 0.0802, norm(attn): 0.3203, norm(output): 0.7031, norm(x): 0.7376, norm(y): 0.9930, norm:0.4446, tok/sec: 188646.08, flops:165.23, batch-reuse:1
@ 615 train 5.2143 , allloss: 5.2143, dt: 724.53ms, fracRes: 0.0783, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7312, norm(y): 0.9931, norm:0.4881, tok/sec: 180906.66, flops:158.45, batch-reuse:1
@ 616 train 5.1713 , allloss: 5.1713, dt: 712.82ms, fracRes: 0.0819, norm(attn): 0.3262, norm(output): 0.6914, norm(x): 0.7234, norm(y): 0.9932, norm:0.5910, tok/sec: 183877.74, flops:161.05, batch-reuse:1
@ 617 train 5.0526 , allloss: 5.0526, dt: 692.10ms, fracRes: 0.0822, norm(attn): 0.3223, norm(output): 0.6914, norm(x): 0.7231, norm(y): 0.9932, norm:0.5927, tok/sec: 189383.09, flops:165.87, batch-reuse:1
@ 618 train 5.1068 , allloss: 5.1068, dt: 699.77ms, fracRes: 0.0796, norm(attn): 0.3184, norm(output): 0.6914, norm(x): 0.7227, norm(y): 0.9931, norm:0.4923, tok/sec: 187308.22, flops:164.05, batch-reuse:1
@ 619 train 5.1142 , allloss: 5.1142, dt: 697.15ms, fracRes: 0.0791, norm(attn): 0.3203, norm(output): 0.6875, norm(x): 0.7220, norm(y): 0.9931, norm:0.4413, tok/sec: 188011.32, flops:164.67, batch-reuse:1
@ 620 train 5.1301 , allloss: 5.1301, dt: 707.79ms, fracRes: 0.0790, norm(attn): 0.3223, norm(output): 0.6914, norm(x): 0.7255, norm(y): 0.9931, norm:0.5110, tok/sec: 185184.84, flops:162.20, batch-reuse:1
@ 621 train 5.1900 , allloss: 5.1900, dt: 702.27ms, fracRes: 0.0815, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7366, norm(y): 0.9932, norm:0.5875, tok/sec: 186639.63, flops:163.47, batch-reuse:1
@ 622 train 5.1178 , allloss: 5.1178, dt: 693.25ms, fracRes: 0.0830, norm(attn): 0.3281, norm(output): 0.7266, norm(x): 0.7500, norm(y): 0.9932, norm:0.5062, tok/sec: 189067.85, flops:165.60, batch-reuse:1
@ 623 train 5.0553 , allloss: 5.0553, dt: 695.02ms, fracRes: 0.0838, norm(attn): 0.3262, norm(output): 0.7266, norm(x): 0.7485, norm(y): 0.9932, norm:0.4987, tok/sec: 188586.23, flops:165.17, batch-reuse:1
@ 624 train 5.1037 , allloss: 5.1037, dt: 700.66ms, fracRes: 0.0843, norm(attn): 0.3242, norm(output): 0.7227, norm(x): 0.7473, norm(y): 0.9931, norm:0.4131, tok/sec: 187068.70, flops:163.85, batch-reuse:1
@ 625 train 5.1559 , allloss: 5.1559, dt: 690.78ms, fracRes: 0.0830, norm(attn): 0.3320, norm(output): 0.7109, norm(x): 0.7422, norm(y): 0.9931, norm:0.4734, tok/sec: 189744.36, flops:166.19, batch-reuse:1
@ 626 train 5.1106 , allloss: 5.1106, dt: 700.00ms, fracRes: 0.0845, norm(attn): 0.3281, norm(output): 0.6992, norm(x): 0.7351, norm(y): 0.9931, norm:0.4567, tok/sec: 187245.64, flops:164.00, batch-reuse:1
@ 627 train 5.0479 , allloss: 5.0479, dt: 700.82ms, fracRes: 0.0879, norm(attn): 0.3359, norm(output): 0.6992, norm(x): 0.7396, norm(y): 0.9931, norm:0.5568, tok/sec: 187026.00, flops:163.81, batch-reuse:1
@ 628 train 5.1984 , allloss: 5.1984, dt: 703.05ms, fracRes: 0.0900, norm(attn): 0.3379, norm(output): 0.7031, norm(x): 0.7408, norm(y): 0.9931, norm:0.4360, tok/sec: 186432.35, flops:163.29, batch-reuse:1
@ 629 train 5.2542 , allloss: 5.2542, dt: 703.23ms, fracRes: 0.0896, norm(attn): 0.3340, norm(output): 0.7070, norm(x): 0.7407, norm(y): 0.9930, norm:0.4325, tok/sec: 186385.32, flops:163.25, batch-reuse:1
@ 630 train 5.1893 , allloss: 5.1893, dt: 690.74ms, fracRes: 0.0859, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7393, norm(y): 0.9930, norm:0.5493, tok/sec: 189756.21, flops:166.20, batch-reuse:1
@ 631 train 5.1558 , allloss: 5.1558, dt: 694.45ms, fracRes: 0.0847, norm(attn): 0.3242, norm(output): 0.6953, norm(x): 0.7368, norm(y): 0.9930, norm:0.4302, tok/sec: 188741.48, flops:165.31, batch-reuse:1
@ 632 train 5.4569 , allloss: 5.4569, dt: 700.36ms, fracRes: 0.0879, norm(attn): 0.3320, norm(output): 0.7070, norm(x): 0.7421, norm(y): 0.9930, norm:0.5279, tok/sec: 187150.34, flops:163.92, batch-reuse:1
@ 633 train 5.1719 , allloss: 5.1719, dt: 703.20ms, fracRes: 0.0849, norm(attn): 0.3301, norm(output): 0.7070, norm(x): 0.7454, norm(y): 0.9931, norm:0.5427, tok/sec: 186393.03, flops:163.25, batch-reuse:1
@ 634 train 5.1765 , allloss: 5.1765, dt: 698.92ms, fracRes: 0.0847, norm(attn): 0.3340, norm(output): 0.7070, norm(x): 0.7454, norm(y): 0.9931, norm:0.5278, tok/sec: 187534.92, flops:164.25, batch-reuse:1
@ 635 train 5.1437 , allloss: 5.1437, dt: 704.44ms, fracRes: 0.0851, norm(attn): 0.3359, norm(output): 0.7188, norm(x): 0.7515, norm(y): 0.9931, norm:0.4604, tok/sec: 186065.18, flops:162.97, batch-reuse:1
@ 636 train 5.2173 , allloss: 5.2173, dt: 706.84ms, fracRes: 0.0816, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7473, norm(y): 0.9931, norm:0.5024, tok/sec: 185432.56, flops:162.41, batch-reuse:1
@ 637 train 5.0998 , allloss: 5.0998, dt: 705.64ms, fracRes: 0.0798, norm(attn): 0.3242, norm(output): 0.7070, norm(x): 0.7366, norm(y): 0.9930, norm:0.5828, tok/sec: 185750.28, flops:162.69, batch-reuse:1
@ 638 train 5.0984 , allloss: 5.0984, dt: 691.26ms, fracRes: 0.0843, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7447, norm(y): 0.9930, norm:0.4908, tok/sec: 189613.40, flops:166.07, batch-reuse:1
@ 639 train 5.1346 , allloss: 5.1346, dt: 705.38ms, fracRes: 0.0865, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7555, norm(y): 0.9931, norm:0.4587, tok/sec: 185817.27, flops:162.75, batch-reuse:1
@ 640 train 5.0694 , allloss: 5.0694, dt: 695.97ms, fracRes: 0.0856, norm(attn): 0.3418, norm(output): 0.7266, norm(x): 0.7553, norm(y): 0.9931, norm:0.4371, tok/sec: 188330.65, flops:164.95, batch-reuse:1
@ 641 train 5.0265 , allloss: 5.0265, dt: 700.40ms, fracRes: 0.0870, norm(attn): 0.3438, norm(output): 0.7266, norm(x): 0.7564, norm(y): 0.9931, norm:0.4587, tok/sec: 187139.83, flops:163.91, batch-reuse:1
@ 642 train 5.0229 , allloss: 5.0229, dt: 685.65ms, fracRes: 0.0879, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7468, norm(y): 0.9931, norm:0.4389, tok/sec: 191165.22, flops:167.43, batch-reuse:1
@ 643 train 5.1255 , allloss: 5.1255, dt: 700.41ms, fracRes: 0.0884, norm(attn): 0.3320, norm(output): 0.7109, norm(x): 0.7471, norm(y): 0.9930, norm:0.3819, tok/sec: 187134.80, flops:163.90, batch-reuse:1
@ 644 train 5.2102 , allloss: 5.2102, dt: 696.16ms, fracRes: 0.0890, norm(attn): 0.3340, norm(output): 0.7148, norm(x): 0.7484, norm(y): 0.9930, norm:0.4546, tok/sec: 188278.02, flops:164.90, batch-reuse:1
@ 645 train 5.1427 , allloss: 5.1427, dt: 704.44ms, fracRes: 0.0866, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7450, norm(y): 0.9930, norm:0.4692, tok/sec: 186065.18, flops:162.97, batch-reuse:1
@ 646 train 5.1072 , allloss: 5.1072, dt: 702.87ms, fracRes: 0.0897, norm(attn): 0.3398, norm(output): 0.7188, norm(x): 0.7521, norm(y): 0.9930, norm:0.5131, tok/sec: 186482.31, flops:163.33, batch-reuse:1
@ 647 train 5.1613 , allloss: 5.1613, dt: 698.00ms, fracRes: 0.0889, norm(attn): 0.3320, norm(output): 0.7148, norm(x): 0.7548, norm(y): 0.9930, norm:0.5420, tok/sec: 187782.89, flops:164.47, batch-reuse:1
@ 648 train 5.0931 , allloss: 5.0931, dt: 698.11ms, fracRes: 0.0925, norm(attn): 0.3301, norm(output): 0.6992, norm(x): 0.7434, norm(y): 0.9930, norm:0.4204, tok/sec: 187753.00, flops:164.44, batch-reuse:1
@ 649 train 5.1217 , allloss: 5.1217, dt: 688.23ms, fracRes: 0.0937, norm(attn): 0.3301, norm(output): 0.6992, norm(x): 0.7396, norm(y): 0.9930, norm:0.4857, tok/sec: 190448.02, flops:166.80, batch-reuse:1
@ 650 train 5.0264 , allloss: 5.0264, dt: 702.36ms, fracRes: 0.0931, norm(attn): 0.3242, norm(output): 0.6992, norm(x): 0.7376, norm(y): 0.9930, norm:0.5076, tok/sec: 186615.50, flops:163.45, batch-reuse:1
@ 651 train 5.0640 , allloss: 5.0640, dt: 701.75ms, fracRes: 0.0919, norm(attn): 0.3320, norm(output): 0.7070, norm(x): 0.7430, norm(y): 0.9930, norm:0.5020, tok/sec: 186778.25, flops:163.59, batch-reuse:1
@ 652 train 5.0364 , allloss: 5.0364, dt: 694.61ms, fracRes: 0.0927, norm(attn): 0.3320, norm(output): 0.7266, norm(x): 0.7493, norm(y): 0.9930, norm:0.4756, tok/sec: 188698.47, flops:165.27, batch-reuse:1
@ 653 train 5.0136 , allloss: 5.0136, dt: 682.83ms, fracRes: 0.0892, norm(attn): 0.3320, norm(output): 0.7148, norm(x): 0.7505, norm(y): 0.9931, norm:0.4356, tok/sec: 191953.64, flops:168.12, batch-reuse:1
@ 654 train 5.0383 , allloss: 5.0383, dt: 685.35ms, fracRes: 0.0872, norm(attn): 0.3340, norm(output): 0.7188, norm(x): 0.7477, norm(y): 0.9931, norm:0.5010, tok/sec: 191249.35, flops:167.51, batch-reuse:1
@ 655 train 5.0726 , allloss: 5.0726, dt: 709.81ms, fracRes: 0.0934, norm(attn): 0.3242, norm(output): 0.7188, norm(x): 0.7504, norm(y): 0.9930, norm:0.4362, tok/sec: 184657.12, flops:161.73, batch-reuse:1
@ 656 train 4.8873 , allloss: 4.8873, dt: 703.99ms, fracRes: 0.0948, norm(attn): 0.3262, norm(output): 0.7109, norm(x): 0.7503, norm(y): 0.9930, norm:0.4511, tok/sec: 186184.03, flops:163.07, batch-reuse:1
@ 657 train 4.9758 , allloss: 4.9758, dt: 712.59ms, fracRes: 0.0961, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7412, norm(y): 0.9930, norm:0.4557, tok/sec: 183938.03, flops:161.10, batch-reuse:1
@ 658 train 5.0579 , allloss: 5.0579, dt: 715.52ms, fracRes: 0.0955, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7449, norm(y): 0.9930, norm:0.4017, tok/sec: 183184.40, flops:160.44, batch-reuse:1
@ 659 train 5.0735 , allloss: 5.0735, dt: 714.86ms, fracRes: 0.0934, norm(attn): 0.3262, norm(output): 0.7031, norm(x): 0.7404, norm(y): 0.9930, norm:0.4260, tok/sec: 183353.33, flops:160.59, batch-reuse:1
@ 660 train 5.0677 , allloss: 5.0677, dt: 714.68ms, fracRes: 0.0934, norm(attn): 0.3301, norm(output): 0.7031, norm(x): 0.7405, norm(y): 0.9930, norm:0.4561, tok/sec: 183400.74, flops:160.63, batch-reuse:1
@ 661 train 4.9887 , allloss: 4.9887, dt: 696.09ms, fracRes: 0.0908, norm(attn): 0.3281, norm(output): 0.7031, norm(x): 0.7383, norm(y): 0.9930, norm:0.4655, tok/sec: 188297.62, flops:164.92, batch-reuse:1
@ 662 train 5.1199 , allloss: 5.1199, dt: 707.06ms, fracRes: 0.0929, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7390, norm(y): 0.9930, norm:0.4314, tok/sec: 185375.98, flops:162.36, batch-reuse:1
@ 663 train 5.0399 , allloss: 5.0399, dt: 690.25ms, fracRes: 0.0935, norm(attn): 0.3340, norm(output): 0.7031, norm(x): 0.7386, norm(y): 0.9930, norm:0.4510, tok/sec: 189891.43, flops:166.32, batch-reuse:1
@ 664 train 4.9835 , allloss: 4.9835, dt: 691.28ms, fracRes: 0.0938, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7325, norm(y): 0.9929, norm:0.4272, tok/sec: 189608.83, flops:166.07, batch-reuse:1
@ 665 train 5.0231 , allloss: 5.0231, dt: 705.17ms, fracRes: 0.0983, norm(attn): 0.3301, norm(output): 0.6953, norm(x): 0.7340, norm(y): 0.9929, norm:0.4964, tok/sec: 185871.93, flops:162.80, batch-reuse:1
@ 666 train 4.9347 , allloss: 4.9347, dt: 694.89ms, fracRes: 0.0970, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7289, norm(y): 0.9929, norm:0.5424, tok/sec: 188621.42, flops:165.21, batch-reuse:1
@ 667 train 4.8941 , allloss: 4.8941, dt: 702.72ms, fracRes: 0.1011, norm(attn): 0.3359, norm(output): 0.6914, norm(x): 0.7350, norm(y): 0.9929, norm:0.7215, tok/sec: 186522.04, flops:163.37, batch-reuse:1
@ 668 train 5.0757 , allloss: 5.0757, dt: 699.80ms, fracRes: 0.0898, norm(attn): 0.3242, norm(output): 0.7031, norm(x): 0.7411, norm(y): 0.9929, norm:0.5456, tok/sec: 187298.33, flops:164.05, batch-reuse:1
@ 669 train 4.9834 , allloss: 4.9834, dt: 703.66ms, fracRes: 0.0858, norm(attn): 0.3340, norm(output): 0.7188, norm(x): 0.7467, norm(y): 0.9930, norm:0.4977, tok/sec: 186271.84, flops:163.15, batch-reuse:1
@ 670 train 5.1048 , allloss: 5.1048, dt: 707.54ms, fracRes: 0.0875, norm(attn): 0.3379, norm(output): 0.7109, norm(x): 0.7470, norm(y): 0.9930, norm:0.4282, tok/sec: 185250.48, flops:162.25, batch-reuse:1
@ 671 train 4.9884 , allloss: 4.9884, dt: 707.35ms, fracRes: 0.0897, norm(attn): 0.3359, norm(output): 0.7109, norm(x): 0.7448, norm(y): 0.9930, norm:0.3925, tok/sec: 185301.25, flops:162.30, batch-reuse:1
@ 672 train 5.0596 , allloss: 5.0596, dt: 690.86ms, fracRes: 0.0920, norm(attn): 0.3340, norm(output): 0.7109, norm(x): 0.7459, norm(y): 0.9930, norm:0.4672, tok/sec: 189723.08, flops:166.17, batch-reuse:1
@ 673 train 5.0908 , allloss: 5.0908, dt: 694.50ms, fracRes: 0.0942, norm(attn): 0.3359, norm(output): 0.7109, norm(x): 0.7463, norm(y): 0.9929, norm:0.4472, tok/sec: 188727.55, flops:165.30, batch-reuse:1
@ 674 train 5.0475 , allloss: 5.0475, dt: 701.86ms, fracRes: 0.0958, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7430, norm(y): 0.9929, norm:0.4254, tok/sec: 186749.95, flops:163.57, batch-reuse:1
@ 675 train 4.9471 , allloss: 4.9471, dt: 684.43ms, fracRes: 0.0980, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7386, norm(y): 0.9929, norm:0.4296, tok/sec: 191506.57, flops:167.73, batch-reuse:1
@ 676 train 4.9403 , allloss: 4.9403, dt: 699.58ms, fracRes: 0.0970, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7423, norm(y): 0.9929, norm:0.4383, tok/sec: 187359.10, flops:164.10, batch-reuse:1
@ 677 train 5.0914 , allloss: 5.0914, dt: 687.86ms, fracRes: 0.0957, norm(attn): 0.3359, norm(output): 0.7031, norm(x): 0.7457, norm(y): 0.9929, norm:0.5034, tok/sec: 190551.79, flops:166.90, batch-reuse:1
@ 678 train 4.9424 , allloss: 4.9424, dt: 707.94ms, fracRes: 0.0966, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7437, norm(y): 0.9929, norm:0.4089, tok/sec: 185144.48, flops:162.16, batch-reuse:1
@ 679 train 4.9608 , allloss: 4.9608, dt: 712.21ms, fracRes: 0.0960, norm(attn): 0.3281, norm(output): 0.7070, norm(x): 0.7405, norm(y): 0.9929, norm:0.4418, tok/sec: 184036.73, flops:161.19, batch-reuse:1
@ 680 train 4.9572 , allloss: 4.9572, dt: 708.37ms, fracRes: 0.0951, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7369, norm(y): 0.9929, norm:0.4094, tok/sec: 185034.37, flops:162.06, batch-reuse:1
@ 681 train 4.9955 , allloss: 4.9955, dt: 689.48ms, fracRes: 0.0982, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7389, norm(y): 0.9928, norm:0.4204, tok/sec: 190101.75, flops:166.50, batch-reuse:1
@ 682 train 4.9994 , allloss: 4.9994, dt: 702.21ms, fracRes: 0.0994, norm(attn): 0.3262, norm(output): 0.6953, norm(x): 0.7360, norm(y): 0.9928, norm:0.4016, tok/sec: 186656.55, flops:163.48, batch-reuse:1
@ 683 train 4.9372 , allloss: 4.9372, dt: 711.91ms, fracRes: 0.0973, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7370, norm(y): 0.9928, norm:0.4263, tok/sec: 184112.97, flops:161.26, batch-reuse:1
@ 684 train 4.9250 , allloss: 4.9250, dt: 710.49ms, fracRes: 0.0972, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7408, norm(y): 0.9928, norm:0.4617, tok/sec: 184482.19, flops:161.58, batch-reuse:1
@ 685 train 4.9986 , allloss: 4.9986, dt: 711.62ms, fracRes: 0.0992, norm(attn): 0.3379, norm(output): 0.7031, norm(x): 0.7448, norm(y): 0.9928, norm:0.4658, tok/sec: 184187.80, flops:161.32, batch-reuse:1
@ 686 train 5.0345 , allloss: 5.0345, dt: 711.73ms, fracRes: 0.1007, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7418, norm(y): 0.9928, norm:0.3877, tok/sec: 184159.78, flops:161.30, batch-reuse:1
@ 687 train 5.0184 , allloss: 5.0184, dt: 699.92ms, fracRes: 0.0998, norm(attn): 0.3262, norm(output): 0.6914, norm(x): 0.7345, norm(y): 0.9928, norm:0.4154, tok/sec: 187267.71, flops:164.02, batch-reuse:1
@ 688 train 4.9209 , allloss: 4.9209, dt: 706.02ms, fracRes: 0.0985, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7318, norm(y): 0.9928, norm:0.4649, tok/sec: 185649.10, flops:162.60, batch-reuse:1
@ 689 train 4.9446 , allloss: 4.9446, dt: 702.12ms, fracRes: 0.0977, norm(attn): 0.3262, norm(output): 0.6992, norm(x): 0.7362, norm(y): 0.9927, norm:0.5306, tok/sec: 186679.12, flops:163.50, batch-reuse:1
@ 690 train 4.9020 , allloss: 4.9020, dt: 706.88ms, fracRes: 0.0991, norm(attn): 0.3262, norm(output): 0.6953, norm(x): 0.7385, norm(y): 0.9928, norm:0.5050, tok/sec: 185423.37, flops:162.40, batch-reuse:1
@ 691 train 5.0035 , allloss: 5.0035, dt: 707.39ms, fracRes: 0.1002, norm(attn): 0.3242, norm(output): 0.6953, norm(x): 0.7428, norm(y): 0.9927, norm:0.4448, tok/sec: 185288.32, flops:162.29, batch-reuse:1
@ 692 train 4.9563 , allloss: 4.9563, dt: 690.09ms, fracRes: 0.1026, norm(attn): 0.3301, norm(output): 0.6953, norm(x): 0.7414, norm(y): 0.9928, norm:0.4275, tok/sec: 189933.55, flops:166.35, batch-reuse:1
@ 693 train 5.0087 , allloss: 5.0087, dt: 702.76ms, fracRes: 0.1036, norm(attn): 0.3301, norm(output): 0.6992, norm(x): 0.7417, norm(y): 0.9928, norm:0.4742, tok/sec: 186510.53, flops:163.36, batch-reuse:1
@ 694 train 4.8798 , allloss: 4.8798, dt: 703.90ms, fracRes: 0.1034, norm(attn): 0.3359, norm(output): 0.6953, norm(x): 0.7435, norm(y): 0.9927, norm:0.4506, tok/sec: 186207.55, flops:163.09, batch-reuse:1
@ 695 train 4.9295 , allloss: 4.9295, dt: 694.37ms, fracRes: 0.1011, norm(attn): 0.3379, norm(output): 0.6992, norm(x): 0.7420, norm(y): 0.9928, norm:0.4318, tok/sec: 188765.01, flops:165.33, batch-reuse:1
@ 696 train 4.8229 , allloss: 4.8229, dt: 682.86ms, fracRes: 0.1004, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7428, norm(y): 0.9928, norm:0.4114, tok/sec: 191945.94, flops:168.12, batch-reuse:1
@ 697 train 4.8285 , allloss: 4.8285, dt: 701.19ms, fracRes: 0.1005, norm(attn): 0.3340, norm(output): 0.7031, norm(x): 0.7448, norm(y): 0.9927, norm:0.3753, tok/sec: 186928.70, flops:163.72, batch-reuse:1
@ 698 train 4.9442 , allloss: 4.9442, dt: 700.54ms, fracRes: 0.1001, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7384, norm(y): 0.9927, norm:0.4108, tok/sec: 187100.41, flops:163.87, batch-reuse:1
@ 699 train 4.9230 , allloss: 4.9230, dt: 689.50ms, fracRes: 0.1024, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7331, norm(y): 0.9927, norm:0.5084, tok/sec: 190096.69, flops:166.50, batch-reuse:1
@ 700 train 4.8899 , allloss: 4.8899, dt: 700.31ms, fracRes: 0.1054, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7332, norm(y): 0.9927, norm:0.4828, tok/sec: 187161.68, flops:163.93, batch-reuse:1
@ 701 train 4.9228 , allloss: 4.9228, dt: 695.71ms, fracRes: 0.1034, norm(attn): 0.3281, norm(output): 0.6875, norm(x): 0.7316, norm(y): 0.9927, norm:0.5303, tok/sec: 188400.74, flops:165.01, batch-reuse:1
@ 702 train 4.8603 , allloss: 4.8603, dt: 703.48ms, fracRes: 0.1031, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7421, norm(y): 0.9927, norm:0.4907, tok/sec: 186319.63, flops:163.19, batch-reuse:1
@ 703 train 4.9306 , allloss: 4.9306, dt: 703.12ms, fracRes: 0.1008, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7413, norm(y): 0.9927, norm:0.4233, tok/sec: 186415.91, flops:163.27, batch-reuse:1
@ 704 train 4.8250 , allloss: 4.8250, dt: 706.57ms, fracRes: 0.1026, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7435, norm(y): 0.9927, norm:0.3907, tok/sec: 185505.58, flops:162.48, batch-reuse:1
@ 705 train 4.9348 , allloss: 4.9348, dt: 684.14ms, fracRes: 0.1055, norm(attn): 0.3359, norm(output): 0.6953, norm(x): 0.7423, norm(y): 0.9926, norm:0.4038, tok/sec: 191585.53, flops:167.80, batch-reuse:1
@ 706 train 4.8306 , allloss: 4.8306, dt: 691.88ms, fracRes: 0.1051, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7423, norm(y): 0.9926, norm:0.3859, tok/sec: 189444.04, flops:165.93, batch-reuse:1
@ 707 train 4.8764 , allloss: 4.8764, dt: 691.01ms, fracRes: 0.1062, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7446, norm(y): 0.9926, norm:0.4023, tok/sec: 189681.57, flops:166.13, batch-reuse:1
@ 708 train 4.9013 , allloss: 4.9013, dt: 690.84ms, fracRes: 0.1075, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7469, norm(y): 0.9926, norm:0.4500, tok/sec: 189729.69, flops:166.18, batch-reuse:1
@ 709 train 4.8738 , allloss: 4.8738, dt: 705.16ms, fracRes: 0.1084, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7452, norm(y): 0.9927, norm:0.4071, tok/sec: 185875.51, flops:162.80, batch-reuse:1
@ 710 train 5.0403 , allloss: 5.0403, dt: 708.98ms, fracRes: 0.1051, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7411, norm(y): 0.9927, norm:0.4461, tok/sec: 184874.15, flops:161.92, batch-reuse:1
@ 711 train 4.9513 , allloss: 4.9513, dt: 694.07ms, fracRes: 0.1048, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7392, norm(y): 0.9927, norm:0.4887, tok/sec: 188845.80, flops:165.40, batch-reuse:1
@ 712 train 4.8884 , allloss: 4.8884, dt: 710.26ms, fracRes: 0.1057, norm(attn): 0.3301, norm(output): 0.6953, norm(x): 0.7342, norm(y): 0.9927, norm:0.5082, tok/sec: 184539.66, flops:161.63, batch-reuse:1
@ 713 train 4.8446 , allloss: 4.8446, dt: 711.45ms, fracRes: 0.1076, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7318, norm(y): 0.9927, norm:0.4657, tok/sec: 184231.44, flops:161.36, batch-reuse:1
@ 714 train 4.8368 , allloss: 4.8368, dt: 704.09ms, fracRes: 0.1098, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7341, norm(y): 0.9927, norm:0.5119, tok/sec: 186156.73, flops:163.05, batch-reuse:1
@ 715 train 4.8379 , allloss: 4.8379, dt: 705.89ms, fracRes: 0.1113, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7417, norm(y): 0.9926, norm:0.4689, tok/sec: 185682.77, flops:162.63, batch-reuse:1
@ 716 train 4.8584 , allloss: 4.8584, dt: 708.70ms, fracRes: 0.1085, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7405, norm(y): 0.9927, norm:0.4880, tok/sec: 184947.66, flops:161.99, batch-reuse:1
@ 717 train 4.7781 , allloss: 4.7781, dt: 696.18ms, fracRes: 0.1096, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7375, norm(y): 0.9927, norm:0.4555, tok/sec: 188274.34, flops:164.90, batch-reuse:1
@ 718 train 4.8412 , allloss: 4.8412, dt: 706.84ms, fracRes: 0.1104, norm(attn): 0.3379, norm(output): 0.6875, norm(x): 0.7396, norm(y): 0.9927, norm:0.4706, tok/sec: 185433.25, flops:162.41, batch-reuse:1
@ 719 train 4.8172 , allloss: 4.8172, dt: 706.38ms, fracRes: 0.1062, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7364, norm(y): 0.9927, norm:0.4677, tok/sec: 185554.23, flops:162.52, batch-reuse:1
@ 720 train 4.7966 , allloss: 4.7966, dt: 705.75ms, fracRes: 0.1063, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7364, norm(y): 0.9927, norm:0.5306, tok/sec: 185720.35, flops:162.66, batch-reuse:1
@ 721 train 4.7147 , allloss: 4.7147, dt: 708.46ms, fracRes: 0.1100, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7387, norm(y): 0.9927, norm:0.5093, tok/sec: 185008.47, flops:162.04, batch-reuse:1
@ 722 train 4.7888 , allloss: 4.7888, dt: 686.01ms, fracRes: 0.1128, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7408, norm(y): 0.9926, norm:0.4254, tok/sec: 191064.83, flops:167.35, batch-reuse:1
@ 723 train 4.9151 , allloss: 4.9151, dt: 694.89ms, fracRes: 0.1105, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7372, norm(y): 0.9927, norm:0.4340, tok/sec: 188621.62, flops:165.21, batch-reuse:1
@ 724 train 4.8372 , allloss: 4.8372, dt: 685.51ms, fracRes: 0.1138, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7397, norm(y): 0.9927, norm:0.4480, tok/sec: 191204.85, flops:167.47, batch-reuse:1
@ 725 train 4.8370 , allloss: 4.8370, dt: 693.92ms, fracRes: 0.1133, norm(attn): 0.3281, norm(output): 0.6875, norm(x): 0.7377, norm(y): 0.9927, norm:0.4339, tok/sec: 188887.65, flops:165.44, batch-reuse:1
@ 726 train 4.8653 , allloss: 4.8653, dt: 694.62ms, fracRes: 0.1111, norm(attn): 0.3301, norm(output): 0.6953, norm(x): 0.7422, norm(y): 0.9927, norm:0.4297, tok/sec: 188696.91, flops:165.27, batch-reuse:1
@ 727 train 4.8247 , allloss: 4.8247, dt: 698.76ms, fracRes: 0.1131, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7461, norm(y): 0.9926, norm:0.4276, tok/sec: 187578.24, flops:164.29, batch-reuse:1
@ 728 train 4.8650 , allloss: 4.8650, dt: 700.08ms, fracRes: 0.1096, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7408, norm(y): 0.9927, norm:0.3817, tok/sec: 187223.38, flops:163.98, batch-reuse:1
@ 729 train 4.8182 , allloss: 4.8182, dt: 702.56ms, fracRes: 0.1079, norm(attn): 0.3262, norm(output): 0.6875, norm(x): 0.7329, norm(y): 0.9927, norm:0.4212, tok/sec: 186562.17, flops:163.40, batch-reuse:1
@ 730 train 4.8161 , allloss: 4.8161, dt: 690.69ms, fracRes: 0.1090, norm(attn): 0.3242, norm(output): 0.6875, norm(x): 0.7317, norm(y): 0.9926, norm:0.4151, tok/sec: 189769.97, flops:166.21, batch-reuse:1
@ 731 train 4.8608 , allloss: 4.8608, dt: 701.96ms, fracRes: 0.1117, norm(attn): 0.3262, norm(output): 0.6875, norm(x): 0.7333, norm(y): 0.9926, norm:0.4452, tok/sec: 186722.99, flops:163.54, batch-reuse:1
@ 732 train 4.7761 , allloss: 4.7761, dt: 691.20ms, fracRes: 0.1122, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7349, norm(y): 0.9926, norm:0.4240, tok/sec: 189628.64, flops:166.09, batch-reuse:1
@ 733 train 4.8530 , allloss: 4.8530, dt: 705.12ms, fracRes: 0.1132, norm(attn): 0.3242, norm(output): 0.6914, norm(x): 0.7355, norm(y): 0.9926, norm:0.4452, tok/sec: 185886.76, flops:162.81, batch-reuse:1
@ 734 train 4.8508 , allloss: 4.8508, dt: 704.80ms, fracRes: 0.1130, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7339, norm(y): 0.9927, norm:0.3975, tok/sec: 185971.08, flops:162.88, batch-reuse:1
@ 735 train 4.8632 , allloss: 4.8632, dt: 681.33ms, fracRes: 0.1153, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7360, norm(y): 0.9927, norm:0.4604, tok/sec: 192377.43, flops:168.49, batch-reuse:1
@ 736 train 4.9195 , allloss: 4.9195, dt: 706.50ms, fracRes: 0.1142, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7379, norm(y): 0.9927, norm:0.4435, tok/sec: 185522.30, flops:162.49, batch-reuse:1
@ 737 train 4.8302 , allloss: 4.8302, dt: 727.31ms, fracRes: 0.1126, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7394, norm(y): 0.9926, norm:0.5055, tok/sec: 180215.01, flops:157.84, batch-reuse:1
@ 738 train 4.8637 , allloss: 4.8637, dt: 726.97ms, fracRes: 0.1131, norm(attn): 0.3281, norm(output): 0.6953, norm(x): 0.7439, norm(y): 0.9926, norm:0.4271, tok/sec: 180299.00, flops:157.92, batch-reuse:1
@ 739 train 4.7865 , allloss: 4.7865, dt: 692.98ms, fracRes: 0.1133, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7407, norm(y): 0.9927, norm:0.4521, tok/sec: 189141.36, flops:165.66, batch-reuse:1
@ 740 train 4.8391 , allloss: 4.8391, dt: 692.50ms, fracRes: 0.1105, norm(attn): 0.3320, norm(output): 0.6875, norm(x): 0.7364, norm(y): 0.9927, norm:0.4325, tok/sec: 189274.01, flops:165.78, batch-reuse:1
@ 741 train 4.9719 , allloss: 4.9719, dt: 699.76ms, fracRes: 0.1106, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7362, norm(y): 0.9927, norm:0.4661, tok/sec: 187310.33, flops:164.06, batch-reuse:1
@ 742 train 4.9869 , allloss: 4.9869, dt: 688.64ms, fracRes: 0.1111, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7365, norm(y): 0.9926, norm:0.4349, tok/sec: 190335.79, flops:166.71, batch-reuse:1
@ 743 train 4.9566 , allloss: 4.9566, dt: 712.79ms, fracRes: 0.1136, norm(attn): 0.3281, norm(output): 0.6914, norm(x): 0.7384, norm(y): 0.9925, norm:0.5102, tok/sec: 183886.10, flops:161.06, batch-reuse:1
@ 744 train 4.9505 , allloss: 4.9505, dt: 710.13ms, fracRes: 0.1161, norm(attn): 0.3281, norm(output): 0.6875, norm(x): 0.7385, norm(y): 0.9925, norm:0.4387, tok/sec: 184574.17, flops:161.66, batch-reuse:1
@ 745 train 4.9655 , allloss: 4.9655, dt: 709.55ms, fracRes: 0.1181, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7333, norm(y): 0.9925, norm:0.3877, tok/sec: 184724.69, flops:161.79, batch-reuse:1
@ 746 train 4.9829 , allloss: 4.9829, dt: 716.26ms, fracRes: 0.1192, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7399, norm(y): 0.9925, norm:0.4181, tok/sec: 182995.50, flops:160.28, batch-reuse:1
@ 747 train 4.9818 , allloss: 4.9818, dt: 699.70ms, fracRes: 0.1192, norm(attn): 0.3379, norm(output): 0.6875, norm(x): 0.7425, norm(y): 0.9925, norm:0.3579, tok/sec: 187326.48, flops:164.07, batch-reuse:1
@ 748 train 4.9658 , allloss: 4.9658, dt: 708.90ms, fracRes: 0.1223, norm(attn): 0.3301, norm(output): 0.6875, norm(x): 0.7455, norm(y): 0.9925, norm:0.4040, tok/sec: 184893.86, flops:161.94, batch-reuse:1
@ 749 train 4.9900 , allloss: 4.9900, dt: 695.47ms, fracRes: 0.1210, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7440, norm(y): 0.9925, norm:0.4453, tok/sec: 188466.30, flops:165.07, batch-reuse:1
@ 750 train 5.1018 , allloss: 5.1018, dt: 706.98ms, fracRes: 0.1196, norm(attn): 0.3398, norm(output): 0.6875, norm(x): 0.7388, norm(y): 0.9925, norm:0.4813, tok/sec: 185396.54, flops:162.38, batch-reuse:1
@ 751 train 4.9809 , allloss: 4.9809, dt: 712.07ms, fracRes: 0.1204, norm(attn): 0.3398, norm(output): 0.6875, norm(x): 0.7405, norm(y): 0.9925, norm:0.4797, tok/sec: 184072.53, flops:161.22, batch-reuse:1
@ 752 train 4.8951 , allloss: 4.8951, dt: 683.03ms, fracRes: 0.1200, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7428, norm(y): 0.9925, norm:0.4871, tok/sec: 191899.24, flops:168.08, batch-reuse:1
@ 753 train 4.9636 , allloss: 4.9636, dt: 687.46ms, fracRes: 0.1201, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7397, norm(y): 0.9926, norm:0.4829, tok/sec: 190662.41, flops:166.99, batch-reuse:1
@ 754 train 4.9468 , allloss: 4.9468, dt: 698.87ms, fracRes: 0.1181, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7443, norm(y): 0.9926, norm:0.4928, tok/sec: 187548.36, flops:164.27, batch-reuse:1
@ 755 train 5.0555 , allloss: 5.0555, dt: 703.03ms, fracRes: 0.1181, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7483, norm(y): 0.9925, norm:0.5325, tok/sec: 186439.81, flops:163.29, batch-reuse:1
@ 756 train 4.9402 , allloss: 4.9402, dt: 694.75ms, fracRes: 0.1127, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7451, norm(y): 0.9926, norm:0.4586, tok/sec: 188661.82, flops:165.24, batch-reuse:1
@ 757 train 4.9785 , allloss: 4.9785, dt: 703.03ms, fracRes: 0.1173, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7485, norm(y): 0.9926, norm:0.3868, tok/sec: 186439.24, flops:163.29, batch-reuse:1
@ 758 train 4.9334 , allloss: 4.9334, dt: 712.58ms, fracRes: 0.1187, norm(attn): 0.3301, norm(output): 0.6914, norm(x): 0.7428, norm(y): 0.9926, norm:0.4619, tok/sec: 183940.92, flops:161.11, batch-reuse:1
@ 759 train 5.0084 , allloss: 5.0084, dt: 717.86ms, fracRes: 0.1219, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7440, norm(y): 0.9925, norm:0.4724, tok/sec: 182587.38, flops:159.92, batch-reuse:1
@ 760 train 5.0171 , allloss: 5.0171, dt: 716.85ms, fracRes: 0.1203, norm(attn): 0.3320, norm(output): 0.6875, norm(x): 0.7377, norm(y): 0.9925, norm:0.4597, tok/sec: 182845.29, flops:160.15, batch-reuse:1
@ 761 train 5.0370 , allloss: 5.0370, dt: 717.75ms, fracRes: 0.1218, norm(attn): 0.3320, norm(output): 0.6875, norm(x): 0.7396, norm(y): 0.9924, norm:0.4715, tok/sec: 182615.70, flops:159.94, batch-reuse:1
@ 762 train 4.9711 , allloss: 4.9711, dt: 766.59ms, fracRes: 0.1212, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7393, norm(y): 0.9924, norm:0.5090, tok/sec: 170979.96, flops:149.75, batch-reuse:1
@ 763 train 5.0206 , allloss: 5.0206, dt: 712.58ms, fracRes: 0.1189, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7414, norm(y): 0.9926, norm:0.5463, tok/sec: 183940.37, flops:161.11, batch-reuse:1
@ 764 train 4.9221 , allloss: 4.9221, dt: 708.59ms, fracRes: 0.1186, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7438, norm(y): 0.9926, norm:0.4853, tok/sec: 184976.72, flops:162.01, batch-reuse:1
@ 765 train 4.8956 , allloss: 4.8956, dt: 701.16ms, fracRes: 0.1187, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7438, norm(y): 0.9925, norm:0.6059, tok/sec: 186936.39, flops:163.73, batch-reuse:1
@ 766 train 4.8693 , allloss: 4.8693, dt: 700.27ms, fracRes: 0.1207, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7538, norm(y): 0.9925, norm:0.6128, tok/sec: 187172.90, flops:163.94, batch-reuse:1
@ 767 train 5.0184 , allloss: 5.0184, dt: 708.86ms, fracRes: 0.1237, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7512, norm(y): 0.9925, norm:0.5437, tok/sec: 184904.18, flops:161.95, batch-reuse:1
@ 768 train 5.1079 , allloss: 5.1079, dt: 700.20ms, fracRes: 0.1251, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7551, norm(y): 0.9924, norm:0.4999, tok/sec: 187191.06, flops:163.95, batch-reuse:1
@ 769 train 4.9878 , allloss: 4.9878, dt: 689.84ms, fracRes: 0.1223, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7514, norm(y): 0.9925, norm:0.5204, tok/sec: 190003.65, flops:166.42, batch-reuse:1
@ 770 train 4.9269 , allloss: 4.9269, dt: 694.55ms, fracRes: 0.1207, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7515, norm(y): 0.9925, norm:0.5626, tok/sec: 188715.18, flops:165.29, batch-reuse:1
@ 771 train 4.9536 , allloss: 4.9536, dt: 713.41ms, fracRes: 0.1239, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7497, norm(y): 0.9925, norm:0.5179, tok/sec: 183724.97, flops:160.92, batch-reuse:1
@ 772 train 4.9440 , allloss: 4.9440, dt: 702.11ms, fracRes: 0.1226, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7494, norm(y): 0.9925, norm:0.5165, tok/sec: 186682.54, flops:163.51, batch-reuse:1
@ 773 train 4.9878 , allloss: 4.9878, dt: 705.58ms, fracRes: 0.1232, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7545, norm(y): 0.9925, norm:0.4867, tok/sec: 185765.91, flops:162.70, batch-reuse:1
@ 774 train 4.8149 , allloss: 4.8149, dt: 706.12ms, fracRes: 0.1261, norm(attn): 0.3359, norm(output): 0.6953, norm(x): 0.7609, norm(y): 0.9924, norm:0.5070, tok/sec: 185622.46, flops:162.58, batch-reuse:1
@ 775 train 4.9666 , allloss: 4.9666, dt: 711.41ms, fracRes: 0.1261, norm(attn): 0.3262, norm(output): 0.6953, norm(x): 0.7559, norm(y): 0.9924, norm:0.4520, tok/sec: 184243.85, flops:161.37, batch-reuse:1
@ 776 train 4.8561 , allloss: 4.8561, dt: 708.79ms, fracRes: 0.1245, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7530, norm(y): 0.9925, norm:0.4859, tok/sec: 184924.39, flops:161.97, batch-reuse:1
@ 777 train 4.8990 , allloss: 4.8990, dt: 710.01ms, fracRes: 0.1237, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7531, norm(y): 0.9925, norm:0.4990, tok/sec: 184606.77, flops:161.69, batch-reuse:1
@ 778 train 4.9032 , allloss: 4.9032, dt: 687.20ms, fracRes: 0.1241, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7539, norm(y): 0.9925, norm:0.4630, tok/sec: 190734.32, flops:167.06, batch-reuse:1
@ 779 train 4.9652 , allloss: 4.9652, dt: 698.13ms, fracRes: 0.1232, norm(attn): 0.3379, norm(output): 0.6992, norm(x): 0.7518, norm(y): 0.9925, norm:0.4489, tok/sec: 187747.17, flops:164.44, batch-reuse:1
@ 780 train 4.9474 , allloss: 4.9474, dt: 696.21ms, fracRes: 0.1245, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7503, norm(y): 0.9925, norm:0.5030, tok/sec: 188264.16, flops:164.89, batch-reuse:1
@ 781 train 4.9405 , allloss: 4.9405, dt: 700.09ms, fracRes: 0.1241, norm(attn): 0.3340, norm(output): 0.6992, norm(x): 0.7540, norm(y): 0.9925, norm:0.4484, tok/sec: 187221.73, flops:163.98, batch-reuse:1
@ 782 train 4.9558 , allloss: 4.9558, dt: 685.79ms, fracRes: 0.1238, norm(attn): 0.3320, norm(output): 0.7031, norm(x): 0.7575, norm(y): 0.9925, norm:0.4649, tok/sec: 191126.68, flops:167.40, batch-reuse:1
@ 783 train 4.8980 , allloss: 4.8980, dt: 711.79ms, fracRes: 0.1216, norm(attn): 0.3320, norm(output): 0.6992, norm(x): 0.7553, norm(y): 0.9926, norm:0.5455, tok/sec: 184144.42, flops:161.28, batch-reuse:1
@ 784 train 4.8749 , allloss: 4.8749, dt: 703.51ms, fracRes: 0.1223, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7531, norm(y): 0.9926, norm:0.4952, tok/sec: 186312.18, flops:163.18, batch-reuse:1
@ 785 train 4.8742 , allloss: 4.8742, dt: 691.57ms, fracRes: 0.1239, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7511, norm(y): 0.9925, norm:0.4687, tok/sec: 189527.44, flops:166.00, batch-reuse:1
@ 786 train 4.8350 , allloss: 4.8350, dt: 705.70ms, fracRes: 0.1243, norm(attn): 0.3340, norm(output): 0.6953, norm(x): 0.7515, norm(y): 0.9925, norm:0.3830, tok/sec: 185733.90, flops:162.68, batch-reuse:1
@ 787 train 4.8585 , allloss: 4.8585, dt: 698.43ms, fracRes: 0.1281, norm(attn): 0.3359, norm(output): 0.6914, norm(x): 0.7544, norm(y): 0.9925, norm:0.4330, tok/sec: 187666.48, flops:164.37, batch-reuse:1
@ 788 train 4.9485 , allloss: 4.9485, dt: 702.37ms, fracRes: 0.1297, norm(attn): 0.3379, norm(output): 0.6992, norm(x): 0.7570, norm(y): 0.9924, norm:0.3765, tok/sec: 186614.93, flops:163.45, batch-reuse:1
@ 789 train 4.8442 , allloss: 4.8442, dt: 690.63ms, fracRes: 0.1278, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7503, norm(y): 0.9924, norm:0.4051, tok/sec: 189785.95, flops:166.23, batch-reuse:1
@ 790 train 4.8151 , allloss: 4.8151, dt: 703.33ms, fracRes: 0.1240, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7446, norm(y): 0.9924, norm:0.4132, tok/sec: 186359.92, flops:163.22, batch-reuse:1
@ 791 train 4.9832 , allloss: 4.9832, dt: 683.05ms, fracRes: 0.1223, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7480, norm(y): 0.9924, norm:0.4828, tok/sec: 191892.14, flops:168.07, batch-reuse:1
@ 792 train 4.9066 , allloss: 4.9066, dt: 685.02ms, fracRes: 0.1246, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7493, norm(y): 0.9924, norm:0.4569, tok/sec: 191339.21, flops:167.59, batch-reuse:1
@ 793 train 4.8867 , allloss: 4.8867, dt: 703.65ms, fracRes: 0.1276, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7527, norm(y): 0.9925, norm:0.4151, tok/sec: 186274.62, flops:163.15, batch-reuse:1
@ 794 train 4.9133 , allloss: 4.9133, dt: 696.41ms, fracRes: 0.1253, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7573, norm(y): 0.9924, norm:0.4541, tok/sec: 188211.56, flops:164.85, batch-reuse:1
@ 795 train 4.7710 , allloss: 4.7710, dt: 690.53ms, fracRes: 0.1226, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7518, norm(y): 0.9925, norm:0.4273, tok/sec: 189814.85, flops:166.25, batch-reuse:1
@ 796 train 4.7199 , allloss: 4.7199, dt: 713.70ms, fracRes: 0.1226, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7494, norm(y): 0.9924, norm:0.5232, tok/sec: 183651.13, flops:160.85, batch-reuse:1
@ 797 train 4.8849 , allloss: 4.8849, dt: 695.09ms, fracRes: 0.1207, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7493, norm(y): 0.9924, norm:0.4433, tok/sec: 188569.67, flops:165.16, batch-reuse:1
@ 798 train 4.8561 , allloss: 4.8561, dt: 705.54ms, fracRes: 0.1246, norm(attn): 0.3359, norm(output): 0.6914, norm(x): 0.7471, norm(y): 0.9924, norm:0.4158, tok/sec: 185775.95, flops:162.71, batch-reuse:1
@ 799 train 4.8783 , allloss: 4.8783, dt: 694.04ms, fracRes: 0.1267, norm(attn): 0.3359, norm(output): 0.6875, norm(x): 0.7426, norm(y): 0.9924, norm:0.4168, tok/sec: 188852.61, flops:165.41, batch-reuse:1
@ 800 train 4.8582 , allloss: 4.8582, dt: 699.36ms, fracRes: 0.1248, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7412, norm(y): 0.9924, norm:0.4823, tok/sec: 187417.35, flops:164.15, batch-reuse:1
@ 801 train 4.8667 , allloss: 4.8667, dt: 693.16ms, fracRes: 0.1232, norm(attn): 0.3242, norm(output): 0.6875, norm(x): 0.7409, norm(y): 0.9924, norm:0.4621, tok/sec: 189094.19, flops:165.62, batch-reuse:1
@ 802 train 4.8499 , allloss: 4.8499, dt: 698.95ms, fracRes: 0.1241, norm(attn): 0.3320, norm(output): 0.6914, norm(x): 0.7434, norm(y): 0.9924, norm:0.3953, tok/sec: 187526.99, flops:164.25, batch-reuse:1
@ 803 train 4.8805 , allloss: 4.8805, dt: 691.10ms, fracRes: 0.1257, norm(attn): 0.3281, norm(output): 0.6875, norm(x): 0.7426, norm(y): 0.9925, norm:0.3882, tok/sec: 189657.04, flops:166.11, batch-reuse:1
@ 804 train 4.8601 , allloss: 4.8601, dt: 693.40ms, fracRes: 0.1286, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7461, norm(y): 0.9924, norm:0.4045, tok/sec: 189029.17, flops:165.56, batch-reuse:1
@ 805 train 4.9148 , allloss: 4.9148, dt: 687.19ms, fracRes: 0.1318, norm(attn): 0.3340, norm(output): 0.6875, norm(x): 0.7524, norm(y): 0.9923, norm:0.5092, tok/sec: 190734.85, flops:167.06, batch-reuse:1
@ 806 train 4.8883 , allloss: 4.8883, dt: 687.01ms, fracRes: 0.1294, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7512, norm(y): 0.9924, norm:0.4754, tok/sec: 190786.54, flops:167.10, batch-reuse:1
@ 807 train 4.8211 , allloss: 4.8211, dt: 702.58ms, fracRes: 0.1264, norm(attn): 0.3359, norm(output): 0.6914, norm(x): 0.7491, norm(y): 0.9925, norm:0.4958, tok/sec: 186557.42, flops:163.40, batch-reuse:1
@ 808 train 4.8990 , allloss: 4.8990, dt: 696.39ms, fracRes: 0.1293, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7521, norm(y): 0.9924, norm:0.4445, tok/sec: 188216.01, flops:164.85, batch-reuse:1
@ 809 train 4.8569 , allloss: 4.8569, dt: 698.68ms, fracRes: 0.1291, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7526, norm(y): 0.9925, norm:0.4714, tok/sec: 187599.94, flops:164.31, batch-reuse:1
@ 810 train 4.8527 , allloss: 4.8527, dt: 686.27ms, fracRes: 0.1229, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7513, norm(y): 0.9925, norm:0.3900, tok/sec: 190991.42, flops:167.28, batch-reuse:1
@ 811 train 4.8231 , allloss: 4.8231, dt: 689.04ms, fracRes: 0.1242, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7513, norm(y): 0.9925, norm:0.4246, tok/sec: 190224.88, flops:166.61, batch-reuse:1
@ 812 train 4.7838 , allloss: 4.7838, dt: 695.08ms, fracRes: 0.1317, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7503, norm(y): 0.9923, norm:0.4262, tok/sec: 188570.38, flops:165.16, batch-reuse:1
@ 813 train 4.8662 , allloss: 4.8662, dt: 704.81ms, fracRes: 0.1314, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7525, norm(y): 0.9923, norm:0.4726, tok/sec: 185967.12, flops:162.88, batch-reuse:1
@ 814 train 4.8809 , allloss: 4.8809, dt: 686.14ms, fracRes: 0.1297, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7532, norm(y): 0.9923, norm:0.4656, tok/sec: 191028.98, flops:167.31, batch-reuse:1
@ 815 train 4.8202 , allloss: 4.8202, dt: 690.27ms, fracRes: 0.1316, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7532, norm(y): 0.9923, norm:0.4241, tok/sec: 189884.80, flops:166.31, batch-reuse:1
@ 816 train 4.8060 , allloss: 4.8060, dt: 705.53ms, fracRes: 0.1361, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7536, norm(y): 0.9922, norm:0.4847, tok/sec: 185779.09, flops:162.72, batch-reuse:1
@ 817 train 4.8056 , allloss: 4.8056, dt: 710.09ms, fracRes: 0.1342, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7507, norm(y): 0.9923, norm:0.4586, tok/sec: 184585.63, flops:161.67, batch-reuse:1
@ 818 train 4.8053 , allloss: 4.8053, dt: 711.60ms, fracRes: 0.1334, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7510, norm(y): 0.9923, norm:0.4142, tok/sec: 184192.79, flops:161.33, batch-reuse:1
@ 819 train 4.9877 , allloss: 4.9877, dt: 694.63ms, fracRes: 0.1328, norm(attn): 0.3359, norm(output): 0.6953, norm(x): 0.7561, norm(y): 0.9923, norm:0.5016, tok/sec: 188693.67, flops:165.27, batch-reuse:1
@ 820 train 4.9831 , allloss: 4.9831, dt: 695.71ms, fracRes: 0.1259, norm(attn): 0.3340, norm(output): 0.6914, norm(x): 0.7503, norm(y): 0.9924, norm:0.5126, tok/sec: 188399.13, flops:165.01, batch-reuse:1
@ 821 train 4.8384 , allloss: 4.8384, dt: 690.18ms, fracRes: 0.1271, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7514, norm(y): 0.9923, norm:0.6022, tok/sec: 189909.27, flops:166.33, batch-reuse:1
@ 822 train 4.7692 , allloss: 4.7692, dt: 696.61ms, fracRes: 0.1278, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7545, norm(y): 0.9923, norm:0.6219, tok/sec: 188156.10, flops:164.80, batch-reuse:1
@ 823 train 4.7768 , allloss: 4.7768, dt: 697.36ms, fracRes: 0.1285, norm(attn): 0.3340, norm(output): 0.6992, norm(x): 0.7555, norm(y): 0.9923, norm:0.4540, tok/sec: 187954.82, flops:164.62, batch-reuse:1
@ 824 train 4.8685 , allloss: 4.8685, dt: 693.30ms, fracRes: 0.1251, norm(attn): 0.3379, norm(output): 0.7031, norm(x): 0.7566, norm(y): 0.9924, norm:0.5333, tok/sec: 189055.11, flops:165.58, batch-reuse:1
@ 825 train 4.8561 , allloss: 4.8561, dt: 694.52ms, fracRes: 0.1271, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7581, norm(y): 0.9924, norm:0.4759, tok/sec: 188723.99, flops:165.29, batch-reuse:1
@ 826 train 4.8731 , allloss: 4.8731, dt: 682.37ms, fracRes: 0.1299, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7583, norm(y): 0.9925, norm:0.4822, tok/sec: 192084.76, flops:168.24, batch-reuse:1
@ 827 train 4.8706 , allloss: 4.8706, dt: 695.56ms, fracRes: 0.1340, norm(attn): 0.3477, norm(output): 0.6992, norm(x): 0.7590, norm(y): 0.9924, norm:0.6091, tok/sec: 188440.78, flops:165.05, batch-reuse:1
@ 828 train 4.9180 , allloss: 4.9180, dt: 687.32ms, fracRes: 0.1302, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7506, norm(y): 0.9924, norm:0.5778, tok/sec: 190701.17, flops:167.03, batch-reuse:1
@ 829 train 4.8735 , allloss: 4.8735, dt: 681.70ms, fracRes: 0.1288, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7527, norm(y): 0.9923, norm:0.4930, tok/sec: 192271.59, flops:168.40, batch-reuse:1
@ 830 train 4.8841 , allloss: 4.8841, dt: 696.75ms, fracRes: 0.1314, norm(attn): 0.3398, norm(output): 0.6953, norm(x): 0.7554, norm(y): 0.9923, norm:0.4792, tok/sec: 188118.57, flops:164.76, batch-reuse:1
@ 831 train 4.8261 , allloss: 4.8261, dt: 700.47ms, fracRes: 0.1284, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7555, norm(y): 0.9922, norm:0.4633, tok/sec: 187119.89, flops:163.89, batch-reuse:1
@ 832 train 4.8696 , allloss: 4.8696, dt: 711.29ms, fracRes: 0.1286, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7537, norm(y): 0.9923, norm:0.4948, tok/sec: 184272.81, flops:161.40, batch-reuse:1
@ 833 train 4.7703 , allloss: 4.7703, dt: 712.37ms, fracRes: 0.1330, norm(attn): 0.3379, norm(output): 0.6953, norm(x): 0.7563, norm(y): 0.9923, norm:0.5179, tok/sec: 183993.74, flops:161.15, batch-reuse:1
@ 834 train 4.8109 , allloss: 4.8109, dt: 710.17ms, fracRes: 0.1360, norm(attn): 0.3379, norm(output): 0.6914, norm(x): 0.7590, norm(y): 0.9922, norm:0.4901, tok/sec: 184565.43, flops:161.65, batch-reuse:1
@ 835 train 4.7169 , allloss: 4.7169, dt: 689.91ms, fracRes: 0.1381, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7561, norm(y): 0.9923, norm:0.4961, tok/sec: 189982.97, flops:166.40, batch-reuse:1
@ 836 train 4.7193 , allloss: 4.7193, dt: 685.75ms, fracRes: 0.1361, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7578, norm(y): 0.9923, norm:0.4599, tok/sec: 191137.44, flops:167.41, batch-reuse:1
@ 837 train 4.6854 , allloss: 4.6854, dt: 689.57ms, fracRes: 0.1338, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7610, norm(y): 0.9923, norm:0.4118, tok/sec: 190078.09, flops:166.48, batch-reuse:1
@ 838 train 4.8077 , allloss: 4.8077, dt: 701.26ms, fracRes: 0.1348, norm(attn): 0.3398, norm(output): 0.6914, norm(x): 0.7568, norm(y): 0.9923, norm:0.5233, tok/sec: 186909.95, flops:163.71, batch-reuse:1
@ 839 train 4.7846 , allloss: 4.7846, dt: 705.25ms, fracRes: 0.1379, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7581, norm(y): 0.9923, norm:0.5994, tok/sec: 185851.82, flops:162.78, batch-reuse:1
@ 840 train 4.7578 , allloss: 4.7578, dt: 702.04ms, fracRes: 0.1392, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7667, norm(y): 0.9923, norm:0.4949, tok/sec: 186700.61, flops:163.52, batch-reuse:1
@ 841 train 4.7430 , allloss: 4.7430, dt: 702.41ms, fracRes: 0.1371, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7654, norm(y): 0.9923, norm:0.4297, tok/sec: 186602.70, flops:163.44, batch-reuse:1
@ 842 train 4.7966 , allloss: 4.7966, dt: 700.72ms, fracRes: 0.1325, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7603, norm(y): 0.9924, norm:0.3984, tok/sec: 187053.23, flops:163.83, batch-reuse:1
@ 843 train 4.8171 , allloss: 4.8171, dt: 691.76ms, fracRes: 0.1349, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7611, norm(y): 0.9924, norm:0.4298, tok/sec: 189475.51, flops:165.95, batch-reuse:1
@ 844 train 4.8265 , allloss: 4.8265, dt: 686.11ms, fracRes: 0.1409, norm(attn): 0.3438, norm(output): 0.6914, norm(x): 0.7570, norm(y): 0.9923, norm:0.4033, tok/sec: 191037.08, flops:167.32, batch-reuse:1
@ 845 train 4.7520 , allloss: 4.7520, dt: 677.67ms, fracRes: 0.1449, norm(attn): 0.3418, norm(output): 0.6914, norm(x): 0.7612, norm(y): 0.9921, norm:0.4686, tok/sec: 193414.45, flops:169.40, batch-reuse:1
@ 846 train 4.7719 , allloss: 4.7719, dt: 695.26ms, fracRes: 0.1414, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7583, norm(y): 0.9922, norm:0.4949, tok/sec: 188523.17, flops:165.12, batch-reuse:1
@ 847 train 4.8316 , allloss: 4.8316, dt: 694.65ms, fracRes: 0.1354, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7588, norm(y): 0.9922, norm:0.4203, tok/sec: 188687.13, flops:165.26, batch-reuse:1
@ 848 train 4.7488 , allloss: 4.7488, dt: 692.69ms, fracRes: 0.1323, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7585, norm(y): 0.9923, norm:0.4434, tok/sec: 189220.85, flops:165.73, batch-reuse:1
@ 849 train 4.7475 , allloss: 4.7475, dt: 698.35ms, fracRes: 0.1321, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7580, norm(y): 0.9923, norm:0.4329, tok/sec: 187687.30, flops:164.39, batch-reuse:1
@ 850 train 4.6850 , allloss: 4.6850, dt: 696.84ms, fracRes: 0.1366, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7608, norm(y): 0.9922, norm:0.5400, tok/sec: 188094.24, flops:164.74, batch-reuse:1
@ 851 train 5.0021 , allloss: 5.0021, dt: 707.27ms, fracRes: 0.1457, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7708, norm(y): 0.9922, norm:0.7492, tok/sec: 185321.11, flops:162.31, batch-reuse:1
@ 852 train 4.8363 , allloss: 4.8363, dt: 718.51ms, fracRes: 0.1378, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7723, norm(y): 0.9923, norm:0.7856, tok/sec: 182423.19, flops:159.78, batch-reuse:1
@ 853 train 4.8191 , allloss: 4.8191, dt: 699.12ms, fracRes: 0.1389, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7670, norm(y): 0.9924, norm:0.6792, tok/sec: 187480.75, flops:164.21, batch-reuse:1
@ 854 train 4.7834 , allloss: 4.7834, dt: 702.82ms, fracRes: 0.1395, norm(attn): 0.3438, norm(output): 0.7148, norm(x): 0.7725, norm(y): 0.9924, norm:0.5311, tok/sec: 186494.45, flops:163.34, batch-reuse:1
@ 855 train 4.7883 , allloss: 4.7883, dt: 695.13ms, fracRes: 0.1367, norm(attn): 0.3438, norm(output): 0.7148, norm(x): 0.7727, norm(y): 0.9923, norm:0.5214, tok/sec: 188556.60, flops:165.15, batch-reuse:1
@ 856 train 4.7730 , allloss: 4.7730, dt: 697.78ms, fracRes: 0.1363, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7640, norm(y): 0.9923, norm:0.5639, tok/sec: 187840.76, flops:164.52, batch-reuse:1
@ 857 train 4.7151 , allloss: 4.7151, dt: 687.83ms, fracRes: 0.1371, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7705, norm(y): 0.9923, norm:0.4826, tok/sec: 190559.91, flops:166.90, batch-reuse:1
@ 858 train 4.8652 , allloss: 4.8652, dt: 701.91ms, fracRes: 0.1407, norm(attn): 0.3398, norm(output): 0.7148, norm(x): 0.7775, norm(y): 0.9922, norm:0.5116, tok/sec: 186735.81, flops:163.55, batch-reuse:1
@ 859 train 4.7668 , allloss: 4.7668, dt: 719.53ms, fracRes: 0.1402, norm(attn): 0.3398, norm(output): 0.7148, norm(x): 0.7750, norm(y): 0.9923, norm:0.4637, tok/sec: 182162.42, flops:159.55, batch-reuse:1
@ 860 train 4.8073 , allloss: 4.8073, dt: 721.29ms, fracRes: 0.1389, norm(attn): 0.3398, norm(output): 0.7109, norm(x): 0.7721, norm(y): 0.9923, norm:0.5637, tok/sec: 181717.94, flops:159.16, batch-reuse:1
@ 861 train 4.8157 , allloss: 4.8157, dt: 710.41ms, fracRes: 0.1438, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7710, norm(y): 0.9922, norm:0.5199, tok/sec: 184502.06, flops:161.60, batch-reuse:1
@ 862 train 4.7565 , allloss: 4.7565, dt: 695.93ms, fracRes: 0.1460, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7717, norm(y): 0.9922, norm:0.4596, tok/sec: 188339.88, flops:164.96, batch-reuse:1
@ 863 train 4.7522 , allloss: 4.7522, dt: 699.59ms, fracRes: 0.1447, norm(attn): 0.3438, norm(output): 0.6953, norm(x): 0.7678, norm(y): 0.9923, norm:0.4613, tok/sec: 187355.14, flops:164.10, batch-reuse:1
@ 864 train 4.7593 , allloss: 4.7593, dt: 698.80ms, fracRes: 0.1422, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7674, norm(y): 0.9922, norm:0.4733, tok/sec: 187567.43, flops:164.28, batch-reuse:1
@ 865 train 4.6768 , allloss: 4.6768, dt: 700.37ms, fracRes: 0.1403, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7693, norm(y): 0.9922, norm:0.4056, tok/sec: 187146.26, flops:163.91, batch-reuse:1
@ 866 train 4.6915 , allloss: 4.6915, dt: 702.84ms, fracRes: 0.1366, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7632, norm(y): 0.9923, norm:0.4428, tok/sec: 186489.77, flops:163.34, batch-reuse:1
@ 867 train 4.7378 , allloss: 4.7378, dt: 699.40ms, fracRes: 0.1384, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7655, norm(y): 0.9923, norm:0.4785, tok/sec: 187407.26, flops:164.14, batch-reuse:1
@ 868 train 4.7585 , allloss: 4.7585, dt: 694.97ms, fracRes: 0.1390, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7628, norm(y): 0.9923, norm:0.4873, tok/sec: 188600.59, flops:165.19, batch-reuse:1
@ 869 train 4.7525 , allloss: 4.7525, dt: 700.20ms, fracRes: 0.1413, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7688, norm(y): 0.9923, norm:0.5007, tok/sec: 187192.02, flops:163.95, batch-reuse:1
@ 870 train 4.7677 , allloss: 4.7677, dt: 701.82ms, fracRes: 0.1412, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7701, norm(y): 0.9923, norm:0.4453, tok/sec: 186758.83, flops:163.57, batch-reuse:1
@ 871 train 4.7576 , allloss: 4.7576, dt: 699.92ms, fracRes: 0.1433, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7714, norm(y): 0.9923, norm:0.4125, tok/sec: 187267.77, flops:164.02, batch-reuse:1
@ 872 train 4.7337 , allloss: 4.7337, dt: 699.24ms, fracRes: 0.1438, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7713, norm(y): 0.9923, norm:0.5187, tok/sec: 187449.05, flops:164.18, batch-reuse:1
@ 873 train 4.7557 , allloss: 4.7557, dt: 681.07ms, fracRes: 0.1451, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7773, norm(y): 0.9922, norm:0.4927, tok/sec: 192449.15, flops:168.56, batch-reuse:1
@ 874 train 4.6688 , allloss: 4.6688, dt: 690.69ms, fracRes: 0.1413, norm(attn): 0.3398, norm(output): 0.7109, norm(x): 0.7697, norm(y): 0.9923, norm:0.3966, tok/sec: 189768.53, flops:166.21, batch-reuse:1
@ 875 train 4.7178 , allloss: 4.7178, dt: 694.98ms, fracRes: 0.1419, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7683, norm(y): 0.9923, norm:0.4715, tok/sec: 188597.68, flops:165.18, batch-reuse:1
@ 876 train 4.7404 , allloss: 4.7404, dt: 697.68ms, fracRes: 0.1445, norm(attn): 0.3398, norm(output): 0.7070, norm(x): 0.7686, norm(y): 0.9922, norm:0.4357, tok/sec: 187867.47, flops:164.54, batch-reuse:1
@ 877 train 4.7348 , allloss: 4.7348, dt: 684.05ms, fracRes: 0.1470, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7667, norm(y): 0.9922, norm:0.4467, tok/sec: 191612.57, flops:167.82, batch-reuse:1
@ 878 train 4.7316 , allloss: 4.7316, dt: 700.26ms, fracRes: 0.1452, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7643, norm(y): 0.9922, norm:0.4594, tok/sec: 187176.47, flops:163.94, batch-reuse:1
@ 879 train 4.6500 , allloss: 4.6500, dt: 685.79ms, fracRes: 0.1454, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7656, norm(y): 0.9922, norm:0.4413, tok/sec: 191126.74, flops:167.40, batch-reuse:1
@ 880 train 4.7697 , allloss: 4.7697, dt: 694.12ms, fracRes: 0.1458, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7683, norm(y): 0.9922, norm:0.4851, tok/sec: 188832.31, flops:165.39, batch-reuse:1
@ 881 train 4.6129 , allloss: 4.6129, dt: 700.68ms, fracRes: 0.1461, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7721, norm(y): 0.9922, norm:0.5220, tok/sec: 187064.56, flops:163.84, batch-reuse:1
@ 882 train 4.6036 , allloss: 4.6036, dt: 680.74ms, fracRes: 0.1493, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7702, norm(y): 0.9922, norm:0.4903, tok/sec: 192543.98, flops:168.64, batch-reuse:1
@ 883 train 4.6129 , allloss: 4.6129, dt: 695.63ms, fracRes: 0.1505, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7682, norm(y): 0.9922, norm:0.4785, tok/sec: 188421.79, flops:165.03, batch-reuse:1
@ 884 train 4.5902 , allloss: 4.5902, dt: 697.64ms, fracRes: 0.1466, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7695, norm(y): 0.9922, norm:0.4216, tok/sec: 187879.60, flops:164.56, batch-reuse:1
@ 885 train 4.6176 , allloss: 4.6176, dt: 693.77ms, fracRes: 0.1494, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7683, norm(y): 0.9922, norm:0.4557, tok/sec: 188927.51, flops:165.47, batch-reuse:1
@ 886 train 4.6987 , allloss: 4.6987, dt: 695.21ms, fracRes: 0.1507, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7728, norm(y): 0.9922, norm:0.4286, tok/sec: 188535.78, flops:165.13, batch-reuse:1
@ 887 train 4.7063 , allloss: 4.7063, dt: 687.43ms, fracRes: 0.1537, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7716, norm(y): 0.9922, norm:0.4449, tok/sec: 190670.55, flops:167.00, batch-reuse:1
@ 888 train 4.5985 , allloss: 4.5985, dt: 698.57ms, fracRes: 0.1485, norm(attn): 0.3418, norm(output): 0.6953, norm(x): 0.7670, norm(y): 0.9923, norm:0.4572, tok/sec: 187628.56, flops:164.34, batch-reuse:1
@ 889 train 4.6832 , allloss: 4.6832, dt: 705.42ms, fracRes: 0.1447, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7669, norm(y): 0.9924, norm:0.4401, tok/sec: 185807.47, flops:162.74, batch-reuse:1
@ 890 train 4.6243 , allloss: 4.6243, dt: 695.62ms, fracRes: 0.1498, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7715, norm(y): 0.9922, norm:0.4614, tok/sec: 188424.89, flops:165.03, batch-reuse:1
@ 891 train 4.6158 , allloss: 4.6158, dt: 706.11ms, fracRes: 0.1521, norm(attn): 0.3418, norm(output): 0.7070, norm(x): 0.7710, norm(y): 0.9921, norm:0.4250, tok/sec: 185626.47, flops:162.58, batch-reuse:1
@ 892 train 4.6010 , allloss: 4.6010, dt: 712.44ms, fracRes: 0.1482, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7701, norm(y): 0.9922, norm:0.4820, tok/sec: 183976.93, flops:161.14, batch-reuse:1
@ 893 train 4.5818 , allloss: 4.5818, dt: 685.95ms, fracRes: 0.1490, norm(attn): 0.3398, norm(output): 0.6992, norm(x): 0.7680, norm(y): 0.9922, norm:0.4626, tok/sec: 191080.84, flops:167.36, batch-reuse:1
@ 894 train 4.6389 , allloss: 4.6389, dt: 716.27ms, fracRes: 0.1442, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7663, norm(y): 0.9923, norm:0.5273, tok/sec: 182993.61, flops:160.28, batch-reuse:1
@ 895 train 4.6069 , allloss: 4.6069, dt: 713.56ms, fracRes: 0.1474, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7713, norm(y): 0.9923, norm:0.5280, tok/sec: 183687.15, flops:160.88, batch-reuse:1
@ 896 train 4.5779 , allloss: 4.5779, dt: 704.05ms, fracRes: 0.1461, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7710, norm(y): 0.9923, norm:0.5093, tok/sec: 186169.59, flops:163.06, batch-reuse:1
@ 897 train 4.6145 , allloss: 4.6145, dt: 696.25ms, fracRes: 0.1487, norm(attn): 0.3398, norm(output): 0.7070, norm(x): 0.7719, norm(y): 0.9923, norm:0.4994, tok/sec: 188254.29, flops:164.88, batch-reuse:1
@ 898 train 4.6827 , allloss: 4.6827, dt: 689.46ms, fracRes: 0.1498, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7703, norm(y): 0.9922, norm:0.4888, tok/sec: 190106.88, flops:166.51, batch-reuse:1
@ 899 train 4.6511 , allloss: 4.6511, dt: 695.58ms, fracRes: 0.1462, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7629, norm(y): 0.9923, norm:0.4449, tok/sec: 188436.71, flops:165.04, batch-reuse:1
@ 900 train 4.6838 , allloss: 4.6838, dt: 699.29ms, fracRes: 0.1536, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7672, norm(y): 0.9922, norm:0.4915, tok/sec: 187434.73, flops:164.17, batch-reuse:1
@ 901 train 4.6717 , allloss: 4.6717, dt: 692.19ms, fracRes: 0.1526, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7693, norm(y): 0.9922, norm:0.5046, tok/sec: 189357.58, flops:165.85, batch-reuse:1
@ 902 train 4.6322 , allloss: 4.6322, dt: 694.16ms, fracRes: 0.1527, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7714, norm(y): 0.9922, norm:0.4764, tok/sec: 188822.19, flops:165.38, batch-reuse:1
@ 903 train 4.6037 , allloss: 4.6037, dt: 706.92ms, fracRes: 0.1501, norm(attn): 0.3457, norm(output): 0.7031, norm(x): 0.7723, norm(y): 0.9923, norm:0.4641, tok/sec: 185412.99, flops:162.40, batch-reuse:1
@ 904 train 4.5404 , allloss: 4.5404, dt: 712.47ms, fracRes: 0.1452, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7671, norm(y): 0.9923, norm:0.4420, tok/sec: 183968.86, flops:161.13, batch-reuse:1
@ 905 train 4.5783 , allloss: 4.5783, dt: 689.91ms, fracRes: 0.1515, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7707, norm(y): 0.9921, norm:0.4774, tok/sec: 189984.55, flops:166.40, batch-reuse:1
@ 906 train 4.6178 , allloss: 4.6178, dt: 686.86ms, fracRes: 0.1533, norm(attn): 0.3438, norm(output): 0.6992, norm(x): 0.7705, norm(y): 0.9921, norm:0.4851, tok/sec: 190827.54, flops:167.14, batch-reuse:1
@ 907 train 4.4174 , allloss: 4.4174, dt: 694.81ms, fracRes: 0.1505, norm(attn): 0.3418, norm(output): 0.6992, norm(x): 0.7685, norm(y): 0.9921, norm:0.5001, tok/sec: 188644.27, flops:165.23, batch-reuse:1
@ 908 train 4.6373 , allloss: 4.6373, dt: 690.40ms, fracRes: 0.1522, norm(attn): 0.3398, norm(output): 0.7031, norm(x): 0.7689, norm(y): 0.9921, norm:0.4353, tok/sec: 189848.74, flops:166.28, batch-reuse:1
@ 909 train 4.8516 , allloss: 4.8516, dt: 692.81ms, fracRes: 0.1499, norm(attn): 0.3379, norm(output): 0.7031, norm(x): 0.7696, norm(y): 0.9920, norm:0.5704, tok/sec: 189189.46, flops:165.70, batch-reuse:1
@ 910 train 4.6168 , allloss: 4.6168, dt: 695.18ms, fracRes: 0.1500, norm(attn): 0.3418, norm(output): 0.7031, norm(x): 0.7690, norm(y): 0.9921, norm:0.5810, tok/sec: 188544.90, flops:165.14, batch-reuse:1
@ 911 train 4.6111 , allloss: 4.6111, dt: 692.95ms, fracRes: 0.1544, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7748, norm(y): 0.9921, norm:0.5488, tok/sec: 189150.34, flops:165.67, batch-reuse:1
@ 912 train 4.5697 , allloss: 4.5697, dt: 702.17ms, fracRes: 0.1590, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7774, norm(y): 0.9921, norm:0.7566, tok/sec: 186667.77, flops:163.49, batch-reuse:1
@ 913 train 4.5550 , allloss: 4.5550, dt: 697.47ms, fracRes: 0.1539, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7734, norm(y): 0.9921, norm:0.5038, tok/sec: 187924.17, flops:164.59, batch-reuse:1
@ 914 train 4.6232 , allloss: 4.6232, dt: 712.67ms, fracRes: 0.1543, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7738, norm(y): 0.9921, norm:0.5174, tok/sec: 183916.30, flops:161.08, batch-reuse:1
@ 915 train 4.6722 , allloss: 4.6722, dt: 695.69ms, fracRes: 0.1497, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7747, norm(y): 0.9922, norm:0.5071, tok/sec: 188406.42, flops:165.02, batch-reuse:1
@ 916 train 4.5382 , allloss: 4.5382, dt: 691.09ms, fracRes: 0.1437, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7731, norm(y): 0.9922, norm:0.4926, tok/sec: 189661.09, flops:166.12, batch-reuse:1
@ 917 train 4.5896 , allloss: 4.5896, dt: 698.14ms, fracRes: 0.1474, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7757, norm(y): 0.9921, norm:0.4805, tok/sec: 187744.22, flops:164.44, batch-reuse:1
@ 918 train 4.5870 , allloss: 4.5870, dt: 687.14ms, fracRes: 0.1505, norm(attn): 0.3438, norm(output): 0.7070, norm(x): 0.7750, norm(y): 0.9921, norm:0.4786, tok/sec: 190750.40, flops:167.07, batch-reuse:1
@ 919 train 4.5204 , allloss: 4.5204, dt: 692.46ms, fracRes: 0.1490, norm(attn): 0.3457, norm(output): 0.6953, norm(x): 0.7707, norm(y): 0.9922, norm:0.5008, tok/sec: 189285.67, flops:165.79, batch-reuse:1
@ 920 train 4.6362 , allloss: 4.6362, dt: 701.11ms, fracRes: 0.1481, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7705, norm(y): 0.9922, norm:0.4699, tok/sec: 186949.61, flops:163.74, batch-reuse:1
@ 921 train 4.5775 , allloss: 4.5775, dt: 691.75ms, fracRes: 0.1502, norm(attn): 0.3438, norm(output): 0.7031, norm(x): 0.7713, norm(y): 0.9922, norm:0.5259, tok/sec: 189478.78, flops:165.96, batch-reuse:1
@ 922 train 4.5729 , allloss: 4.5729, dt: 704.52ms, fracRes: 0.1532, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7807, norm(y): 0.9922, norm:0.4715, tok/sec: 186043.14, flops:162.95, batch-reuse:1
@ 923 train 4.5695 , allloss: 4.5695, dt: 694.95ms, fracRes: 0.1546, norm(attn): 0.3457, norm(output): 0.6992, norm(x): 0.7746, norm(y): 0.9921, norm:0.5034, tok/sec: 188606.22, flops:165.19, batch-reuse:1
@ 924 train 4.5461 , allloss: 4.5461, dt: 726.95ms, fracRes: 0.1551, norm(attn): 0.3457, norm(output): 0.7070, norm(x): 0.7783, norm(y): 0.9922, norm:0.4910, tok/sec: 180303.20, flops:157.92, batch-reuse:1
@ 925 train 4.5678 , allloss: 4.5678, dt: 709.45ms, fracRes: 0.1533, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7805, norm(y): 0.9923, norm:0.4121, tok/sec: 184751.19, flops:161.82, batch-reuse:1
@ 926 train 4.5713 , allloss: 4.5713, dt: 704.91ms, fracRes: 0.1533, norm(attn): 0.3477, norm(output): 0.7266, norm(x): 0.7845, norm(y): 0.9923, norm:0.4459, tok/sec: 185942.59, flops:162.86, batch-reuse:1
@ 927 train 4.5364 , allloss: 4.5364, dt: 708.37ms, fracRes: 0.1512, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7831, norm(y): 0.9923, norm:0.4186, tok/sec: 185032.69, flops:162.06, batch-reuse:1
@ 928 train 4.7362 , allloss: 4.7362, dt: 692.43ms, fracRes: 0.1518, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7807, norm(y): 0.9922, norm:0.5202, tok/sec: 189291.54, flops:165.79, batch-reuse:1
@ 929 train 4.7443 , allloss: 4.7443, dt: 710.13ms, fracRes: 0.1568, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7868, norm(y): 0.9922, norm:0.5377, tok/sec: 184574.41, flops:161.66, batch-reuse:1
@ 930 train 4.7683 , allloss: 4.7683, dt: 697.65ms, fracRes: 0.1555, norm(attn): 0.3418, norm(output): 0.7188, norm(x): 0.7851, norm(y): 0.9922, norm:0.4779, tok/sec: 187875.30, flops:164.55, batch-reuse:1
@ 931 train 4.8122 , allloss: 4.8122, dt: 701.68ms, fracRes: 0.1600, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7927, norm(y): 0.9921, norm:0.5433, tok/sec: 186796.53, flops:163.61, batch-reuse:1
@ 932 train 4.8186 , allloss: 4.8186, dt: 699.45ms, fracRes: 0.1566, norm(attn): 0.3477, norm(output): 0.7266, norm(x): 0.7877, norm(y): 0.9923, norm:0.4860, tok/sec: 187391.93, flops:164.13, batch-reuse:1
@ 933 train 4.7936 , allloss: 4.7936, dt: 699.61ms, fracRes: 0.1507, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7860, norm(y): 0.9923, norm:0.4900, tok/sec: 187349.14, flops:164.09, batch-reuse:1
@ 934 train 4.7449 , allloss: 4.7449, dt: 694.96ms, fracRes: 0.1477, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7837, norm(y): 0.9923, norm:0.5316, tok/sec: 188603.95, flops:165.19, batch-reuse:1
@ 935 train 4.6606 , allloss: 4.6606, dt: 705.34ms, fracRes: 0.1543, norm(attn): 0.3457, norm(output): 0.7148, norm(x): 0.7864, norm(y): 0.9922, norm:0.5424, tok/sec: 185828.20, flops:162.76, batch-reuse:1
@ 936 train 4.7737 , allloss: 4.7737, dt: 698.41ms, fracRes: 0.1554, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7886, norm(y): 0.9922, norm:0.4903, tok/sec: 187671.22, flops:164.37, batch-reuse:1
@ 937 train 4.7775 , allloss: 4.7775, dt: 709.61ms, fracRes: 0.1553, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7892, norm(y): 0.9922, norm:0.5547, tok/sec: 184709.98, flops:161.78, batch-reuse:1
@ 938 train 4.7461 , allloss: 4.7461, dt: 716.67ms, fracRes: 0.1617, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7895, norm(y): 0.9921, norm:0.4824, tok/sec: 182890.73, flops:160.19, batch-reuse:1
@ 939 train 4.7551 , allloss: 4.7551, dt: 715.96ms, fracRes: 0.1589, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7848, norm(y): 0.9921, norm:0.5294, tok/sec: 183070.45, flops:160.34, batch-reuse:1
@ 940 train 4.7706 , allloss: 4.7706, dt: 712.48ms, fracRes: 0.1589, norm(attn): 0.3457, norm(output): 0.7109, norm(x): 0.7846, norm(y): 0.9922, norm:0.5203, tok/sec: 183964.86, flops:161.13, batch-reuse:1
@ 941 train 4.7670 , allloss: 4.7670, dt: 714.42ms, fracRes: 0.1567, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7849, norm(y): 0.9922, norm:0.5443, tok/sec: 183466.17, flops:160.69, batch-reuse:1
@ 942 train 4.8826 , allloss: 4.8826, dt: 710.77ms, fracRes: 0.1588, norm(attn): 0.3457, norm(output): 0.7148, norm(x): 0.7878, norm(y): 0.9922, norm:0.5200, tok/sec: 184409.29, flops:161.52, batch-reuse:1
@ 943 train 4.6929 , allloss: 4.6929, dt: 712.66ms, fracRes: 0.1567, norm(attn): 0.3477, norm(output): 0.7188, norm(x): 0.7892, norm(y): 0.9922, norm:0.4515, tok/sec: 183919.69, flops:161.09, batch-reuse:1
@ 944 train 4.7635 , allloss: 4.7635, dt: 695.88ms, fracRes: 0.1577, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7912, norm(y): 0.9922, norm:0.4686, tok/sec: 188354.52, flops:164.97, batch-reuse:1
@ 945 train 4.7784 , allloss: 4.7784, dt: 693.14ms, fracRes: 0.1623, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7926, norm(y): 0.9921, norm:0.5871, tok/sec: 189099.40, flops:165.62, batch-reuse:1
@ 946 train 4.7523 , allloss: 4.7523, dt: 694.15ms, fracRes: 0.1605, norm(attn): 0.3477, norm(output): 0.7109, norm(x): 0.7848, norm(y): 0.9921, norm:0.5260, tok/sec: 188824.07, flops:165.38, batch-reuse:1
@ 947 train 4.7687 , allloss: 4.7687, dt: 709.39ms, fracRes: 0.1593, norm(attn): 0.3438, norm(output): 0.7148, norm(x): 0.7865, norm(y): 0.9921, norm:0.5155, tok/sec: 184766.22, flops:161.83, batch-reuse:1
@ 948 train 4.7783 , allloss: 4.7783, dt: 706.31ms, fracRes: 0.1646, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7917, norm(y): 0.9920, norm:0.4987, tok/sec: 185572.46, flops:162.53, batch-reuse:1
@ 949 train 4.7602 , allloss: 4.7602, dt: 693.13ms, fracRes: 0.1648, norm(attn): 0.3477, norm(output): 0.7266, norm(x): 0.7941, norm(y): 0.9921, norm:0.4682, tok/sec: 189101.02, flops:165.63, batch-reuse:1
@ 950 train 4.7255 , allloss: 4.7255, dt: 710.32ms, fracRes: 0.1633, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7905, norm(y): 0.9921, norm:0.4666, tok/sec: 184525.60, flops:161.62, batch-reuse:1
@ 951 train 4.7116 , allloss: 4.7116, dt: 712.48ms, fracRes: 0.1621, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7885, norm(y): 0.9921, norm:0.4937, tok/sec: 183965.79, flops:161.13, batch-reuse:1
@ 952 train 4.6748 , allloss: 4.6748, dt: 699.60ms, fracRes: 0.1632, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7919, norm(y): 0.9920, norm:0.4695, tok/sec: 187353.35, flops:164.09, batch-reuse:1
@ 953 train 4.7151 , allloss: 4.7151, dt: 683.45ms, fracRes: 0.1608, norm(attn): 0.3457, norm(output): 0.7188, norm(x): 0.7878, norm(y): 0.9921, norm:0.4387, tok/sec: 191781.15, flops:167.97, batch-reuse:1
@ 954 train 4.6517 , allloss: 4.6517, dt: 683.39ms, fracRes: 0.1548, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7826, norm(y): 0.9921, norm:0.4638, tok/sec: 191795.73, flops:167.99, batch-reuse:1
@ 955 train 4.7351 , allloss: 4.7351, dt: 703.81ms, fracRes: 0.1552, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7854, norm(y): 0.9921, norm:0.4399, tok/sec: 186232.09, flops:163.11, batch-reuse:1
@ 956 train 4.6906 , allloss: 4.6906, dt: 693.96ms, fracRes: 0.1571, norm(attn): 0.3418, norm(output): 0.7227, norm(x): 0.7870, norm(y): 0.9920, norm:0.4030, tok/sec: 188874.61, flops:165.43, batch-reuse:1
@ 957 train 4.7209 , allloss: 4.7209, dt: 703.02ms, fracRes: 0.1559, norm(attn): 0.3418, norm(output): 0.7266, norm(x): 0.7898, norm(y): 0.9921, norm:0.4082, tok/sec: 186440.38, flops:163.29, batch-reuse:1
@ 958 train 4.7189 , allloss: 4.7189, dt: 702.46ms, fracRes: 0.1596, norm(attn): 0.3418, norm(output): 0.7305, norm(x): 0.7920, norm(y): 0.9920, norm:0.4633, tok/sec: 186588.70, flops:163.42, batch-reuse:1
@ 959 train 4.6044 , allloss: 4.6044, dt: 689.44ms, fracRes: 0.1593, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7877, norm(y): 0.9921, norm:0.5663, tok/sec: 190112.86, flops:166.51, batch-reuse:1
@ 960 train 4.7380 , allloss: 4.7380, dt: 708.17ms, fracRes: 0.1584, norm(attn): 0.3438, norm(output): 0.7188, norm(x): 0.7867, norm(y): 0.9920, norm:0.5657, tok/sec: 185086.64, flops:162.11, batch-reuse:1
@ 961 train 4.6565 , allloss: 4.6565, dt: 708.47ms, fracRes: 0.1653, norm(attn): 0.3438, norm(output): 0.7148, norm(x): 0.7894, norm(y): 0.9919, norm:0.4955, tok/sec: 185006.10, flops:162.04, batch-reuse:1
@ 962 train 4.7873 , allloss: 4.7873, dt: 707.52ms, fracRes: 0.1662, norm(attn): 0.3438, norm(output): 0.7109, norm(x): 0.7848, norm(y): 0.9919, norm:0.5935, tok/sec: 185254.66, flops:162.26, batch-reuse:1
@ 963 train 4.7505 , allloss: 4.7505, dt: 682.44ms, fracRes: 0.1625, norm(attn): 0.3418, norm(output): 0.7227, norm(x): 0.7916, norm(y): 0.9920, norm:0.4929, tok/sec: 192064.43, flops:168.22, batch-reuse:1
@ 964 train 4.7734 , allloss: 4.7734, dt: 684.11ms, fracRes: 0.1598, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7905, norm(y): 0.9921, norm:0.4870, tok/sec: 191596.07, flops:167.81, batch-reuse:1
@ 965 train 4.7550 , allloss: 4.7550, dt: 685.99ms, fracRes: 0.1596, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.7924, norm(y): 0.9921, norm:0.5424, tok/sec: 191069.08, flops:167.35, batch-reuse:1
@ 966 train 4.6926 , allloss: 4.6926, dt: 690.44ms, fracRes: 0.1618, norm(attn): 0.3496, norm(output): 0.7266, norm(x): 0.7933, norm(y): 0.9921, norm:0.4963, tok/sec: 189837.59, flops:166.27, batch-reuse:1
@ 967 train 4.5215 , allloss: 4.5215, dt: 706.89ms, fracRes: 0.1566, norm(attn): 0.3555, norm(output): 0.7305, norm(x): 0.7928, norm(y): 0.9920, norm:0.7979, tok/sec: 185420.68, flops:162.40, batch-reuse:1
@ 968 train 4.8920 , allloss: 4.8920, dt: 691.47ms, fracRes: 0.1549, norm(attn): 0.3477, norm(output): 0.7266, norm(x): 0.7868, norm(y): 0.9921, norm:0.7724, tok/sec: 189555.28, flops:166.02, batch-reuse:1
@ 969 train 4.7430 , allloss: 4.7430, dt: 707.28ms, fracRes: 0.1607, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.7987, norm(y): 0.9920, norm:0.7411, tok/sec: 185319.05, flops:162.31, batch-reuse:1
@ 970 train 4.7235 , allloss: 4.7235, dt: 708.95ms, fracRes: 0.1650, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.7987, norm(y): 0.9921, norm:0.6225, tok/sec: 184880.68, flops:161.93, batch-reuse:1
@ 971 train 4.7751 , allloss: 4.7751, dt: 709.65ms, fracRes: 0.1658, norm(attn): 0.3516, norm(output): 0.7344, norm(x): 0.8004, norm(y): 0.9921, norm:0.5904, tok/sec: 184700.17, flops:161.77, batch-reuse:1
@ 972 train 4.7592 , allloss: 4.7592, dt: 704.00ms, fracRes: 0.1670, norm(attn): 0.3535, norm(output): 0.7305, norm(x): 0.8001, norm(y): 0.9920, norm:0.6140, tok/sec: 186182.70, flops:163.07, batch-reuse:1
@ 973 train 4.7556 , allloss: 4.7556, dt: 708.59ms, fracRes: 0.1699, norm(attn): 0.3438, norm(output): 0.7305, norm(x): 0.8022, norm(y): 0.9919, norm:0.5154, tok/sec: 184975.23, flops:162.01, batch-reuse:1
@ 974 train 4.7269 , allloss: 4.7269, dt: 714.82ms, fracRes: 0.1618, norm(attn): 0.3477, norm(output): 0.7383, norm(x): 0.7993, norm(y): 0.9920, norm:0.5274, tok/sec: 183364.71, flops:160.60, batch-reuse:1
@ 975 train 4.7345 , allloss: 4.7345, dt: 686.08ms, fracRes: 0.1633, norm(attn): 0.3457, norm(output): 0.7344, norm(x): 0.7959, norm(y): 0.9920, norm:0.5533, tok/sec: 191045.05, flops:167.33, batch-reuse:1
@ 976 train 4.6808 , allloss: 4.6808, dt: 709.26ms, fracRes: 0.1671, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7931, norm(y): 0.9920, norm:0.4648, tok/sec: 184802.24, flops:161.86, batch-reuse:1
@ 977 train 4.7236 , allloss: 4.7236, dt: 704.19ms, fracRes: 0.1688, norm(attn): 0.3477, norm(output): 0.7227, norm(x): 0.7985, norm(y): 0.9919, norm:0.4726, tok/sec: 186131.01, flops:163.02, batch-reuse:1
@ 978 train 4.7127 , allloss: 4.7127, dt: 705.91ms, fracRes: 0.1653, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7965, norm(y): 0.9920, norm:0.4887, tok/sec: 185678.82, flops:162.63, batch-reuse:1
@ 979 train 4.6210 , allloss: 4.6210, dt: 712.28ms, fracRes: 0.1654, norm(attn): 0.3457, norm(output): 0.7227, norm(x): 0.7948, norm(y): 0.9920, norm:0.4450, tok/sec: 184017.20, flops:161.17, batch-reuse:1
@ 980 train 4.6199 , allloss: 4.6199, dt: 696.35ms, fracRes: 0.1639, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.7970, norm(y): 0.9920, norm:0.4498, tok/sec: 188226.58, flops:164.86, batch-reuse:1
@ 981 train 4.5967 , allloss: 4.5967, dt: 690.01ms, fracRes: 0.1658, norm(attn): 0.3496, norm(output): 0.7383, norm(x): 0.8017, norm(y): 0.9920, norm:0.5047, tok/sec: 189956.52, flops:166.37, batch-reuse:1
@ 982 train 4.6119 , allloss: 4.6119, dt: 703.16ms, fracRes: 0.1653, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.7980, norm(y): 0.9920, norm:0.3886, tok/sec: 186403.52, flops:163.26, batch-reuse:1
@ 983 train 4.6740 , allloss: 4.6740, dt: 702.69ms, fracRes: 0.1689, norm(attn): 0.3496, norm(output): 0.7266, norm(x): 0.7994, norm(y): 0.9919, norm:0.5117, tok/sec: 186528.69, flops:163.37, batch-reuse:1
@ 984 train 4.6321 , allloss: 4.6321, dt: 692.00ms, fracRes: 0.1607, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7912, norm(y): 0.9920, norm:0.4797, tok/sec: 189410.69, flops:165.90, batch-reuse:1
@ 985 train 4.6592 , allloss: 4.6592, dt: 708.09ms, fracRes: 0.1641, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.7950, norm(y): 0.9920, norm:0.4776, tok/sec: 185107.46, flops:162.13, batch-reuse:1
@ 986 train 4.6676 , allloss: 4.6676, dt: 695.96ms, fracRes: 0.1725, norm(attn): 0.3516, norm(output): 0.7305, norm(x): 0.8031, norm(y): 0.9919, norm:0.5258, tok/sec: 188332.46, flops:164.95, batch-reuse:1
@ 987 train 4.6054 , allloss: 4.6054, dt: 694.89ms, fracRes: 0.1703, norm(attn): 0.3555, norm(output): 0.7305, norm(x): 0.8018, norm(y): 0.9920, norm:0.4823, tok/sec: 188623.75, flops:165.21, batch-reuse:1
@ 988 train 4.7275 , allloss: 4.7275, dt: 715.07ms, fracRes: 0.1688, norm(attn): 0.3516, norm(output): 0.7305, norm(x): 0.8034, norm(y): 0.9920, norm:0.4744, tok/sec: 183300.21, flops:160.54, batch-reuse:1
@ 989 train 4.7252 , allloss: 4.7252, dt: 697.06ms, fracRes: 0.1627, norm(attn): 0.3477, norm(output): 0.7422, norm(x): 0.8058, norm(y): 0.9921, norm:0.4285, tok/sec: 188034.86, flops:164.69, batch-reuse:1
@ 990 train 4.6724 , allloss: 4.6724, dt: 705.70ms, fracRes: 0.1642, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8051, norm(y): 0.9921, norm:0.4707, tok/sec: 185734.09, flops:162.68, batch-reuse:1
@ 991 train 4.6413 , allloss: 4.6413, dt: 692.90ms, fracRes: 0.1653, norm(attn): 0.3516, norm(output): 0.7305, norm(x): 0.8035, norm(y): 0.9921, norm:0.5056, tok/sec: 189164.79, flops:165.68, batch-reuse:1
@ 992 train 4.6991 , allloss: 4.6991, dt: 699.89ms, fracRes: 0.1684, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.8018, norm(y): 0.9920, norm:0.5021, tok/sec: 187276.38, flops:164.03, batch-reuse:1
@ 993 train 4.5708 , allloss: 4.5708, dt: 689.98ms, fracRes: 0.1714, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.8014, norm(y): 0.9919, norm:0.4712, tok/sec: 189963.61, flops:166.38, batch-reuse:1
@ 994 train 4.6297 , allloss: 4.6297, dt: 685.43ms, fracRes: 0.1674, norm(attn): 0.3438, norm(output): 0.7266, norm(x): 0.7986, norm(y): 0.9919, norm:0.5195, tok/sec: 191225.20, flops:167.49, batch-reuse:1
@ 995 train 4.5879 , allloss: 4.5879, dt: 691.52ms, fracRes: 0.1638, norm(attn): 0.3457, norm(output): 0.7266, norm(x): 0.7971, norm(y): 0.9919, norm:0.4940, tok/sec: 189541.49, flops:166.01, batch-reuse:1
@ 996 train 4.4775 , allloss: 4.4775, dt: 690.05ms, fracRes: 0.1638, norm(attn): 0.3516, norm(output): 0.7383, norm(x): 0.8007, norm(y): 0.9920, norm:0.5352, tok/sec: 189944.31, flops:166.36, batch-reuse:1
@ 997 train 4.6472 , allloss: 4.6472, dt: 688.13ms, fracRes: 0.1656, norm(attn): 0.3496, norm(output): 0.7305, norm(x): 0.8028, norm(y): 0.9920, norm:0.6988, tok/sec: 190475.66, flops:166.83, batch-reuse:1
@ 998 train 4.8025 , allloss: 4.8025, dt: 700.62ms, fracRes: 0.1718, norm(attn): 0.3457, norm(output): 0.7383, norm(x): 0.8074, norm(y): 0.9918, norm:0.5723, tok/sec: 187078.76, flops:163.85, batch-reuse:1
@ 999 train 4.5927 , allloss: 4.5927, dt: 701.19ms, fracRes: 0.1712, norm(attn): 0.3516, norm(output): 0.7383, norm(x): 0.8068, norm(y): 0.9920, norm:0.4690, tok/sec: 186928.51, flops:163.72, batch-reuse:1
@ 1000 train 4.5680 , allloss: 4.5680, dt: 684.64ms, fracRes: 0.1694, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8126, norm(y): 0.9920, norm:0.5527, tok/sec: 191446.82, flops:167.68, batch-reuse:1
@ 1001 train 4.7123 , allloss: 4.7123, dt: 692.12ms, fracRes: 0.1649, norm(attn): 0.3613, norm(output): 0.7383, norm(x): 0.8065, norm(y): 0.9920, norm:0.4827, tok/sec: 189378.20, flops:165.87, batch-reuse:1
@ 1002 train 4.6733 , allloss: 4.6733, dt: 692.60ms, fracRes: 0.1707, norm(attn): 0.3477, norm(output): 0.7188, norm(x): 0.8004, norm(y): 0.9919, norm:0.4614, tok/sec: 189245.21, flops:165.75, batch-reuse:1
@ 1003 train 4.6683 , allloss: 4.6683, dt: 700.95ms, fracRes: 0.1761, norm(attn): 0.3496, norm(output): 0.7305, norm(x): 0.8037, norm(y): 0.9918, norm:0.4563, tok/sec: 186990.76, flops:163.78, batch-reuse:1
@ 1004 train 4.5943 , allloss: 4.5943, dt: 698.47ms, fracRes: 0.1727, norm(attn): 0.3535, norm(output): 0.7344, norm(x): 0.8045, norm(y): 0.9918, norm:0.4590, tok/sec: 187654.69, flops:164.36, batch-reuse:1
@ 1005 train 4.6523 , allloss: 4.6523, dt: 692.84ms, fracRes: 0.1713, norm(attn): 0.3516, norm(output): 0.7383, norm(x): 0.8068, norm(y): 0.9919, norm:0.5056, tok/sec: 189181.91, flops:165.70, batch-reuse:1
@ 1006 train 4.6731 , allloss: 4.6731, dt: 705.15ms, fracRes: 0.1699, norm(attn): 0.3555, norm(output): 0.7383, norm(x): 0.8064, norm(y): 0.9919, norm:0.4450, tok/sec: 185877.90, flops:162.80, batch-reuse:1
@ 1007 train 4.6435 , allloss: 4.6435, dt: 705.81ms, fracRes: 0.1718, norm(attn): 0.3535, norm(output): 0.7344, norm(x): 0.8065, norm(y): 0.9919, norm:0.4806, tok/sec: 185703.16, flops:162.65, batch-reuse:1
@ 1008 train 4.6302 , allloss: 4.6302, dt: 694.39ms, fracRes: 0.1720, norm(attn): 0.3477, norm(output): 0.7461, norm(x): 0.8134, norm(y): 0.9919, norm:0.4677, tok/sec: 188757.17, flops:165.32, batch-reuse:1
@ 1009 train 4.5952 , allloss: 4.5952, dt: 703.02ms, fracRes: 0.1661, norm(attn): 0.3555, norm(output): 0.7461, norm(x): 0.8140, norm(y): 0.9920, norm:0.4871, tok/sec: 186441.77, flops:163.30, batch-reuse:1
@ 1010 train 4.6420 , allloss: 4.6420, dt: 701.28ms, fracRes: 0.1700, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8111, norm(y): 0.9920, norm:0.4765, tok/sec: 186904.74, flops:163.70, batch-reuse:1
@ 1011 train 4.6053 , allloss: 4.6053, dt: 700.55ms, fracRes: 0.1753, norm(attn): 0.3555, norm(output): 0.7383, norm(x): 0.8102, norm(y): 0.9919, norm:0.5048, tok/sec: 187097.99, flops:163.87, batch-reuse:1
@ 1012 train 4.6049 , allloss: 4.6049, dt: 699.54ms, fracRes: 0.1780, norm(attn): 0.3477, norm(output): 0.7461, norm(x): 0.8127, norm(y): 0.9918, norm:0.5060, tok/sec: 187367.85, flops:164.11, batch-reuse:1
@ 1013 train 4.6527 , allloss: 4.6527, dt: 690.04ms, fracRes: 0.1745, norm(attn): 0.3574, norm(output): 0.7305, norm(x): 0.8051, norm(y): 0.9919, norm:0.5230, tok/sec: 189949.43, flops:166.37, batch-reuse:1
@ 1014 train 4.6381 , allloss: 4.6381, dt: 707.05ms, fracRes: 0.1741, norm(attn): 0.3516, norm(output): 0.7344, norm(x): 0.8038, norm(y): 0.9919, norm:0.4827, tok/sec: 185379.48, flops:162.37, batch-reuse:1
@ 1015 train 4.6763 , allloss: 4.6763, dt: 711.96ms, fracRes: 0.1696, norm(attn): 0.3496, norm(output): 0.7344, norm(x): 0.8031, norm(y): 0.9919, norm:0.4975, tok/sec: 184099.41, flops:161.24, batch-reuse:1
@ 1016 train 4.7649 , allloss: 4.7649, dt: 691.83ms, fracRes: 0.1711, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.8017, norm(y): 0.9919, norm:0.4743, tok/sec: 189457.49, flops:165.94, batch-reuse:1
@ 1017 train 4.6038 , allloss: 4.6038, dt: 701.42ms, fracRes: 0.1691, norm(attn): 0.3516, norm(output): 0.7305, norm(x): 0.8019, norm(y): 0.9920, norm:0.4268, tok/sec: 186865.73, flops:163.67, batch-reuse:1
@ 1018 train 4.6944 , allloss: 4.6944, dt: 698.14ms, fracRes: 0.1701, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8061, norm(y): 0.9919, norm:0.4471, tok/sec: 187745.76, flops:164.44, batch-reuse:1
@ 1019 train 4.6110 , allloss: 4.6110, dt: 697.31ms, fracRes: 0.1680, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8057, norm(y): 0.9919, norm:0.4655, tok/sec: 187968.38, flops:164.63, batch-reuse:1
@ 1020 train 4.5702 , allloss: 4.5702, dt: 688.52ms, fracRes: 0.1746, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.8089, norm(y): 0.9919, norm:0.4671, tok/sec: 190367.10, flops:166.73, batch-reuse:1
@ 1021 train 4.5604 , allloss: 4.5604, dt: 705.62ms, fracRes: 0.1778, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.8113, norm(y): 0.9918, norm:0.4799, tok/sec: 185754.30, flops:162.69, batch-reuse:1
@ 1022 train 4.4867 , allloss: 4.4867, dt: 698.97ms, fracRes: 0.1713, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.8025, norm(y): 0.9919, norm:0.4066, tok/sec: 187521.43, flops:164.24, batch-reuse:1
@ 1023 train 4.5239 , allloss: 4.5239, dt: 692.43ms, fracRes: 0.1701, norm(attn): 0.3516, norm(output): 0.7383, norm(x): 0.8058, norm(y): 0.9920, norm:0.5360, tok/sec: 189293.95, flops:165.79, batch-reuse:1
@ 1024 train 4.5376 , allloss: 4.5376, dt: 691.65ms, fracRes: 0.1681, norm(attn): 0.3457, norm(output): 0.7422, norm(x): 0.8065, norm(y): 0.9920, norm:0.4992, tok/sec: 189507.58, flops:165.98, batch-reuse:1
@ 1025 train 4.5797 , allloss: 4.5797, dt: 704.97ms, fracRes: 0.1744, norm(attn): 0.3516, norm(output): 0.7344, norm(x): 0.8072, norm(y): 0.9919, norm:0.5444, tok/sec: 185926.05, flops:162.84, batch-reuse:1
@ 1026 train 4.5735 , allloss: 4.5735, dt: 707.00ms, fracRes: 0.1798, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.8121, norm(y): 0.9918, norm:0.5470, tok/sec: 185390.79, flops:162.38, batch-reuse:1
@ 1027 train 4.5941 , allloss: 4.5941, dt: 702.25ms, fracRes: 0.1765, norm(attn): 0.3496, norm(output): 0.7344, norm(x): 0.8108, norm(y): 0.9918, norm:0.6182, tok/sec: 186645.34, flops:163.47, batch-reuse:1
@ 1028 train 4.6006 , allloss: 4.6006, dt: 710.03ms, fracRes: 0.1657, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.7975, norm(y): 0.9920, norm:0.5876, tok/sec: 184601.62, flops:161.68, batch-reuse:1
@ 1029 train 4.5902 , allloss: 4.5902, dt: 712.18ms, fracRes: 0.1708, norm(attn): 0.3477, norm(output): 0.7266, norm(x): 0.8010, norm(y): 0.9918, norm:0.5779, tok/sec: 184044.31, flops:161.20, batch-reuse:1
@ 1030 train 4.5098 , allloss: 4.5098, dt: 714.82ms, fracRes: 0.1771, norm(attn): 0.3477, norm(output): 0.7305, norm(x): 0.8045, norm(y): 0.9917, norm:0.5116, tok/sec: 183363.12, flops:160.60, batch-reuse:1
@ 1031 train 4.5991 , allloss: 4.5991, dt: 692.66ms, fracRes: 0.1694, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.8042, norm(y): 0.9919, norm:0.4898, tok/sec: 189228.86, flops:165.74, batch-reuse:1
@ 1032 train 4.5227 , allloss: 4.5227, dt: 705.91ms, fracRes: 0.1672, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8049, norm(y): 0.9920, norm:0.4289, tok/sec: 185677.44, flops:162.63, batch-reuse:1
@ 1033 train 4.5650 , allloss: 4.5650, dt: 696.17ms, fracRes: 0.1720, norm(attn): 0.3516, norm(output): 0.7461, norm(x): 0.8113, norm(y): 0.9919, norm:0.4082, tok/sec: 188274.60, flops:164.90, batch-reuse:1
@ 1034 train 4.5422 , allloss: 4.5422, dt: 711.05ms, fracRes: 0.1785, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8154, norm(y): 0.9917, norm:0.5031, tok/sec: 184337.01, flops:161.45, batch-reuse:1
@ 1035 train 4.5494 , allloss: 4.5494, dt: 708.54ms, fracRes: 0.1777, norm(attn): 0.3535, norm(output): 0.7461, norm(x): 0.8145, norm(y): 0.9918, norm:0.5672, tok/sec: 184989.36, flops:162.02, batch-reuse:1
@ 1036 train 4.5791 , allloss: 4.5791, dt: 711.82ms, fracRes: 0.1771, norm(attn): 0.3594, norm(output): 0.7383, norm(x): 0.8097, norm(y): 0.9918, norm:0.5650, tok/sec: 184135.67, flops:161.28, batch-reuse:1
@ 1037 train 4.5564 , allloss: 4.5564, dt: 709.02ms, fracRes: 0.1727, norm(attn): 0.3496, norm(output): 0.7266, norm(x): 0.8014, norm(y): 0.9919, norm:0.5574, tok/sec: 184862.52, flops:161.91, batch-reuse:1
@ 1038 train 4.5338 , allloss: 4.5338, dt: 676.37ms, fracRes: 0.1754, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8055, norm(y): 0.9918, norm:0.5041, tok/sec: 193788.27, flops:169.73, batch-reuse:1
@ 1039 train 4.5683 , allloss: 4.5683, dt: 693.88ms, fracRes: 0.1751, norm(attn): 0.3555, norm(output): 0.7344, norm(x): 0.8043, norm(y): 0.9918, norm:0.4393, tok/sec: 188898.10, flops:165.45, batch-reuse:1
@ 1040 train 4.4970 , allloss: 4.4970, dt: 697.46ms, fracRes: 0.1749, norm(attn): 0.3555, norm(output): 0.7266, norm(x): 0.7979, norm(y): 0.9919, norm:0.5191, tok/sec: 187928.93, flops:164.60, batch-reuse:1
@ 1041 train 4.5964 , allloss: 4.5964, dt: 694.56ms, fracRes: 0.1785, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8074, norm(y): 0.9917, norm:0.6166, tok/sec: 188712.59, flops:165.28, batch-reuse:1
@ 1042 train 4.5025 , allloss: 4.5025, dt: 684.97ms, fracRes: 0.1761, norm(attn): 0.3496, norm(output): 0.7461, norm(x): 0.8109, norm(y): 0.9917, norm:0.5238, tok/sec: 191353.26, flops:167.60, batch-reuse:1
@ 1043 train 4.5718 , allloss: 4.5718, dt: 685.28ms, fracRes: 0.1763, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8154, norm(y): 0.9917, norm:0.4692, tok/sec: 191267.25, flops:167.52, batch-reuse:1
@ 1044 train 4.5307 , allloss: 4.5307, dt: 690.77ms, fracRes: 0.1776, norm(attn): 0.3516, norm(output): 0.7344, norm(x): 0.8101, norm(y): 0.9917, norm:0.4966, tok/sec: 189748.61, flops:166.19, batch-reuse:1
@ 1045 train 4.5735 , allloss: 4.5735, dt: 693.02ms, fracRes: 0.1775, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.8057, norm(y): 0.9918, norm:0.5038, tok/sec: 189131.92, flops:165.65, batch-reuse:1
@ 1046 train 4.6054 , allloss: 4.6054, dt: 692.46ms, fracRes: 0.1769, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.8059, norm(y): 0.9918, norm:0.5222, tok/sec: 189283.26, flops:165.78, batch-reuse:1
@ 1047 train 4.4796 , allloss: 4.4796, dt: 703.88ms, fracRes: 0.1787, norm(attn): 0.3477, norm(output): 0.7383, norm(x): 0.8098, norm(y): 0.9917, norm:0.4426, tok/sec: 186214.11, flops:163.10, batch-reuse:1
@ 1048 train 4.5183 , allloss: 4.5183, dt: 694.04ms, fracRes: 0.1810, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.8108, norm(y): 0.9917, norm:0.4690, tok/sec: 188854.24, flops:165.41, batch-reuse:1
@ 1049 train 4.4736 , allloss: 4.4736, dt: 704.53ms, fracRes: 0.1792, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8156, norm(y): 0.9917, norm:0.3962, tok/sec: 186042.26, flops:162.95, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.2354, 0.5352, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0059, 0.0649, 0.0781, 0.8516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0254, 0.1924, 0.3066, 0.1699, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.2539, 0.0991, 0.0087, 0.0483, 0.0566, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.2334, 0.2285, 0.0613, 0.0688, 0.0898, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7227, 0.0635, 0.0306, 0.0035, 0.0106, 0.0175, 0.1118, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1934, 0.0234, 0.0114, 0.0859, 0.3086, 0.1738, 0.0569, 0.0815, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.0708, 0.1309, 0.0339, 0.0615, 0.0728, 0.1279, 0.0957, 0.0669, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0356, 0.2412, 0.0586, 0.0164, 0.0874, 0.3359, 0.0295, 0.1011, 0.0427, 0.0449, 0.0066, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.0369, 0.0806, 0.1865, 0.0452, 0.0200, 0.0674, 0.0610, 0.0334, 0.0435, 0.2891, 0.0299, 0.0000, 0.0000, 0.0000],
        [0.7852, 0.0302, 0.0067, 0.0012, 0.0028, 0.0013, 0.0728, 0.0055, 0.0110, 0.0039, 0.0063, 0.0069, 0.0654, 0.0000, 0.0000],
        [0.1006, 0.1875, 0.0116, 0.0042, 0.0476, 0.2197, 0.1943, 0.0413, 0.0444, 0.0179, 0.0050, 0.0254, 0.0737, 0.0261, 0.0000],
        [0.0157, 0.1406, 0.0635, 0.0688, 0.1445, 0.0186, 0.0874, 0.0222, 0.0400, 0.0281, 0.0840, 0.0317, 0.0398, 0.0762, 0.1387]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0066,     -0.9375,     -0.9844,     -1.5391,     -1.4766,     -1.3672,     -0.8203,     -0.9336,     -1.3359,     -1.2891,     -1.5625,     -1.1172,     -0.2910,     -1.3984,     -1.0234],
        [    -0.0093,     -1.2188,     -0.3262,     -1.4688,     -0.7617,      0.2324,      0.2471,     -0.7227,     -1.0078,     -0.8359,     -1.3672,     -0.8906,      0.4102,     -0.6523,     -0.5977],
        [    -0.0030,      0.0315,      0.8516,      0.1592,     -1.0391,     -1.6250,     -0.4375,     -1.0078,     -1.3125,     -1.1406,      0.7773,     -0.9258,     -0.6289,     -0.8242,     -0.8984],
        [     0.0192,      2.4062,      2.5938,      5.0000,      5.7188,      3.7812,      2.7812,      2.9844,      4.4062,      3.8125,      6.3125,      3.6875,      1.0000,      5.0625,      2.0156],
        [    -0.0197,      2.0000,      2.4688,      1.8828,      2.4688,      3.6875,      2.7656,      2.1094,      1.9922,      2.2188,      2.1406,      2.0312,      0.1602,      1.9844,      1.0391],
        [    -0.0339,     -0.7812,     -1.7188,     -4.1562,     -2.4375,     -2.2812,     -0.0125,     -1.6406,     -2.0156,     -2.4219,     -3.1562,     -2.2344,     -1.8047,     -2.3125,     -2.5781],
        [    -0.0276,      0.9180,      0.9023,     -0.4180,     -0.2969,     -0.0356,      0.8984,     -0.9141,     -0.5352,     -1.0312,     -0.8867,     -0.6797,     -0.4297,     -0.2031,     -0.9414],
        [    -0.0153,     -2.4531,     -3.1719,     -5.3438,     -4.2500,     -3.7344,     -1.8828,     -2.9531,     -3.1406,     -3.4688,     -3.3906,     -3.8281,     -1.8906,     -3.5469,     -3.4844],
        [    -0.0182,      1.0781,     -1.0312,     -1.7500,      0.2676,      1.5469,      0.9727,     -0.1455,      0.2168,     -1.0312,     -1.5938,     -0.3184,      0.0334,     -0.0669,     -0.6680],
        [     0.0004,     -0.9492,     -0.3281,     -1.6797,     -1.0859,     -0.9180,     -0.3516,     -0.6445,     -1.0000,     -0.1533,     -1.3125,     -0.7930,     -0.7969,     -1.0312,     -0.3945],
        [    -0.0291,      1.8828,      0.4707,     -0.8086,      0.8711,      2.2188,     -0.2148,      1.0156,      0.1533,      0.2070,     -1.7109,      1.0625,      0.8438,     -0.0723,      0.7461],
        [    -0.0015,     -1.0547,     -0.2695,      0.5703,     -0.8516,     -1.6641,     -0.4531,     -0.5508,     -1.1484,     -0.8867,      1.0078,     -1.2656,      0.3398,     -1.2109,     -0.6758],
        [    -0.0090,     -3.2656,     -4.7812,     -6.4688,     -5.6562,     -6.4062,     -2.3906,     -4.9688,     -4.2812,     -5.3125,     -4.8438,     -4.7500,     -2.5000,     -4.6875,     -3.8438],
        [    -0.0209,      0.6016,     -2.1875,     -3.2031,     -0.7656,      0.7578,      0.6406,     -0.9141,     -0.8398,     -1.7422,     -3.0312,     -1.3984,     -0.3340,     -1.3672,     -1.9297],
        [    -0.0018,      2.1875,      1.3906,      1.4688,      2.2188,      0.1562,      1.7109,      0.3398,      0.9258,      0.5742,      1.6641,      0.6992,      0.9258,      1.5703,      2.1719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4586],
        [0.1734],
        [0.1981],
        [0.2313],
        [0.2733],
        [0.1594],
        [0.1706],
        [0.1405],
        [0.1029],
        [0.2114],
        [0.0676],
        [0.1444],
        [0.1092],
        [0.0464]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0008,     0.0021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0009,     0.0120,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0072,     0.0017,     0.0010,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0021,     0.0011,     0.0004,     0.0001,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0024,     0.0075,     0.0009,     0.0004,     0.0003,     0.0077,     0.1064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0009,     0.0171,     0.0016,     0.0008,     0.0001,     0.0056,     0.0688,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3672,     0.0047,     0.0093,     0.0151,     0.0002,     0.0004,     0.0062,     0.5391,     0.0008,     0.0576,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0081,     0.0206,     0.0036,     0.0004,     0.0004,     0.0012,     0.1206,     0.0011,     0.0383,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4102,     0.0035,     0.0156,     0.0503,     0.0009,     0.0011,     0.0058,     0.2754,     0.0023,     0.0118,     0.0003,     0.2227,     0.0000,     0.0000,     0.0000],
        [    0.1001,     0.0050,     0.0294,     0.0007,     0.0002,     0.0003,     0.0474,     0.0688,     0.0065,     0.0238,     0.0001,     0.0752,     0.6445,     0.0000,     0.0000],
        [    0.1885,     0.0008,     0.0239,     0.0014,     0.0011,     0.0002,     0.0121,     0.0874,     0.0021,     0.1245,     0.0000,     0.0342,     0.5195,     0.0019,     0.0000],
        [    0.8594,     0.0018,     0.0305,     0.0036,     0.0002,     0.0001,     0.0003,     0.0035,     0.0000,     0.0028,     0.0000,     0.0201,     0.0527,     0.0000,     0.0251]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0015,     -0.0486,     -0.0157,     -0.0693,     -0.1455,     -0.1064,     -0.0776,     -0.0028,     -0.1216,     -0.0562,     -0.2031,     -0.0096,      0.0179,     -0.1367,     -0.0493],
        [     0.0280,     -7.5625,     -8.8125,    -10.8750,    -12.3125,    -12.9375,    -11.2500,     -9.0000,    -10.4375,     -9.5625,    -16.8750,     -7.8438,     -8.0625,    -11.1875,     -6.2812],
        [     0.0240,     -8.6875,    -10.3125,     -6.9375,    -11.4375,    -13.9375,    -10.7500,     -9.4375,     -9.8750,     -9.9375,    -14.7500,     -8.3125,     -6.2500,    -10.0625,     -6.6250],
        [     0.0266,     -7.0312,     -7.0625,     -6.1250,     -7.8750,     -9.3750,     -7.4375,     -5.8125,     -6.8750,     -6.1562,     -9.4375,     -6.0312,     -4.1250,     -7.6875,     -4.4688],
        [     0.0889,     -6.9688,     -4.3125,     -7.4688,     -9.8750,     -8.8750,     -7.5938,     -3.2500,     -9.7500,     -3.7344,    -12.5625,     -4.2500,     -2.5156,    -10.5625,     -4.6562],
        [    -0.0103,     -4.9375,     -6.3750,     -6.9375,     -7.8750,     -8.0000,     -4.4062,     -4.0312,     -3.0625,     -4.8125,     -9.8125,     -3.7031,     -2.8906,     -3.6406,     -2.4531],
        [     0.0225,     -6.1250,     -6.7812,     -7.7188,     -9.7500,    -10.1875,     -7.5000,     -5.4688,     -7.4375,     -7.9375,    -11.8125,     -5.4375,     -4.0312,     -7.6562,     -3.7812],
        [     0.0371,     -5.8438,     -4.7188,     -6.9062,     -7.6875,     -8.1250,     -4.6875,     -2.0625,     -5.3125,     -3.7656,     -9.3750,     -3.3438,     -0.3301,     -5.3750,     -1.6953],
        [     0.0771,     -6.8125,     -3.8906,     -6.2188,     -6.9688,     -8.7500,     -5.0000,     -2.5000,     -6.3438,     -2.5312,    -11.1875,     -3.4531,     -0.6797,     -6.8125,     -2.9375],
        [     0.0742,     -4.2812,     -3.5938,     -3.1094,     -7.6875,     -6.7500,     -4.0000,      0.4590,     -6.0000,     -1.7734,     -7.4062,     -1.6953,      0.7109,     -5.7500,     -2.6875],
        [     0.0488,     -4.5625,     -3.6094,     -5.3438,     -7.6562,     -7.4375,     -6.4375,     -1.8516,     -6.5312,     -3.0000,     -8.6250,     -2.4844,     -1.1953,     -7.0312,     -2.1250],
        [     0.0598,     -4.6875,     -3.2188,     -2.0469,     -6.1250,     -5.8438,     -4.1875,     -0.3359,     -5.0938,     -3.4844,     -7.2188,     -0.5547,      2.1875,     -5.1875,     -1.9062],
        [     0.0293,     -2.9688,     -1.1953,     -4.9062,     -6.0625,     -5.6250,     -0.7227,     -0.3477,     -2.7031,     -1.4062,     -7.2500,     -0.2617,      1.8906,     -2.5156,      0.9844],
        [     0.0728,     -5.3750,     -1.9922,     -4.8438,     -5.0625,     -6.5938,     -2.6719,     -0.6992,     -4.4375,     -0.3418,     -8.5625,     -1.6406,      1.0859,     -4.5000,     -1.4375],
        [     0.0496,     -6.1250,     -3.2812,     -5.4062,     -8.4375,     -9.6250,     -7.8438,     -5.4375,    -10.3125,     -5.6875,    -11.4375,     -3.7031,     -2.7344,    -10.5625,     -3.4844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8076],
        [0.7370],
        [0.7132],
        [0.7875],
        [0.7626],
        [0.7134],
        [0.6718],
        [0.6821],
        [0.5607],
        [0.6121],
        [0.4683],
        [0.5266],
        [0.5412],
        [0.6087]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0037,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0070,     0.0067,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0061,     0.0051,     0.0009,     0.0097,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0008,     0.0001,     0.0020,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0039,     0.0021,     0.0006,     0.0071,     0.0009,     0.0135,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0027,     0.0019,     0.0004,     0.0034,     0.0004,     0.0093,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0028,     0.0019,     0.0003,     0.0047,     0.0005,     0.0114,     0.0017,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0029,     0.0023,     0.0004,     0.0041,     0.0005,     0.0101,     0.0018,     0.0006,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0037,     0.0026,     0.0005,     0.0063,     0.0010,     0.0162,     0.0028,     0.0009,     0.0003,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0074,     0.0044,     0.0010,     0.0081,     0.0020,     0.0258,     0.0052,     0.0022,     0.0010,     0.0029,     0.0070,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0014,     0.0012,     0.0002,     0.0026,     0.0002,     0.0060,     0.0010,     0.0004,     0.0001,     0.0005,     0.0017,     0.0007,     0.0000,     0.0000],
        [    0.9766,     0.0021,     0.0015,     0.0002,     0.0035,     0.0004,     0.0087,     0.0013,     0.0005,     0.0001,     0.0006,     0.0020,     0.0009,     0.0009,     0.0000],
        [    0.9492,     0.0036,     0.0020,     0.0004,     0.0046,     0.0005,     0.0112,     0.0022,     0.0007,     0.0003,     0.0011,     0.0029,     0.0012,     0.0010,     0.0188]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0026,     -0.1543,     -0.1650,     -0.2031,     -0.1445,     -0.2090,     -0.1289,     -0.1758,     -0.2041,     -0.2236,     -0.1855,     -0.1621,     -0.1914,     -0.1943,     -0.0996],
        [     0.0806,     -5.8750,     -5.8750,     -8.4375,     -5.3125,     -7.3750,     -4.1875,     -6.1250,     -7.5938,     -8.1875,     -6.9062,     -5.5938,     -6.5312,     -7.1250,     -3.6094],
        [     0.0786,     -5.5000,     -5.8125,     -7.7812,     -5.1875,     -7.1250,     -4.2188,     -6.0000,     -7.2500,     -7.5312,     -6.5312,     -5.3750,     -6.6875,     -7.0000,     -3.4062],
        [     0.0693,     -4.8750,     -4.9375,     -6.9688,     -4.5312,     -6.1875,     -3.5469,     -5.1250,     -6.3438,     -6.7812,     -5.8125,     -4.6875,     -5.4375,     -5.9375,     -2.9219],
        [     0.0708,     -5.0000,     -5.1875,     -6.9375,     -4.5312,     -6.6250,     -3.8281,     -5.2500,     -6.5000,     -6.8438,     -5.6562,     -4.8750,     -5.7812,     -6.1250,     -2.7969],
        [     0.0996,     -6.7812,     -7.0000,     -9.0625,     -6.0938,     -8.1250,     -5.0625,     -7.1562,     -8.5000,     -9.1250,     -7.6562,     -6.7500,     -7.5312,     -8.0625,     -4.5938],
        [     0.0762,     -5.4375,     -6.0625,     -7.3750,     -4.8438,     -6.9688,     -4.1875,     -5.8750,     -6.8125,     -7.5312,     -6.1875,     -5.6562,     -6.3125,     -6.5000,     -3.6562],
        [     0.0869,     -5.8125,     -6.1875,     -7.7188,     -5.5938,     -7.7188,     -4.5625,     -6.3125,     -7.1250,     -8.2500,     -6.8438,     -5.7812,     -6.6250,     -6.6562,     -3.7656],
        [     0.0908,     -5.7500,     -6.1562,     -7.9688,     -5.2500,     -7.4688,     -4.3438,     -6.2812,     -7.1250,     -8.3750,     -6.8125,     -5.8125,     -6.5938,     -6.6250,     -3.7031],
        [     0.0884,     -5.7500,     -5.9688,     -7.7188,     -5.3750,     -7.4062,     -4.4688,     -6.2188,     -7.3125,     -7.6875,     -6.4688,     -5.8125,     -6.6562,     -6.9375,     -3.8438],
        [     0.0811,     -5.5000,     -5.8125,     -7.5625,     -4.9688,     -6.8438,     -4.0000,     -5.7500,     -6.9375,     -7.9062,     -6.4375,     -5.6875,     -6.1562,     -6.5000,     -3.7344],
        [     0.0669,     -4.7500,     -5.3125,     -6.8125,     -4.6875,     -6.0625,     -3.5312,     -5.1250,     -6.0000,     -6.7812,     -5.7188,     -4.8125,     -5.5000,     -5.7188,     -3.2344],
        [     0.0981,     -6.4375,     -6.5938,     -8.3750,     -5.8438,     -8.3125,     -5.0000,     -6.8438,     -7.7812,     -9.0625,     -7.5312,     -6.2500,     -7.2188,     -7.2812,     -4.3125],
        [     0.0972,     -6.0625,     -6.3750,     -8.3750,     -5.5312,     -7.8125,     -4.6250,     -6.5000,     -7.4375,     -8.8125,     -7.2812,     -6.0938,     -6.8750,     -6.9062,     -4.0938],
        [     0.0869,     -5.4688,     -6.0938,     -7.7812,     -5.2500,     -7.4688,     -4.3438,     -6.0000,     -7.1562,     -8.0000,     -6.7188,     -5.7188,     -6.5625,     -6.7500,     -3.8281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8197],
        [0.7746],
        [0.7510],
        [0.6960],
        [0.6934],
        [0.6369],
        [0.6267],
        [0.6170],
        [0.5847],
        [0.5881],
        [0.5421],
        [0.5617],
        [0.5600],
        [0.5396]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9961, 0.0056, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6992, 0.1855, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8125, 0.0498, 0.1074, 0.0294, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8984, 0.0282, 0.0267, 0.0215, 0.0238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.0757, 0.0776, 0.0723, 0.1670, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6719, 0.0479, 0.0391, 0.0422, 0.0962, 0.0815, 0.0216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.1030, 0.0554, 0.0664, 0.1445, 0.1118, 0.1138, 0.1602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.0815, 0.0311, 0.0393, 0.0835, 0.0593, 0.0315, 0.0850, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.0564, 0.0225, 0.0344, 0.0564, 0.0405, 0.0194, 0.0757, 0.1436, 0.2676, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5508, 0.0208, 0.0141, 0.0162, 0.0277, 0.0383, 0.0084, 0.0574, 0.0464, 0.1777, 0.0403, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.0317, 0.0134, 0.0162, 0.0420, 0.0422, 0.0291, 0.0623, 0.1416, 0.1367, 0.2051, 0.1924, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.0325, 0.0136, 0.0182, 0.0228, 0.0156, 0.0170, 0.0243, 0.1006, 0.1533, 0.1006, 0.1494, 0.1533, 0.0000, 0.0000],
        [0.4062, 0.0254, 0.0092, 0.0114, 0.0186, 0.0127, 0.0068, 0.0150, 0.0221, 0.1001, 0.0305, 0.0422, 0.1436, 0.1553, 0.0000],
        [0.0688, 0.0112, 0.0075, 0.0078, 0.0151, 0.0190, 0.0066, 0.0352, 0.0566, 0.0469, 0.0420, 0.0713, 0.1924, 0.2793, 0.1396]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0014,     -0.2217,     -0.1865,     -0.1885,     -0.1943,     -0.2188,     -0.2910,     -0.2451,     -0.2598,     -0.2031,     -0.2910,     -0.2773,     -0.2559,     -0.2793,     -0.2969],
        [     0.0315,     -5.1562,     -3.7344,     -4.6250,     -3.9375,     -3.6094,     -5.1875,     -3.7656,     -3.6875,     -2.8594,     -3.8594,     -3.4062,     -2.8438,     -2.8125,     -3.0938],
        [     0.0056,     -1.3281,     -1.8125,     -1.7266,     -0.9883,     -0.6172,     -1.2891,     -0.6523,     -0.2275,      0.1191,     -0.1104,     -0.1289,      0.1865,      0.5234,      0.4316],
        [     0.0089,     -2.7812,     -2.0156,     -3.3125,     -2.0625,     -1.7109,     -2.0625,     -1.5078,     -1.2812,     -0.2832,     -0.8789,     -0.8906,     -0.5469,     -0.2832,     -0.1992],
        [     0.0232,     -3.4375,     -3.5000,     -3.7031,     -3.6094,     -2.8594,     -4.0312,     -2.5781,     -2.7656,     -0.7617,     -2.9531,     -1.7266,     -0.9062,     -1.4219,     -1.6484],
        [     0.0173,     -1.9375,     -1.9141,     -1.9844,     -1.1484,     -1.9766,     -2.2969,     -1.1016,     -0.5664,      0.6094,     -0.7109,      0.2324,      0.2969,      0.6250,      0.5156],
        [     0.0131,     -2.6250,     -2.8281,     -2.7500,     -1.9297,     -2.0938,     -3.4219,     -1.8828,     -1.1484,     -1.0156,     -1.3516,     -1.1719,     -0.6367,     -0.0615,     -0.5977],
        [     0.0026,     -0.8672,     -1.4844,     -1.3047,     -0.5273,     -0.7852,     -0.7656,     -0.4258,      0.8281,      1.2344,      0.9648,      1.1797,      1.0312,      2.1094,      1.8906],
        [     0.0255,     -1.7500,     -2.7031,     -2.4688,     -1.7266,     -2.0625,     -2.7031,     -1.7109,     -1.4688,      0.0240,     -1.2500,     -0.8359,      0.4316,      0.3730,      0.4297],
        [     0.0149,     -1.6016,     -2.5156,     -2.0938,     -1.6016,     -1.9297,     -2.6719,     -1.3047,     -0.6680,     -0.0420,     -0.9219,      0.0840,      0.5195,      0.9336,      0.9883],
        [     0.0289,     -3.2500,     -3.6406,     -3.5000,     -2.9688,     -2.6406,     -4.1562,     -2.2344,     -2.4531,     -1.1016,     -2.5938,     -1.5391,     -0.3516,     -0.7695,     -1.1094],
        [    -0.0006,     -1.0078,     -1.8750,     -1.6797,     -0.7305,     -0.7266,     -1.1016,     -0.3398,      0.4863,      0.4492,      0.8516,      0.7891,      1.1406,      1.9062,      1.7734],
        [     0.0098,     -1.8047,     -2.6719,     -2.3906,     -2.1562,     -2.5312,     -2.4531,     -2.0938,     -0.6719,     -0.2520,     -0.6680,     -0.2734,     -0.2490,      0.9648,      0.7852],
        [     0.0293,     -2.7500,     -3.7500,     -3.5469,     -3.0625,     -3.4375,     -4.0625,     -3.2656,     -2.8906,     -1.3672,     -2.5625,     -2.2344,     -1.0078,     -0.9297,     -0.8125],
        [     0.0130,     -1.7969,     -2.2031,     -2.1562,     -1.5000,     -1.2734,     -2.3281,     -0.6602,     -0.1826,     -0.3672,     -0.4824,      0.0476,      1.0469,      1.4141,      0.7227]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6958],
        [0.3721],
        [0.2865],
        [0.2422],
        [0.2045],
        [0.1830],
        [0.1076],
        [0.1301],
        [0.1283],
        [0.1358],
        [0.0898],
        [0.0922],
        [0.1025],
        [0.0776]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0928,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.1226,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6523,     0.0918,     0.1777,     0.0791,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.1543,     0.0481,     0.0352,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1099,     0.0486,     0.0177,     0.0101,     0.3086,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0060,     0.0016,     0.0023,     0.0002,     0.0036,     0.0217,     0.9648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0001,     0.0002,     0.0000,     0.0005,     0.0021,     0.9883,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.0004,     0.0003,     0.0001,     0.0020,     0.0172,     0.5430,     0.0025,     0.4297,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0003,     0.0003,     0.0001,     0.0020,     0.0054,     0.0488,     0.0032,     0.4297,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0000,     0.0002,     0.0004,     0.0062,     0.0001,     0.1270,     0.2227,     0.6445,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0001,     0.0001,     0.0000,     0.0003,     0.0010,     0.0107,     0.0003,     0.0588,     0.0718,     0.8516,     0.0070,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0052,     0.0001,     0.0415,     0.0315,     0.9180,     0.0017,     0.0015,     0.0000,     0.0000],
        [    0.0008,     0.0001,     0.0000,     0.0000,     0.0001,     0.0008,     0.0054,     0.0001,     0.0312,     0.0342,     0.8438,     0.0009,     0.0006,     0.0830,     0.0000],
        [    0.0004,     0.0001,     0.0000,     0.0000,     0.0001,     0.0004,     0.0012,     0.0001,     0.0374,     0.0223,     0.7383,     0.0014,     0.0007,     0.0693,     0.1260]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0005,     -0.1064,     -0.1494,     -0.1523,     -0.1348,     -0.1250,     -0.1260,     -0.1768,     -0.1089,     -0.0977,     -0.1084,     -0.1689,     -0.1621,     -0.1006,     -0.1172],
        [    -0.0106,     -2.2969,     -4.0312,     -4.6250,     -2.4062,     -0.5977,      0.4355,     -3.2188,      0.5625,      0.6914,      2.5469,     -1.8828,     -2.2969,      0.7891,      1.1172],
        [    -0.0106,     -1.6797,     -1.0703,     -1.7656,      0.3477,      1.2656,      1.0938,     -0.9336,      2.0625,      2.2500,      3.4531,      0.7383,      0.7734,      2.8281,      2.5781],
        [    -0.0130,     -1.9688,     -1.3125,     -2.1250,     -0.3184,      0.7891,      0.5039,     -2.0000,      0.9883,      1.6953,      2.3281,     -0.2910,     -0.2500,      2.0469,      1.7578],
        [    -0.0063,     -0.5664,     -1.7344,     -2.0469,      0.5977,      2.5469,      2.5938,     -1.4141,      1.1719,      1.5078,      3.7812,     -0.3496,     -0.1143,      2.2812,      1.8359],
        [    -0.0082,     -0.8242,     -1.8359,     -2.3906,      1.0234,      1.5234,      3.8906,     -0.3633,      4.2500,      2.8125,      6.0312,      0.7500,      0.7031,      4.3750,      3.4219],
        [    -0.0466,     -1.3594,     -1.0078,     -3.2500,     -0.5664,      1.2422,      5.0312,      1.1719,      4.2188,      5.0938,      5.4688,      2.3906,      0.8320,      2.8906,      3.4688],
        [    -0.0308,     -2.9375,     -2.0469,     -3.8906,     -1.3203,      0.1602,      6.3125,      1.6328,      5.2500,      5.3125,      7.2812,      2.4844,      1.6641,      4.3750,      4.5000],
        [    -0.0079,     -2.6719,     -3.0312,     -4.3438,     -1.1016,      1.0312,      4.4688,     -0.9023,      4.2500,      4.5000,      7.1562,      0.7070,     -0.5117,      3.7188,      4.5000],
        [     0.0036,     -1.5625,     -1.8047,     -2.9531,      0.1953,      1.1953,      3.4062,      0.6680,      5.5938,      5.7500,      7.8438,      3.0000,      2.3438,      5.6875,      6.1562],
        [     0.0042,     -2.5156,     -3.7031,     -4.6562,     -0.4824,      0.3184,      3.1562,     -1.1797,      6.1875,      6.7500,      7.8125,      1.3750,      1.1641,      6.6562,      6.2812],
        [     0.0021,     -1.6797,     -2.0781,     -3.1875,     -0.3926,      0.8633,      3.2656,     -0.2715,      4.9688,      5.1562,      7.6562,      2.8438,      2.0781,      5.9062,      5.7812],
        [    -0.0078,     -2.6094,     -3.1094,     -4.5000,     -1.6875,     -0.6406,      2.8438,     -0.7930,      4.9375,      4.6562,      8.0000,      1.7500,      1.6328,      5.8438,      5.4375],
        [     0.0099,     -2.5156,     -3.7969,     -4.8438,     -1.7734,     -0.0102,      1.8672,     -2.5156,      3.6094,      3.7031,      6.9062,      0.0898,     -0.3496,      4.5938,      4.6250],
        [     0.0039,     -1.7812,     -3.0938,     -3.6094,     -1.3594,      0.0835,      1.1250,     -1.7734,      4.5625,      4.0625,      7.5625,      1.2578,      0.5703,      5.1875,      5.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9004],
        [0.4550],
        [0.4133],
        [0.3804],
        [0.3435],
        [0.3866],
        [0.3286],
        [0.3181],
        [0.3066],
        [0.2854],
        [0.3026],
        [0.2933],
        [0.2670],
        [0.2781]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9570, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.3086, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9609, 0.0273, 0.0043, 0.0069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9258, 0.0425, 0.0078, 0.0110, 0.0132, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5430, 0.0952, 0.0527, 0.0825, 0.0588, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0194, 0.0010, 0.0030, 0.0081, 0.0304, 0.0449, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5938, 0.0908, 0.0327, 0.0322, 0.0173, 0.1060, 0.0820, 0.0459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.1826, 0.1406, 0.0569, 0.0221, 0.0825, 0.0608, 0.1162, 0.0261, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.1777, 0.0649, 0.0442, 0.0193, 0.0752, 0.0884, 0.1328, 0.0625, 0.0223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1123, 0.0508, 0.0645, 0.0183, 0.0332, 0.0427, 0.0884, 0.0179, 0.0113, 0.0461, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0065, 0.0811, 0.1504, 0.0752, 0.0215, 0.0898, 0.1211, 0.1709, 0.0342, 0.0184, 0.0109, 0.2207, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.0356, 0.0065, 0.0162, 0.0099, 0.0532, 0.0811, 0.0488, 0.0337, 0.0046, 0.1240, 0.0459, 0.0388, 0.0000, 0.0000],
        [0.4043, 0.1494, 0.0449, 0.0197, 0.0113, 0.0649, 0.0330, 0.0605, 0.0237, 0.0160, 0.0593, 0.0476, 0.0349, 0.0303, 0.0000],
        [0.0488, 0.0588, 0.0115, 0.0044, 0.0047, 0.0486, 0.0461, 0.0874, 0.0752, 0.0059, 0.0388, 0.1016, 0.0090, 0.0796, 0.3789]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.1069,     -0.1338,     -0.1187,     -0.1426,     -0.1055,     -0.1396,     -0.1338,     -0.1377,     -0.1455,     -0.1021,     -0.1338,     -0.1445,     -0.1406,     -0.1074],
        [     0.0130,     -3.0781,     -5.0312,     -4.6875,     -5.0938,     -3.1094,     -3.5938,     -4.6875,     -4.5625,     -4.2500,     -2.2656,     -3.6250,     -4.4688,     -4.4688,     -3.1406],
        [     0.0155,     -0.6055,     -1.5469,     -1.9453,     -2.2812,     -0.8516,     -0.3125,     -0.5625,     -1.1484,     -2.5312,     -1.5078,     -0.5781,     -1.7109,     -1.3594,      0.1357],
        [     0.0093,     -3.5469,     -5.4062,     -4.9375,     -5.1562,     -3.7031,     -2.9531,     -4.0938,     -3.5625,     -4.8125,     -2.9375,     -3.9688,     -5.6875,     -3.7656,     -2.1562],
        [    -0.0043,     -3.0781,     -4.7812,     -4.4375,     -4.2500,     -2.8594,     -3.1875,     -3.4219,     -3.5156,     -4.8438,     -2.9219,     -3.8594,     -4.7500,     -3.4219,     -1.7266],
        [     0.0021,     -1.7344,     -2.3281,     -1.8828,     -2.2188,     -1.1719,     -0.4199,     -1.8516,     -1.7734,     -2.5625,     -0.2637,     -1.3203,     -2.2188,     -1.2656,     -0.0762],
        [    -0.0221,     -3.8594,     -6.7812,     -5.7188,     -4.7188,     -3.4062,     -3.0156,     -4.3125,     -3.5938,     -6.6875,     -3.7188,     -5.6562,     -8.3125,     -3.7188,     -1.6797],
        [     0.0100,     -1.8672,     -2.8906,     -2.9062,     -3.5312,     -1.7109,     -1.9688,     -2.5469,     -2.9531,     -3.2969,     -1.5000,     -2.1094,     -2.7656,     -2.4062,     -1.2812],
        [     0.0023,     -0.5312,     -0.7930,     -1.6953,     -2.6406,     -1.3203,     -1.6328,     -0.9844,     -2.4688,     -2.4062,     -1.3047,     -1.1328,     -1.3359,     -1.8750,     -1.1484],
        [    -0.0090,     -0.5742,     -1.5781,     -1.9688,     -2.7969,     -1.4297,     -1.2734,     -0.8672,     -1.6172,     -2.6406,     -0.9570,     -0.8242,     -1.6328,     -1.1328,     -0.0747],
        [    -0.0001,     -1.5234,     -2.3125,     -2.0781,     -3.3438,     -2.7500,     -2.4844,     -1.7656,     -3.3594,     -3.8281,     -2.4062,     -2.4062,     -2.2188,     -2.9219,     -1.1094],
        [     0.0065,      2.5312,      3.1562,      2.4531,      1.2031,      2.6406,      2.9375,      3.2812,      1.6719,      1.0547,      0.5312,      3.5312,      3.5469,      1.8359,      2.8125],
        [     0.0030,     -2.6406,     -4.3438,     -3.4219,     -3.9219,     -2.2344,     -1.8203,     -2.3281,     -2.6875,     -4.6875,     -1.3906,     -2.3906,     -2.5469,     -1.9141,     -1.3359],
        [     0.0115,     -0.9805,     -2.1875,     -3.0156,     -3.5625,     -1.8125,     -2.5000,     -1.8828,     -2.8281,     -3.2188,     -1.9062,     -2.1250,     -2.4375,     -2.5781,     -2.1094],
        [    -0.0131,      0.1758,     -1.4531,     -2.4219,     -2.3594,     -0.0166,     -0.0703,      0.5703,      0.4238,     -2.1250,     -0.2383,      0.7188,     -1.6953,      0.4766,      2.0469]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7298],
        [0.5848],
        [0.6423],
        [0.5335],
        [0.4851],
        [0.4361],
        [0.3734],
        [0.3305],
        [0.3343],
        [0.3817],
        [0.1978],
        [0.3031],
        [0.3286],
        [0.3295]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.1562,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0101,     -0.4316,     -0.5078,     -0.6875,     -0.6719,     -0.7227,     -0.7500,     -0.8516,     -0.7578,     -0.7344,     -0.5859,     -1.0469,     -0.8984,     -0.6562,     -0.8281],
        [    -0.2021,     -7.9062,     -9.3125,    -12.0625,    -13.6250,    -13.4375,    -12.9375,    -15.9375,    -14.1875,    -12.8125,    -11.0625,    -20.5000,    -16.7500,    -12.7500,    -16.1250],
        [    -0.0469,     -1.6719,     -2.8438,     -2.5625,     -2.5781,     -2.8906,     -2.3438,     -3.4688,     -3.2656,     -3.2969,     -3.7969,     -5.5000,     -3.2344,     -3.6719,     -4.2500],
        [    -0.2852,    -11.2500,    -14.2500,    -18.7500,    -18.7500,    -20.2500,    -20.3750,    -23.6250,    -21.1250,    -20.6250,    -16.3750,    -30.0000,    -24.8750,    -18.5000,    -23.7500],
        [    -0.4199,    -18.0000,    -21.0000,    -29.6250,    -28.6250,    -31.3750,    -32.2500,    -36.2500,    -31.7500,    -31.2500,    -24.1250,    -44.0000,    -37.7500,    -26.3750,    -34.7500],
        [    -0.5078,    -22.0000,    -26.6250,    -35.5000,    -35.0000,    -37.7500,    -39.2500,    -44.0000,    -39.2500,    -38.5000,    -29.2500,    -54.5000,    -45.2500,    -33.2500,    -43.0000],
        [    -0.4551,    -19.3750,    -23.0000,    -30.7500,    -30.3750,    -33.0000,    -34.0000,    -38.5000,    -34.5000,    -34.0000,    -26.3750,    -47.2500,    -40.2500,    -29.6250,    -37.5000],
        [    -0.5195,    -22.2500,    -26.1250,    -35.2500,    -34.2500,    -38.0000,    -39.0000,    -44.2500,    -39.2500,    -38.7500,    -30.6250,    -54.5000,    -46.2500,    -34.0000,    -42.7500],
        [    -0.5312,    -21.5000,    -25.7500,    -34.2500,    -35.5000,    -38.5000,    -38.2500,    -44.2500,    -39.5000,    -37.5000,    -30.2500,    -54.2500,    -46.2500,    -33.7500,    -42.5000],
        [    -0.5508,    -23.0000,    -27.3750,    -36.5000,    -37.7500,    -40.2500,    -41.0000,    -46.7500,    -41.7500,    -40.0000,    -31.6250,    -57.7500,    -48.5000,    -35.7500,    -45.5000],
        [    -0.4023,    -17.1250,    -19.7500,    -26.2500,    -26.8750,    -29.3750,    -29.6250,    -33.7500,    -30.3750,    -29.0000,    -23.3750,    -41.2500,    -35.0000,    -26.1250,    -32.2500],
        [    -0.5156,    -21.3750,    -25.7500,    -33.2500,    -34.5000,    -36.5000,    -36.5000,    -43.2500,    -39.2500,    -37.2500,    -31.5000,    -54.7500,    -45.0000,    -35.0000,    -43.0000],
        [    -0.5859,    -24.3750,    -28.6250,    -39.0000,    -39.5000,    -43.0000,    -43.7500,    -49.7500,    -44.2500,    -43.0000,    -33.7500,    -60.7500,    -52.2500,    -37.7500,    -48.0000],
        [    -0.4121,    -16.5000,    -19.7500,    -26.1250,    -27.5000,    -29.5000,    -29.1250,    -34.2500,    -30.2500,    -28.6250,    -23.8750,    -42.0000,    -35.2500,    -26.2500,    -32.7500],
        [    -0.4629,    -19.6250,    -23.5000,    -30.5000,    -31.1250,    -33.2500,    -34.0000,    -39.0000,    -34.5000,    -33.0000,    -27.1250,    -48.5000,    -40.2500,    -30.3750,    -37.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4743],
        [0.2504],
        [0.4523],
        [0.4511],
        [0.5416],
        [0.4171],
        [0.4912],
        [0.5243],
        [0.4940],
        [0.5556],
        [0.4807],
        [0.5247],
        [0.4382],
        [0.4094]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3965,     0.5664,     0.0352,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0033,     0.0006,     0.0025,     0.0008,     0.0035,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0002,     0.0000,     0.0001,     0.0000,     0.0063,     0.0000,     0.0000,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0032,     0.0001,     0.0010,     0.0020,     0.0157,     0.0002,     0.0001,     0.0007,     0.0063,     0.0005,     0.0003,     0.0006,     0.0001,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0011,     -0.3105,     -0.3555,     -0.3281,     -0.3770,     -0.2148,     -0.4141,     -0.4707,     -0.4238,     -0.2773,     -0.4219,     -0.3984,     -0.4102,     -0.4883,     -0.3809],
        [    -0.0549,    -15.9375,    -17.0000,    -16.7500,    -20.1250,    -12.4375,    -20.8750,    -23.2500,    -21.1250,    -14.1250,    -21.0000,    -19.0000,    -20.8750,    -23.5000,    -18.6250],
        [     0.0053,      0.3633,     -2.4219,     -1.4766,     -0.5898,     -0.6719,     -0.5703,      0.1553,     -0.1660,     -0.2344,      1.5703,     -0.3555,      1.5156,      1.3672,     -0.5781],
        [    -0.0635,    -17.7500,    -21.6250,    -19.3750,    -21.2500,    -13.1250,    -24.0000,    -27.0000,    -24.1250,    -16.5000,    -23.5000,    -23.3750,    -23.6250,    -27.2500,    -22.6250],
        [    -0.0771,    -23.0000,    -26.7500,    -25.1250,    -30.1250,    -18.1250,    -31.2500,    -36.0000,    -33.0000,    -21.3750,    -31.7500,    -29.6250,    -31.2500,    -36.5000,    -28.2500],
        [    -0.0674,    -17.7500,    -18.6250,    -17.7500,    -22.0000,    -13.5625,    -23.6250,    -26.5000,    -24.7500,    -16.3750,    -24.2500,    -21.7500,    -23.5000,    -27.6250,    -21.0000],
        [    -0.0264,     -5.7188,     -7.3750,     -6.0000,     -7.1562,     -5.6562,     -8.7500,     -9.0625,     -8.8750,     -7.2812,     -7.9688,     -8.3125,     -7.9062,     -9.6875,     -8.4375],
        [    -0.0474,    -14.6250,    -17.3750,    -17.1250,    -20.3750,    -12.0000,    -20.1250,    -23.3750,    -21.1250,    -13.6875,    -20.0000,    -19.3750,    -19.5000,    -22.5000,    -18.0000],
        [    -0.0540,    -21.3750,    -26.6250,    -24.8750,    -27.6250,    -15.5625,    -29.1250,    -33.7500,    -29.1250,    -17.6250,    -29.3750,    -27.5000,    -28.3750,    -33.2500,    -26.1250],
        [    -0.0315,    -11.1875,    -13.3750,    -12.8750,    -13.4375,     -8.5625,    -14.9375,    -16.1250,    -14.6875,     -9.5000,    -14.6250,    -13.8750,    -14.1875,    -16.7500,    -13.6875],
        [    -0.0732,    -22.1250,    -25.1250,    -23.8750,    -27.8750,    -16.2500,    -29.6250,    -33.5000,    -30.7500,    -19.8750,    -29.8750,    -28.0000,    -28.6250,    -34.2500,    -27.8750],
        [    -0.0289,     -8.5000,    -10.3750,     -9.2500,    -10.1250,     -5.0938,    -11.6250,    -13.1875,    -11.4375,     -6.9688,    -12.1250,    -11.1875,    -11.3750,    -13.3125,    -10.9375],
        [    -0.0625,    -20.8750,    -24.3750,    -23.7500,    -27.8750,    -16.6250,    -28.5000,    -33.2500,    -29.2500,    -18.5000,    -28.7500,    -26.7500,    -28.0000,    -32.2500,    -25.3750],
        [    -0.0444,    -18.3750,    -23.6250,    -21.6250,    -22.3750,    -12.6875,    -25.0000,    -28.7500,    -24.3750,    -14.8125,    -24.6250,    -24.1250,    -23.7500,    -28.3750,    -23.3750],
        [    -0.0123,     -5.7188,     -9.0625,     -6.9375,     -6.1875,     -4.1250,     -8.6250,     -9.0000,     -7.2812,     -5.0625,     -7.5000,     -8.0625,     -7.4062,     -8.8125,     -8.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9603],
        [0.3909],
        [0.7798],
        [0.9466],
        [0.9036],
        [0.8030],
        [0.6986],
        [0.8000],
        [0.6474],
        [0.9268],
        [0.5793],
        [0.9294],
        [0.7665],
        [0.5335]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0449,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.2930,     0.7070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0192,     0.0039,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7266,     0.0413,     0.0221,     0.0552,     0.0222,     0.0986,     0.0330,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.1357,     0.1060,     0.2754,     0.0349,     0.2480,     0.1475,     0.0378,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0005,     0.0002,     0.0004,     0.0004,     0.0045,     0.0002,     0.0004,     0.0015,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0020,     0.0013,     0.0019,     0.0021,     0.0113,     0.0019,     0.0025,     0.0031,     0.0023,     0.0031,     0.0012,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0187,     0.0053,     0.0240,     0.0145,     0.0698,     0.0240,     0.0040,     0.0187,     0.0070,     0.0089,     0.0013,     0.0137,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4590,     0.0559,     0.0388,     0.0400,     0.0194,     0.1147,     0.0503,     0.0309,     0.0293,     0.0320,     0.0236,     0.0117,     0.0479,     0.0157,     0.0315]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.1245,     -0.1445,     -0.1279,     -0.1113,     -0.0894,     -0.1289,     -0.1270,     -0.1074,     -0.1270,     -0.1221,     -0.1475,     -0.1084,     -0.1260,     -0.1289],
        [     0.0125,      3.0625,      1.7812,      2.9219,      1.9688,      1.5938,      3.0625,      1.8438,      0.6289,      1.3203,      0.0035,      0.3770,      1.2656,      0.3633,      1.3984],
        [     0.0215,      5.8750,      6.7500,      6.2812,      4.0625,      4.9062,      5.8125,      5.5000,      4.8750,      5.5312,      5.6562,      6.6875,      5.9375,      5.5625,      6.2188],
        [    -0.0101,     -3.9219,     -5.5000,     -3.5469,     -4.4375,     -2.9844,     -3.7500,     -4.5938,     -5.1562,     -4.9062,     -5.8750,     -6.1250,     -4.0312,     -6.1562,     -4.6875],
        [    -0.0361,    -10.6250,    -11.8125,    -10.6875,     -9.4375,     -8.3125,    -10.8125,    -10.1875,     -9.0625,    -10.4375,     -9.9375,    -11.5625,     -9.1875,    -10.3125,    -10.0000],
        [    -0.0747,    -20.3750,    -22.5000,    -21.1250,    -18.7500,    -15.6250,    -21.6250,    -19.6250,    -17.6250,    -19.3750,    -18.6250,    -21.1250,    -17.0000,    -19.7500,    -18.0000],
        [    -0.0095,     -2.8750,     -3.5000,     -2.5938,     -3.5000,     -2.0156,     -3.1094,     -3.0781,     -3.1562,     -3.2031,     -3.6406,     -3.7656,     -2.3594,     -3.8125,     -2.7188],
        [     0.0126,      2.2656,      2.0156,      2.9688,      0.8984,      2.8594,      2.3438,      0.9805,      1.7344,      1.9141,      1.6719,      0.9688,      2.4688,      1.3672,      0.8789],
        [    -0.0500,    -14.1250,    -14.4375,    -14.4375,    -13.6250,    -11.2500,    -15.4375,    -13.6250,    -11.8750,    -12.7500,    -11.5000,    -12.9375,    -11.5625,    -12.7500,    -11.6875],
        [    -0.0225,     -7.5625,     -8.3750,     -7.9688,     -7.9688,     -5.4062,     -8.5625,     -7.8750,     -6.5000,     -7.5000,     -6.3750,     -7.8750,     -5.7812,     -7.0938,     -7.0625],
        [    -0.0620,    -18.2500,    -20.2500,    -19.1250,    -16.0000,    -14.0625,    -19.0000,    -18.2500,    -15.4375,    -17.8750,    -16.0000,    -20.5000,    -16.1250,    -17.2500,    -18.5000],
        [    -0.0190,     -6.1875,     -6.6562,     -6.2500,     -6.1875,     -4.4688,     -6.2812,     -5.9688,     -5.7500,     -6.0312,     -5.7812,     -6.6875,     -4.8750,     -6.4375,     -5.5938],
        [    -0.0059,     -3.7500,     -5.0000,     -3.5000,     -4.0000,     -2.4219,     -3.5000,     -5.2812,     -3.7500,     -4.7188,     -4.5000,     -6.4688,     -4.0625,     -4.9688,     -5.6562],
        [    -0.0510,    -14.6250,    -15.5625,    -15.2500,    -13.0625,    -11.2500,    -15.5625,    -14.1250,    -11.6875,    -13.6875,    -12.1250,    -14.6875,    -12.0000,    -13.1250,    -13.3750],
        [    -0.0045,     -2.1094,     -2.4688,     -2.4375,     -3.1719,     -1.3906,     -2.2188,     -2.7031,     -2.7500,     -2.6719,     -2.9688,     -3.6719,     -2.2656,     -3.3750,     -2.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1950],
        [0.0061],
        [0.2770],
        [0.7278],
        [0.8161],
        [0.2170],
        [0.1203],
        [0.6511],
        [0.1583],
        [0.7921],
        [0.1511],
        [0.5450],
        [0.6212],
        [0.2113]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0444,     0.9570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.7109,     0.2852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7227,     0.2119,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0092,     0.4180,     0.2041,     0.1426,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1309,     0.1045,     0.2100,     0.1523,     0.2188,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4316,     0.0811,     0.0410,     0.0525,     0.1494,     0.2432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.3027,     0.0913,     0.0640,     0.0630,     0.1367,     0.1973,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.1455,     0.1172,     0.0557,     0.0581,     0.1631,     0.1963,     0.1416,     0.1221,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.1768,     0.0654,     0.0464,     0.0466,     0.0923,     0.1309,     0.1030,     0.1157,     0.2217,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0757,     0.1279,     0.0825,     0.1055,     0.0464,     0.1060,     0.0796,     0.0713,     0.0791,     0.0884,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1816,     0.0364,     0.0168,     0.0199,     0.0535,     0.1187,     0.0762,     0.0947,     0.2637,     0.0508,     0.0874,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1226,     0.0557,     0.0369,     0.0437,     0.1060,     0.0859,     0.0781,     0.0928,     0.1533,     0.0952,     0.0957,     0.0332,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.0396,     0.0269,     0.0156,     0.0771,     0.1050,     0.0713,     0.0579,     0.2207,     0.0625,     0.0947,     0.0104,     0.0742,     0.0000],
        [    0.0000,     0.1196,     0.0229,     0.0146,     0.0156,     0.0471,     0.0654,     0.0547,     0.0593,     0.1367,     0.0576,     0.0525,     0.0103,     0.0520,     0.2910]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0048,     -0.0039,     -0.0067,     -0.0020,     -0.0006,     -0.0050,     -0.0039,      0.0026,     -0.0030,      0.0034,     -0.0018,     -0.0002,      0.0018,     -0.0036],
        [     0.0088,      3.0781,      2.8594,      2.3594,      2.7656,      2.9062,      3.1875,      3.0938,      3.2188,      3.6562,      3.3906,      3.3906,      2.4844,      3.4844,      4.0938],
        [     0.0125,      5.0625,      4.1250,      3.8438,      3.7188,      4.0625,      4.6562,      4.4688,      4.5625,      5.1562,      4.5312,      4.5938,      3.4531,      4.7188,      5.6562],
        [     0.0275,      9.0625,      7.8438,      6.6875,      7.6875,      8.5000,      8.8750,      8.6250,      9.0625,      9.7500,      8.4375,      8.6250,      6.7188,      8.5625,     10.6250],
        [     0.0117,      3.8281,      3.1094,      2.7500,      3.2188,      3.6250,      3.6094,      3.4844,      3.8281,      4.0000,      4.0625,      3.7344,      2.7188,      4.0312,      4.7188],
        [     0.0019,     -0.2188,      0.4785,      0.1533,      0.5195,      0.3398,      0.3828,      0.2188,      0.4629,      0.5117,      0.2305,      0.6719,      0.2451,      0.4395,      0.6211],
        [     0.0267,      9.8125,      8.1250,      7.4375,      7.6875,      8.7500,      9.2500,      8.8750,      9.1875,     10.1875,      8.9375,      9.0625,      6.9062,      9.1250,     11.1250],
        [     0.0178,      6.6562,      5.4688,      5.0938,      5.0938,      5.8438,      6.2188,      5.9062,      6.1250,      6.8750,      6.0625,      6.2812,      4.5938,      6.2812,      7.6562],
        [     0.0171,      5.5000,      5.2812,      4.5312,      4.5625,      5.5938,      5.7812,      5.4688,      5.3125,      6.5000,      4.9062,      5.8750,      3.8594,      5.4688,      7.0625],
        [     0.0152,      5.7500,      4.7500,      4.4062,      4.4375,      5.0938,      5.4688,      5.2188,      5.3438,      5.9688,      5.2500,      5.3750,      3.9062,      5.4375,      6.5938],
        [     0.0023,      0.5234,      0.0859,      0.3340,     -0.4883,      0.3359,      0.0530,     -0.0579,      0.0417,      0.1562,      0.6016,      0.3750,     -0.0156,      0.5234,      0.3887],
        [     0.0271,      9.9375,      8.3125,      7.5625,      7.7500,      8.7500,      9.5000,      9.0625,      9.3125,     10.3125,      8.6875,      9.1875,      6.9688,      9.1250,     11.3125],
        [     0.0125,      4.4062,      3.6250,      3.2031,      3.3750,      4.2500,      4.0625,      3.9688,      4.1250,      4.6250,      4.1562,      4.1562,      3.1094,      4.2812,      5.1250],
        [     0.0225,      8.1875,      6.8750,      6.5000,      5.9375,      7.5625,      7.8438,      7.4688,      7.2500,      8.6250,      7.3438,      7.7500,      5.5625,      7.5000,      9.3750],
        [     0.0225,      8.5625,      6.9062,      6.4688,      6.5312,      7.6250,      7.9688,      7.7812,      7.8750,      8.6875,      7.8438,      7.7500,      6.1250,      7.7188,      9.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7628],
        [0.0192],
        [0.3730],
        [0.3316],
        [0.8755],
        [0.1042],
        [0.0889],
        [0.2223],
        [0.0428],
        [0.5143],
        [0.0422],
        [0.3514],
        [0.0972],
        [0.0266]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9414, 0.0586, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7578, 0.1006, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4492, 0.0688, 0.3242, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.1177, 0.1758, 0.1406, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0276, 0.1001, 0.0581, 0.0571, 0.0608, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0752, 0.0996, 0.0752, 0.0962, 0.1963, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.0767, 0.0854, 0.0664, 0.0806, 0.1914, 0.0771, 0.0737, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.0593, 0.0923, 0.0718, 0.0732, 0.1191, 0.0894, 0.0884, 0.0791, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.0684, 0.0708, 0.0581, 0.0718, 0.1553, 0.0654, 0.0635, 0.0698, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4785, 0.0347, 0.0635, 0.0430, 0.0349, 0.0747, 0.0598, 0.0615, 0.0476, 0.0703, 0.0320, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.0613, 0.0630, 0.0535, 0.0659, 0.1328, 0.0583, 0.0566, 0.0618, 0.0579, 0.0586, 0.0540, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.0371, 0.0815, 0.0483, 0.0703, 0.0908, 0.0757, 0.0771, 0.0820, 0.0850, 0.0510, 0.0801, 0.0623, 0.0000, 0.0000],
        [0.2520, 0.0596, 0.0574, 0.0520, 0.0557, 0.1123, 0.0522, 0.0510, 0.0530, 0.0540, 0.0471, 0.0505, 0.0549, 0.0488, 0.0000],
        [0.2344, 0.0659, 0.0508, 0.0466, 0.0544, 0.1328, 0.0457, 0.0437, 0.0505, 0.0447, 0.0505, 0.0430, 0.0508, 0.0437, 0.0430]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0101,     -0.0116,     -0.0121,     -0.0131,     -0.0114,     -0.0120,     -0.0117,     -0.0131,     -0.0118,     -0.0123,     -0.0125,     -0.0106,     -0.0131,     -0.0122],
        [     0.0012,     -2.7812,      0.3359,     -0.7617,      0.1992,     -0.5859,      0.4629,      0.5977,      0.4590,      0.6445,     -0.4766,      0.3477,     -0.1226,      0.2676,      0.5938],
        [    -0.0012,     -2.0156,     -1.6719,     -1.9922,     -1.8125,     -1.2031,     -1.7188,     -1.7344,     -1.7812,     -1.6719,     -1.9531,     -1.7656,     -1.7578,     -1.7969,     -1.6719],
        [     0.0009,     -1.8750,     -0.3262,     -1.0391,     -0.2871,     -0.2793,     -0.3340,     -0.2559,     -0.1807,     -0.2578,     -0.6875,     -0.4238,     -0.5469,     -0.3984,     -0.3145],
        [     0.0001,     -1.3047,     -0.9062,     -1.1250,     -1.1953,     -0.6680,     -0.9219,     -0.9336,     -1.0391,     -0.8750,     -1.3203,     -0.9219,     -0.9961,     -0.9570,     -0.8789],
        [    -0.0002,     -3.2344,     -1.9375,     -2.4844,     -2.5000,     -2.4375,     -1.8594,     -1.7656,     -2.0938,     -1.6641,     -2.5781,     -1.8281,     -2.0781,     -1.9141,     -1.6484],
        [    -0.0004,     -1.5859,     -1.3047,     -1.5859,     -1.3359,     -0.6250,     -1.3828,     -1.4062,     -1.3359,     -1.3594,     -1.4609,     -1.4297,     -1.3906,     -1.4219,     -1.3828],
        [    -0.0008,     -1.5156,     -1.4141,     -1.6641,     -1.4688,     -0.6016,     -1.5078,     -1.5547,     -1.4688,     -1.4922,     -1.5781,     -1.5391,     -1.5234,     -1.5234,     -1.5078],
        [    -0.0006,     -1.7109,     -1.2656,     -1.5156,     -1.5000,     -1.0156,     -1.2969,     -1.3047,     -1.4219,     -1.2031,     -1.7266,     -1.2812,     -1.3828,     -1.3516,     -1.2188],
        [    -0.0007,     -1.5156,     -1.4766,     -1.6797,     -1.4609,     -0.6914,     -1.5547,     -1.5938,     -1.5000,     -1.5547,     -1.5859,     -1.6094,     -1.5391,     -1.6094,     -1.5781],
        [    -0.0020,     -2.6250,     -2.0312,     -2.4219,     -2.6250,     -1.8594,     -2.0781,     -2.0469,     -2.3125,     -1.9219,     -2.7031,     -2.0312,     -2.2500,     -2.0938,     -1.9062],
        [    -0.0004,     -1.5078,     -1.4844,     -1.6406,     -1.4297,     -0.7344,     -1.5547,     -1.5859,     -1.5000,     -1.5625,     -1.5547,     -1.6328,     -1.4922,     -1.6406,     -1.6016],
        [    -0.0007,     -1.4531,     -0.6602,     -1.1875,     -0.8086,     -0.5547,     -0.7344,     -0.7188,     -0.6562,     -0.6250,     -1.1328,     -0.6836,     -0.9336,     -0.6250,     -0.6250],
        [    -0.0001,     -1.4375,     -1.4766,     -1.5781,     -1.5078,     -0.8047,     -1.5703,     -1.5938,     -1.5625,     -1.5391,     -1.6719,     -1.6094,     -1.5234,     -1.6406,     -1.5781],
        [    -0.0003,     -1.2734,     -1.5312,     -1.6094,     -1.4609,     -0.5703,     -1.6328,     -1.6797,     -1.5312,     -1.6562,     -1.5391,     -1.6953,     -1.5312,     -1.6797,     -1.6953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8503],
        [0.5924],
        [0.4457],
        [0.4441],
        [0.6354],
        [0.3235],
        [0.2936],
        [0.3174],
        [0.2704],
        [0.3465],
        [0.2402],
        [0.1737],
        [0.1992],
        [0.2012]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0312,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.5469,     0.4531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.4277,     0.2891,     0.2812,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2422,     0.1602,     0.1768,     0.4219,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0303,     0.2051,     0.1196,     0.0894,     0.1562,     0.3984,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0913,     0.0640,     0.0718,     0.1797,     0.5664,     0.0258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0913,     0.0613,     0.0664,     0.1641,     0.5742,     0.0236,     0.0181,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0762,     0.0515,     0.0569,     0.1514,     0.5898,     0.0203,     0.0157,     0.0396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0830,     0.0576,     0.0635,     0.1611,     0.5391,     0.0222,     0.0170,     0.0422,     0.0145,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0713,     0.0510,     0.0549,     0.1455,     0.5625,     0.0197,     0.0151,     0.0378,     0.0126,     0.0309,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0786,     0.0544,     0.0608,     0.1543,     0.5234,     0.0203,     0.0154,     0.0388,     0.0131,     0.0299,     0.0105,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0723,     0.0469,     0.0483,     0.1177,     0.6094,     0.0156,     0.0117,     0.0288,     0.0099,     0.0251,     0.0078,     0.0074,     0.0000,     0.0000],
        [    0.0000,     0.0693,     0.0479,     0.0527,     0.1367,     0.5703,     0.0170,     0.0128,     0.0325,     0.0107,     0.0253,     0.0085,     0.0082,     0.0095,     0.0000],
        [    0.0000,     0.0747,     0.0510,     0.0557,     0.1406,     0.5391,     0.0179,     0.0134,     0.0342,     0.0114,     0.0264,     0.0090,     0.0087,     0.0101,     0.0065]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0232,      0.0221,      0.0217,      0.0251,      0.0327,      0.0176,      0.0162,      0.0198,      0.0157,      0.0190,      0.0148,      0.0140,      0.0149,      0.0135],
        [    -0.0016,      3.4219,      2.8750,      2.7656,      3.5781,      4.6875,      2.2500,      2.0781,      2.7969,      2.0156,      3.0312,      1.8906,      1.9688,      2.0312,      1.7344],
        [    -0.0045,      7.3750,      7.1875,      7.3750,      8.2500,      8.8125,      6.5938,      6.4062,      7.1875,      6.2500,      6.9062,      6.1562,      6.2188,      6.3125,      5.9062],
        [    -0.0028,      5.0938,      4.6875,      4.6562,      5.4375,      6.6250,      3.8438,      3.6094,      4.3750,      3.5000,      4.3125,      3.3281,      3.3281,      3.4375,      3.0781],
        [    -0.0039,      6.6875,      6.2812,      6.3750,      7.2500,      8.5000,      5.4375,      5.2188,      6.0625,      5.0625,      5.9688,      4.8750,      4.9375,      5.0312,      4.5938],
        [    -0.0012,      1.9141,      1.3750,      1.0781,      1.6406,      2.5781,      0.5859,      0.3828,      0.9414,      0.3105,      1.0625,      0.1758,      0.1406,      0.2402,     -0.0107],
        [    -0.0042,      7.1875,      6.8438,      6.9688,      7.8750,      9.0000,      5.9375,      5.6562,      6.5625,      5.5000,      6.3438,      5.3125,      5.3125,      5.4375,      5.0312],
        [    -0.0040,      6.9062,      6.5312,      6.5938,      7.5000,      8.7500,      5.5625,      5.3125,      6.1875,      5.1562,      6.0312,      4.9375,      4.9375,      5.0625,      4.6562],
        [    -0.0044,      7.5625,      7.1562,      7.2500,      8.2500,      9.5625,      6.2188,      5.9688,      6.9062,      5.8125,      6.7500,      5.5938,      5.6250,      5.7500,      5.3125],
        [    -0.0043,      7.2812,      6.9062,      7.0000,      7.9375,      9.1250,      5.9688,      5.6875,      6.5938,      5.5312,      6.3750,      5.3125,      5.3125,      5.4375,      5.0312],
        [    -0.0045,      7.5312,      7.1875,      7.2500,      8.2500,      9.5625,      6.2500,      5.9688,      6.9062,      5.7812,      6.6875,      5.5938,      5.6250,      5.6875,      5.2812],
        [    -0.0044,      7.3750,      7.0312,      7.1250,      8.0625,      9.3125,      6.0312,      5.7500,      6.6875,      5.5938,      6.4375,      5.3750,      5.3750,      5.5000,      5.0625],
        [    -0.0038,      6.7188,      6.2812,      6.3125,      7.2188,      8.8750,      5.1875,      4.9062,      5.8125,      4.7500,      5.6562,      4.5000,      4.4375,      4.5625,      4.1562],
        [    -0.0045,      7.5938,      7.2500,      7.3438,      8.3125,      9.6875,      6.1875,      5.9062,      6.8438,      5.7500,      6.5938,      5.5000,      5.4688,      5.6250,      5.1875],
        [    -0.0043,      7.3438,      6.9688,      7.0312,      7.9688,      9.3125,      5.9062,      5.6250,      6.5625,      5.4688,      6.2812,      5.2188,      5.1875,      5.3438,      4.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.1016],
        [    0.0017],
        [    0.0093],
        [    0.0016],
        [    0.0444],
        [    0.0007],
        [    0.0007],
        [    0.0004],
        [    0.0005],
        [    0.0004],
        [    0.0005],
        [    0.0008],
        [    0.0004],
        [    0.0005]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(levard:0.0015levard:0.0016levard:0.0015levard:0.0015levard:0.0015levard:0.0011levard:0.0012levard:0.0013)
levard
------
		(levard:0.0016levard:0.0015levard:0.0015levard:0.0015levard:0.0011levard:0.0012levard:0.0013levard:0.0012)
levardlevardlevardlevardlevardlevardlevardlevardlevardlevardlevardlevardlevardlevardlevard
@ 1050 train 4.5877 , allloss: 4.5877, dt: 1172.94ms, fracRes: 0.1775, norm(attn): 0.3477, norm(output): 0.7461, norm(x): 0.8151, norm(y): 0.9917, norm:0.4129, tok/sec: 111746.41, flops:97.87, batch-reuse:1
@ 1051 train 4.5134 , allloss: 4.5134, dt: 703.68ms, fracRes: 0.1773, norm(attn): 0.3477, norm(output): 0.7422, norm(x): 0.8122, norm(y): 0.9918, norm:0.4392, tok/sec: 186267.11, flops:163.14, batch-reuse:1
@ 1052 train 4.5564 , allloss: 4.5564, dt: 704.79ms, fracRes: 0.1778, norm(attn): 0.3516, norm(output): 0.7461, norm(x): 0.8109, norm(y): 0.9918, norm:0.4426, tok/sec: 185972.03, flops:162.88, batch-reuse:1
@ 1053 train 4.5197 , allloss: 4.5197, dt: 721.88ms, fracRes: 0.1804, norm(attn): 0.3516, norm(output): 0.7461, norm(x): 0.8103, norm(y): 0.9918, norm:0.4512, tok/sec: 181569.87, flops:159.03, batch-reuse:1
@ 1054 train 4.4911 , allloss: 4.4911, dt: 692.19ms, fracRes: 0.1832, norm(attn): 0.3477, norm(output): 0.7422, norm(x): 0.8137, norm(y): 0.9917, norm:0.4430, tok/sec: 189357.19, flops:165.85, batch-reuse:1
@ 1055 train 4.4993 , allloss: 4.4993, dt: 698.27ms, fracRes: 0.1780, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8109, norm(y): 0.9918, norm:0.3752, tok/sec: 187710.88, flops:164.41, batch-reuse:1
@ 1056 train 4.5049 , allloss: 4.5049, dt: 698.07ms, fracRes: 0.1753, norm(attn): 0.3574, norm(output): 0.7422, norm(x): 0.8105, norm(y): 0.9919, norm:0.4660, tok/sec: 187762.49, flops:164.45, batch-reuse:1
@ 1057 train 4.5032 , allloss: 4.5032, dt: 693.77ms, fracRes: 0.1773, norm(attn): 0.3555, norm(output): 0.7461, norm(x): 0.8144, norm(y): 0.9919, norm:0.5402, tok/sec: 188925.89, flops:165.47, batch-reuse:1
@ 1058 train 4.5564 , allloss: 4.5564, dt: 699.96ms, fracRes: 0.1797, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8145, norm(y): 0.9917, norm:0.4757, tok/sec: 187257.25, flops:164.01, batch-reuse:1
@ 1059 train 4.5198 , allloss: 4.5198, dt: 696.06ms, fracRes: 0.1804, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8132, norm(y): 0.9917, norm:0.3999, tok/sec: 188306.14, flops:164.93, batch-reuse:1
@ 1060 train 4.5748 , allloss: 4.5748, dt: 703.46ms, fracRes: 0.1753, norm(attn): 0.3496, norm(output): 0.7344, norm(x): 0.8079, norm(y): 0.9919, norm:0.4744, tok/sec: 186323.48, flops:163.19, batch-reuse:1
@ 1061 train 4.5475 , allloss: 4.5475, dt: 692.83ms, fracRes: 0.1732, norm(attn): 0.3457, norm(output): 0.7422, norm(x): 0.8113, norm(y): 0.9918, norm:0.4517, tok/sec: 189184.06, flops:165.70, batch-reuse:1
@ 1062 train 4.4517 , allloss: 4.4517, dt: 693.31ms, fracRes: 0.1746, norm(attn): 0.3477, norm(output): 0.7383, norm(x): 0.8108, norm(y): 0.9917, norm:0.4420, tok/sec: 189051.21, flops:165.58, batch-reuse:1
@ 1063 train 4.4420 , allloss: 4.4420, dt: 701.89ms, fracRes: 0.1746, norm(attn): 0.3535, norm(output): 0.7383, norm(x): 0.8123, norm(y): 0.9917, norm:0.4346, tok/sec: 186741.89, flops:163.56, batch-reuse:1
@ 1064 train 4.5957 , allloss: 4.5957, dt: 703.12ms, fracRes: 0.1753, norm(attn): 0.3574, norm(output): 0.7422, norm(x): 0.8086, norm(y): 0.9918, norm:0.4277, tok/sec: 186413.51, flops:163.27, batch-reuse:1
@ 1065 train 4.6354 , allloss: 4.6354, dt: 704.30ms, fracRes: 0.1789, norm(attn): 0.3516, norm(output): 0.7305, norm(x): 0.8069, norm(y): 0.9917, norm:0.4871, tok/sec: 186102.53, flops:163.00, batch-reuse:1
@ 1066 train 4.5296 , allloss: 4.5296, dt: 701.21ms, fracRes: 0.1762, norm(attn): 0.3457, norm(output): 0.7305, norm(x): 0.8051, norm(y): 0.9917, norm:0.4831, tok/sec: 186923.23, flops:163.72, batch-reuse:1
@ 1067 train 4.4120 , allloss: 4.4120, dt: 698.47ms, fracRes: 0.1827, norm(attn): 0.3477, norm(output): 0.7344, norm(x): 0.8118, norm(y): 0.9916, norm:0.4771, tok/sec: 187655.65, flops:164.36, batch-reuse:1
@ 1068 train 4.4935 , allloss: 4.4935, dt: 698.19ms, fracRes: 0.1824, norm(attn): 0.3496, norm(output): 0.7344, norm(x): 0.8091, norm(y): 0.9916, norm:0.4204, tok/sec: 187731.33, flops:164.43, batch-reuse:1
@ 1069 train 4.4346 , allloss: 4.4346, dt: 701.46ms, fracRes: 0.1813, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8122, norm(y): 0.9916, norm:0.4826, tok/sec: 186856.84, flops:163.66, batch-reuse:1
@ 1070 train 4.4321 , allloss: 4.4321, dt: 703.59ms, fracRes: 0.1849, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8154, norm(y): 0.9916, norm:0.5340, tok/sec: 186290.90, flops:163.16, batch-reuse:1
@ 1071 train 4.3482 , allloss: 4.3482, dt: 692.07ms, fracRes: 0.1778, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8120, norm(y): 0.9916, norm:0.4932, tok/sec: 189391.64, flops:165.88, batch-reuse:1
@ 1072 train 4.4649 , allloss: 4.4649, dt: 693.49ms, fracRes: 0.1749, norm(attn): 0.3496, norm(output): 0.7383, norm(x): 0.8110, norm(y): 0.9917, norm:0.5262, tok/sec: 189003.57, flops:165.54, batch-reuse:1
@ 1073 train 4.3835 , allloss: 4.3835, dt: 698.02ms, fracRes: 0.1798, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8159, norm(y): 0.9916, norm:0.5208, tok/sec: 187776.67, flops:164.47, batch-reuse:1
@ 1074 train 4.3408 , allloss: 4.3408, dt: 693.93ms, fracRes: 0.1824, norm(attn): 0.3496, norm(output): 0.7422, norm(x): 0.8165, norm(y): 0.9917, norm:0.4427, tok/sec: 188883.30, flops:165.43, batch-reuse:1
@ 1075 train 4.4532 , allloss: 4.4532, dt: 711.98ms, fracRes: 0.1792, norm(attn): 0.3594, norm(output): 0.7422, norm(x): 0.8120, norm(y): 0.9918, norm:0.4559, tok/sec: 184093.86, flops:161.24, batch-reuse:1
@ 1076 train 4.5261 , allloss: 4.5261, dt: 713.34ms, fracRes: 0.1791, norm(attn): 0.3652, norm(output): 0.7422, norm(x): 0.8144, norm(y): 0.9919, norm:0.4747, tok/sec: 183742.96, flops:160.93, batch-reuse:1
@ 1077 train 4.3560 , allloss: 4.3560, dt: 700.70ms, fracRes: 0.1765, norm(attn): 0.3613, norm(output): 0.7422, norm(x): 0.8110, norm(y): 0.9919, norm:0.4469, tok/sec: 187058.26, flops:163.84, batch-reuse:1
@ 1078 train 4.6838 , allloss: 4.6838, dt: 682.59ms, fracRes: 0.1819, norm(attn): 0.3574, norm(output): 0.7305, norm(x): 0.8121, norm(y): 0.9916, norm:0.8508, tok/sec: 192020.69, flops:168.18, batch-reuse:1
@ 1079 train 4.3912 , allloss: 4.3912, dt: 685.82ms, fracRes: 0.1680, norm(attn): 0.3594, norm(output): 0.7383, norm(x): 0.8038, norm(y): 0.9918, norm:1.0243, tok/sec: 191117.57, flops:167.39, batch-reuse:1
@ 1080 train 4.5212 , allloss: 4.5212, dt: 706.42ms, fracRes: 0.1790, norm(attn): 0.3516, norm(output): 0.7500, norm(x): 0.8208, norm(y): 0.9918, norm:0.9027, tok/sec: 185543.52, flops:162.51, batch-reuse:1
@ 1081 train 4.4909 , allloss: 4.4909, dt: 707.71ms, fracRes: 0.1850, norm(attn): 0.3535, norm(output): 0.7461, norm(x): 0.8227, norm(y): 0.9918, norm:0.6105, tok/sec: 185205.61, flops:162.21, batch-reuse:1
@ 1082 train 4.6091 , allloss: 4.6091, dt: 710.71ms, fracRes: 0.1833, norm(attn): 0.3594, norm(output): 0.7500, norm(x): 0.8248, norm(y): 0.9917, norm:0.7166, tok/sec: 184423.95, flops:161.53, batch-reuse:1
@ 1083 train 4.4494 , allloss: 4.4494, dt: 703.34ms, fracRes: 0.1836, norm(attn): 0.3574, norm(output): 0.7461, norm(x): 0.8233, norm(y): 0.9917, norm:0.5828, tok/sec: 186356.70, flops:163.22, batch-reuse:1
@ 1084 train 4.4146 , allloss: 4.4146, dt: 715.30ms, fracRes: 0.1825, norm(attn): 0.3516, norm(output): 0.7422, norm(x): 0.8161, norm(y): 0.9917, norm:0.4920, tok/sec: 183239.97, flops:160.49, batch-reuse:1
@ 1085 train 4.3590 , allloss: 4.3590, dt: 718.63ms, fracRes: 0.1929, norm(attn): 0.3496, norm(output): 0.7500, norm(x): 0.8298, norm(y): 0.9915, norm:0.7235, tok/sec: 182391.66, flops:159.75, batch-reuse:1
@ 1086 train 4.4795 , allloss: 4.4795, dt: 715.23ms, fracRes: 0.1870, norm(attn): 0.3457, norm(output): 0.7461, norm(x): 0.8153, norm(y): 0.9917, norm:0.6266, tok/sec: 183257.37, flops:160.51, batch-reuse:1
@ 1087 train 4.4517 , allloss: 4.4517, dt: 715.77ms, fracRes: 0.1877, norm(attn): 0.3496, norm(output): 0.7383, norm(x): 0.8198, norm(y): 0.9916, norm:0.5058, tok/sec: 183119.66, flops:160.39, batch-reuse:1
@ 1088 train 4.5107 , allloss: 4.5107, dt: 685.61ms, fracRes: 0.1803, norm(attn): 0.3594, norm(output): 0.7461, norm(x): 0.8194, norm(y): 0.9918, norm:0.5562, tok/sec: 191174.46, flops:167.44, batch-reuse:1
@ 1089 train 4.3949 , allloss: 4.3949, dt: 702.82ms, fracRes: 0.1830, norm(attn): 0.3594, norm(output): 0.7461, norm(x): 0.8213, norm(y): 0.9918, norm:0.4542, tok/sec: 186494.01, flops:163.34, batch-reuse:1
@ 1090 train 4.4065 , allloss: 4.4065, dt: 700.41ms, fracRes: 0.1815, norm(attn): 0.3652, norm(output): 0.7461, norm(x): 0.8210, norm(y): 0.9918, norm:0.4862, tok/sec: 187135.69, flops:163.90, batch-reuse:1
@ 1091 train 4.4930 , allloss: 4.4930, dt: 704.32ms, fracRes: 0.1802, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8227, norm(y): 0.9918, norm:0.5110, tok/sec: 186096.42, flops:162.99, batch-reuse:1
@ 1092 train 4.5316 , allloss: 4.5316, dt: 701.04ms, fracRes: 0.1848, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8276, norm(y): 0.9917, norm:0.4898, tok/sec: 186967.80, flops:163.76, batch-reuse:1
@ 1093 train 4.4432 , allloss: 4.4432, dt: 688.63ms, fracRes: 0.1787, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8255, norm(y): 0.9919, norm:0.4423, tok/sec: 190338.49, flops:166.71, batch-reuse:1
@ 1094 train 4.3982 , allloss: 4.3982, dt: 695.92ms, fracRes: 0.1831, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8271, norm(y): 0.9918, norm:0.4462, tok/sec: 188344.26, flops:164.96, batch-reuse:1
@ 1095 train 4.4179 , allloss: 4.4179, dt: 696.76ms, fracRes: 0.1857, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8228, norm(y): 0.9918, norm:0.4192, tok/sec: 188116.18, flops:164.76, batch-reuse:1
@ 1096 train 4.4565 , allloss: 4.4565, dt: 696.27ms, fracRes: 0.1808, norm(attn): 0.3613, norm(output): 0.7461, norm(x): 0.8220, norm(y): 0.9917, norm:0.4371, tok/sec: 188249.27, flops:164.88, batch-reuse:1
@ 1097 train 4.3581 , allloss: 4.3581, dt: 702.04ms, fracRes: 0.1857, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8288, norm(y): 0.9917, norm:0.4365, tok/sec: 186702.57, flops:163.52, batch-reuse:1
@ 1098 train 4.3706 , allloss: 4.3706, dt: 703.63ms, fracRes: 0.1868, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8293, norm(y): 0.9916, norm:0.4026, tok/sec: 186279.85, flops:163.15, batch-reuse:1
@ 1099 train 4.4224 , allloss: 4.4224, dt: 700.54ms, fracRes: 0.1843, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8290, norm(y): 0.9917, norm:0.4248, tok/sec: 187101.43, flops:163.87, batch-reuse:1
@ 1100 train 4.3822 , allloss: 4.3822, dt: 698.03ms, fracRes: 0.1829, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8260, norm(y): 0.9917, norm:0.3972, tok/sec: 187773.97, flops:164.46, batch-reuse:1
@ 1101 train 4.5078 , allloss: 4.5078, dt: 692.97ms, fracRes: 0.1858, norm(attn): 0.3574, norm(output): 0.7461, norm(x): 0.8239, norm(y): 0.9916, norm:0.4252, tok/sec: 189145.20, flops:165.66, batch-reuse:1
@ 1102 train 4.4525 , allloss: 4.4525, dt: 690.51ms, fracRes: 0.1825, norm(attn): 0.3535, norm(output): 0.7461, norm(x): 0.8208, norm(y): 0.9917, norm:0.4312, tok/sec: 189818.65, flops:166.25, batch-reuse:1
@ 1103 train 4.4858 , allloss: 4.4858, dt: 702.48ms, fracRes: 0.1856, norm(attn): 0.3535, norm(output): 0.7461, norm(x): 0.8257, norm(y): 0.9916, norm:0.4201, tok/sec: 186584.90, flops:163.42, batch-reuse:1
@ 1104 train 4.4232 , allloss: 4.4232, dt: 710.31ms, fracRes: 0.1902, norm(attn): 0.3574, norm(output): 0.7578, norm(x): 0.8366, norm(y): 0.9915, norm:0.5809, tok/sec: 184527.52, flops:161.62, batch-reuse:1
@ 1105 train 4.4212 , allloss: 4.4212, dt: 715.53ms, fracRes: 0.1866, norm(attn): 0.3574, norm(output): 0.7461, norm(x): 0.8265, norm(y): 0.9916, norm:0.4099, tok/sec: 183180.99, flops:160.44, batch-reuse:1
@ 1106 train 4.4599 , allloss: 4.4599, dt: 715.26ms, fracRes: 0.1823, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8200, norm(y): 0.9917, norm:0.4872, tok/sec: 183252.12, flops:160.50, batch-reuse:1
@ 1107 train 4.4508 , allloss: 4.4508, dt: 710.61ms, fracRes: 0.1855, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8312, norm(y): 0.9916, norm:0.5369, tok/sec: 184449.07, flops:161.55, batch-reuse:1
@ 1108 train 4.4132 , allloss: 4.4132, dt: 706.34ms, fracRes: 0.1860, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8307, norm(y): 0.9916, norm:0.4944, tok/sec: 185564.32, flops:162.53, batch-reuse:1
@ 1109 train 4.4231 , allloss: 4.4231, dt: 704.21ms, fracRes: 0.1842, norm(attn): 0.3555, norm(output): 0.7500, norm(x): 0.8278, norm(y): 0.9916, norm:0.4726, tok/sec: 186126.48, flops:163.02, batch-reuse:1
@ 1110 train 4.4445 , allloss: 4.4445, dt: 703.33ms, fracRes: 0.1856, norm(attn): 0.3535, norm(output): 0.7500, norm(x): 0.8277, norm(y): 0.9916, norm:0.4723, tok/sec: 186360.24, flops:163.22, batch-reuse:1
@ 1111 train 4.4385 , allloss: 4.4385, dt: 707.33ms, fracRes: 0.1898, norm(attn): 0.3574, norm(output): 0.7500, norm(x): 0.8281, norm(y): 0.9916, norm:0.4678, tok/sec: 185305.62, flops:162.30, batch-reuse:1
@ 1112 train 4.5200 , allloss: 4.5200, dt: 708.51ms, fracRes: 0.1883, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8291, norm(y): 0.9916, norm:0.4647, tok/sec: 184996.33, flops:162.03, batch-reuse:1
@ 1113 train 4.5683 , allloss: 4.5683, dt: 706.63ms, fracRes: 0.1909, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8299, norm(y): 0.9916, norm:0.4632, tok/sec: 185489.06, flops:162.46, batch-reuse:1
@ 1114 train 4.7436 , allloss: 4.7436, dt: 703.27ms, fracRes: 0.1923, norm(attn): 0.3672, norm(output): 0.7461, norm(x): 0.8313, norm(y): 0.9915, norm:0.5992, tok/sec: 186374.71, flops:163.24, batch-reuse:1
@ 1115 train 4.6238 , allloss: 4.6238, dt: 703.82ms, fracRes: 0.1932, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8394, norm(y): 0.9914, norm:0.7155, tok/sec: 186229.06, flops:163.11, batch-reuse:1
@ 1116 train 4.4975 , allloss: 4.4975, dt: 699.12ms, fracRes: 0.1857, norm(attn): 0.3633, norm(output): 0.7461, norm(x): 0.8294, norm(y): 0.9916, norm:0.5451, tok/sec: 187481.84, flops:164.21, batch-reuse:1
@ 1117 train 4.5423 , allloss: 4.5423, dt: 701.61ms, fracRes: 0.1872, norm(attn): 0.3613, norm(output): 0.7461, norm(x): 0.8265, norm(y): 0.9917, norm:0.5310, tok/sec: 186815.19, flops:163.62, batch-reuse:1
@ 1118 train 4.6122 , allloss: 4.6122, dt: 707.24ms, fracRes: 0.1843, norm(attn): 0.3594, norm(output): 0.7500, norm(x): 0.8313, norm(y): 0.9916, norm:0.4919, tok/sec: 185328.73, flops:162.32, batch-reuse:1
@ 1119 train 4.6483 , allloss: 4.6483, dt: 711.65ms, fracRes: 0.1834, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8299, norm(y): 0.9917, norm:0.4963, tok/sec: 184180.58, flops:161.32, batch-reuse:1
@ 1120 train 4.5970 , allloss: 4.5970, dt: 704.58ms, fracRes: 0.1885, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8292, norm(y): 0.9916, norm:0.4471, tok/sec: 186028.03, flops:162.93, batch-reuse:1
@ 1121 train 4.6055 , allloss: 4.6055, dt: 695.05ms, fracRes: 0.1889, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8340, norm(y): 0.9916, norm:0.4845, tok/sec: 188579.56, flops:165.17, batch-reuse:1
@ 1122 train 4.5731 , allloss: 4.5731, dt: 693.08ms, fracRes: 0.1923, norm(attn): 0.3613, norm(output): 0.7500, norm(x): 0.8365, norm(y): 0.9916, norm:0.5080, tok/sec: 189114.29, flops:165.64, batch-reuse:1
@ 1123 train 4.6453 , allloss: 4.6453, dt: 715.18ms, fracRes: 0.1912, norm(attn): 0.3672, norm(output): 0.7500, norm(x): 0.8320, norm(y): 0.9915, norm:0.5250, tok/sec: 183270.88, flops:160.52, batch-reuse:1
@ 1124 train 4.5748 , allloss: 4.5748, dt: 710.07ms, fracRes: 0.1895, norm(attn): 0.3652, norm(output): 0.7539, norm(x): 0.8324, norm(y): 0.9916, norm:0.5195, tok/sec: 184591.39, flops:161.68, batch-reuse:1
@ 1125 train 4.5377 , allloss: 4.5377, dt: 686.73ms, fracRes: 0.1901, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8345, norm(y): 0.9916, norm:0.4422, tok/sec: 190863.38, flops:167.17, batch-reuse:1
@ 1126 train 4.6406 , allloss: 4.6406, dt: 699.78ms, fracRes: 0.1833, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8268, norm(y): 0.9917, norm:0.4315, tok/sec: 187304.07, flops:164.05, batch-reuse:1
@ 1127 train 4.5739 , allloss: 4.5739, dt: 685.82ms, fracRes: 0.1869, norm(attn): 0.3672, norm(output): 0.7500, norm(x): 0.8336, norm(y): 0.9916, norm:0.4411, tok/sec: 191118.37, flops:167.39, batch-reuse:1
@ 1128 train 4.5266 , allloss: 4.5266, dt: 700.09ms, fracRes: 0.1933, norm(attn): 0.3652, norm(output): 0.7539, norm(x): 0.8387, norm(y): 0.9915, norm:0.4749, tok/sec: 187222.04, flops:163.98, batch-reuse:1
@ 1129 train 4.5777 , allloss: 4.5777, dt: 695.00ms, fracRes: 0.1901, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8322, norm(y): 0.9915, norm:0.4549, tok/sec: 188592.69, flops:165.18, batch-reuse:1
@ 1130 train 4.5393 , allloss: 4.5393, dt: 680.71ms, fracRes: 0.1882, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8318, norm(y): 0.9916, norm:0.4022, tok/sec: 192551.47, flops:168.65, batch-reuse:1
@ 1131 train 4.5581 , allloss: 4.5581, dt: 700.01ms, fracRes: 0.1843, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8318, norm(y): 0.9915, norm:0.4204, tok/sec: 187242.96, flops:164.00, batch-reuse:1
@ 1132 train 4.5487 , allloss: 4.5487, dt: 704.94ms, fracRes: 0.1832, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8316, norm(y): 0.9915, norm:0.4466, tok/sec: 185933.41, flops:162.85, batch-reuse:1
@ 1133 train 4.5475 , allloss: 4.5475, dt: 694.08ms, fracRes: 0.1866, norm(attn): 0.3574, norm(output): 0.7539, norm(x): 0.8338, norm(y): 0.9915, norm:0.4424, tok/sec: 188842.36, flops:165.40, batch-reuse:1
@ 1134 train 4.5137 , allloss: 4.5137, dt: 696.00ms, fracRes: 0.1902, norm(attn): 0.3613, norm(output): 0.7500, norm(x): 0.8376, norm(y): 0.9915, norm:0.4637, tok/sec: 188322.72, flops:164.94, batch-reuse:1
@ 1135 train 4.5958 , allloss: 4.5958, dt: 689.48ms, fracRes: 0.1897, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8364, norm(y): 0.9915, norm:0.4435, tok/sec: 190101.81, flops:166.50, batch-reuse:1
@ 1136 train 4.5768 , allloss: 4.5768, dt: 685.35ms, fracRes: 0.1896, norm(attn): 0.3652, norm(output): 0.7539, norm(x): 0.8392, norm(y): 0.9915, norm:0.4429, tok/sec: 191248.48, flops:167.51, batch-reuse:1
@ 1137 train 4.5858 , allloss: 4.5858, dt: 696.88ms, fracRes: 0.1911, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8381, norm(y): 0.9915, norm:0.4173, tok/sec: 188084.33, flops:164.73, batch-reuse:1
@ 1138 train 4.7157 , allloss: 4.7157, dt: 699.58ms, fracRes: 0.1920, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8387, norm(y): 0.9914, norm:0.4697, tok/sec: 187358.97, flops:164.10, batch-reuse:1
@ 1139 train 4.4927 , allloss: 4.4927, dt: 702.86ms, fracRes: 0.1990, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8403, norm(y): 0.9914, norm:0.4950, tok/sec: 186485.09, flops:163.33, batch-reuse:1
@ 1140 train 4.4966 , allloss: 4.4966, dt: 690.73ms, fracRes: 0.1994, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8378, norm(y): 0.9914, norm:0.4382, tok/sec: 189757.72, flops:166.20, batch-reuse:1
@ 1141 train 4.4269 , allloss: 4.4269, dt: 720.43ms, fracRes: 0.1965, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8348, norm(y): 0.9915, norm:0.4732, tok/sec: 181935.63, flops:159.35, batch-reuse:1
@ 1142 train 4.5020 , allloss: 4.5020, dt: 686.92ms, fracRes: 0.1951, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8360, norm(y): 0.9914, norm:0.4753, tok/sec: 190810.85, flops:167.12, batch-reuse:1
@ 1143 train 4.4484 , allloss: 4.4484, dt: 699.88ms, fracRes: 0.2072, norm(attn): 0.3652, norm(output): 0.7539, norm(x): 0.8490, norm(y): 0.9913, norm:0.8531, tok/sec: 187279.13, flops:164.03, batch-reuse:1
@ 1144 train 4.5818 , allloss: 4.5818, dt: 707.52ms, fracRes: 0.1910, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8367, norm(y): 0.9915, norm:0.6896, tok/sec: 185256.79, flops:162.26, batch-reuse:1
@ 1145 train 4.6023 , allloss: 4.6023, dt: 688.41ms, fracRes: 0.1937, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8473, norm(y): 0.9916, norm:0.5511, tok/sec: 190396.83, flops:166.76, batch-reuse:1
@ 1146 train 4.5581 , allloss: 4.5581, dt: 682.24ms, fracRes: 0.1884, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8455, norm(y): 0.9917, norm:0.5877, tok/sec: 192119.20, flops:168.27, batch-reuse:1
@ 1147 train 4.5610 , allloss: 4.5610, dt: 690.95ms, fracRes: 0.1905, norm(attn): 0.3691, norm(output): 0.7539, norm(x): 0.8457, norm(y): 0.9917, norm:0.5754, tok/sec: 189697.74, flops:166.15, batch-reuse:1
@ 1148 train 4.5359 , allloss: 4.5359, dt: 712.24ms, fracRes: 0.1891, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8419, norm(y): 0.9917, norm:0.5028, tok/sec: 184028.66, flops:161.18, batch-reuse:1
@ 1149 train 4.5734 , allloss: 4.5734, dt: 698.86ms, fracRes: 0.1867, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8390, norm(y): 0.9916, norm:0.4310, tok/sec: 187551.94, flops:164.27, batch-reuse:1
@ 1150 train 4.5818 , allloss: 4.5818, dt: 686.88ms, fracRes: 0.1876, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8378, norm(y): 0.9915, norm:0.4326, tok/sec: 190823.43, flops:167.13, batch-reuse:1
@ 1151 train 4.5808 , allloss: 4.5808, dt: 688.66ms, fracRes: 0.1932, norm(attn): 0.3691, norm(output): 0.7539, norm(x): 0.8414, norm(y): 0.9914, norm:0.5442, tok/sec: 190327.69, flops:166.70, batch-reuse:1
@ 1152 train 4.4502 , allloss: 4.4502, dt: 694.92ms, fracRes: 0.1970, norm(attn): 0.3691, norm(output): 0.7539, norm(x): 0.8461, norm(y): 0.9913, norm:0.5152, tok/sec: 188614.37, flops:165.20, batch-reuse:1
@ 1153 train 4.4911 , allloss: 4.4911, dt: 693.77ms, fracRes: 0.1935, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8396, norm(y): 0.9914, norm:0.4681, tok/sec: 188926.99, flops:165.47, batch-reuse:1
@ 1154 train 4.5617 , allloss: 4.5617, dt: 701.89ms, fracRes: 0.1937, norm(attn): 0.3613, norm(output): 0.7500, norm(x): 0.8395, norm(y): 0.9915, norm:0.5619, tok/sec: 186740.25, flops:163.56, batch-reuse:1
@ 1155 train 4.5292 , allloss: 4.5292, dt: 697.32ms, fracRes: 0.1952, norm(attn): 0.3594, norm(output): 0.7500, norm(x): 0.8350, norm(y): 0.9915, norm:0.5059, tok/sec: 187964.97, flops:164.63, batch-reuse:1
@ 1156 train 4.5043 , allloss: 4.5043, dt: 697.82ms, fracRes: 0.1947, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8387, norm(y): 0.9914, norm:0.5205, tok/sec: 187829.34, flops:164.51, batch-reuse:1
@ 1157 train 4.5170 , allloss: 4.5170, dt: 692.39ms, fracRes: 0.1930, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8392, norm(y): 0.9915, norm:0.4530, tok/sec: 189302.36, flops:165.80, batch-reuse:1
@ 1158 train 4.5322 , allloss: 4.5322, dt: 692.39ms, fracRes: 0.1950, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8444, norm(y): 0.9915, norm:0.4943, tok/sec: 189303.14, flops:165.80, batch-reuse:1
@ 1159 train 4.5318 , allloss: 4.5318, dt: 713.79ms, fracRes: 0.2036, norm(attn): 0.3672, norm(output): 0.7578, norm(x): 0.8541, norm(y): 0.9913, norm:0.5322, tok/sec: 183628.99, flops:160.83, batch-reuse:1
@ 1160 train 4.6277 , allloss: 4.6277, dt: 701.31ms, fracRes: 0.1926, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8442, norm(y): 0.9915, norm:0.5004, tok/sec: 186894.96, flops:163.69, batch-reuse:1
@ 1161 train 4.4459 , allloss: 4.4459, dt: 693.29ms, fracRes: 0.1924, norm(attn): 0.3672, norm(output): 0.7578, norm(x): 0.8483, norm(y): 0.9915, norm:0.4824, tok/sec: 189058.62, flops:165.59, batch-reuse:1
@ 1162 train 4.4340 , allloss: 4.4340, dt: 705.97ms, fracRes: 0.1949, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8462, norm(y): 0.9915, norm:0.4575, tok/sec: 185663.21, flops:162.61, batch-reuse:1
@ 1163 train 4.5295 , allloss: 4.5295, dt: 690.07ms, fracRes: 0.1982, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8462, norm(y): 0.9915, norm:0.4274, tok/sec: 189939.58, flops:166.36, batch-reuse:1
@ 1164 train 4.4893 , allloss: 4.4893, dt: 703.43ms, fracRes: 0.1971, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8454, norm(y): 0.9915, norm:0.4772, tok/sec: 186333.58, flops:163.20, batch-reuse:1
@ 1165 train 4.4606 , allloss: 4.4606, dt: 688.98ms, fracRes: 0.2018, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8533, norm(y): 0.9914, norm:0.4578, tok/sec: 190240.09, flops:166.62, batch-reuse:1
@ 1166 train 4.5228 , allloss: 4.5228, dt: 697.36ms, fracRes: 0.1966, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8487, norm(y): 0.9914, norm:0.4581, tok/sec: 187953.92, flops:164.62, batch-reuse:1
@ 1167 train 4.4664 , allloss: 4.4664, dt: 698.70ms, fracRes: 0.1977, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8453, norm(y): 0.9914, norm:0.3834, tok/sec: 187593.28, flops:164.30, batch-reuse:1
@ 1168 train 4.4110 , allloss: 4.4110, dt: 692.79ms, fracRes: 0.1962, norm(attn): 0.3750, norm(output): 0.7500, norm(x): 0.8384, norm(y): 0.9914, norm:0.4295, tok/sec: 189193.11, flops:165.71, batch-reuse:1
@ 1169 train 4.4590 , allloss: 4.4590, dt: 696.61ms, fracRes: 0.1905, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8378, norm(y): 0.9915, norm:0.4049, tok/sec: 188156.29, flops:164.80, batch-reuse:1
@ 1170 train 4.4517 , allloss: 4.4517, dt: 695.59ms, fracRes: 0.1921, norm(attn): 0.3652, norm(output): 0.7500, norm(x): 0.8384, norm(y): 0.9914, norm:0.4182, tok/sec: 188434.00, flops:165.04, batch-reuse:1
@ 1171 train 4.5286 , allloss: 4.5286, dt: 693.88ms, fracRes: 0.1986, norm(attn): 0.3555, norm(output): 0.7500, norm(x): 0.8401, norm(y): 0.9913, norm:0.4511, tok/sec: 188896.87, flops:165.45, batch-reuse:1
@ 1172 train 4.5364 , allloss: 4.5364, dt: 697.50ms, fracRes: 0.1978, norm(attn): 0.3652, norm(output): 0.7539, norm(x): 0.8439, norm(y): 0.9913, norm:0.4029, tok/sec: 187916.14, flops:164.59, batch-reuse:1
@ 1173 train 4.4336 , allloss: 4.4336, dt: 691.07ms, fracRes: 0.1961, norm(attn): 0.3711, norm(output): 0.7500, norm(x): 0.8399, norm(y): 0.9913, norm:0.4679, tok/sec: 189664.89, flops:166.12, batch-reuse:1
@ 1174 train 4.4579 , allloss: 4.4579, dt: 679.40ms, fracRes: 0.1921, norm(attn): 0.3711, norm(output): 0.7500, norm(x): 0.8344, norm(y): 0.9914, norm:0.4025, tok/sec: 192922.91, flops:168.97, batch-reuse:1
@ 1175 train 4.5492 , allloss: 4.5492, dt: 704.53ms, fracRes: 0.1951, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8384, norm(y): 0.9914, norm:0.4396, tok/sec: 186041.44, flops:162.95, batch-reuse:1
@ 1176 train 4.4226 , allloss: 4.4226, dt: 711.85ms, fracRes: 0.1950, norm(attn): 0.3672, norm(output): 0.7500, norm(x): 0.8406, norm(y): 0.9914, norm:0.4658, tok/sec: 184129.93, flops:161.27, batch-reuse:1
@ 1177 train 4.4643 , allloss: 4.4643, dt: 711.15ms, fracRes: 0.1951, norm(attn): 0.3730, norm(output): 0.7500, norm(x): 0.8379, norm(y): 0.9914, norm:0.4440, tok/sec: 184309.26, flops:161.43, batch-reuse:1
@ 1178 train 4.6507 , allloss: 4.6507, dt: 707.75ms, fracRes: 0.1989, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8450, norm(y): 0.9913, norm:0.4912, tok/sec: 185196.25, flops:162.21, batch-reuse:1
@ 1179 train 4.5017 , allloss: 4.5017, dt: 706.71ms, fracRes: 0.1942, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8428, norm(y): 0.9914, norm:0.5232, tok/sec: 185466.97, flops:162.44, batch-reuse:1
@ 1180 train 4.4842 , allloss: 4.4842, dt: 684.50ms, fracRes: 0.1967, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8422, norm(y): 0.9913, norm:0.5112, tok/sec: 191484.43, flops:167.71, batch-reuse:1
@ 1181 train 4.4661 , allloss: 4.4661, dt: 711.25ms, fracRes: 0.1980, norm(attn): 0.3594, norm(output): 0.7500, norm(x): 0.8420, norm(y): 0.9913, norm:0.4937, tok/sec: 184283.12, flops:161.41, batch-reuse:1
@ 1182 train 4.4825 , allloss: 4.4825, dt: 674.70ms, fracRes: 0.1992, norm(attn): 0.3613, norm(output): 0.7578, norm(x): 0.8503, norm(y): 0.9912, norm:0.6221, tok/sec: 194265.84, flops:170.15, batch-reuse:1
@ 1183 train 4.5116 , allloss: 4.5116, dt: 697.23ms, fracRes: 0.1921, norm(attn): 0.3633, norm(output): 0.7500, norm(x): 0.8371, norm(y): 0.9914, norm:0.5256, tok/sec: 187990.49, flops:164.65, batch-reuse:1
@ 1184 train 4.5416 , allloss: 4.5416, dt: 686.31ms, fracRes: 0.1972, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8408, norm(y): 0.9913, norm:0.4866, tok/sec: 190979.81, flops:167.27, batch-reuse:1
@ 1185 train 4.4639 , allloss: 4.4639, dt: 709.82ms, fracRes: 0.1980, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8446, norm(y): 0.9913, norm:0.5092, tok/sec: 184656.50, flops:161.73, batch-reuse:1
@ 1186 train 4.5089 , allloss: 4.5089, dt: 682.70ms, fracRes: 0.1937, norm(attn): 0.3691, norm(output): 0.7539, norm(x): 0.8425, norm(y): 0.9914, norm:0.4276, tok/sec: 191989.84, flops:168.16, batch-reuse:1
@ 1187 train 4.5108 , allloss: 4.5108, dt: 687.71ms, fracRes: 0.1923, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8415, norm(y): 0.9915, norm:0.4423, tok/sec: 190591.95, flops:166.93, batch-reuse:1
@ 1188 train 4.4156 , allloss: 4.4156, dt: 698.78ms, fracRes: 0.1946, norm(attn): 0.3711, norm(output): 0.7500, norm(x): 0.8405, norm(y): 0.9914, norm:0.4003, tok/sec: 187573.57, flops:164.29, batch-reuse:1
@ 1189 train 4.4319 , allloss: 4.4319, dt: 697.97ms, fracRes: 0.2014, norm(attn): 0.3691, norm(output): 0.7539, norm(x): 0.8481, norm(y): 0.9913, norm:0.4737, tok/sec: 187789.30, flops:164.48, batch-reuse:1
@ 1190 train 4.4573 , allloss: 4.4573, dt: 698.42ms, fracRes: 0.2038, norm(attn): 0.3672, norm(output): 0.7656, norm(x): 0.8588, norm(y): 0.9913, norm:0.5200, tok/sec: 187670.19, flops:164.37, batch-reuse:1
@ 1191 train 4.5841 , allloss: 4.5841, dt: 704.81ms, fracRes: 0.2008, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8540, norm(y): 0.9914, norm:0.4477, tok/sec: 185966.74, flops:162.88, batch-reuse:1
@ 1192 train 4.4773 , allloss: 4.4773, dt: 702.07ms, fracRes: 0.1991, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8534, norm(y): 0.9914, norm:0.4391, tok/sec: 186693.51, flops:163.52, batch-reuse:1
@ 1193 train 4.4751 , allloss: 4.4751, dt: 694.67ms, fracRes: 0.2007, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8526, norm(y): 0.9913, norm:0.4467, tok/sec: 188683.38, flops:165.26, batch-reuse:1
@ 1194 train 4.4814 , allloss: 4.4814, dt: 698.09ms, fracRes: 0.2037, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8545, norm(y): 0.9912, norm:0.4522, tok/sec: 187756.79, flops:164.45, batch-reuse:1
@ 1195 train 4.4618 , allloss: 4.4618, dt: 686.08ms, fracRes: 0.1998, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8474, norm(y): 0.9913, norm:0.5016, tok/sec: 191044.91, flops:167.33, batch-reuse:1
@ 1196 train 4.4199 , allloss: 4.4199, dt: 700.59ms, fracRes: 0.2005, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8507, norm(y): 0.9914, norm:0.4595, tok/sec: 187089.20, flops:163.86, batch-reuse:1
@ 1197 train 4.3873 , allloss: 4.3873, dt: 700.52ms, fracRes: 0.2029, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8519, norm(y): 0.9914, norm:0.4457, tok/sec: 187107.28, flops:163.88, batch-reuse:1
@ 1198 train 4.4345 , allloss: 4.4345, dt: 694.24ms, fracRes: 0.1998, norm(attn): 0.3691, norm(output): 0.7500, norm(x): 0.8448, norm(y): 0.9914, norm:0.4090, tok/sec: 188798.59, flops:165.36, batch-reuse:1
@ 1199 train 4.5151 , allloss: 4.5151, dt: 698.97ms, fracRes: 0.1996, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8490, norm(y): 0.9913, norm:0.4191, tok/sec: 187522.32, flops:164.24, batch-reuse:1
@ 1200 train 4.3997 , allloss: 4.3997, dt: 697.04ms, fracRes: 0.1938, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8461, norm(y): 0.9914, norm:0.4410, tok/sec: 188040.00, flops:164.70, batch-reuse:1
@ 1201 train 4.4387 , allloss: 4.4387, dt: 697.78ms, fracRes: 0.1967, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8441, norm(y): 0.9914, norm:0.4811, tok/sec: 187841.40, flops:164.52, batch-reuse:1
@ 1202 train 4.4832 , allloss: 4.4832, dt: 701.91ms, fracRes: 0.1966, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8452, norm(y): 0.9914, norm:0.4543, tok/sec: 186735.23, flops:163.55, batch-reuse:1
@ 1203 train 4.8644 , allloss: 4.8644, dt: 694.28ms, fracRes: 0.2061, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8509, norm(y): 0.9911, norm:0.6896, tok/sec: 188789.51, flops:165.35, batch-reuse:1
@ 1204 train 4.4497 , allloss: 4.4497, dt: 697.09ms, fracRes: 0.2014, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8494, norm(y): 0.9912, norm:0.5925, tok/sec: 188027.85, flops:164.69, batch-reuse:1
@ 1205 train 4.3987 , allloss: 4.3987, dt: 700.19ms, fracRes: 0.2019, norm(attn): 0.3633, norm(output): 0.7539, norm(x): 0.8478, norm(y): 0.9912, norm:0.5716, tok/sec: 187195.27, flops:163.96, batch-reuse:1
@ 1206 train 4.4126 , allloss: 4.4126, dt: 688.72ms, fracRes: 0.1976, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8483, norm(y): 0.9913, norm:0.5118, tok/sec: 190312.40, flops:166.69, batch-reuse:1
@ 1207 train 4.3924 , allloss: 4.3924, dt: 703.34ms, fracRes: 0.1980, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8495, norm(y): 0.9913, norm:0.5261, tok/sec: 186355.82, flops:163.22, batch-reuse:1
@ 1208 train 4.3934 , allloss: 4.3934, dt: 685.43ms, fracRes: 0.1985, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8479, norm(y): 0.9913, norm:0.5002, tok/sec: 191226.53, flops:167.49, batch-reuse:1
@ 1209 train 4.5249 , allloss: 4.5249, dt: 686.66ms, fracRes: 0.1976, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8499, norm(y): 0.9913, norm:0.4836, tok/sec: 190882.93, flops:167.19, batch-reuse:1
@ 1210 train 4.3521 , allloss: 4.3521, dt: 698.04ms, fracRes: 0.1997, norm(attn): 0.3711, norm(output): 0.7656, norm(x): 0.8549, norm(y): 0.9913, norm:0.6155, tok/sec: 187770.38, flops:164.46, batch-reuse:1
@ 1211 train 4.4548 , allloss: 4.4548, dt: 715.01ms, fracRes: 0.2006, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8547, norm(y): 0.9912, norm:0.5111, tok/sec: 183315.98, flops:160.56, batch-reuse:1
@ 1212 train 4.5466 , allloss: 4.5466, dt: 695.62ms, fracRes: 0.2003, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8528, norm(y): 0.9913, norm:0.4623, tok/sec: 188425.02, flops:165.03, batch-reuse:1
@ 1213 train 4.3570 , allloss: 4.3570, dt: 699.06ms, fracRes: 0.1979, norm(attn): 0.3672, norm(output): 0.7539, norm(x): 0.8496, norm(y): 0.9914, norm:0.4572, tok/sec: 187498.40, flops:164.22, batch-reuse:1
@ 1214 train 4.4031 , allloss: 4.4031, dt: 702.48ms, fracRes: 0.2051, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8545, norm(y): 0.9913, norm:0.4095, tok/sec: 186585.41, flops:163.42, batch-reuse:1
@ 1215 train 4.4805 , allloss: 4.4805, dt: 701.36ms, fracRes: 0.2040, norm(attn): 0.3711, norm(output): 0.7656, norm(x): 0.8519, norm(y): 0.9913, norm:0.4047, tok/sec: 186883.52, flops:163.68, batch-reuse:1
@ 1216 train 4.4036 , allloss: 4.4036, dt: 701.16ms, fracRes: 0.2029, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8511, norm(y): 0.9914, norm:0.4076, tok/sec: 186936.01, flops:163.73, batch-reuse:1
@ 1217 train 4.4464 , allloss: 4.4464, dt: 689.52ms, fracRes: 0.1990, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8500, norm(y): 0.9914, norm:0.4074, tok/sec: 190091.56, flops:166.49, batch-reuse:1
@ 1218 train 4.2807 , allloss: 4.2807, dt: 694.32ms, fracRes: 0.2023, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8542, norm(y): 0.9913, norm:0.5648, tok/sec: 188777.71, flops:165.34, batch-reuse:1
@ 1219 train 4.3632 , allloss: 4.3632, dt: 680.56ms, fracRes: 0.1976, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8525, norm(y): 0.9913, norm:0.3870, tok/sec: 192595.65, flops:168.69, batch-reuse:1
@ 1220 train 4.4543 , allloss: 4.4543, dt: 697.52ms, fracRes: 0.1937, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8518, norm(y): 0.9914, norm:0.4560, tok/sec: 187911.32, flops:164.58, batch-reuse:1
@ 1221 train 4.4309 , allloss: 4.4309, dt: 701.03ms, fracRes: 0.2000, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8533, norm(y): 0.9912, norm:0.4374, tok/sec: 186971.17, flops:163.76, batch-reuse:1
@ 1222 train 4.3935 , allloss: 4.3935, dt: 685.96ms, fracRes: 0.2019, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8526, norm(y): 0.9912, norm:0.4351, tok/sec: 191078.18, flops:167.36, batch-reuse:1
@ 1223 train 4.3473 , allloss: 4.3473, dt: 684.82ms, fracRes: 0.2036, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8635, norm(y): 0.9913, norm:0.5341, tok/sec: 191395.56, flops:167.63, batch-reuse:1
@ 1224 train 4.3378 , allloss: 4.3378, dt: 692.82ms, fracRes: 0.1972, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8511, norm(y): 0.9913, norm:0.4913, tok/sec: 189187.18, flops:165.70, batch-reuse:1
@ 1225 train 4.3464 , allloss: 4.3464, dt: 691.41ms, fracRes: 0.2035, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8593, norm(y): 0.9912, norm:0.4617, tok/sec: 189572.28, flops:166.04, batch-reuse:1
@ 1226 train 4.4613 , allloss: 4.4613, dt: 710.50ms, fracRes: 0.1998, norm(attn): 0.3672, norm(output): 0.7617, norm(x): 0.8522, norm(y): 0.9913, norm:0.4814, tok/sec: 184478.47, flops:161.58, batch-reuse:1
@ 1227 train 4.3386 , allloss: 4.3386, dt: 709.44ms, fracRes: 0.1999, norm(attn): 0.3672, norm(output): 0.7695, norm(x): 0.8543, norm(y): 0.9912, norm:0.4485, tok/sec: 184755.11, flops:161.82, batch-reuse:1
@ 1228 train 4.3556 , allloss: 4.3556, dt: 711.72ms, fracRes: 0.2017, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8545, norm(y): 0.9913, norm:0.4182, tok/sec: 184161.02, flops:161.30, batch-reuse:1
@ 1229 train 4.3824 , allloss: 4.3824, dt: 707.61ms, fracRes: 0.2007, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8517, norm(y): 0.9913, norm:0.4423, tok/sec: 185231.88, flops:162.24, batch-reuse:1
@ 1230 train 4.4590 , allloss: 4.4590, dt: 696.12ms, fracRes: 0.2006, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8501, norm(y): 0.9912, norm:0.4172, tok/sec: 188289.88, flops:164.91, batch-reuse:1
@ 1231 train 4.3536 , allloss: 4.3536, dt: 706.50ms, fracRes: 0.2002, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8516, norm(y): 0.9912, norm:0.4778, tok/sec: 185522.67, flops:162.49, batch-reuse:1
@ 1232 train 4.3396 , allloss: 4.3396, dt: 697.51ms, fracRes: 0.2018, norm(attn): 0.3750, norm(output): 0.7578, norm(x): 0.8494, norm(y): 0.9912, norm:0.4411, tok/sec: 187912.87, flops:164.58, batch-reuse:1
@ 1233 train 4.4155 , allloss: 4.4155, dt: 686.58ms, fracRes: 0.2103, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8542, norm(y): 0.9911, norm:0.4129, tok/sec: 190904.27, flops:167.20, batch-reuse:1
@ 1234 train 4.4232 , allloss: 4.4232, dt: 691.38ms, fracRes: 0.2064, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8578, norm(y): 0.9912, norm:0.4477, tok/sec: 189580.32, flops:166.04, batch-reuse:1
@ 1235 train 4.4370 , allloss: 4.4370, dt: 698.83ms, fracRes: 0.2040, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8606, norm(y): 0.9913, norm:0.4907, tok/sec: 187560.13, flops:164.28, batch-reuse:1
@ 1236 train 4.3421 , allloss: 4.3421, dt: 695.24ms, fracRes: 0.2086, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8613, norm(y): 0.9912, norm:0.5226, tok/sec: 188527.63, flops:165.12, batch-reuse:1
@ 1237 train 4.4320 , allloss: 4.4320, dt: 692.80ms, fracRes: 0.2034, norm(attn): 0.3711, norm(output): 0.7578, norm(x): 0.8538, norm(y): 0.9912, norm:0.4672, tok/sec: 189190.83, flops:165.70, batch-reuse:1
@ 1238 train 4.3756 , allloss: 4.3756, dt: 708.71ms, fracRes: 0.1959, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8458, norm(y): 0.9914, norm:0.4339, tok/sec: 184945.67, flops:161.99, batch-reuse:1
@ 1239 train 4.2857 , allloss: 4.2857, dt: 697.91ms, fracRes: 0.1963, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8486, norm(y): 0.9914, norm:0.4511, tok/sec: 187806.37, flops:164.49, batch-reuse:1
@ 1240 train 4.3261 , allloss: 4.3261, dt: 699.00ms, fracRes: 0.2008, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8520, norm(y): 0.9912, norm:0.4116, tok/sec: 187513.56, flops:164.23, batch-reuse:1
@ 1241 train 4.3238 , allloss: 4.3238, dt: 693.77ms, fracRes: 0.2028, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8534, norm(y): 0.9912, norm:0.3983, tok/sec: 188926.02, flops:165.47, batch-reuse:1
@ 1242 train 4.4087 , allloss: 4.4087, dt: 704.94ms, fracRes: 0.2031, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8522, norm(y): 0.9912, norm:0.4033, tok/sec: 185934.79, flops:162.85, batch-reuse:1
@ 1243 train 4.3920 , allloss: 4.3920, dt: 690.35ms, fracRes: 0.1990, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8523, norm(y): 0.9913, norm:0.4357, tok/sec: 189864.28, flops:166.29, batch-reuse:1
@ 1244 train 4.3970 , allloss: 4.3970, dt: 697.21ms, fracRes: 0.2030, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8545, norm(y): 0.9912, norm:0.4150, tok/sec: 187996.27, flops:164.66, batch-reuse:1
@ 1245 train 4.4207 , allloss: 4.4207, dt: 700.71ms, fracRes: 0.2058, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8541, norm(y): 0.9910, norm:0.4104, tok/sec: 187056.10, flops:163.83, batch-reuse:1
@ 1246 train 4.3793 , allloss: 4.3793, dt: 697.48ms, fracRes: 0.2017, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8561, norm(y): 0.9911, norm:0.4448, tok/sec: 187922.50, flops:164.59, batch-reuse:1
@ 1247 train 4.2804 , allloss: 4.2804, dt: 683.44ms, fracRes: 0.2019, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8554, norm(y): 0.9912, norm:0.4388, tok/sec: 191783.09, flops:167.97, batch-reuse:1
@ 1248 train 4.4269 , allloss: 4.4269, dt: 682.77ms, fracRes: 0.2065, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8584, norm(y): 0.9912, norm:0.4006, tok/sec: 191969.66, flops:168.14, batch-reuse:1
@ 1249 train 4.3198 , allloss: 4.3198, dt: 698.84ms, fracRes: 0.2092, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8569, norm(y): 0.9911, norm:0.3796, tok/sec: 187555.20, flops:164.27, batch-reuse:1
@ 1250 train 4.4052 , allloss: 4.4052, dt: 695.70ms, fracRes: 0.2086, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8588, norm(y): 0.9911, norm:0.3876, tok/sec: 188403.52, flops:165.01, batch-reuse:1
@ 1251 train 4.3035 , allloss: 4.3035, dt: 695.28ms, fracRes: 0.2051, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8531, norm(y): 0.9911, norm:0.4302, tok/sec: 188516.32, flops:165.11, batch-reuse:1
@ 1252 train 4.3345 , allloss: 4.3345, dt: 683.09ms, fracRes: 0.2092, norm(attn): 0.3711, norm(output): 0.7656, norm(x): 0.8599, norm(y): 0.9910, norm:0.4832, tok/sec: 191882.16, flops:168.06, batch-reuse:1
@ 1253 train 4.2076 , allloss: 4.2076, dt: 679.00ms, fracRes: 0.2080, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8579, norm(y): 0.9911, norm:0.4992, tok/sec: 193037.12, flops:169.07, batch-reuse:1
@ 1254 train 4.2964 , allloss: 4.2964, dt: 690.41ms, fracRes: 0.2035, norm(attn): 0.3691, norm(output): 0.7617, norm(x): 0.8581, norm(y): 0.9911, norm:0.4916, tok/sec: 189845.40, flops:166.28, batch-reuse:1
@ 1255 train 4.3316 , allloss: 4.3316, dt: 685.57ms, fracRes: 0.2063, norm(attn): 0.3730, norm(output): 0.7695, norm(x): 0.8596, norm(y): 0.9911, norm:0.4877, tok/sec: 191187.49, flops:167.45, batch-reuse:1
@ 1256 train 4.2666 , allloss: 4.2666, dt: 695.97ms, fracRes: 0.2037, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8568, norm(y): 0.9912, norm:0.4998, tok/sec: 188330.01, flops:164.95, batch-reuse:1
@ 1257 train 4.3624 , allloss: 4.3624, dt: 701.12ms, fracRes: 0.2061, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8516, norm(y): 0.9911, norm:0.4435, tok/sec: 186946.75, flops:163.74, batch-reuse:1
@ 1258 train 4.3122 , allloss: 4.3122, dt: 690.64ms, fracRes: 0.2078, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8522, norm(y): 0.9910, norm:0.4512, tok/sec: 189782.02, flops:166.22, batch-reuse:1
@ 1259 train 4.3541 , allloss: 4.3541, dt: 690.53ms, fracRes: 0.2083, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8554, norm(y): 0.9910, norm:0.4979, tok/sec: 189812.69, flops:166.25, batch-reuse:1
@ 1260 train 4.2982 , allloss: 4.2982, dt: 696.40ms, fracRes: 0.2085, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8520, norm(y): 0.9910, norm:0.4483, tok/sec: 188214.14, flops:164.85, batch-reuse:1
@ 1261 train 4.2934 , allloss: 4.2934, dt: 698.12ms, fracRes: 0.2110, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8569, norm(y): 0.9910, norm:0.4431, tok/sec: 187750.18, flops:164.44, batch-reuse:1
@ 1262 train 4.2289 , allloss: 4.2289, dt: 698.15ms, fracRes: 0.2075, norm(attn): 0.3691, norm(output): 0.7578, norm(x): 0.8544, norm(y): 0.9910, norm:0.4668, tok/sec: 187740.82, flops:164.43, batch-reuse:1
@ 1263 train 4.2793 , allloss: 4.2793, dt: 689.16ms, fracRes: 0.2073, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8513, norm(y): 0.9911, norm:0.3985, tok/sec: 190191.39, flops:166.58, batch-reuse:1
@ 1264 train 4.3166 , allloss: 4.3166, dt: 687.61ms, fracRes: 0.2085, norm(attn): 0.3750, norm(output): 0.7617, norm(x): 0.8610, norm(y): 0.9910, norm:0.4883, tok/sec: 190618.32, flops:166.95, batch-reuse:1
@ 1265 train 4.3563 , allloss: 4.3563, dt: 696.93ms, fracRes: 0.2086, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8545, norm(y): 0.9911, norm:0.4608, tok/sec: 188070.36, flops:164.72, batch-reuse:1
@ 1266 train 4.3263 , allloss: 4.3263, dt: 702.66ms, fracRes: 0.2099, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8581, norm(y): 0.9911, norm:0.4933, tok/sec: 186537.04, flops:163.38, batch-reuse:1
@ 1267 train 4.3910 , allloss: 4.3910, dt: 706.22ms, fracRes: 0.2071, norm(attn): 0.3730, norm(output): 0.7695, norm(x): 0.8591, norm(y): 0.9911, norm:0.4031, tok/sec: 185595.51, flops:162.55, batch-reuse:1
@ 1268 train 4.3032 , allloss: 4.3032, dt: 709.32ms, fracRes: 0.2066, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8606, norm(y): 0.9911, norm:0.4586, tok/sec: 184784.48, flops:161.84, batch-reuse:1
@ 1269 train 4.3066 , allloss: 4.3066, dt: 700.21ms, fracRes: 0.2093, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8574, norm(y): 0.9911, norm:0.4239, tok/sec: 187188.32, flops:163.95, batch-reuse:1
@ 1270 train 4.1601 , allloss: 4.1601, dt: 707.64ms, fracRes: 0.2099, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8573, norm(y): 0.9911, norm:0.4153, tok/sec: 185225.33, flops:162.23, batch-reuse:1
@ 1271 train 4.2698 , allloss: 4.2698, dt: 703.17ms, fracRes: 0.2084, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8567, norm(y): 0.9911, norm:0.4094, tok/sec: 186400.30, flops:163.26, batch-reuse:1
@ 1272 train 4.2269 , allloss: 4.2269, dt: 700.54ms, fracRes: 0.2074, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8567, norm(y): 0.9911, norm:0.4894, tok/sec: 187101.36, flops:163.87, batch-reuse:1
@ 1273 train 4.4455 , allloss: 4.4455, dt: 694.47ms, fracRes: 0.2126, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8580, norm(y): 0.9909, norm:0.5153, tok/sec: 188737.92, flops:165.31, batch-reuse:1
@ 1274 train 4.2373 , allloss: 4.2373, dt: 698.32ms, fracRes: 0.2170, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8650, norm(y): 0.9909, norm:0.4885, tok/sec: 187695.31, flops:164.39, batch-reuse:1
@ 1275 train 4.4204 , allloss: 4.4204, dt: 694.83ms, fracRes: 0.2081, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8624, norm(y): 0.9911, norm:0.5049, tok/sec: 188638.25, flops:165.22, batch-reuse:1
@ 1276 train 4.2396 , allloss: 4.2396, dt: 703.66ms, fracRes: 0.2076, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8583, norm(y): 0.9910, norm:0.5340, tok/sec: 186272.22, flops:163.15, batch-reuse:1
@ 1277 train 4.2388 , allloss: 4.2388, dt: 700.10ms, fracRes: 0.2164, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8569, norm(y): 0.9909, norm:0.4846, tok/sec: 187218.79, flops:163.98, batch-reuse:1
@ 1278 train 4.3532 , allloss: 4.3532, dt: 691.77ms, fracRes: 0.2125, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8580, norm(y): 0.9910, norm:0.4300, tok/sec: 189474.47, flops:165.95, batch-reuse:1
@ 1279 train 4.4118 , allloss: 4.4118, dt: 693.60ms, fracRes: 0.2088, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8601, norm(y): 0.9910, norm:0.4281, tok/sec: 188972.58, flops:165.51, batch-reuse:1
@ 1280 train 4.2295 , allloss: 4.2295, dt: 705.77ms, fracRes: 0.2124, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8600, norm(y): 0.9910, norm:0.4651, tok/sec: 185715.01, flops:162.66, batch-reuse:1
@ 1281 train 4.2407 , allloss: 4.2407, dt: 702.49ms, fracRes: 0.2148, norm(attn): 0.3711, norm(output): 0.7539, norm(x): 0.8570, norm(y): 0.9909, norm:0.4239, tok/sec: 186583.19, flops:163.42, batch-reuse:1
@ 1282 train 4.2598 , allloss: 4.2598, dt: 701.54ms, fracRes: 0.2107, norm(attn): 0.3730, norm(output): 0.7539, norm(x): 0.8536, norm(y): 0.9910, norm:0.4070, tok/sec: 186834.87, flops:163.64, batch-reuse:1
@ 1283 train 4.3374 , allloss: 4.3374, dt: 701.25ms, fracRes: 0.2082, norm(attn): 0.3672, norm(output): 0.7578, norm(x): 0.8571, norm(y): 0.9910, norm:0.4296, tok/sec: 186912.56, flops:163.71, batch-reuse:1
@ 1284 train 4.2135 , allloss: 4.2135, dt: 699.76ms, fracRes: 0.2149, norm(attn): 0.3711, norm(output): 0.7617, norm(x): 0.8644, norm(y): 0.9909, norm:0.4068, tok/sec: 187310.52, flops:164.06, batch-reuse:1
@ 1285 train 4.1431 , allloss: 4.1431, dt: 710.45ms, fracRes: 0.2125, norm(attn): 0.3730, norm(output): 0.7617, norm(x): 0.8601, norm(y): 0.9910, norm:0.4558, tok/sec: 184492.16, flops:161.59, batch-reuse:1
@ 1286 train 4.4216 , allloss: 4.4216, dt: 711.65ms, fracRes: 0.2117, norm(attn): 0.3730, norm(output): 0.7695, norm(x): 0.8658, norm(y): 0.9910, norm:0.4285, tok/sec: 184180.58, flops:161.32, batch-reuse:1
@ 1287 train 4.3123 , allloss: 4.3123, dt: 694.91ms, fracRes: 0.2125, norm(attn): 0.3711, norm(output): 0.7656, norm(x): 0.8651, norm(y): 0.9909, norm:0.4201, tok/sec: 188616.96, flops:165.20, batch-reuse:1
@ 1288 train 4.2602 , allloss: 4.2602, dt: 708.09ms, fracRes: 0.2137, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8653, norm(y): 0.9909, norm:0.4492, tok/sec: 185107.08, flops:162.13, batch-reuse:1
@ 1289 train 4.2154 , allloss: 4.2154, dt: 709.21ms, fracRes: 0.2096, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8609, norm(y): 0.9910, norm:0.4352, tok/sec: 184812.93, flops:161.87, batch-reuse:1
@ 1290 train 4.2042 , allloss: 4.2042, dt: 694.26ms, fracRes: 0.2128, norm(attn): 0.3750, norm(output): 0.7539, norm(x): 0.8550, norm(y): 0.9910, norm:0.4862, tok/sec: 188794.89, flops:165.36, batch-reuse:1
@ 1291 train 4.2688 , allloss: 4.2688, dt: 703.12ms, fracRes: 0.2159, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8612, norm(y): 0.9909, norm:0.4160, tok/sec: 186414.46, flops:163.27, batch-reuse:1
@ 1292 train 4.2449 , allloss: 4.2449, dt: 705.71ms, fracRes: 0.2122, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8652, norm(y): 0.9910, norm:0.4789, tok/sec: 185731.39, flops:162.67, batch-reuse:1
@ 1293 train 4.3136 , allloss: 4.3136, dt: 685.61ms, fracRes: 0.2116, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8634, norm(y): 0.9910, norm:0.4809, tok/sec: 191175.13, flops:167.44, batch-reuse:1
@ 1294 train 4.2345 , allloss: 4.2345, dt: 688.48ms, fracRes: 0.2074, norm(attn): 0.3770, norm(output): 0.7656, norm(x): 0.8599, norm(y): 0.9911, norm:0.4530, tok/sec: 190379.62, flops:166.75, batch-reuse:1
@ 1295 train 4.3392 , allloss: 4.3392, dt: 691.98ms, fracRes: 0.2031, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8593, norm(y): 0.9911, norm:0.4068, tok/sec: 189415.00, flops:165.90, batch-reuse:1
@ 1296 train 4.3326 , allloss: 4.3326, dt: 694.66ms, fracRes: 0.2057, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8597, norm(y): 0.9910, norm:0.4224, tok/sec: 188685.58, flops:165.26, batch-reuse:1
@ 1297 train 4.4170 , allloss: 4.4170, dt: 702.73ms, fracRes: 0.2075, norm(attn): 0.3730, norm(output): 0.7578, norm(x): 0.8579, norm(y): 0.9910, norm:0.4497, tok/sec: 186519.45, flops:163.36, batch-reuse:1
@ 1298 train 4.4911 , allloss: 4.4911, dt: 701.47ms, fracRes: 0.2180, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8673, norm(y): 0.9909, norm:0.4221, tok/sec: 186852.14, flops:163.66, batch-reuse:1
@ 1299 train 4.4789 , allloss: 4.4789, dt: 702.79ms, fracRes: 0.2189, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8675, norm(y): 0.9909, norm:0.4146, tok/sec: 186502.62, flops:163.35, batch-reuse:1
@ 1300 train 4.4011 , allloss: 4.4011, dt: 698.76ms, fracRes: 0.2159, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8661, norm(y): 0.9909, norm:0.4600, tok/sec: 187578.24, flops:164.29, batch-reuse:1
@ 1301 train 4.5017 , allloss: 4.5017, dt: 695.87ms, fracRes: 0.2164, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8699, norm(y): 0.9909, norm:0.4589, tok/sec: 188355.94, flops:164.97, batch-reuse:1
@ 1302 train 4.4630 , allloss: 4.4630, dt: 694.99ms, fracRes: 0.2185, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8718, norm(y): 0.9909, norm:0.5419, tok/sec: 188595.61, flops:165.18, batch-reuse:1
@ 1303 train 4.5053 , allloss: 4.5053, dt: 701.86ms, fracRes: 0.2187, norm(attn): 0.3750, norm(output): 0.7812, norm(x): 0.8736, norm(y): 0.9910, norm:0.5948, tok/sec: 186749.38, flops:163.57, batch-reuse:1
@ 1304 train 4.5002 , allloss: 4.5002, dt: 703.42ms, fracRes: 0.2136, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8697, norm(y): 0.9911, norm:0.5096, tok/sec: 186335.54, flops:163.20, batch-reuse:1
@ 1305 train 4.4146 , allloss: 4.4146, dt: 692.38ms, fracRes: 0.2125, norm(attn): 0.3730, norm(output): 0.7734, norm(x): 0.8719, norm(y): 0.9910, norm:0.5584, tok/sec: 189306.14, flops:165.80, batch-reuse:1
@ 1306 train 4.3339 , allloss: 4.3339, dt: 698.21ms, fracRes: 0.2209, norm(attn): 0.3750, norm(output): 0.7695, norm(x): 0.8742, norm(y): 0.9909, norm:0.6584, tok/sec: 187726.65, flops:164.42, batch-reuse:1
@ 1307 train 4.5558 , allloss: 4.5558, dt: 689.19ms, fracRes: 0.2159, norm(attn): 0.3750, norm(output): 0.7656, norm(x): 0.8683, norm(y): 0.9910, norm:0.6126, tok/sec: 190182.18, flops:166.57, batch-reuse:1
@ 1308 train 4.5157 , allloss: 4.5157, dt: 696.49ms, fracRes: 0.2144, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8747, norm(y): 0.9910, norm:0.5064, tok/sec: 188188.24, flops:164.83, batch-reuse:1
@ 1309 train 4.4399 , allloss: 4.4399, dt: 678.69ms, fracRes: 0.2154, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8788, norm(y): 0.9909, norm:0.5419, tok/sec: 193124.66, flops:169.15, batch-reuse:1
@ 1310 train 4.4685 , allloss: 4.4685, dt: 696.61ms, fracRes: 0.2121, norm(attn): 0.3730, norm(output): 0.7773, norm(x): 0.8693, norm(y): 0.9910, norm:0.5698, tok/sec: 188155.71, flops:164.80, batch-reuse:1
@ 1311 train 4.3707 , allloss: 4.3707, dt: 699.84ms, fracRes: 0.2137, norm(attn): 0.3750, norm(output): 0.7773, norm(x): 0.8697, norm(y): 0.9910, norm:0.7084, tok/sec: 187287.48, flops:164.04, batch-reuse:1
@ 1312 train 4.4973 , allloss: 4.4973, dt: 701.21ms, fracRes: 0.2161, norm(attn): 0.3730, norm(output): 0.7734, norm(x): 0.8711, norm(y): 0.9910, norm:0.4680, tok/sec: 186923.49, flops:163.72, batch-reuse:1
@ 1313 train 4.4994 , allloss: 4.4994, dt: 693.93ms, fracRes: 0.2172, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8795, norm(y): 0.9910, norm:0.5310, tok/sec: 188884.21, flops:165.44, batch-reuse:1
@ 1314 train 4.4650 , allloss: 4.4650, dt: 691.26ms, fracRes: 0.2118, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8735, norm(y): 0.9911, norm:0.4904, tok/sec: 189613.08, flops:166.07, batch-reuse:1
@ 1315 train 4.4575 , allloss: 4.4575, dt: 696.29ms, fracRes: 0.2138, norm(attn): 0.3711, norm(output): 0.7695, norm(x): 0.8729, norm(y): 0.9909, norm:0.4355, tok/sec: 188242.69, flops:164.87, batch-reuse:1
@ 1316 train 4.4046 , allloss: 4.4046, dt: 693.72ms, fracRes: 0.2175, norm(attn): 0.3711, norm(output): 0.7812, norm(x): 0.8762, norm(y): 0.9909, norm:0.4642, tok/sec: 188940.69, flops:165.48, batch-reuse:1
@ 1317 train 4.3922 , allloss: 4.3922, dt: 703.67ms, fracRes: 0.2214, norm(attn): 0.3730, norm(output): 0.7930, norm(x): 0.8822, norm(y): 0.9907, norm:0.5156, tok/sec: 186268.87, flops:163.14, batch-reuse:1
@ 1318 train 4.4097 , allloss: 4.4097, dt: 704.68ms, fracRes: 0.2175, norm(attn): 0.3711, norm(output): 0.7734, norm(x): 0.8715, norm(y): 0.9908, norm:0.4750, tok/sec: 186001.54, flops:162.91, batch-reuse:1
@ 1319 train 4.4683 , allloss: 4.4683, dt: 695.36ms, fracRes: 0.2161, norm(attn): 0.3750, norm(output): 0.7773, norm(x): 0.8739, norm(y): 0.9909, norm:0.5049, tok/sec: 188494.80, flops:165.09, batch-reuse:1
@ 1320 train 4.5090 , allloss: 4.5090, dt: 698.43ms, fracRes: 0.2126, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8688, norm(y): 0.9910, norm:0.5327, tok/sec: 187666.03, flops:164.37, batch-reuse:1
@ 1321 train 4.4822 , allloss: 4.4822, dt: 703.67ms, fracRes: 0.2146, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8714, norm(y): 0.9910, norm:0.4443, tok/sec: 186270.32, flops:163.15, batch-reuse:1
@ 1322 train 4.4462 , allloss: 4.4462, dt: 694.48ms, fracRes: 0.2178, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8789, norm(y): 0.9910, norm:0.4501, tok/sec: 188732.80, flops:165.30, batch-reuse:1
@ 1323 train 4.4293 , allloss: 4.4293, dt: 705.66ms, fracRes: 0.2181, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8836, norm(y): 0.9909, norm:0.4962, tok/sec: 185744.13, flops:162.69, batch-reuse:1
@ 1324 train 4.4381 , allloss: 4.4381, dt: 704.29ms, fracRes: 0.2249, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8848, norm(y): 0.9908, norm:0.4814, tok/sec: 186104.11, flops:163.00, batch-reuse:1
@ 1325 train 4.4119 , allloss: 4.4119, dt: 692.89ms, fracRes: 0.2275, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8813, norm(y): 0.9909, norm:0.4108, tok/sec: 189165.83, flops:165.68, batch-reuse:1
@ 1326 train 4.4165 , allloss: 4.4165, dt: 701.56ms, fracRes: 0.2259, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8810, norm(y): 0.9910, norm:0.4538, tok/sec: 186829.66, flops:163.64, batch-reuse:1
@ 1327 train 4.4559 , allloss: 4.4559, dt: 702.27ms, fracRes: 0.2216, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8840, norm(y): 0.9910, norm:0.5125, tok/sec: 186639.57, flops:163.47, batch-reuse:1
@ 1328 train 4.4386 , allloss: 4.4386, dt: 702.25ms, fracRes: 0.2205, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8822, norm(y): 0.9910, norm:0.4198, tok/sec: 186646.22, flops:163.48, batch-reuse:1
@ 1329 train 4.4954 , allloss: 4.4954, dt: 698.46ms, fracRes: 0.2188, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8795, norm(y): 0.9910, norm:0.4304, tok/sec: 187658.86, flops:164.36, batch-reuse:1
@ 1330 train 4.5039 , allloss: 4.5039, dt: 687.04ms, fracRes: 0.2253, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8878, norm(y): 0.9909, norm:0.4768, tok/sec: 190777.67, flops:167.09, batch-reuse:1
@ 1331 train 4.4956 , allloss: 4.4956, dt: 695.26ms, fracRes: 0.2184, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8838, norm(y): 0.9910, norm:0.4018, tok/sec: 188523.24, flops:165.12, batch-reuse:1
@ 1332 train 4.4032 , allloss: 4.4032, dt: 692.16ms, fracRes: 0.2163, norm(attn): 0.3750, norm(output): 0.7852, norm(x): 0.8785, norm(y): 0.9910, norm:0.4113, tok/sec: 189366.78, flops:165.86, batch-reuse:1
@ 1333 train 4.4149 , allloss: 4.4149, dt: 700.24ms, fracRes: 0.2170, norm(attn): 0.3750, norm(output): 0.7812, norm(x): 0.8768, norm(y): 0.9909, norm:0.4344, tok/sec: 187180.55, flops:163.94, batch-reuse:1
@ 1334 train 4.4186 , allloss: 4.4186, dt: 706.77ms, fracRes: 0.2177, norm(attn): 0.3730, norm(output): 0.7852, norm(x): 0.8800, norm(y): 0.9909, norm:0.4094, tok/sec: 185452.14, flops:162.43, batch-reuse:1
@ 1335 train 4.4888 , allloss: 4.4888, dt: 692.67ms, fracRes: 0.2204, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8814, norm(y): 0.9909, norm:0.4705, tok/sec: 189228.14, flops:165.74, batch-reuse:1
@ 1336 train 4.3652 , allloss: 4.3652, dt: 696.45ms, fracRes: 0.2207, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8814, norm(y): 0.9909, norm:0.6310, tok/sec: 188200.93, flops:164.84, batch-reuse:1
@ 1337 train 4.4299 , allloss: 4.4299, dt: 706.14ms, fracRes: 0.2200, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8833, norm(y): 0.9909, norm:0.5316, tok/sec: 185616.32, flops:162.57, batch-reuse:1
@ 1338 train 4.4161 , allloss: 4.4161, dt: 700.72ms, fracRes: 0.2192, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8801, norm(y): 0.9909, norm:0.4960, tok/sec: 187053.62, flops:163.83, batch-reuse:1
@ 1339 train 4.4261 , allloss: 4.4261, dt: 702.08ms, fracRes: 0.2141, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8808, norm(y): 0.9910, norm:0.4940, tok/sec: 186691.48, flops:163.51, batch-reuse:1
@ 1340 train 4.4300 , allloss: 4.4300, dt: 690.34ms, fracRes: 0.2145, norm(attn): 0.3750, norm(output): 0.7852, norm(x): 0.8775, norm(y): 0.9910, norm:0.4837, tok/sec: 189865.06, flops:166.29, batch-reuse:1
@ 1341 train 4.5004 , allloss: 4.5004, dt: 703.42ms, fracRes: 0.2140, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8782, norm(y): 0.9910, norm:0.4693, tok/sec: 186334.15, flops:163.20, batch-reuse:1
@ 1342 train 4.4929 , allloss: 4.4929, dt: 706.53ms, fracRes: 0.2252, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.8903, norm(y): 0.9909, norm:0.4844, tok/sec: 185514.28, flops:162.48, batch-reuse:1
@ 1343 train 4.4015 , allloss: 4.4015, dt: 706.24ms, fracRes: 0.2269, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8869, norm(y): 0.9908, norm:0.4623, tok/sec: 185590.88, flops:162.55, batch-reuse:1
@ 1344 train 4.4068 , allloss: 4.4068, dt: 709.66ms, fracRes: 0.2206, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8828, norm(y): 0.9909, norm:0.4632, tok/sec: 184697.94, flops:161.77, batch-reuse:1
@ 1345 train 4.3600 , allloss: 4.3600, dt: 713.99ms, fracRes: 0.2174, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8799, norm(y): 0.9910, norm:0.4308, tok/sec: 183575.77, flops:160.79, batch-reuse:1
@ 1346 train 4.3812 , allloss: 4.3812, dt: 708.25ms, fracRes: 0.2210, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8840, norm(y): 0.9909, norm:0.4571, tok/sec: 185065.89, flops:162.09, batch-reuse:1
@ 1347 train 4.3688 , allloss: 4.3688, dt: 698.12ms, fracRes: 0.2245, norm(attn): 0.3789, norm(output): 0.7773, norm(x): 0.8835, norm(y): 0.9909, norm:0.4684, tok/sec: 187749.35, flops:164.44, batch-reuse:1
@ 1348 train 4.4036 , allloss: 4.4036, dt: 698.43ms, fracRes: 0.2263, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8852, norm(y): 0.9908, norm:0.5121, tok/sec: 187667.89, flops:164.37, batch-reuse:1
@ 1349 train 4.4622 , allloss: 4.4622, dt: 684.68ms, fracRes: 0.2198, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.8830, norm(y): 0.9909, norm:0.4483, tok/sec: 191435.02, flops:167.67, batch-reuse:1
@ 1350 train 4.3140 , allloss: 4.3140, dt: 703.42ms, fracRes: 0.2208, norm(attn): 0.3828, norm(output): 0.7930, norm(x): 0.8880, norm(y): 0.9908, norm:0.4111, tok/sec: 186334.03, flops:163.20, batch-reuse:1
@ 1351 train 4.3066 , allloss: 4.3066, dt: 708.41ms, fracRes: 0.2164, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8844, norm(y): 0.9909, norm:0.4242, tok/sec: 185021.86, flops:162.05, batch-reuse:1
@ 1352 train 4.4707 , allloss: 4.4707, dt: 705.02ms, fracRes: 0.2230, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.8891, norm(y): 0.9909, norm:0.4493, tok/sec: 185911.15, flops:162.83, batch-reuse:1
@ 1353 train 4.3952 , allloss: 4.3952, dt: 704.00ms, fracRes: 0.2164, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8829, norm(y): 0.9909, norm:0.4248, tok/sec: 186181.19, flops:163.07, batch-reuse:1
@ 1354 train 4.3772 , allloss: 4.3772, dt: 696.99ms, fracRes: 0.2202, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8825, norm(y): 0.9909, norm:0.4545, tok/sec: 188053.77, flops:164.71, batch-reuse:1
@ 1355 train 4.4803 , allloss: 4.4803, dt: 710.92ms, fracRes: 0.2214, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8833, norm(y): 0.9909, norm:0.4373, tok/sec: 184369.34, flops:161.48, batch-reuse:1
@ 1356 train 4.3617 , allloss: 4.3617, dt: 694.41ms, fracRes: 0.2256, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8848, norm(y): 0.9907, norm:0.4961, tok/sec: 188754.38, flops:165.32, batch-reuse:1
@ 1357 train 4.4483 , allloss: 4.4483, dt: 695.25ms, fracRes: 0.2235, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8755, norm(y): 0.9907, norm:0.4495, tok/sec: 188525.50, flops:165.12, batch-reuse:1
@ 1358 train 4.4154 , allloss: 4.4154, dt: 696.35ms, fracRes: 0.2153, norm(attn): 0.3730, norm(output): 0.7656, norm(x): 0.8684, norm(y): 0.9909, norm:0.5082, tok/sec: 188228.06, flops:164.86, batch-reuse:1
@ 1359 train 4.3292 , allloss: 4.3292, dt: 686.21ms, fracRes: 0.2198, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8784, norm(y): 0.9908, norm:0.4196, tok/sec: 191009.07, flops:167.30, batch-reuse:1
@ 1360 train 4.3352 , allloss: 4.3352, dt: 698.85ms, fracRes: 0.2212, norm(attn): 0.3770, norm(output): 0.7734, norm(x): 0.8779, norm(y): 0.9909, norm:0.4325, tok/sec: 187554.50, flops:164.27, batch-reuse:1
@ 1361 train 4.4037 , allloss: 4.4037, dt: 693.54ms, fracRes: 0.2171, norm(attn): 0.3809, norm(output): 0.7812, norm(x): 0.8767, norm(y): 0.9910, norm:0.4178, tok/sec: 188989.34, flops:165.53, batch-reuse:1
@ 1362 train 4.4786 , allloss: 4.4786, dt: 705.04ms, fracRes: 0.2136, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8792, norm(y): 0.9909, norm:0.4492, tok/sec: 185907.19, flops:162.83, batch-reuse:1
@ 1363 train 4.4551 , allloss: 4.4551, dt: 707.93ms, fracRes: 0.2160, norm(attn): 0.3750, norm(output): 0.7812, norm(x): 0.8776, norm(y): 0.9908, norm:0.4494, tok/sec: 185147.66, flops:162.16, batch-reuse:1
@ 1364 train 4.3211 , allloss: 4.3211, dt: 695.82ms, fracRes: 0.2232, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8831, norm(y): 0.9908, norm:0.4418, tok/sec: 188370.14, flops:164.99, batch-reuse:1
@ 1365 train 4.4034 , allloss: 4.4034, dt: 700.59ms, fracRes: 0.2230, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8874, norm(y): 0.9908, norm:0.4734, tok/sec: 187089.20, flops:163.86, batch-reuse:1
@ 1366 train 4.3819 , allloss: 4.3819, dt: 696.21ms, fracRes: 0.2203, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8839, norm(y): 0.9909, norm:0.4754, tok/sec: 188265.83, flops:164.89, batch-reuse:1
@ 1367 train 4.3376 , allloss: 4.3376, dt: 701.41ms, fracRes: 0.2215, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8820, norm(y): 0.9909, norm:0.3746, tok/sec: 186869.93, flops:163.67, batch-reuse:1
@ 1368 train 4.4752 , allloss: 4.4752, dt: 691.85ms, fracRes: 0.2249, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.8824, norm(y): 0.9908, norm:0.4273, tok/sec: 189452.07, flops:165.93, batch-reuse:1
@ 1369 train 4.5215 , allloss: 4.5215, dt: 709.56ms, fracRes: 0.2249, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8759, norm(y): 0.9907, norm:0.4663, tok/sec: 184724.07, flops:161.79, batch-reuse:1
@ 1370 train 4.3828 , allloss: 4.3828, dt: 699.40ms, fracRes: 0.2234, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8801, norm(y): 0.9908, norm:0.3985, tok/sec: 187405.60, flops:164.14, batch-reuse:1
@ 1371 train 4.6068 , allloss: 4.6068, dt: 703.51ms, fracRes: 0.2280, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8909, norm(y): 0.9907, norm:0.5438, tok/sec: 186312.18, flops:163.18, batch-reuse:1
@ 1372 train 4.3495 , allloss: 4.3495, dt: 699.53ms, fracRes: 0.2223, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.8873, norm(y): 0.9908, norm:0.5139, tok/sec: 187370.47, flops:164.11, batch-reuse:1
@ 1373 train 4.3773 , allloss: 4.3773, dt: 694.41ms, fracRes: 0.2228, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.8838, norm(y): 0.9907, norm:0.4437, tok/sec: 188751.92, flops:165.32, batch-reuse:1
@ 1374 train 4.3346 , allloss: 4.3346, dt: 691.48ms, fracRes: 0.2228, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8860, norm(y): 0.9907, norm:0.4638, tok/sec: 189553.00, flops:166.02, batch-reuse:1
@ 1375 train 4.3617 , allloss: 4.3617, dt: 694.57ms, fracRes: 0.2226, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8797, norm(y): 0.9908, norm:0.4769, tok/sec: 188709.03, flops:165.28, batch-reuse:1
@ 1376 train 4.3234 , allloss: 4.3234, dt: 705.62ms, fracRes: 0.2297, norm(attn): 0.3789, norm(output): 0.7812, norm(x): 0.8828, norm(y): 0.9907, norm:0.5546, tok/sec: 185754.04, flops:162.69, batch-reuse:1
@ 1377 train 4.2962 , allloss: 4.2962, dt: 709.46ms, fracRes: 0.2291, norm(attn): 0.3750, norm(output): 0.7734, norm(x): 0.8824, norm(y): 0.9907, norm:0.4498, tok/sec: 184748.96, flops:161.81, batch-reuse:1
@ 1378 train 4.4119 , allloss: 4.4119, dt: 709.04ms, fracRes: 0.2284, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8882, norm(y): 0.9907, norm:0.4705, tok/sec: 184859.66, flops:161.91, batch-reuse:1
@ 1379 train 4.3806 , allloss: 4.3806, dt: 711.15ms, fracRes: 0.2224, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8885, norm(y): 0.9907, norm:0.5187, tok/sec: 184309.51, flops:161.43, batch-reuse:1
@ 1380 train 4.3353 , allloss: 4.3353, dt: 697.11ms, fracRes: 0.2199, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.8829, norm(y): 0.9909, norm:0.4285, tok/sec: 188020.71, flops:164.68, batch-reuse:1
@ 1381 train 4.3523 , allloss: 4.3523, dt: 709.39ms, fracRes: 0.2209, norm(attn): 0.3828, norm(output): 0.7969, norm(x): 0.8857, norm(y): 0.9909, norm:0.4872, tok/sec: 184766.59, flops:161.83, batch-reuse:1
@ 1382 train 4.3502 , allloss: 4.3502, dt: 700.67ms, fracRes: 0.2227, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8861, norm(y): 0.9908, norm:0.4800, tok/sec: 187067.68, flops:163.84, batch-reuse:1
@ 1383 train 4.3658 , allloss: 4.3658, dt: 682.88ms, fracRes: 0.2272, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8910, norm(y): 0.9907, norm:0.4269, tok/sec: 191938.97, flops:168.11, batch-reuse:1
@ 1384 train 4.2506 , allloss: 4.2506, dt: 705.33ms, fracRes: 0.2252, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8873, norm(y): 0.9907, norm:0.4519, tok/sec: 185830.52, flops:162.76, batch-reuse:1
@ 1385 train 4.3702 , allloss: 4.3702, dt: 701.36ms, fracRes: 0.2220, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8833, norm(y): 0.9907, norm:0.4519, tok/sec: 186883.90, flops:163.68, batch-reuse:1
@ 1386 train 4.3455 , allloss: 4.3455, dt: 690.35ms, fracRes: 0.2246, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8811, norm(y): 0.9907, norm:0.4957, tok/sec: 189863.49, flops:166.29, batch-reuse:1
@ 1387 train 4.3573 , allloss: 4.3573, dt: 696.96ms, fracRes: 0.2277, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8807, norm(y): 0.9908, norm:0.4623, tok/sec: 188061.10, flops:164.71, batch-reuse:1
@ 1388 train 4.3965 , allloss: 4.3965, dt: 694.26ms, fracRes: 0.2302, norm(attn): 0.3750, norm(output): 0.7812, norm(x): 0.8843, norm(y): 0.9907, norm:0.4371, tok/sec: 188792.49, flops:165.35, batch-reuse:1
@ 1389 train 4.2428 , allloss: 4.2428, dt: 695.76ms, fracRes: 0.2289, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8884, norm(y): 0.9907, norm:0.4644, tok/sec: 188386.73, flops:165.00, batch-reuse:1
@ 1390 train 4.4189 , allloss: 4.4189, dt: 695.05ms, fracRes: 0.2241, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8901, norm(y): 0.9907, norm:0.6020, tok/sec: 188578.33, flops:165.17, batch-reuse:1
@ 1391 train 4.3227 , allloss: 4.3227, dt: 685.00ms, fracRes: 0.2275, norm(attn): 0.3809, norm(output): 0.7891, norm(x): 0.8895, norm(y): 0.9906, norm:0.5234, tok/sec: 191345.20, flops:167.59, batch-reuse:1
@ 1392 train 4.3410 , allloss: 4.3410, dt: 691.90ms, fracRes: 0.2265, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8900, norm(y): 0.9908, norm:0.4766, tok/sec: 189439.08, flops:165.92, batch-reuse:1
@ 1393 train 4.3544 , allloss: 4.3544, dt: 698.66ms, fracRes: 0.2279, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8879, norm(y): 0.9907, norm:0.4103, tok/sec: 187604.94, flops:164.31, batch-reuse:1
@ 1394 train 4.2954 , allloss: 4.2954, dt: 689.39ms, fracRes: 0.2253, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8838, norm(y): 0.9907, norm:0.4471, tok/sec: 190128.05, flops:166.52, batch-reuse:1
@ 1395 train 4.3264 , allloss: 4.3264, dt: 698.37ms, fracRes: 0.2215, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.8820, norm(y): 0.9907, norm:0.3970, tok/sec: 187682.56, flops:164.38, batch-reuse:1
@ 1396 train 4.3322 , allloss: 4.3322, dt: 705.43ms, fracRes: 0.2222, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.8813, norm(y): 0.9907, norm:0.4145, tok/sec: 185804.39, flops:162.74, batch-reuse:1
@ 1397 train 4.3478 , allloss: 4.3478, dt: 698.79ms, fracRes: 0.2254, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8861, norm(y): 0.9907, norm:0.3760, tok/sec: 187570.88, flops:164.29, batch-reuse:1
@ 1398 train 4.2960 , allloss: 4.2960, dt: 702.32ms, fracRes: 0.2254, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8844, norm(y): 0.9906, norm:0.3985, tok/sec: 186627.66, flops:163.46, batch-reuse:1
@ 1399 train 4.2717 , allloss: 4.2717, dt: 696.89ms, fracRes: 0.2252, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8849, norm(y): 0.9906, norm:0.4166, tok/sec: 188081.11, flops:164.73, batch-reuse:1
@ 1400 train 4.3979 , allloss: 4.3979, dt: 696.26ms, fracRes: 0.2259, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8848, norm(y): 0.9906, norm:0.4596, tok/sec: 188251.97, flops:164.88, batch-reuse:1
@ 1401 train 4.2821 , allloss: 4.2821, dt: 683.94ms, fracRes: 0.2244, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8814, norm(y): 0.9906, norm:0.4435, tok/sec: 191642.09, flops:167.85, batch-reuse:1
@ 1402 train 4.2593 , allloss: 4.2593, dt: 696.20ms, fracRes: 0.2253, norm(attn): 0.3770, norm(output): 0.7812, norm(x): 0.8824, norm(y): 0.9908, norm:0.4228, tok/sec: 188268.15, flops:164.90, batch-reuse:1
@ 1403 train 4.3537 , allloss: 4.3537, dt: 696.12ms, fracRes: 0.2284, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8859, norm(y): 0.9907, norm:0.4205, tok/sec: 188290.08, flops:164.91, batch-reuse:1
@ 1404 train 4.2818 , allloss: 4.2818, dt: 700.32ms, fracRes: 0.2281, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8840, norm(y): 0.9907, norm:0.4005, tok/sec: 187159.77, flops:163.92, batch-reuse:1
@ 1405 train 4.2820 , allloss: 4.2820, dt: 693.18ms, fracRes: 0.2254, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8863, norm(y): 0.9907, norm:0.4591, tok/sec: 189088.79, flops:165.61, batch-reuse:1
@ 1406 train 4.4428 , allloss: 4.4428, dt: 692.75ms, fracRes: 0.2269, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8854, norm(y): 0.9906, norm:0.4180, tok/sec: 189204.57, flops:165.72, batch-reuse:1
@ 1407 train 4.3035 , allloss: 4.3035, dt: 687.91ms, fracRes: 0.2289, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8883, norm(y): 0.9906, norm:0.4772, tok/sec: 190537.19, flops:166.88, batch-reuse:1
@ 1408 train 4.2790 , allloss: 4.2790, dt: 700.44ms, fracRes: 0.2276, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8893, norm(y): 0.9906, norm:0.4195, tok/sec: 187128.94, flops:163.90, batch-reuse:1
@ 1409 train 4.3113 , allloss: 4.3113, dt: 703.69ms, fracRes: 0.2265, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8881, norm(y): 0.9906, norm:0.4058, tok/sec: 186263.57, flops:163.14, batch-reuse:1
@ 1410 train 4.3099 , allloss: 4.3099, dt: 695.27ms, fracRes: 0.2266, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8839, norm(y): 0.9906, norm:0.3840, tok/sec: 188518.39, flops:165.11, batch-reuse:1
@ 1411 train 4.2872 , allloss: 4.2872, dt: 696.45ms, fracRes: 0.2263, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8807, norm(y): 0.9906, norm:0.4321, tok/sec: 188199.84, flops:164.84, batch-reuse:1
@ 1412 train 4.2411 , allloss: 4.2411, dt: 696.13ms, fracRes: 0.2331, norm(attn): 0.3750, norm(output): 0.7891, norm(x): 0.8896, norm(y): 0.9906, norm:0.4541, tok/sec: 188285.89, flops:164.91, batch-reuse:1
@ 1413 train 4.3300 , allloss: 4.3300, dt: 702.59ms, fracRes: 0.2260, norm(attn): 0.3750, norm(output): 0.7930, norm(x): 0.8839, norm(y): 0.9907, norm:0.4130, tok/sec: 186555.40, flops:163.40, batch-reuse:1
@ 1414 train 4.2347 , allloss: 4.2347, dt: 697.38ms, fracRes: 0.2200, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8840, norm(y): 0.9907, norm:0.4566, tok/sec: 187949.68, flops:164.62, batch-reuse:1
@ 1415 train 4.4107 , allloss: 4.4107, dt: 688.81ms, fracRes: 0.2159, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.8809, norm(y): 0.9909, norm:0.4110, tok/sec: 190287.83, flops:166.66, batch-reuse:1
@ 1416 train 4.2844 , allloss: 4.2844, dt: 681.31ms, fracRes: 0.2262, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.8922, norm(y): 0.9907, norm:0.4264, tok/sec: 192383.55, flops:168.50, batch-reuse:1
@ 1417 train 4.3589 , allloss: 4.3589, dt: 688.67ms, fracRes: 0.2275, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8864, norm(y): 0.9907, norm:0.4291, tok/sec: 190325.45, flops:166.70, batch-reuse:1
@ 1418 train 4.2850 , allloss: 4.2850, dt: 699.21ms, fracRes: 0.2263, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8891, norm(y): 0.9906, norm:0.4189, tok/sec: 187456.33, flops:164.18, batch-reuse:1
@ 1419 train 4.3713 , allloss: 4.3713, dt: 701.14ms, fracRes: 0.2243, norm(attn): 0.3809, norm(output): 0.7930, norm(x): 0.8855, norm(y): 0.9907, norm:0.4732, tok/sec: 186941.86, flops:163.73, batch-reuse:1
@ 1420 train 4.3484 , allloss: 4.3484, dt: 697.73ms, fracRes: 0.2343, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8963, norm(y): 0.9905, norm:0.4565, tok/sec: 187854.95, flops:164.53, batch-reuse:1
@ 1421 train 4.2917 , allloss: 4.2917, dt: 699.33ms, fracRes: 0.2303, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8951, norm(y): 0.9906, norm:0.4021, tok/sec: 187424.00, flops:164.16, batch-reuse:1
@ 1422 train 4.2892 , allloss: 4.2892, dt: 688.02ms, fracRes: 0.2274, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8958, norm(y): 0.9905, norm:0.4029, tok/sec: 190506.62, flops:166.86, batch-reuse:1
@ 1423 train 4.2636 , allloss: 4.2636, dt: 690.77ms, fracRes: 0.2290, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.8952, norm(y): 0.9905, norm:0.4261, tok/sec: 189748.42, flops:166.19, batch-reuse:1
@ 1424 train 4.3051 , allloss: 4.3051, dt: 702.23ms, fracRes: 0.2306, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8909, norm(y): 0.9906, norm:0.4332, tok/sec: 186651.17, flops:163.48, batch-reuse:1
@ 1425 train 4.2957 , allloss: 4.2957, dt: 706.70ms, fracRes: 0.2325, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8924, norm(y): 0.9905, norm:0.4082, tok/sec: 185469.66, flops:162.44, batch-reuse:1
@ 1426 train 4.1806 , allloss: 4.1806, dt: 704.65ms, fracRes: 0.2341, norm(attn): 0.3789, norm(output): 0.7930, norm(x): 0.8935, norm(y): 0.9905, norm:0.3927, tok/sec: 186010.98, flops:162.92, batch-reuse:1
@ 1427 train 4.2751 , allloss: 4.2751, dt: 705.31ms, fracRes: 0.2330, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8921, norm(y): 0.9904, norm:0.3951, tok/sec: 185834.92, flops:162.76, batch-reuse:1
@ 1428 train 4.2690 , allloss: 4.2690, dt: 705.64ms, fracRes: 0.2291, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8859, norm(y): 0.9905, norm:0.4396, tok/sec: 185748.02, flops:162.69, batch-reuse:1
@ 1429 train 4.2320 , allloss: 4.2320, dt: 702.51ms, fracRes: 0.2345, norm(attn): 0.3809, norm(output): 0.7969, norm(x): 0.8961, norm(y): 0.9904, norm:0.5687, tok/sec: 186577.43, flops:163.41, batch-reuse:1
@ 1430 train 4.3225 , allloss: 4.3225, dt: 704.57ms, fracRes: 0.2256, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8849, norm(y): 0.9906, norm:0.4368, tok/sec: 186030.74, flops:162.94, batch-reuse:1
@ 1431 train 4.2642 , allloss: 4.2642, dt: 702.70ms, fracRes: 0.2274, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8863, norm(y): 0.9906, norm:0.4620, tok/sec: 186525.46, flops:163.37, batch-reuse:1
@ 1432 train 4.2438 , allloss: 4.2438, dt: 703.19ms, fracRes: 0.2265, norm(attn): 0.3809, norm(output): 0.7930, norm(x): 0.8898, norm(y): 0.9907, norm:0.4387, tok/sec: 186397.39, flops:163.26, batch-reuse:1
@ 1433 train 4.2753 , allloss: 4.2753, dt: 696.79ms, fracRes: 0.2288, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.8981, norm(y): 0.9907, norm:0.3947, tok/sec: 188108.27, flops:164.76, batch-reuse:1
@ 1434 train 4.2929 , allloss: 4.2929, dt: 695.95ms, fracRes: 0.2285, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8984, norm(y): 0.9906, norm:0.3958, tok/sec: 188336.65, flops:164.96, batch-reuse:1
@ 1435 train 4.2399 , allloss: 4.2399, dt: 696.97ms, fracRes: 0.2263, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8941, norm(y): 0.9906, norm:0.3996, tok/sec: 188059.43, flops:164.71, batch-reuse:1
@ 1436 train 4.2583 , allloss: 4.2583, dt: 698.79ms, fracRes: 0.2324, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8937, norm(y): 0.9906, norm:0.4463, tok/sec: 187571.14, flops:164.29, batch-reuse:1
@ 1437 train 4.2634 , allloss: 4.2634, dt: 700.30ms, fracRes: 0.2263, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8898, norm(y): 0.9906, norm:0.4481, tok/sec: 187166.78, flops:163.93, batch-reuse:1
@ 1438 train 4.1492 , allloss: 4.1492, dt: 697.60ms, fracRes: 0.2246, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.8904, norm(y): 0.9907, norm:0.4583, tok/sec: 187888.65, flops:164.56, batch-reuse:1
@ 1439 train 4.1813 , allloss: 4.1813, dt: 682.69ms, fracRes: 0.2311, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8953, norm(y): 0.9906, norm:0.4884, tok/sec: 191994.13, flops:168.16, batch-reuse:1
@ 1440 train 4.1976 , allloss: 4.1976, dt: 699.04ms, fracRes: 0.2285, norm(attn): 0.3789, norm(output): 0.7891, norm(x): 0.8910, norm(y): 0.9906, norm:0.4454, tok/sec: 187501.98, flops:164.22, batch-reuse:1
@ 1441 train 4.1968 , allloss: 4.1968, dt: 697.13ms, fracRes: 0.2269, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8846, norm(y): 0.9906, norm:0.4207, tok/sec: 188016.59, flops:164.68, batch-reuse:1
@ 1442 train 4.2043 , allloss: 4.2043, dt: 693.67ms, fracRes: 0.2343, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8918, norm(y): 0.9905, norm:0.5167, tok/sec: 188955.37, flops:165.50, batch-reuse:1
@ 1443 train 4.1840 , allloss: 4.1840, dt: 687.85ms, fracRes: 0.2342, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8917, norm(y): 0.9905, norm:0.4721, tok/sec: 190554.43, flops:166.90, batch-reuse:1
@ 1444 train 4.1762 , allloss: 4.1762, dt: 700.02ms, fracRes: 0.2321, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8925, norm(y): 0.9906, norm:0.5053, tok/sec: 187241.56, flops:164.00, batch-reuse:1
@ 1445 train 4.1703 , allloss: 4.1703, dt: 703.38ms, fracRes: 0.2343, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.8980, norm(y): 0.9905, norm:0.5290, tok/sec: 186345.59, flops:163.21, batch-reuse:1
@ 1446 train 4.2301 , allloss: 4.2301, dt: 702.12ms, fracRes: 0.2408, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.9011, norm(y): 0.9904, norm:0.4538, tok/sec: 186680.32, flops:163.51, batch-reuse:1
@ 1447 train 4.2108 , allloss: 4.2108, dt: 679.56ms, fracRes: 0.2395, norm(attn): 0.3809, norm(output): 0.8008, norm(x): 0.9032, norm(y): 0.9904, norm:0.4808, tok/sec: 192879.05, flops:168.93, batch-reuse:1
@ 1448 train 4.2091 , allloss: 4.2091, dt: 681.61ms, fracRes: 0.2333, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9037, norm(y): 0.9905, norm:0.4537, tok/sec: 192297.08, flops:168.42, batch-reuse:1
@ 1449 train 4.3228 , allloss: 4.3228, dt: 696.23ms, fracRes: 0.2342, norm(attn): 0.3789, norm(output): 0.8047, norm(x): 0.9031, norm(y): 0.9905, norm:0.4800, tok/sec: 188259.00, flops:164.89, batch-reuse:1
@ 1450 train 4.2558 , allloss: 4.2558, dt: 689.03ms, fracRes: 0.2341, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8996, norm(y): 0.9905, norm:0.4605, tok/sec: 190227.91, flops:166.61, batch-reuse:1
@ 1451 train 4.1822 , allloss: 4.1822, dt: 699.62ms, fracRes: 0.2436, norm(attn): 0.3789, norm(output): 0.7852, norm(x): 0.9008, norm(y): 0.9903, norm:0.5013, tok/sec: 187346.20, flops:164.09, batch-reuse:1
@ 1452 train 4.1901 , allloss: 4.1901, dt: 695.70ms, fracRes: 0.2317, norm(attn): 0.3770, norm(output): 0.7852, norm(x): 0.8881, norm(y): 0.9905, norm:0.4265, tok/sec: 188403.65, flops:165.01, batch-reuse:1
@ 1453 train 4.2780 , allloss: 4.2780, dt: 711.99ms, fracRes: 0.2246, norm(attn): 0.3770, norm(output): 0.7891, norm(x): 0.8883, norm(y): 0.9905, norm:0.4417, tok/sec: 184093.55, flops:161.24, batch-reuse:1
@ 1454 train 4.2360 , allloss: 4.2360, dt: 717.28ms, fracRes: 0.2204, norm(attn): 0.3789, norm(output): 0.8047, norm(x): 0.8907, norm(y): 0.9905, norm:0.4467, tok/sec: 182734.62, flops:160.05, batch-reuse:1
@ 1455 train 4.1399 , allloss: 4.1399, dt: 718.37ms, fracRes: 0.2265, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8914, norm(y): 0.9905, norm:0.4218, tok/sec: 182457.40, flops:159.81, batch-reuse:1
@ 1456 train 4.1849 , allloss: 4.1849, dt: 713.44ms, fracRes: 0.2356, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.8956, norm(y): 0.9904, norm:0.4758, tok/sec: 183719.26, flops:160.91, batch-reuse:1
@ 1457 train 4.2191 , allloss: 4.2191, dt: 703.89ms, fracRes: 0.2295, norm(attn): 0.3770, norm(output): 0.7930, norm(x): 0.8885, norm(y): 0.9906, norm:0.4141, tok/sec: 186211.40, flops:163.09, batch-reuse:1
@ 1458 train 4.2438 , allloss: 4.2438, dt: 702.11ms, fracRes: 0.2342, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8933, norm(y): 0.9905, norm:0.4664, tok/sec: 186682.48, flops:163.51, batch-reuse:1
@ 1459 train 4.2586 , allloss: 4.2586, dt: 710.31ms, fracRes: 0.2320, norm(attn): 0.3828, norm(output): 0.8047, norm(x): 0.8978, norm(y): 0.9906, norm:0.4753, tok/sec: 184526.96, flops:161.62, batch-reuse:1
@ 1460 train 4.2611 , allloss: 4.2611, dt: 694.51ms, fracRes: 0.2248, norm(attn): 0.3809, norm(output): 0.7930, norm(x): 0.8877, norm(y): 0.9908, norm:0.4007, tok/sec: 188727.04, flops:165.30, batch-reuse:1
@ 1461 train 4.1622 , allloss: 4.1622, dt: 718.04ms, fracRes: 0.2295, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8949, norm(y): 0.9906, norm:0.4507, tok/sec: 182542.15, flops:159.88, batch-reuse:1
@ 1462 train 4.1912 , allloss: 4.1912, dt: 684.80ms, fracRes: 0.2363, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.9015, norm(y): 0.9904, norm:0.4308, tok/sec: 191401.83, flops:167.64, batch-reuse:1
@ 1463 train 4.2145 , allloss: 4.2145, dt: 704.30ms, fracRes: 0.2382, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.9036, norm(y): 0.9904, norm:0.4097, tok/sec: 186102.22, flops:163.00, batch-reuse:1
@ 1464 train 4.2310 , allloss: 4.2310, dt: 695.19ms, fracRes: 0.2329, norm(attn): 0.3848, norm(output): 0.7969, norm(x): 0.8967, norm(y): 0.9906, norm:0.4456, tok/sec: 188542.18, flops:165.14, batch-reuse:1
@ 1465 train 4.1133 , allloss: 4.1133, dt: 705.04ms, fracRes: 0.2335, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.8991, norm(y): 0.9905, norm:0.4421, tok/sec: 185908.07, flops:162.83, batch-reuse:1
@ 1466 train 4.1118 , allloss: 4.1118, dt: 709.94ms, fracRes: 0.2297, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.8985, norm(y): 0.9906, norm:0.4262, tok/sec: 184624.06, flops:161.70, batch-reuse:1
@ 1467 train 4.2189 , allloss: 4.2189, dt: 696.02ms, fracRes: 0.2276, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.8993, norm(y): 0.9906, norm:0.4688, tok/sec: 188317.75, flops:164.94, batch-reuse:1
@ 1468 train 4.2254 , allloss: 4.2254, dt: 685.75ms, fracRes: 0.2332, norm(attn): 0.3809, norm(output): 0.8008, norm(x): 0.8973, norm(y): 0.9905, norm:0.4605, tok/sec: 191137.51, flops:167.41, batch-reuse:1
@ 1469 train 4.2891 , allloss: 4.2891, dt: 703.43ms, fracRes: 0.2345, norm(attn): 0.3887, norm(output): 0.8008, norm(x): 0.9010, norm(y): 0.9904, norm:0.5630, tok/sec: 186331.56, flops:163.20, batch-reuse:1
@ 1470 train 4.2637 , allloss: 4.2637, dt: 691.35ms, fracRes: 0.2354, norm(attn): 0.3867, norm(output): 0.8008, norm(x): 0.9019, norm(y): 0.9906, norm:0.4707, tok/sec: 189587.58, flops:166.05, batch-reuse:1
@ 1471 train 4.1448 , allloss: 4.1448, dt: 701.82ms, fracRes: 0.2360, norm(attn): 0.3809, norm(output): 0.7891, norm(x): 0.8967, norm(y): 0.9906, norm:0.4765, tok/sec: 186760.74, flops:163.58, batch-reuse:1
@ 1472 train 4.1466 , allloss: 4.1466, dt: 701.23ms, fracRes: 0.2360, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8986, norm(y): 0.9905, norm:0.3983, tok/sec: 186916.75, flops:163.71, batch-reuse:1
@ 1473 train 4.2598 , allloss: 4.2598, dt: 695.76ms, fracRes: 0.2340, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8974, norm(y): 0.9905, norm:0.4807, tok/sec: 188385.51, flops:165.00, batch-reuse:1
@ 1474 train 4.3742 , allloss: 4.3742, dt: 691.48ms, fracRes: 0.2366, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9067, norm(y): 0.9905, norm:0.5596, tok/sec: 189553.58, flops:166.02, batch-reuse:1
@ 1475 train 4.1901 , allloss: 4.1901, dt: 698.79ms, fracRes: 0.2276, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8992, norm(y): 0.9905, norm:0.5030, tok/sec: 187568.83, flops:164.28, batch-reuse:1
@ 1476 train 4.1598 , allloss: 4.1598, dt: 701.61ms, fracRes: 0.2333, norm(attn): 0.3770, norm(output): 0.7969, norm(x): 0.8956, norm(y): 0.9905, norm:0.4799, tok/sec: 186816.52, flops:163.62, batch-reuse:1
@ 1477 train 4.1666 , allloss: 4.1666, dt: 691.36ms, fracRes: 0.2358, norm(attn): 0.3789, norm(output): 0.8008, norm(x): 0.8963, norm(y): 0.9904, norm:0.4418, tok/sec: 189584.44, flops:166.05, batch-reuse:1
@ 1478 train 4.1612 , allloss: 4.1612, dt: 687.29ms, fracRes: 0.2279, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.8946, norm(y): 0.9904, norm:0.4485, tok/sec: 190709.51, flops:167.03, batch-reuse:1
@ 1479 train 4.1674 , allloss: 4.1674, dt: 679.08ms, fracRes: 0.2331, norm(attn): 0.3770, norm(output): 0.8008, norm(x): 0.8994, norm(y): 0.9903, norm:0.4762, tok/sec: 193013.40, flops:169.05, batch-reuse:1
@ 1480 train 4.2204 , allloss: 4.2204, dt: 697.17ms, fracRes: 0.2364, norm(attn): 0.3750, norm(output): 0.7969, norm(x): 0.9005, norm(y): 0.9903, norm:0.4313, tok/sec: 188005.02, flops:164.67, batch-reuse:1
@ 1481 train 4.1547 , allloss: 4.1547, dt: 679.87ms, fracRes: 0.2422, norm(attn): 0.3789, norm(output): 0.7969, norm(x): 0.9020, norm(y): 0.9903, norm:0.4244, tok/sec: 192790.71, flops:168.86, batch-reuse:1
@ 1482 train 4.2347 , allloss: 4.2347, dt: 690.78ms, fracRes: 0.2381, norm(attn): 0.3848, norm(output): 0.8008, norm(x): 0.8999, norm(y): 0.9904, norm:0.4099, tok/sec: 189744.95, flops:166.19, batch-reuse:1
@ 1483 train 4.2499 , allloss: 4.2499, dt: 703.41ms, fracRes: 0.2402, norm(attn): 0.3867, norm(output): 0.7969, norm(x): 0.8992, norm(y): 0.9904, norm:0.4212, tok/sec: 186337.12, flops:163.20, batch-reuse:1
@ 1484 train 4.2931 , allloss: 4.2931, dt: 700.96ms, fracRes: 0.2373, norm(attn): 0.3828, norm(output): 0.8047, norm(x): 0.9019, norm(y): 0.9904, norm:0.4410, tok/sec: 186988.72, flops:163.78, batch-reuse:1
@ 1485 train 4.3623 , allloss: 4.3623, dt: 702.77ms, fracRes: 0.2395, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9039, norm(y): 0.9903, norm:0.4956, tok/sec: 186506.67, flops:163.35, batch-reuse:1
@ 1486 train 4.3835 , allloss: 4.3835, dt: 695.90ms, fracRes: 0.2346, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9028, norm(y): 0.9904, norm:0.4915, tok/sec: 188347.81, flops:164.97, batch-reuse:1
@ 1487 train 4.3929 , allloss: 4.3929, dt: 695.46ms, fracRes: 0.2315, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9013, norm(y): 0.9905, norm:0.4373, tok/sec: 188469.08, flops:165.07, batch-reuse:1
@ 1488 train 4.3378 , allloss: 4.3378, dt: 703.77ms, fracRes: 0.2311, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9031, norm(y): 0.9905, norm:0.4458, tok/sec: 186241.36, flops:163.12, batch-reuse:1
@ 1489 train 4.4568 , allloss: 4.4568, dt: 706.20ms, fracRes: 0.2372, norm(attn): 0.3789, norm(output): 0.8086, norm(x): 0.9075, norm(y): 0.9905, norm:0.4634, tok/sec: 185601.40, flops:162.56, batch-reuse:1
@ 1490 train 4.4949 , allloss: 4.4949, dt: 712.41ms, fracRes: 0.2398, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9079, norm(y): 0.9905, norm:0.4632, tok/sec: 183983.70, flops:161.14, batch-reuse:1
@ 1491 train 4.4091 , allloss: 4.4091, dt: 691.85ms, fracRes: 0.2346, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9058, norm(y): 0.9905, norm:0.4850, tok/sec: 189450.77, flops:165.93, batch-reuse:1
@ 1492 train 4.3317 , allloss: 4.3317, dt: 694.27ms, fracRes: 0.2364, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9069, norm(y): 0.9905, norm:0.5503, tok/sec: 188791.91, flops:165.35, batch-reuse:1
@ 1493 train 4.3149 , allloss: 4.3149, dt: 705.74ms, fracRes: 0.2444, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9113, norm(y): 0.9903, norm:0.5257, tok/sec: 185723.86, flops:162.67, batch-reuse:1
@ 1494 train 4.3460 , allloss: 4.3460, dt: 709.74ms, fracRes: 0.2382, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9083, norm(y): 0.9904, norm:0.4419, tok/sec: 184675.79, flops:161.75, batch-reuse:1
@ 1495 train 4.3627 , allloss: 4.3627, dt: 710.08ms, fracRes: 0.2374, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9080, norm(y): 0.9904, norm:0.4900, tok/sec: 184588.23, flops:161.67, batch-reuse:1
@ 1496 train 4.3661 , allloss: 4.3661, dt: 701.62ms, fracRes: 0.2359, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9071, norm(y): 0.9904, norm:0.5049, tok/sec: 186813.54, flops:163.62, batch-reuse:1
@ 1497 train 4.2148 , allloss: 4.2148, dt: 683.01ms, fracRes: 0.2399, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9111, norm(y): 0.9905, norm:0.5571, tok/sec: 191902.85, flops:168.08, batch-reuse:1
@ 1498 train 4.3961 , allloss: 4.3961, dt: 696.68ms, fracRes: 0.2335, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9090, norm(y): 0.9905, norm:0.4515, tok/sec: 188139.17, flops:164.78, batch-reuse:1
@ 1499 train 4.2814 , allloss: 4.2814, dt: 696.47ms, fracRes: 0.2461, norm(attn): 0.3828, norm(output): 0.8203, norm(x): 0.9281, norm(y): 0.9903, norm:0.6035, tok/sec: 188193.65, flops:164.83, batch-reuse:1
@ 1500 train 4.3814 , allloss: 4.3814, dt: 688.71ms, fracRes: 0.2351, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9132, norm(y): 0.9905, norm:0.6216, tok/sec: 190314.77, flops:166.69, batch-reuse:1
@ 1501 train 4.3115 , allloss: 4.3115, dt: 695.37ms, fracRes: 0.2366, norm(attn): 0.3828, norm(output): 0.8047, norm(x): 0.9071, norm(y): 0.9904, norm:0.5083, tok/sec: 188492.53, flops:165.09, batch-reuse:1
@ 1502 train 4.3258 , allloss: 4.3258, dt: 696.79ms, fracRes: 0.2383, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9088, norm(y): 0.9904, norm:0.5340, tok/sec: 188107.17, flops:164.75, batch-reuse:1
@ 1503 train 4.4278 , allloss: 4.4278, dt: 699.75ms, fracRes: 0.2324, norm(attn): 0.3848, norm(output): 0.8047, norm(x): 0.9046, norm(y): 0.9906, norm:0.5878, tok/sec: 187313.71, flops:164.06, batch-reuse:1
@ 1504 train 4.4092 , allloss: 4.4092, dt: 688.99ms, fracRes: 0.2300, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9051, norm(y): 0.9906, norm:0.4906, tok/sec: 190238.97, flops:166.62, batch-reuse:1
@ 1505 train 4.3529 , allloss: 4.3529, dt: 688.66ms, fracRes: 0.2370, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9096, norm(y): 0.9904, norm:0.4720, tok/sec: 190328.94, flops:166.70, batch-reuse:1
@ 1506 train 4.4040 , allloss: 4.4040, dt: 699.31ms, fracRes: 0.2438, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9163, norm(y): 0.9903, norm:0.4390, tok/sec: 187429.43, flops:164.16, batch-reuse:1
@ 1507 train 4.2928 , allloss: 4.2928, dt: 689.85ms, fracRes: 0.2403, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9152, norm(y): 0.9903, norm:0.4458, tok/sec: 190000.11, flops:166.41, batch-reuse:1
@ 1508 train 4.3710 , allloss: 4.3710, dt: 690.83ms, fracRes: 0.2321, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9099, norm(y): 0.9904, norm:0.4253, tok/sec: 189732.05, flops:166.18, batch-reuse:1
@ 1509 train 4.3570 , allloss: 4.3570, dt: 700.69ms, fracRes: 0.2262, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9021, norm(y): 0.9905, norm:0.4386, tok/sec: 187060.30, flops:163.84, batch-reuse:1
@ 1510 train 4.3365 , allloss: 4.3365, dt: 694.32ms, fracRes: 0.2410, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9139, norm(y): 0.9903, norm:0.4006, tok/sec: 188778.75, flops:165.34, batch-reuse:1
@ 1511 train 4.3885 , allloss: 4.3885, dt: 695.72ms, fracRes: 0.2383, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9102, norm(y): 0.9904, norm:0.4414, tok/sec: 188396.42, flops:165.01, batch-reuse:1
@ 1512 train 4.4439 , allloss: 4.4439, dt: 710.12ms, fracRes: 0.2397, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9154, norm(y): 0.9905, norm:0.4593, tok/sec: 184576.46, flops:161.66, batch-reuse:1
@ 1513 train 4.3573 , allloss: 4.3573, dt: 707.91ms, fracRes: 0.2371, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9146, norm(y): 0.9905, norm:0.4881, tok/sec: 185154.21, flops:162.17, batch-reuse:1
@ 1514 train 4.3732 , allloss: 4.3732, dt: 691.04ms, fracRes: 0.2430, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9223, norm(y): 0.9903, norm:0.5493, tok/sec: 189673.46, flops:166.13, batch-reuse:1
@ 1515 train 4.3527 , allloss: 4.3527, dt: 691.56ms, fracRes: 0.2396, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9189, norm(y): 0.9904, norm:0.4320, tok/sec: 189530.84, flops:166.00, batch-reuse:1
@ 1516 train 4.2517 , allloss: 4.2517, dt: 686.50ms, fracRes: 0.2362, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9145, norm(y): 0.9905, norm:0.4291, tok/sec: 190927.94, flops:167.23, batch-reuse:1
@ 1517 train 4.3232 , allloss: 4.3232, dt: 689.44ms, fracRes: 0.2337, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9143, norm(y): 0.9905, norm:0.4368, tok/sec: 190114.37, flops:166.51, batch-reuse:1
@ 1518 train 4.3278 , allloss: 4.3278, dt: 689.21ms, fracRes: 0.2380, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9143, norm(y): 0.9903, norm:0.4099, tok/sec: 190177.37, flops:166.57, batch-reuse:1
@ 1519 train 4.3439 , allloss: 4.3439, dt: 704.93ms, fracRes: 0.2435, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9175, norm(y): 0.9903, norm:0.3856, tok/sec: 185936.11, flops:162.85, batch-reuse:1
@ 1520 train 4.3235 , allloss: 4.3235, dt: 703.03ms, fracRes: 0.2444, norm(attn): 0.3789, norm(output): 0.8047, norm(x): 0.9130, norm(y): 0.9903, norm:0.3706, tok/sec: 186438.86, flops:163.29, batch-reuse:1
@ 1521 train 4.2903 , allloss: 4.2903, dt: 676.77ms, fracRes: 0.2454, norm(attn): 0.3828, norm(output): 0.8047, norm(x): 0.9117, norm(y): 0.9903, norm:0.3881, tok/sec: 193673.99, flops:169.63, batch-reuse:1
@ 1522 train 4.3314 , allloss: 4.3314, dt: 698.18ms, fracRes: 0.2397, norm(attn): 0.3828, norm(output): 0.8008, norm(x): 0.9095, norm(y): 0.9904, norm:0.4058, tok/sec: 187732.81, flops:164.43, batch-reuse:1
@ 1523 train 4.3303 , allloss: 4.3303, dt: 698.77ms, fracRes: 0.2352, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9125, norm(y): 0.9904, norm:0.4514, tok/sec: 187575.36, flops:164.29, batch-reuse:1
@ 1524 train 4.3866 , allloss: 4.3866, dt: 701.09ms, fracRes: 0.2324, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9093, norm(y): 0.9904, norm:0.4376, tok/sec: 186954.51, flops:163.75, batch-reuse:1
@ 1525 train 4.3566 , allloss: 4.3566, dt: 737.92ms, fracRes: 0.2353, norm(attn): 0.3789, norm(output): 0.8086, norm(x): 0.9086, norm(y): 0.9904, norm:0.3961, tok/sec: 177622.72, flops:155.57, batch-reuse:1
@ 1526 train 4.3806 , allloss: 4.3806, dt: 687.22ms, fracRes: 0.2421, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9140, norm(y): 0.9902, norm:0.4883, tok/sec: 190727.50, flops:167.05, batch-reuse:1
@ 1527 train 4.2787 , allloss: 4.2787, dt: 711.18ms, fracRes: 0.2386, norm(attn): 0.3848, norm(output): 0.8086, norm(x): 0.9109, norm(y): 0.9904, norm:0.5499, tok/sec: 184301.97, flops:161.42, batch-reuse:1
@ 1528 train 4.3499 , allloss: 4.3499, dt: 701.30ms, fracRes: 0.2468, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9167, norm(y): 0.9901, norm:0.4489, tok/sec: 186897.56, flops:163.70, batch-reuse:1
@ 1529 train 4.2681 , allloss: 4.2681, dt: 697.42ms, fracRes: 0.2421, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9127, norm(y): 0.9902, norm:0.4720, tok/sec: 187937.86, flops:164.61, batch-reuse:1
@ 1530 train 4.2837 , allloss: 4.2837, dt: 703.42ms, fracRes: 0.2442, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9152, norm(y): 0.9902, norm:0.4825, tok/sec: 186334.03, flops:163.20, batch-reuse:1
@ 1531 train 4.2710 , allloss: 4.2710, dt: 696.98ms, fracRes: 0.2387, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9101, norm(y): 0.9904, norm:0.4145, tok/sec: 188057.69, flops:164.71, batch-reuse:1
@ 1532 train 4.3404 , allloss: 4.3404, dt: 687.89ms, fracRes: 0.2365, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9122, norm(y): 0.9904, norm:0.4273, tok/sec: 190542.94, flops:166.89, batch-reuse:1
@ 1533 train 4.2521 , allloss: 4.2521, dt: 692.34ms, fracRes: 0.2359, norm(attn): 0.3867, norm(output): 0.8047, norm(x): 0.9096, norm(y): 0.9904, norm:0.4325, tok/sec: 189316.44, flops:165.81, batch-reuse:1
@ 1534 train 4.3415 , allloss: 4.3415, dt: 699.22ms, fracRes: 0.2366, norm(attn): 0.3789, norm(output): 0.8047, norm(x): 0.9064, norm(y): 0.9904, norm:0.4183, tok/sec: 187454.29, flops:164.18, batch-reuse:1
@ 1535 train 4.3554 , allloss: 4.3554, dt: 687.59ms, fracRes: 0.2366, norm(attn): 0.3809, norm(output): 0.8047, norm(x): 0.9082, norm(y): 0.9903, norm:0.4392, tok/sec: 190626.58, flops:166.96, batch-reuse:1
@ 1536 train 4.3657 , allloss: 4.3657, dt: 702.86ms, fracRes: 0.2398, norm(attn): 0.3809, norm(output): 0.8047, norm(x): 0.9113, norm(y): 0.9903, norm:0.4531, tok/sec: 186482.50, flops:163.33, batch-reuse:1
@ 1537 train 4.3658 , allloss: 4.3658, dt: 689.80ms, fracRes: 0.2396, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9105, norm(y): 0.9904, norm:0.5254, tok/sec: 190013.57, flops:166.42, batch-reuse:1
@ 1538 train 4.2342 , allloss: 4.2342, dt: 688.22ms, fracRes: 0.2458, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9144, norm(y): 0.9902, norm:0.4550, tok/sec: 190449.86, flops:166.81, batch-reuse:1
@ 1539 train 4.2959 , allloss: 4.2959, dt: 695.28ms, fracRes: 0.2465, norm(attn): 0.3809, norm(output): 0.8086, norm(x): 0.9141, norm(y): 0.9902, norm:0.4471, tok/sec: 188517.94, flops:165.11, batch-reuse:1
@ 1540 train 4.3275 , allloss: 4.3275, dt: 712.80ms, fracRes: 0.2385, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9121, norm(y): 0.9903, norm:0.4141, tok/sec: 183884.38, flops:161.06, batch-reuse:1
@ 1541 train 4.2710 , allloss: 4.2710, dt: 709.97ms, fracRes: 0.2388, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9154, norm(y): 0.9904, norm:0.4082, tok/sec: 184615.38, flops:161.70, batch-reuse:1
@ 1542 train 4.2860 , allloss: 4.2860, dt: 698.71ms, fracRes: 0.2403, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9161, norm(y): 0.9904, norm:0.4120, tok/sec: 187591.81, flops:164.30, batch-reuse:1
@ 1543 train 4.4476 , allloss: 4.4476, dt: 693.56ms, fracRes: 0.2509, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9289, norm(y): 0.9901, norm:0.7095, tok/sec: 188985.05, flops:165.52, batch-reuse:1
@ 1544 train 4.2056 , allloss: 4.2056, dt: 695.16ms, fracRes: 0.2444, norm(attn): 0.3965, norm(output): 0.8047, norm(x): 0.9115, norm(y): 0.9903, norm:0.5919, tok/sec: 188549.03, flops:165.14, batch-reuse:1
@ 1545 train 4.3028 , allloss: 4.3028, dt: 703.17ms, fracRes: 0.2464, norm(attn): 0.3887, norm(output): 0.8047, norm(x): 0.9164, norm(y): 0.9903, norm:0.4995, tok/sec: 186401.00, flops:163.26, batch-reuse:1
@ 1546 train 4.8186 , allloss: 4.8186, dt: 708.00ms, fracRes: 0.2428, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9185, norm(y): 0.9903, norm:0.6325, tok/sec: 185129.33, flops:162.15, batch-reuse:1
@ 1547 train 4.3374 , allloss: 4.3374, dt: 686.22ms, fracRes: 0.2401, norm(attn): 0.3789, norm(output): 0.8086, norm(x): 0.9135, norm(y): 0.9902, norm:0.6609, tok/sec: 191005.69, flops:167.29, batch-reuse:1
@ 1548 train 4.4252 , allloss: 4.4252, dt: 705.47ms, fracRes: 0.2466, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9157, norm(y): 0.9901, norm:0.6219, tok/sec: 185794.54, flops:162.73, batch-reuse:1
@ 1549 train 4.4079 , allloss: 4.4079, dt: 706.91ms, fracRes: 0.2398, norm(attn): 0.3809, norm(output): 0.8125, norm(x): 0.9193, norm(y): 0.9902, norm:0.5638, tok/sec: 185414.30, flops:162.40, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.8281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7422, 0.1465, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0041, 0.1338, 0.1924, 0.6680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0206, 0.2158, 0.4922, 0.0894, 0.1826, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.3027, 0.1680, 0.0500, 0.1855, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.3574, 0.0913, 0.0403, 0.0481, 0.0620, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.1201, 0.0291, 0.0172, 0.0625, 0.0408, 0.2021, 0.0532, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0162, 0.0635, 0.0233, 0.0193, 0.0850, 0.4961, 0.1387, 0.0310, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.0513, 0.0908, 0.0374, 0.0466, 0.0864, 0.1348, 0.1230, 0.0525, 0.2207, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.2148, 0.1494, 0.0229, 0.0825, 0.2432, 0.0383, 0.0913, 0.0354, 0.0356, 0.0069, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.0684, 0.0500, 0.1084, 0.0266, 0.0184, 0.0488, 0.1543, 0.0354, 0.0457, 0.1699, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.6523, 0.0288, 0.0041, 0.0023, 0.0092, 0.0038, 0.1250, 0.0095, 0.0164, 0.0128, 0.0076, 0.0151, 0.1133, 0.0000, 0.0000],
        [0.0269, 0.1001, 0.0099, 0.0079, 0.0718, 0.3242, 0.2002, 0.0250, 0.1079, 0.0147, 0.0046, 0.0248, 0.0304, 0.0522, 0.0000],
        [0.0327, 0.1021, 0.0815, 0.0952, 0.0518, 0.0159, 0.0381, 0.0806, 0.0247, 0.0325, 0.0564, 0.1021, 0.1108, 0.0388, 0.1367]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0039,     -1.4688,     -1.6250,     -2.0781,     -1.8906,     -1.7422,     -1.0078,     -1.2031,     -1.9219,     -1.8047,     -2.1562,     -1.5547,     -0.4766,     -1.9922,     -1.2500],
        [    -0.0452,      1.5156,      2.5938,      2.2969,      2.7188,      3.3438,      1.9688,      1.1016,      2.9688,      1.9531,      2.3281,      1.5781,      0.8086,      3.2656,      1.4531],
        [     0.0000,     -1.6250,     -1.9062,     -2.0469,     -2.7188,     -2.9219,     -2.2031,     -1.5938,     -3.4375,     -2.4844,     -2.3281,     -1.5781,     -0.6797,     -3.1094,     -1.8281],
        [    -0.0183,      3.4688,      3.8281,      5.0938,      5.7500,      4.2812,      2.5469,      3.0781,      4.6562,      3.3281,      6.0312,      3.9375,      1.4297,      5.1875,      1.6094],
        [    -0.0596,      2.2812,      3.1094,      1.4062,      2.1094,      3.2344,      2.7500,      2.0312,      1.8984,      1.6094,      1.0234,      1.7656,      0.1729,      1.7188,      1.0156],
        [    -0.0398,      1.0156,      0.4277,     -0.7852,      0.5312,      0.5391,      1.7969,      0.1963,      0.5273,      0.2910,     -0.3848,      0.4199,     -0.6758,      0.3438,     -0.0708],
        [    -0.0542,      0.9922,     -0.3711,     -1.1875,     -1.0156,     -0.7578,      0.7383,     -1.6328,     -0.2490,     -1.6719,     -2.4531,     -1.0312,     -0.7227,     -0.3945,     -1.5781],
        [    -0.0062,     -1.3828,     -2.7969,     -3.3281,     -2.0312,     -2.4531,     -0.8555,     -2.1875,     -2.3438,     -1.9531,     -2.0156,     -2.5625,     -1.5938,     -2.3594,     -2.2031],
        [    -0.0698,      1.2969,      0.2910,      0.1050,      1.5859,      3.3438,      2.0781,      0.5781,      1.9922,      0.1943,     -0.6445,      0.6016,      0.3750,      1.4531,     -0.0449],
        [     0.0129,     -1.1016,     -0.5234,     -1.4141,     -1.1875,     -0.5742,     -0.1289,     -0.2227,     -1.0781,      0.3633,     -1.6719,     -0.1719,      0.2480,     -0.9219,     -0.1494],
        [    -0.0840,      0.9062,      0.5391,     -1.3359,     -0.0503,      1.0312,     -0.8164,      0.0493,     -0.8984,     -0.8867,     -2.5312,      0.6328,     -0.1216,     -0.8320,      0.0098],
        [     0.0219,     -1.1328,     -1.4375,     -0.6641,     -2.0625,     -2.4375,     -1.4609,     -0.3125,     -1.7812,     -1.5312,     -0.2148,     -1.2812,      1.0859,     -1.5625,     -1.1562],
        [     0.0101,     -3.1094,     -5.0625,     -5.6250,     -4.2500,     -5.1250,     -1.6406,     -4.2188,     -3.6719,     -3.9219,     -4.4375,     -3.7656,     -1.7422,     -3.7969,     -3.1562],
        [    -0.0820,      1.2344,     -1.0703,     -1.2969,      0.8984,      2.4062,      1.9297,     -0.1533,      1.3047,     -0.6836,     -1.8438,     -0.1621,      0.0410,      0.5820,     -0.7305],
        [    -0.0256,      1.1094,      0.8867,      1.0391,      0.4277,     -0.7539,      0.1260,      0.8711,     -0.3125,     -0.0405,      0.5117,      1.1094,      1.1875,      0.1416,      1.3984]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5472],
        [0.2683],
        [0.2069],
        [0.2561],
        [0.2541],
        [0.1935],
        [0.1564],
        [0.1637],
        [0.1029],
        [0.2301],
        [0.0973],
        [0.1882],
        [0.1424],
        [0.0703]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0015,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0030,     0.0022,     0.0405,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0140,     0.0175,     0.0312,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0139,     0.0024,     0.0089,     0.0048,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0234,     0.0143,     0.0027,     0.0024,     0.0051,     0.1099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.0078,     0.0140,     0.0074,     0.0051,     0.0136,     0.0903,     0.3418,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0010,     0.0017,     0.0027,     0.0031,     0.0005,     0.0140,     0.0109,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5117,     0.0176,     0.0139,     0.0427,     0.0038,     0.0189,     0.0527,     0.2832,     0.0072,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7070,     0.0065,     0.0186,     0.0217,     0.0043,     0.0056,     0.0154,     0.1836,     0.0038,     0.0232,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0042,     0.0234,     0.0176,     0.0039,     0.0115,     0.0300,     0.1387,     0.0068,     0.0270,     0.0023,     0.1680,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.0051,     0.0136,     0.0007,     0.0008,     0.0062,     0.0845,     0.1211,     0.0121,     0.0256,     0.0010,     0.0525,     0.6484,     0.0000,     0.0000],
        [    0.7227,     0.0020,     0.0038,     0.0036,     0.0078,     0.0011,     0.0293,     0.0181,     0.0058,     0.0156,     0.0012,     0.0139,     0.1699,     0.0071,     0.0000],
        [    0.8828,     0.0042,     0.0051,     0.0037,     0.0013,     0.0013,     0.0015,     0.0018,     0.0001,     0.0018,     0.0004,     0.0115,     0.0479,     0.0002,     0.0359]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,     -0.0776,     -0.0554,     -0.1206,     -0.1787,     -0.1318,     -0.0879,     -0.0233,     -0.1426,     -0.0923,     -0.2158,     -0.0286,     -0.0020,     -0.1523,     -0.0703],
        [    -0.0087,     -7.0625,     -8.1875,     -8.7500,     -8.6250,     -9.3750,     -7.9688,     -8.6875,     -8.3750,     -9.0625,     -9.8125,     -6.1250,     -6.5000,     -8.0000,     -4.5000],
        [    -0.0110,     -6.5000,     -8.0000,     -4.1875,     -6.5312,     -8.9375,     -6.2812,     -7.6562,     -7.2188,     -8.8750,     -7.1250,     -6.9688,     -5.0312,     -6.8125,     -4.2188],
        [    -0.0106,     -5.7500,     -6.0625,     -3.1719,     -2.9688,     -5.9375,     -3.9062,     -5.0312,     -3.5781,     -6.5625,     -2.1406,     -5.0938,     -4.0000,     -3.6094,     -2.5469],
        [     0.0630,     -4.1562,     -3.9219,     -3.3281,     -6.0625,     -5.2812,     -3.2969,     -0.7266,     -6.0312,     -4.6875,     -6.0000,     -2.3594,     -0.6602,     -6.6250,     -3.2656],
        [    -0.0017,     -4.2500,     -6.0000,     -4.6875,     -5.3125,     -5.6562,     -1.4922,     -2.2500,     -2.4219,     -5.8125,     -6.4688,     -3.1406,     -1.6328,     -2.8750,     -1.4922],
        [     0.0105,     -3.5781,     -4.0625,     -5.7500,     -5.8750,     -5.0938,     -2.0312,     -2.0312,     -4.0000,     -5.7500,     -6.9062,     -3.0156,     -1.0234,     -3.9375,     -1.6250],
        [     0.0265,     -4.1562,     -3.5938,     -4.2188,     -4.5938,     -3.6094,     -1.7188,     -0.3887,     -3.9531,     -2.7344,     -4.5312,     -2.1094,      0.5547,     -3.9219,     -1.2031],
        [     0.0352,     -6.8750,     -6.2812,     -5.8438,     -5.7188,     -7.5938,     -4.1875,     -4.4375,     -6.2500,     -5.3750,     -7.3438,     -5.0938,     -2.5625,     -6.2188,     -2.9219],
        [     0.0430,     -3.3281,     -3.5625,     -2.4375,     -4.8438,     -3.2500,     -2.2188,     -0.5430,     -4.2188,     -2.2812,     -3.7188,     -1.3125,      0.1416,     -4.1562,     -2.2500],
        [     0.0457,     -4.6250,     -3.5938,     -3.4375,     -5.0625,     -4.8125,     -3.7812,     -1.3047,     -5.1875,     -3.3750,     -4.3125,     -1.8047,     -0.1885,     -5.2812,     -1.5312],
        [     0.0352,     -4.8750,     -3.1562,     -3.4375,     -4.9375,     -3.8594,     -2.9062,     -1.3750,     -4.4062,     -3.0156,     -5.4688,     -1.1797,      2.3125,     -3.8594,     -1.7969],
        [     0.0265,     -1.6641,     -0.6953,     -3.6094,     -3.5469,     -1.4766,      1.1328,      1.4922,     -0.8047,     -0.0591,     -3.3438,      0.6562,      3.1719,     -0.6133,      0.8359],
        [     0.0381,     -5.8750,     -5.1875,     -5.2500,     -4.5000,     -6.4688,     -3.1719,     -3.6562,     -4.7812,     -3.7969,     -6.3438,     -3.9062,     -1.4062,     -4.5938,     -2.2500],
        [     0.0115,     -5.3438,     -5.1250,     -5.4688,     -6.5312,     -6.5312,     -6.3750,     -6.1875,     -8.8125,     -6.1875,     -7.5938,     -4.3125,     -2.9062,     -8.1875,     -3.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8943],
        [0.8342],
        [0.8035],
        [0.7200],
        [0.6797],
        [0.6259],
        [0.5223],
        [0.5836],
        [0.6110],
        [0.4891],
        [0.7003],
        [0.4354],
        [0.5034],
        [0.6574]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0051,     -0.4141,     -0.3867,     -0.4238,     -0.4180,     -0.4316,     -0.3633,     -0.3438,     -0.4355,     -0.4141,     -0.4297,     -0.3477,     -0.3262,     -0.4395,     -0.3398],
        [     0.2002,    -17.8750,    -16.1250,    -18.8750,    -17.8750,    -18.1250,    -14.6875,    -14.1875,    -18.7500,    -17.6250,    -18.3750,    -14.1250,    -13.3750,    -19.0000,    -14.6875],
        [     0.2031,    -17.3750,    -16.2500,    -18.2500,    -17.8750,    -18.0000,    -14.8750,    -14.1875,    -18.3750,    -17.3750,    -18.2500,    -14.6250,    -13.5625,    -18.6250,    -14.6875],
        [     0.2246,    -19.5000,    -17.5000,    -20.1250,    -19.8750,    -20.0000,    -16.3750,    -15.5625,    -20.3750,    -19.2500,    -20.3750,    -15.6875,    -14.6250,    -20.5000,    -16.1250],
        [     0.2207,    -18.3750,    -16.6250,    -18.7500,    -18.5000,    -18.8750,    -15.5625,    -14.7500,    -19.5000,    -18.3750,    -19.1250,    -14.8750,    -13.6875,    -19.5000,    -15.0000],
        [     0.2207,    -17.3750,    -15.8750,    -18.0000,    -17.6250,    -17.7500,    -14.7500,    -14.0625,    -18.6250,    -17.1250,    -18.2500,    -14.3750,    -13.1875,    -18.7500,    -14.6250],
        [     0.2158,    -16.7500,    -15.6875,    -17.2500,    -16.5000,    -17.2500,    -14.2500,    -13.8125,    -17.7500,    -17.0000,    -17.3750,    -14.2500,    -12.8750,    -17.7500,    -14.1250],
        [     0.2109,    -16.1250,    -14.6250,    -16.3750,    -16.2500,    -16.8750,    -14.0000,    -13.3750,    -16.8750,    -16.3750,    -16.8750,    -13.8125,    -12.5625,    -16.8750,    -13.6250],
        [     0.2363,    -19.7500,    -18.0000,    -20.1250,    -19.6250,    -20.1250,    -16.6250,    -15.9375,    -20.6250,    -19.5000,    -20.3750,    -15.8750,    -14.8125,    -20.7500,    -16.1250],
        [     0.2090,    -16.7500,    -15.2500,    -17.0000,    -17.0000,    -17.5000,    -14.6875,    -13.8750,    -17.6250,    -16.2500,    -17.2500,    -14.1875,    -13.2500,    -17.8750,    -13.7500],
        [     0.2188,    -17.7500,    -15.9375,    -18.1250,    -17.5000,    -17.8750,    -15.1250,    -14.3750,    -18.5000,    -17.5000,    -18.2500,    -14.6875,    -13.3750,    -18.5000,    -14.8125],
        [     0.2520,    -20.8750,    -19.1250,    -21.3750,    -21.6250,    -21.7500,    -18.2500,    -17.3750,    -21.8750,    -21.1250,    -22.0000,    -17.8750,    -16.3750,    -22.0000,    -17.7500],
        [     0.2070,    -15.9375,    -14.1250,    -16.0000,    -16.3750,    -16.8750,    -13.6250,    -12.8125,    -16.5000,    -15.7500,    -16.7500,    -13.1875,    -12.1875,    -16.6250,    -13.2500],
        [     0.2363,    -19.5000,    -17.6250,    -19.8750,    -19.3750,    -19.8750,    -16.2500,    -15.6250,    -20.2500,    -19.2500,    -20.1250,    -15.5625,    -14.5000,    -20.3750,    -15.8125],
        [     0.2344,    -19.7500,    -18.3750,    -20.5000,    -19.8750,    -20.5000,    -17.0000,    -16.3750,    -20.6250,    -19.7500,    -20.5000,    -16.7500,    -15.3750,    -20.8750,    -16.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8470],
        [0.7844],
        [0.7633],
        [0.7177],
        [0.7157],
        [0.6838],
        [0.6491],
        [0.6476],
        [0.6552],
        [0.6224],
        [0.6157],
        [0.6134],
        [0.6076],
        [0.6041]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4277,     0.3301,     0.2412,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0674,     0.0977,     0.0393,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3555,     0.2236,     0.1660,     0.1377,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1318,     0.1279,     0.2041,     0.1167,     0.2344,     0.1865,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1768,     0.1011,     0.1455,     0.1060,     0.1523,     0.1924,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0136,     0.0596,     0.0635,     0.0457,     0.0540,     0.0903,     0.1611,     0.5117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0277,     0.0781,     0.0325,     0.0352,     0.0479,     0.0742,     0.0991,     0.3984,     0.2061,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0442,     0.0299,     0.0334,     0.0281,     0.0266,     0.0454,     0.0410,     0.1807,     0.2432,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0300,     0.0217,     0.0181,     0.0146,     0.0192,     0.0396,     0.0299,     0.1748,     0.1689,     0.3359,     0.1475,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0186,     0.0135,     0.0126,     0.0093,     0.0173,     0.0292,     0.1182,     0.1709,     0.1572,     0.2383,     0.2090,     0.0000,     0.0000,     0.0000],
        [    0.0498,     0.0131,     0.0156,     0.0109,     0.0107,     0.0146,     0.0188,     0.0698,     0.1167,     0.1260,     0.1040,     0.1260,     0.3242,     0.0000,     0.0000],
        [    0.0216,     0.0111,     0.0046,     0.0044,     0.0060,     0.0092,     0.0113,     0.0481,     0.0239,     0.1240,     0.0520,     0.0635,     0.4297,     0.1914,     0.0000],
        [    0.0237,     0.0086,     0.0090,     0.0070,     0.0060,     0.0110,     0.0082,     0.0403,     0.0742,     0.0349,     0.0427,     0.0540,     0.1650,     0.4004,     0.1147]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0023,     -0.3984,     -0.3516,     -0.3750,     -0.3496,     -0.3770,     -0.4453,     -0.4414,     -0.4492,     -0.3789,     -0.4961,     -0.4609,     -0.4570,     -0.4883,     -0.5078],
        [     0.0791,     -7.2188,     -6.0000,     -7.1250,     -6.6562,     -6.3438,     -7.1562,     -6.3125,     -6.4062,     -5.3750,     -6.7812,     -6.4062,     -5.3750,     -5.7188,     -6.3125],
        [     0.0369,     -0.2227,     -0.5352,     -0.5039,     -0.6836,     -0.0062,      0.0238,      0.6094,      0.8438,      1.2422,      0.7539,      1.0078,      1.8516,      1.7656,      1.6484],
        [     0.0576,     -2.4219,     -2.0469,     -2.9531,     -2.2812,     -1.9922,     -1.9531,     -1.1953,     -1.3281,     -0.2500,     -1.0625,     -1.0078,     -0.0018,     -0.3496,     -0.4707],
        [     0.0608,     -0.4023,     -0.6992,     -0.8867,     -1.0469,      0.0679,     -0.0459,      0.9531,      0.6289,      2.0781,      0.7383,      1.5000,      2.7031,      1.9531,      2.0000],
        [     0.0540,      0.0249,      0.4902,     -0.0693,      0.6289,      0.3984,      0.4824,      1.9141,      1.8125,      2.6094,      1.7422,      2.3906,      3.2031,      3.0312,      2.7344],
        [     0.0415,     -0.5156,     -0.1523,     -0.4727,     -0.1060,      0.1245,     -0.3105,      1.1953,      1.6328,      1.0938,      1.2812,      1.3125,      2.1719,      2.7969,      1.8047],
        [     0.0469,      1.5234,      1.5859,      1.2578,      1.4219,      1.9375,      2.5156,      3.6719,      4.0000,      4.1250,      4.2500,      4.4062,      5.3125,      5.6562,      5.3438],
        [     0.0815,      1.1172,      0.2412,      0.3203,      0.6289,      1.0703,      1.3516,      2.7500,      2.0938,      3.5156,      2.8594,      3.0625,      4.8125,      4.0312,      4.0938],
        [     0.0659,     -0.3223,     -0.2109,     -0.3906,     -0.4414,      0.0923,     -0.0063,      1.4766,      1.7734,      2.0625,      1.4219,      2.1719,      3.1719,      3.2812,      2.7969],
        [     0.0854,     -0.2393,     -0.4258,     -0.6367,     -0.3633,      0.3574,      0.0786,      1.8438,      1.8125,      2.5000,      1.6719,      2.3438,      3.6875,      3.5938,      2.8125],
        [     0.0491,      1.5312,      1.2109,      1.1484,      0.8398,      1.4609,      1.9844,      3.3906,      3.7500,      3.6719,      4.0938,      3.9531,      5.1875,      5.6875,      5.4375],
        [     0.0654,     -1.2656,     -1.0938,     -1.4531,     -1.4688,     -1.1641,     -0.9062,      0.4062,      0.9219,      0.9922,      0.8047,      0.9922,      1.9375,      2.6094,      2.0312],
        [     0.0952,     -0.5703,     -1.4453,     -1.5000,     -1.1953,     -0.7539,     -0.5547,      0.8945,      0.1992,      1.8438,      0.9766,      1.1719,      3.0781,      2.2812,      2.3281],
        [     0.0703,     -0.9453,     -0.8945,     -1.1562,     -1.2969,     -0.6953,     -0.9961,      0.6016,      1.2109,      0.4590,      0.6562,      0.8906,      2.0156,      2.8906,      1.6484]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6475],
        [0.1969],
        [0.2488],
        [0.1514],
        [0.1484],
        [0.1073],
        [0.0764],
        [0.0862],
        [0.0950],
        [0.0843],
        [0.0606],
        [0.0651],
        [0.0757],
        [0.0679]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0986,     0.9023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2217,     0.5820,     0.1943,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1089,     0.4805,     0.2910,     0.1196,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1543,     0.7773,     0.0238,     0.0047,     0.0376,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0811,     0.7734,     0.0178,     0.0054,     0.0359,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0177,     0.2949,     0.0215,     0.0017,     0.0142,     0.1016,     0.5469,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0176,     0.0111,     0.0009,     0.0001,     0.0006,     0.0045,     0.9492,     0.0143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0825,     0.0576,     0.0022,     0.0003,     0.0026,     0.0164,     0.6641,     0.0109,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0111,     0.0050,     0.0007,     0.0001,     0.0014,     0.0035,     0.1377,     0.0042,     0.2441,     0.5898,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.0045,     0.0003,     0.0000,     0.0013,     0.0015,     0.1260,     0.0012,     0.1523,     0.6250,     0.0762,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.0074,     0.0009,     0.0001,     0.0011,     0.0024,     0.0289,     0.0007,     0.1973,     0.4492,     0.2988,     0.0103,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.0052,     0.0004,     0.0001,     0.0006,     0.0015,     0.0408,     0.0010,     0.1719,     0.3066,     0.4160,     0.0068,     0.0405,     0.0000,     0.0000],
        [    0.0334,     0.0155,     0.0005,     0.0001,     0.0007,     0.0024,     0.0225,     0.0010,     0.0532,     0.1328,     0.5273,     0.0058,     0.0226,     0.1807,     0.0000],
        [    0.0064,     0.0093,     0.0006,     0.0001,     0.0006,     0.0026,     0.0065,     0.0005,     0.0576,     0.1309,     0.2617,     0.0087,     0.0164,     0.1396,     0.3574]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.1699,     -0.2256,     -0.2617,     -0.1807,     -0.1680,     -0.1162,     -0.2041,     -0.1289,     -0.1309,     -0.1602,     -0.2002,     -0.1797,     -0.1270,     -0.1396],
        [    -0.0082,      2.2031,     -2.5625,     -3.4844,     -2.1719,     -1.0938,      0.5234,     -2.1406,      1.0312,      0.2412,      1.0547,     -1.8047,     -1.7109,      0.6445,      1.2656],
        [     0.0125,      0.9805,     -0.1177,     -1.8906,     -1.0859,      0.4219,      1.6562,     -0.6562,      2.8906,      3.0938,      2.5312,      1.0469,      1.7812,      3.7656,      4.6250],
        [     0.0002,      1.4844,      0.9844,      0.0967,      0.0349,      1.4844,      2.5469,      0.7773,      3.3906,      3.8750,      3.7344,      1.7578,      2.6562,      4.0312,      4.9688],
        [     0.0060,      1.6250,     -1.8672,     -3.5000,     -1.4062,      1.0000,      1.7656,     -0.3516,      2.5625,      1.8047,      2.7812,     -0.3906,      1.2891,      3.3906,      3.4531],
        [     0.0031,      2.2656,     -1.5156,     -2.7031,     -0.8125,      0.0579,      2.6875,     -0.0781,      4.3125,      3.0781,      3.6719,      0.0276,      1.4531,      4.6875,      4.0000],
        [    -0.0118,      2.7969,      0.1816,     -2.3750,     -0.2314,      1.7344,      3.4219,      0.6289,      3.6719,      3.4219,      2.2500,      0.2441,      0.9492,      3.5156,      4.0312],
        [     0.0015,     -0.4629,     -2.9375,     -5.1250,     -3.3750,     -1.3516,      3.9844,     -0.2080,      1.8359,      2.2500,      1.0547,     -1.1250,      0.1680,      1.3125,      3.2812],
        [     0.0117,     -0.3496,     -3.5938,     -5.5625,     -3.4375,     -1.6016,      2.0938,     -2.0156,      0.7031,      2.0625,      2.2188,     -1.4609,     -0.3574,      0.8164,      2.8281],
        [     0.0245,     -0.7656,     -2.7500,     -4.7500,     -2.0312,     -1.1172,      2.5469,     -0.9336,      3.1250,      4.0000,      3.7344,      1.2578,      2.3438,      3.9375,      5.4062],
        [     0.0275,     -0.8008,     -3.4688,     -5.5938,     -2.0625,     -1.8828,      2.5312,     -2.1094,      2.7188,      4.1250,      2.0312,     -0.5117,      1.2812,      3.8281,      5.0312],
        [     0.0236,      0.4824,     -1.6016,     -3.5625,     -1.4141,     -0.6484,      1.8516,     -1.8906,      3.7656,      4.5938,      4.1875,      0.8203,      2.1250,      5.1562,      6.4688],
        [     0.0168,     -0.6953,     -3.1875,     -5.1250,     -2.8125,     -1.9531,      1.3672,     -2.3281,      2.8125,      3.3906,      3.6875,     -0.4180,      1.3594,      3.9375,      5.1562],
        [     0.0128,     -0.7578,     -4.1875,     -5.8125,     -3.8750,     -2.6094,     -0.3887,     -3.5156,      0.4746,      1.3906,      2.7656,     -1.7500,     -0.3809,      1.6953,      2.6406],
        [     0.0226,      0.4062,     -2.4062,     -4.0000,     -2.3438,     -0.8672,      0.0425,     -2.6250,      2.2188,      3.0469,      3.7344,      0.3301,      0.9648,      3.1094,      4.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8809],
        [0.3624],
        [0.3632],
        [0.3513],
        [0.3690],
        [0.3866],
        [0.3389],
        [0.3331],
        [0.3251],
        [0.2952],
        [0.3307],
        [0.3222],
        [0.3047],
        [0.3228]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8477, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0364, 0.9258, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0481, 0.9258, 0.0091, 0.0156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.8242, 0.0284, 0.0217, 0.0309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.7148, 0.0171, 0.0371, 0.0220, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.5898, 0.0020, 0.0063, 0.0107, 0.0439, 0.0237, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.2852, 0.0042, 0.0121, 0.0068, 0.1221, 0.0396, 0.0300, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.4492, 0.0244, 0.0146, 0.0101, 0.2129, 0.0364, 0.1406, 0.0160, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.4844, 0.0153, 0.0294, 0.0199, 0.0874, 0.0354, 0.1226, 0.0393, 0.0267, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.3633, 0.0422, 0.0508, 0.0294, 0.0466, 0.0295, 0.1543, 0.0535, 0.0649, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0048, 0.1406, 0.0488, 0.0732, 0.0157, 0.0796, 0.0630, 0.1084, 0.0845, 0.0771, 0.0737, 0.2305, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.1328, 0.0013, 0.0082, 0.0055, 0.0195, 0.0283, 0.0449, 0.0713, 0.0127, 0.2217, 0.0347, 0.0203, 0.0000, 0.0000],
        [0.1436, 0.2695, 0.0098, 0.0089, 0.0067, 0.0503, 0.0092, 0.1069, 0.0249, 0.0211, 0.1582, 0.1162, 0.0435, 0.0312, 0.0000],
        [0.0113, 0.5586, 0.0266, 0.0156, 0.0067, 0.0393, 0.0146, 0.0540, 0.0306, 0.0175, 0.0159, 0.0674, 0.0184, 0.0237, 0.1006]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.1797,     -0.1895,     -0.2070,     -0.1660,     -0.1670,     -0.2158,     -0.1699,     -0.1719,     -0.1982,     -0.1533,     -0.1982,     -0.1953,     -0.1768,     -0.1436],
        [    -0.0043,     -1.7109,     -5.0000,     -5.0000,     -4.3125,     -3.4219,     -5.0625,     -3.4688,     -4.5625,     -3.9531,     -1.3438,     -3.1562,     -5.5625,     -4.3125,     -2.4219],
        [     0.0262,      3.2656,      0.0723,      0.3457,     -0.8516,      2.3281,      1.4531,      1.1484,      0.4766,     -0.0986,      0.7383,      0.4805,     -0.0498,      0.1152,      2.4062],
        [     0.0122,      2.9688,     -1.6562,     -1.1094,     -1.2891,      0.8047,      0.3105,     -0.3359,     -0.1562,      0.0001,      0.0693,     -1.2422,     -2.5781,     -0.2178,      2.0469],
        [    -0.0067,      2.1406,     -1.2266,     -1.5000,     -1.1484,      1.6641,      0.5859,      0.6055,     -1.1016,     -1.1094,     -0.5898,     -1.5469,     -2.2188,     -1.3359,      1.2812],
        [    -0.0066,      2.3125,     -1.4297,     -0.6523,     -1.1797,      0.6602,      0.4277,     -0.2910,     -1.0234,     -1.2969,     -0.4824,     -1.7891,     -2.8125,     -1.2188,      1.3125],
        [    -0.0432,      0.5547,     -5.1250,     -3.9688,     -3.4531,     -2.0312,     -2.6562,     -4.1250,     -3.3438,     -4.7188,     -4.6875,     -6.9688,     -7.5000,     -3.6875,      1.1094],
        [    -0.0125,     -0.5781,     -4.8125,     -3.7344,     -4.3125,     -1.4297,     -2.5469,     -2.8281,     -2.3594,     -3.7031,     -1.8672,     -4.2812,     -4.5312,     -2.2344,     -0.5273],
        [    -0.0072,      1.5312,     -1.3750,     -1.8906,     -2.2656,      0.7891,     -0.9766,      0.3730,     -1.7969,     -1.3359,      0.0928,     -0.8281,     -1.5156,     -1.8906,     -0.3828],
        [     0.0014,      1.2500,     -2.2031,     -1.5547,     -1.9453,     -0.4629,     -1.3672,     -0.1299,     -1.2656,     -1.6484,      0.0352,      0.0923,     -1.2031,     -1.0781,      0.1514],
        [     0.0152,      1.8906,     -0.2676,     -0.0815,     -0.6289,     -0.1680,     -0.6250,      1.0234,     -0.0300,      0.1621,      0.6875,      0.2617,      0.6641,      0.0037,      1.3438],
        [     0.0339,      3.4062,      2.3594,      2.7656,      1.2344,      2.8438,      2.6094,      3.1562,      2.9062,      2.8125,      2.7656,      3.9062,      4.6250,      3.0781,      2.5781],
        [     0.0137,     -1.0859,     -5.7188,     -3.8750,     -4.2500,     -3.0000,     -2.6250,     -2.1719,     -1.7031,     -3.4375,     -0.5703,     -2.4375,     -2.9688,     -1.2109,     -0.7539],
        [     0.0054,      0.6289,     -2.6719,     -2.7812,     -3.0625,     -1.0469,     -2.7344,     -0.2930,     -1.7500,     -1.9141,      0.1025,     -0.2090,     -1.1953,     -1.5234,     -1.4219],
        [     0.0044,      3.9062,      0.8633,      0.3320,     -0.5195,      1.2500,      0.2656,      1.5625,      1.0000,      0.4395,      0.3457,      1.7891,      0.4961,      0.7422,      2.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6328],
        [0.2813],
        [0.3337],
        [0.2925],
        [0.3368],
        [0.3506],
        [0.3130],
        [0.3179],
        [0.2927],
        [0.3218],
        [0.1934],
        [0.2332],
        [0.2528],
        [0.2474]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0200,     -0.9531,     -0.9805,     -1.4141,     -1.3047,     -1.5391,     -1.1172,     -1.1719,     -1.0078,     -0.9570,     -0.7617,     -0.9883,     -1.1484,     -0.6484,     -0.8633],
        [    -0.2041,    -11.1875,     -8.3750,    -12.6875,    -12.1875,    -15.8125,    -10.4375,    -11.1875,     -9.8125,     -8.5000,     -6.7500,     -8.2500,     -9.9375,     -5.5625,     -7.9062],
        [    -0.2793,    -13.5625,    -16.2500,    -21.6250,    -19.5000,    -22.7500,    -17.1250,    -16.7500,    -15.5000,    -14.2500,    -11.3750,    -15.1250,    -16.2500,    -10.0625,    -13.0000],
        [    -0.6680,    -31.5000,    -33.2500,    -46.7500,    -42.5000,    -50.2500,    -36.7500,    -39.0000,    -34.0000,    -32.0000,    -26.2500,    -34.0000,    -37.5000,    -23.0000,    -29.6250],
        [    -0.7383,    -36.0000,    -36.7500,    -53.0000,    -48.7500,    -56.7500,    -42.2500,    -44.5000,    -38.2500,    -36.5000,    -29.6250,    -37.7500,    -43.2500,    -25.1250,    -32.7500],
        [    -0.8203,    -39.2500,    -40.2500,    -57.5000,    -52.5000,    -63.2500,    -45.7500,    -48.0000,    -42.0000,    -39.5000,    -31.3750,    -40.5000,    -46.7500,    -26.6250,    -35.7500],
        [    -0.5547,    -27.8750,    -27.0000,    -38.5000,    -35.2500,    -42.2500,    -30.2500,    -32.2500,    -28.0000,    -26.6250,    -21.1250,    -27.0000,    -31.2500,    -18.2500,    -23.6250],
        [    -0.5664,    -27.8750,    -28.1250,    -40.0000,    -37.5000,    -44.2500,    -32.0000,    -33.2500,    -29.5000,    -28.0000,    -22.1250,    -28.5000,    -32.2500,    -19.6250,    -24.7500],
        [    -0.6523,    -31.2500,    -30.3750,    -44.2500,    -41.2500,    -49.5000,    -35.2500,    -37.0000,    -32.2500,    -30.5000,    -24.5000,    -30.8750,    -36.0000,    -20.1250,    -26.8750],
        [    -0.6914,    -33.5000,    -33.7500,    -48.0000,    -44.7500,    -52.2500,    -38.2500,    -40.5000,    -35.2500,    -34.0000,    -27.3750,    -35.2500,    -40.0000,    -23.2500,    -31.0000],
        [    -0.4062,    -18.7500,    -20.5000,    -28.5000,    -26.1250,    -30.5000,    -22.7500,    -23.2500,    -20.5000,    -20.0000,    -16.6250,    -21.3750,    -22.6250,    -14.0000,    -17.8750],
        [    -0.8242,    -39.5000,    -42.2500,    -59.0000,    -54.7500,    -62.7500,    -46.5000,    -48.7500,    -43.2500,    -41.2500,    -33.5000,    -43.7500,    -47.7500,    -29.1250,    -37.0000],
        [    -0.7031,    -33.2500,    -34.2500,    -48.5000,    -44.5000,    -54.0000,    -38.5000,    -40.0000,    -35.0000,    -33.7500,    -26.8750,    -34.2500,    -39.2500,    -22.6250,    -30.0000],
        [    -0.4883,    -23.6250,    -23.6250,    -34.0000,    -31.1250,    -36.5000,    -26.3750,    -28.2500,    -23.7500,    -23.1250,    -19.1250,    -23.8750,    -27.2500,    -15.1875,    -20.2500],
        [    -0.5352,    -27.0000,    -27.8750,    -38.2500,    -34.7500,    -40.5000,    -29.6250,    -31.3750,    -27.5000,    -26.6250,    -20.8750,    -27.2500,    -31.1250,    -18.3750,    -23.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5731],
        [0.3629],
        [0.5653],
        [0.5536],
        [0.5622],
        [0.4604],
        [0.5629],
        [0.5607],
        [0.4825],
        [0.5981],
        [0.5235],
        [0.5864],
        [0.5094],
        [0.2939]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.1260,     0.0177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8828,     0.0002,     0.0000,     0.0000,     0.0439,     0.0044,     0.0003,     0.0030,     0.0342,     0.0049,     0.0129,     0.0001,     0.0055,     0.0055,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0054,     -0.4746,     -0.6914,     -0.7461,     -0.4160,     -0.4297,     -0.5625,     -0.5117,     -0.4551,     -0.5742,     -0.5273,     -0.7266,     -0.5859,     -0.6836,     -0.6055],
        [    -0.2100,    -16.3750,    -24.2500,    -25.2500,    -15.5625,    -15.7500,    -20.2500,    -17.7500,    -16.5000,    -21.7500,    -19.8750,    -25.5000,    -22.0000,    -25.1250,    -22.2500],
        [    -0.0439,     -1.9531,     -3.9219,     -2.2969,     -2.3438,     -2.3125,     -2.8281,     -2.8906,     -3.7188,     -5.7500,     -5.1250,     -4.0000,     -4.7500,     -5.2812,     -2.4375],
        [    -0.2734,    -23.5000,    -35.2500,    -38.0000,    -21.7500,    -23.7500,    -29.7500,    -25.1250,    -22.7500,    -29.2500,    -25.2500,    -34.2500,    -29.0000,    -32.2500,    -30.5000],
        [    -0.2930,    -26.0000,    -38.5000,    -42.0000,    -23.7500,    -25.1250,    -31.6250,    -28.0000,    -25.6250,    -31.2500,    -28.3750,    -39.0000,    -31.6250,    -36.5000,    -33.5000],
        [    -0.3027,    -25.0000,    -36.7500,    -40.2500,    -23.3750,    -24.6250,    -30.8750,    -27.5000,    -25.7500,    -31.6250,    -28.2500,    -38.5000,    -31.3750,    -37.0000,    -33.0000],
        [    -0.1738,    -15.7500,    -22.5000,    -25.1250,    -14.1875,    -14.6250,    -18.7500,    -18.1250,    -15.4375,    -19.2500,    -18.5000,    -24.6250,    -20.1250,    -23.0000,    -20.2500],
        [    -0.2070,    -17.6250,    -25.6250,    -28.8750,    -17.3750,    -16.6250,    -22.0000,    -21.7500,    -18.2500,    -22.3750,    -21.8750,    -29.0000,    -24.0000,    -27.3750,    -23.5000],
        [    -0.1660,    -16.7500,    -22.8750,    -26.2500,    -13.5625,    -13.6250,    -18.1250,    -18.3750,    -15.3125,    -18.1250,    -18.0000,    -26.1250,    -18.8750,    -24.0000,    -20.0000],
        [    -0.1426,    -14.7500,    -20.8750,    -22.3750,    -12.1875,    -13.0000,    -16.2500,    -15.0625,    -13.6875,    -16.3750,    -15.0000,    -21.8750,    -16.2500,    -20.2500,    -17.3750],
        [    -0.2217,    -21.3750,    -30.8750,    -33.0000,    -19.2500,    -20.2500,    -25.7500,    -22.6250,    -20.6250,    -24.3750,    -21.5000,    -30.7500,    -24.3750,    -27.7500,    -26.5000],
        [    -0.1426,    -15.9375,    -21.7500,    -22.2500,    -11.5625,    -12.7500,    -18.2500,    -15.0625,    -12.2500,    -15.1875,    -13.6250,    -20.8750,    -15.9375,    -16.0000,    -17.7500],
        [    -0.2217,    -21.6250,    -31.0000,    -34.2500,    -20.3750,    -21.6250,    -27.1250,    -23.8750,    -20.5000,    -24.7500,    -21.8750,    -30.7500,    -25.6250,    -27.8750,    -26.8750],
        [    -0.2695,    -26.3750,    -37.2500,    -40.7500,    -21.8750,    -23.0000,    -30.3750,    -27.8750,    -24.2500,    -29.1250,    -26.6250,    -39.0000,    -29.8750,    -35.2500,    -32.0000],
        [    -0.0505,     -8.3750,    -10.3125,    -10.3750,     -3.0469,     -5.3438,     -8.0000,     -5.7500,     -3.3125,     -5.2500,     -4.2812,     -9.3750,     -5.1250,     -5.1250,     -7.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8951],
        [0.4651],
        [0.7909],
        [0.7953],
        [0.8708],
        [0.8663],
        [0.7727],
        [0.7273],
        [0.6535],
        [0.8411],
        [0.5628],
        [0.8788],
        [0.8784],
        [0.5166]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0208,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0007,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0008,     0.0000,     0.0000,     0.0004,     0.0044,     0.0005,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0001,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.2451,     -0.4141,     -0.3379,     -0.3086,     -0.2188,     -0.2930,     -0.2715,     -0.2930,     -0.2471,     -0.2773,     -0.3418,     -0.2930,     -0.3145,     -0.3652],
        [     0.0447,      9.0625,      8.1250,      6.8750,      8.5000,      6.3125,      8.3125,      5.9062,      5.3125,      5.6250,      4.2812,      5.1250,      6.2188,      6.0000,      5.6875],
        [    -0.0009,     -3.8594,     -8.0000,     -6.0625,     -5.3125,     -2.8438,     -5.7500,     -5.0625,     -4.9375,     -4.2812,     -4.6250,     -6.0312,     -4.5000,     -4.8750,     -6.6875],
        [    -0.1089,    -16.1250,    -28.5000,    -23.8750,    -21.7500,    -14.4375,    -19.0000,    -18.7500,    -21.3750,    -16.5000,    -20.2500,    -24.1250,    -20.3750,    -23.2500,    -26.1250],
        [    -0.0854,    -13.0000,    -20.6250,    -18.3750,    -16.1250,    -11.5000,    -14.3750,    -14.4375,    -15.5000,    -11.8750,    -14.3125,    -17.3750,    -15.1875,    -16.3750,    -19.7500],
        [    -0.1328,    -18.2500,    -31.1250,    -26.5000,    -24.8750,    -17.0000,    -22.1250,    -21.2500,    -24.2500,    -17.5000,    -22.3750,    -26.0000,    -23.0000,    -26.2500,    -28.2500],
        [    -0.0513,     -8.0000,    -15.0000,    -13.3125,    -11.3750,     -7.3125,     -9.9375,    -10.3125,    -11.0000,     -7.9062,    -10.9375,    -13.0000,    -10.8125,    -11.9375,    -15.3750],
        [    -0.0354,     -7.1250,    -11.5000,    -10.2500,     -7.8438,     -5.4688,     -7.6250,     -7.6250,     -7.4375,     -5.7812,     -6.8750,     -9.9375,     -7.4062,     -7.6250,    -11.6250],
        [    -0.0747,    -14.3750,    -19.5000,    -16.6250,    -15.5000,    -11.2500,    -15.3125,    -13.4375,    -13.5000,    -11.4375,    -11.6250,    -15.3750,    -13.6250,    -14.0000,    -17.0000],
        [    -0.0381,     -9.6875,    -15.1875,    -11.8125,    -11.0000,     -7.5938,    -12.0000,     -9.8750,     -9.0000,     -8.5625,     -8.4375,    -11.8750,     -9.6250,     -9.1875,    -12.6875],
        [    -0.1348,    -22.1250,    -34.5000,    -28.8750,    -25.5000,    -18.7500,    -24.8750,    -22.6250,    -24.1250,    -20.5000,    -22.0000,    -28.5000,    -23.8750,    -25.6250,    -31.0000],
        [    -0.0566,    -10.7500,    -18.7500,    -15.2500,    -13.2500,     -9.0000,    -13.2500,    -12.0000,    -12.1875,    -11.1250,    -11.5000,    -15.4375,    -12.3125,    -12.4375,    -17.0000],
        [    -0.0977,    -16.5000,    -26.8750,    -22.6250,    -20.0000,    -14.1250,    -19.2500,    -17.8750,    -18.3750,    -15.3125,    -17.3750,    -22.2500,    -19.0000,    -19.7500,    -24.2500],
        [    -0.1367,    -23.1250,    -35.5000,    -29.5000,    -26.3750,    -19.1250,    -25.6250,    -23.5000,    -24.6250,    -21.6250,    -22.6250,    -29.1250,    -24.7500,    -26.2500,    -31.6250],
        [    -0.0430,    -10.3750,    -18.0000,    -13.9375,    -12.3125,     -8.5000,    -12.4375,    -11.8750,    -11.6875,    -10.6250,    -11.3750,    -14.8125,    -11.7500,    -12.1875,    -16.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0736],
        [0.1775],
        [0.5916],
        [0.7193],
        [0.8999],
        [0.3926],
        [0.4350],
        [0.7760],
        [0.3112],
        [0.9486],
        [0.3223],
        [0.8519],
        [0.9264],
        [0.3103]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5469,     0.4551,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.6719,     0.3262,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0061,     0.4180,     0.4746,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0258,     0.3789,     0.4355,     0.0913,     0.0679,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.5195,     0.2988,     0.0601,     0.0239,     0.0130,     0.0864,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.2832,     0.3535,     0.0640,     0.0520,     0.0302,     0.1416,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.1816,     0.1562,     0.0693,     0.0640,     0.0359,     0.0698,     0.0757,     0.0869,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5430,     0.2119,     0.0287,     0.0050,     0.0029,     0.0654,     0.0110,     0.0042,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.0132,     0.0126,     0.0080,     0.0293,     0.0059,     0.0067,     0.0177,     0.0471,     0.0118,     0.0342,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4023,     0.1523,     0.0466,     0.0069,     0.0076,     0.0732,     0.0099,     0.0066,     0.1035,     0.0693,     0.1230,     0.0000,     0.0000,     0.0000],
        [    0.1572,     0.0850,     0.0894,     0.0240,     0.0559,     0.0139,     0.0242,     0.0432,     0.1245,     0.0889,     0.1719,     0.0791,     0.0422,     0.0000,     0.0000],
        [    0.1221,     0.0640,     0.0684,     0.0265,     0.0474,     0.0177,     0.0293,     0.0374,     0.0737,     0.0630,     0.2061,     0.0771,     0.0500,     0.1177,     0.0000],
        [    0.0000,     0.2451,     0.0928,     0.0352,     0.0067,     0.0070,     0.0542,     0.0114,     0.0045,     0.0693,     0.0383,     0.1016,     0.0029,     0.0020,     0.3301]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0006,     -0.0364,     -0.0359,     -0.0366,     -0.0304,     -0.0364,     -0.0403,     -0.0376,     -0.0284,     -0.0381,     -0.0283,     -0.0374,     -0.0286,     -0.0261,     -0.0405],
        [    -0.0044,     -0.1855,     -0.2734,     -0.4414,     -0.6758,     -0.6914,     -0.2695,     -0.7070,     -0.6641,     -0.7148,     -0.8945,     -0.3848,     -0.7383,     -1.0781,     -0.1455],
        [     0.1069,      7.6875,      6.9688,      5.8750,      4.6250,      4.7188,      6.2500,      5.3750,      4.8750,      7.0000,      6.1250,      6.9375,      3.9375,      3.8438,      8.0625],
        [     0.0728,      4.2812,      4.4375,      2.8906,      2.5781,      2.0312,      3.6562,      2.6094,      3.0312,      4.1562,      4.4688,      4.1250,      1.9844,      2.2344,      5.4062],
        [     0.0349,      2.7188,      2.8594,      1.2969,      1.0000,      0.2793,      1.6953,      1.2578,      1.5156,      2.5156,      2.8125,      2.8594,      0.7617,      1.3203,      3.1094],
        [    -0.1582,     -9.6875,     -8.8125,     -9.6250,     -7.5625,    -10.3125,     -9.9375,     -8.3125,     -6.5938,     -9.1250,     -8.7500,     -9.0000,     -7.6250,     -6.8438,    -10.2500],
        [     0.0942,      6.9062,      6.3750,      4.7500,      3.8438,      3.2344,      5.1250,      4.5000,      4.3438,      6.2812,      5.8125,      6.3125,      3.2500,      3.3281,      7.2188],
        [     0.0474,      3.1719,      3.4062,      1.6875,      1.4844,      0.9375,      2.4844,      1.7031,      1.8906,      2.9531,      2.9375,      3.2812,      1.2266,      1.5938,      3.4844],
        [    -0.0259,     -0.3867,     -0.5352,     -1.3516,     -1.4297,     -2.0000,     -1.3438,     -1.2578,     -1.1172,     -0.8633,     -0.6523,     -0.3984,     -1.4062,     -0.6445,     -1.0234],
        [     0.1455,     10.7500,      9.8125,      7.7812,      6.0312,      5.5000,      8.6250,      6.8125,      5.8750,      9.3125,      8.3125,      9.8125,      4.9688,      4.8438,     11.1250],
        [    -0.0796,     -4.1875,     -4.2500,     -4.6875,     -3.4062,     -5.0000,     -4.8750,     -3.9062,     -2.9219,     -4.3125,     -3.2500,     -4.3438,     -3.4844,     -2.7656,     -4.9688],
        [     0.1592,     10.6875,      9.6875,      8.5625,      6.6250,      6.7188,      9.0000,      7.0000,      6.5938,      9.3125,      8.9375,      9.5000,      5.3438,      5.3750,     11.5625],
        [    -0.0225,     -0.6445,     -0.5898,     -1.9062,     -1.0547,     -2.4531,     -1.8984,     -1.3203,     -0.2578,     -0.5938,      0.0659,     -0.7109,     -1.3438,     -0.3105,     -1.0078],
        [    -0.0189,     -0.6641,     -0.6016,     -1.5469,     -0.9688,     -1.9453,     -1.4453,     -1.2031,     -0.5273,     -0.6836,      0.5000,     -0.4805,     -0.9141,     -0.0559,     -0.8438],
        [     0.1260,      9.2500,      8.2500,      7.3125,      5.6250,      5.6875,      7.7188,      6.1875,      5.2188,      7.9688,      7.3750,      8.3750,      4.7812,      4.4375,      9.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9535],
        [0.2481],
        [0.8159],
        [0.4901],
        [1.0000],
        [0.2308],
        [0.3755],
        [0.6071],
        [0.1614],
        [0.9798],
        [0.1924],
        [0.7959],
        [0.7953],
        [0.1750]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2578,     0.5430,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.1279,     0.0315,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1797,     0.4160,     0.1299,     0.1680,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.2373,     0.1182,     0.1943,     0.1318,     0.1680,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0317,     0.2500,     0.1250,     0.2236,     0.1025,     0.0996,     0.1045,     0.0620,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0820,     0.3223,     0.1211,     0.1592,     0.0718,     0.0889,     0.0767,     0.0415,     0.0369,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0077,     0.1387,     0.1211,     0.2656,     0.1060,     0.0928,     0.1133,     0.0493,     0.0269,     0.0781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0211,     0.0009,     0.0005,     0.0005,     0.0017,     0.0004,     0.0009,     0.0024,     0.0014,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.1748,     0.0601,     0.0957,     0.0684,     0.0830,     0.0527,     0.0503,     0.0500,     0.0620,     0.2178,     0.0613,     0.0000,     0.0000,     0.0000],
        [    0.6094,     0.1836,     0.0157,     0.0103,     0.0104,     0.0195,     0.0084,     0.0156,     0.0311,     0.0193,     0.0513,     0.0110,     0.0136,     0.0000,     0.0000],
        [    0.3398,     0.3398,     0.0284,     0.0320,     0.0182,     0.0364,     0.0159,     0.0160,     0.0183,     0.0277,     0.0574,     0.0265,     0.0114,     0.0304,     0.0000],
        [    0.0048,     0.1260,     0.0574,     0.1172,     0.0583,     0.0564,     0.0525,     0.0347,     0.0248,     0.0479,     0.1504,     0.0698,     0.0679,     0.0854,     0.0464]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.0557,     -0.0874,     -0.0947,     -0.0835,     -0.0708,     -0.0903,     -0.0718,     -0.0574,     -0.0771,     -0.0674,     -0.0962,     -0.0776,     -0.0654,     -0.0938],
        [    -0.0226,     -4.8438,     -5.9062,     -6.3438,     -5.2812,     -3.6875,     -5.9375,     -4.2500,     -3.1406,     -4.8438,     -3.2969,     -6.3438,     -3.3750,     -3.0312,     -5.9062],
        [    -0.0003,      0.7422,     -0.2656,      0.0776,     -0.0776,      0.2734,     -0.3750,     -0.2285,     -0.1226,     -0.1094,      1.0938,     -0.1982,      0.4355,      0.6836,     -0.4062],
        [    -0.0124,     -1.8594,     -3.2656,     -3.3906,     -2.8438,     -1.8750,     -3.3750,     -2.1562,     -1.3359,     -2.5312,     -1.1562,     -3.7344,     -1.5859,     -0.9414,     -3.5000],
        [     0.0010,      0.8398,     -0.3281,     -0.0649,     -0.5352,     -0.0576,     -0.6055,     -0.4375,     -0.2754,     -0.2852,      0.9453,     -0.3398,      0.3164,      0.7656,     -0.5898],
        [    -0.0486,     -6.8438,    -10.3125,    -11.3125,    -10.3125,     -8.5625,    -10.9375,     -8.7500,     -6.9375,     -9.1875,     -7.8750,    -11.1875,     -9.0625,     -7.2812,    -11.0000],
        [     0.0072,      1.8047,      1.1016,      1.6016,      1.2109,      1.4609,      1.0469,      1.0312,      0.9258,      1.1328,      2.4375,      1.2266,      1.9062,      2.0781,      1.0078],
        [     0.0070,      2.0781,      1.3828,      1.9609,      1.1797,      1.1484,      1.1953,      0.6758,      0.3652,      1.0859,      1.7266,      1.6406,      1.2734,      1.3047,      1.2812],
        [     0.0014,      1.3672,      0.3887,      0.6641,     -0.1318,      0.0845,     -0.0654,     -0.6836,     -0.8008,      0.0061,      0.5586,      0.6406,     -0.3027,      0.0737,      0.1680],
        [     0.0143,      2.9062,      2.7812,      3.5625,      2.6406,      2.5156,      2.7031,      1.8828,      1.2734,      2.3438,      2.8906,      3.2500,      2.6094,      2.2656,      2.8281],
        [    -0.0376,     -3.8594,     -7.0000,     -7.6250,     -7.6250,     -6.3438,     -7.7500,     -7.0312,     -6.0312,     -6.5938,     -6.1250,     -7.5312,     -7.6875,     -6.0312,     -7.6875],
        [     0.0045,      2.0000,      0.9336,      1.3984,      1.0625,      1.2578,      0.8047,      0.7539,      0.7500,      0.9648,      2.2188,      0.9531,      1.3125,      1.7188,      0.6797],
        [    -0.0184,     -1.2188,     -3.6719,     -4.0938,     -4.0938,     -3.4531,     -4.3125,     -3.6719,     -3.0000,     -3.4688,     -2.5000,     -4.0312,     -3.8281,     -2.4062,     -4.3125],
        [    -0.0148,     -0.0137,     -2.5000,     -2.3750,     -2.9375,     -2.2500,     -3.0781,     -3.0781,     -2.9375,     -2.5156,     -1.7969,     -2.5625,     -3.4062,     -2.4375,     -3.0938],
        [     0.0120,      3.2812,      2.4844,      3.2031,      2.5000,      2.4688,      2.4062,      1.9844,      1.6484,      2.3125,      3.4531,      2.6875,      2.6562,      2.8906,      2.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9788],
        [0.2357],
        [0.4652],
        [0.2022],
        [0.8773],
        [0.0615],
        [0.0333],
        [0.1821],
        [0.0362],
        [0.7977],
        [0.0602],
        [0.3255],
        [0.3241],
        [0.0427]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0159,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7109,     0.2891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.6602,     0.1455,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4160,     0.1602,     0.2949,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0080,     0.0015,     0.0009,     0.0009,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3691,     0.1328,     0.2275,     0.1079,     0.1079,     0.0532,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3555,     0.1279,     0.2158,     0.0996,     0.1045,     0.0493,     0.0483,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3145,     0.1250,     0.1992,     0.0938,     0.0728,     0.0469,     0.0481,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.3105,     0.1079,     0.1709,     0.0874,     0.0977,     0.0449,     0.0442,     0.0884,     0.0483,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.4023,     0.0879,     0.0913,     0.0515,     0.0693,     0.0315,     0.0292,     0.0598,     0.0349,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2715,     0.0938,     0.1475,     0.0776,     0.0918,     0.0413,     0.0405,     0.0781,     0.0439,     0.0708,     0.0432,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.3496,     0.0913,     0.1348,     0.0598,     0.0510,     0.0306,     0.0299,     0.0635,     0.0347,     0.0752,     0.0304,     0.0483,     0.0000,     0.0000],
        [    0.0007,     0.2832,     0.0859,     0.1035,     0.0574,     0.0566,     0.0332,     0.0322,     0.0618,     0.0369,     0.0786,     0.0320,     0.0410,     0.0972,     0.0000],
        [    0.0001,     0.2207,     0.0732,     0.1147,     0.0593,     0.0698,     0.0312,     0.0306,     0.0605,     0.0334,     0.0564,     0.0325,     0.0669,     0.1216,     0.0295]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0591,     -0.0703,     -0.0737,     -0.0723,     -0.0613,     -0.0737,     -0.0757,     -0.0728,     -0.0752,     -0.0615,     -0.0757,     -0.0776,     -0.0786,     -0.0747],
        [    -0.0022,      4.1250,      3.1562,      3.4219,      2.9844,      2.9844,      2.5000,      2.4531,      2.8594,      2.4688,      2.9844,      2.4531,      2.7188,      3.1094,      2.4062],
        [    -0.0034,     10.5625,      9.6875,     10.3125,      9.5000,      9.1875,      8.7500,      8.8125,      9.5000,      8.8750,      9.1250,      8.8750,      9.7500,     10.5000,      8.6875],
        [    -0.0029,      4.7812,      3.2500,      3.5156,      3.0000,      3.3281,      2.3281,      2.2656,      2.9844,      2.3438,      3.4844,      2.2344,      2.7188,      3.2969,      2.1875],
        [    -0.0032,     11.0625,     10.0625,     10.6875,      9.8750,      9.5000,      9.1250,      9.1250,      9.8750,      9.2500,      9.5625,      9.1875,     10.0625,     10.9375,      9.0000],
        [    -0.0011,     -4.8125,     -6.5000,     -6.9688,     -7.0000,     -6.0625,     -7.1875,     -7.3438,     -6.9062,     -7.2500,     -5.2188,     -7.4062,     -7.9062,     -7.5000,     -7.3125],
        [    -0.0030,      9.0625,      8.0000,      8.5625,      7.8125,      7.8125,      7.0938,      7.0938,      7.8438,      7.1875,      7.6562,      7.1562,      8.0000,      8.6875,      7.0312],
        [    -0.0033,      9.0000,      7.9688,      8.5000,      7.7188,      7.7500,      7.0000,      7.0000,      7.7500,      7.0938,      7.5625,      7.0625,      7.8750,      8.5625,      6.9375],
        [    -0.0036,      9.7500,      8.8125,      9.2500,      8.5000,      8.2500,      7.8125,      7.8438,      8.5625,      7.9375,      8.3750,      7.8438,      8.5625,      9.5000,      7.7500],
        [    -0.0031,      7.7188,      6.6562,      7.1250,      6.4375,      6.5625,      5.7812,      5.7500,      6.4688,      5.8438,      6.3750,      5.8125,      6.5312,      7.1875,      5.7188],
        [    -0.0036,      4.0938,      2.5625,      2.5938,      2.0312,      2.3281,      1.5312,      1.4609,      2.1719,      1.6328,      3.0000,      1.4844,      1.4375,      2.4375,      1.4453],
        [    -0.0027,      7.2500,      6.1875,      6.6562,      6.0000,      6.1875,      5.3750,      5.3750,      6.0312,      5.4375,      5.9375,      5.4375,      6.1562,      6.6875,      5.3438],
        [    -0.0036,      8.6875,      7.3125,      7.7188,      6.8750,      6.7188,      6.2188,      6.1875,      6.9375,      6.3438,      7.1250,      6.2188,      6.6875,      7.6875,      6.1250],
        [    -0.0040,      6.0312,      4.8438,      5.0312,      4.4375,      4.4375,      3.8906,      3.8594,      4.5000,      4.0000,      4.7500,      3.8438,      4.0938,      4.9688,      3.7812],
        [    -0.0027,      7.4375,      6.3125,      6.7812,      6.1250,      6.2812,      5.4688,      5.4688,      6.1250,      5.5312,      6.0625,      5.5000,      6.2500,      6.8438,      5.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0305],
        [    0.0009],
        [    0.0213],
        [    0.0002],
        [    0.3116],
        [    0.0009],
        [    0.0006],
        [    0.0003],
        [    0.0018],
        [    0.0976],
        [    0.0031],
        [    0.0021],
        [    0.0024],
        [    0.0022]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Beir:0.0030 Beir:0.0034 Beir:0.0029enment:0.0018 Lavrov:0.0019 Beir:0.0025 Beir:0.0042 Beir:0.0018)
 Beir
------
		( Beir:0.0034 Beir:0.0029enment:0.0018 Lavrov:0.0019 Beir:0.0025 Beir:0.0042 Beir:0.0018 Beir:0.0017)
 Beir Beir Beir Sina Lavrov Beir Sina� Lavrov Beir Beir Sina Beir Sina Beir
@ 1550 train 4.3824 , allloss: 4.3824, dt: 1179.87ms, fracRes: 0.2420, norm(attn): 0.3848, norm(output): 0.8164, norm(x): 0.9273, norm(y): 0.9902, norm:0.5135, tok/sec: 111090.39, flops:97.30, batch-reuse:1
@ 1551 train 4.2982 , allloss: 4.2982, dt: 696.74ms, fracRes: 0.2439, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9300, norm(y): 0.9903, norm:0.5245, tok/sec: 188120.50, flops:164.77, batch-reuse:1
@ 1552 train 4.1588 , allloss: 4.1588, dt: 707.33ms, fracRes: 0.2426, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9215, norm(y): 0.9904, norm:0.5084, tok/sec: 185305.31, flops:162.30, batch-reuse:1
@ 1553 train 4.3150 , allloss: 4.3150, dt: 691.64ms, fracRes: 0.2354, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9139, norm(y): 0.9906, norm:0.4683, tok/sec: 189510.20, flops:165.98, batch-reuse:1
@ 1554 train 4.2821 , allloss: 4.2821, dt: 705.19ms, fracRes: 0.2398, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9150, norm(y): 0.9905, norm:0.4227, tok/sec: 185867.78, flops:162.79, batch-reuse:1
@ 1555 train 4.3852 , allloss: 4.3852, dt: 700.10ms, fracRes: 0.2395, norm(attn): 0.3945, norm(output): 0.8086, norm(x): 0.9179, norm(y): 0.9904, norm:0.3974, tok/sec: 187218.86, flops:163.98, batch-reuse:1
@ 1556 train 4.4979 , allloss: 4.4979, dt: 698.47ms, fracRes: 0.2413, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9185, norm(y): 0.9903, norm:0.4487, tok/sec: 187656.93, flops:164.36, batch-reuse:1
@ 1557 train 4.3578 , allloss: 4.3578, dt: 681.26ms, fracRes: 0.2363, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9165, norm(y): 0.9902, norm:0.4421, tok/sec: 192397.02, flops:168.51, batch-reuse:1
@ 1558 train 4.2839 , allloss: 4.2839, dt: 696.99ms, fracRes: 0.2431, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9232, norm(y): 0.9902, norm:0.3882, tok/sec: 188053.96, flops:164.71, batch-reuse:1
@ 1559 train 4.3458 , allloss: 4.3458, dt: 700.22ms, fracRes: 0.2445, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9259, norm(y): 0.9902, norm:0.4037, tok/sec: 187187.88, flops:163.95, batch-reuse:1
@ 1560 train 4.3612 , allloss: 4.3612, dt: 685.28ms, fracRes: 0.2422, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9209, norm(y): 0.9902, norm:0.3650, tok/sec: 191267.31, flops:167.52, batch-reuse:1
@ 1561 train 4.3163 , allloss: 4.3163, dt: 700.17ms, fracRes: 0.2407, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9203, norm(y): 0.9902, norm:0.4317, tok/sec: 187199.99, flops:163.96, batch-reuse:1
@ 1562 train 4.2042 , allloss: 4.2042, dt: 689.25ms, fracRes: 0.2468, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9265, norm(y): 0.9902, norm:0.4401, tok/sec: 190166.19, flops:166.56, batch-reuse:1
@ 1563 train 4.2755 , allloss: 4.2755, dt: 688.53ms, fracRes: 0.2469, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9222, norm(y): 0.9902, norm:0.3999, tok/sec: 190365.85, flops:166.73, batch-reuse:1
@ 1564 train 4.2832 , allloss: 4.2832, dt: 705.21ms, fracRes: 0.2469, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9212, norm(y): 0.9902, norm:0.3919, tok/sec: 185861.68, flops:162.79, batch-reuse:1
@ 1565 train 4.2569 , allloss: 4.2569, dt: 687.34ms, fracRes: 0.2502, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9227, norm(y): 0.9901, norm:0.5114, tok/sec: 190695.08, flops:167.02, batch-reuse:1
@ 1566 train 4.3065 , allloss: 4.3065, dt: 688.18ms, fracRes: 0.2489, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9218, norm(y): 0.9902, norm:0.4844, tok/sec: 190461.54, flops:166.82, batch-reuse:1
@ 1567 train 4.2866 , allloss: 4.2866, dt: 687.41ms, fracRes: 0.2467, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9243, norm(y): 0.9903, norm:0.4248, tok/sec: 190675.71, flops:167.00, batch-reuse:1
@ 1568 train 4.2833 , allloss: 4.2833, dt: 686.14ms, fracRes: 0.2412, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9217, norm(y): 0.9904, norm:0.4113, tok/sec: 191026.79, flops:167.31, batch-reuse:1
@ 1569 train 4.1837 , allloss: 4.1837, dt: 699.79ms, fracRes: 0.2401, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9214, norm(y): 0.9903, norm:0.4133, tok/sec: 187302.86, flops:164.05, batch-reuse:1
@ 1570 train 4.3038 , allloss: 4.3038, dt: 696.86ms, fracRes: 0.2392, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9233, norm(y): 0.9903, norm:0.4024, tok/sec: 188090.76, flops:164.74, batch-reuse:1
@ 1571 train 4.3045 , allloss: 4.3045, dt: 697.88ms, fracRes: 0.2402, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9240, norm(y): 0.9903, norm:0.4026, tok/sec: 187813.30, flops:164.50, batch-reuse:1
@ 1572 train 4.2462 , allloss: 4.2462, dt: 701.91ms, fracRes: 0.2430, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9248, norm(y): 0.9901, norm:0.3687, tok/sec: 186735.11, flops:163.55, batch-reuse:1
@ 1573 train 4.2702 , allloss: 4.2702, dt: 689.33ms, fracRes: 0.2501, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9290, norm(y): 0.9901, norm:0.4282, tok/sec: 190145.21, flops:166.54, batch-reuse:1
@ 1574 train 4.2541 , allloss: 4.2541, dt: 698.24ms, fracRes: 0.2476, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9237, norm(y): 0.9902, norm:0.3819, tok/sec: 187716.78, flops:164.41, batch-reuse:1
@ 1575 train 4.2631 , allloss: 4.2631, dt: 706.36ms, fracRes: 0.2474, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9302, norm(y): 0.9902, norm:0.4025, tok/sec: 185560.37, flops:162.52, batch-reuse:1
@ 1576 train 4.2792 , allloss: 4.2792, dt: 691.24ms, fracRes: 0.2450, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9306, norm(y): 0.9902, norm:0.4086, tok/sec: 189620.01, flops:166.08, batch-reuse:1
@ 1577 train 4.2574 , allloss: 4.2574, dt: 673.56ms, fracRes: 0.2416, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9248, norm(y): 0.9902, norm:0.3625, tok/sec: 194596.73, flops:170.44, batch-reuse:1
@ 1578 train 4.2110 , allloss: 4.2110, dt: 695.75ms, fracRes: 0.2445, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9225, norm(y): 0.9902, norm:0.4008, tok/sec: 188388.35, flops:165.00, batch-reuse:1
@ 1579 train 4.1974 , allloss: 4.1974, dt: 697.56ms, fracRes: 0.2450, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9174, norm(y): 0.9902, norm:0.3911, tok/sec: 187901.56, flops:164.57, batch-reuse:1
@ 1580 train 4.2130 , allloss: 4.2130, dt: 697.29ms, fracRes: 0.2431, norm(attn): 0.3887, norm(output): 0.8086, norm(x): 0.9174, norm(y): 0.9903, norm:0.3896, tok/sec: 187972.68, flops:164.64, batch-reuse:1
@ 1581 train 4.1078 , allloss: 4.1078, dt: 695.60ms, fracRes: 0.2498, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9264, norm(y): 0.9901, norm:0.4006, tok/sec: 188430.70, flops:165.04, batch-reuse:1
@ 1582 train 4.2229 , allloss: 4.2229, dt: 696.70ms, fracRes: 0.2452, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9205, norm(y): 0.9902, norm:0.4041, tok/sec: 188131.83, flops:164.78, batch-reuse:1
@ 1583 train 4.1666 , allloss: 4.1666, dt: 690.14ms, fracRes: 0.2464, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9253, norm(y): 0.9902, norm:0.4154, tok/sec: 189921.41, flops:166.34, batch-reuse:1
@ 1584 train 4.2627 , allloss: 4.2627, dt: 690.93ms, fracRes: 0.2427, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9221, norm(y): 0.9903, norm:0.3654, tok/sec: 189704.88, flops:166.15, batch-reuse:1
@ 1585 train 4.2424 , allloss: 4.2424, dt: 699.57ms, fracRes: 0.2416, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9238, norm(y): 0.9903, norm:0.4081, tok/sec: 187359.67, flops:164.10, batch-reuse:1
@ 1586 train 4.2445 , allloss: 4.2445, dt: 697.58ms, fracRes: 0.2452, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9220, norm(y): 0.9902, norm:0.4385, tok/sec: 187895.97, flops:164.57, batch-reuse:1
@ 1587 train 4.2780 , allloss: 4.2780, dt: 693.27ms, fracRes: 0.2419, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9243, norm(y): 0.9902, norm:0.4503, tok/sec: 189063.69, flops:165.59, batch-reuse:1
@ 1588 train 4.2608 , allloss: 4.2608, dt: 698.66ms, fracRes: 0.2443, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9243, norm(y): 0.9902, norm:0.4504, tok/sec: 187604.17, flops:164.31, batch-reuse:1
@ 1589 train 4.1727 , allloss: 4.1727, dt: 694.19ms, fracRes: 0.2458, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9238, norm(y): 0.9902, norm:0.4027, tok/sec: 188813.76, flops:165.37, batch-reuse:1
@ 1590 train 4.2980 , allloss: 4.2980, dt: 703.22ms, fracRes: 0.2467, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9268, norm(y): 0.9902, norm:0.3999, tok/sec: 186387.09, flops:163.25, batch-reuse:1
@ 1591 train 4.1242 , allloss: 4.1242, dt: 685.53ms, fracRes: 0.2485, norm(attn): 0.3984, norm(output): 0.8125, norm(x): 0.9264, norm(y): 0.9902, norm:0.4226, tok/sec: 191198.07, flops:167.46, batch-reuse:1
@ 1592 train 4.2827 , allloss: 4.2827, dt: 696.97ms, fracRes: 0.2461, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9255, norm(y): 0.9902, norm:0.3775, tok/sec: 188060.26, flops:164.71, batch-reuse:1
@ 1593 train 4.2491 , allloss: 4.2491, dt: 690.43ms, fracRes: 0.2393, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9258, norm(y): 0.9902, norm:0.3889, tok/sec: 189839.95, flops:166.27, batch-reuse:1
@ 1594 train 4.1343 , allloss: 4.1343, dt: 689.74ms, fracRes: 0.2353, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9239, norm(y): 0.9903, norm:0.3580, tok/sec: 190032.09, flops:166.44, batch-reuse:1
@ 1595 train 4.2724 , allloss: 4.2724, dt: 701.55ms, fracRes: 0.2425, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9299, norm(y): 0.9902, norm:0.3845, tok/sec: 186831.12, flops:163.64, batch-reuse:1
@ 1596 train 4.1991 , allloss: 4.1991, dt: 711.48ms, fracRes: 0.2491, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9263, norm(y): 0.9901, norm:0.3887, tok/sec: 184225.32, flops:161.35, batch-reuse:1
@ 1597 train 4.2192 , allloss: 4.2192, dt: 698.23ms, fracRes: 0.2491, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9262, norm(y): 0.9900, norm:0.3912, tok/sec: 187720.24, flops:164.42, batch-reuse:1
@ 1598 train 4.1818 , allloss: 4.1818, dt: 696.58ms, fracRes: 0.2497, norm(attn): 0.3828, norm(output): 0.8164, norm(x): 0.9253, norm(y): 0.9900, norm:0.4075, tok/sec: 188165.50, flops:164.81, batch-reuse:1
@ 1599 train 4.3033 , allloss: 4.3033, dt: 691.99ms, fracRes: 0.2472, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9258, norm(y): 0.9900, norm:0.4243, tok/sec: 189412.78, flops:165.90, batch-reuse:1
@ 1600 train 4.1717 , allloss: 4.1717, dt: 682.71ms, fracRes: 0.2428, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9208, norm(y): 0.9901, norm:0.4224, tok/sec: 191987.83, flops:168.15, batch-reuse:1
@ 1601 train 4.3360 , allloss: 4.3360, dt: 708.85ms, fracRes: 0.2382, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9169, norm(y): 0.9901, norm:0.3806, tok/sec: 184908.47, flops:161.95, batch-reuse:1
@ 1602 train 4.1803 , allloss: 4.1803, dt: 707.97ms, fracRes: 0.2400, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9174, norm(y): 0.9901, norm:0.4088, tok/sec: 185136.63, flops:162.15, batch-reuse:1
@ 1603 train 4.1774 , allloss: 4.1774, dt: 703.42ms, fracRes: 0.2403, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9146, norm(y): 0.9901, norm:0.4106, tok/sec: 186334.91, flops:163.20, batch-reuse:1
@ 1604 train 4.1796 , allloss: 4.1796, dt: 694.53ms, fracRes: 0.2409, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9173, norm(y): 0.9901, norm:0.4344, tok/sec: 188720.95, flops:165.29, batch-reuse:1
@ 1605 train 4.2619 , allloss: 4.2619, dt: 696.46ms, fracRes: 0.2444, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9213, norm(y): 0.9902, norm:0.4088, tok/sec: 188197.13, flops:164.83, batch-reuse:1
@ 1606 train 4.2471 , allloss: 4.2471, dt: 699.77ms, fracRes: 0.2467, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9263, norm(y): 0.9901, norm:0.3790, tok/sec: 187308.35, flops:164.06, batch-reuse:1
@ 1607 train 4.2198 , allloss: 4.2198, dt: 725.02ms, fracRes: 0.2502, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9247, norm(y): 0.9900, norm:0.4092, tok/sec: 180784.17, flops:158.34, batch-reuse:1
@ 1608 train 4.2498 , allloss: 4.2498, dt: 689.87ms, fracRes: 0.2471, norm(attn): 0.3828, norm(output): 0.8086, norm(x): 0.9209, norm(y): 0.9901, norm:0.4121, tok/sec: 189996.56, flops:166.41, batch-reuse:1
@ 1609 train 4.1985 , allloss: 4.1985, dt: 693.40ms, fracRes: 0.2389, norm(attn): 0.3867, norm(output): 0.8086, norm(x): 0.9128, norm(y): 0.9903, norm:0.4136, tok/sec: 189027.94, flops:165.56, batch-reuse:1
@ 1610 train 4.1432 , allloss: 4.1432, dt: 701.16ms, fracRes: 0.2424, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9185, norm(y): 0.9902, norm:0.3976, tok/sec: 186935.06, flops:163.73, batch-reuse:1
@ 1611 train 4.1695 , allloss: 4.1695, dt: 712.90ms, fracRes: 0.2399, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9224, norm(y): 0.9902, norm:0.4478, tok/sec: 183857.07, flops:161.03, batch-reuse:1
@ 1612 train 4.2186 , allloss: 4.2186, dt: 708.35ms, fracRes: 0.2424, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9248, norm(y): 0.9901, norm:0.4334, tok/sec: 185037.43, flops:162.07, batch-reuse:1
@ 1613 train 4.2324 , allloss: 4.2324, dt: 713.09ms, fracRes: 0.2389, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9212, norm(y): 0.9903, norm:0.3929, tok/sec: 183809.55, flops:160.99, batch-reuse:1
@ 1614 train 4.3189 , allloss: 4.3189, dt: 710.36ms, fracRes: 0.2478, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9272, norm(y): 0.9902, norm:0.4606, tok/sec: 184514.45, flops:161.61, batch-reuse:1
@ 1615 train 4.1587 , allloss: 4.1587, dt: 713.91ms, fracRes: 0.2521, norm(attn): 0.3848, norm(output): 0.8164, norm(x): 0.9308, norm(y): 0.9900, norm:0.4323, tok/sec: 183598.45, flops:160.81, batch-reuse:1
@ 1616 train 4.2593 , allloss: 4.2593, dt: 700.67ms, fracRes: 0.2558, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9334, norm(y): 0.9899, norm:0.4154, tok/sec: 187065.45, flops:163.84, batch-reuse:1
@ 1617 train 4.1980 , allloss: 4.1980, dt: 709.60ms, fracRes: 0.2474, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9291, norm(y): 0.9901, norm:0.4551, tok/sec: 184711.96, flops:161.78, batch-reuse:1
@ 1618 train 4.2648 , allloss: 4.2648, dt: 694.77ms, fracRes: 0.2403, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9227, norm(y): 0.9902, norm:0.4530, tok/sec: 188654.63, flops:165.23, batch-reuse:1
@ 1619 train 4.1219 , allloss: 4.1219, dt: 704.71ms, fracRes: 0.2509, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9278, norm(y): 0.9901, norm:0.3868, tok/sec: 185994.05, flops:162.90, batch-reuse:1
@ 1620 train 4.0952 , allloss: 4.0952, dt: 709.44ms, fracRes: 0.2507, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9273, norm(y): 0.9900, norm:0.4560, tok/sec: 184754.42, flops:161.82, batch-reuse:1
@ 1621 train 4.2080 , allloss: 4.2080, dt: 705.23ms, fracRes: 0.2506, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9282, norm(y): 0.9901, norm:0.4443, tok/sec: 185857.35, flops:162.78, batch-reuse:1
@ 1622 train 4.2234 , allloss: 4.2234, dt: 709.64ms, fracRes: 0.2465, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9275, norm(y): 0.9901, norm:0.4200, tok/sec: 184701.60, flops:161.77, batch-reuse:1
@ 1623 train 4.1482 , allloss: 4.1482, dt: 708.34ms, fracRes: 0.2451, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9242, norm(y): 0.9901, norm:0.4038, tok/sec: 185042.22, flops:162.07, batch-reuse:1
@ 1624 train 4.0966 , allloss: 4.0966, dt: 703.83ms, fracRes: 0.2476, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9203, norm(y): 0.9901, norm:0.3888, tok/sec: 186227.29, flops:163.11, batch-reuse:1
@ 1625 train 4.0977 , allloss: 4.0977, dt: 691.10ms, fracRes: 0.2553, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9328, norm(y): 0.9899, norm:0.4744, tok/sec: 189657.36, flops:166.11, batch-reuse:1
@ 1626 train 4.1681 , allloss: 4.1681, dt: 706.97ms, fracRes: 0.2512, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9236, norm(y): 0.9899, norm:0.4965, tok/sec: 185398.92, flops:162.38, batch-reuse:1
@ 1627 train 4.0921 , allloss: 4.0921, dt: 702.49ms, fracRes: 0.2543, norm(attn): 0.3809, norm(output): 0.8125, norm(x): 0.9285, norm(y): 0.9898, norm:0.4931, tok/sec: 186582.24, flops:163.42, batch-reuse:1
@ 1628 train 4.0938 , allloss: 4.0938, dt: 685.84ms, fracRes: 0.2507, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9279, norm(y): 0.9899, norm:0.4057, tok/sec: 191110.93, flops:167.39, batch-reuse:1
@ 1629 train 4.0780 , allloss: 4.0780, dt: 707.27ms, fracRes: 0.2520, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9254, norm(y): 0.9899, norm:0.4085, tok/sec: 185320.74, flops:162.31, batch-reuse:1
@ 1630 train 4.1336 , allloss: 4.1336, dt: 719.54ms, fracRes: 0.2511, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9267, norm(y): 0.9901, norm:0.4613, tok/sec: 182159.59, flops:159.55, batch-reuse:1
@ 1631 train 4.0400 , allloss: 4.0400, dt: 715.32ms, fracRes: 0.2467, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9235, norm(y): 0.9901, norm:0.4274, tok/sec: 183235.94, flops:160.49, batch-reuse:1
@ 1632 train 4.1745 , allloss: 4.1745, dt: 702.51ms, fracRes: 0.2496, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9260, norm(y): 0.9901, norm:0.4380, tok/sec: 186576.42, flops:163.41, batch-reuse:1
@ 1633 train 4.1572 , allloss: 4.1572, dt: 689.08ms, fracRes: 0.2470, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9226, norm(y): 0.9901, norm:0.4086, tok/sec: 190212.71, flops:166.60, batch-reuse:1
@ 1634 train 4.1412 , allloss: 4.1412, dt: 689.30ms, fracRes: 0.2443, norm(attn): 0.3887, norm(output): 0.8125, norm(x): 0.9228, norm(y): 0.9901, norm:0.3930, tok/sec: 190151.52, flops:166.55, batch-reuse:1
@ 1635 train 4.0401 , allloss: 4.0401, dt: 680.93ms, fracRes: 0.2440, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9258, norm(y): 0.9900, norm:0.3953, tok/sec: 192488.36, flops:168.59, batch-reuse:1
@ 1636 train 4.0713 , allloss: 4.0713, dt: 680.24ms, fracRes: 0.2459, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9229, norm(y): 0.9900, norm:0.3642, tok/sec: 192684.28, flops:168.76, batch-reuse:1
@ 1637 train 4.1529 , allloss: 4.1529, dt: 703.39ms, fracRes: 0.2439, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9241, norm(y): 0.9901, norm:0.4110, tok/sec: 186343.31, flops:163.21, batch-reuse:1
@ 1638 train 4.1149 , allloss: 4.1149, dt: 709.76ms, fracRes: 0.2508, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9339, norm(y): 0.9900, norm:0.4330, tok/sec: 184670.58, flops:161.74, batch-reuse:1
@ 1639 train 4.1125 , allloss: 4.1125, dt: 693.20ms, fracRes: 0.2487, norm(attn): 0.3906, norm(output): 0.8086, norm(x): 0.9257, norm(y): 0.9900, norm:0.4208, tok/sec: 189081.64, flops:165.61, batch-reuse:1
@ 1640 train 4.1373 , allloss: 4.1373, dt: 705.65ms, fracRes: 0.2491, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9301, norm(y): 0.9900, norm:0.4359, tok/sec: 185747.71, flops:162.69, batch-reuse:1
@ 1641 train 4.1334 , allloss: 4.1334, dt: 689.06ms, fracRes: 0.2451, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9264, norm(y): 0.9901, norm:0.4097, tok/sec: 190219.75, flops:166.61, batch-reuse:1
@ 1642 train 4.1191 , allloss: 4.1191, dt: 702.60ms, fracRes: 0.2495, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9300, norm(y): 0.9900, norm:0.4445, tok/sec: 186551.60, flops:163.39, batch-reuse:1
@ 1643 train 4.1387 , allloss: 4.1387, dt: 679.57ms, fracRes: 0.2520, norm(attn): 0.3848, norm(output): 0.8164, norm(x): 0.9309, norm(y): 0.9901, norm:0.4253, tok/sec: 192874.71, flops:168.93, batch-reuse:1
@ 1644 train 4.1919 , allloss: 4.1919, dt: 700.46ms, fracRes: 0.2563, norm(attn): 0.3848, norm(output): 0.8125, norm(x): 0.9305, norm(y): 0.9899, norm:0.4070, tok/sec: 187123.01, flops:163.89, batch-reuse:1
@ 1645 train 4.0168 , allloss: 4.0168, dt: 689.77ms, fracRes: 0.2615, norm(attn): 0.3867, norm(output): 0.8203, norm(x): 0.9385, norm(y): 0.9898, norm:0.4425, tok/sec: 190022.96, flops:166.43, batch-reuse:1
@ 1646 train 4.1323 , allloss: 4.1323, dt: 693.86ms, fracRes: 0.2541, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9350, norm(y): 0.9900, norm:0.4489, tok/sec: 188903.55, flops:165.45, batch-reuse:1
@ 1647 train 4.1612 , allloss: 4.1612, dt: 693.46ms, fracRes: 0.2455, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9271, norm(y): 0.9901, norm:0.4292, tok/sec: 189011.69, flops:165.55, batch-reuse:1
@ 1648 train 4.1021 , allloss: 4.1021, dt: 694.92ms, fracRes: 0.2518, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9272, norm(y): 0.9900, norm:0.3824, tok/sec: 188613.21, flops:165.20, batch-reuse:1
@ 1649 train 4.1113 , allloss: 4.1113, dt: 704.99ms, fracRes: 0.2501, norm(attn): 0.3828, norm(output): 0.8125, norm(x): 0.9241, norm(y): 0.9900, norm:0.4155, tok/sec: 185919.83, flops:162.84, batch-reuse:1
@ 1650 train 4.1386 , allloss: 4.1386, dt: 701.16ms, fracRes: 0.2528, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9250, norm(y): 0.9898, norm:0.4884, tok/sec: 186936.65, flops:163.73, batch-reuse:1
@ 1651 train 4.2640 , allloss: 4.2640, dt: 698.84ms, fracRes: 0.2515, norm(attn): 0.3945, norm(output): 0.8125, norm(x): 0.9294, norm(y): 0.9900, norm:0.4991, tok/sec: 187555.84, flops:164.27, batch-reuse:1
@ 1652 train 4.2049 , allloss: 4.2049, dt: 680.69ms, fracRes: 0.2531, norm(attn): 0.3906, norm(output): 0.8125, norm(x): 0.9312, norm(y): 0.9899, norm:0.5093, tok/sec: 192557.13, flops:168.65, batch-reuse:1
@ 1653 train 4.1704 , allloss: 4.1704, dt: 700.32ms, fracRes: 0.2501, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9272, norm(y): 0.9900, norm:0.5498, tok/sec: 187160.47, flops:163.93, batch-reuse:1
@ 1654 train 4.1142 , allloss: 4.1142, dt: 684.71ms, fracRes: 0.2418, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9268, norm(y): 0.9901, norm:0.4557, tok/sec: 191427.95, flops:167.66, batch-reuse:1
@ 1655 train 4.0344 , allloss: 4.0344, dt: 693.94ms, fracRes: 0.2567, norm(attn): 0.3867, norm(output): 0.8164, norm(x): 0.9388, norm(y): 0.9899, norm:0.4790, tok/sec: 188880.97, flops:165.43, batch-reuse:1
@ 1656 train 4.0732 , allloss: 4.0732, dt: 698.40ms, fracRes: 0.2536, norm(attn): 0.3906, norm(output): 0.8164, norm(x): 0.9321, norm(y): 0.9900, norm:0.4542, tok/sec: 187674.55, flops:164.38, batch-reuse:1
@ 1657 train 4.1625 , allloss: 4.1625, dt: 700.25ms, fracRes: 0.2475, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9288, norm(y): 0.9902, norm:0.4598, tok/sec: 187179.02, flops:163.94, batch-reuse:1
@ 1658 train 4.1715 , allloss: 4.1715, dt: 697.35ms, fracRes: 0.2465, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9319, norm(y): 0.9901, norm:0.4513, tok/sec: 187957.20, flops:164.62, batch-reuse:1
@ 1659 train 4.0673 , allloss: 4.0673, dt: 701.71ms, fracRes: 0.2477, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9308, norm(y): 0.9901, norm:0.4444, tok/sec: 186788.78, flops:163.60, batch-reuse:1
@ 1660 train 4.0778 , allloss: 4.0778, dt: 700.70ms, fracRes: 0.2538, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9397, norm(y): 0.9900, norm:0.5306, tok/sec: 187057.63, flops:163.84, batch-reuse:1
@ 1661 train 4.1321 , allloss: 4.1321, dt: 690.00ms, fracRes: 0.2481, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9344, norm(y): 0.9899, norm:0.4430, tok/sec: 189958.22, flops:166.38, batch-reuse:1
@ 1662 train 4.1923 , allloss: 4.1923, dt: 689.04ms, fracRes: 0.2561, norm(attn): 0.3867, norm(output): 0.8125, norm(x): 0.9346, norm(y): 0.9899, norm:0.4121, tok/sec: 190224.03, flops:166.61, batch-reuse:1
@ 1663 train 4.1864 , allloss: 4.1864, dt: 689.61ms, fracRes: 0.2545, norm(attn): 0.3926, norm(output): 0.8125, norm(x): 0.9361, norm(y): 0.9900, norm:0.4874, tok/sec: 190067.11, flops:166.47, batch-reuse:1
@ 1664 train 4.0890 , allloss: 4.0890, dt: 695.77ms, fracRes: 0.2475, norm(attn): 0.3965, norm(output): 0.8125, norm(x): 0.9248, norm(y): 0.9901, norm:0.4483, tok/sec: 188384.67, flops:165.00, batch-reuse:1
@ 1665 train 4.1321 , allloss: 4.1321, dt: 691.42ms, fracRes: 0.2529, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9292, norm(y): 0.9900, norm:0.4324, tok/sec: 189568.68, flops:166.03, batch-reuse:1
@ 1666 train 4.1671 , allloss: 4.1671, dt: 712.41ms, fracRes: 0.2565, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9358, norm(y): 0.9899, norm:0.4442, tok/sec: 183985.00, flops:161.14, batch-reuse:1
@ 1667 train 4.3280 , allloss: 4.3280, dt: 699.18ms, fracRes: 0.2523, norm(attn): 0.3945, norm(output): 0.8203, norm(x): 0.9387, norm(y): 0.9900, norm:0.3920, tok/sec: 187465.60, flops:164.19, batch-reuse:1
@ 1668 train 4.3393 , allloss: 4.3393, dt: 714.35ms, fracRes: 0.2507, norm(attn): 0.4023, norm(output): 0.8164, norm(x): 0.9375, norm(y): 0.9901, norm:0.5898, tok/sec: 183484.96, flops:160.71, batch-reuse:1
@ 1669 train 4.3476 , allloss: 4.3476, dt: 716.07ms, fracRes: 0.2492, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9441, norm(y): 0.9902, norm:0.5627, tok/sec: 183044.61, flops:160.32, batch-reuse:1
@ 1670 train 4.4161 , allloss: 4.4161, dt: 715.56ms, fracRes: 0.2572, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9495, norm(y): 0.9900, norm:0.6207, tok/sec: 183174.39, flops:160.43, batch-reuse:1
@ 1671 train 4.3571 , allloss: 4.3571, dt: 689.32ms, fracRes: 0.2504, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9383, norm(y): 0.9901, norm:0.4721, tok/sec: 190147.38, flops:166.54, batch-reuse:1
@ 1672 train 4.3538 , allloss: 4.3538, dt: 705.98ms, fracRes: 0.2492, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9397, norm(y): 0.9901, norm:0.6170, tok/sec: 185660.26, flops:162.61, batch-reuse:1
@ 1673 train 4.2646 , allloss: 4.2646, dt: 701.17ms, fracRes: 0.2565, norm(attn): 0.3965, norm(output): 0.8164, norm(x): 0.9370, norm(y): 0.9900, norm:0.5572, tok/sec: 186934.42, flops:163.73, batch-reuse:1
@ 1674 train 4.3120 , allloss: 4.3120, dt: 699.62ms, fracRes: 0.2629, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9396, norm(y): 0.9899, norm:0.4418, tok/sec: 187347.16, flops:164.09, batch-reuse:1
@ 1675 train 4.4431 , allloss: 4.4431, dt: 699.02ms, fracRes: 0.2645, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9427, norm(y): 0.9899, norm:0.4641, tok/sec: 187507.04, flops:164.23, batch-reuse:1
@ 1676 train 4.4381 , allloss: 4.4381, dt: 697.23ms, fracRes: 0.2569, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9399, norm(y): 0.9899, norm:0.5126, tok/sec: 187990.23, flops:164.65, batch-reuse:1
@ 1677 train 4.2541 , allloss: 4.2541, dt: 684.15ms, fracRes: 0.2518, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9395, norm(y): 0.9901, norm:0.4654, tok/sec: 191582.59, flops:167.80, batch-reuse:1
@ 1678 train 4.2768 , allloss: 4.2768, dt: 687.46ms, fracRes: 0.2537, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9414, norm(y): 0.9901, norm:0.4551, tok/sec: 190661.09, flops:166.99, batch-reuse:1
@ 1679 train 4.3929 , allloss: 4.3929, dt: 692.47ms, fracRes: 0.2537, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9465, norm(y): 0.9902, norm:0.4447, tok/sec: 189281.04, flops:165.78, batch-reuse:1
@ 1680 train 4.3377 , allloss: 4.3377, dt: 688.88ms, fracRes: 0.2530, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9447, norm(y): 0.9902, norm:0.3856, tok/sec: 190267.68, flops:166.65, batch-reuse:1
@ 1681 train 4.3166 , allloss: 4.3166, dt: 700.83ms, fracRes: 0.2535, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9479, norm(y): 0.9901, norm:0.4295, tok/sec: 187023.20, flops:163.81, batch-reuse:1
@ 1682 train 4.3519 , allloss: 4.3519, dt: 701.71ms, fracRes: 0.2497, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9483, norm(y): 0.9902, norm:0.3926, tok/sec: 186788.40, flops:163.60, batch-reuse:1
@ 1683 train 4.2078 , allloss: 4.2078, dt: 687.04ms, fracRes: 0.2578, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9492, norm(y): 0.9900, norm:0.4155, tok/sec: 190777.41, flops:167.09, batch-reuse:1
@ 1684 train 4.2591 , allloss: 4.2591, dt: 702.13ms, fracRes: 0.2599, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9485, norm(y): 0.9900, norm:0.3642, tok/sec: 186676.65, flops:163.50, batch-reuse:1
@ 1685 train 4.3364 , allloss: 4.3364, dt: 700.27ms, fracRes: 0.2593, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9480, norm(y): 0.9900, norm:0.3723, tok/sec: 187173.22, flops:163.94, batch-reuse:1
@ 1686 train 4.2837 , allloss: 4.2837, dt: 693.81ms, fracRes: 0.2586, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9514, norm(y): 0.9899, norm:0.3683, tok/sec: 188916.60, flops:165.46, batch-reuse:1
@ 1687 train 4.3492 , allloss: 4.3492, dt: 688.03ms, fracRes: 0.2563, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9486, norm(y): 0.9899, norm:0.3990, tok/sec: 190504.18, flops:166.85, batch-reuse:1
@ 1688 train 4.4277 , allloss: 4.4277, dt: 701.05ms, fracRes: 0.2513, norm(attn): 0.3926, norm(output): 0.8242, norm(x): 0.9452, norm(y): 0.9901, norm:0.4445, tok/sec: 186965.83, flops:163.76, batch-reuse:1
@ 1689 train 4.2924 , allloss: 4.2924, dt: 686.21ms, fracRes: 0.2567, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9493, norm(y): 0.9900, norm:0.4396, tok/sec: 191008.41, flops:167.30, batch-reuse:1
@ 1690 train 4.2855 , allloss: 4.2855, dt: 695.09ms, fracRes: 0.2575, norm(attn): 0.3965, norm(output): 0.8320, norm(x): 0.9499, norm(y): 0.9899, norm:0.4359, tok/sec: 188567.98, flops:165.16, batch-reuse:1
@ 1691 train 4.2249 , allloss: 4.2249, dt: 708.28ms, fracRes: 0.2560, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9457, norm(y): 0.9899, norm:0.3920, tok/sec: 185056.92, flops:162.08, batch-reuse:1
@ 1692 train 4.2175 , allloss: 4.2175, dt: 689.69ms, fracRes: 0.2540, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9432, norm(y): 0.9900, norm:0.4342, tok/sec: 190044.38, flops:166.45, batch-reuse:1
@ 1693 train 4.4933 , allloss: 4.4933, dt: 688.97ms, fracRes: 0.2527, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9451, norm(y): 0.9902, norm:0.4961, tok/sec: 190242.92, flops:166.63, batch-reuse:1
@ 1694 train 4.4096 , allloss: 4.4096, dt: 685.65ms, fracRes: 0.2607, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9500, norm(y): 0.9900, norm:0.4957, tok/sec: 191163.56, flops:167.43, batch-reuse:1
@ 1695 train 4.3353 , allloss: 4.3353, dt: 705.80ms, fracRes: 0.2561, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9472, norm(y): 0.9901, norm:0.4534, tok/sec: 185706.23, flops:162.65, batch-reuse:1
@ 1696 train 4.3223 , allloss: 4.3223, dt: 704.79ms, fracRes: 0.2600, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9483, norm(y): 0.9900, norm:0.4212, tok/sec: 185972.59, flops:162.89, batch-reuse:1
@ 1697 train 4.2800 , allloss: 4.2800, dt: 705.46ms, fracRes: 0.2588, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9495, norm(y): 0.9900, norm:0.4248, tok/sec: 185796.36, flops:162.73, batch-reuse:1
@ 1698 train 4.2754 , allloss: 4.2754, dt: 694.96ms, fracRes: 0.2548, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9477, norm(y): 0.9900, norm:0.4251, tok/sec: 188604.28, flops:165.19, batch-reuse:1
@ 1699 train 4.2691 , allloss: 4.2691, dt: 690.92ms, fracRes: 0.2588, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9509, norm(y): 0.9899, norm:0.4948, tok/sec: 189706.71, flops:166.16, batch-reuse:1
@ 1700 train 4.3156 , allloss: 4.3156, dt: 699.24ms, fracRes: 0.2527, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9453, norm(y): 0.9901, norm:0.3775, tok/sec: 187450.52, flops:164.18, batch-reuse:1
@ 1701 train 4.3103 , allloss: 4.3103, dt: 697.97ms, fracRes: 0.2558, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9456, norm(y): 0.9900, norm:0.4240, tok/sec: 187790.07, flops:164.48, batch-reuse:1
@ 1702 train 4.2712 , allloss: 4.2712, dt: 701.32ms, fracRes: 0.2578, norm(attn): 0.3926, norm(output): 0.8203, norm(x): 0.9458, norm(y): 0.9900, norm:0.4263, tok/sec: 186892.67, flops:163.69, batch-reuse:1
@ 1703 train 4.2350 , allloss: 4.2350, dt: 689.97ms, fracRes: 0.2608, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9504, norm(y): 0.9899, norm:0.4413, tok/sec: 189968.46, flops:166.38, batch-reuse:1
@ 1704 train 4.3032 , allloss: 4.3032, dt: 697.79ms, fracRes: 0.2561, norm(attn): 0.3945, norm(output): 0.8164, norm(x): 0.9413, norm(y): 0.9900, norm:0.3708, tok/sec: 187838.71, flops:164.52, batch-reuse:1
@ 1705 train 4.2166 , allloss: 4.2166, dt: 695.84ms, fracRes: 0.2639, norm(attn): 0.3945, norm(output): 0.8203, norm(x): 0.9510, norm(y): 0.9899, norm:0.6191, tok/sec: 188366.40, flops:164.98, batch-reuse:1
@ 1706 train 4.2375 , allloss: 4.2375, dt: 684.90ms, fracRes: 0.2502, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9426, norm(y): 0.9900, norm:0.5760, tok/sec: 191374.58, flops:167.62, batch-reuse:1
@ 1707 train 4.2138 , allloss: 4.2138, dt: 694.28ms, fracRes: 0.2476, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9419, norm(y): 0.9901, norm:0.5464, tok/sec: 188789.25, flops:165.35, batch-reuse:1
@ 1708 train 4.1886 , allloss: 4.1886, dt: 704.01ms, fracRes: 0.2497, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9435, norm(y): 0.9901, norm:0.4661, tok/sec: 186178.23, flops:163.07, batch-reuse:1
@ 1709 train 4.2850 , allloss: 4.2850, dt: 690.50ms, fracRes: 0.2562, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9458, norm(y): 0.9900, norm:0.5261, tok/sec: 189821.73, flops:166.26, batch-reuse:1
@ 1710 train 4.2271 , allloss: 4.2271, dt: 685.06ms, fracRes: 0.2606, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9474, norm(y): 0.9899, norm:0.4523, tok/sec: 191328.55, flops:167.58, batch-reuse:1
@ 1711 train 4.2589 , allloss: 4.2589, dt: 689.55ms, fracRes: 0.2567, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9455, norm(y): 0.9900, norm:0.4741, tok/sec: 190083.15, flops:166.49, batch-reuse:1
@ 1712 train 4.4123 , allloss: 4.4123, dt: 710.54ms, fracRes: 0.2540, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9477, norm(y): 0.9901, norm:0.4240, tok/sec: 184467.15, flops:161.57, batch-reuse:1
@ 1713 train 4.1483 , allloss: 4.1483, dt: 715.64ms, fracRes: 0.2541, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9416, norm(y): 0.9900, norm:0.4180, tok/sec: 183154.13, flops:160.42, batch-reuse:1
@ 1714 train 4.2407 , allloss: 4.2407, dt: 705.35ms, fracRes: 0.2589, norm(attn): 0.3926, norm(output): 0.8164, norm(x): 0.9464, norm(y): 0.9899, norm:0.4296, tok/sec: 185825.62, flops:162.76, batch-reuse:1
@ 1715 train 4.2192 , allloss: 4.2192, dt: 693.19ms, fracRes: 0.2552, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9438, norm(y): 0.9900, norm:0.4029, tok/sec: 189086.06, flops:165.61, batch-reuse:1
@ 1716 train 4.3172 , allloss: 4.3172, dt: 700.71ms, fracRes: 0.2611, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9514, norm(y): 0.9900, norm:0.4154, tok/sec: 187055.84, flops:163.83, batch-reuse:1
@ 1717 train 4.4331 , allloss: 4.4331, dt: 700.30ms, fracRes: 0.2594, norm(attn): 0.4043, norm(output): 0.8398, norm(x): 0.9583, norm(y): 0.9901, norm:0.5611, tok/sec: 187164.81, flops:163.93, batch-reuse:1
@ 1718 train 4.3795 , allloss: 4.3795, dt: 701.53ms, fracRes: 0.2584, norm(attn): 0.4023, norm(output): 0.8398, norm(x): 0.9593, norm(y): 0.9901, norm:0.5129, tok/sec: 186837.35, flops:163.64, batch-reuse:1
@ 1719 train 4.3598 , allloss: 4.3598, dt: 689.51ms, fracRes: 0.2580, norm(attn): 0.4023, norm(output): 0.8320, norm(x): 0.9541, norm(y): 0.9900, norm:0.4683, tok/sec: 190094.45, flops:166.50, batch-reuse:1
@ 1720 train 4.2645 , allloss: 4.2645, dt: 708.78ms, fracRes: 0.2619, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9587, norm(y): 0.9899, norm:0.4240, tok/sec: 184926.76, flops:161.97, batch-reuse:1
@ 1721 train 4.3496 , allloss: 4.3496, dt: 708.13ms, fracRes: 0.2626, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9536, norm(y): 0.9899, norm:0.4324, tok/sec: 185096.55, flops:162.12, batch-reuse:1
@ 1722 train 4.3445 , allloss: 4.3445, dt: 706.09ms, fracRes: 0.2640, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9579, norm(y): 0.9899, norm:0.4732, tok/sec: 185629.42, flops:162.58, batch-reuse:1
@ 1723 train 4.2865 , allloss: 4.2865, dt: 692.36ms, fracRes: 0.2585, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9538, norm(y): 0.9899, norm:0.4098, tok/sec: 189311.81, flops:165.81, batch-reuse:1
@ 1724 train 4.1783 , allloss: 4.1783, dt: 709.06ms, fracRes: 0.2573, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9531, norm(y): 0.9899, norm:0.4239, tok/sec: 184852.83, flops:161.90, batch-reuse:1
@ 1725 train 4.2789 , allloss: 4.2789, dt: 711.76ms, fracRes: 0.2559, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9470, norm(y): 0.9899, norm:0.4842, tok/sec: 184151.64, flops:161.29, batch-reuse:1
@ 1726 train 4.2572 , allloss: 4.2572, dt: 691.62ms, fracRes: 0.2608, norm(attn): 0.3984, norm(output): 0.8164, norm(x): 0.9478, norm(y): 0.9898, norm:0.3916, tok/sec: 189514.44, flops:165.99, batch-reuse:1
@ 1727 train 4.1901 , allloss: 4.1901, dt: 686.99ms, fracRes: 0.2672, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9545, norm(y): 0.9898, norm:0.4168, tok/sec: 190791.71, flops:167.11, batch-reuse:1
@ 1728 train 4.3866 , allloss: 4.3866, dt: 694.34ms, fracRes: 0.2595, norm(attn): 0.3965, norm(output): 0.8320, norm(x): 0.9532, norm(y): 0.9899, norm:0.4334, tok/sec: 188773.37, flops:165.34, batch-reuse:1
@ 1729 train 4.4943 , allloss: 4.4943, dt: 691.14ms, fracRes: 0.2634, norm(attn): 0.3984, norm(output): 0.8359, norm(x): 0.9644, norm(y): 0.9898, norm:0.5055, tok/sec: 189646.31, flops:166.10, batch-reuse:1
@ 1730 train 4.2819 , allloss: 4.2819, dt: 699.96ms, fracRes: 0.2654, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9609, norm(y): 0.9898, norm:0.4001, tok/sec: 187257.05, flops:164.01, batch-reuse:1
@ 1731 train 4.2385 , allloss: 4.2385, dt: 706.13ms, fracRes: 0.2650, norm(attn): 0.4004, norm(output): 0.8359, norm(x): 0.9619, norm(y): 0.9898, norm:0.4496, tok/sec: 185621.08, flops:162.58, batch-reuse:1
@ 1732 train 4.2187 , allloss: 4.2187, dt: 708.46ms, fracRes: 0.2638, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9606, norm(y): 0.9900, norm:0.4244, tok/sec: 185010.28, flops:162.04, batch-reuse:1
@ 1733 train 4.2618 , allloss: 4.2618, dt: 694.29ms, fracRes: 0.2549, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9512, norm(y): 0.9902, norm:0.3687, tok/sec: 188785.04, flops:165.35, batch-reuse:1
@ 1734 train 4.6785 , allloss: 4.6785, dt: 695.63ms, fracRes: 0.2565, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9483, norm(y): 0.9901, norm:0.5314, tok/sec: 188423.28, flops:165.03, batch-reuse:1
@ 1735 train 4.2843 , allloss: 4.2843, dt: 686.40ms, fracRes: 0.2498, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9461, norm(y): 0.9900, norm:0.5504, tok/sec: 190956.13, flops:167.25, batch-reuse:1
@ 1736 train 4.2414 , allloss: 4.2414, dt: 704.16ms, fracRes: 0.2582, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9494, norm(y): 0.9900, norm:0.4418, tok/sec: 186138.51, flops:163.03, batch-reuse:1
@ 1737 train 4.1831 , allloss: 4.1831, dt: 705.09ms, fracRes: 0.2617, norm(attn): 0.4004, norm(output): 0.8164, norm(x): 0.9460, norm(y): 0.9899, norm:0.4833, tok/sec: 185894.11, flops:162.82, batch-reuse:1
@ 1738 train 4.2137 , allloss: 4.2137, dt: 698.12ms, fracRes: 0.2631, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9514, norm(y): 0.9900, norm:0.4989, tok/sec: 187751.27, flops:164.44, batch-reuse:1
@ 1739 train 4.2138 , allloss: 4.2138, dt: 683.47ms, fracRes: 0.2652, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9565, norm(y): 0.9899, norm:0.4477, tok/sec: 191775.66, flops:167.97, batch-reuse:1
@ 1740 train 4.1911 , allloss: 4.1911, dt: 698.11ms, fracRes: 0.2602, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9559, norm(y): 0.9899, norm:0.4246, tok/sec: 187752.11, flops:164.44, batch-reuse:1
@ 1741 train 4.3257 , allloss: 4.3257, dt: 698.65ms, fracRes: 0.2589, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9542, norm(y): 0.9900, norm:0.4095, tok/sec: 187608.20, flops:164.32, batch-reuse:1
@ 1742 train 4.2587 , allloss: 4.2587, dt: 696.49ms, fracRes: 0.2549, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9551, norm(y): 0.9902, norm:0.3991, tok/sec: 188188.63, flops:164.83, batch-reuse:1
@ 1743 train 4.3064 , allloss: 4.3064, dt: 698.39ms, fracRes: 0.2580, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9611, norm(y): 0.9901, norm:0.4368, tok/sec: 187677.50, flops:164.38, batch-reuse:1
@ 1744 train 4.2008 , allloss: 4.2008, dt: 699.10ms, fracRes: 0.2593, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9558, norm(y): 0.9900, norm:0.3951, tok/sec: 187488.04, flops:164.21, batch-reuse:1
@ 1745 train 4.1852 , allloss: 4.1852, dt: 699.86ms, fracRes: 0.2640, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9537, norm(y): 0.9899, norm:0.3747, tok/sec: 187283.53, flops:164.03, batch-reuse:1
@ 1746 train 4.2863 , allloss: 4.2863, dt: 687.29ms, fracRes: 0.2639, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9575, norm(y): 0.9898, norm:0.4211, tok/sec: 190709.37, flops:167.03, batch-reuse:1
@ 1747 train 4.1308 , allloss: 4.1308, dt: 707.07ms, fracRes: 0.2683, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9547, norm(y): 0.9897, norm:0.3981, tok/sec: 185372.91, flops:162.36, batch-reuse:1
@ 1748 train 4.2053 , allloss: 4.2053, dt: 700.85ms, fracRes: 0.2633, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9542, norm(y): 0.9900, norm:0.3876, tok/sec: 187018.24, flops:163.80, batch-reuse:1
@ 1749 train 4.3081 , allloss: 4.3081, dt: 703.20ms, fracRes: 0.2613, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9551, norm(y): 0.9900, norm:0.4362, tok/sec: 186392.84, flops:163.25, batch-reuse:1
@ 1750 train 4.2836 , allloss: 4.2836, dt: 699.33ms, fracRes: 0.2615, norm(attn): 0.3965, norm(output): 0.8242, norm(x): 0.9536, norm(y): 0.9900, norm:0.3867, tok/sec: 187425.79, flops:164.16, batch-reuse:1
@ 1751 train 4.3867 , allloss: 4.3867, dt: 698.36ms, fracRes: 0.2658, norm(attn): 0.4004, norm(output): 0.8477, norm(x): 0.9637, norm(y): 0.9898, norm:0.5280, tok/sec: 187686.53, flops:164.39, batch-reuse:1
@ 1752 train 4.4439 , allloss: 4.4439, dt: 697.50ms, fracRes: 0.2714, norm(attn): 0.4004, norm(output): 0.8398, norm(x): 0.9649, norm(y): 0.9897, norm:0.5449, tok/sec: 187917.56, flops:164.59, batch-reuse:1
@ 1753 train 4.2723 , allloss: 4.2723, dt: 694.84ms, fracRes: 0.2566, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9516, norm(y): 0.9900, norm:0.4179, tok/sec: 188635.14, flops:165.22, batch-reuse:1
@ 1754 train 4.2359 , allloss: 4.2359, dt: 685.81ms, fracRes: 0.2611, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9533, norm(y): 0.9899, norm:0.4251, tok/sec: 191120.70, flops:167.39, batch-reuse:1
@ 1755 train 4.2259 , allloss: 4.2259, dt: 685.00ms, fracRes: 0.2578, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9485, norm(y): 0.9899, norm:0.4182, tok/sec: 191345.07, flops:167.59, batch-reuse:1
@ 1756 train 4.2208 , allloss: 4.2208, dt: 707.96ms, fracRes: 0.2657, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9531, norm(y): 0.9898, norm:0.3971, tok/sec: 185140.56, flops:162.16, batch-reuse:1
@ 1757 train 4.2869 , allloss: 4.2869, dt: 710.03ms, fracRes: 0.2635, norm(attn): 0.3965, norm(output): 0.8203, norm(x): 0.9529, norm(y): 0.9898, norm:0.4393, tok/sec: 184601.68, flops:161.68, batch-reuse:1
@ 1758 train 4.3408 , allloss: 4.3408, dt: 709.43ms, fracRes: 0.2647, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9569, norm(y): 0.9899, norm:0.5140, tok/sec: 184757.84, flops:161.82, batch-reuse:1
@ 1759 train 4.3196 , allloss: 4.3196, dt: 712.14ms, fracRes: 0.2597, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9543, norm(y): 0.9900, norm:0.5274, tok/sec: 184053.18, flops:161.20, batch-reuse:1
@ 1760 train 4.1547 , allloss: 4.1547, dt: 706.14ms, fracRes: 0.2494, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9454, norm(y): 0.9902, norm:0.4694, tok/sec: 185617.70, flops:162.57, batch-reuse:1
@ 1761 train 4.1131 , allloss: 4.1131, dt: 708.09ms, fracRes: 0.2582, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9511, norm(y): 0.9899, norm:0.4498, tok/sec: 185105.83, flops:162.13, batch-reuse:1
@ 1762 train 3.9961 , allloss: 3.9961, dt: 706.61ms, fracRes: 0.2606, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9499, norm(y): 0.9898, norm:0.4402, tok/sec: 185494.00, flops:162.47, batch-reuse:1
@ 1763 train 4.2064 , allloss: 4.2064, dt: 703.39ms, fracRes: 0.2661, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9545, norm(y): 0.9898, norm:0.5191, tok/sec: 186344.32, flops:163.21, batch-reuse:1
@ 1764 train 4.2072 , allloss: 4.2072, dt: 707.65ms, fracRes: 0.2652, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9533, norm(y): 0.9898, norm:0.4166, tok/sec: 185221.90, flops:162.23, batch-reuse:1
@ 1765 train 4.1930 , allloss: 4.1930, dt: 711.26ms, fracRes: 0.2656, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9520, norm(y): 0.9898, norm:0.4691, tok/sec: 184280.65, flops:161.40, batch-reuse:1
@ 1766 train 4.0895 , allloss: 4.0895, dt: 708.77ms, fracRes: 0.2616, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9501, norm(y): 0.9900, norm:0.4212, tok/sec: 184928.62, flops:161.97, batch-reuse:1
@ 1767 train 4.2064 , allloss: 4.2064, dt: 708.81ms, fracRes: 0.2578, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9531, norm(y): 0.9901, norm:0.4161, tok/sec: 184919.42, flops:161.96, batch-reuse:1
@ 1768 train 4.2481 , allloss: 4.2481, dt: 706.81ms, fracRes: 0.2629, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9595, norm(y): 0.9900, norm:0.3903, tok/sec: 185442.63, flops:162.42, batch-reuse:1
@ 1769 train 4.1423 , allloss: 4.1423, dt: 706.46ms, fracRes: 0.2589, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9532, norm(y): 0.9899, norm:0.3936, tok/sec: 185533.32, flops:162.50, batch-reuse:1
@ 1770 train 4.1379 , allloss: 4.1379, dt: 710.74ms, fracRes: 0.2571, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9522, norm(y): 0.9900, norm:0.3627, tok/sec: 184415.54, flops:161.52, batch-reuse:1
@ 1771 train 4.1398 , allloss: 4.1398, dt: 706.73ms, fracRes: 0.2604, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9535, norm(y): 0.9900, norm:0.3784, tok/sec: 185462.03, flops:162.44, batch-reuse:1
@ 1772 train 4.1319 , allloss: 4.1319, dt: 710.08ms, fracRes: 0.2622, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9552, norm(y): 0.9900, norm:0.3647, tok/sec: 184587.49, flops:161.67, batch-reuse:1
@ 1773 train 4.0630 , allloss: 4.0630, dt: 706.81ms, fracRes: 0.2623, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9532, norm(y): 0.9899, norm:0.3683, tok/sec: 185440.82, flops:162.42, batch-reuse:1
@ 1774 train 4.2529 , allloss: 4.2529, dt: 698.54ms, fracRes: 0.2611, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9550, norm(y): 0.9900, norm:0.3280, tok/sec: 187638.23, flops:164.34, batch-reuse:1
@ 1775 train 4.1360 , allloss: 4.1360, dt: 705.03ms, fracRes: 0.2635, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9551, norm(y): 0.9899, norm:0.3722, tok/sec: 185909.70, flops:162.83, batch-reuse:1
@ 1776 train 4.1300 , allloss: 4.1300, dt: 706.29ms, fracRes: 0.2646, norm(attn): 0.4023, norm(output): 0.8203, norm(x): 0.9528, norm(y): 0.9898, norm:0.3707, tok/sec: 185578.66, flops:162.54, batch-reuse:1
@ 1777 train 4.0561 , allloss: 4.0561, dt: 706.47ms, fracRes: 0.2662, norm(attn): 0.4043, norm(output): 0.8242, norm(x): 0.9506, norm(y): 0.9898, norm:0.3948, tok/sec: 185531.00, flops:162.50, batch-reuse:1
@ 1778 train 4.2793 , allloss: 4.2793, dt: 704.18ms, fracRes: 0.2768, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9665, norm(y): 0.9896, norm:0.4889, tok/sec: 186134.73, flops:163.03, batch-reuse:1
@ 1779 train 4.1197 , allloss: 4.1197, dt: 704.45ms, fracRes: 0.2649, norm(attn): 0.3984, norm(output): 0.8203, norm(x): 0.9500, norm(y): 0.9897, norm:0.4146, tok/sec: 186061.84, flops:162.96, batch-reuse:1
@ 1780 train 4.1851 , allloss: 4.1851, dt: 708.22ms, fracRes: 0.2665, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9555, norm(y): 0.9897, norm:0.4868, tok/sec: 185071.69, flops:162.10, batch-reuse:1
@ 1781 train 4.1836 , allloss: 4.1836, dt: 702.12ms, fracRes: 0.2628, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9575, norm(y): 0.9898, norm:0.4047, tok/sec: 186680.26, flops:163.50, batch-reuse:1
@ 1782 train 4.2069 , allloss: 4.2069, dt: 712.02ms, fracRes: 0.2636, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9578, norm(y): 0.9899, norm:0.3777, tok/sec: 184085.60, flops:161.23, batch-reuse:1
@ 1783 train 4.1972 , allloss: 4.1972, dt: 712.16ms, fracRes: 0.2646, norm(attn): 0.4043, norm(output): 0.8203, norm(x): 0.9510, norm(y): 0.9898, norm:0.4190, tok/sec: 184047.33, flops:161.20, batch-reuse:1
@ 1784 train 4.0969 , allloss: 4.0969, dt: 697.59ms, fracRes: 0.2675, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.9533, norm(y): 0.9898, norm:0.4194, tok/sec: 187893.02, flops:164.57, batch-reuse:1
@ 1785 train 4.1334 , allloss: 4.1334, dt: 706.89ms, fracRes: 0.2645, norm(attn): 0.4062, norm(output): 0.8242, norm(x): 0.9555, norm(y): 0.9899, norm:0.4114, tok/sec: 185419.37, flops:162.40, batch-reuse:1
@ 1786 train 4.1893 , allloss: 4.1893, dt: 684.12ms, fracRes: 0.2613, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9560, norm(y): 0.9901, norm:0.4086, tok/sec: 191591.07, flops:167.81, batch-reuse:1
@ 1787 train 4.1509 , allloss: 4.1509, dt: 687.86ms, fracRes: 0.2616, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9539, norm(y): 0.9900, norm:0.3910, tok/sec: 190549.14, flops:166.89, batch-reuse:1
@ 1788 train 4.2106 , allloss: 4.2106, dt: 703.88ms, fracRes: 0.2585, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9521, norm(y): 0.9900, norm:0.4120, tok/sec: 186212.47, flops:163.10, batch-reuse:1
@ 1789 train 4.2226 , allloss: 4.2226, dt: 704.47ms, fracRes: 0.2675, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9601, norm(y): 0.9900, norm:0.4172, tok/sec: 186058.07, flops:162.96, batch-reuse:1
@ 1790 train 4.2322 , allloss: 4.2322, dt: 702.31ms, fracRes: 0.2636, norm(attn): 0.4062, norm(output): 0.8359, norm(x): 0.9597, norm(y): 0.9900, norm:0.5642, tok/sec: 186631.02, flops:163.46, batch-reuse:1
@ 1791 train 4.1781 , allloss: 4.1781, dt: 707.87ms, fracRes: 0.2597, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9523, norm(y): 0.9899, norm:0.5303, tok/sec: 185163.94, flops:162.18, batch-reuse:1
@ 1792 train 4.2618 , allloss: 4.2618, dt: 693.35ms, fracRes: 0.2685, norm(attn): 0.4004, norm(output): 0.8203, norm(x): 0.9536, norm(y): 0.9897, norm:0.4471, tok/sec: 189040.94, flops:165.57, batch-reuse:1
@ 1793 train 4.2699 , allloss: 4.2699, dt: 692.21ms, fracRes: 0.2641, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9520, norm(y): 0.9898, norm:0.4190, tok/sec: 189353.41, flops:165.85, batch-reuse:1
@ 1794 train 4.1650 , allloss: 4.1650, dt: 698.21ms, fracRes: 0.2612, norm(attn): 0.4043, norm(output): 0.8438, norm(x): 0.9597, norm(y): 0.9898, norm:0.4884, tok/sec: 187726.85, flops:164.42, batch-reuse:1
@ 1795 train 4.2211 , allloss: 4.2211, dt: 702.02ms, fracRes: 0.2623, norm(attn): 0.4023, norm(output): 0.8320, norm(x): 0.9583, norm(y): 0.9898, norm:0.3879, tok/sec: 186707.27, flops:163.53, batch-reuse:1
@ 1796 train 4.1054 , allloss: 4.1054, dt: 705.95ms, fracRes: 0.2636, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9585, norm(y): 0.9897, norm:0.4506, tok/sec: 185666.78, flops:162.62, batch-reuse:1
@ 1797 train 4.1488 , allloss: 4.1488, dt: 706.03ms, fracRes: 0.2571, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9575, norm(y): 0.9899, norm:0.4361, tok/sec: 185647.03, flops:162.60, batch-reuse:1
@ 1798 train 4.1457 , allloss: 4.1457, dt: 699.61ms, fracRes: 0.2586, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9564, norm(y): 0.9900, norm:0.4052, tok/sec: 187350.22, flops:164.09, batch-reuse:1
@ 1799 train 4.1851 , allloss: 4.1851, dt: 699.50ms, fracRes: 0.2665, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9601, norm(y): 0.9900, norm:0.3818, tok/sec: 187378.38, flops:164.12, batch-reuse:1
@ 1800 train 4.1306 , allloss: 4.1306, dt: 703.10ms, fracRes: 0.2673, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9579, norm(y): 0.9899, norm:0.3939, tok/sec: 186419.26, flops:163.28, batch-reuse:1
@ 1801 train 4.0658 , allloss: 4.0658, dt: 697.08ms, fracRes: 0.2723, norm(attn): 0.4023, norm(output): 0.8438, norm(x): 0.9665, norm(y): 0.9897, norm:0.3927, tok/sec: 188029.20, flops:164.69, batch-reuse:1
@ 1802 train 4.2834 , allloss: 4.2834, dt: 696.12ms, fracRes: 0.2664, norm(attn): 0.4023, norm(output): 0.8398, norm(x): 0.9642, norm(y): 0.9899, norm:0.3841, tok/sec: 188290.59, flops:164.92, batch-reuse:1
@ 1803 train 4.1791 , allloss: 4.1791, dt: 696.22ms, fracRes: 0.2615, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9628, norm(y): 0.9899, norm:0.4545, tok/sec: 188263.38, flops:164.89, batch-reuse:1
@ 1804 train 4.2009 , allloss: 4.2009, dt: 706.16ms, fracRes: 0.2619, norm(attn): 0.4023, norm(output): 0.8359, norm(x): 0.9642, norm(y): 0.9898, norm:0.5046, tok/sec: 185612.50, flops:162.57, batch-reuse:1
@ 1805 train 4.1728 , allloss: 4.1728, dt: 708.67ms, fracRes: 0.2699, norm(attn): 0.4004, norm(output): 0.8438, norm(x): 0.9652, norm(y): 0.9896, norm:0.4887, tok/sec: 184955.44, flops:161.99, batch-reuse:1
@ 1806 train 4.2199 , allloss: 4.2199, dt: 696.27ms, fracRes: 0.2616, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9559, norm(y): 0.9900, norm:0.4772, tok/sec: 188249.52, flops:164.88, batch-reuse:1
@ 1807 train 4.2359 , allloss: 4.2359, dt: 711.29ms, fracRes: 0.2620, norm(attn): 0.4023, norm(output): 0.8320, norm(x): 0.9557, norm(y): 0.9899, norm:0.4618, tok/sec: 184273.67, flops:161.40, batch-reuse:1
@ 1808 train 4.0610 , allloss: 4.0610, dt: 703.53ms, fracRes: 0.2607, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9556, norm(y): 0.9899, norm:0.5482, tok/sec: 186305.23, flops:163.18, batch-reuse:1
@ 1809 train 4.0999 , allloss: 4.0999, dt: 702.75ms, fracRes: 0.2660, norm(attn): 0.4004, norm(output): 0.8242, norm(x): 0.9529, norm(y): 0.9898, norm:0.4481, tok/sec: 186512.30, flops:163.36, batch-reuse:1
@ 1810 train 3.9926 , allloss: 3.9926, dt: 699.80ms, fracRes: 0.2705, norm(attn): 0.3984, norm(output): 0.8281, norm(x): 0.9580, norm(y): 0.9897, norm:0.4911, tok/sec: 187299.67, flops:164.05, batch-reuse:1
@ 1811 train 4.0540 , allloss: 4.0540, dt: 703.72ms, fracRes: 0.2648, norm(attn): 0.3984, norm(output): 0.8242, norm(x): 0.9536, norm(y): 0.9899, norm:0.4098, tok/sec: 186256.38, flops:163.13, batch-reuse:1
@ 1812 train 4.1263 , allloss: 4.1263, dt: 706.25ms, fracRes: 0.2653, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9586, norm(y): 0.9900, norm:0.4142, tok/sec: 185588.31, flops:162.55, batch-reuse:1
@ 1813 train 4.0267 , allloss: 4.0267, dt: 697.55ms, fracRes: 0.2693, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9603, norm(y): 0.9899, norm:0.4019, tok/sec: 187902.08, flops:164.58, batch-reuse:1
@ 1814 train 4.1633 , allloss: 4.1633, dt: 701.57ms, fracRes: 0.2683, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9591, norm(y): 0.9899, norm:0.3928, tok/sec: 186825.66, flops:163.63, batch-reuse:1
@ 1815 train 4.0873 , allloss: 4.0873, dt: 704.97ms, fracRes: 0.2661, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9573, norm(y): 0.9898, norm:0.4109, tok/sec: 185925.80, flops:162.84, batch-reuse:1
@ 1816 train 4.0602 , allloss: 4.0602, dt: 699.47ms, fracRes: 0.2680, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9614, norm(y): 0.9898, norm:0.4225, tok/sec: 187387.97, flops:164.12, batch-reuse:1
@ 1817 train 4.0557 , allloss: 4.0557, dt: 701.33ms, fracRes: 0.2694, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9667, norm(y): 0.9897, norm:0.4465, tok/sec: 186891.53, flops:163.69, batch-reuse:1
@ 1818 train 4.0456 , allloss: 4.0456, dt: 700.59ms, fracRes: 0.2691, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9651, norm(y): 0.9897, norm:0.4127, tok/sec: 187086.84, flops:163.86, batch-reuse:1
@ 1819 train 4.2014 , allloss: 4.2014, dt: 700.83ms, fracRes: 0.2692, norm(attn): 0.3984, norm(output): 0.8320, norm(x): 0.9629, norm(y): 0.9897, norm:0.3837, tok/sec: 187024.22, flops:163.81, batch-reuse:1
@ 1820 train 4.1077 , allloss: 4.1077, dt: 699.79ms, fracRes: 0.2662, norm(attn): 0.4004, norm(output): 0.8320, norm(x): 0.9587, norm(y): 0.9898, norm:0.3876, tok/sec: 187302.35, flops:164.05, batch-reuse:1
@ 1821 train 3.9851 , allloss: 3.9851, dt: 696.95ms, fracRes: 0.2686, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9599, norm(y): 0.9898, norm:0.3850, tok/sec: 188063.80, flops:164.72, batch-reuse:1
@ 1822 train 3.9537 , allloss: 3.9537, dt: 686.21ms, fracRes: 0.2671, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9595, norm(y): 0.9898, norm:0.3996, tok/sec: 191007.28, flops:167.29, batch-reuse:1
@ 1823 train 4.0040 , allloss: 4.0040, dt: 700.43ms, fracRes: 0.2702, norm(attn): 0.4062, norm(output): 0.8398, norm(x): 0.9635, norm(y): 0.9897, norm:0.3779, tok/sec: 187130.02, flops:163.90, batch-reuse:1
@ 1824 train 4.0481 , allloss: 4.0481, dt: 692.62ms, fracRes: 0.2726, norm(attn): 0.4043, norm(output): 0.8281, norm(x): 0.9669, norm(y): 0.9898, norm:0.4038, tok/sec: 189241.43, flops:165.75, batch-reuse:1
@ 1825 train 4.0982 , allloss: 4.0982, dt: 695.73ms, fracRes: 0.2763, norm(attn): 0.4062, norm(output): 0.8359, norm(x): 0.9697, norm(y): 0.9897, norm:0.4355, tok/sec: 188394.54, flops:165.01, batch-reuse:1
@ 1826 train 4.0660 , allloss: 4.0660, dt: 690.79ms, fracRes: 0.2739, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9671, norm(y): 0.9898, norm:0.4252, tok/sec: 189743.18, flops:166.19, batch-reuse:1
@ 1827 train 4.1232 , allloss: 4.1232, dt: 688.74ms, fracRes: 0.2741, norm(attn): 0.4062, norm(output): 0.8477, norm(x): 0.9754, norm(y): 0.9898, norm:0.4975, tok/sec: 190305.62, flops:166.68, batch-reuse:1
@ 1828 train 4.0795 , allloss: 4.0795, dt: 679.08ms, fracRes: 0.2628, norm(attn): 0.4062, norm(output): 0.8359, norm(x): 0.9621, norm(y): 0.9899, norm:0.3779, tok/sec: 193015.36, flops:169.05, batch-reuse:1
@ 1829 train 4.1245 , allloss: 4.1245, dt: 678.73ms, fracRes: 0.2679, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9637, norm(y): 0.9899, norm:0.4811, tok/sec: 193112.45, flops:169.14, batch-reuse:1
@ 1830 train 4.0322 , allloss: 4.0322, dt: 689.98ms, fracRes: 0.2680, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9629, norm(y): 0.9899, norm:0.3966, tok/sec: 189964.46, flops:166.38, batch-reuse:1
@ 1831 train 4.0477 , allloss: 4.0477, dt: 703.60ms, fracRes: 0.2693, norm(attn): 0.4062, norm(output): 0.8320, norm(x): 0.9664, norm(y): 0.9899, norm:0.4353, tok/sec: 186288.88, flops:163.16, batch-reuse:1
@ 1832 train 4.0646 , allloss: 4.0646, dt: 691.50ms, fracRes: 0.2718, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9708, norm(y): 0.9900, norm:0.3896, tok/sec: 189547.18, flops:166.02, batch-reuse:1
@ 1833 train 4.2330 , allloss: 4.2330, dt: 705.26ms, fracRes: 0.2641, norm(attn): 0.4082, norm(output): 0.8398, norm(x): 0.9642, norm(y): 0.9902, norm:0.4632, tok/sec: 185848.36, flops:162.78, batch-reuse:1
@ 1834 train 4.0758 , allloss: 4.0758, dt: 716.80ms, fracRes: 0.2632, norm(attn): 0.4102, norm(output): 0.8477, norm(x): 0.9663, norm(y): 0.9901, norm:0.5157, tok/sec: 182857.15, flops:160.16, batch-reuse:1
@ 1835 train 3.9913 , allloss: 3.9913, dt: 700.09ms, fracRes: 0.2673, norm(attn): 0.4062, norm(output): 0.8281, norm(x): 0.9592, norm(y): 0.9899, norm:0.4353, tok/sec: 187220.58, flops:163.98, batch-reuse:1
@ 1836 train 4.0904 , allloss: 4.0904, dt: 702.21ms, fracRes: 0.2729, norm(attn): 0.4043, norm(output): 0.8438, norm(x): 0.9697, norm(y): 0.9897, norm:0.4188, tok/sec: 186657.50, flops:163.49, batch-reuse:1
@ 1837 train 4.1682 , allloss: 4.1682, dt: 710.85ms, fracRes: 0.2680, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9643, norm(y): 0.9898, norm:0.4314, tok/sec: 184387.70, flops:161.50, batch-reuse:1
@ 1838 train 4.1076 , allloss: 4.1076, dt: 713.52ms, fracRes: 0.2731, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9718, norm(y): 0.9898, norm:0.3858, tok/sec: 183698.63, flops:160.89, batch-reuse:1
@ 1839 train 4.0333 , allloss: 4.0333, dt: 718.09ms, fracRes: 0.2669, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9670, norm(y): 0.9899, norm:0.4030, tok/sec: 182529.06, flops:159.87, batch-reuse:1
@ 1840 train 4.0384 , allloss: 4.0384, dt: 688.99ms, fracRes: 0.2698, norm(attn): 0.4043, norm(output): 0.8359, norm(x): 0.9664, norm(y): 0.9897, norm:0.4335, tok/sec: 190237.92, flops:166.62, batch-reuse:1
@ 1841 train 4.1519 , allloss: 4.1519, dt: 693.93ms, fracRes: 0.2721, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9601, norm(y): 0.9897, norm:0.3668, tok/sec: 188884.80, flops:165.44, batch-reuse:1
@ 1842 train 4.0604 , allloss: 4.0604, dt: 696.59ms, fracRes: 0.2761, norm(attn): 0.4004, norm(output): 0.8281, norm(x): 0.9616, norm(y): 0.9897, norm:0.3872, tok/sec: 188162.22, flops:164.80, batch-reuse:1
@ 1843 train 4.0488 , allloss: 4.0488, dt: 698.87ms, fracRes: 0.2719, norm(attn): 0.4023, norm(output): 0.8398, norm(x): 0.9656, norm(y): 0.9898, norm:0.3653, tok/sec: 187548.10, flops:164.27, batch-reuse:1
@ 1844 train 4.0772 , allloss: 4.0772, dt: 698.38ms, fracRes: 0.2670, norm(attn): 0.4062, norm(output): 0.8438, norm(x): 0.9678, norm(y): 0.9899, norm:0.3840, tok/sec: 187680.89, flops:164.38, batch-reuse:1
@ 1845 train 4.0410 , allloss: 4.0410, dt: 697.05ms, fracRes: 0.2674, norm(attn): 0.4043, norm(output): 0.8516, norm(x): 0.9664, norm(y): 0.9900, norm:0.3831, tok/sec: 188037.88, flops:164.69, batch-reuse:1
@ 1846 train 4.0678 , allloss: 4.0678, dt: 693.86ms, fracRes: 0.2669, norm(attn): 0.4043, norm(output): 0.8594, norm(x): 0.9708, norm(y): 0.9900, norm:0.3953, tok/sec: 188902.97, flops:165.45, batch-reuse:1
@ 1847 train 4.0171 , allloss: 4.0171, dt: 699.25ms, fracRes: 0.2667, norm(attn): 0.4062, norm(output): 0.8477, norm(x): 0.9708, norm(y): 0.9899, norm:0.4042, tok/sec: 187447.39, flops:164.18, batch-reuse:1
@ 1848 train 3.8737 , allloss: 3.8737, dt: 691.18ms, fracRes: 0.2750, norm(attn): 0.4043, norm(output): 0.8516, norm(x): 0.9697, norm(y): 0.9898, norm:0.4045, tok/sec: 189635.58, flops:166.09, batch-reuse:1
@ 1849 train 4.1076 , allloss: 4.1076, dt: 690.72ms, fracRes: 0.2726, norm(attn): 0.4043, norm(output): 0.8398, norm(x): 0.9673, norm(y): 0.9898, norm:0.3639, tok/sec: 189761.52, flops:166.20, batch-reuse:1
@ 1850 train 3.9694 , allloss: 3.9694, dt: 699.93ms, fracRes: 0.2694, norm(attn): 0.4023, norm(output): 0.8242, norm(x): 0.9589, norm(y): 0.9897, norm:0.3954, tok/sec: 187263.94, flops:164.02, batch-reuse:1
@ 1851 train 3.9191 , allloss: 3.9191, dt: 706.80ms, fracRes: 0.2763, norm(attn): 0.4023, norm(output): 0.8281, norm(x): 0.9637, norm(y): 0.9896, norm:0.4129, tok/sec: 185444.26, flops:162.42, batch-reuse:1
@ 1852 train 4.0316 , allloss: 4.0316, dt: 710.88ms, fracRes: 0.2759, norm(attn): 0.4023, norm(output): 0.8359, norm(x): 0.9678, norm(y): 0.9896, norm:0.3927, tok/sec: 184381.03, flops:161.49, batch-reuse:1
@ 1853 train 4.0300 , allloss: 4.0300, dt: 700.57ms, fracRes: 0.2749, norm(attn): 0.4043, norm(output): 0.8320, norm(x): 0.9662, norm(y): 0.9896, norm:0.3845, tok/sec: 187093.08, flops:163.87, batch-reuse:1
@ 1854 train 4.0867 , allloss: 4.0867, dt: 711.39ms, fracRes: 0.2800, norm(attn): 0.4062, norm(output): 0.8359, norm(x): 0.9707, norm(y): 0.9896, norm:0.4509, tok/sec: 184247.98, flops:161.37, batch-reuse:1
@ 1855 train 4.1546 , allloss: 4.1546, dt: 708.80ms, fracRes: 0.2847, norm(attn): 0.4062, norm(output): 0.8398, norm(x): 0.9802, norm(y): 0.9896, norm:0.4656, tok/sec: 184921.91, flops:161.96, batch-reuse:1
@ 1856 train 4.1549 , allloss: 4.1549, dt: 703.24ms, fracRes: 0.2678, norm(attn): 0.4062, norm(output): 0.8359, norm(x): 0.9651, norm(y): 0.9898, norm:0.4087, tok/sec: 186383.55, flops:163.25, batch-reuse:1
@ 1857 train 4.0846 , allloss: 4.0846, dt: 696.68ms, fracRes: 0.2718, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9745, norm(y): 0.9899, norm:0.4540, tok/sec: 188138.91, flops:164.78, batch-reuse:1
@ 1858 train 4.3407 , allloss: 4.3407, dt: 691.20ms, fracRes: 0.2640, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9659, norm(y): 0.9901, norm:0.5146, tok/sec: 189628.91, flops:166.09, batch-reuse:1
@ 1859 train 4.2197 , allloss: 4.2197, dt: 695.55ms, fracRes: 0.2736, norm(attn): 0.4082, norm(output): 0.8555, norm(x): 0.9775, norm(y): 0.9899, norm:0.4942, tok/sec: 188444.66, flops:165.05, batch-reuse:1
@ 1860 train 4.2108 , allloss: 4.2108, dt: 693.55ms, fracRes: 0.2778, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9832, norm(y): 0.9899, norm:0.4857, tok/sec: 188987.78, flops:165.53, batch-reuse:1
@ 1861 train 4.1379 , allloss: 4.1379, dt: 691.40ms, fracRes: 0.2796, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9784, norm(y): 0.9899, norm:0.4774, tok/sec: 189573.85, flops:166.04, batch-reuse:1
@ 1862 train 4.2101 , allloss: 4.2101, dt: 701.24ms, fracRes: 0.2747, norm(attn): 0.4062, norm(output): 0.8398, norm(x): 0.9703, norm(y): 0.9898, norm:0.4644, tok/sec: 186914.34, flops:163.71, batch-reuse:1
@ 1863 train 4.2422 , allloss: 4.2422, dt: 685.86ms, fracRes: 0.2720, norm(attn): 0.4043, norm(output): 0.8438, norm(x): 0.9749, norm(y): 0.9897, norm:0.4638, tok/sec: 191106.35, flops:167.38, batch-reuse:1
@ 1864 train 4.1827 , allloss: 4.1827, dt: 702.23ms, fracRes: 0.2680, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9711, norm(y): 0.9898, norm:0.4102, tok/sec: 186652.31, flops:163.48, batch-reuse:1
@ 1865 train 4.2041 , allloss: 4.2041, dt: 704.14ms, fracRes: 0.2715, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9727, norm(y): 0.9899, norm:0.4234, tok/sec: 186144.12, flops:163.04, batch-reuse:1
@ 1866 train 4.5099 , allloss: 4.5099, dt: 698.57ms, fracRes: 0.2816, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9843, norm(y): 0.9897, norm:0.5859, tok/sec: 187630.10, flops:164.34, batch-reuse:1
@ 1867 train 4.2419 , allloss: 4.2419, dt: 690.32ms, fracRes: 0.2846, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9808, norm(y): 0.9897, norm:0.5014, tok/sec: 189870.05, flops:166.30, batch-reuse:1
@ 1868 train 4.2904 , allloss: 4.2904, dt: 693.51ms, fracRes: 0.2741, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9783, norm(y): 0.9898, norm:0.5008, tok/sec: 188999.28, flops:165.54, batch-reuse:1
@ 1869 train 4.1990 , allloss: 4.1990, dt: 706.70ms, fracRes: 0.2693, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9760, norm(y): 0.9900, norm:0.4621, tok/sec: 185471.41, flops:162.45, batch-reuse:1
@ 1870 train 4.1291 , allloss: 4.1291, dt: 693.15ms, fracRes: 0.2760, norm(attn): 0.4062, norm(output): 0.8477, norm(x): 0.9784, norm(y): 0.9897, norm:0.4200, tok/sec: 189097.31, flops:165.62, batch-reuse:1
@ 1871 train 4.1754 , allloss: 4.1754, dt: 699.03ms, fracRes: 0.2766, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9747, norm(y): 0.9897, norm:0.4407, tok/sec: 187505.76, flops:164.23, batch-reuse:1
@ 1872 train 4.2496 , allloss: 4.2496, dt: 701.32ms, fracRes: 0.2815, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9853, norm(y): 0.9897, norm:0.4536, tok/sec: 186892.03, flops:163.69, batch-reuse:1
@ 1873 train 4.2719 , allloss: 4.2719, dt: 698.44ms, fracRes: 0.2781, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9867, norm(y): 0.9899, norm:0.4155, tok/sec: 187663.34, flops:164.37, batch-reuse:1
@ 1874 train 4.1178 , allloss: 4.1178, dt: 695.73ms, fracRes: 0.2763, norm(attn): 0.4082, norm(output): 0.8555, norm(x): 0.9806, norm(y): 0.9899, norm:0.3944, tok/sec: 188396.16, flops:165.01, batch-reuse:1
@ 1875 train 4.2148 , allloss: 4.2148, dt: 698.29ms, fracRes: 0.2704, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9734, norm(y): 0.9900, norm:0.4315, tok/sec: 187705.18, flops:164.40, batch-reuse:1
@ 1876 train 4.2727 , allloss: 4.2727, dt: 700.98ms, fracRes: 0.2750, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9803, norm(y): 0.9898, norm:0.3953, tok/sec: 186984.71, flops:163.77, batch-reuse:1
@ 1877 train 4.2238 , allloss: 4.2238, dt: 693.26ms, fracRes: 0.2798, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9839, norm(y): 0.9898, norm:0.4061, tok/sec: 189064.93, flops:165.59, batch-reuse:1
@ 1878 train 4.2114 , allloss: 4.2114, dt: 703.16ms, fracRes: 0.2791, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9833, norm(y): 0.9898, norm:0.4278, tok/sec: 186403.84, flops:163.26, batch-reuse:1
@ 1879 train 4.2480 , allloss: 4.2480, dt: 703.79ms, fracRes: 0.2838, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9889, norm(y): 0.9896, norm:0.4371, tok/sec: 186236.25, flops:163.12, batch-reuse:1
@ 1880 train 4.1634 , allloss: 4.1634, dt: 689.56ms, fracRes: 0.2779, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9897, norm(y): 0.9898, norm:0.4271, tok/sec: 190081.77, flops:166.48, batch-reuse:1
@ 1881 train 4.1470 , allloss: 4.1470, dt: 686.65ms, fracRes: 0.2773, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9879, norm(y): 0.9899, norm:0.3941, tok/sec: 190886.11, flops:167.19, batch-reuse:1
@ 1882 train 4.2816 , allloss: 4.2816, dt: 688.77ms, fracRes: 0.2771, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9858, norm(y): 0.9898, norm:0.4183, tok/sec: 190298.76, flops:166.67, batch-reuse:1
@ 1883 train 4.1525 , allloss: 4.1525, dt: 698.75ms, fracRes: 0.2760, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9795, norm(y): 0.9897, norm:0.4754, tok/sec: 187582.02, flops:164.29, batch-reuse:1
@ 1884 train 4.0883 , allloss: 4.0883, dt: 709.54ms, fracRes: 0.2789, norm(attn): 0.4082, norm(output): 0.8516, norm(x): 0.9797, norm(y): 0.9897, norm:0.4224, tok/sec: 184727.04, flops:161.79, batch-reuse:1
@ 1885 train 4.2074 , allloss: 4.2074, dt: 705.62ms, fracRes: 0.2786, norm(attn): 0.4062, norm(output): 0.8398, norm(x): 0.9782, norm(y): 0.9898, norm:0.3731, tok/sec: 185754.80, flops:162.69, batch-reuse:1
@ 1886 train 4.1114 , allloss: 4.1114, dt: 704.29ms, fracRes: 0.2772, norm(attn): 0.4102, norm(output): 0.8594, norm(x): 0.9816, norm(y): 0.9899, norm:0.4233, tok/sec: 186105.05, flops:163.00, batch-reuse:1
@ 1887 train 4.0904 , allloss: 4.0904, dt: 683.61ms, fracRes: 0.2693, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9775, norm(y): 0.9899, norm:0.3866, tok/sec: 191733.86, flops:167.93, batch-reuse:1
@ 1888 train 4.2548 , allloss: 4.2548, dt: 700.84ms, fracRes: 0.2739, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9871, norm(y): 0.9898, norm:0.4373, tok/sec: 187020.08, flops:163.80, batch-reuse:1
@ 1889 train 4.1138 , allloss: 4.1138, dt: 705.52ms, fracRes: 0.2722, norm(attn): 0.4102, norm(output): 0.8672, norm(x): 0.9837, norm(y): 0.9899, norm:0.4563, tok/sec: 185781.35, flops:162.72, batch-reuse:1
@ 1890 train 4.2767 , allloss: 4.2767, dt: 710.05ms, fracRes: 0.2791, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9862, norm(y): 0.9898, norm:0.4536, tok/sec: 184594.93, flops:161.68, batch-reuse:1
@ 1891 train 4.2183 , allloss: 4.2183, dt: 693.11ms, fracRes: 0.2851, norm(attn): 0.4043, norm(output): 0.8633, norm(x): 0.9896, norm(y): 0.9896, norm:0.4028, tok/sec: 189106.81, flops:165.63, batch-reuse:1
@ 1892 train 4.1309 , allloss: 4.1309, dt: 702.80ms, fracRes: 0.2860, norm(attn): 0.4023, norm(output): 0.8477, norm(x): 0.9851, norm(y): 0.9896, norm:0.4410, tok/sec: 186500.21, flops:163.35, batch-reuse:1
@ 1893 train 4.2441 , allloss: 4.2441, dt: 705.51ms, fracRes: 0.2800, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9789, norm(y): 0.9896, norm:0.4463, tok/sec: 185784.11, flops:162.72, batch-reuse:1
@ 1894 train 4.0578 , allloss: 4.0578, dt: 707.22ms, fracRes: 0.2823, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9813, norm(y): 0.9895, norm:0.3961, tok/sec: 185332.98, flops:162.32, batch-reuse:1
@ 1895 train 4.2410 , allloss: 4.2410, dt: 702.40ms, fracRes: 0.2802, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9806, norm(y): 0.9897, norm:0.4803, tok/sec: 186604.79, flops:163.44, batch-reuse:1
@ 1896 train 4.3386 , allloss: 4.3386, dt: 703.56ms, fracRes: 0.2777, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9820, norm(y): 0.9898, norm:0.4265, tok/sec: 186297.91, flops:163.17, batch-reuse:1
@ 1897 train 4.2487 , allloss: 4.2487, dt: 705.98ms, fracRes: 0.2835, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9819, norm(y): 0.9896, norm:0.4625, tok/sec: 185658.44, flops:162.61, batch-reuse:1
@ 1898 train 4.2306 , allloss: 4.2306, dt: 703.21ms, fracRes: 0.2834, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9833, norm(y): 0.9896, norm:0.4387, tok/sec: 186390.32, flops:163.25, batch-reuse:1
@ 1899 train 4.1920 , allloss: 4.1920, dt: 699.55ms, fracRes: 0.2791, norm(attn): 0.4043, norm(output): 0.8594, norm(x): 0.9808, norm(y): 0.9897, norm:0.5389, tok/sec: 187365.29, flops:164.10, batch-reuse:1
@ 1900 train 4.1871 , allloss: 4.1871, dt: 703.36ms, fracRes: 0.2814, norm(attn): 0.4043, norm(output): 0.8477, norm(x): 0.9812, norm(y): 0.9896, norm:0.4143, tok/sec: 186351.65, flops:163.22, batch-reuse:1
@ 1901 train 4.2312 , allloss: 4.2312, dt: 703.76ms, fracRes: 0.2813, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9800, norm(y): 0.9895, norm:0.4270, tok/sec: 186245.34, flops:163.12, batch-reuse:1
@ 1902 train 4.1830 , allloss: 4.1830, dt: 689.82ms, fracRes: 0.2785, norm(attn): 0.4082, norm(output): 0.8398, norm(x): 0.9754, norm(y): 0.9896, norm:0.4401, tok/sec: 190009.83, flops:166.42, batch-reuse:1
@ 1903 train 4.2080 , allloss: 4.2080, dt: 683.61ms, fracRes: 0.2787, norm(attn): 0.4121, norm(output): 0.8516, norm(x): 0.9787, norm(y): 0.9896, norm:0.4292, tok/sec: 191734.80, flops:167.93, batch-reuse:1
@ 1904 train 4.1729 , allloss: 4.1729, dt: 679.65ms, fracRes: 0.2824, norm(attn): 0.4102, norm(output): 0.8516, norm(x): 0.9834, norm(y): 0.9896, norm:0.4042, tok/sec: 192852.25, flops:168.91, batch-reuse:1
@ 1905 train 4.1420 , allloss: 4.1420, dt: 694.72ms, fracRes: 0.2790, norm(attn): 0.4082, norm(output): 0.8516, norm(x): 0.9749, norm(y): 0.9897, norm:0.4344, tok/sec: 188668.35, flops:165.25, batch-reuse:1
@ 1906 train 4.1692 , allloss: 4.1692, dt: 716.64ms, fracRes: 0.2824, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9834, norm(y): 0.9897, norm:0.3870, tok/sec: 182897.67, flops:160.19, batch-reuse:1
@ 1907 train 4.2071 , allloss: 4.2071, dt: 717.17ms, fracRes: 0.2772, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9812, norm(y): 0.9898, norm:0.3769, tok/sec: 182762.07, flops:160.07, batch-reuse:1
@ 1908 train 4.1975 , allloss: 4.1975, dt: 698.95ms, fracRes: 0.2755, norm(attn): 0.4121, norm(output): 0.8594, norm(x): 0.9824, norm(y): 0.9898, norm:0.4006, tok/sec: 187527.95, flops:164.25, batch-reuse:1
@ 1909 train 4.4116 , allloss: 4.4116, dt: 681.60ms, fracRes: 0.2766, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9819, norm(y): 0.9899, norm:0.4191, tok/sec: 192300.78, flops:168.43, batch-reuse:1
@ 1910 train 4.2552 , allloss: 4.2552, dt: 706.44ms, fracRes: 0.2793, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9815, norm(y): 0.9897, norm:0.4218, tok/sec: 185539.58, flops:162.51, batch-reuse:1
@ 1911 train 4.2650 , allloss: 4.2650, dt: 694.24ms, fracRes: 0.2843, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9881, norm(y): 0.9897, norm:0.4310, tok/sec: 188800.47, flops:165.36, batch-reuse:1
@ 1912 train 4.1867 , allloss: 4.1867, dt: 694.30ms, fracRes: 0.2865, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9913, norm(y): 0.9897, norm:0.4563, tok/sec: 188783.94, flops:165.35, batch-reuse:1
@ 1913 train 4.1976 , allloss: 4.1976, dt: 706.79ms, fracRes: 0.2824, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9808, norm(y): 0.9896, norm:0.3699, tok/sec: 185447.33, flops:162.43, batch-reuse:1
@ 1914 train 4.1426 , allloss: 4.1426, dt: 709.10ms, fracRes: 0.2794, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9853, norm(y): 0.9897, norm:0.5206, tok/sec: 184843.63, flops:161.90, batch-reuse:1
@ 1915 train 4.1655 , allloss: 4.1655, dt: 707.67ms, fracRes: 0.2839, norm(attn): 0.4082, norm(output): 0.8555, norm(x): 0.9832, norm(y): 0.9896, norm:0.4583, tok/sec: 185216.65, flops:162.22, batch-reuse:1
@ 1916 train 4.2986 , allloss: 4.2986, dt: 705.14ms, fracRes: 0.2885, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 0.9950, norm(y): 0.9895, norm:0.4845, tok/sec: 185880.47, flops:162.80, batch-reuse:1
@ 1917 train 4.2133 , allloss: 4.2133, dt: 698.16ms, fracRes: 0.2908, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9958, norm(y): 0.9895, norm:0.5254, tok/sec: 187739.67, flops:164.43, batch-reuse:1
@ 1918 train 4.2883 , allloss: 4.2883, dt: 699.32ms, fracRes: 0.2724, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9856, norm(y): 0.9898, norm:0.4126, tok/sec: 187426.87, flops:164.16, batch-reuse:1
@ 1919 train 4.1104 , allloss: 4.1104, dt: 700.55ms, fracRes: 0.2719, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9839, norm(y): 0.9898, norm:0.5017, tok/sec: 187099.96, flops:163.87, batch-reuse:1
@ 1920 train 4.2146 , allloss: 4.2146, dt: 692.60ms, fracRes: 0.2713, norm(attn): 0.4082, norm(output): 0.8555, norm(x): 0.9797, norm(y): 0.9898, norm:0.4188, tok/sec: 189246.18, flops:165.75, batch-reuse:1
@ 1921 train 4.1982 , allloss: 4.1982, dt: 691.74ms, fracRes: 0.2774, norm(attn): 0.4043, norm(output): 0.8633, norm(x): 0.9859, norm(y): 0.9897, norm:0.3999, tok/sec: 189482.31, flops:165.96, batch-reuse:1
@ 1922 train 4.1168 , allloss: 4.1168, dt: 710.14ms, fracRes: 0.2775, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9787, norm(y): 0.9897, norm:0.4001, tok/sec: 184571.69, flops:161.66, batch-reuse:1
@ 1923 train 4.1728 , allloss: 4.1728, dt: 696.41ms, fracRes: 0.2833, norm(attn): 0.4043, norm(output): 0.8516, norm(x): 0.9822, norm(y): 0.9895, norm:0.3988, tok/sec: 188211.24, flops:164.85, batch-reuse:1
@ 1924 train 4.1887 , allloss: 4.1887, dt: 691.16ms, fracRes: 0.2856, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9862, norm(y): 0.9895, norm:0.3848, tok/sec: 189641.01, flops:166.10, batch-reuse:1
@ 1925 train 4.1766 , allloss: 4.1766, dt: 692.64ms, fracRes: 0.2855, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9883, norm(y): 0.9896, norm:0.4109, tok/sec: 189236.28, flops:165.74, batch-reuse:1
@ 1926 train 4.2352 , allloss: 4.2352, dt: 696.96ms, fracRes: 0.2858, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9865, norm(y): 0.9896, norm:0.3960, tok/sec: 188061.55, flops:164.71, batch-reuse:1
@ 1927 train 4.1764 , allloss: 4.1764, dt: 698.16ms, fracRes: 0.2814, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9856, norm(y): 0.9896, norm:0.4408, tok/sec: 187740.31, flops:164.43, batch-reuse:1
@ 1928 train 4.2047 , allloss: 4.2047, dt: 682.92ms, fracRes: 0.2845, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9817, norm(y): 0.9896, norm:0.4320, tok/sec: 191927.91, flops:168.10, batch-reuse:1
@ 1929 train 4.1992 , allloss: 4.1992, dt: 698.50ms, fracRes: 0.2840, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9813, norm(y): 0.9896, norm:0.4193, tok/sec: 187647.77, flops:164.35, batch-reuse:1
@ 1930 train 4.1200 , allloss: 4.1200, dt: 695.17ms, fracRes: 0.2833, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9890, norm(y): 0.9897, norm:0.4061, tok/sec: 188546.32, flops:165.14, batch-reuse:1
@ 1931 train 4.2496 , allloss: 4.2496, dt: 696.30ms, fracRes: 0.2836, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9905, norm(y): 0.9898, norm:0.4280, tok/sec: 188240.31, flops:164.87, batch-reuse:1
@ 1932 train 4.3032 , allloss: 4.3032, dt: 698.85ms, fracRes: 0.2817, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9861, norm(y): 0.9898, norm:0.4171, tok/sec: 187554.50, flops:164.27, batch-reuse:1
@ 1933 train 4.2440 , allloss: 4.2440, dt: 699.90ms, fracRes: 0.2854, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9875, norm(y): 0.9898, norm:0.4351, tok/sec: 187271.98, flops:164.02, batch-reuse:1
@ 1934 train 4.2005 , allloss: 4.2005, dt: 695.92ms, fracRes: 0.2902, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 0.9922, norm(y): 0.9896, norm:0.4535, tok/sec: 188342.65, flops:164.96, batch-reuse:1
@ 1935 train 4.1526 , allloss: 4.1526, dt: 698.26ms, fracRes: 0.2800, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9805, norm(y): 0.9899, norm:0.4161, tok/sec: 187711.65, flops:164.41, batch-reuse:1
@ 1936 train 4.1820 , allloss: 4.1820, dt: 698.08ms, fracRes: 0.2847, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9852, norm(y): 0.9898, norm:0.4268, tok/sec: 187761.08, flops:164.45, batch-reuse:1
@ 1937 train 4.1499 , allloss: 4.1499, dt: 686.17ms, fracRes: 0.2805, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9814, norm(y): 0.9897, norm:0.4630, tok/sec: 191020.88, flops:167.31, batch-reuse:1
@ 1938 train 4.1706 , allloss: 4.1706, dt: 690.45ms, fracRes: 0.2851, norm(attn): 0.4102, norm(output): 0.8594, norm(x): 0.9890, norm(y): 0.9897, norm:0.4116, tok/sec: 189836.22, flops:166.27, batch-reuse:1
@ 1939 train 4.1571 , allloss: 4.1571, dt: 683.49ms, fracRes: 0.2846, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9892, norm(y): 0.9898, norm:0.4539, tok/sec: 191768.30, flops:167.96, batch-reuse:1
@ 1940 train 4.2644 , allloss: 4.2644, dt: 685.69ms, fracRes: 0.2837, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.9901, norm(y): 0.9897, norm:0.4505, tok/sec: 191154.65, flops:167.42, batch-reuse:1
@ 1941 train 4.2518 , allloss: 4.2518, dt: 691.20ms, fracRes: 0.2802, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9839, norm(y): 0.9897, norm:0.4274, tok/sec: 189630.74, flops:166.09, batch-reuse:1
@ 1942 train 4.1646 , allloss: 4.1646, dt: 694.39ms, fracRes: 0.2857, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9889, norm(y): 0.9896, norm:0.4102, tok/sec: 188758.92, flops:165.33, batch-reuse:1
@ 1943 train 4.2495 , allloss: 4.2495, dt: 696.23ms, fracRes: 0.2858, norm(attn): 0.4062, norm(output): 0.8516, norm(x): 0.9888, norm(y): 0.9897, norm:0.3727, tok/sec: 188258.29, flops:164.89, batch-reuse:1
@ 1944 train 4.1925 , allloss: 4.1925, dt: 686.25ms, fracRes: 0.2853, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9894, norm(y): 0.9896, norm:0.3807, tok/sec: 190998.52, flops:167.29, batch-reuse:1
@ 1945 train 4.1263 , allloss: 4.1263, dt: 700.91ms, fracRes: 0.2796, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9879, norm(y): 0.9897, norm:0.3661, tok/sec: 187003.35, flops:163.79, batch-reuse:1
@ 1946 train 4.0904 , allloss: 4.0904, dt: 702.83ms, fracRes: 0.2760, norm(attn): 0.4121, norm(output): 0.8594, norm(x): 0.9848, norm(y): 0.9898, norm:0.3647, tok/sec: 186490.47, flops:163.34, batch-reuse:1
@ 1947 train 4.2876 , allloss: 4.2876, dt: 694.74ms, fracRes: 0.2715, norm(attn): 0.4102, norm(output): 0.8594, norm(x): 0.9826, norm(y): 0.9899, norm:0.3783, tok/sec: 188662.40, flops:165.24, batch-reuse:1
@ 1948 train 4.0603 , allloss: 4.0603, dt: 695.32ms, fracRes: 0.2800, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 0.9919, norm(y): 0.9898, norm:0.3936, tok/sec: 188507.33, flops:165.11, batch-reuse:1
@ 1949 train 4.1976 , allloss: 4.1976, dt: 696.30ms, fracRes: 0.2784, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 0.9883, norm(y): 0.9899, norm:0.3735, tok/sec: 188239.47, flops:164.87, batch-reuse:1
@ 1950 train 4.2476 , allloss: 4.2476, dt: 696.46ms, fracRes: 0.2801, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 0.9906, norm(y): 0.9900, norm:0.4119, tok/sec: 188196.29, flops:164.83, batch-reuse:1
@ 1951 train 4.1242 , allloss: 4.1242, dt: 689.89ms, fracRes: 0.2804, norm(attn): 0.4121, norm(output): 0.8594, norm(x): 0.9849, norm(y): 0.9899, norm:0.4161, tok/sec: 189989.47, flops:166.40, batch-reuse:1
@ 1952 train 4.1505 , allloss: 4.1505, dt: 708.11ms, fracRes: 0.2802, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 0.9861, norm(y): 0.9899, norm:0.4282, tok/sec: 185101.47, flops:162.12, batch-reuse:1
@ 1953 train 4.1388 , allloss: 4.1388, dt: 708.94ms, fracRes: 0.2853, norm(attn): 0.4082, norm(output): 0.8555, norm(x): 0.9895, norm(y): 0.9897, norm:0.4045, tok/sec: 184885.46, flops:161.93, batch-reuse:1
@ 1954 train 4.1302 , allloss: 4.1302, dt: 708.37ms, fracRes: 0.2720, norm(attn): 0.4102, norm(output): 0.8594, norm(x): 0.9775, norm(y): 0.9899, norm:0.3767, tok/sec: 185033.44, flops:162.06, batch-reuse:1
@ 1955 train 4.1167 , allloss: 4.1167, dt: 691.55ms, fracRes: 0.2797, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9881, norm(y): 0.9899, norm:0.4000, tok/sec: 189533.72, flops:166.00, batch-reuse:1
@ 1956 train 4.0362 , allloss: 4.0362, dt: 688.03ms, fracRes: 0.2805, norm(attn): 0.4062, norm(output): 0.8594, norm(x): 0.9848, norm(y): 0.9897, norm:0.4283, tok/sec: 190502.13, flops:166.85, batch-reuse:1
@ 1957 train 4.1106 , allloss: 4.1106, dt: 693.84ms, fracRes: 0.2885, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9939, norm(y): 0.9895, norm:0.4019, tok/sec: 188907.19, flops:165.46, batch-reuse:1
@ 1958 train 4.1339 , allloss: 4.1339, dt: 716.21ms, fracRes: 0.2878, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9892, norm(y): 0.9896, norm:0.3746, tok/sec: 183007.68, flops:160.29, batch-reuse:1
@ 1959 train 4.0675 , allloss: 4.0675, dt: 721.07ms, fracRes: 0.2852, norm(attn): 0.4121, norm(output): 0.8594, norm(x): 0.9850, norm(y): 0.9897, norm:0.3731, tok/sec: 181774.35, flops:159.21, batch-reuse:1
@ 1960 train 4.0208 , allloss: 4.0208, dt: 717.12ms, fracRes: 0.2846, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9852, norm(y): 0.9898, norm:0.4204, tok/sec: 182776.11, flops:160.09, batch-reuse:1
@ 1961 train 4.1525 , allloss: 4.1525, dt: 714.45ms, fracRes: 0.2865, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.9963, norm(y): 0.9897, norm:0.4149, tok/sec: 183457.53, flops:160.68, batch-reuse:1
@ 1962 train 4.0847 , allloss: 4.0847, dt: 711.86ms, fracRes: 0.2807, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9824, norm(y): 0.9897, norm:0.4055, tok/sec: 184126.05, flops:161.27, batch-reuse:1
@ 1963 train 4.1816 , allloss: 4.1816, dt: 695.79ms, fracRes: 0.2872, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.9908, norm(y): 0.9897, norm:0.4116, tok/sec: 188377.50, flops:164.99, batch-reuse:1
@ 1964 train 4.1057 , allloss: 4.1057, dt: 701.10ms, fracRes: 0.2866, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9862, norm(y): 0.9896, norm:0.4442, tok/sec: 186951.39, flops:163.74, batch-reuse:1
@ 1965 train 4.1688 , allloss: 4.1688, dt: 706.57ms, fracRes: 0.2850, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9845, norm(y): 0.9897, norm:0.4178, tok/sec: 185505.90, flops:162.48, batch-reuse:1
@ 1966 train 4.0527 , allloss: 4.0527, dt: 711.48ms, fracRes: 0.2912, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9933, norm(y): 0.9896, norm:0.4321, tok/sec: 184225.26, flops:161.35, batch-reuse:1
@ 1967 train 4.0990 , allloss: 4.0990, dt: 714.91ms, fracRes: 0.2851, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9908, norm(y): 0.9897, norm:0.4210, tok/sec: 183341.47, flops:160.58, batch-reuse:1
@ 1968 train 4.1142 , allloss: 4.1142, dt: 711.04ms, fracRes: 0.2791, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9895, norm(y): 0.9897, norm:0.4635, tok/sec: 184338.43, flops:161.45, batch-reuse:1
@ 1969 train 4.2029 , allloss: 4.2029, dt: 705.46ms, fracRes: 0.2833, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9896, norm(y): 0.9896, norm:0.4179, tok/sec: 185796.80, flops:162.73, batch-reuse:1
@ 1970 train 4.0902 , allloss: 4.0902, dt: 689.74ms, fracRes: 0.2860, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 0.9892, norm(y): 0.9897, norm:0.5133, tok/sec: 190029.93, flops:166.44, batch-reuse:1
@ 1971 train 4.1312 , allloss: 4.1312, dt: 702.77ms, fracRes: 0.2854, norm(attn): 0.4062, norm(output): 0.8555, norm(x): 0.9901, norm(y): 0.9898, norm:0.4314, tok/sec: 186508.82, flops:163.35, batch-reuse:1
@ 1972 train 4.1013 , allloss: 4.1013, dt: 696.66ms, fracRes: 0.2878, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9952, norm(y): 0.9896, norm:0.3868, tok/sec: 188144.25, flops:164.79, batch-reuse:1
@ 1973 train 4.1042 , allloss: 4.1042, dt: 693.26ms, fracRes: 0.2873, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9944, norm(y): 0.9897, norm:0.4198, tok/sec: 189066.94, flops:165.60, batch-reuse:1
@ 1974 train 4.1389 , allloss: 4.1389, dt: 695.07ms, fracRes: 0.2855, norm(attn): 0.4121, norm(output): 0.8711, norm(x): 0.9966, norm(y): 0.9897, norm:0.4023, tok/sec: 188572.71, flops:165.16, batch-reuse:1
@ 1975 train 3.9555 , allloss: 3.9555, dt: 700.24ms, fracRes: 0.2878, norm(attn): 0.4141, norm(output): 0.8633, norm(x): 0.9964, norm(y): 0.9896, norm:0.4187, tok/sec: 187180.61, flops:163.94, batch-reuse:1
@ 1976 train 4.1543 , allloss: 4.1543, dt: 686.10ms, fracRes: 0.2932, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 1.0046, norm(y): 0.9895, norm:0.4188, tok/sec: 191037.94, flops:167.32, batch-reuse:1
@ 1977 train 4.0220 , allloss: 4.0220, dt: 696.57ms, fracRes: 0.2822, norm(attn): 0.4102, norm(output): 0.8594, norm(x): 0.9907, norm(y): 0.9897, norm:0.4171, tok/sec: 188167.89, flops:164.81, batch-reuse:1
@ 1978 train 4.1493 , allloss: 4.1493, dt: 702.62ms, fracRes: 0.2895, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 1.0033, norm(y): 0.9897, norm:0.4094, tok/sec: 186547.61, flops:163.39, batch-reuse:1
@ 1979 train 4.1412 , allloss: 4.1412, dt: 690.09ms, fracRes: 0.2873, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 0.9987, norm(y): 0.9897, norm:0.4432, tok/sec: 189934.14, flops:166.35, batch-reuse:1
@ 1980 train 4.1169 , allloss: 4.1169, dt: 693.61ms, fracRes: 0.2917, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 1.0008, norm(y): 0.9898, norm:0.3871, tok/sec: 188970.11, flops:165.51, batch-reuse:1
@ 1981 train 4.1156 , allloss: 4.1156, dt: 685.29ms, fracRes: 0.2914, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 1.0013, norm(y): 0.9898, norm:0.4440, tok/sec: 191265.12, flops:167.52, batch-reuse:1
@ 1982 train 4.0930 , allloss: 4.0930, dt: 703.49ms, fracRes: 0.2832, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 0.9914, norm(y): 0.9898, norm:0.3827, tok/sec: 186317.36, flops:163.19, batch-reuse:1
@ 1983 train 4.1724 , allloss: 4.1724, dt: 685.34ms, fracRes: 0.2795, norm(attn): 0.4121, norm(output): 0.8711, norm(x): 0.9924, norm(y): 0.9898, norm:0.4014, tok/sec: 191250.94, flops:167.51, batch-reuse:1
@ 1984 train 4.1271 , allloss: 4.1271, dt: 701.34ms, fracRes: 0.2813, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9911, norm(y): 0.9898, norm:0.3943, tok/sec: 186889.11, flops:163.69, batch-reuse:1
@ 1985 train 4.1128 , allloss: 4.1128, dt: 701.49ms, fracRes: 0.2886, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9933, norm(y): 0.9896, norm:0.3937, tok/sec: 186848.59, flops:163.65, batch-reuse:1
@ 1986 train 4.1703 , allloss: 4.1703, dt: 702.57ms, fracRes: 0.2927, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 1.0001, norm(y): 0.9896, norm:0.3977, tok/sec: 186560.72, flops:163.40, batch-reuse:1
@ 1987 train 4.1654 , allloss: 4.1654, dt: 689.42ms, fracRes: 0.2879, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.9955, norm(y): 0.9896, norm:0.3929, tok/sec: 190119.89, flops:166.52, batch-reuse:1
@ 1988 train 4.1056 , allloss: 4.1056, dt: 693.31ms, fracRes: 0.2829, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9901, norm(y): 0.9897, norm:0.3535, tok/sec: 189052.12, flops:165.58, batch-reuse:1
@ 1989 train 4.1333 , allloss: 4.1333, dt: 697.91ms, fracRes: 0.2860, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9967, norm(y): 0.9896, norm:0.3819, tok/sec: 187806.62, flops:164.49, batch-reuse:1
@ 1990 train 4.1757 , allloss: 4.1757, dt: 696.00ms, fracRes: 0.2901, norm(attn): 0.4082, norm(output): 0.8750, norm(x): 1.0010, norm(y): 0.9896, norm:0.3798, tok/sec: 188322.84, flops:164.94, batch-reuse:1
@ 1991 train 4.0500 , allloss: 4.0500, dt: 685.50ms, fracRes: 0.2864, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9962, norm(y): 0.9897, norm:0.3614, tok/sec: 191205.91, flops:167.47, batch-reuse:1
@ 1992 train 4.1411 , allloss: 4.1411, dt: 683.10ms, fracRes: 0.2864, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9994, norm(y): 0.9898, norm:0.3833, tok/sec: 191876.87, flops:168.06, batch-reuse:1
@ 1993 train 3.9893 , allloss: 3.9893, dt: 696.48ms, fracRes: 0.2874, norm(attn): 0.4062, norm(output): 0.8711, norm(x): 0.9952, norm(y): 0.9896, norm:0.3788, tok/sec: 188191.72, flops:164.83, batch-reuse:1
@ 1994 train 4.0103 , allloss: 4.0103, dt: 692.76ms, fracRes: 0.2870, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9943, norm(y): 0.9897, norm:0.4422, tok/sec: 189203.65, flops:165.72, batch-reuse:1
@ 1995 train 4.0305 , allloss: 4.0305, dt: 681.18ms, fracRes: 0.2862, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9909, norm(y): 0.9896, norm:0.3779, tok/sec: 192417.83, flops:168.53, batch-reuse:1
@ 1996 train 4.0749 , allloss: 4.0749, dt: 684.64ms, fracRes: 0.2866, norm(attn): 0.4062, norm(output): 0.8633, norm(x): 0.9917, norm(y): 0.9895, norm:0.3749, tok/sec: 191447.82, flops:167.68, batch-reuse:1
@ 1997 train 4.0372 , allloss: 4.0372, dt: 707.03ms, fracRes: 0.2880, norm(attn): 0.4062, norm(output): 0.8711, norm(x): 0.9942, norm(y): 0.9896, norm:0.4182, tok/sec: 185384.29, flops:162.37, batch-reuse:1
@ 1998 train 3.9970 , allloss: 3.9970, dt: 696.84ms, fracRes: 0.2867, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 0.9933, norm(y): 0.9896, norm:0.4430, tok/sec: 188096.04, flops:164.74, batch-reuse:1
@ 1999 train 3.9363 , allloss: 3.9363, dt: 695.81ms, fracRes: 0.2918, norm(attn): 0.4062, norm(output): 0.8711, norm(x): 0.9926, norm(y): 0.9895, norm:0.4204, tok/sec: 188372.08, flops:164.99, batch-reuse:1
@ 2000 val 4.1001
@ 2000 train 4.0089 , allloss: 4.0089, dt: 1177.37ms, fracRes: 0.2893, norm(attn): 0.4043, norm(output): 0.8711, norm(x): 0.9924, norm(y): 0.9895, norm:0.3685, tok/sec: 111325.66, flops:97.51, batch-reuse:1
@ 2001 train 4.0768 , allloss: 4.0768, dt: 704.26ms, fracRes: 0.2887, norm(attn): 0.4062, norm(output): 0.8672, norm(x): 0.9944, norm(y): 0.9895, norm:0.3924, tok/sec: 186112.74, flops:163.01, batch-reuse:1
@ 2002 train 4.0514 , allloss: 4.0514, dt: 693.97ms, fracRes: 0.2877, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 0.9988, norm(y): 0.9897, norm:0.3717, tok/sec: 188873.64, flops:165.43, batch-reuse:1
@ 2003 train 4.0482 , allloss: 4.0482, dt: 701.54ms, fracRes: 0.2857, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 0.9936, norm(y): 0.9897, norm:0.3622, tok/sec: 186833.79, flops:163.64, batch-reuse:1
@ 2004 train 4.0498 , allloss: 4.0498, dt: 699.65ms, fracRes: 0.2826, norm(attn): 0.4141, norm(output): 0.8633, norm(x): 0.9935, norm(y): 0.9897, norm:0.4079, tok/sec: 187340.14, flops:164.08, batch-reuse:1
@ 2005 train 3.9264 , allloss: 3.9264, dt: 688.96ms, fracRes: 0.2895, norm(attn): 0.4121, norm(output): 0.8633, norm(x): 0.9949, norm(y): 0.9895, norm:0.3760, tok/sec: 190246.41, flops:166.63, batch-reuse:1
@ 2006 train 4.0912 , allloss: 4.0912, dt: 701.94ms, fracRes: 0.2969, norm(attn): 0.4102, norm(output): 0.8672, norm(x): 1.0027, norm(y): 0.9894, norm:0.4144, tok/sec: 186726.99, flops:163.55, batch-reuse:1
@ 2007 train 3.9894 , allloss: 3.9894, dt: 704.86ms, fracRes: 0.2903, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 0.9956, norm(y): 0.9896, norm:0.4363, tok/sec: 185953.66, flops:162.87, batch-reuse:1
@ 2008 train 4.0360 , allloss: 4.0360, dt: 696.56ms, fracRes: 0.2898, norm(attn): 0.4121, norm(output): 0.8633, norm(x): 0.9957, norm(y): 0.9898, norm:0.4462, tok/sec: 188171.30, flops:164.81, batch-reuse:1
@ 2009 train 4.0093 , allloss: 4.0093, dt: 707.63ms, fracRes: 0.2868, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9979, norm(y): 0.9898, norm:0.4571, tok/sec: 185227.89, flops:162.23, batch-reuse:1
@ 2010 train 4.1119 , allloss: 4.1119, dt: 705.86ms, fracRes: 0.2817, norm(attn): 0.4102, norm(output): 0.8672, norm(x): 0.9933, norm(y): 0.9898, norm:0.3598, tok/sec: 185691.43, flops:162.64, batch-reuse:1
@ 2011 train 3.9173 , allloss: 3.9173, dt: 703.64ms, fracRes: 0.2947, norm(attn): 0.4141, norm(output): 0.8711, norm(x): 1.0101, norm(y): 0.9896, norm:0.5070, tok/sec: 186276.89, flops:163.15, batch-reuse:1
@ 2012 train 3.9308 , allloss: 3.9308, dt: 704.21ms, fracRes: 0.2895, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 0.9994, norm(y): 0.9896, norm:0.3841, tok/sec: 186126.41, flops:163.02, batch-reuse:1
@ 2013 train 4.0081 , allloss: 4.0081, dt: 689.48ms, fracRes: 0.2884, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 0.9956, norm(y): 0.9897, norm:0.3936, tok/sec: 190102.60, flops:166.50, batch-reuse:1
@ 2014 train 3.9917 , allloss: 3.9917, dt: 696.81ms, fracRes: 0.2976, norm(attn): 0.4121, norm(output): 0.8633, norm(x): 1.0025, norm(y): 0.9897, norm:0.4266, tok/sec: 188102.73, flops:164.75, batch-reuse:1
@ 2015 train 3.9521 , allloss: 3.9521, dt: 694.47ms, fracRes: 0.2998, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 1.0014, norm(y): 0.9895, norm:0.4018, tok/sec: 188736.04, flops:165.31, batch-reuse:1
@ 2016 train 4.0479 , allloss: 4.0479, dt: 695.79ms, fracRes: 0.3012, norm(attn): 0.4082, norm(output): 0.8594, norm(x): 1.0004, norm(y): 0.9893, norm:0.3994, tok/sec: 188378.53, flops:164.99, batch-reuse:1
@ 2017 train 3.9936 , allloss: 3.9936, dt: 686.99ms, fracRes: 0.2909, norm(attn): 0.4102, norm(output): 0.8633, norm(x): 0.9988, norm(y): 0.9895, norm:0.4011, tok/sec: 190791.51, flops:167.11, batch-reuse:1
@ 2018 train 4.0443 , allloss: 4.0443, dt: 688.62ms, fracRes: 0.2913, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9996, norm(y): 0.9896, norm:0.3853, tok/sec: 190341.26, flops:166.71, batch-reuse:1
@ 2019 train 4.0667 , allloss: 4.0667, dt: 683.98ms, fracRes: 0.2952, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 1.0039, norm(y): 0.9896, norm:0.3957, tok/sec: 191632.21, flops:167.84, batch-reuse:1
@ 2020 train 3.9716 , allloss: 3.9716, dt: 693.26ms, fracRes: 0.2908, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9971, norm(y): 0.9896, norm:0.4254, tok/sec: 189065.71, flops:165.59, batch-reuse:1
@ 2021 train 3.9904 , allloss: 3.9904, dt: 694.98ms, fracRes: 0.2872, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9961, norm(y): 0.9896, norm:0.3984, tok/sec: 188598.91, flops:165.19, batch-reuse:1
@ 2022 train 4.0409 , allloss: 4.0409, dt: 711.07ms, fracRes: 0.2881, norm(attn): 0.4082, norm(output): 0.8633, norm(x): 0.9947, norm(y): 0.9897, norm:0.3982, tok/sec: 184331.57, flops:161.45, batch-reuse:1
@ 2023 train 4.0492 , allloss: 4.0492, dt: 703.72ms, fracRes: 0.2979, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 1.0023, norm(y): 0.9897, norm:0.4588, tok/sec: 186254.86, flops:163.13, batch-reuse:1
@ 2024 train 4.0002 , allloss: 4.0002, dt: 698.94ms, fracRes: 0.2875, norm(attn): 0.4141, norm(output): 0.8672, norm(x): 0.9954, norm(y): 0.9898, norm:0.3855, tok/sec: 187528.85, flops:164.25, batch-reuse:1
@ 2025 train 4.0789 , allloss: 4.0789, dt: 700.23ms, fracRes: 0.2896, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9982, norm(y): 0.9897, norm:0.4364, tok/sec: 187185.52, flops:163.95, batch-reuse:1
@ 2026 train 3.9872 , allloss: 3.9872, dt: 708.24ms, fracRes: 0.2918, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9979, norm(y): 0.9896, norm:0.4210, tok/sec: 185066.14, flops:162.09, batch-reuse:1
@ 2027 train 4.0595 , allloss: 4.0595, dt: 717.87ms, fracRes: 0.2921, norm(attn): 0.4062, norm(output): 0.8711, norm(x): 0.9979, norm(y): 0.9896, norm:0.4079, tok/sec: 182584.71, flops:159.92, batch-reuse:1
@ 2028 train 4.3596 , allloss: 4.3596, dt: 707.99ms, fracRes: 0.2967, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 1.0106, norm(y): 0.9897, norm:0.4870, tok/sec: 185132.14, flops:162.15, batch-reuse:1
@ 2029 train 4.0087 , allloss: 4.0087, dt: 698.27ms, fracRes: 0.3028, norm(attn): 0.4160, norm(output): 0.8711, norm(x): 1.0150, norm(y): 0.9896, norm:0.5585, tok/sec: 187710.76, flops:164.41, batch-reuse:1
@ 2030 train 3.8433 , allloss: 3.8433, dt: 697.69ms, fracRes: 0.2845, norm(attn): 0.4102, norm(output): 0.8750, norm(x): 1.0015, norm(y): 0.9898, norm:0.4014, tok/sec: 187864.58, flops:164.54, batch-reuse:1
@ 2031 train 3.9295 , allloss: 3.9295, dt: 691.33ms, fracRes: 0.2905, norm(attn): 0.4082, norm(output): 0.8750, norm(x): 1.0080, norm(y): 0.9897, norm:0.5015, tok/sec: 189592.87, flops:166.06, batch-reuse:1
@ 2032 train 3.9595 , allloss: 3.9595, dt: 697.61ms, fracRes: 0.2872, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0034, norm(y): 0.9898, norm:0.4519, tok/sec: 187888.14, flops:164.56, batch-reuse:1
@ 2033 train 3.8998 , allloss: 3.8998, dt: 695.88ms, fracRes: 0.2967, norm(attn): 0.4141, norm(output): 0.8711, norm(x): 1.0019, norm(y): 0.9896, norm:0.4395, tok/sec: 188353.81, flops:164.97, batch-reuse:1
@ 2034 train 3.9912 , allloss: 3.9912, dt: 698.15ms, fracRes: 0.2897, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 0.9955, norm(y): 0.9897, norm:0.3864, tok/sec: 187741.91, flops:164.43, batch-reuse:1
@ 2035 train 3.9325 , allloss: 3.9325, dt: 698.35ms, fracRes: 0.2850, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 0.9962, norm(y): 0.9897, norm:0.4456, tok/sec: 187688.58, flops:164.39, batch-reuse:1
@ 2036 train 3.9959 , allloss: 3.9959, dt: 697.49ms, fracRes: 0.2923, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 0.9984, norm(y): 0.9897, norm:0.4613, tok/sec: 187918.84, flops:164.59, batch-reuse:1
@ 2037 train 3.9343 , allloss: 3.9343, dt: 699.26ms, fracRes: 0.2941, norm(attn): 0.4121, norm(output): 0.8711, norm(x): 1.0022, norm(y): 0.9896, norm:0.4044, tok/sec: 187445.02, flops:164.17, batch-reuse:1
@ 2038 train 3.9743 , allloss: 3.9743, dt: 682.91ms, fracRes: 0.2937, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 1.0012, norm(y): 0.9895, norm:0.4139, tok/sec: 191930.93, flops:168.10, batch-reuse:1
@ 2039 train 4.0601 , allloss: 4.0601, dt: 692.05ms, fracRes: 0.2939, norm(attn): 0.4082, norm(output): 0.8711, norm(x): 1.0032, norm(y): 0.9895, norm:0.3885, tok/sec: 189396.20, flops:165.88, batch-reuse:1
@ 2040 train 4.1371 , allloss: 4.1371, dt: 682.41ms, fracRes: 0.2926, norm(attn): 0.4082, norm(output): 0.8672, norm(x): 1.0053, norm(y): 0.9897, norm:0.3930, tok/sec: 192073.42, flops:168.23, batch-reuse:1
@ 2041 train 4.0547 , allloss: 4.0547, dt: 694.79ms, fracRes: 0.2934, norm(attn): 0.4219, norm(output): 0.8711, norm(x): 1.0083, norm(y): 0.9897, norm:0.4704, tok/sec: 188650.42, flops:165.23, batch-reuse:1
@ 2042 train 4.1966 , allloss: 4.1966, dt: 686.18ms, fracRes: 0.2887, norm(attn): 0.4277, norm(output): 0.8750, norm(x): 1.0078, norm(y): 0.9899, norm:0.4400, tok/sec: 191015.84, flops:167.30, batch-reuse:1
@ 2043 train 4.2122 , allloss: 4.2122, dt: 685.94ms, fracRes: 0.2911, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0089, norm(y): 0.9899, norm:0.4517, tok/sec: 191083.63, flops:167.36, batch-reuse:1
@ 2044 train 4.2697 , allloss: 4.2697, dt: 690.49ms, fracRes: 0.2911, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0097, norm(y): 0.9897, norm:0.4230, tok/sec: 189824.35, flops:166.26, batch-reuse:1
@ 2045 train 4.1572 , allloss: 4.1572, dt: 697.75ms, fracRes: 0.2956, norm(attn): 0.4121, norm(output): 0.8672, norm(x): 1.0083, norm(y): 0.9898, norm:0.4332, tok/sec: 187850.39, flops:164.53, batch-reuse:1
@ 2046 train 4.2534 , allloss: 4.2534, dt: 694.20ms, fracRes: 0.2980, norm(attn): 0.4121, norm(output): 0.8711, norm(x): 1.0117, norm(y): 0.9898, norm:0.4921, tok/sec: 188811.49, flops:165.37, batch-reuse:1
@ 2047 train 4.1330 , allloss: 4.1330, dt: 688.35ms, fracRes: 0.2933, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0102, norm(y): 0.9899, norm:0.4584, tok/sec: 190415.96, flops:166.78, batch-reuse:1
@ 2048 train 4.1094 , allloss: 4.1094, dt: 697.21ms, fracRes: 0.2938, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0102, norm(y): 0.9898, norm:0.4137, tok/sec: 187996.08, flops:164.66, batch-reuse:1
@ 2049 train 4.2117 , allloss: 4.2117, dt: 694.84ms, fracRes: 0.2936, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0114, norm(y): 0.9898, norm:0.4313, tok/sec: 188635.66, flops:165.22, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.9258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8047, 0.1318, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0035, 0.1030, 0.1572, 0.7383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0081, 0.1553, 0.2793, 0.1816, 0.3770, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0613, 0.2930, 0.1147, 0.0374, 0.2285, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0378, 0.1836, 0.0261, 0.0179, 0.0791, 0.0845, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4590, 0.1436, 0.0449, 0.0137, 0.0713, 0.0364, 0.1299, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0084, 0.0952, 0.0708, 0.0562, 0.1084, 0.3672, 0.2227, 0.0165, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0986, 0.0518, 0.0374, 0.0510, 0.0913, 0.2168, 0.1729, 0.0874, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0322, 0.2461, 0.1089, 0.0432, 0.0996, 0.1787, 0.1211, 0.0488, 0.0325, 0.0674, 0.0212, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0264, 0.0289, 0.0698, 0.0815, 0.0483, 0.0496, 0.0508, 0.1562, 0.0383, 0.3672, 0.0197, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.0325, 0.0060, 0.0019, 0.0140, 0.0039, 0.0271, 0.0236, 0.0170, 0.0137, 0.0093, 0.0100, 0.1816, 0.0000, 0.0000],
        [0.0222, 0.1416, 0.0260, 0.0165, 0.0635, 0.1982, 0.3281, 0.0190, 0.0304, 0.0403, 0.0097, 0.0439, 0.0408, 0.0205, 0.0000],
        [0.0522, 0.1006, 0.0304, 0.0508, 0.0608, 0.0469, 0.1533, 0.0830, 0.0298, 0.0205, 0.0574, 0.0256, 0.1855, 0.0361, 0.0669]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0038,     -1.5312,     -2.0625,     -2.6250,     -2.3750,     -2.2344,     -1.5156,     -1.0156,     -2.4062,     -2.2188,     -2.8125,     -1.9531,     -0.6680,     -2.4062,     -1.9609],
        [    -0.0371,      2.5000,      3.2031,      3.3281,      3.9062,      4.5312,      3.5938,      0.7500,      3.5312,      3.3125,      4.3438,      1.9766,      0.8164,      3.8281,      2.5312],
        [     0.0134,     -1.7969,     -2.5156,     -2.7031,     -1.8594,     -2.3281,     -2.0312,     -1.3359,     -2.7188,     -2.3438,     -1.6250,     -1.9844,     -0.6641,     -2.4531,     -1.7500],
        [    -0.0115,      3.3750,      3.7969,      5.3438,      6.5938,      4.9062,      3.4688,      1.8594,      5.5000,      3.9375,      7.6562,      4.2812,      1.6875,      5.7188,      3.6719],
        [    -0.0505,      2.9062,      3.4844,      3.0625,      3.7812,      4.2812,      4.6562,      1.4297,      2.7500,      2.5625,      3.4844,      1.9375,      0.9922,      2.8125,      1.8281],
        [    -0.0452,      1.5234,      0.5820,     -0.5430,      1.2734,      1.4219,      2.3750,     -0.5000,      0.3730,      0.7656,      0.6836,     -0.0131,     -0.1738,      0.4766,     -0.0349],
        [    -0.0583,      1.5156,     -0.4316,     -0.8086,      0.6758,      0.7422,      2.6562,     -1.0078,      0.4043,     -0.7070,     -0.9648,     -1.0234,      0.0518,      0.3789,     -1.4609],
        [    -0.0002,     -1.1562,     -2.3281,     -3.5156,     -1.8594,     -2.5312,     -1.2578,     -1.5156,     -2.5156,     -1.7422,     -1.5859,     -2.6250,     -1.0156,     -2.3750,     -2.0000],
        [    -0.0439,      2.3750,      2.0781,      1.8516,      2.5156,      3.7188,      3.2344,      0.6250,      1.8359,      2.3594,      1.4453,      2.0781,      1.0078,      1.4766,      1.3203],
        [     0.0244,      0.1016,     -0.5430,     -0.8672,     -0.5547,      0.0267,      0.8906,      0.6641,     -0.0210,      0.1328,     -0.9141,      0.0420,      1.5000,      0.2314,      0.3711],
        [    -0.0630,      1.9688,      1.1562,      0.2295,      1.0703,      1.6484,      1.2656,      0.3516,     -0.0508,      0.6758,     -0.4766,      1.5312,      0.8594,     -0.3125,      0.6758],
        [     0.0210,     -0.8594,     -0.7656,      0.1133,      0.2734,     -0.2520,     -0.2285,     -0.2002,      0.9180,     -0.4844,      1.7734,     -1.1484,      1.2109,      1.0547,      0.1348],
        [     0.0079,     -3.0000,     -4.6875,     -5.8750,     -3.8438,     -5.1250,     -3.1875,     -3.3281,     -3.6562,     -3.8594,     -4.2500,     -4.1875,     -1.2812,     -3.5000,     -3.6406],
        [    -0.0649,      1.7812,      0.0894,     -0.3672,      0.9805,      2.1250,      2.6250,     -0.2178,      0.2471,      0.5312,     -0.8945,      0.6172,      0.5391,     -0.1436,     -0.5859],
        [    -0.0129,      0.6406,     -0.5547,     -0.0393,      0.1377,     -0.1196,      1.0625,      0.4512,     -0.5742,     -0.9453,      0.0835,     -0.7227,      1.2578,     -0.3809,      0.2324]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6922],
        [0.3330],
        [0.2404],
        [0.2262],
        [0.2767],
        [0.1800],
        [0.2170],
        [0.1991],
        [0.0982],
        [0.2439],
        [0.0933],
        [0.2089],
        [0.1636],
        [0.0853]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0101,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0078,     0.0035,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.0278,     0.0162,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0037,     0.0325,     0.0193,     0.0026,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0164,     0.0084,     0.0156,     0.0179,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4590,     0.0371,     0.0996,     0.0215,     0.0415,     0.0408,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2969,     0.0065,     0.0557,     0.0143,     0.0178,     0.0260,     0.0332,     0.5508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.0022,     0.0303,     0.0227,     0.0089,     0.0021,     0.0157,     0.1113,     0.0188,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.0596,     0.0403,     0.0339,     0.0864,     0.0277,     0.0635,     0.1035,     0.0173,     0.0493,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7148,     0.0103,     0.0503,     0.0342,     0.0114,     0.0045,     0.0114,     0.1006,     0.0054,     0.0342,     0.0247,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3770,     0.0031,     0.0854,     0.0525,     0.0508,     0.0156,     0.0120,     0.1030,     0.0128,     0.0515,     0.0103,     0.2256,     0.0000,     0.0000,     0.0000],
        [    0.0845,     0.0059,     0.0811,     0.0022,     0.0271,     0.0339,     0.1113,     0.0747,     0.0674,     0.1191,     0.0122,     0.1260,     0.2539,     0.0000,     0.0000],
        [    0.3906,     0.0030,     0.0229,     0.0131,     0.0167,     0.0049,     0.0193,     0.0530,     0.0364,     0.1118,     0.0042,     0.1152,     0.1836,     0.0247,     0.0000],
        [    0.5234,     0.0146,     0.0918,     0.0311,     0.0286,     0.0055,     0.0037,     0.0056,     0.0004,     0.0052,     0.0052,     0.0640,     0.0659,     0.0006,     0.1523]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0037,     -0.1030,      0.0117,     -0.0952,     -0.1328,     -0.1206,     -0.1245,     -0.0063,     -0.1289,     -0.0549,     -0.2227,      0.0334,      0.0208,     -0.1504,     -0.0613],
        [    -0.0077,     -4.5938,     -5.5312,     -6.6250,     -5.6250,     -7.4688,     -7.3438,     -7.6562,     -7.1250,     -7.1875,     -6.9375,     -5.1250,     -6.5938,     -7.2812,     -3.5625],
        [    -0.0067,     -4.8438,     -5.6562,     -3.0625,     -4.3125,     -7.2812,     -5.5000,     -5.2812,     -5.7812,     -6.2812,     -3.9375,     -4.8125,     -4.1875,     -6.2812,     -2.9219],
        [    -0.0118,     -3.4531,     -3.9844,     -2.2656,     -1.7734,     -4.2812,     -3.6875,     -3.2344,     -3.6250,     -5.2500,     -1.0312,     -3.4375,     -3.0781,     -4.1250,     -2.0312],
        [     0.1079,     -5.4375,     -3.2656,     -3.7812,     -5.7812,     -6.0312,     -4.8438,     -1.0859,     -6.7500,     -3.6875,     -6.0000,     -2.1094,     -1.9531,     -7.5000,     -3.9375],
        [    -0.0195,     -4.0625,     -4.7188,     -4.0938,     -3.9688,     -4.5625,     -1.5469,     -2.6406,     -2.3594,     -4.0312,     -5.3438,     -2.4375,     -3.6406,     -3.4375,     -1.6016],
        [     0.0188,     -2.5000,     -1.5078,     -3.0469,     -2.3906,     -2.4062,     -0.4062,     -0.3555,     -2.0156,     -3.2500,     -3.2188,     -1.0156,     -0.7578,     -2.7969,     -0.5938],
        [     0.0271,     -3.7969,     -1.6484,     -3.0000,     -2.7812,     -2.4062,     -2.1719,      0.6406,     -2.0781,     -1.6172,     -3.4531,     -1.1094,     -0.5898,     -2.4688,     -0.6055],
        [     0.0364,     -5.8438,     -3.2188,     -3.5156,     -4.4375,     -5.8750,     -3.8750,     -1.9219,     -3.7031,     -2.3125,     -6.1875,     -1.7344,     -1.3281,     -4.4062,     -2.5938],
        [     0.0718,     -2.0938,     -2.4844,     -2.6562,     -1.7188,     -2.8594,     -2.0312,     -1.5391,     -3.3281,     -2.2812,     -1.4766,     -1.2969,     -1.3203,     -3.4375,     -1.7812],
        [     0.0640,     -4.1875,     -2.5938,     -2.9688,     -4.0625,     -5.0000,     -4.0625,     -1.8906,     -4.8125,     -2.9688,     -3.2969,     -1.9844,     -1.5938,     -5.1875,     -1.8047],
        [     0.0569,     -4.7500,     -1.4297,     -1.9141,     -1.9453,     -3.1250,     -3.3906,     -1.2422,     -3.3281,     -1.9375,     -3.5469,     -0.4551,      1.3984,     -3.1094,     -1.4844],
        [     0.0130,     -2.6562,     -0.0242,     -3.6406,     -1.1250,     -0.8945,      0.2930,     -0.1099,     -0.2080,      0.3613,     -1.9219,      0.4121,      1.1172,      0.2471,      1.1875],
        [     0.0228,     -4.8438,     -2.8125,     -3.3750,     -3.1250,     -4.3438,     -2.9844,     -1.9766,     -2.3594,     -1.2266,     -4.5312,     -1.2031,     -0.7344,     -2.7344,     -1.9297],
        [     0.0242,     -3.5469,     -1.7188,     -2.7969,     -2.8906,     -4.5312,     -4.9375,     -4.5000,     -7.1562,     -4.5938,     -4.5938,     -2.0781,     -2.0469,     -6.7812,     -1.2109]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8842],
        [0.8686],
        [0.8143],
        [0.7198],
        [0.6039],
        [0.6042],
        [0.5122],
        [0.6156],
        [0.7065],
        [0.5361],
        [0.7166],
        [0.5209],
        [0.5380],
        [0.6646]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0054,     -0.5391,     -0.5234,     -0.5117,     -0.5391,     -0.5625,     -0.4941,     -0.4707,     -0.5352,     -0.5234,     -0.5586,     -0.4844,     -0.4336,     -0.5000,     -0.4785],
        [     0.2559,    -28.5000,    -27.1250,    -27.2500,    -28.1250,    -29.0000,    -25.2500,    -24.1250,    -27.6250,    -27.2500,    -29.0000,    -25.0000,    -22.1250,    -26.0000,    -25.6250],
        [     0.2656,    -30.2500,    -29.0000,    -29.0000,    -30.2500,    -30.8750,    -27.2500,    -25.8750,    -29.6250,    -28.8750,    -31.2500,    -26.8750,    -23.8750,    -28.0000,    -27.2500],
        [     0.2852,    -29.1250,    -27.6250,    -27.6250,    -29.1250,    -30.1250,    -26.2500,    -25.0000,    -28.5000,    -28.2500,    -30.2500,    -25.7500,    -23.2500,    -27.0000,    -26.1250],
        [     0.2598,    -25.8750,    -24.3750,    -24.3750,    -25.7500,    -26.6250,    -23.2500,    -22.0000,    -25.5000,    -25.0000,    -26.7500,    -22.7500,    -20.2500,    -23.8750,    -22.8750],
        [     0.2637,    -26.8750,    -25.5000,    -25.5000,    -26.7500,    -27.3750,    -24.2500,    -23.0000,    -26.5000,    -25.7500,    -27.8750,    -23.8750,    -21.1250,    -25.0000,    -24.3750],
        [     0.2246,    -23.5000,    -22.3750,    -22.2500,    -23.2500,    -24.0000,    -21.1250,    -20.1250,    -23.1250,    -22.7500,    -24.2500,    -20.8750,    -18.3750,    -21.6250,    -21.2500],
        [     0.2490,    -25.2500,    -23.7500,    -23.7500,    -25.5000,    -26.3750,    -23.0000,    -21.6250,    -24.8750,    -24.5000,    -26.3750,    -22.6250,    -20.1250,    -23.3750,    -22.8750],
        [     0.2539,    -26.1250,    -24.6250,    -24.8750,    -26.1250,    -27.0000,    -23.3750,    -22.2500,    -25.8750,    -25.2500,    -27.1250,    -23.0000,    -20.3750,    -24.2500,    -23.1250],
        [     0.2432,    -27.7500,    -26.5000,    -26.1250,    -27.7500,    -28.6250,    -25.5000,    -23.8750,    -27.1250,    -26.2500,    -28.6250,    -24.8750,    -22.1250,    -25.6250,    -25.2500],
        [     0.2656,    -28.0000,    -26.3750,    -26.2500,    -27.6250,    -28.5000,    -25.3750,    -23.8750,    -27.2500,    -26.8750,    -28.7500,    -24.8750,    -22.0000,    -25.7500,    -25.5000],
        [     0.2812,    -29.1250,    -27.6250,    -27.6250,    -29.2500,    -30.1250,    -26.3750,    -24.8750,    -28.3750,    -28.2500,    -30.1250,    -26.1250,    -23.1250,    -26.7500,    -26.2500],
        [     0.2500,    -26.0000,    -24.1250,    -24.2500,    -26.3750,    -27.0000,    -23.6250,    -22.1250,    -25.5000,    -25.0000,    -27.1250,    -23.0000,    -20.5000,    -24.0000,    -23.5000],
        [     0.2539,    -25.7500,    -24.2500,    -24.5000,    -25.7500,    -26.6250,    -22.8750,    -21.8750,    -25.5000,    -24.7500,    -26.6250,    -22.5000,    -20.1250,    -23.8750,    -22.6250],
        [     0.2734,    -29.3750,    -28.1250,    -27.8750,    -29.1250,    -30.2500,    -26.6250,    -25.2500,    -28.6250,    -28.3750,    -30.2500,    -26.3750,    -23.3750,    -27.1250,    -26.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8489],
        [0.8017],
        [0.7783],
        [0.7233],
        [0.7363],
        [0.7173],
        [0.7035],
        [0.6793],
        [0.6816],
        [0.6633],
        [0.6418],
        [0.6613],
        [0.6451],
        [0.6519]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9102,     0.0496,     0.0388,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0376,     0.0408,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0031,     0.0033,     0.0037,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1816,     0.0972,     0.0991,     0.1045,     0.3223,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0574,     0.0825,     0.1064,     0.1074,     0.2432,     0.2852,     0.1172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0107,     0.0581,     0.0564,     0.0625,     0.1553,     0.1875,     0.1650,     0.3047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0503,     0.0337,     0.0219,     0.0251,     0.1162,     0.0889,     0.1377,     0.2695,     0.2578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3184,     0.0289,     0.0222,     0.0305,     0.0615,     0.0527,     0.0427,     0.0825,     0.1895,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1172,     0.0212,     0.0146,     0.0206,     0.0508,     0.0654,     0.0415,     0.0981,     0.2227,     0.2754,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0167,     0.0092,     0.0111,     0.0278,     0.0356,     0.0483,     0.0869,     0.1904,     0.1914,     0.1455,     0.2354,     0.0000,     0.0000,     0.0000],
        [    0.0194,     0.0110,     0.0098,     0.0104,     0.0320,     0.0325,     0.0330,     0.0674,     0.1689,     0.1846,     0.0713,     0.1777,     0.1816,     0.0000,     0.0000],
        [    0.0190,     0.0075,     0.0044,     0.0048,     0.0244,     0.0199,     0.0337,     0.0669,     0.0674,     0.1455,     0.0442,     0.0830,     0.2871,     0.1924,     0.0000],
        [    0.0011,     0.0060,     0.0052,     0.0056,     0.0123,     0.0217,     0.0129,     0.0374,     0.1416,     0.0576,     0.0408,     0.1099,     0.1055,     0.3730,     0.0688]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0068,     -0.5742,     -0.5273,     -0.5312,     -0.5195,     -0.5664,     -0.6094,     -0.6133,     -0.6211,     -0.5547,     -0.6680,     -0.6562,     -0.6211,     -0.6719,     -0.6992],
        [     0.1152,    -14.1875,    -13.2500,    -13.5000,    -13.4375,    -13.5000,    -14.8125,    -14.4375,    -13.9375,    -13.5000,    -15.2500,    -15.0000,    -14.2500,    -14.4375,    -15.5000],
        [     0.0371,     -2.8750,     -3.1094,     -2.7188,     -2.2500,     -2.2500,     -2.6719,     -2.4531,     -1.9062,     -1.6719,     -2.4531,     -1.9141,     -1.8828,     -1.7344,     -2.4062],
        [     0.0393,     -3.1094,     -3.0312,     -3.0000,     -2.3438,     -2.3125,     -2.5312,     -2.2500,     -1.8516,     -1.3672,     -2.2969,     -1.9062,     -1.6641,     -1.6016,     -2.1562],
        [     0.1025,     -5.6562,     -5.5938,     -5.4688,     -5.0000,     -4.6875,     -4.9062,     -4.7188,     -4.2812,     -3.3750,     -5.1562,     -4.6562,     -3.5781,     -4.0000,     -4.6875],
        [     0.0552,     -0.5703,     -0.5508,     -0.4961,      0.6328,      0.1318,      0.2412,      1.0625,      1.5156,      1.5469,      0.8203,      1.3047,      2.0781,      2.1406,      1.1641],
        [     0.0085,      0.3711,      0.6289,      0.6328,      1.4531,      1.6094,      0.7227,      1.9922,      3.2188,      1.9766,      2.0312,      2.6250,      2.6875,      3.8125,      2.0625],
        [     0.0200,      1.7109,      1.6797,      1.7891,      2.6875,      2.8906,      2.7500,      3.3750,      4.3125,      4.0312,      3.7500,      4.4375,      4.2188,      5.0938,      4.0312],
        [     0.0918,     -0.3066,     -0.7422,     -0.6016,      0.9297,      0.6602,      1.1016,      1.7656,      1.7266,      2.2656,      1.3438,      1.8750,      3.0312,      2.6250,      1.8203],
        [     0.0518,     -2.3438,     -2.6094,     -2.2969,     -1.5938,     -1.7422,     -1.9531,     -1.2969,     -0.4668,     -0.5664,     -1.2344,     -0.5820,     -0.1807,      0.1465,     -0.5859],
        [     0.0608,     -1.6484,     -2.0312,     -1.6797,     -0.7734,     -0.5234,     -0.9766,     -0.1167,      0.6992,      0.9102,     -0.4082,      0.5312,      1.1641,      1.4609,      0.1011],
        [     0.0023,      2.5938,      1.9844,      2.1719,      3.0938,      3.3438,      3.6406,      4.2500,      5.0312,      5.0312,      4.7500,      5.2188,      5.4062,      6.1250,      5.5625],
        [     0.0542,     -0.5117,     -0.6289,     -0.5664,      0.5547,      0.5742,      0.5859,      1.3047,      2.2188,      2.3125,      1.3594,      2.2656,      2.2969,      3.0781,      1.9062],
        [     0.1016,     -0.8320,     -1.3516,     -1.2812,      0.3516,      0.1484,      0.6758,      1.3594,      1.3672,      2.1406,      0.9453,      1.5703,      2.8125,      2.4219,      1.6328],
        [     0.0157,      1.7266,      1.5859,      1.6641,      2.4531,      3.0156,      2.5000,      3.5625,      4.9062,      4.0000,      3.6406,      4.6562,      4.5938,      5.8750,      4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6461],
        [0.2070],
        [0.1751],
        [0.2242],
        [0.1571],
        [0.0976],
        [0.0684],
        [0.0796],
        [0.0868],
        [0.0592],
        [0.0360],
        [0.0464],
        [0.0549],
        [0.0309]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0135,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2871,     0.6484,     0.0625,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.5977,     0.1494,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1230,     0.8359,     0.0081,     0.0034,     0.0287,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0962,     0.8555,     0.0042,     0.0024,     0.0092,     0.0310,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.3203,     0.0062,     0.0010,     0.0131,     0.0518,     0.6016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0063,     0.0001,     0.0001,     0.0003,     0.0020,     0.9766,     0.0129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.0410,     0.0005,     0.0002,     0.0006,     0.0055,     0.8008,     0.0247,     0.1201,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0253,     0.0105,     0.0004,     0.0001,     0.0005,     0.0029,     0.2129,     0.0082,     0.3926,     0.3457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0058,     0.0027,     0.0002,     0.0001,     0.0003,     0.0007,     0.2578,     0.0068,     0.3086,     0.2734,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0033,     0.0007,     0.0002,     0.0007,     0.0026,     0.0449,     0.0046,     0.1104,     0.2275,     0.5898,     0.0129,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0020,     0.0003,     0.0001,     0.0004,     0.0021,     0.0515,     0.0056,     0.1016,     0.1226,     0.6758,     0.0107,     0.0254,     0.0000,     0.0000],
        [    0.0029,     0.0093,     0.0004,     0.0001,     0.0004,     0.0021,     0.0139,     0.0032,     0.0200,     0.1079,     0.7656,     0.0072,     0.0215,     0.0464,     0.0000],
        [    0.0019,     0.0016,     0.0001,     0.0000,     0.0002,     0.0004,     0.0045,     0.0017,     0.0471,     0.0884,     0.4395,     0.0087,     0.0225,     0.1050,     0.2773]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0008,     -0.1787,     -0.2891,     -0.3223,     -0.2461,     -0.2480,     -0.1738,     -0.2734,     -0.1934,     -0.1836,     -0.2256,     -0.2988,     -0.2559,     -0.1943,     -0.1865],
        [    -0.0153,      4.2812,      0.2617,     -0.2578,      0.8477,      1.4688,      3.0312,      1.8672,      4.1875,      2.2969,      4.1250,      1.7891,      1.3203,      3.6562,      2.7656],
        [    -0.0045,      0.8125,     -1.5312,     -2.6562,     -1.3672,     -0.4297,      0.5156,     -1.1484,      1.3906,      1.2656,      1.9375,      0.1396,      0.0417,      2.1875,      2.4531],
        [    -0.0243,      1.3750,     -0.0126,     -0.3652,     -0.2832,      0.8867,      2.1250,      1.0625,      3.1562,      2.9688,      3.5781,      2.3125,      1.8047,      3.8281,      3.8594],
        [    -0.0099,      1.9062,     -2.7344,     -3.5938,     -1.4688,      0.8203,      0.8906,     -0.7773,      2.1250,      0.7422,      2.5312,     -0.4277,      0.0938,      3.3438,      2.6250],
        [    -0.0098,      2.1719,     -3.1562,     -3.7188,     -2.3594,     -1.1406,      1.6172,     -1.4375,      2.4062,      0.4199,      2.3125,     -0.9766,     -0.6719,      2.8125,      2.0312],
        [     0.0020,      4.3750,      0.4375,     -1.3672,      1.1797,      2.5625,      5.0000,      1.9766,      3.9375,      2.7188,      2.6250,      1.0703,      0.7812,      3.6562,      2.9062],
        [     0.0272,      1.8359,     -2.0000,     -2.8125,     -1.0703,      0.6641,      6.8750,      2.5469,      3.5312,      2.7500,      3.4531,      1.4922,      1.6328,      3.2500,      4.8438],
        [     0.0305,      1.6484,     -2.8125,     -3.6719,     -2.5938,     -0.3633,      4.6250,      1.1406,      2.7188,      3.4688,      5.0312,      0.5352,      1.6172,      2.5156,      4.8750],
        [     0.0500,     -0.8320,     -4.0312,     -5.8438,     -3.9688,     -2.1406,      2.1875,     -1.0781,      2.7969,      2.6719,      3.6406,      0.1797,      1.2031,      3.7656,      5.2500],
        [     0.0579,     -0.6875,     -3.2812,     -4.1250,     -2.8125,     -2.0156,      3.8594,      0.2158,      4.0312,      3.9219,      3.2656,      0.4434,      1.7891,      4.5312,      5.7500],
        [     0.0479,      1.1484,     -0.4160,     -1.5547,     -0.4727,      0.8984,      3.7500,      1.4844,      4.6562,      5.3750,      6.3438,      2.5000,      3.5781,      5.6562,      7.4688],
        [     0.0444,      0.2100,     -1.7031,     -2.5312,     -1.4531,      0.2754,      3.4844,      1.2578,      4.1562,      4.3438,      6.0625,      1.9062,      2.7656,      4.9062,      7.0312],
        [     0.0386,      1.1875,     -2.0469,     -3.0312,     -2.0312,     -0.2891,      1.5859,      0.1187,      1.9531,      3.6406,      5.5938,      0.9258,      2.0312,      2.7969,      5.2812],
        [     0.0435,     -0.1240,     -2.7500,     -3.7656,     -2.3125,     -1.4453,      0.8789,     -0.0728,      3.2344,      3.8594,      5.4688,      1.5312,      2.4844,      4.0312,      5.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8374],
        [0.3915],
        [0.3676],
        [0.3864],
        [0.4164],
        [0.3583],
        [0.3461],
        [0.3722],
        [0.3412],
        [0.3268],
        [0.3297],
        [0.3292],
        [0.3372],
        [0.3292]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0166, 0.9492, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0302, 0.9336, 0.0215, 0.0145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.8164, 0.0386, 0.0327, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0591, 0.4668, 0.0058, 0.0229, 0.0547, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.6562, 0.0022, 0.0103, 0.1030, 0.0894, 0.0601, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0244, 0.5938, 0.0047, 0.0154, 0.0417, 0.2520, 0.0549, 0.0131, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0049, 0.2734, 0.0088, 0.0098, 0.0186, 0.6445, 0.0142, 0.0166, 0.0103, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0060, 0.5625, 0.0165, 0.0179, 0.0284, 0.1787, 0.0273, 0.0461, 0.0464, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.3359, 0.0143, 0.0233, 0.0693, 0.2393, 0.0413, 0.0223, 0.0417, 0.1021, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0046, 0.3457, 0.0322, 0.0278, 0.0251, 0.2656, 0.0713, 0.0376, 0.0518, 0.0723, 0.0461, 0.0210, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.2100, 0.0031, 0.0052, 0.0613, 0.2949, 0.0332, 0.0271, 0.0344, 0.0164, 0.1172, 0.0063, 0.0164, 0.0000, 0.0000],
        [0.0239, 0.3086, 0.0094, 0.0078, 0.0288, 0.4297, 0.0091, 0.0237, 0.0153, 0.0396, 0.0393, 0.0145, 0.0248, 0.0258, 0.0000],
        [0.0027, 0.6719, 0.0194, 0.0099, 0.0095, 0.0452, 0.0125, 0.0271, 0.0305, 0.0383, 0.0054, 0.0112, 0.0177, 0.0203, 0.0781]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0003,     -0.2305,     -0.2285,     -0.2480,     -0.1621,     -0.1641,     -0.2402,     -0.2344,     -0.2461,     -0.2227,     -0.1729,     -0.2559,     -0.2578,     -0.2520,     -0.1846],
        [    -0.0058,     -1.6562,     -5.2188,     -5.0000,     -2.9375,     -2.5469,     -5.4062,     -5.1250,     -5.9688,     -4.2500,     -2.5312,     -5.2188,     -6.5312,     -6.0938,     -2.5469],
        [     0.0199,      4.0625,      0.7891,      0.7617,      0.6289,      2.6562,      1.3750,      0.7188,      0.9648,      1.3594,      0.0243,     -0.2988,      0.3496,      0.8828,      2.4531],
        [     0.0272,      3.4531,     -0.3145,     -0.7031,     -0.1729,      1.5156,     -0.2236,     -0.3223,     -0.5430,      0.1484,     -0.9414,     -1.6484,     -1.3672,     -0.8945,      1.5156],
        [    -0.0123,      2.9688,     -0.0796,     -0.2432,      0.5078,      3.2812,      1.1875,      0.3242,     -0.3984,      0.6602,     -0.0518,     -1.4766,     -0.6562,     -0.5000,      1.9453],
        [     0.0128,      2.0781,     -2.3125,     -0.9336,     -0.0664,      1.8984,      0.3164,     -1.8828,     -1.4297,     -1.4375,     -1.3984,     -3.8281,     -3.0938,     -1.3359,      0.0178],
        [    -0.0110,      2.1094,     -3.5938,     -2.0469,      0.2637,      0.1187,     -0.2793,     -4.0625,     -3.1406,     -2.7188,     -2.4062,     -6.7812,     -6.3438,     -3.3438,      1.0234],
        [    -0.0017,      3.1875,     -1.6484,     -0.4590,      0.5352,      2.3281,      0.8086,     -0.6328,      0.4688,     -0.2295,      0.2432,     -2.4375,     -1.9141,     -0.0608,      0.7695],
        [    -0.0108,      4.0000,      0.5586,      0.6719,      1.3125,      4.8438,      1.0469,      1.1953,      0.7227,      2.0625,      1.5547,      0.2988,      0.8203,      0.3730,      2.0156],
        [    -0.0066,      4.5312,      1.0000,      1.0859,      1.5469,      3.3750,      1.5078,      2.0312,      2.0312,      2.4375,      1.8828,      1.3672,      1.8438,      1.7109,      2.7969],
        [    -0.0075,      4.7500,      1.5859,      2.0781,      3.1719,      4.4062,      2.6406,      2.0312,      2.6562,      3.5469,      3.6094,      0.9453,      2.2812,      2.2812,      3.9531],
        [     0.0028,      4.3125,      1.9531,      1.8125,      1.7031,      4.0625,      2.7500,      2.1094,      2.4219,      2.7656,      2.3125,      1.5234,      2.8750,      2.3750,      3.2812],
        [    -0.0092,      0.1748,     -4.0312,     -3.5312,     -1.0625,      0.5117,     -1.6719,     -1.8750,     -1.6328,     -2.3750,     -0.4082,     -3.3438,     -2.3750,     -1.4062,     -1.5469],
        [    -0.0162,      2.5312,     -0.9492,     -1.1406,      0.1699,      2.8750,     -0.9844,     -0.0260,     -0.4668,      0.4844,      0.4805,     -0.5156,      0.0175,      0.0559,      0.7734],
        [    -0.0041,      5.5000,      1.9531,      1.2891,      1.2422,      2.7969,      1.5078,      2.2812,      2.4062,      2.6250,      0.6680,      1.3984,      1.8594,      2.0000,      3.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6370],
        [0.2014],
        [0.2604],
        [0.2747],
        [0.3177],
        [0.2797],
        [0.2551],
        [0.2723],
        [0.2377],
        [0.2403],
        [0.1601],
        [0.2122],
        [0.2314],
        [0.1794]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0332,     -1.1250,     -1.4609,     -1.5312,     -1.5391,     -1.7734,     -1.2031,     -1.5234,     -1.3203,     -1.1484,     -1.1719,     -1.3828,     -1.4219,     -1.2031,     -1.1016],
        [    -0.3867,    -16.3750,    -16.6250,    -17.1250,    -17.2500,    -20.8750,    -12.4375,    -16.8750,    -15.1875,    -12.1250,    -12.4375,    -14.3750,    -15.6250,    -12.6875,    -11.1250],
        [    -0.5273,    -20.2500,    -25.8750,    -27.1250,    -25.6250,    -28.2500,    -22.6250,    -26.0000,    -20.7500,    -20.2500,    -19.3750,    -23.2500,    -24.0000,    -20.2500,    -19.1250],
        [    -1.1562,    -40.7500,    -52.7500,    -54.7500,    -53.2500,    -61.0000,    -43.7500,    -54.2500,    -45.7500,    -41.2500,    -41.7500,    -49.2500,    -50.0000,    -43.0000,    -39.5000],
        [    -1.0391,    -36.0000,    -43.5000,    -46.7500,    -47.7500,    -55.2500,    -36.7500,    -47.7500,    -42.5000,    -35.7500,    -38.5000,    -42.5000,    -46.2500,    -39.5000,    -34.5000],
        [    -1.0156,    -35.2500,    -43.2500,    -45.0000,    -44.5000,    -54.7500,    -34.7500,    -45.2500,    -40.2500,    -34.2500,    -35.5000,    -40.7500,    -42.5000,    -35.5000,    -32.7500],
        [    -0.7695,    -28.1250,    -34.5000,    -35.5000,    -34.7500,    -41.7500,    -26.7500,    -34.2500,    -30.5000,    -25.8750,    -26.1250,    -30.7500,    -32.5000,    -26.8750,    -23.8750],
        [    -1.0000,    -36.0000,    -45.0000,    -46.7500,    -46.0000,    -54.0000,    -35.7500,    -45.0000,    -39.7500,    -34.7500,    -34.5000,    -41.0000,    -41.7500,    -35.2500,    -31.8750],
        [    -0.8516,    -28.6250,    -35.2500,    -37.0000,    -38.7500,    -44.7500,    -28.6250,    -37.5000,    -33.2500,    -28.0000,    -30.2500,    -33.0000,    -35.5000,    -29.6250,    -26.0000],
        [    -1.0859,    -38.0000,    -49.7500,    -51.7500,    -52.5000,    -58.0000,    -41.2500,    -50.2500,    -43.5000,    -38.2500,    -38.5000,    -45.0000,    -46.5000,    -39.0000,    -36.0000],
        [    -0.6680,    -22.5000,    -29.0000,    -30.2500,    -30.1250,    -34.5000,    -24.2500,    -30.1250,    -25.6250,    -23.8750,    -24.8750,    -28.0000,    -28.6250,    -25.0000,    -22.6250],
        [    -1.2500,    -44.0000,    -57.0000,    -59.2500,    -59.5000,    -65.5000,    -46.5000,    -58.0000,    -50.0000,    -44.2500,    -44.2500,    -52.5000,    -53.5000,    -45.7500,    -42.0000],
        [    -0.8906,    -30.6250,    -38.7500,    -40.0000,    -39.7500,    -48.0000,    -31.7500,    -39.7500,    -34.7500,    -30.2500,    -31.5000,    -35.7500,    -37.7500,    -31.3750,    -28.2500],
        [    -0.8555,    -29.7500,    -38.0000,    -39.0000,    -39.5000,    -45.2500,    -30.2500,    -38.5000,    -33.2500,    -29.0000,    -29.8750,    -34.7500,    -36.0000,    -29.7500,    -27.0000],
        [    -0.8047,    -29.3750,    -39.0000,    -39.7500,    -40.0000,    -43.7500,    -31.6250,    -37.7500,    -32.2500,    -28.2500,    -27.5000,    -33.0000,    -34.0000,    -28.0000,    -26.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6557],
        [0.3150],
        [0.5825],
        [0.5603],
        [0.6236],
        [0.5215],
        [0.5255],
        [0.5055],
        [0.4889],
        [0.5508],
        [0.5223],
        [0.5824],
        [0.5317],
        [0.4154]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0082,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0006,     0.0000,     0.0000,     0.0001,     0.0004,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0029,     0.0001,     0.0000,     0.0010,     0.0029,     0.0007,     0.0021,     0.0008,     0.0006,     0.0008,     0.0001,     0.0012,     0.0015,     0.0003]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0126,     -0.4297,     -0.8008,     -1.0312,     -0.5859,     -0.4844,     -0.5898,     -0.6719,     -0.8828,     -0.7969,     -0.8008,     -0.7969,     -0.8516,     -0.8906,     -0.8438],
        [    -0.1719,     -5.7812,    -11.0625,    -13.3750,     -8.0625,     -6.3750,     -8.6250,     -7.7812,    -13.0000,    -10.3125,    -10.4375,    -10.4375,    -10.4375,    -13.8750,    -11.7500],
        [    -0.1455,     -4.9375,     -8.5000,    -12.5000,     -7.6562,     -5.2188,     -5.7188,     -8.4375,    -10.9375,    -10.0000,    -11.5000,     -9.7500,    -11.5625,    -13.1875,     -8.8125],
        [    -0.4648,    -17.0000,    -30.5000,    -40.2500,    -22.8750,    -19.7500,    -22.2500,    -24.8750,    -33.2500,    -30.6250,    -30.1250,    -30.3750,    -32.0000,    -33.7500,    -31.8750],
        [    -0.4434,    -16.1250,    -28.8750,    -37.7500,    -21.3750,    -18.0000,    -21.1250,    -24.1250,    -31.6250,    -28.3750,    -28.7500,    -28.6250,    -30.0000,    -31.0000,    -30.2500],
        [    -0.4805,    -16.5000,    -30.1250,    -39.0000,    -22.6250,    -18.7500,    -22.0000,    -25.0000,    -33.0000,    -30.5000,    -30.1250,    -29.8750,    -31.6250,    -33.0000,    -32.2500],
        [    -0.2295,     -8.2500,    -16.2500,    -21.2500,    -12.6875,     -9.5625,    -10.9375,    -13.5625,    -17.0000,    -15.7500,    -16.0000,    -16.1250,    -16.6250,    -16.3750,    -17.1250],
        [    -0.3242,    -11.2500,    -21.0000,    -26.5000,    -16.1250,    -13.0625,    -15.3125,    -17.5000,    -23.3750,    -21.8750,    -21.0000,    -21.0000,    -21.8750,    -23.1250,    -22.1250],
        [    -0.3379,    -13.5625,    -22.5000,    -29.3750,    -15.3125,    -14.1250,    -17.0000,    -18.7500,    -23.7500,    -21.7500,    -23.1250,    -23.3750,    -24.2500,    -25.1250,    -21.8750],
        [    -0.1738,     -7.5938,    -13.3750,    -16.0000,     -9.1250,     -8.0000,     -9.5625,     -9.1250,    -13.1875,    -11.0625,    -11.1250,    -12.6250,    -11.5625,    -13.3750,    -12.1875],
        [    -0.4121,    -16.1250,    -28.3750,    -34.7500,    -19.7500,    -17.0000,    -20.8750,    -21.6250,    -28.7500,    -26.8750,    -24.7500,    -27.3750,    -26.2500,    -27.1250,    -28.6250],
        [    -0.2852,    -12.3125,    -21.3750,    -25.5000,    -14.3125,    -11.8750,    -15.6875,    -15.0000,    -20.2500,    -18.6250,    -16.7500,    -19.6250,    -18.0000,    -18.7500,    -19.5000],
        [    -0.3770,    -14.5625,    -25.7500,    -31.7500,    -18.8750,    -16.3750,    -19.2500,    -20.2500,    -26.8750,    -25.5000,    -22.8750,    -24.5000,    -24.6250,    -25.5000,    -25.7500],
        [    -0.2402,    -11.6250,    -17.7500,    -22.8750,    -11.2500,    -11.1875,    -13.2500,    -14.1875,    -16.7500,    -16.5000,    -16.3750,    -18.2500,    -17.3750,    -16.5000,    -15.8750],
        [    -0.0996,     -5.9062,     -9.1250,    -12.0000,     -7.0312,     -5.9375,     -7.3438,     -6.2188,     -7.2500,     -7.5312,     -7.1562,     -9.8125,     -6.7812,     -6.5625,     -8.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7123],
        [0.5562],
        [0.7712],
        [0.7885],
        [0.8709],
        [0.8095],
        [0.8400],
        [0.7659],
        [0.6517],
        [0.8564],
        [0.5390],
        [0.9167],
        [0.8268],
        [0.5689]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0001,     0.0001,     0.0000,     0.0001,     0.0001,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,     -0.4922,     -0.6016,     -0.7070,     -0.4570,     -0.4355,     -0.4473,     -0.4180,     -0.5078,     -0.4570,     -0.4805,     -0.5000,     -0.4570,     -0.5078,     -0.5938],
        [     0.0148,      6.3125,      5.2812,      6.3125,      3.4531,      3.7344,      4.5938,      3.0000,      2.1562,      2.6250,      2.3125,      3.1250,      2.1250,      2.5781,      4.7500],
        [    -0.0089,    -10.5000,    -12.2500,    -14.1250,    -10.1250,     -9.7500,     -8.7500,    -10.3125,    -12.8750,    -10.1875,    -10.8750,    -10.6875,    -11.2500,    -12.3750,    -11.6875],
        [    -0.0320,    -27.8750,    -33.7500,    -39.0000,    -25.0000,    -24.0000,    -23.7500,    -23.0000,    -28.3750,    -25.3750,    -26.2500,    -28.1250,    -25.1250,    -28.1250,    -32.7500],
        [    -0.0249,    -20.7500,    -25.3750,    -29.5000,    -19.1250,    -17.8750,    -18.0000,    -16.8750,    -20.0000,    -19.0000,    -19.7500,    -21.0000,    -18.3750,    -20.5000,    -24.7500],
        [    -0.0366,    -24.2500,    -31.5000,    -37.2500,    -24.7500,    -22.7500,    -23.3750,    -22.1250,    -28.2500,    -24.2500,    -27.0000,    -26.5000,    -24.7500,    -28.5000,    -32.2500],
        [    -0.0107,    -16.2500,    -21.1250,    -24.6250,    -16.0000,    -14.6875,    -14.8750,    -14.3750,    -18.1250,    -16.2500,    -17.3750,    -18.1250,    -15.9375,    -18.1250,    -21.7500],
        [    -0.0124,    -18.1250,    -23.1250,    -27.1250,    -17.5000,    -16.2500,    -17.0000,    -15.3750,    -19.1250,    -17.1250,    -18.3750,    -19.6250,    -16.7500,    -18.8750,    -23.1250],
        [    -0.0284,    -25.8750,    -30.2500,    -35.2500,    -23.2500,    -21.8750,    -22.6250,    -21.5000,    -25.0000,    -22.6250,    -23.1250,    -24.8750,    -22.3750,    -24.5000,    -30.0000],
        [    -0.0128,    -19.7500,    -23.6250,    -27.7500,    -17.5000,    -17.0000,    -17.8750,    -15.7500,    -18.6250,    -17.5000,    -17.5000,    -19.8750,    -16.8750,    -18.5000,    -22.6250],
        [    -0.0469,    -31.2500,    -37.2500,    -43.5000,    -27.6250,    -26.8750,    -26.8750,    -25.7500,    -31.3750,    -28.1250,    -29.0000,    -30.8750,    -27.7500,    -30.5000,    -37.0000],
        [    -0.0111,    -13.7500,    -16.8750,    -20.1250,    -12.9375,    -12.7500,    -12.5000,    -11.8125,    -14.4375,    -13.3125,    -13.8125,    -14.8125,    -13.5000,    -14.3750,    -15.9375],
        [    -0.0330,    -30.0000,    -37.7500,    -44.2500,    -28.0000,    -26.7500,    -27.1250,    -25.6250,    -31.8750,    -28.5000,    -30.0000,    -31.7500,    -28.5000,    -31.6250,    -37.2500],
        [    -0.0342,    -28.7500,    -34.5000,    -40.0000,    -25.6250,    -24.7500,    -25.3750,    -24.6250,    -28.3750,    -26.0000,    -26.6250,    -28.5000,    -25.8750,    -28.1250,    -34.2500],
        [     0.0008,    -12.3125,    -13.3750,    -15.5625,     -8.8750,     -9.4375,    -10.1250,     -9.3750,     -9.1875,     -9.8750,     -9.0625,    -11.8125,     -9.5625,     -9.6250,    -12.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1706],
        [0.4662],
        [0.5776],
        [0.8116],
        [0.9213],
        [0.8348],
        [0.5903],
        [0.7804],
        [0.4870],
        [0.9847],
        [0.3414],
        [0.9948],
        [0.8379],
        [0.4254]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3906,     0.6094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2275,     0.4062,     0.3652,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.3281,     0.3184,     0.2422,     0.1064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0087,     0.3555,     0.2412,     0.1973,     0.1099,     0.0264,     0.0601,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.1924,     0.2988,     0.3203,     0.1094,     0.0209,     0.0291,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.2070,     0.2969,     0.3086,     0.0688,     0.0177,     0.0603,     0.0232,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2314,     0.3496,     0.3398,     0.0452,     0.0020,     0.0100,     0.0041,     0.0021,     0.0160,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8789,     0.0134,     0.0066,     0.0038,     0.0072,     0.0034,     0.0133,     0.0044,     0.0167,     0.0074,     0.0444,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.2969,     0.1660,     0.0938,     0.0737,     0.0250,     0.0369,     0.0315,     0.0388,     0.0405,     0.0574,     0.1367,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0011,     0.0004,     0.0002,     0.0010,     0.0012,     0.0014,     0.0013,     0.0098,     0.0013,     0.0067,     0.0006,     0.0026,     0.0000,     0.0000],
        [    0.0432,     0.0781,     0.0898,     0.0786,     0.0515,     0.0192,     0.0359,     0.0210,     0.0469,     0.0718,     0.2080,     0.1260,     0.0486,     0.0820,     0.0000],
        [    0.0002,     0.2021,     0.1514,     0.1113,     0.0342,     0.0075,     0.0120,     0.0107,     0.0074,     0.0221,     0.0261,     0.1514,     0.0045,     0.0041,     0.2559]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0020,     -0.0684,     -0.0806,     -0.0879,     -0.0776,     -0.0728,     -0.0654,     -0.0737,     -0.0623,     -0.0752,     -0.0537,     -0.0762,     -0.0674,     -0.0625,     -0.0781],
        [     0.0674,      4.1562,      3.5000,      3.0156,      2.5312,      1.8281,      2.0469,      2.1875,      2.0625,      1.9844,      2.0938,      3.4844,      1.3125,      0.9297,      3.7500],
        [     0.2637,     11.0000,     11.4375,     11.3750,      9.6875,      7.5938,      7.9375,      8.2500,      7.1562,      9.5000,      8.8750,     11.2500,      7.2188,      6.5625,     12.4375],
        [     0.2422,     10.0000,     10.5625,     10.4375,      9.1250,      6.9062,      7.3125,      7.5625,      6.7500,      8.8125,      8.2500,     10.4375,      6.4688,      6.1562,     11.4375],
        [     0.0908,      4.3438,      4.3125,      4.0625,      3.2344,      2.2344,      3.0000,      2.5156,      2.2344,      3.0000,      3.4531,      4.6875,      2.5156,      2.0781,      4.8438],
        [    -0.2812,     -9.9375,    -11.5000,    -12.7500,    -10.7500,    -10.4375,     -9.6250,    -10.0000,     -7.7500,    -10.5000,     -8.1250,    -10.6875,     -9.1250,     -8.5625,    -11.8125],
        [     0.0801,      3.7969,      3.4062,      3.2031,      2.6094,      1.1875,      2.0156,      1.6406,      1.9375,      2.0156,      2.8281,      3.5156,      1.1875,      0.9492,      3.9219],
        [     0.1553,      5.9062,      6.3438,      6.4375,      5.3438,      3.7031,      4.0312,      3.9688,      4.0312,      5.0312,      5.1562,      6.5000,      4.1250,      3.6875,      6.6875],
        [     0.1006,      4.1562,      4.5000,      4.5312,      3.0469,      1.6875,      2.9062,      1.9531,      1.4531,      3.2969,      3.5938,      4.8438,      2.5000,      2.0000,      5.2500],
        [     0.2539,     10.7500,     11.1875,     11.1875,      9.1250,      6.0312,      7.6250,      6.7500,      6.0938,      8.1250,      8.3750,     11.0625,      5.8125,      5.3125,     12.1875],
        [    -0.1299,     -4.3125,     -5.0312,     -5.5625,     -4.9375,     -5.6875,     -4.3125,     -5.4375,     -4.0938,     -4.9062,     -3.1094,     -4.5312,     -4.7188,     -3.9531,     -4.4688],
        [     0.0776,      4.6562,      4.0625,      3.5000,      3.2656,      2.1719,      2.5625,      2.4062,      2.6094,      2.6562,      3.0000,      3.8750,      1.2188,      1.5391,      4.4062],
        [    -0.1943,     -7.0312,     -8.0000,     -8.9375,     -7.0625,     -6.9062,     -6.7188,     -6.8438,     -4.7812,     -6.8438,     -5.1875,     -7.6250,     -6.0938,     -5.3750,     -8.1875],
        [     0.0145,      0.6055,      0.7461,      0.6094,      0.1914,     -0.7969,     -0.1738,     -0.7070,      0.0933,      0.5234,      1.5859,      1.0859,      0.1318,      0.6523,      1.4375],
        [     0.1484,      7.2812,      7.0000,      6.6875,      5.5312,      4.0000,      4.4688,      4.3750,      4.0000,      5.0938,      5.2500,      7.0000,      3.4844,      3.4062,      7.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5765],
        [0.3144],
        [0.5648],
        [0.5795],
        [1.0000],
        [0.5904],
        [0.3394],
        [0.7139],
        [0.1810],
        [0.9854],
        [0.1668],
        [0.9954],
        [0.7821],
        [0.2004]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0337,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8125,     0.0972,     0.0908,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4062,     0.2451,     0.1953,     0.1533,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3828,     0.2754,     0.1445,     0.0962,     0.1021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0047,     0.0027,     0.0005,     0.0006,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1230,     0.2383,     0.1426,     0.1074,     0.1226,     0.1299,     0.1357,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0630,     0.3027,     0.1533,     0.1172,     0.1035,     0.0786,     0.1025,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3672,     0.1758,     0.1245,     0.0854,     0.0566,     0.0459,     0.0557,     0.0564,     0.0322,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0903,     0.2100,     0.1089,     0.0918,     0.0835,     0.0811,     0.1050,     0.0703,     0.0728,     0.0874,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3262,     0.0972,     0.0728,     0.0493,     0.0566,     0.0620,     0.0510,     0.0664,     0.0464,     0.0547,     0.0640,     0.0525,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0004,     0.0001,     0.0001,     0.0001,     0.0000,     0.0005,     0.0001,     0.0001,     0.0001,     0.0001,     0.0003,     0.0000,     0.0000],
        [    0.5781,     0.1069,     0.0471,     0.0240,     0.0269,     0.0284,     0.0203,     0.0303,     0.0138,     0.0211,     0.0278,     0.0198,     0.0432,     0.0112,     0.0000],
        [    0.2305,     0.0850,     0.0630,     0.0437,     0.0508,     0.0588,     0.0481,     0.0649,     0.0461,     0.0513,     0.0645,     0.0486,     0.0593,     0.0396,     0.0459]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0020,     -0.0952,     -0.0977,     -0.1147,     -0.1089,     -0.1021,     -0.1187,     -0.0903,     -0.1152,     -0.1191,     -0.1172,     -0.1211,     -0.1035,     -0.1328,     -0.1299],
        [    -0.0532,     -3.4062,     -3.3594,     -3.9844,     -3.6719,     -3.0469,     -3.6094,     -3.0469,     -3.7500,     -3.6875,     -3.1562,     -3.7344,     -3.2031,     -4.1562,     -4.0312],
        [    -0.0393,     -2.1562,     -2.2344,     -2.5781,     -2.5156,     -2.0625,     -2.3750,     -2.0781,     -2.5938,     -2.5156,     -2.2812,     -2.5156,     -2.3594,     -2.9062,     -2.7188],
        [    -0.0023,     -0.5039,     -0.7344,     -0.9727,     -0.8359,     -0.4844,     -0.5664,     -0.6133,     -0.6719,     -0.6055,     -0.2656,     -0.6797,     -0.5195,     -0.5078,     -0.6836],
        [    -0.0177,     -0.3496,     -0.9961,     -1.3984,     -1.3438,     -1.3438,     -1.2734,     -1.2344,     -1.6172,     -1.4531,     -1.2422,     -1.4922,     -0.8984,     -1.7109,     -1.5625],
        [    -0.1348,     -5.5000,     -6.0312,     -7.7188,     -7.5312,     -7.7812,     -8.5625,     -6.7188,     -7.9375,     -7.6875,     -7.7188,     -8.0000,     -7.0938,     -9.2500,     -8.4375],
        [     0.0103,      0.6719,      0.1602,     -0.1226,      0.0089,      0.0654,      0.1113,     -0.0481,      0.0356,      0.2852,      0.7148,      0.0962,      0.4883,      0.3633,      0.1650],
        [     0.0139,      1.5781,      0.9023,      0.6289,      0.5078,      0.2305,      0.4980,      0.2432,      0.6016,      0.7148,      0.8867,      0.6523,      1.0469,      0.6641,      0.8750],
        [    -0.0293,     -0.7656,     -1.1094,     -1.4922,     -1.8984,     -2.1094,     -1.9141,     -1.9062,     -2.4688,     -1.6953,     -1.8984,     -1.5156,     -1.5625,     -2.5469,     -1.6250],
        [     0.0024,      0.8438,      0.1885,      0.0179,     -0.0767,     -0.1074,      0.1504,     -0.2451,     -0.2148,     -0.0300,      0.0967,      0.0649,     -0.0762,     -0.1543,      0.1777],
        [    -0.1846,     -8.6875,     -8.8125,    -10.6250,    -10.3125,    -10.1250,    -11.1875,     -9.0000,    -11.3125,    -10.7500,    -11.0000,    -11.0000,     -9.7500,    -12.4375,    -11.7500],
        [    -0.0305,     -1.2422,     -1.5312,     -1.9219,     -1.7891,     -1.6953,     -1.8906,     -1.6250,     -1.9844,     -1.8203,     -1.6562,     -1.8594,     -1.7969,     -2.1875,     -1.9219],
        [    -0.1611,     -7.4688,     -7.9062,     -9.6250,     -9.2500,     -9.0000,    -10.3750,     -7.7188,     -9.6875,     -9.5000,     -9.5625,    -10.0000,     -8.3750,    -11.0625,    -10.6875],
        [    -0.0537,     -1.7422,     -2.5625,     -3.2344,     -3.1250,     -3.0625,     -3.4062,     -3.0000,     -3.7969,     -3.3594,     -3.0938,     -3.4219,     -2.6562,     -4.0000,     -3.4531],
        [    -0.0254,     -1.0312,     -1.3203,     -1.6953,     -1.5391,     -1.3906,     -1.5938,     -1.2969,     -1.6328,     -1.5312,     -1.3047,     -1.5859,     -1.3828,     -1.7891,     -1.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8177],
        [0.4158],
        [0.2021],
        [0.1672],
        [0.8724],
        [0.2353],
        [0.0613],
        [0.2649],
        [0.1351],
        [0.9421],
        [0.2217],
        [0.8993],
        [0.3324],
        [0.2149]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0527,     0.9453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.5742,     0.4082,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.4219,     0.3652,     0.2119,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.3418,     0.3086,     0.1865,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7773,     0.0967,     0.0361,     0.0269,     0.0242,     0.0376,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.3125,     0.2793,     0.1484,     0.1270,     0.0269,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.2441,     0.2236,     0.1377,     0.1177,     0.0347,     0.1030,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.2061,     0.1924,     0.1318,     0.1094,     0.0337,     0.0967,     0.1309,     0.0933,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0091,     0.2031,     0.1592,     0.1040,     0.0903,     0.0437,     0.0825,     0.1006,     0.0776,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0080,     0.1807,     0.1279,     0.0801,     0.0703,     0.0388,     0.0635,     0.0776,     0.0603,     0.0996,     0.0879,     0.1055,     0.0000,     0.0000,     0.0000],
        [    0.5781,     0.0723,     0.0327,     0.0264,     0.0220,     0.0302,     0.0226,     0.0221,     0.0286,     0.0203,     0.0913,     0.0225,     0.0291,     0.0000,     0.0000],
        [    0.1709,     0.1289,     0.0771,     0.0598,     0.0510,     0.0461,     0.0500,     0.0535,     0.0552,     0.0552,     0.0996,     0.0593,     0.0449,     0.0486,     0.0000],
        [    0.0091,     0.1611,     0.1064,     0.0654,     0.0564,     0.0337,     0.0513,     0.0623,     0.0500,     0.0786,     0.0796,     0.0835,     0.0275,     0.0581,     0.0776]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.1260,     -0.1436,     -0.1426,     -0.1406,     -0.0986,     -0.1387,     -0.1455,     -0.1328,     -0.1523,     -0.1260,     -0.1523,     -0.1074,     -0.1455,     -0.1494],
        [    -0.0035,      2.8906,      2.2031,      1.6484,      1.4844,      1.1016,      1.3750,      1.5312,      1.3438,      1.7422,      2.0156,      1.8594,      0.6914,      1.4297,      1.7891],
        [    -0.0039,      3.5000,      3.1562,      2.6719,      2.5312,      1.7734,      2.4375,      2.6406,      2.3438,      2.9062,      2.7969,      2.9844,      1.6016,      2.5781,      2.8906],
        [    -0.0044,      5.1875,      5.0312,      4.5000,      4.3750,      3.1719,      4.2188,      4.5312,      4.0938,      4.9062,      4.4375,      4.9688,      3.0781,      4.4688,      4.8125],
        [    -0.0036,      5.0938,      5.0000,      4.5000,      4.3750,      3.0312,      4.2188,      4.5312,      4.0938,      4.9062,      4.6250,      4.9375,      3.0312,      4.5000,      4.8125],
        [    -0.0001,     -2.0781,     -3.0625,     -3.3594,     -3.4688,     -3.0312,     -3.5000,     -3.5156,     -3.2500,     -3.6094,     -2.0469,     -3.5469,     -3.2188,     -3.6719,     -3.4375],
        [    -0.0044,      6.4688,      6.3438,      5.7188,      5.5625,      4.0000,      5.3750,      5.7500,      5.1875,      6.2188,      5.7500,      6.2812,      3.9531,      5.6875,      6.0938],
        [    -0.0041,      4.6562,      4.5625,      4.0938,      3.9219,      2.7031,      3.7969,      4.0938,      3.7031,      4.4688,      4.0938,      4.5000,      2.7188,      4.0625,      4.3750],
        [    -0.0040,      3.6406,      3.5625,      3.1875,      3.0000,      1.8203,      2.8750,      3.1875,      2.8438,      3.4688,      3.3438,      3.5000,      1.9766,      3.1250,      3.4219],
        [    -0.0036,      3.1094,      2.8594,      2.4375,      2.2969,      1.5625,      2.2031,      2.4062,      2.1406,      2.6562,      2.4844,      2.7031,      1.4766,      2.3438,      2.6250],
        [     0.0017,    -11.1250,    -12.8125,    -12.7500,    -12.8750,     -9.5625,    -12.5625,    -13.1250,    -12.0000,    -13.8750,    -10.8750,    -13.6875,    -10.2500,    -13.3125,    -13.4375],
        [    -0.0038,      3.1094,      2.7656,      2.2969,      2.1719,      1.5781,      2.0781,      2.2656,      2.0156,      2.5156,      2.3906,      2.5781,      1.3750,      2.2188,      2.5000],
        [    -0.0011,     -2.0781,     -2.8750,     -3.0938,     -3.2812,     -2.9531,     -3.2500,     -3.2656,     -3.0156,     -3.3594,     -1.8516,     -3.2500,     -3.0000,     -3.3594,     -3.1719],
        [    -0.0027,     -0.2852,     -0.7969,     -1.0547,     -1.2109,     -1.3125,     -1.2344,     -1.1641,     -1.1328,     -1.1328,     -0.5430,     -1.0625,     -1.3359,     -1.2578,     -1.0547],
        [    -0.0037,      2.8750,      2.4531,      1.9688,      1.8203,      1.3047,      1.7266,      1.9219,      1.6953,      2.1562,      2.1562,      2.2188,      1.1016,      1.8516,      2.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0785],
        [0.0256],
        [0.0105],
        [0.0060],
        [0.5284],
        [0.0152],
        [0.0061],
        [0.0033],
        [0.0042],
        [0.4173],
        [0.0072],
        [0.3242],
        [0.0175],
        [0.0042]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( sizeof:0.0031hyde:0.0022 sizeof:0.0023 brittle:0.0039 Qt:0.0019 Racer:0.0017 sizeof:0.0031 DHCP:0.0022)
 DHCP
------
		(hyde:0.0022 sizeof:0.0023 brittle:0.0039 Qt:0.0019 Racer:0.0017 sizeof:0.0031 DHCP:0.0022 supremacist:0.0017)
 supremacist sizeofhydehyde� sizeofn "-ammad sizeof� appellant sizeofkered appellant
@ 2050 train 4.1116 , allloss: 4.1116, dt: 1180.16ms, fracRes: 0.2996, norm(attn): 0.4102, norm(output): 0.8789, norm(x): 1.0175, norm(y): 0.9896, norm:0.5078, tok/sec: 111062.77, flops:97.27, batch-reuse:1
@ 2051 train 4.1822 , allloss: 4.1822, dt: 697.91ms, fracRes: 0.2984, norm(attn): 0.4082, norm(output): 0.8750, norm(x): 1.0133, norm(y): 0.9896, norm:0.4303, tok/sec: 187807.20, flops:164.49, batch-reuse:1
@ 2052 train 4.1682 , allloss: 4.1682, dt: 692.62ms, fracRes: 0.2961, norm(attn): 0.4102, norm(output): 0.8750, norm(x): 1.0099, norm(y): 0.9896, norm:0.4383, tok/sec: 189239.74, flops:165.75, batch-reuse:1
@ 2053 train 4.1989 , allloss: 4.1989, dt: 698.20ms, fracRes: 0.2920, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0071, norm(y): 0.9897, norm:0.4038, tok/sec: 187729.73, flops:164.42, batch-reuse:1
@ 2054 train 4.1544 , allloss: 4.1544, dt: 704.99ms, fracRes: 0.2938, norm(attn): 0.4141, norm(output): 0.8711, norm(x): 1.0088, norm(y): 0.9897, norm:0.3919, tok/sec: 185920.58, flops:162.84, batch-reuse:1
@ 2055 train 4.1742 , allloss: 4.1742, dt: 693.38ms, fracRes: 0.2920, norm(attn): 0.4219, norm(output): 0.8711, norm(x): 1.0058, norm(y): 0.9896, norm:0.3970, tok/sec: 189033.59, flops:165.57, batch-reuse:1
@ 2056 train 4.1644 , allloss: 4.1644, dt: 698.77ms, fracRes: 0.2960, norm(attn): 0.4180, norm(output): 0.8672, norm(x): 1.0091, norm(y): 0.9896, norm:0.4063, tok/sec: 187576.51, flops:164.29, batch-reuse:1
@ 2057 train 4.2712 , allloss: 4.2712, dt: 705.85ms, fracRes: 0.2933, norm(attn): 0.4082, norm(output): 0.8750, norm(x): 1.0122, norm(y): 0.9896, norm:0.4514, tok/sec: 185693.81, flops:162.64, batch-reuse:1
@ 2058 train 4.1101 , allloss: 4.1101, dt: 705.04ms, fracRes: 0.3014, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0149, norm(y): 0.9895, norm:0.6111, tok/sec: 185906.06, flops:162.83, batch-reuse:1
@ 2059 train 4.1339 , allloss: 4.1339, dt: 700.07ms, fracRes: 0.2926, norm(attn): 0.4082, norm(output): 0.8750, norm(x): 1.0113, norm(y): 0.9895, norm:0.5412, tok/sec: 187228.04, flops:163.98, batch-reuse:1
@ 2060 train 4.1759 , allloss: 4.1759, dt: 698.68ms, fracRes: 0.2949, norm(attn): 0.4102, norm(output): 0.8750, norm(x): 1.0125, norm(y): 0.9896, norm:0.4414, tok/sec: 187599.43, flops:164.31, batch-reuse:1
@ 2061 train 4.1709 , allloss: 4.1709, dt: 688.00ms, fracRes: 0.3007, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0220, norm(y): 0.9897, norm:0.5524, tok/sec: 190510.85, flops:166.86, batch-reuse:1
@ 2062 train 4.1171 , allloss: 4.1171, dt: 697.40ms, fracRes: 0.2943, norm(attn): 0.4258, norm(output): 0.8711, norm(x): 1.0081, norm(y): 0.9898, norm:0.5394, tok/sec: 187942.93, flops:164.61, batch-reuse:1
@ 2063 train 4.2513 , allloss: 4.2513, dt: 683.35ms, fracRes: 0.2953, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0121, norm(y): 0.9898, norm:0.4167, tok/sec: 191808.25, flops:168.00, batch-reuse:1
@ 2064 train 4.1697 , allloss: 4.1697, dt: 705.74ms, fracRes: 0.2958, norm(attn): 0.4102, norm(output): 0.8711, norm(x): 1.0107, norm(y): 0.9897, norm:0.4361, tok/sec: 185722.73, flops:162.67, batch-reuse:1
@ 2065 train 5.0456 , allloss: 5.0456, dt: 700.76ms, fracRes: 0.3048, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0282, norm(y): 0.9901, norm:0.7603, tok/sec: 187041.65, flops:163.82, batch-reuse:1
@ 2066 train 4.2842 , allloss: 4.2842, dt: 703.10ms, fracRes: 0.2948, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0228, norm(y): 0.9899, norm:0.8992, tok/sec: 186420.84, flops:163.28, batch-reuse:1
@ 2067 train 4.1510 , allloss: 4.1510, dt: 695.88ms, fracRes: 0.2974, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0139, norm(y): 0.9898, norm:0.5276, tok/sec: 188353.62, flops:164.97, batch-reuse:1
@ 2068 train 4.2407 , allloss: 4.2407, dt: 694.83ms, fracRes: 0.3020, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0171, norm(y): 0.9896, norm:0.5654, tok/sec: 188639.42, flops:165.22, batch-reuse:1
@ 2069 train 4.1835 , allloss: 4.1835, dt: 699.05ms, fracRes: 0.2986, norm(attn): 0.4121, norm(output): 0.8867, norm(x): 1.0256, norm(y): 0.9898, norm:0.5031, tok/sec: 187500.70, flops:164.22, batch-reuse:1
@ 2070 train 4.2488 , allloss: 4.2488, dt: 693.01ms, fracRes: 0.2939, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0220, norm(y): 0.9900, norm:0.5684, tok/sec: 189134.46, flops:165.65, batch-reuse:1
@ 2071 train 4.2116 , allloss: 4.2116, dt: 705.24ms, fracRes: 0.2999, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0202, norm(y): 0.9897, norm:0.4530, tok/sec: 185854.90, flops:162.78, batch-reuse:1
@ 2072 train 4.1963 , allloss: 4.1963, dt: 705.01ms, fracRes: 0.3032, norm(attn): 0.4238, norm(output): 0.8750, norm(x): 1.0209, norm(y): 0.9896, norm:0.4505, tok/sec: 185913.92, flops:162.83, batch-reuse:1
@ 2073 train 4.1795 , allloss: 4.1795, dt: 705.88ms, fracRes: 0.2991, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0200, norm(y): 0.9898, norm:0.4313, tok/sec: 185686.85, flops:162.63, batch-reuse:1
@ 2074 train 4.1962 , allloss: 4.1962, dt: 707.15ms, fracRes: 0.2971, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0186, norm(y): 0.9897, norm:0.4350, tok/sec: 185352.85, flops:162.34, batch-reuse:1
@ 2075 train 4.1420 , allloss: 4.1420, dt: 694.62ms, fracRes: 0.2988, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0207, norm(y): 0.9897, norm:0.4278, tok/sec: 188696.46, flops:165.27, batch-reuse:1
@ 2076 train 4.0987 , allloss: 4.0987, dt: 702.44ms, fracRes: 0.3007, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0253, norm(y): 0.9898, norm:0.4498, tok/sec: 186594.66, flops:163.43, batch-reuse:1
@ 2077 train 4.1984 , allloss: 4.1984, dt: 701.74ms, fracRes: 0.2987, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0206, norm(y): 0.9898, norm:0.3859, tok/sec: 186781.10, flops:163.59, batch-reuse:1
@ 2078 train 4.4770 , allloss: 4.4770, dt: 703.11ms, fracRes: 0.3036, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0238, norm(y): 0.9898, norm:0.6006, tok/sec: 186418.76, flops:163.28, batch-reuse:1
@ 2079 train 4.2501 , allloss: 4.2501, dt: 694.96ms, fracRes: 0.2993, norm(attn): 0.4141, norm(output): 0.8828, norm(x): 1.0240, norm(y): 0.9898, norm:0.5289, tok/sec: 188603.11, flops:165.19, batch-reuse:1
@ 2080 train 4.1647 , allloss: 4.1647, dt: 681.50ms, fracRes: 0.3081, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0273, norm(y): 0.9895, norm:0.5213, tok/sec: 192329.10, flops:168.45, batch-reuse:1
@ 2081 train 4.2257 , allloss: 4.2257, dt: 678.07ms, fracRes: 0.2994, norm(attn): 0.4238, norm(output): 0.8789, norm(x): 1.0212, norm(y): 0.9898, norm:0.4485, tok/sec: 193302.17, flops:169.30, batch-reuse:1
@ 2082 train 4.1932 , allloss: 4.1932, dt: 683.10ms, fracRes: 0.2967, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0160, norm(y): 0.9899, norm:0.4163, tok/sec: 191878.54, flops:168.06, batch-reuse:1
@ 2083 train 4.0735 , allloss: 4.0735, dt: 697.20ms, fracRes: 0.3015, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0272, norm(y): 0.9897, norm:0.4320, tok/sec: 187997.56, flops:164.66, batch-reuse:1
@ 2084 train 4.3482 , allloss: 4.3482, dt: 696.96ms, fracRes: 0.2873, norm(attn): 0.4121, norm(output): 0.8828, norm(x): 1.0256, norm(y): 0.9902, norm:0.4671, tok/sec: 188062.00, flops:164.72, batch-reuse:1
@ 2085 train 4.1689 , allloss: 4.1689, dt: 695.91ms, fracRes: 0.3040, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0253, norm(y): 0.9895, norm:0.5028, tok/sec: 188347.17, flops:164.96, batch-reuse:1
@ 2086 train 4.0753 , allloss: 4.0753, dt: 692.90ms, fracRes: 0.3081, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0255, norm(y): 0.9894, norm:0.4378, tok/sec: 189163.36, flops:165.68, batch-reuse:1
@ 2087 train 4.0986 , allloss: 4.0986, dt: 695.03ms, fracRes: 0.2997, norm(attn): 0.4258, norm(output): 0.8750, norm(x): 1.0216, norm(y): 0.9897, norm:0.4960, tok/sec: 188585.84, flops:165.17, batch-reuse:1
@ 2088 train 4.2216 , allloss: 4.2216, dt: 687.41ms, fracRes: 0.3012, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0233, norm(y): 0.9896, norm:0.4185, tok/sec: 190674.45, flops:167.00, batch-reuse:1
@ 2089 train 4.1646 , allloss: 4.1646, dt: 695.26ms, fracRes: 0.3013, norm(attn): 0.4121, norm(output): 0.8789, norm(x): 1.0258, norm(y): 0.9895, norm:0.4303, tok/sec: 188521.23, flops:165.12, batch-reuse:1
@ 2090 train 4.1443 , allloss: 4.1443, dt: 690.56ms, fracRes: 0.2980, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0262, norm(y): 0.9896, norm:0.4119, tok/sec: 189806.40, flops:166.24, batch-reuse:1
@ 2091 train 4.1672 , allloss: 4.1672, dt: 684.38ms, fracRes: 0.3005, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0238, norm(y): 0.9897, norm:0.4252, tok/sec: 191520.65, flops:167.74, batch-reuse:1
@ 2092 train 4.1331 , allloss: 4.1331, dt: 691.04ms, fracRes: 0.3060, norm(attn): 0.4238, norm(output): 0.8828, norm(x): 1.0316, norm(y): 0.9895, norm:0.4018, tok/sec: 189674.83, flops:166.13, batch-reuse:1
@ 2093 train 4.1688 , allloss: 4.1688, dt: 700.90ms, fracRes: 0.3031, norm(attn): 0.4277, norm(output): 0.8789, norm(x): 1.0218, norm(y): 0.9897, norm:0.3703, tok/sec: 187006.40, flops:163.79, batch-reuse:1
@ 2094 train 4.1449 , allloss: 4.1449, dt: 692.49ms, fracRes: 0.3054, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0287, norm(y): 0.9898, norm:0.4125, tok/sec: 189276.74, flops:165.78, batch-reuse:1
@ 2095 train 4.0595 , allloss: 4.0595, dt: 699.27ms, fracRes: 0.3000, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0267, norm(y): 0.9898, norm:0.3676, tok/sec: 187441.76, flops:164.17, batch-reuse:1
@ 2096 train 4.2367 , allloss: 4.2367, dt: 709.64ms, fracRes: 0.3002, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0275, norm(y): 0.9898, norm:0.3686, tok/sec: 184700.92, flops:161.77, batch-reuse:1
@ 2097 train 4.1677 , allloss: 4.1677, dt: 710.51ms, fracRes: 0.2955, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0182, norm(y): 0.9898, norm:0.3535, tok/sec: 184477.05, flops:161.58, batch-reuse:1
@ 2098 train 4.0499 , allloss: 4.0499, dt: 705.79ms, fracRes: 0.2963, norm(attn): 0.4219, norm(output): 0.8750, norm(x): 1.0194, norm(y): 0.9898, norm:0.3684, tok/sec: 185708.87, flops:162.65, batch-reuse:1
@ 2099 train 4.1538 , allloss: 4.1538, dt: 691.96ms, fracRes: 0.2916, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0174, norm(y): 0.9899, norm:0.3683, tok/sec: 189422.63, flops:165.91, batch-reuse:1
@ 2100 train 4.1260 , allloss: 4.1260, dt: 709.91ms, fracRes: 0.2950, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0164, norm(y): 0.9899, norm:0.3707, tok/sec: 184632.56, flops:161.71, batch-reuse:1
@ 2101 train 4.1345 , allloss: 4.1345, dt: 690.60ms, fracRes: 0.2985, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0144, norm(y): 0.9897, norm:0.3473, tok/sec: 189793.68, flops:166.23, batch-reuse:1
@ 2102 train 4.0832 , allloss: 4.0832, dt: 696.23ms, fracRes: 0.3021, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0195, norm(y): 0.9897, norm:0.3768, tok/sec: 188259.71, flops:164.89, batch-reuse:1
@ 2103 train 4.1280 , allloss: 4.1280, dt: 702.09ms, fracRes: 0.2973, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0171, norm(y): 0.9899, norm:0.3626, tok/sec: 186688.06, flops:163.51, batch-reuse:1
@ 2104 train 4.1199 , allloss: 4.1199, dt: 698.04ms, fracRes: 0.2984, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0175, norm(y): 0.9898, norm:0.3680, tok/sec: 187770.38, flops:164.46, batch-reuse:1
@ 2105 train 4.0553 , allloss: 4.0553, dt: 705.58ms, fracRes: 0.3051, norm(attn): 0.4121, norm(output): 0.8750, norm(x): 1.0225, norm(y): 0.9896, norm:0.4456, tok/sec: 185764.46, flops:162.70, batch-reuse:1
@ 2106 train 4.1094 , allloss: 4.1094, dt: 706.64ms, fracRes: 0.2993, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0158, norm(y): 0.9897, norm:0.4007, tok/sec: 185485.81, flops:162.46, batch-reuse:1
@ 2107 train 4.1512 , allloss: 4.1512, dt: 704.72ms, fracRes: 0.2905, norm(attn): 0.4238, norm(output): 0.8789, norm(x): 1.0142, norm(y): 0.9900, norm:0.4046, tok/sec: 185990.78, flops:162.90, batch-reuse:1
@ 2108 train 4.2707 , allloss: 4.2707, dt: 688.01ms, fracRes: 0.2974, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0215, norm(y): 0.9900, norm:0.5080, tok/sec: 190509.66, flops:166.86, batch-reuse:1
@ 2109 train 4.0955 , allloss: 4.0955, dt: 706.65ms, fracRes: 0.3015, norm(attn): 0.4160, norm(output): 0.8750, norm(x): 1.0228, norm(y): 0.9896, norm:0.5103, tok/sec: 185482.99, flops:162.46, batch-reuse:1
@ 2110 train 4.1019 , allloss: 4.1019, dt: 690.50ms, fracRes: 0.3055, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0197, norm(y): 0.9894, norm:0.4692, tok/sec: 189822.32, flops:166.26, batch-reuse:1
@ 2111 train 4.0896 , allloss: 4.0896, dt: 695.08ms, fracRes: 0.3024, norm(attn): 0.4160, norm(output): 0.8750, norm(x): 1.0153, norm(y): 0.9895, norm:0.4089, tok/sec: 188571.99, flops:165.16, batch-reuse:1
@ 2112 train 4.1314 , allloss: 4.1314, dt: 678.51ms, fracRes: 0.2958, norm(attn): 0.4160, norm(output): 0.8750, norm(x): 1.0159, norm(y): 0.9898, norm:0.3813, tok/sec: 193176.31, flops:169.19, batch-reuse:1
@ 2113 train 4.0952 , allloss: 4.0952, dt: 697.52ms, fracRes: 0.3027, norm(attn): 0.4160, norm(output): 0.8750, norm(x): 1.0232, norm(y): 0.9896, norm:0.3980, tok/sec: 187911.39, flops:164.58, batch-reuse:1
@ 2114 train 4.1403 , allloss: 4.1403, dt: 688.98ms, fracRes: 0.2998, norm(attn): 0.4141, norm(output): 0.8750, norm(x): 1.0192, norm(y): 0.9896, norm:0.4211, tok/sec: 190240.42, flops:166.62, batch-reuse:1
@ 2115 train 4.1491 , allloss: 4.1491, dt: 697.55ms, fracRes: 0.3019, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0226, norm(y): 0.9896, norm:0.3901, tok/sec: 187904.45, flops:164.58, batch-reuse:1
@ 2116 train 4.1804 , allloss: 4.1804, dt: 689.44ms, fracRes: 0.2988, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0196, norm(y): 0.9897, norm:0.3953, tok/sec: 190112.86, flops:166.51, batch-reuse:1
@ 2117 train 4.0860 , allloss: 4.0860, dt: 703.41ms, fracRes: 0.2963, norm(attn): 0.4258, norm(output): 0.8750, norm(x): 1.0167, norm(y): 0.9898, norm:0.3873, tok/sec: 186338.32, flops:163.21, batch-reuse:1
@ 2118 train 4.0328 , allloss: 4.0328, dt: 695.71ms, fracRes: 0.3018, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0206, norm(y): 0.9897, norm:0.3814, tok/sec: 188399.52, flops:165.01, batch-reuse:1
@ 2119 train 4.2007 , allloss: 4.2007, dt: 706.06ms, fracRes: 0.3035, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0243, norm(y): 0.9897, norm:0.3704, tok/sec: 185637.82, flops:162.59, batch-reuse:1
@ 2120 train 4.1198 , allloss: 4.1198, dt: 691.33ms, fracRes: 0.3025, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0234, norm(y): 0.9897, norm:0.4026, tok/sec: 189594.57, flops:166.06, batch-reuse:1
@ 2121 train 4.0774 , allloss: 4.0774, dt: 686.75ms, fracRes: 0.3065, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0294, norm(y): 0.9896, norm:0.4564, tok/sec: 190858.61, flops:167.16, batch-reuse:1
@ 2122 train 4.0915 , allloss: 4.0915, dt: 706.48ms, fracRes: 0.3021, norm(attn): 0.4160, norm(output): 0.8789, norm(x): 1.0237, norm(y): 0.9897, norm:0.3637, tok/sec: 185529.50, flops:162.50, batch-reuse:1
@ 2123 train 4.1532 , allloss: 4.1532, dt: 707.10ms, fracRes: 0.2972, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0164, norm(y): 0.9898, norm:0.3585, tok/sec: 185366.23, flops:162.35, batch-reuse:1
@ 2124 train 4.0602 , allloss: 4.0602, dt: 700.70ms, fracRes: 0.2990, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0188, norm(y): 0.9897, norm:0.4139, tok/sec: 187058.39, flops:163.84, batch-reuse:1
@ 2125 train 4.1724 , allloss: 4.1724, dt: 687.54ms, fracRes: 0.2976, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0180, norm(y): 0.9898, norm:0.4217, tok/sec: 190639.01, flops:166.97, batch-reuse:1
@ 2126 train 4.1426 , allloss: 4.1426, dt: 702.08ms, fracRes: 0.2985, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0210, norm(y): 0.9899, norm:0.4687, tok/sec: 186690.02, flops:163.51, batch-reuse:1
@ 2127 train 4.1764 , allloss: 4.1764, dt: 696.40ms, fracRes: 0.3025, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0232, norm(y): 0.9897, norm:0.4274, tok/sec: 188212.34, flops:164.85, batch-reuse:1
@ 2128 train 4.0387 , allloss: 4.0387, dt: 698.49ms, fracRes: 0.2985, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0167, norm(y): 0.9898, norm:0.4085, tok/sec: 187651.11, flops:164.36, batch-reuse:1
@ 2129 train 4.1560 , allloss: 4.1560, dt: 701.97ms, fracRes: 0.2946, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0179, norm(y): 0.9899, norm:0.3976, tok/sec: 186719.25, flops:163.54, batch-reuse:1
@ 2130 train 4.0277 , allloss: 4.0277, dt: 692.78ms, fracRes: 0.3029, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0236, norm(y): 0.9896, norm:0.4074, tok/sec: 189196.88, flops:165.71, batch-reuse:1
@ 2131 train 4.1248 , allloss: 4.1248, dt: 703.48ms, fracRes: 0.3018, norm(attn): 0.4199, norm(output): 0.8828, norm(x): 1.0234, norm(y): 0.9896, norm:0.3756, tok/sec: 186318.68, flops:163.19, batch-reuse:1
@ 2132 train 4.1132 , allloss: 4.1132, dt: 703.02ms, fracRes: 0.3089, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0384, norm(y): 0.9896, norm:0.4354, tok/sec: 186441.33, flops:163.30, batch-reuse:1
@ 2133 train 4.1137 , allloss: 4.1137, dt: 704.14ms, fracRes: 0.3055, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0277, norm(y): 0.9896, norm:0.3725, tok/sec: 186143.81, flops:163.04, batch-reuse:1
@ 2134 train 4.0743 , allloss: 4.0743, dt: 701.22ms, fracRes: 0.3054, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0244, norm(y): 0.9896, norm:0.4065, tok/sec: 186920.12, flops:163.72, batch-reuse:1
@ 2135 train 4.1719 , allloss: 4.1719, dt: 693.65ms, fracRes: 0.3052, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0257, norm(y): 0.9896, norm:0.3649, tok/sec: 188960.69, flops:165.50, batch-reuse:1
@ 2136 train 4.0641 , allloss: 4.0641, dt: 696.17ms, fracRes: 0.3009, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0197, norm(y): 0.9896, norm:0.3695, tok/sec: 188275.18, flops:164.90, batch-reuse:1
@ 2137 train 4.0371 , allloss: 4.0371, dt: 701.04ms, fracRes: 0.2987, norm(attn): 0.4238, norm(output): 0.8750, norm(x): 1.0137, norm(y): 0.9897, norm:0.3858, tok/sec: 186968.18, flops:163.76, batch-reuse:1
@ 2138 train 4.0806 , allloss: 4.0806, dt: 693.12ms, fracRes: 0.2991, norm(attn): 0.4199, norm(output): 0.8750, norm(x): 1.0144, norm(y): 0.9897, norm:0.4167, tok/sec: 189105.31, flops:165.63, batch-reuse:1
@ 2139 train 4.0877 , allloss: 4.0877, dt: 696.29ms, fracRes: 0.3001, norm(attn): 0.4219, norm(output): 0.8750, norm(x): 1.0199, norm(y): 0.9896, norm:0.4291, tok/sec: 188244.11, flops:164.87, batch-reuse:1
@ 2140 train 4.1087 , allloss: 4.1087, dt: 695.45ms, fracRes: 0.3005, norm(attn): 0.4219, norm(output): 0.8750, norm(x): 1.0199, norm(y): 0.9896, norm:0.4056, tok/sec: 188471.98, flops:165.07, batch-reuse:1
@ 2141 train 4.0048 , allloss: 4.0048, dt: 692.35ms, fracRes: 0.3039, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0239, norm(y): 0.9895, norm:0.3929, tok/sec: 189315.26, flops:165.81, batch-reuse:1
@ 2142 train 4.0324 , allloss: 4.0324, dt: 690.72ms, fracRes: 0.3034, norm(attn): 0.4238, norm(output): 0.8750, norm(x): 1.0219, norm(y): 0.9897, norm:0.3734, tok/sec: 189762.63, flops:166.20, batch-reuse:1
@ 2143 train 4.1047 , allloss: 4.1047, dt: 697.67ms, fracRes: 0.3056, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0257, norm(y): 0.9897, norm:0.3865, tok/sec: 187871.57, flops:164.55, batch-reuse:1
@ 2144 train 4.0774 , allloss: 4.0774, dt: 700.68ms, fracRes: 0.3068, norm(attn): 0.4121, norm(output): 0.8828, norm(x): 1.0284, norm(y): 0.9895, norm:0.3722, tok/sec: 187063.04, flops:163.84, batch-reuse:1
@ 2145 train 4.0232 , allloss: 4.0232, dt: 701.81ms, fracRes: 0.3102, norm(attn): 0.4141, norm(output): 0.8828, norm(x): 1.0354, norm(y): 0.9894, norm:0.4116, tok/sec: 186763.27, flops:163.58, batch-reuse:1
@ 2146 train 4.3075 , allloss: 4.3075, dt: 692.72ms, fracRes: 0.3190, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0442, norm(y): 0.9897, norm:0.5756, tok/sec: 189214.07, flops:165.72, batch-reuse:1
@ 2147 train 4.0453 , allloss: 4.0453, dt: 700.92ms, fracRes: 0.3122, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0281, norm(y): 0.9894, norm:0.4278, tok/sec: 186999.41, flops:163.78, batch-reuse:1
@ 2148 train 4.0840 , allloss: 4.0840, dt: 699.54ms, fracRes: 0.3049, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0240, norm(y): 0.9896, norm:0.4199, tok/sec: 187369.38, flops:164.11, batch-reuse:1
@ 2149 train 4.0866 , allloss: 4.0866, dt: 700.54ms, fracRes: 0.2942, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0220, norm(y): 0.9898, norm:0.4356, tok/sec: 187101.36, flops:163.87, batch-reuse:1
@ 2150 train 4.0796 , allloss: 4.0796, dt: 697.87ms, fracRes: 0.2880, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0194, norm(y): 0.9899, norm:0.3885, tok/sec: 187817.15, flops:164.50, batch-reuse:1
@ 2151 train 4.0508 , allloss: 4.0508, dt: 696.98ms, fracRes: 0.2934, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0201, norm(y): 0.9899, norm:0.4107, tok/sec: 188055.89, flops:164.71, batch-reuse:1
@ 2152 train 4.1545 , allloss: 4.1545, dt: 695.48ms, fracRes: 0.2933, norm(attn): 0.4160, norm(output): 0.8789, norm(x): 1.0158, norm(y): 0.9899, norm:0.3877, tok/sec: 188463.07, flops:165.07, batch-reuse:1
@ 2153 train 4.0671 , allloss: 4.0671, dt: 686.74ms, fracRes: 0.2917, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0163, norm(y): 0.9900, norm:0.4232, tok/sec: 190861.72, flops:167.17, batch-reuse:1
@ 2154 train 4.1444 , allloss: 4.1444, dt: 697.94ms, fracRes: 0.3023, norm(attn): 0.4180, norm(output): 0.8867, norm(x): 1.0265, norm(y): 0.9898, norm:0.4286, tok/sec: 187798.03, flops:164.48, batch-reuse:1
@ 2155 train 4.0815 , allloss: 4.0815, dt: 692.04ms, fracRes: 0.3044, norm(attn): 0.4141, norm(output): 0.8789, norm(x): 1.0231, norm(y): 0.9896, norm:0.4101, tok/sec: 189400.44, flops:165.89, batch-reuse:1
@ 2156 train 4.0885 , allloss: 4.0885, dt: 683.72ms, fracRes: 0.3061, norm(attn): 0.4180, norm(output): 0.8750, norm(x): 1.0224, norm(y): 0.9896, norm:0.4179, tok/sec: 191703.91, flops:167.90, batch-reuse:1
@ 2157 train 4.0963 , allloss: 4.0963, dt: 689.02ms, fracRes: 0.3066, norm(attn): 0.4219, norm(output): 0.8828, norm(x): 1.0322, norm(y): 0.9897, norm:0.4192, tok/sec: 190230.08, flops:166.61, batch-reuse:1
@ 2158 train 4.0958 , allloss: 4.0958, dt: 700.44ms, fracRes: 0.3043, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0244, norm(y): 0.9895, norm:0.4039, tok/sec: 187128.30, flops:163.90, batch-reuse:1
@ 2159 train 4.0479 , allloss: 4.0479, dt: 703.38ms, fracRes: 0.3019, norm(attn): 0.4238, norm(output): 0.8789, norm(x): 1.0241, norm(y): 0.9896, norm:0.4179, tok/sec: 186344.76, flops:163.21, batch-reuse:1
@ 2160 train 4.0086 , allloss: 4.0086, dt: 707.02ms, fracRes: 0.3130, norm(attn): 0.4180, norm(output): 0.8867, norm(x): 1.0399, norm(y): 0.9894, norm:0.4448, tok/sec: 185385.67, flops:162.37, batch-reuse:1
@ 2161 train 4.0016 , allloss: 4.0016, dt: 687.69ms, fracRes: 0.3102, norm(attn): 0.4238, norm(output): 0.8867, norm(x): 1.0350, norm(y): 0.9893, norm:0.5105, tok/sec: 190596.78, flops:166.94, batch-reuse:1
@ 2162 train 4.0159 , allloss: 4.0159, dt: 683.98ms, fracRes: 0.2995, norm(attn): 0.4297, norm(output): 0.8750, norm(x): 1.0182, norm(y): 0.9898, norm:0.4770, tok/sec: 191632.21, flops:167.84, batch-reuse:1
@ 2163 train 4.1127 , allloss: 4.1127, dt: 706.93ms, fracRes: 0.3039, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0244, norm(y): 0.9898, norm:0.4144, tok/sec: 185410.30, flops:162.39, batch-reuse:1
@ 2164 train 3.9876 , allloss: 3.9876, dt: 675.53ms, fracRes: 0.3127, norm(attn): 0.4277, norm(output): 0.8750, norm(x): 1.0284, norm(y): 0.9897, norm:0.4506, tok/sec: 194028.68, flops:169.94, batch-reuse:1
@ 2165 train 4.0023 , allloss: 4.0023, dt: 698.26ms, fracRes: 0.3035, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0245, norm(y): 0.9899, norm:0.3958, tok/sec: 187713.19, flops:164.41, batch-reuse:1
@ 2166 train 4.0420 , allloss: 4.0420, dt: 685.01ms, fracRes: 0.3026, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0264, norm(y): 0.9898, norm:0.4140, tok/sec: 191343.60, flops:167.59, batch-reuse:1
@ 2167 train 4.0724 , allloss: 4.0724, dt: 692.93ms, fracRes: 0.3000, norm(attn): 0.4199, norm(output): 0.8789, norm(x): 1.0267, norm(y): 0.9899, norm:0.4044, tok/sec: 189155.42, flops:165.67, batch-reuse:1
@ 2168 train 4.1085 , allloss: 4.1085, dt: 688.10ms, fracRes: 0.3021, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0295, norm(y): 0.9900, norm:0.3725, tok/sec: 190483.91, flops:166.84, batch-reuse:1
@ 2169 train 4.1005 , allloss: 4.1005, dt: 685.66ms, fracRes: 0.3033, norm(attn): 0.4238, norm(output): 0.8867, norm(x): 1.0325, norm(y): 0.9901, norm:0.4157, tok/sec: 191161.97, flops:167.43, batch-reuse:1
@ 2170 train 4.1168 , allloss: 4.1168, dt: 686.60ms, fracRes: 0.3059, norm(attn): 0.4238, norm(output): 0.8828, norm(x): 1.0326, norm(y): 0.9898, norm:0.4125, tok/sec: 190900.89, flops:167.20, batch-reuse:1
@ 2171 train 4.1161 , allloss: 4.1161, dt: 686.31ms, fracRes: 0.3082, norm(attn): 0.4180, norm(output): 0.8789, norm(x): 1.0304, norm(y): 0.9897, norm:0.4294, tok/sec: 190981.93, flops:167.27, batch-reuse:1
@ 2172 train 4.1586 , allloss: 4.1586, dt: 690.10ms, fracRes: 0.3082, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0316, norm(y): 0.9898, norm:0.3820, tok/sec: 189931.58, flops:166.35, batch-reuse:1
@ 2173 train 4.0561 , allloss: 4.0561, dt: 681.37ms, fracRes: 0.3009, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0290, norm(y): 0.9899, norm:0.4024, tok/sec: 192365.71, flops:168.48, batch-reuse:1
@ 2174 train 4.0805 , allloss: 4.0805, dt: 692.85ms, fracRes: 0.3031, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0304, norm(y): 0.9898, norm:0.4161, tok/sec: 189178.59, flops:165.69, batch-reuse:1
@ 2175 train 4.0428 , allloss: 4.0428, dt: 694.89ms, fracRes: 0.3050, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0277, norm(y): 0.9897, norm:0.3618, tok/sec: 188623.88, flops:165.21, batch-reuse:1
@ 2176 train 4.0673 , allloss: 4.0673, dt: 698.87ms, fracRes: 0.3023, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0235, norm(y): 0.9898, norm:0.3741, tok/sec: 187548.36, flops:164.27, batch-reuse:1
@ 2177 train 4.0863 , allloss: 4.0863, dt: 693.10ms, fracRes: 0.2961, norm(attn): 0.4219, norm(output): 0.8750, norm(x): 1.0198, norm(y): 0.9899, norm:0.3574, tok/sec: 189111.04, flops:165.63, batch-reuse:1
@ 2178 train 4.0969 , allloss: 4.0969, dt: 687.07ms, fracRes: 0.3024, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0294, norm(y): 0.9897, norm:0.3478, tok/sec: 190770.79, flops:167.09, batch-reuse:1
@ 2179 train 4.0748 , allloss: 4.0748, dt: 695.83ms, fracRes: 0.3048, norm(attn): 0.4160, norm(output): 0.8828, norm(x): 1.0348, norm(y): 0.9896, norm:0.3840, tok/sec: 188367.56, flops:164.98, batch-reuse:1
@ 2180 train 4.0103 , allloss: 4.0103, dt: 692.80ms, fracRes: 0.3024, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0309, norm(y): 0.9897, norm:0.3349, tok/sec: 189192.32, flops:165.71, batch-reuse:1
@ 2181 train 3.9942 , allloss: 3.9942, dt: 685.45ms, fracRes: 0.3053, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0341, norm(y): 0.9897, norm:0.3768, tok/sec: 191219.41, flops:167.48, batch-reuse:1
@ 2182 train 4.0381 , allloss: 4.0381, dt: 693.43ms, fracRes: 0.3057, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0345, norm(y): 0.9896, norm:0.3974, tok/sec: 189019.29, flops:165.55, batch-reuse:1
@ 2183 train 3.8938 , allloss: 3.8938, dt: 697.65ms, fracRes: 0.3003, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0303, norm(y): 0.9897, norm:0.3619, tok/sec: 187875.36, flops:164.55, batch-reuse:1
@ 2184 train 3.8077 , allloss: 3.8077, dt: 696.93ms, fracRes: 0.3055, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0307, norm(y): 0.9895, norm:0.4120, tok/sec: 188070.23, flops:164.72, batch-reuse:1
@ 2185 train 4.0101 , allloss: 4.0101, dt: 697.83ms, fracRes: 0.3078, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0374, norm(y): 0.9896, norm:0.4048, tok/sec: 187826.84, flops:164.51, batch-reuse:1
@ 2186 train 3.9655 , allloss: 3.9655, dt: 687.80ms, fracRes: 0.3096, norm(attn): 0.4258, norm(output): 0.8750, norm(x): 1.0255, norm(y): 0.9896, norm:0.3910, tok/sec: 190566.65, flops:166.91, batch-reuse:1
@ 2187 train 3.9391 , allloss: 3.9391, dt: 700.31ms, fracRes: 0.3092, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0255, norm(y): 0.9897, norm:0.3891, tok/sec: 187163.34, flops:163.93, batch-reuse:1
@ 2188 train 3.9586 , allloss: 3.9586, dt: 683.43ms, fracRes: 0.3080, norm(attn): 0.4219, norm(output): 0.8789, norm(x): 1.0206, norm(y): 0.9896, norm:0.3740, tok/sec: 191784.43, flops:167.98, batch-reuse:1
@ 2189 train 3.9819 , allloss: 3.9819, dt: 697.34ms, fracRes: 0.3035, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0229, norm(y): 0.9897, norm:0.3849, tok/sec: 187958.93, flops:164.62, batch-reuse:1
@ 2190 train 3.8085 , allloss: 3.8085, dt: 702.72ms, fracRes: 0.3051, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0317, norm(y): 0.9898, norm:0.6047, tok/sec: 186522.04, flops:163.37, batch-reuse:1
@ 2191 train 3.9772 , allloss: 3.9772, dt: 688.52ms, fracRes: 0.3038, norm(attn): 0.4219, norm(output): 0.8828, norm(x): 1.0284, norm(y): 0.9898, norm:0.4672, tok/sec: 190366.57, flops:166.73, batch-reuse:1
@ 2192 train 3.9451 , allloss: 3.9451, dt: 700.92ms, fracRes: 0.3113, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0300, norm(y): 0.9895, norm:0.4161, tok/sec: 187001.25, flops:163.79, batch-reuse:1
@ 2193 train 3.9096 , allloss: 3.9096, dt: 699.84ms, fracRes: 0.3125, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0355, norm(y): 0.9898, norm:0.4246, tok/sec: 187289.59, flops:164.04, batch-reuse:1
@ 2194 train 4.0671 , allloss: 4.0671, dt: 699.32ms, fracRes: 0.3049, norm(attn): 0.4316, norm(output): 0.8828, norm(x): 1.0276, norm(y): 0.9900, norm:0.3977, tok/sec: 187427.89, flops:164.16, batch-reuse:1
@ 2195 train 3.9878 , allloss: 3.9878, dt: 701.04ms, fracRes: 0.3085, norm(attn): 0.4336, norm(output): 0.8828, norm(x): 1.0330, norm(y): 0.9898, norm:0.4687, tok/sec: 186967.48, flops:163.76, batch-reuse:1
@ 2196 train 4.0589 , allloss: 4.0589, dt: 699.71ms, fracRes: 0.3049, norm(attn): 0.4277, norm(output): 0.8789, norm(x): 1.0322, norm(y): 0.9899, norm:0.3979, tok/sec: 187323.86, flops:164.07, batch-reuse:1
@ 2197 train 3.8994 , allloss: 3.8994, dt: 693.07ms, fracRes: 0.3122, norm(attn): 0.4219, norm(output): 0.8906, norm(x): 1.0415, norm(y): 0.9897, norm:0.4131, tok/sec: 189117.87, flops:165.64, batch-reuse:1
@ 2198 train 3.9513 , allloss: 3.9513, dt: 710.59ms, fracRes: 0.3125, norm(attn): 0.4277, norm(output): 0.8789, norm(x): 1.0326, norm(y): 0.9896, norm:0.3897, tok/sec: 184454.02, flops:161.56, batch-reuse:1
@ 2199 train 4.0479 , allloss: 4.0479, dt: 710.54ms, fracRes: 0.3075, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0313, norm(y): 0.9899, norm:0.4195, tok/sec: 184467.89, flops:161.57, batch-reuse:1
@ 2200 train 3.9264 , allloss: 3.9264, dt: 703.33ms, fracRes: 0.3034, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0297, norm(y): 0.9899, norm:0.3850, tok/sec: 186360.30, flops:163.22, batch-reuse:1
@ 2201 train 3.9857 , allloss: 3.9857, dt: 711.99ms, fracRes: 0.2999, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0250, norm(y): 0.9901, norm:0.4291, tok/sec: 184093.06, flops:161.24, batch-reuse:1
@ 2202 train 4.0205 , allloss: 4.0205, dt: 710.17ms, fracRes: 0.2983, norm(attn): 0.4277, norm(output): 0.8828, norm(x): 1.0271, norm(y): 0.9900, norm:0.4036, tok/sec: 184564.19, flops:161.65, batch-reuse:1
@ 2203 train 3.9828 , allloss: 3.9828, dt: 708.70ms, fracRes: 0.3013, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0267, norm(y): 0.9898, norm:0.3952, tok/sec: 184948.03, flops:161.99, batch-reuse:1
@ 2204 train 4.0213 , allloss: 4.0213, dt: 706.31ms, fracRes: 0.3050, norm(attn): 0.4238, norm(output): 0.8828, norm(x): 1.0291, norm(y): 0.9897, norm:0.3740, tok/sec: 185572.52, flops:162.53, batch-reuse:1
@ 2205 train 3.9764 , allloss: 3.9764, dt: 694.27ms, fracRes: 0.3135, norm(attn): 0.4258, norm(output): 0.8867, norm(x): 1.0384, norm(y): 0.9895, norm:0.4332, tok/sec: 188791.20, flops:165.35, batch-reuse:1
@ 2206 train 3.9150 , allloss: 3.9150, dt: 698.08ms, fracRes: 0.3048, norm(attn): 0.4258, norm(output): 0.8789, norm(x): 1.0322, norm(y): 0.9898, norm:0.4351, tok/sec: 187761.85, flops:164.45, batch-reuse:1
@ 2207 train 3.9408 , allloss: 3.9408, dt: 694.38ms, fracRes: 0.3045, norm(attn): 0.4316, norm(output): 0.8789, norm(x): 1.0279, norm(y): 0.9897, norm:0.4255, tok/sec: 188760.21, flops:165.33, batch-reuse:1
@ 2208 train 4.0040 , allloss: 4.0040, dt: 687.02ms, fracRes: 0.3133, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0339, norm(y): 0.9897, norm:0.4287, tok/sec: 190782.90, flops:167.10, batch-reuse:1
@ 2209 train 3.9070 , allloss: 3.9070, dt: 676.64ms, fracRes: 0.3158, norm(attn): 0.4258, norm(output): 0.8828, norm(x): 1.0325, norm(y): 0.9896, norm:0.3772, tok/sec: 193709.34, flops:169.66, batch-reuse:1
@ 2210 train 3.8501 , allloss: 3.8501, dt: 700.81ms, fracRes: 0.3147, norm(attn): 0.4277, norm(output): 0.8828, norm(x): 1.0372, norm(y): 0.9896, norm:0.4090, tok/sec: 187028.99, flops:163.81, batch-reuse:1
@ 2211 train 3.9477 , allloss: 3.9477, dt: 684.46ms, fracRes: 0.3121, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0348, norm(y): 0.9897, norm:0.3709, tok/sec: 191497.10, flops:167.72, batch-reuse:1
@ 2212 train 3.8627 , allloss: 3.8627, dt: 696.30ms, fracRes: 0.3094, norm(attn): 0.4297, norm(output): 0.8789, norm(x): 1.0308, norm(y): 0.9896, norm:0.3882, tok/sec: 188241.08, flops:164.87, batch-reuse:1
@ 2213 train 4.2204 , allloss: 4.2204, dt: 692.76ms, fracRes: 0.3096, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0421, norm(y): 0.9896, norm:0.5623, tok/sec: 189201.64, flops:165.71, batch-reuse:1
@ 2214 train 4.0725 , allloss: 4.0725, dt: 688.17ms, fracRes: 0.2908, norm(attn): 0.4316, norm(output): 0.9023, norm(x): 1.0316, norm(y): 0.9900, norm:0.4822, tok/sec: 190463.92, flops:166.82, batch-reuse:1
@ 2215 train 3.9468 , allloss: 3.9468, dt: 697.56ms, fracRes: 0.2892, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0277, norm(y): 0.9900, norm:0.4252, tok/sec: 187900.02, flops:164.57, batch-reuse:1
@ 2216 train 4.0168 , allloss: 4.0168, dt: 697.21ms, fracRes: 0.3076, norm(attn): 0.4238, norm(output): 0.8789, norm(x): 1.0311, norm(y): 0.9896, norm:0.4626, tok/sec: 187993.96, flops:164.66, batch-reuse:1
@ 2217 train 4.0039 , allloss: 4.0039, dt: 702.93ms, fracRes: 0.3147, norm(attn): 0.4238, norm(output): 0.8789, norm(x): 1.0294, norm(y): 0.9896, norm:0.4138, tok/sec: 186464.09, flops:163.32, batch-reuse:1
@ 2218 train 3.9140 , allloss: 3.9140, dt: 699.41ms, fracRes: 0.3087, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0328, norm(y): 0.9898, norm:0.4351, tok/sec: 187403.04, flops:164.14, batch-reuse:1
@ 2219 train 4.0061 , allloss: 4.0061, dt: 687.08ms, fracRes: 0.3066, norm(attn): 0.4238, norm(output): 0.8828, norm(x): 1.0339, norm(y): 0.9899, norm:0.4034, tok/sec: 190765.76, flops:167.08, batch-reuse:1
@ 2220 train 4.0540 , allloss: 4.0540, dt: 703.80ms, fracRes: 0.3039, norm(attn): 0.4277, norm(output): 0.8828, norm(x): 1.0335, norm(y): 0.9899, norm:0.3993, tok/sec: 186234.42, flops:163.11, batch-reuse:1
@ 2221 train 3.8483 , allloss: 3.8483, dt: 696.64ms, fracRes: 0.3092, norm(attn): 0.4277, norm(output): 0.8906, norm(x): 1.0387, norm(y): 0.9898, norm:0.4033, tok/sec: 188148.44, flops:164.79, batch-reuse:1
@ 2222 train 3.9869 , allloss: 3.9869, dt: 708.92ms, fracRes: 0.3089, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0415, norm(y): 0.9900, norm:0.4014, tok/sec: 184890.75, flops:161.94, batch-reuse:1
@ 2223 train 3.9360 , allloss: 3.9360, dt: 689.70ms, fracRes: 0.3106, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0341, norm(y): 0.9897, norm:0.4000, tok/sec: 190042.14, flops:166.45, batch-reuse:1
@ 2224 train 3.9550 , allloss: 3.9550, dt: 694.62ms, fracRes: 0.3241, norm(attn): 0.4258, norm(output): 0.8984, norm(x): 1.0521, norm(y): 0.9895, norm:0.4570, tok/sec: 188695.62, flops:165.27, batch-reuse:1
@ 2225 train 4.0777 , allloss: 4.0777, dt: 701.72ms, fracRes: 0.3162, norm(attn): 0.4277, norm(output): 0.8906, norm(x): 1.0399, norm(y): 0.9896, norm:0.4363, tok/sec: 186786.50, flops:163.60, batch-reuse:1
@ 2226 train 4.0319 , allloss: 4.0319, dt: 684.94ms, fracRes: 0.3159, norm(attn): 0.4277, norm(output): 0.8828, norm(x): 1.0397, norm(y): 0.9896, norm:0.4116, tok/sec: 191361.72, flops:167.61, batch-reuse:1
@ 2227 train 3.9563 , allloss: 3.9563, dt: 701.84ms, fracRes: 0.3171, norm(attn): 0.4297, norm(output): 0.8828, norm(x): 1.0411, norm(y): 0.9897, norm:0.4194, tok/sec: 186754.52, flops:163.57, batch-reuse:1
@ 2228 train 3.9318 , allloss: 3.9318, dt: 705.67ms, fracRes: 0.3193, norm(attn): 0.4277, norm(output): 0.8789, norm(x): 1.0419, norm(y): 0.9895, norm:0.3959, tok/sec: 185741.49, flops:162.68, batch-reuse:1
@ 2229 train 4.1285 , allloss: 4.1285, dt: 707.62ms, fracRes: 0.3177, norm(attn): 0.4258, norm(output): 0.8906, norm(x): 1.0493, norm(y): 0.9896, norm:0.4508, tok/sec: 185230.32, flops:162.24, batch-reuse:1
@ 2230 train 4.0925 , allloss: 4.0925, dt: 704.61ms, fracRes: 0.3189, norm(attn): 0.4297, norm(output): 0.8945, norm(x): 1.0508, norm(y): 0.9897, norm:0.4346, tok/sec: 186020.92, flops:162.93, batch-reuse:1
@ 2231 train 4.2062 , allloss: 4.2062, dt: 704.46ms, fracRes: 0.3156, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0491, norm(y): 0.9898, norm:0.4208, tok/sec: 186060.08, flops:162.96, batch-reuse:1
@ 2232 train 4.1515 , allloss: 4.1515, dt: 701.07ms, fracRes: 0.3074, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0380, norm(y): 0.9899, norm:0.3660, tok/sec: 186959.41, flops:163.75, batch-reuse:1
@ 2233 train 4.0863 , allloss: 4.0863, dt: 703.32ms, fracRes: 0.3108, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0427, norm(y): 0.9898, norm:0.3845, tok/sec: 186360.94, flops:163.23, batch-reuse:1
@ 2234 train 4.1305 , allloss: 4.1305, dt: 681.98ms, fracRes: 0.3201, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0504, norm(y): 0.9897, norm:0.4449, tok/sec: 192194.36, flops:168.33, batch-reuse:1
@ 2235 train 4.0775 , allloss: 4.0775, dt: 699.50ms, fracRes: 0.3186, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0487, norm(y): 0.9898, norm:0.4057, tok/sec: 187379.09, flops:164.12, batch-reuse:1
@ 2236 train 4.0530 , allloss: 4.0530, dt: 690.88ms, fracRes: 0.3170, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0539, norm(y): 0.9901, norm:0.4283, tok/sec: 189718.36, flops:166.17, batch-reuse:1
@ 2237 train 4.1080 , allloss: 4.1080, dt: 704.44ms, fracRes: 0.3158, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0500, norm(y): 0.9900, norm:0.4176, tok/sec: 186064.36, flops:162.97, batch-reuse:1
@ 2238 train 4.0549 , allloss: 4.0549, dt: 695.02ms, fracRes: 0.3125, norm(attn): 0.4316, norm(output): 0.8867, norm(x): 1.0444, norm(y): 0.9900, norm:0.4037, tok/sec: 188586.42, flops:165.17, batch-reuse:1
@ 2239 train 4.0491 , allloss: 4.0491, dt: 682.62ms, fracRes: 0.3108, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0436, norm(y): 0.9899, norm:0.3830, tok/sec: 192011.97, flops:168.17, batch-reuse:1
@ 2240 train 4.1310 , allloss: 4.1310, dt: 702.80ms, fracRes: 0.3133, norm(attn): 0.4258, norm(output): 0.8867, norm(x): 1.0474, norm(y): 0.9898, norm:0.4109, tok/sec: 186500.09, flops:163.35, batch-reuse:1
@ 2241 train 4.1566 , allloss: 4.1566, dt: 686.74ms, fracRes: 0.3162, norm(attn): 0.4238, norm(output): 0.8945, norm(x): 1.0483, norm(y): 0.9897, norm:0.3796, tok/sec: 190861.66, flops:167.17, batch-reuse:1
@ 2242 train 4.1027 , allloss: 4.1027, dt: 698.48ms, fracRes: 0.3126, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0411, norm(y): 0.9899, norm:0.3641, tok/sec: 187653.41, flops:164.36, batch-reuse:1
@ 2243 train 4.1027 , allloss: 4.1027, dt: 702.07ms, fracRes: 0.3164, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0452, norm(y): 0.9898, norm:0.4464, tok/sec: 186693.70, flops:163.52, batch-reuse:1
@ 2244 train 4.1440 , allloss: 4.1440, dt: 692.53ms, fracRes: 0.3155, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0467, norm(y): 0.9900, norm:0.4247, tok/sec: 189264.43, flops:165.77, batch-reuse:1
@ 2245 train 4.0570 , allloss: 4.0570, dt: 705.56ms, fracRes: 0.3165, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0439, norm(y): 0.9898, norm:0.3840, tok/sec: 185771.18, flops:162.71, batch-reuse:1
@ 2246 train 4.0554 , allloss: 4.0554, dt: 691.09ms, fracRes: 0.3162, norm(attn): 0.4258, norm(output): 0.8906, norm(x): 1.0456, norm(y): 0.9897, norm:0.3670, tok/sec: 189659.85, flops:166.11, batch-reuse:1
@ 2247 train 4.1047 , allloss: 4.1047, dt: 711.78ms, fracRes: 0.3128, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0400, norm(y): 0.9899, norm:0.3933, tok/sec: 184148.06, flops:161.29, batch-reuse:1
@ 2248 train 4.1553 , allloss: 4.1553, dt: 697.59ms, fracRes: 0.3102, norm(attn): 0.4277, norm(output): 0.8906, norm(x): 1.0424, norm(y): 0.9899, norm:0.3801, tok/sec: 187892.51, flops:164.57, batch-reuse:1
@ 2249 train 4.0200 , allloss: 4.0200, dt: 697.94ms, fracRes: 0.3144, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0474, norm(y): 0.9898, norm:0.3558, tok/sec: 187799.50, flops:164.49, batch-reuse:1
@ 2250 train 4.1458 , allloss: 4.1458, dt: 698.36ms, fracRes: 0.3142, norm(attn): 0.4316, norm(output): 0.9062, norm(x): 1.0529, norm(y): 0.9898, norm:0.4029, tok/sec: 187684.61, flops:164.38, batch-reuse:1
@ 2251 train 4.0686 , allloss: 4.0686, dt: 699.35ms, fracRes: 0.3185, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0582, norm(y): 0.9899, norm:0.4752, tok/sec: 187419.97, flops:164.15, batch-reuse:1
@ 2252 train 4.0520 , allloss: 4.0520, dt: 698.03ms, fracRes: 0.3135, norm(attn): 0.4297, norm(output): 0.8945, norm(x): 1.0457, norm(y): 0.9899, norm:0.4744, tok/sec: 187774.29, flops:164.46, batch-reuse:1
@ 2253 train 4.0653 , allloss: 4.0653, dt: 690.18ms, fracRes: 0.3136, norm(attn): 0.4277, norm(output): 0.8867, norm(x): 1.0423, norm(y): 0.9897, norm:0.3912, tok/sec: 189911.11, flops:166.33, batch-reuse:1
@ 2254 train 4.1558 , allloss: 4.1558, dt: 697.83ms, fracRes: 0.3132, norm(attn): 0.4180, norm(output): 0.8828, norm(x): 1.0396, norm(y): 0.9897, norm:0.4786, tok/sec: 187827.99, flops:164.51, batch-reuse:1
@ 2255 train 4.0867 , allloss: 4.0867, dt: 690.97ms, fracRes: 0.3105, norm(attn): 0.4336, norm(output): 0.8867, norm(x): 1.0394, norm(y): 0.9898, norm:0.4834, tok/sec: 189692.05, flops:166.14, batch-reuse:1
@ 2256 train 4.1252 , allloss: 4.1252, dt: 701.07ms, fracRes: 0.3096, norm(attn): 0.4316, norm(output): 0.8984, norm(x): 1.0455, norm(y): 0.9900, norm:0.4689, tok/sec: 186959.79, flops:163.75, batch-reuse:1
@ 2257 train 4.1052 , allloss: 4.1052, dt: 701.49ms, fracRes: 0.3095, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0468, norm(y): 0.9899, norm:0.4475, tok/sec: 186848.52, flops:163.65, batch-reuse:1
@ 2258 train 4.0552 , allloss: 4.0552, dt: 699.41ms, fracRes: 0.3097, norm(attn): 0.4316, norm(output): 0.8867, norm(x): 1.0442, norm(y): 0.9900, norm:0.4288, tok/sec: 187402.47, flops:164.14, batch-reuse:1
@ 2259 train 4.2027 , allloss: 4.2027, dt: 701.82ms, fracRes: 0.3090, norm(attn): 0.4336, norm(output): 0.9062, norm(x): 1.0473, norm(y): 0.9901, norm:0.4463, tok/sec: 186759.98, flops:163.57, batch-reuse:1
@ 2260 train 4.0604 , allloss: 4.0604, dt: 706.82ms, fracRes: 0.3139, norm(attn): 0.4316, norm(output): 0.8945, norm(x): 1.0469, norm(y): 0.9899, norm:0.4138, tok/sec: 185438.44, flops:162.42, batch-reuse:1
@ 2261 train 4.1113 , allloss: 4.1113, dt: 701.80ms, fracRes: 0.3148, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0476, norm(y): 0.9899, norm:0.4062, tok/sec: 186764.99, flops:163.58, batch-reuse:1
@ 2262 train 4.0446 , allloss: 4.0446, dt: 699.74ms, fracRes: 0.3231, norm(attn): 0.4316, norm(output): 0.8867, norm(x): 1.0504, norm(y): 0.9897, norm:0.3985, tok/sec: 187315.18, flops:164.06, batch-reuse:1
@ 2263 train 4.1846 , allloss: 4.1846, dt: 699.25ms, fracRes: 0.3226, norm(attn): 0.4316, norm(output): 0.8828, norm(x): 1.0501, norm(y): 0.9899, norm:0.4686, tok/sec: 187446.17, flops:164.18, batch-reuse:1
@ 2264 train 4.0871 , allloss: 4.0871, dt: 698.88ms, fracRes: 0.3152, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0512, norm(y): 0.9900, norm:0.4168, tok/sec: 187545.03, flops:164.26, batch-reuse:1
@ 2265 train 4.0769 , allloss: 4.0769, dt: 691.87ms, fracRes: 0.3134, norm(attn): 0.4297, norm(output): 0.8945, norm(x): 1.0524, norm(y): 0.9899, norm:0.4108, tok/sec: 189446.59, flops:165.93, batch-reuse:1
@ 2266 train 3.9803 , allloss: 3.9803, dt: 699.51ms, fracRes: 0.3151, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0446, norm(y): 0.9897, norm:0.4372, tok/sec: 187377.81, flops:164.12, batch-reuse:1
@ 2267 train 4.0837 , allloss: 4.0837, dt: 697.06ms, fracRes: 0.3205, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0521, norm(y): 0.9896, norm:0.3977, tok/sec: 188035.76, flops:164.69, batch-reuse:1
@ 2268 train 4.1225 , allloss: 4.1225, dt: 693.69ms, fracRes: 0.3243, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0525, norm(y): 0.9895, norm:0.4201, tok/sec: 188948.09, flops:165.49, batch-reuse:1
@ 2269 train 4.1494 , allloss: 4.1494, dt: 696.15ms, fracRes: 0.3223, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0505, norm(y): 0.9897, norm:0.3935, tok/sec: 188280.53, flops:164.91, batch-reuse:1
@ 2270 train 4.1926 , allloss: 4.1926, dt: 691.36ms, fracRes: 0.3153, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0504, norm(y): 0.9899, norm:0.4237, tok/sec: 189584.70, flops:166.05, batch-reuse:1
@ 2271 train 4.0572 , allloss: 4.0572, dt: 699.34ms, fracRes: 0.3176, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0504, norm(y): 0.9898, norm:0.4445, tok/sec: 187422.46, flops:164.16, batch-reuse:1
@ 2272 train 4.0282 , allloss: 4.0282, dt: 701.22ms, fracRes: 0.3194, norm(attn): 0.4258, norm(output): 0.8906, norm(x): 1.0495, norm(y): 0.9900, norm:0.3748, tok/sec: 186920.12, flops:163.72, batch-reuse:1
@ 2273 train 4.1520 , allloss: 4.1520, dt: 701.65ms, fracRes: 0.3213, norm(attn): 0.4277, norm(output): 0.8906, norm(x): 1.0506, norm(y): 0.9900, norm:0.4352, tok/sec: 186806.30, flops:163.62, batch-reuse:1
@ 2274 train 4.0652 , allloss: 4.0652, dt: 692.28ms, fracRes: 0.3200, norm(attn): 0.4258, norm(output): 0.8945, norm(x): 1.0490, norm(y): 0.9898, norm:0.4923, tok/sec: 189334.56, flops:165.83, batch-reuse:1
@ 2275 train 4.0951 , allloss: 4.0951, dt: 690.74ms, fracRes: 0.3297, norm(attn): 0.4258, norm(output): 0.8906, norm(x): 1.0540, norm(y): 0.9896, norm:0.3969, tok/sec: 189755.43, flops:166.20, batch-reuse:1
@ 2276 train 4.1829 , allloss: 4.1829, dt: 698.00ms, fracRes: 0.3184, norm(attn): 0.4277, norm(output): 0.8906, norm(x): 1.0494, norm(y): 0.9900, norm:0.4188, tok/sec: 187782.12, flops:164.47, batch-reuse:1
@ 2277 train 4.1118 , allloss: 4.1118, dt: 717.99ms, fracRes: 0.3203, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0513, norm(y): 0.9898, norm:0.4290, tok/sec: 182553.43, flops:159.89, batch-reuse:1
@ 2278 train 4.0804 , allloss: 4.0804, dt: 716.40ms, fracRes: 0.3251, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0627, norm(y): 0.9897, norm:0.4364, tok/sec: 182960.12, flops:160.25, batch-reuse:1
@ 2279 train 4.0808 , allloss: 4.0808, dt: 717.90ms, fracRes: 0.3135, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0488, norm(y): 0.9898, norm:0.4024, tok/sec: 182577.31, flops:159.91, batch-reuse:1
@ 2280 train 4.0770 , allloss: 4.0770, dt: 705.22ms, fracRes: 0.3114, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0444, norm(y): 0.9898, norm:0.4020, tok/sec: 185860.87, flops:162.79, batch-reuse:1
@ 2281 train 4.0022 , allloss: 4.0022, dt: 711.66ms, fracRes: 0.3120, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0435, norm(y): 0.9897, norm:0.4078, tok/sec: 184179.03, flops:161.31, batch-reuse:1
@ 2282 train 4.2333 , allloss: 4.2333, dt: 710.84ms, fracRes: 0.3072, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0400, norm(y): 0.9902, norm:0.4835, tok/sec: 184389.93, flops:161.50, batch-reuse:1
@ 2283 train 4.0366 , allloss: 4.0366, dt: 717.30ms, fracRes: 0.3113, norm(attn): 0.4355, norm(output): 0.8906, norm(x): 1.0449, norm(y): 0.9901, norm:0.4376, tok/sec: 182728.97, flops:160.04, batch-reuse:1
@ 2284 train 4.0155 , allloss: 4.0155, dt: 717.48ms, fracRes: 0.3201, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0526, norm(y): 0.9899, norm:0.4556, tok/sec: 182684.09, flops:160.00, batch-reuse:1
@ 2285 train 4.0488 , allloss: 4.0488, dt: 709.54ms, fracRes: 0.3176, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0476, norm(y): 0.9897, norm:0.4119, tok/sec: 184728.72, flops:161.80, batch-reuse:1
@ 2286 train 4.1167 , allloss: 4.1167, dt: 703.14ms, fracRes: 0.3131, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0441, norm(y): 0.9899, norm:0.4192, tok/sec: 186410.67, flops:163.27, batch-reuse:1
@ 2287 train 4.1530 , allloss: 4.1530, dt: 708.51ms, fracRes: 0.3121, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0469, norm(y): 0.9901, norm:0.3958, tok/sec: 184997.76, flops:162.03, batch-reuse:1
@ 2288 train 4.1996 , allloss: 4.1996, dt: 757.32ms, fracRes: 0.3103, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0487, norm(y): 0.9901, norm:0.4511, tok/sec: 173074.52, flops:151.59, batch-reuse:1
@ 2289 train 4.0617 , allloss: 4.0617, dt: 702.22ms, fracRes: 0.3148, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0506, norm(y): 0.9900, norm:0.4617, tok/sec: 186655.03, flops:163.48, batch-reuse:1
@ 2290 train 3.9824 , allloss: 3.9824, dt: 686.32ms, fracRes: 0.3133, norm(attn): 0.4297, norm(output): 0.8867, norm(x): 1.0452, norm(y): 0.9898, norm:0.3811, tok/sec: 190977.02, flops:167.27, batch-reuse:1
@ 2291 train 4.2048 , allloss: 4.2048, dt: 704.54ms, fracRes: 0.3155, norm(attn): 0.4355, norm(output): 0.8906, norm(x): 1.0483, norm(y): 0.9901, norm:0.4332, tok/sec: 186037.92, flops:162.94, batch-reuse:1
@ 2292 train 4.0373 , allloss: 4.0373, dt: 703.58ms, fracRes: 0.3203, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0503, norm(y): 0.9898, norm:0.3776, tok/sec: 186292.80, flops:163.17, batch-reuse:1
@ 2293 train 4.1542 , allloss: 4.1542, dt: 709.73ms, fracRes: 0.3127, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0501, norm(y): 0.9900, norm:0.4425, tok/sec: 184678.83, flops:161.75, batch-reuse:1
@ 2294 train 4.0949 , allloss: 4.0949, dt: 685.23ms, fracRes: 0.3124, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0505, norm(y): 0.9900, norm:0.3725, tok/sec: 191280.89, flops:167.53, batch-reuse:1
@ 2295 train 4.0854 , allloss: 4.0854, dt: 702.18ms, fracRes: 0.3167, norm(attn): 0.4277, norm(output): 0.9023, norm(x): 1.0530, norm(y): 0.9899, norm:0.3930, tok/sec: 186664.35, flops:163.49, batch-reuse:1
@ 2296 train 4.0481 , allloss: 4.0481, dt: 704.27ms, fracRes: 0.3216, norm(attn): 0.4316, norm(output): 0.9102, norm(x): 1.0577, norm(y): 0.9898, norm:0.3518, tok/sec: 186109.40, flops:163.00, batch-reuse:1
@ 2297 train 4.0387 , allloss: 4.0387, dt: 699.17ms, fracRes: 0.3246, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0569, norm(y): 0.9898, norm:0.3750, tok/sec: 187468.10, flops:164.19, batch-reuse:1
@ 2298 train 4.0688 , allloss: 4.0688, dt: 695.97ms, fracRes: 0.3265, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0594, norm(y): 0.9897, norm:0.3742, tok/sec: 188330.01, flops:164.95, batch-reuse:1
@ 2299 train 4.0603 , allloss: 4.0603, dt: 699.53ms, fracRes: 0.3216, norm(attn): 0.4316, norm(output): 0.9062, norm(x): 1.0582, norm(y): 0.9899, norm:0.3933, tok/sec: 187370.79, flops:164.11, batch-reuse:1
@ 2300 train 3.9355 , allloss: 3.9355, dt: 698.36ms, fracRes: 0.3242, norm(attn): 0.4336, norm(output): 0.9180, norm(x): 1.0611, norm(y): 0.9897, norm:0.3894, tok/sec: 187684.87, flops:164.38, batch-reuse:1
@ 2301 train 4.0483 , allloss: 4.0483, dt: 698.74ms, fracRes: 0.3170, norm(attn): 0.4355, norm(output): 0.9102, norm(x): 1.0556, norm(y): 0.9899, norm:0.3868, tok/sec: 187582.98, flops:164.30, batch-reuse:1
@ 2302 train 4.0639 , allloss: 4.0639, dt: 694.83ms, fracRes: 0.3174, norm(attn): 0.4316, norm(output): 0.9102, norm(x): 1.0543, norm(y): 0.9900, norm:0.3936, tok/sec: 188638.51, flops:165.22, batch-reuse:1
@ 2303 train 4.1543 , allloss: 4.1543, dt: 696.67ms, fracRes: 0.3155, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0490, norm(y): 0.9902, norm:0.3933, tok/sec: 188139.87, flops:164.78, batch-reuse:1
@ 2304 train 4.0768 , allloss: 4.0768, dt: 699.48ms, fracRes: 0.3184, norm(attn): 0.4336, norm(output): 0.9062, norm(x): 1.0561, norm(y): 0.9901, norm:0.4543, tok/sec: 187386.05, flops:164.12, batch-reuse:1
@ 2305 train 4.0361 , allloss: 4.0361, dt: 700.32ms, fracRes: 0.3146, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0502, norm(y): 0.9901, norm:0.3688, tok/sec: 187158.88, flops:163.92, batch-reuse:1
@ 2306 train 4.0677 , allloss: 4.0677, dt: 692.46ms, fracRes: 0.3208, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0601, norm(y): 0.9900, norm:0.3881, tok/sec: 189283.39, flops:165.78, batch-reuse:1
@ 2307 train 4.1143 , allloss: 4.1143, dt: 688.82ms, fracRes: 0.3186, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0557, norm(y): 0.9901, norm:0.4264, tok/sec: 190283.88, flops:166.66, batch-reuse:1
@ 2308 train 4.0752 , allloss: 4.0752, dt: 698.02ms, fracRes: 0.3189, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0546, norm(y): 0.9901, norm:0.4216, tok/sec: 187775.83, flops:164.46, batch-reuse:1
@ 2309 train 4.0667 , allloss: 4.0667, dt: 699.33ms, fracRes: 0.3211, norm(attn): 0.4316, norm(output): 0.8867, norm(x): 1.0478, norm(y): 0.9901, norm:0.4600, tok/sec: 187424.64, flops:164.16, batch-reuse:1
@ 2310 train 4.1705 , allloss: 4.1705, dt: 709.29ms, fracRes: 0.3149, norm(attn): 0.4277, norm(output): 0.8945, norm(x): 1.0479, norm(y): 0.9900, norm:0.4247, tok/sec: 184793.24, flops:161.85, batch-reuse:1
@ 2311 train 4.0958 , allloss: 4.0958, dt: 694.62ms, fracRes: 0.3169, norm(attn): 0.4297, norm(output): 0.8906, norm(x): 1.0509, norm(y): 0.9899, norm:0.3888, tok/sec: 188694.65, flops:165.27, batch-reuse:1
@ 2312 train 4.1108 , allloss: 4.1108, dt: 691.82ms, fracRes: 0.3164, norm(attn): 0.4297, norm(output): 0.8945, norm(x): 1.0495, norm(y): 0.9899, norm:0.3946, tok/sec: 189460.23, flops:165.94, batch-reuse:1
@ 2313 train 4.1371 , allloss: 4.1371, dt: 681.71ms, fracRes: 0.3155, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0502, norm(y): 0.9899, norm:0.3563, tok/sec: 192268.90, flops:168.40, batch-reuse:1
@ 2314 train 4.1167 , allloss: 4.1167, dt: 695.82ms, fracRes: 0.3130, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0492, norm(y): 0.9899, norm:0.3714, tok/sec: 188370.85, flops:164.99, batch-reuse:1
@ 2315 train 4.0691 , allloss: 4.0691, dt: 701.67ms, fracRes: 0.3182, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0505, norm(y): 0.9898, norm:0.3853, tok/sec: 186800.08, flops:163.61, batch-reuse:1
@ 2316 train 4.1716 , allloss: 4.1716, dt: 695.24ms, fracRes: 0.3239, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0584, norm(y): 0.9897, norm:0.4127, tok/sec: 188528.80, flops:165.12, batch-reuse:1
@ 2317 train 4.0545 , allloss: 4.0545, dt: 699.49ms, fracRes: 0.3182, norm(attn): 0.4355, norm(output): 0.8906, norm(x): 1.0493, norm(y): 0.9898, norm:0.4640, tok/sec: 187383.37, flops:164.12, batch-reuse:1
@ 2318 train 4.0635 , allloss: 4.0635, dt: 683.97ms, fracRes: 0.3180, norm(attn): 0.4316, norm(output): 0.9062, norm(x): 1.0523, norm(y): 0.9898, norm:0.3730, tok/sec: 191635.35, flops:167.84, batch-reuse:1
@ 2319 train 4.0661 , allloss: 4.0661, dt: 703.74ms, fracRes: 0.3209, norm(attn): 0.4297, norm(output): 0.9102, norm(x): 1.0539, norm(y): 0.9898, norm:0.3984, tok/sec: 186249.31, flops:163.13, batch-reuse:1
@ 2320 train 4.0269 , allloss: 4.0269, dt: 702.07ms, fracRes: 0.3200, norm(attn): 0.4316, norm(output): 0.8945, norm(x): 1.0526, norm(y): 0.9899, norm:0.3816, tok/sec: 186694.33, flops:163.52, batch-reuse:1
@ 2321 train 3.9247 , allloss: 3.9247, dt: 702.99ms, fracRes: 0.3244, norm(attn): 0.4336, norm(output): 0.9062, norm(x): 1.0619, norm(y): 0.9899, norm:0.4329, tok/sec: 186449.11, flops:163.30, batch-reuse:1
@ 2322 train 4.0670 , allloss: 4.0670, dt: 705.38ms, fracRes: 0.3172, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0538, norm(y): 0.9899, norm:0.4096, tok/sec: 185818.40, flops:162.75, batch-reuse:1
@ 2323 train 3.9338 , allloss: 3.9338, dt: 702.45ms, fracRes: 0.3170, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0505, norm(y): 0.9899, norm:0.3832, tok/sec: 186592.88, flops:163.43, batch-reuse:1
@ 2324 train 4.1152 , allloss: 4.1152, dt: 696.89ms, fracRes: 0.3087, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0435, norm(y): 0.9902, norm:0.3713, tok/sec: 188080.79, flops:164.73, batch-reuse:1
@ 2325 train 4.0922 , allloss: 4.0922, dt: 687.83ms, fracRes: 0.3114, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0475, norm(y): 0.9901, norm:0.3872, tok/sec: 190557.73, flops:166.90, batch-reuse:1
@ 2326 train 4.0141 , allloss: 4.0141, dt: 694.93ms, fracRes: 0.3116, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0526, norm(y): 0.9902, norm:0.4000, tok/sec: 188610.68, flops:165.20, batch-reuse:1
@ 2327 train 4.0523 , allloss: 4.0523, dt: 696.29ms, fracRes: 0.3087, norm(attn): 0.4336, norm(output): 0.9102, norm(x): 1.0503, norm(y): 0.9903, norm:0.3960, tok/sec: 188243.92, flops:164.87, batch-reuse:1
@ 2328 train 3.9894 , allloss: 3.9894, dt: 697.92ms, fracRes: 0.3129, norm(attn): 0.4355, norm(output): 0.8984, norm(x): 1.0521, norm(y): 0.9903, norm:0.3975, tok/sec: 187803.42, flops:164.49, batch-reuse:1
@ 2329 train 3.7481 , allloss: 3.7481, dt: 687.81ms, fracRes: 0.3191, norm(attn): 0.4453, norm(output): 0.9062, norm(x): 1.0573, norm(y): 0.9904, norm:1.9808, tok/sec: 190564.67, flops:166.91, batch-reuse:1
@ 2330 train 4.0673 , allloss: 4.0673, dt: 694.62ms, fracRes: 0.3232, norm(attn): 0.4316, norm(output): 0.8984, norm(x): 1.0580, norm(y): 0.9900, norm:0.4689, tok/sec: 188694.65, flops:165.27, batch-reuse:1
@ 2331 train 3.9137 , allloss: 3.9137, dt: 698.10ms, fracRes: 0.3212, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0579, norm(y): 0.9898, norm:0.4423, tok/sec: 187754.67, flops:164.45, batch-reuse:1
@ 2332 train 4.0633 , allloss: 4.0633, dt: 695.19ms, fracRes: 0.3178, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0552, norm(y): 0.9900, norm:0.4823, tok/sec: 188541.99, flops:165.14, batch-reuse:1
@ 2333 train 3.9280 , allloss: 3.9280, dt: 709.69ms, fracRes: 0.3080, norm(attn): 0.4375, norm(output): 0.8984, norm(x): 1.0454, norm(y): 0.9902, norm:0.4350, tok/sec: 184687.82, flops:161.76, batch-reuse:1
@ 2334 train 3.9436 , allloss: 3.9436, dt: 713.25ms, fracRes: 0.3149, norm(attn): 0.4355, norm(output): 0.8984, norm(x): 1.0490, norm(y): 0.9900, norm:0.4291, tok/sec: 183768.20, flops:160.95, batch-reuse:1
@ 2335 train 4.0503 , allloss: 4.0503, dt: 715.38ms, fracRes: 0.3239, norm(attn): 0.4336, norm(output): 0.8945, norm(x): 1.0560, norm(y): 0.9898, norm:0.3690, tok/sec: 183218.84, flops:160.47, batch-reuse:1
@ 2336 train 4.1268 , allloss: 4.1268, dt: 676.58ms, fracRes: 0.3255, norm(attn): 0.4297, norm(output): 0.9023, norm(x): 1.0589, norm(y): 0.9896, norm:0.4092, tok/sec: 193728.45, flops:169.68, batch-reuse:1
@ 2337 train 4.0159 , allloss: 4.0159, dt: 697.07ms, fracRes: 0.3148, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0482, norm(y): 0.9898, norm:0.3799, tok/sec: 188032.54, flops:164.69, batch-reuse:1
@ 2338 train 4.0446 , allloss: 4.0446, dt: 699.69ms, fracRes: 0.3174, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0527, norm(y): 0.9899, norm:0.3705, tok/sec: 187329.09, flops:164.07, batch-reuse:1
@ 2339 train 3.9928 , allloss: 3.9928, dt: 703.58ms, fracRes: 0.3191, norm(attn): 0.4316, norm(output): 0.8945, norm(x): 1.0487, norm(y): 0.9899, norm:0.3597, tok/sec: 186291.97, flops:163.16, batch-reuse:1
@ 2340 train 4.0362 , allloss: 4.0362, dt: 688.42ms, fracRes: 0.3173, norm(attn): 0.4316, norm(output): 0.8906, norm(x): 1.0493, norm(y): 0.9899, norm:0.3680, tok/sec: 190395.45, flops:166.76, batch-reuse:1
@ 2341 train 4.0293 , allloss: 4.0293, dt: 684.88ms, fracRes: 0.3194, norm(attn): 0.4316, norm(output): 0.8984, norm(x): 1.0523, norm(y): 0.9897, norm:0.3608, tok/sec: 191380.37, flops:167.62, batch-reuse:1
@ 2342 train 3.9456 , allloss: 3.9456, dt: 693.44ms, fracRes: 0.3237, norm(attn): 0.4336, norm(output): 0.9023, norm(x): 1.0578, norm(y): 0.9897, norm:0.3598, tok/sec: 189016.05, flops:165.55, batch-reuse:1
@ 2343 train 4.0258 , allloss: 4.0258, dt: 698.56ms, fracRes: 0.3135, norm(attn): 0.4375, norm(output): 0.9062, norm(x): 1.0501, norm(y): 0.9900, norm:0.3668, tok/sec: 187631.76, flops:164.34, batch-reuse:1
@ 2344 train 4.0849 , allloss: 4.0849, dt: 702.21ms, fracRes: 0.3157, norm(attn): 0.4375, norm(output): 0.9062, norm(x): 1.0572, norm(y): 0.9900, norm:0.3708, tok/sec: 186656.24, flops:163.48, batch-reuse:1
@ 2345 train 3.9560 , allloss: 3.9560, dt: 699.86ms, fracRes: 0.3153, norm(attn): 0.4355, norm(output): 0.8906, norm(x): 1.0507, norm(y): 0.9899, norm:0.3550, tok/sec: 187283.34, flops:164.03, batch-reuse:1
@ 2346 train 4.0564 , allloss: 4.0564, dt: 696.77ms, fracRes: 0.3219, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0576, norm(y): 0.9898, norm:0.3717, tok/sec: 188113.87, flops:164.76, batch-reuse:1
@ 2347 train 3.9696 , allloss: 3.9696, dt: 698.60ms, fracRes: 0.3198, norm(attn): 0.4316, norm(output): 0.8867, norm(x): 1.0467, norm(y): 0.9898, norm:0.3561, tok/sec: 187620.56, flops:164.33, batch-reuse:1
@ 2348 train 4.0626 , allloss: 4.0626, dt: 682.89ms, fracRes: 0.3207, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0536, norm(y): 0.9900, norm:0.3814, tok/sec: 191938.16, flops:168.11, batch-reuse:1
@ 2349 train 4.0945 , allloss: 4.0945, dt: 701.23ms, fracRes: 0.3205, norm(attn): 0.4355, norm(output): 0.9180, norm(x): 1.0631, norm(y): 0.9901, norm:0.4209, tok/sec: 186916.94, flops:163.71, batch-reuse:1
@ 2350 train 3.9842 , allloss: 3.9842, dt: 686.27ms, fracRes: 0.3241, norm(attn): 0.4297, norm(output): 0.8984, norm(x): 1.0583, norm(y): 0.9897, norm:0.4141, tok/sec: 190991.42, flops:167.28, batch-reuse:1
@ 2351 train 4.1013 , allloss: 4.1013, dt: 688.15ms, fracRes: 0.3226, norm(attn): 0.4316, norm(output): 0.8984, norm(x): 1.0590, norm(y): 0.9898, norm:0.4105, tok/sec: 190468.87, flops:166.82, batch-reuse:1
@ 2352 train 4.0316 , allloss: 4.0316, dt: 697.97ms, fracRes: 0.3239, norm(attn): 0.4355, norm(output): 0.9102, norm(x): 1.0612, norm(y): 0.9899, norm:0.3957, tok/sec: 187789.30, flops:164.48, batch-reuse:1
@ 2353 train 4.0129 , allloss: 4.0129, dt: 698.37ms, fracRes: 0.3225, norm(attn): 0.4355, norm(output): 0.9102, norm(x): 1.0613, norm(y): 0.9900, norm:0.4090, tok/sec: 187682.37, flops:164.38, batch-reuse:1
@ 2354 train 4.0717 , allloss: 4.0717, dt: 698.85ms, fracRes: 0.3221, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0624, norm(y): 0.9900, norm:0.4223, tok/sec: 187553.35, flops:164.27, batch-reuse:1
@ 2355 train 3.9858 , allloss: 3.9858, dt: 700.67ms, fracRes: 0.3201, norm(attn): 0.4355, norm(output): 0.9102, norm(x): 1.0569, norm(y): 0.9898, norm:0.3859, tok/sec: 187065.96, flops:163.84, batch-reuse:1
@ 2356 train 4.1630 , allloss: 4.1630, dt: 700.26ms, fracRes: 0.3179, norm(attn): 0.4316, norm(output): 0.8984, norm(x): 1.0554, norm(y): 0.9900, norm:0.3916, tok/sec: 187176.28, flops:163.94, batch-reuse:1
@ 2357 train 4.0857 , allloss: 4.0857, dt: 689.22ms, fracRes: 0.3163, norm(attn): 0.4336, norm(output): 0.9062, norm(x): 1.0577, norm(y): 0.9900, norm:0.4259, tok/sec: 190173.10, flops:166.56, batch-reuse:1
@ 2358 train 4.0670 , allloss: 4.0670, dt: 699.77ms, fracRes: 0.3221, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0641, norm(y): 0.9901, norm:0.4243, tok/sec: 187306.82, flops:164.05, batch-reuse:1
@ 2359 train 4.0254 , allloss: 4.0254, dt: 688.42ms, fracRes: 0.3269, norm(attn): 0.4375, norm(output): 0.9141, norm(x): 1.0657, norm(y): 0.9899, norm:0.4403, tok/sec: 190396.17, flops:166.76, batch-reuse:1
@ 2360 train 4.0962 , allloss: 4.0962, dt: 698.69ms, fracRes: 0.3250, norm(attn): 0.4297, norm(output): 0.9062, norm(x): 1.0615, norm(y): 0.9899, norm:0.3899, tok/sec: 187597.32, flops:164.31, batch-reuse:1
@ 2361 train 4.0479 , allloss: 4.0479, dt: 700.53ms, fracRes: 0.3278, norm(attn): 0.4316, norm(output): 0.9102, norm(x): 1.0671, norm(y): 0.9898, norm:0.3741, tok/sec: 187103.53, flops:163.88, batch-reuse:1
@ 2362 train 4.0412 , allloss: 4.0412, dt: 702.18ms, fracRes: 0.3267, norm(attn): 0.4336, norm(output): 0.9062, norm(x): 1.0636, norm(y): 0.9898, norm:0.3703, tok/sec: 186663.46, flops:163.49, batch-reuse:1
@ 2363 train 4.0924 , allloss: 4.0924, dt: 697.33ms, fracRes: 0.3191, norm(attn): 0.4355, norm(output): 0.9102, norm(x): 1.0600, norm(y): 0.9901, norm:0.3878, tok/sec: 187963.43, flops:164.63, batch-reuse:1
@ 2364 train 4.0112 , allloss: 4.0112, dt: 698.13ms, fracRes: 0.3269, norm(attn): 0.4316, norm(output): 0.9141, norm(x): 1.0648, norm(y): 0.9899, norm:0.4129, tok/sec: 187748.32, flops:164.44, batch-reuse:1
@ 2365 train 4.0293 , allloss: 4.0293, dt: 693.55ms, fracRes: 0.3233, norm(attn): 0.4336, norm(output): 0.9141, norm(x): 1.0615, norm(y): 0.9900, norm:0.4080, tok/sec: 188987.26, flops:165.53, batch-reuse:1
@ 2366 train 4.0495 , allloss: 4.0495, dt: 717.33ms, fracRes: 0.3228, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0592, norm(y): 0.9900, norm:0.3807, tok/sec: 182722.53, flops:160.04, batch-reuse:1
@ 2367 train 3.9794 , allloss: 3.9794, dt: 701.17ms, fracRes: 0.3196, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0529, norm(y): 0.9900, norm:0.3960, tok/sec: 186934.29, flops:163.73, batch-reuse:1
@ 2368 train 3.8536 , allloss: 3.8536, dt: 696.47ms, fracRes: 0.3202, norm(attn): 0.4336, norm(output): 0.8906, norm(x): 1.0526, norm(y): 0.9898, norm:0.3910, tok/sec: 188194.10, flops:164.83, batch-reuse:1
@ 2369 train 3.9068 , allloss: 3.9068, dt: 694.38ms, fracRes: 0.3240, norm(attn): 0.4316, norm(output): 0.9023, norm(x): 1.0550, norm(y): 0.9897, norm:0.3808, tok/sec: 188761.38, flops:165.33, batch-reuse:1
@ 2370 train 3.9510 , allloss: 3.9510, dt: 694.20ms, fracRes: 0.3231, norm(attn): 0.4336, norm(output): 0.9102, norm(x): 1.0606, norm(y): 0.9899, norm:0.4685, tok/sec: 188809.29, flops:165.37, batch-reuse:1
@ 2371 train 3.8113 , allloss: 3.8113, dt: 696.25ms, fracRes: 0.3145, norm(attn): 0.4375, norm(output): 0.8984, norm(x): 1.0511, norm(y): 0.9900, norm:0.3995, tok/sec: 188255.20, flops:164.88, batch-reuse:1
@ 2372 train 3.8547 , allloss: 3.8547, dt: 695.01ms, fracRes: 0.3108, norm(attn): 0.4375, norm(output): 0.9062, norm(x): 1.0507, norm(y): 0.9902, norm:0.3854, tok/sec: 188590.30, flops:165.18, batch-reuse:1
@ 2373 train 3.9530 , allloss: 3.9530, dt: 693.84ms, fracRes: 0.3166, norm(attn): 0.4355, norm(output): 0.8984, norm(x): 1.0554, norm(y): 0.9901, norm:0.4161, tok/sec: 188907.19, flops:165.46, batch-reuse:1
@ 2374 train 3.8985 , allloss: 3.8985, dt: 690.63ms, fracRes: 0.3173, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0581, norm(y): 0.9900, norm:0.3756, tok/sec: 189786.08, flops:166.23, batch-reuse:1
@ 2375 train 3.9455 , allloss: 3.9455, dt: 695.25ms, fracRes: 0.3159, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0565, norm(y): 0.9901, norm:0.3931, tok/sec: 188524.01, flops:165.12, batch-reuse:1
@ 2376 train 3.9688 , allloss: 3.9688, dt: 702.26ms, fracRes: 0.3147, norm(attn): 0.4355, norm(output): 0.9180, norm(x): 1.0604, norm(y): 0.9902, norm:0.3977, tok/sec: 186644.32, flops:163.47, batch-reuse:1
@ 2377 train 3.8914 , allloss: 3.8914, dt: 698.29ms, fracRes: 0.3163, norm(attn): 0.4336, norm(output): 0.8984, norm(x): 1.0552, norm(y): 0.9899, norm:0.3776, tok/sec: 187705.50, flops:164.40, batch-reuse:1
@ 2378 train 3.9012 , allloss: 3.9012, dt: 690.58ms, fracRes: 0.3206, norm(attn): 0.4355, norm(output): 0.9062, norm(x): 1.0565, norm(y): 0.9899, norm:0.3848, tok/sec: 189800.69, flops:166.24, batch-reuse:1
@ 2379 train 3.8791 , allloss: 3.8791, dt: 707.94ms, fracRes: 0.3203, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0580, norm(y): 0.9901, norm:0.3713, tok/sec: 185145.23, flops:162.16, batch-reuse:1
@ 2380 train 3.9878 , allloss: 3.9878, dt: 702.96ms, fracRes: 0.3288, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0766, norm(y): 0.9900, norm:1.0873, tok/sec: 186457.39, flops:163.31, batch-reuse:1
@ 2381 train 4.0138 , allloss: 4.0138, dt: 702.37ms, fracRes: 0.3234, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0669, norm(y): 0.9901, norm:0.6169, tok/sec: 186613.79, flops:163.45, batch-reuse:1
@ 2382 train 3.9736 , allloss: 3.9736, dt: 702.55ms, fracRes: 0.3173, norm(attn): 0.4336, norm(output): 0.9102, norm(x): 1.0609, norm(y): 0.9901, norm:0.4710, tok/sec: 186567.30, flops:163.41, batch-reuse:1
@ 2383 train 3.9159 , allloss: 3.9159, dt: 702.52ms, fracRes: 0.3214, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0602, norm(y): 0.9898, norm:0.4451, tok/sec: 186572.87, flops:163.41, batch-reuse:1
@ 2384 train 3.9383 , allloss: 3.9383, dt: 702.54ms, fracRes: 0.3233, norm(attn): 0.4375, norm(output): 0.9102, norm(x): 1.0633, norm(y): 0.9898, norm:0.4564, tok/sec: 186569.26, flops:163.41, batch-reuse:1
@ 2385 train 3.9124 , allloss: 3.9124, dt: 706.89ms, fracRes: 0.3154, norm(attn): 0.4395, norm(output): 0.9102, norm(x): 1.0583, norm(y): 0.9902, norm:0.4583, tok/sec: 185420.74, flops:162.40, batch-reuse:1
@ 2386 train 3.8727 , allloss: 3.8727, dt: 701.49ms, fracRes: 0.3143, norm(attn): 0.4414, norm(output): 0.9102, norm(x): 1.0605, norm(y): 0.9903, norm:0.4160, tok/sec: 186846.68, flops:163.65, batch-reuse:1
@ 2387 train 3.9382 , allloss: 3.9382, dt: 690.90ms, fracRes: 0.3176, norm(attn): 0.4414, norm(output): 0.9141, norm(x): 1.0624, norm(y): 0.9903, norm:0.4355, tok/sec: 189712.99, flops:166.16, batch-reuse:1
@ 2388 train 3.9658 , allloss: 3.9658, dt: 697.08ms, fracRes: 0.3155, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0664, norm(y): 0.9903, norm:0.4371, tok/sec: 188030.22, flops:164.69, batch-reuse:1
@ 2389 train 3.9105 , allloss: 3.9105, dt: 684.26ms, fracRes: 0.3167, norm(attn): 0.4375, norm(output): 0.9062, norm(x): 1.0592, norm(y): 0.9902, norm:0.4033, tok/sec: 191553.22, flops:167.77, batch-reuse:1
@ 2390 train 3.9376 , allloss: 3.9376, dt: 695.99ms, fracRes: 0.3251, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0680, norm(y): 0.9900, norm:0.3925, tok/sec: 188324.07, flops:164.94, batch-reuse:1
@ 2391 train 3.9970 , allloss: 3.9970, dt: 695.84ms, fracRes: 0.3214, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0593, norm(y): 0.9899, norm:0.4528, tok/sec: 188363.95, flops:164.98, batch-reuse:1
@ 2392 train 4.0118 , allloss: 4.0118, dt: 697.29ms, fracRes: 0.3222, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0608, norm(y): 0.9902, norm:0.4277, tok/sec: 187974.48, flops:164.64, batch-reuse:1
@ 2393 train 4.0417 , allloss: 4.0417, dt: 700.36ms, fracRes: 0.3286, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0753, norm(y): 0.9899, norm:0.4322, tok/sec: 187148.62, flops:163.92, batch-reuse:1
@ 2394 train 3.9523 , allloss: 3.9523, dt: 686.85ms, fracRes: 0.3304, norm(attn): 0.4355, norm(output): 0.9023, norm(x): 1.0660, norm(y): 0.9897, norm:0.4373, tok/sec: 190829.92, flops:167.14, batch-reuse:1
@ 2395 train 3.8899 , allloss: 3.8899, dt: 694.91ms, fracRes: 0.3376, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0749, norm(y): 0.9896, norm:0.3980, tok/sec: 188616.83, flops:165.20, batch-reuse:1
@ 2396 train 3.9281 , allloss: 3.9281, dt: 688.84ms, fracRes: 0.3284, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0651, norm(y): 0.9899, norm:0.3830, tok/sec: 190278.28, flops:166.66, batch-reuse:1
@ 2397 train 3.8976 , allloss: 3.8976, dt: 702.24ms, fracRes: 0.3165, norm(attn): 0.4395, norm(output): 0.9219, norm(x): 1.0605, norm(y): 0.9901, norm:0.4090, tok/sec: 186648.00, flops:163.48, batch-reuse:1
@ 2398 train 3.9493 , allloss: 3.9493, dt: 699.56ms, fracRes: 0.3218, norm(attn): 0.4395, norm(output): 0.9219, norm(x): 1.0660, norm(y): 0.9900, norm:0.4209, tok/sec: 187363.63, flops:164.10, batch-reuse:1
@ 2399 train 3.9191 , allloss: 3.9191, dt: 703.61ms, fracRes: 0.3229, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0626, norm(y): 0.9900, norm:0.3756, tok/sec: 186285.85, flops:163.16, batch-reuse:1
@ 2400 train 3.8952 , allloss: 3.8952, dt: 706.82ms, fracRes: 0.3253, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0648, norm(y): 0.9898, norm:0.3743, tok/sec: 185438.13, flops:162.42, batch-reuse:1
@ 2401 train 3.9924 , allloss: 3.9924, dt: 686.12ms, fracRes: 0.3256, norm(attn): 0.4336, norm(output): 0.9023, norm(x): 1.0607, norm(y): 0.9899, norm:0.3872, tok/sec: 191033.96, flops:167.32, batch-reuse:1
@ 2402 train 3.9344 , allloss: 3.9344, dt: 715.68ms, fracRes: 0.3289, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0683, norm(y): 0.9898, norm:0.3776, tok/sec: 183142.85, flops:160.41, batch-reuse:1
@ 2403 train 3.8194 , allloss: 3.8194, dt: 689.82ms, fracRes: 0.3272, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0718, norm(y): 0.9899, norm:0.4151, tok/sec: 190009.37, flops:166.42, batch-reuse:1
@ 2404 train 3.8470 , allloss: 3.8470, dt: 691.51ms, fracRes: 0.3288, norm(attn): 0.4375, norm(output): 0.9102, norm(x): 1.0632, norm(y): 0.9900, norm:0.3602, tok/sec: 189544.83, flops:166.01, batch-reuse:1
@ 2405 train 3.9348 , allloss: 3.9348, dt: 705.82ms, fracRes: 0.3270, norm(attn): 0.4395, norm(output): 0.9141, norm(x): 1.0635, norm(y): 0.9899, norm:0.3725, tok/sec: 185701.40, flops:162.65, batch-reuse:1
@ 2406 train 3.8882 , allloss: 3.8882, dt: 703.94ms, fracRes: 0.3220, norm(attn): 0.4375, norm(output): 0.9062, norm(x): 1.0575, norm(y): 0.9900, norm:0.3881, tok/sec: 186197.77, flops:163.08, batch-reuse:1
@ 2407 train 3.8625 , allloss: 3.8625, dt: 694.22ms, fracRes: 0.3206, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0644, norm(y): 0.9900, norm:0.3726, tok/sec: 188804.23, flops:165.37, batch-reuse:1
@ 2408 train 3.9097 , allloss: 3.9097, dt: 692.74ms, fracRes: 0.3238, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0680, norm(y): 0.9899, norm:0.4161, tok/sec: 189208.15, flops:165.72, batch-reuse:1
@ 2409 train 3.8971 , allloss: 3.8971, dt: 700.44ms, fracRes: 0.3283, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0681, norm(y): 0.9898, norm:0.3689, tok/sec: 187129.07, flops:163.90, batch-reuse:1
@ 2410 train 3.8446 , allloss: 3.8446, dt: 699.08ms, fracRes: 0.3303, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0681, norm(y): 0.9898, norm:0.3781, tok/sec: 187492.90, flops:164.22, batch-reuse:1
@ 2411 train 3.9671 , allloss: 3.9671, dt: 690.64ms, fracRes: 0.3228, norm(attn): 0.4355, norm(output): 0.9141, norm(x): 1.0637, norm(y): 0.9902, norm:0.4180, tok/sec: 189784.38, flops:166.22, batch-reuse:1
@ 2412 train 3.9301 , allloss: 3.9301, dt: 693.57ms, fracRes: 0.3275, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0752, norm(y): 0.9902, norm:0.3948, tok/sec: 188982.58, flops:165.52, batch-reuse:1
@ 2413 train 3.9916 , allloss: 3.9916, dt: 703.06ms, fracRes: 0.3233, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0749, norm(y): 0.9902, norm:0.3971, tok/sec: 186431.34, flops:163.29, batch-reuse:1
@ 2414 train 3.9261 , allloss: 3.9261, dt: 703.51ms, fracRes: 0.3150, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0638, norm(y): 0.9901, norm:0.3815, tok/sec: 186312.75, flops:163.18, batch-reuse:1
@ 2415 train 4.0549 , allloss: 4.0549, dt: 694.83ms, fracRes: 0.3220, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0721, norm(y): 0.9902, norm:0.4480, tok/sec: 188640.06, flops:165.22, batch-reuse:1
@ 2416 train 4.0124 , allloss: 4.0124, dt: 700.79ms, fracRes: 0.3257, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0725, norm(y): 0.9898, norm:0.4242, tok/sec: 187033.63, flops:163.81, batch-reuse:1
@ 2417 train 4.0576 , allloss: 4.0576, dt: 685.72ms, fracRes: 0.3268, norm(attn): 0.4316, norm(output): 0.9258, norm(x): 1.0738, norm(y): 0.9899, norm:0.4295, tok/sec: 191144.62, flops:167.42, batch-reuse:1
@ 2418 train 4.0827 , allloss: 4.0827, dt: 698.51ms, fracRes: 0.3295, norm(attn): 0.4336, norm(output): 0.9219, norm(x): 1.0742, norm(y): 0.9900, norm:0.4501, tok/sec: 187644.25, flops:164.35, batch-reuse:1
@ 2419 train 4.0611 , allloss: 4.0611, dt: 694.54ms, fracRes: 0.3358, norm(attn): 0.4336, norm(output): 0.9258, norm(x): 1.0833, norm(y): 0.9899, norm:0.4561, tok/sec: 188717.90, flops:165.29, batch-reuse:1
@ 2420 train 4.0566 , allloss: 4.0566, dt: 700.30ms, fracRes: 0.3334, norm(attn): 0.4336, norm(output): 0.9180, norm(x): 1.0760, norm(y): 0.9899, norm:0.4393, tok/sec: 187165.76, flops:163.93, batch-reuse:1
@ 2421 train 4.0705 , allloss: 4.0705, dt: 701.03ms, fracRes: 0.3257, norm(attn): 0.4316, norm(output): 0.9219, norm(x): 1.0723, norm(y): 0.9901, norm:0.3721, tok/sec: 186969.90, flops:163.76, batch-reuse:1
@ 2422 train 4.0760 , allloss: 4.0760, dt: 697.87ms, fracRes: 0.3300, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0782, norm(y): 0.9900, norm:0.4680, tok/sec: 187817.08, flops:164.50, batch-reuse:1
@ 2423 train 4.2003 , allloss: 4.2003, dt: 701.70ms, fracRes: 0.3260, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0718, norm(y): 0.9904, norm:0.4101, tok/sec: 186791.00, flops:163.60, batch-reuse:1
@ 2424 train 4.0629 , allloss: 4.0629, dt: 702.07ms, fracRes: 0.3246, norm(attn): 0.4414, norm(output): 0.9219, norm(x): 1.0728, norm(y): 0.9905, norm:0.4706, tok/sec: 186693.64, flops:163.52, batch-reuse:1
@ 2425 train 4.0011 , allloss: 4.0011, dt: 698.16ms, fracRes: 0.3346, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0859, norm(y): 0.9903, norm:0.3651, tok/sec: 187739.41, flops:164.43, batch-reuse:1
@ 2426 train 4.0027 , allloss: 4.0027, dt: 695.63ms, fracRes: 0.3362, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0807, norm(y): 0.9901, norm:0.4822, tok/sec: 188422.12, flops:165.03, batch-reuse:1
@ 2427 train 4.1985 , allloss: 4.1985, dt: 700.08ms, fracRes: 0.3228, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0758, norm(y): 0.9906, norm:0.4129, tok/sec: 187224.66, flops:163.98, batch-reuse:1
@ 2428 train 4.0872 , allloss: 4.0872, dt: 699.31ms, fracRes: 0.3239, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0797, norm(y): 0.9905, norm:0.4153, tok/sec: 187429.75, flops:164.16, batch-reuse:1
@ 2429 train 4.0410 , allloss: 4.0410, dt: 713.93ms, fracRes: 0.3263, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0768, norm(y): 0.9905, norm:0.3993, tok/sec: 183591.52, flops:160.80, batch-reuse:1
@ 2430 train 4.0803 , allloss: 4.0803, dt: 689.47ms, fracRes: 0.3305, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0778, norm(y): 0.9904, norm:0.3827, tok/sec: 190106.68, flops:166.51, batch-reuse:1
@ 2431 train 4.0852 , allloss: 4.0852, dt: 699.92ms, fracRes: 0.3335, norm(attn): 0.4395, norm(output): 0.9219, norm(x): 1.0819, norm(y): 0.9903, norm:0.3802, tok/sec: 187266.75, flops:164.02, batch-reuse:1
@ 2432 train 3.9633 , allloss: 3.9633, dt: 710.57ms, fracRes: 0.3250, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0730, norm(y): 0.9902, norm:0.3722, tok/sec: 184459.84, flops:161.56, batch-reuse:1
@ 2433 train 4.0537 , allloss: 4.0537, dt: 706.31ms, fracRes: 0.3224, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0714, norm(y): 0.9903, norm:0.3872, tok/sec: 185572.77, flops:162.53, batch-reuse:1
@ 2434 train 4.0989 , allloss: 4.0989, dt: 691.16ms, fracRes: 0.3249, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0770, norm(y): 0.9902, norm:0.3724, tok/sec: 189641.79, flops:166.10, batch-reuse:1
@ 2435 train 4.1334 , allloss: 4.1334, dt: 694.21ms, fracRes: 0.3258, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0761, norm(y): 0.9905, norm:0.3765, tok/sec: 188808.51, flops:165.37, batch-reuse:1
@ 2436 train 4.0431 , allloss: 4.0431, dt: 698.19ms, fracRes: 0.3326, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0775, norm(y): 0.9902, norm:0.4180, tok/sec: 187730.44, flops:164.42, batch-reuse:1
@ 2437 train 3.9710 , allloss: 3.9710, dt: 702.17ms, fracRes: 0.3319, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0771, norm(y): 0.9901, norm:0.3911, tok/sec: 186667.39, flops:163.49, batch-reuse:1
@ 2438 train 4.0070 , allloss: 4.0070, dt: 699.44ms, fracRes: 0.3310, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0782, norm(y): 0.9903, norm:0.3811, tok/sec: 187396.08, flops:164.13, batch-reuse:1
@ 2439 train 4.0813 , allloss: 4.0813, dt: 698.51ms, fracRes: 0.3295, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0772, norm(y): 0.9903, norm:0.3926, tok/sec: 187645.98, flops:164.35, batch-reuse:1
@ 2440 train 4.0167 , allloss: 4.0167, dt: 698.21ms, fracRes: 0.3429, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0894, norm(y): 0.9902, norm:0.6055, tok/sec: 187724.47, flops:164.42, batch-reuse:1
@ 2441 train 3.9966 , allloss: 3.9966, dt: 699.65ms, fracRes: 0.3392, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0829, norm(y): 0.9901, norm:0.5382, tok/sec: 187339.95, flops:164.08, batch-reuse:1
@ 2442 train 4.0122 , allloss: 4.0122, dt: 697.52ms, fracRes: 0.3298, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0797, norm(y): 0.9901, norm:0.4376, tok/sec: 187911.71, flops:164.58, batch-reuse:1
@ 2443 train 4.1373 , allloss: 4.1373, dt: 692.94ms, fracRes: 0.3280, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0757, norm(y): 0.9902, norm:0.3956, tok/sec: 189152.42, flops:165.67, batch-reuse:1
@ 2444 train 4.0126 , allloss: 4.0126, dt: 696.29ms, fracRes: 0.3267, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0721, norm(y): 0.9901, norm:0.3839, tok/sec: 188243.21, flops:164.87, batch-reuse:1
@ 2445 train 3.9964 , allloss: 3.9964, dt: 688.01ms, fracRes: 0.3318, norm(attn): 0.4375, norm(output): 0.9180, norm(x): 1.0747, norm(y): 0.9901, norm:0.3928, tok/sec: 190507.94, flops:166.86, batch-reuse:1
@ 2446 train 4.2207 , allloss: 4.2207, dt: 696.76ms, fracRes: 0.3206, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0716, norm(y): 0.9904, norm:0.4113, tok/sec: 188116.83, flops:164.76, batch-reuse:1
@ 2447 train 4.1090 , allloss: 4.1090, dt: 698.96ms, fracRes: 0.3243, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0732, norm(y): 0.9904, norm:0.4116, tok/sec: 187525.39, flops:164.25, batch-reuse:1
@ 2448 train 4.0689 , allloss: 4.0689, dt: 700.15ms, fracRes: 0.3256, norm(attn): 0.4336, norm(output): 0.9258, norm(x): 1.0773, norm(y): 0.9904, norm:0.4454, tok/sec: 187205.28, flops:163.96, batch-reuse:1
@ 2449 train 4.0455 , allloss: 4.0455, dt: 699.16ms, fracRes: 0.3247, norm(attn): 0.4336, norm(output): 0.9258, norm(x): 1.0757, norm(y): 0.9904, norm:0.3998, tok/sec: 187469.57, flops:164.20, batch-reuse:1
@ 2450 train 4.0074 , allloss: 4.0074, dt: 689.18ms, fracRes: 0.3207, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0702, norm(y): 0.9905, norm:0.4090, tok/sec: 190186.32, flops:166.58, batch-reuse:1
@ 2451 train 4.1464 , allloss: 4.1464, dt: 681.22ms, fracRes: 0.3283, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0780, norm(y): 0.9905, norm:0.4344, tok/sec: 192408.06, flops:168.52, batch-reuse:1
@ 2452 train 3.9442 , allloss: 3.9442, dt: 701.69ms, fracRes: 0.3363, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0821, norm(y): 0.9902, norm:0.4676, tok/sec: 186794.24, flops:163.60, batch-reuse:1
@ 2453 train 3.9980 , allloss: 3.9980, dt: 702.77ms, fracRes: 0.3281, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0775, norm(y): 0.9903, norm:0.4022, tok/sec: 186508.63, flops:163.35, batch-reuse:1
@ 2454 train 3.9534 , allloss: 3.9534, dt: 710.25ms, fracRes: 0.3312, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0797, norm(y): 0.9900, norm:0.3885, tok/sec: 184544.24, flops:161.63, batch-reuse:1
@ 2455 train 4.0638 , allloss: 4.0638, dt: 702.61ms, fracRes: 0.3331, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0791, norm(y): 0.9900, norm:0.4504, tok/sec: 186549.70, flops:163.39, batch-reuse:1
@ 2456 train 4.0740 , allloss: 4.0740, dt: 691.49ms, fracRes: 0.3263, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0756, norm(y): 0.9903, norm:0.4216, tok/sec: 189548.94, flops:166.02, batch-reuse:1
@ 2457 train 4.2036 , allloss: 4.2036, dt: 696.52ms, fracRes: 0.3231, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0731, norm(y): 0.9903, norm:0.4224, tok/sec: 188180.38, flops:164.82, batch-reuse:1
@ 2458 train 3.9236 , allloss: 3.9236, dt: 684.37ms, fracRes: 0.3344, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0732, norm(y): 0.9899, norm:0.3951, tok/sec: 191521.18, flops:167.74, batch-reuse:1
@ 2459 train 4.0396 , allloss: 4.0396, dt: 707.78ms, fracRes: 0.3349, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0773, norm(y): 0.9899, norm:0.4030, tok/sec: 185186.40, flops:162.20, batch-reuse:1
@ 2460 train 4.1264 , allloss: 4.1264, dt: 689.84ms, fracRes: 0.3406, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0865, norm(y): 0.9900, norm:0.4811, tok/sec: 190003.52, flops:166.42, batch-reuse:1
@ 2461 train 4.0348 , allloss: 4.0348, dt: 700.92ms, fracRes: 0.3277, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0737, norm(y): 0.9901, norm:0.4608, tok/sec: 187000.42, flops:163.79, batch-reuse:1
@ 2462 train 4.1154 , allloss: 4.1154, dt: 702.84ms, fracRes: 0.3282, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0749, norm(y): 0.9900, norm:0.4206, tok/sec: 186490.09, flops:163.34, batch-reuse:1
@ 2463 train 4.1217 , allloss: 4.1217, dt: 697.63ms, fracRes: 0.3288, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0746, norm(y): 0.9900, norm:0.4462, tok/sec: 187882.88, flops:164.56, batch-reuse:1
@ 2464 train 4.0504 , allloss: 4.0504, dt: 688.49ms, fracRes: 0.3305, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0737, norm(y): 0.9902, norm:0.4636, tok/sec: 190376.00, flops:166.74, batch-reuse:1
@ 2465 train 4.0104 , allloss: 4.0104, dt: 709.04ms, fracRes: 0.3283, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0692, norm(y): 0.9903, norm:0.3840, tok/sec: 184857.67, flops:161.91, batch-reuse:1
@ 2466 train 4.1325 , allloss: 4.1325, dt: 714.23ms, fracRes: 0.3299, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0757, norm(y): 0.9903, norm:0.4003, tok/sec: 183516.02, flops:160.73, batch-reuse:1
@ 2467 train 4.0085 , allloss: 4.0085, dt: 703.11ms, fracRes: 0.3305, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0766, norm(y): 0.9902, norm:0.4069, tok/sec: 186416.80, flops:163.27, batch-reuse:1
@ 2468 train 4.0860 , allloss: 4.0860, dt: 675.88ms, fracRes: 0.3224, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0760, norm(y): 0.9905, norm:0.3647, tok/sec: 193928.82, flops:169.85, batch-reuse:1
@ 2469 train 4.1980 , allloss: 4.1980, dt: 691.78ms, fracRes: 0.3222, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0797, norm(y): 0.9904, norm:0.4220, tok/sec: 189471.01, flops:165.95, batch-reuse:1
@ 2470 train 3.9738 , allloss: 3.9738, dt: 693.99ms, fracRes: 0.3273, norm(attn): 0.4336, norm(output): 0.9297, norm(x): 1.0764, norm(y): 0.9902, norm:0.3662, tok/sec: 188866.37, flops:165.42, batch-reuse:1
@ 2471 train 4.0126 , allloss: 4.0126, dt: 682.98ms, fracRes: 0.3314, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0721, norm(y): 0.9902, norm:0.4040, tok/sec: 191912.17, flops:168.09, batch-reuse:1
@ 2472 train 4.0841 , allloss: 4.0841, dt: 688.59ms, fracRes: 0.3319, norm(attn): 0.4355, norm(output): 0.9219, norm(x): 1.0715, norm(y): 0.9903, norm:0.3917, tok/sec: 190349.24, flops:166.72, batch-reuse:1
@ 2473 train 3.9792 , allloss: 3.9792, dt: 704.74ms, fracRes: 0.3272, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0705, norm(y): 0.9903, norm:0.3706, tok/sec: 185986.31, flops:162.90, batch-reuse:1
@ 2474 train 3.9782 , allloss: 3.9782, dt: 708.31ms, fracRes: 0.3251, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0718, norm(y): 0.9902, norm:0.3970, tok/sec: 185049.26, flops:162.08, batch-reuse:1
@ 2475 train 4.0604 , allloss: 4.0604, dt: 693.98ms, fracRes: 0.3282, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0780, norm(y): 0.9901, norm:0.3796, tok/sec: 188869.74, flops:165.42, batch-reuse:1
@ 2476 train 3.9985 , allloss: 3.9985, dt: 693.87ms, fracRes: 0.3399, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0853, norm(y): 0.9897, norm:0.4059, tok/sec: 188899.66, flops:165.45, batch-reuse:1
@ 2477 train 4.0151 , allloss: 4.0151, dt: 700.72ms, fracRes: 0.3392, norm(attn): 0.4336, norm(output): 0.9297, norm(x): 1.0869, norm(y): 0.9897, norm:0.3765, tok/sec: 187053.49, flops:163.83, batch-reuse:1
@ 2478 train 3.9848 , allloss: 3.9848, dt: 692.89ms, fracRes: 0.3308, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0771, norm(y): 0.9900, norm:0.3842, tok/sec: 189168.43, flops:165.68, batch-reuse:1
@ 2479 train 3.9873 , allloss: 3.9873, dt: 705.27ms, fracRes: 0.3238, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0730, norm(y): 0.9903, norm:0.4033, tok/sec: 185846.86, flops:162.78, batch-reuse:1
@ 2480 train 4.0626 , allloss: 4.0626, dt: 695.86ms, fracRes: 0.3275, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0763, norm(y): 0.9901, norm:0.3653, tok/sec: 188360.91, flops:164.98, batch-reuse:1
@ 2481 train 3.9722 , allloss: 3.9722, dt: 695.27ms, fracRes: 0.3317, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0810, norm(y): 0.9898, norm:0.3637, tok/sec: 188518.78, flops:165.12, batch-reuse:1
@ 2482 train 4.1476 , allloss: 4.1476, dt: 679.76ms, fracRes: 0.3283, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0785, norm(y): 0.9902, norm:0.4192, tok/sec: 192821.54, flops:168.88, batch-reuse:1
@ 2483 train 4.0461 , allloss: 4.0461, dt: 701.48ms, fracRes: 0.3312, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0825, norm(y): 0.9903, norm:0.3916, tok/sec: 186849.54, flops:163.65, batch-reuse:1
@ 2484 train 4.0653 , allloss: 4.0653, dt: 696.58ms, fracRes: 0.3270, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0789, norm(y): 0.9904, norm:0.4458, tok/sec: 188164.86, flops:164.81, batch-reuse:1
@ 2485 train 3.9647 , allloss: 3.9647, dt: 698.57ms, fracRes: 0.3278, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0736, norm(y): 0.9902, norm:0.4424, tok/sec: 187629.07, flops:164.34, batch-reuse:1
@ 2486 train 3.9872 , allloss: 3.9872, dt: 688.24ms, fracRes: 0.3297, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0766, norm(y): 0.9901, norm:0.3887, tok/sec: 190444.26, flops:166.80, batch-reuse:1
@ 2487 train 4.0725 , allloss: 4.0725, dt: 681.42ms, fracRes: 0.3275, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0790, norm(y): 0.9902, norm:0.3950, tok/sec: 192350.23, flops:168.47, batch-reuse:1
@ 2488 train 4.0409 , allloss: 4.0409, dt: 706.77ms, fracRes: 0.3243, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0778, norm(y): 0.9903, norm:0.3640, tok/sec: 185452.58, flops:162.43, batch-reuse:1
@ 2489 train 4.0208 , allloss: 4.0208, dt: 703.22ms, fracRes: 0.3211, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0737, norm(y): 0.9905, norm:0.4080, tok/sec: 186389.24, flops:163.25, batch-reuse:1
@ 2490 train 3.9893 , allloss: 3.9893, dt: 705.80ms, fracRes: 0.3237, norm(attn): 0.4395, norm(output): 0.9297, norm(x): 1.0736, norm(y): 0.9906, norm:0.4349, tok/sec: 185708.05, flops:162.65, batch-reuse:1
@ 2491 train 4.1471 , allloss: 4.1471, dt: 708.77ms, fracRes: 0.3249, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0763, norm(y): 0.9904, norm:0.4007, tok/sec: 184929.74, flops:161.97, batch-reuse:1
@ 2492 train 4.0895 , allloss: 4.0895, dt: 708.21ms, fracRes: 0.3231, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0772, norm(y): 0.9904, norm:0.4153, tok/sec: 185074.49, flops:162.10, batch-reuse:1
@ 2493 train 4.0505 , allloss: 4.0505, dt: 705.17ms, fracRes: 0.3277, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0778, norm(y): 0.9904, norm:0.4333, tok/sec: 185871.80, flops:162.80, batch-reuse:1
@ 2494 train 4.0323 , allloss: 4.0323, dt: 697.45ms, fracRes: 0.3318, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0827, norm(y): 0.9903, norm:0.4180, tok/sec: 187929.76, flops:164.60, batch-reuse:1
@ 2495 train 4.0183 , allloss: 4.0183, dt: 699.30ms, fracRes: 0.3249, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0765, norm(y): 0.9905, norm:0.4136, tok/sec: 187431.92, flops:164.16, batch-reuse:1
@ 2496 train 3.9778 , allloss: 3.9778, dt: 687.88ms, fracRes: 0.3247, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0770, norm(y): 0.9905, norm:0.3907, tok/sec: 190545.38, flops:166.89, batch-reuse:1
@ 2497 train 4.0509 , allloss: 4.0509, dt: 698.39ms, fracRes: 0.3325, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0825, norm(y): 0.9902, norm:0.3851, tok/sec: 187677.11, flops:164.38, batch-reuse:1
@ 2498 train 4.0617 , allloss: 4.0617, dt: 696.54ms, fracRes: 0.3328, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0868, norm(y): 0.9902, norm:0.4066, tok/sec: 188174.91, flops:164.81, batch-reuse:1
@ 2499 train 4.0049 , allloss: 4.0049, dt: 686.38ms, fracRes: 0.3350, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0838, norm(y): 0.9902, norm:0.3643, tok/sec: 190961.43, flops:167.25, batch-reuse:1
@ 2500 train 3.9899 , allloss: 3.9899, dt: 696.96ms, fracRes: 0.3407, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0918, norm(y): 0.9902, norm:0.4003, tok/sec: 188062.45, flops:164.72, batch-reuse:1
@ 2501 train 3.9356 , allloss: 3.9356, dt: 694.07ms, fracRes: 0.3382, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0845, norm(y): 0.9901, norm:0.3979, tok/sec: 188844.57, flops:165.40, batch-reuse:1
@ 2502 train 4.0882 , allloss: 4.0882, dt: 692.18ms, fracRes: 0.3371, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0930, norm(y): 0.9903, norm:0.4089, tok/sec: 189360.58, flops:165.85, batch-reuse:1
@ 2503 train 4.0029 , allloss: 4.0029, dt: 699.96ms, fracRes: 0.3339, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0862, norm(y): 0.9902, norm:0.3958, tok/sec: 187255.78, flops:164.01, batch-reuse:1
@ 2504 train 4.0286 , allloss: 4.0286, dt: 695.33ms, fracRes: 0.3367, norm(attn): 0.4355, norm(output): 0.9258, norm(x): 1.0880, norm(y): 0.9904, norm:0.4009, tok/sec: 188503.91, flops:165.10, batch-reuse:1
@ 2505 train 4.0506 , allloss: 4.0506, dt: 701.21ms, fracRes: 0.3362, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0865, norm(y): 0.9903, norm:0.4878, tok/sec: 186922.41, flops:163.72, batch-reuse:1
@ 2506 train 4.1035 , allloss: 4.1035, dt: 701.11ms, fracRes: 0.3288, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0794, norm(y): 0.9904, norm:0.4005, tok/sec: 186950.50, flops:163.74, batch-reuse:1
@ 2507 train 4.0049 , allloss: 4.0049, dt: 705.12ms, fracRes: 0.3330, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0866, norm(y): 0.9902, norm:0.4647, tok/sec: 185885.12, flops:162.81, batch-reuse:1
@ 2508 train 3.9699 , allloss: 3.9699, dt: 703.09ms, fracRes: 0.3314, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0759, norm(y): 0.9901, norm:0.4878, tok/sec: 186423.56, flops:163.28, batch-reuse:1
@ 2509 train 3.9421 , allloss: 3.9421, dt: 704.64ms, fracRes: 0.3264, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0736, norm(y): 0.9902, norm:0.4220, tok/sec: 186012.17, flops:162.92, batch-reuse:1
@ 2510 train 4.0374 , allloss: 4.0374, dt: 693.86ms, fracRes: 0.3235, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0758, norm(y): 0.9905, norm:0.3834, tok/sec: 188901.80, flops:165.45, batch-reuse:1
@ 2511 train 3.9890 , allloss: 3.9890, dt: 712.70ms, fracRes: 0.3231, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0764, norm(y): 0.9905, norm:0.3967, tok/sec: 183908.25, flops:161.08, batch-reuse:1
@ 2512 train 3.9877 , allloss: 3.9877, dt: 714.42ms, fracRes: 0.3235, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0725, norm(y): 0.9903, norm:0.3627, tok/sec: 183466.17, flops:160.69, batch-reuse:1
@ 2513 train 4.0502 , allloss: 4.0502, dt: 716.80ms, fracRes: 0.3238, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0725, norm(y): 0.9903, norm:0.3790, tok/sec: 182857.03, flops:160.16, batch-reuse:1
@ 2514 train 4.0712 , allloss: 4.0712, dt: 710.42ms, fracRes: 0.3338, norm(attn): 0.4375, norm(output): 0.9258, norm(x): 1.0814, norm(y): 0.9903, norm:0.4647, tok/sec: 184498.41, flops:161.59, batch-reuse:1
@ 2515 train 3.9909 , allloss: 3.9909, dt: 705.29ms, fracRes: 0.3273, norm(attn): 0.4375, norm(output): 0.9219, norm(x): 1.0715, norm(y): 0.9905, norm:0.4069, tok/sec: 185840.26, flops:162.77, batch-reuse:1
@ 2516 train 3.8863 , allloss: 3.8863, dt: 707.54ms, fracRes: 0.3311, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0789, norm(y): 0.9904, norm:0.4081, tok/sec: 185249.05, flops:162.25, batch-reuse:1
@ 2517 train 3.9445 , allloss: 3.9445, dt: 705.82ms, fracRes: 0.3267, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0819, norm(y): 0.9904, norm:0.3712, tok/sec: 185700.77, flops:162.65, batch-reuse:1
@ 2518 train 3.9160 , allloss: 3.9160, dt: 706.66ms, fracRes: 0.3294, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0866, norm(y): 0.9903, norm:0.4480, tok/sec: 185481.49, flops:162.46, batch-reuse:1
@ 2519 train 4.0488 , allloss: 4.0488, dt: 690.39ms, fracRes: 0.3271, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0815, norm(y): 0.9904, norm:0.3918, tok/sec: 189851.36, flops:166.28, batch-reuse:1
@ 2520 train 4.0338 , allloss: 4.0338, dt: 698.63ms, fracRes: 0.3288, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0868, norm(y): 0.9904, norm:0.4257, tok/sec: 187613.07, flops:164.32, batch-reuse:1
@ 2521 train 3.9412 , allloss: 3.9412, dt: 692.70ms, fracRes: 0.3296, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0844, norm(y): 0.9903, norm:0.4153, tok/sec: 189220.33, flops:165.73, batch-reuse:1
@ 2522 train 4.0734 , allloss: 4.0734, dt: 705.18ms, fracRes: 0.3259, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0833, norm(y): 0.9904, norm:0.4467, tok/sec: 185870.80, flops:162.80, batch-reuse:1
@ 2523 train 3.9863 , allloss: 3.9863, dt: 706.60ms, fracRes: 0.3201, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0821, norm(y): 0.9906, norm:0.4653, tok/sec: 185497.57, flops:162.47, batch-reuse:1
@ 2524 train 3.9709 , allloss: 3.9709, dt: 708.24ms, fracRes: 0.3198, norm(attn): 0.4395, norm(output): 0.9297, norm(x): 1.0761, norm(y): 0.9906, norm:0.3698, tok/sec: 185066.08, flops:162.09, batch-reuse:1
@ 2525 train 3.9600 , allloss: 3.9600, dt: 689.30ms, fracRes: 0.3329, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0917, norm(y): 0.9904, norm:0.4001, tok/sec: 190151.00, flops:166.54, batch-reuse:1
@ 2526 train 4.0705 , allloss: 4.0705, dt: 699.76ms, fracRes: 0.3331, norm(attn): 0.4395, norm(output): 0.9258, norm(x): 1.0861, norm(y): 0.9905, norm:0.4116, tok/sec: 187310.14, flops:164.06, batch-reuse:1
@ 2527 train 3.9862 , allloss: 3.9862, dt: 698.63ms, fracRes: 0.3351, norm(attn): 0.4395, norm(output): 0.9297, norm(x): 1.0856, norm(y): 0.9904, norm:0.3821, tok/sec: 187612.04, flops:164.32, batch-reuse:1
@ 2528 train 4.0222 , allloss: 4.0222, dt: 698.15ms, fracRes: 0.3305, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0844, norm(y): 0.9903, norm:0.3786, tok/sec: 187742.81, flops:164.44, batch-reuse:1
@ 2529 train 4.0125 , allloss: 4.0125, dt: 701.89ms, fracRes: 0.3248, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0843, norm(y): 0.9905, norm:0.3481, tok/sec: 186741.20, flops:163.56, batch-reuse:1
@ 2530 train 3.9692 , allloss: 3.9692, dt: 699.40ms, fracRes: 0.3240, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0862, norm(y): 0.9905, norm:0.3575, tok/sec: 187405.15, flops:164.14, batch-reuse:1
@ 2531 train 3.9291 , allloss: 3.9291, dt: 698.56ms, fracRes: 0.3258, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0847, norm(y): 0.9905, norm:0.3548, tok/sec: 187632.47, flops:164.34, batch-reuse:1
@ 2532 train 3.9814 , allloss: 3.9814, dt: 691.94ms, fracRes: 0.3327, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0893, norm(y): 0.9903, norm:0.3678, tok/sec: 189428.12, flops:165.91, batch-reuse:1
@ 2533 train 3.9355 , allloss: 3.9355, dt: 700.40ms, fracRes: 0.3414, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1018, norm(y): 0.9903, norm:0.4917, tok/sec: 187138.37, flops:163.91, batch-reuse:1
@ 2534 train 4.0884 , allloss: 4.0884, dt: 699.34ms, fracRes: 0.3329, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0888, norm(y): 0.9906, norm:0.4560, tok/sec: 187422.08, flops:164.15, batch-reuse:1
@ 2535 train 3.9318 , allloss: 3.9318, dt: 701.80ms, fracRes: 0.3236, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0765, norm(y): 0.9906, norm:0.4102, tok/sec: 186764.42, flops:163.58, batch-reuse:1
@ 2536 train 3.9916 , allloss: 3.9916, dt: 699.33ms, fracRes: 0.3262, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0820, norm(y): 0.9905, norm:0.4052, tok/sec: 187424.95, flops:164.16, batch-reuse:1
@ 2537 train 3.9954 , allloss: 3.9954, dt: 691.22ms, fracRes: 0.3252, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0807, norm(y): 0.9904, norm:0.4016, tok/sec: 189624.00, flops:166.08, batch-reuse:1
@ 2538 train 4.0968 , allloss: 4.0968, dt: 697.24ms, fracRes: 0.3257, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0845, norm(y): 0.9905, norm:0.4162, tok/sec: 187987.53, flops:164.65, batch-reuse:1
@ 2539 train 3.9845 , allloss: 3.9845, dt: 711.67ms, fracRes: 0.3270, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0890, norm(y): 0.9904, norm:0.4120, tok/sec: 184174.96, flops:161.31, batch-reuse:1
@ 2540 train 4.0451 , allloss: 4.0451, dt: 702.30ms, fracRes: 0.3333, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0894, norm(y): 0.9903, norm:0.4100, tok/sec: 186633.36, flops:163.46, batch-reuse:1
@ 2541 train 4.0352 , allloss: 4.0352, dt: 696.86ms, fracRes: 0.3347, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0874, norm(y): 0.9906, norm:0.3900, tok/sec: 188090.50, flops:164.74, batch-reuse:1
@ 2542 train 4.0393 , allloss: 4.0393, dt: 698.83ms, fracRes: 0.3461, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.1059, norm(y): 0.9906, norm:0.6255, tok/sec: 187558.21, flops:164.27, batch-reuse:1
@ 2543 train 3.9863 , allloss: 3.9863, dt: 695.40ms, fracRes: 0.3287, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0817, norm(y): 0.9905, norm:0.4046, tok/sec: 188483.68, flops:165.08, batch-reuse:1
@ 2544 train 4.0639 , allloss: 4.0639, dt: 701.16ms, fracRes: 0.3386, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0910, norm(y): 0.9904, norm:0.4605, tok/sec: 186935.76, flops:163.73, batch-reuse:1
@ 2545 train 4.0300 , allloss: 4.0300, dt: 701.05ms, fracRes: 0.3320, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0890, norm(y): 0.9905, norm:0.4390, tok/sec: 186966.02, flops:163.76, batch-reuse:1
@ 2546 train 4.0165 , allloss: 4.0165, dt: 705.29ms, fracRes: 0.3330, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0854, norm(y): 0.9905, norm:0.4256, tok/sec: 185840.64, flops:162.77, batch-reuse:1
@ 2547 train 4.0334 , allloss: 4.0334, dt: 689.73ms, fracRes: 0.3340, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0890, norm(y): 0.9905, norm:0.3926, tok/sec: 190033.80, flops:166.44, batch-reuse:1
@ 2548 train 4.1382 , allloss: 4.1382, dt: 691.45ms, fracRes: 0.3364, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0957, norm(y): 0.9903, norm:0.5668, tok/sec: 189561.49, flops:166.03, batch-reuse:1
@ 2549 train 4.1235 , allloss: 4.1235, dt: 693.02ms, fracRes: 0.3241, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0899, norm(y): 0.9907, norm:0.4465, tok/sec: 189132.31, flops:165.65, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.8789, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.2275, 0.2988, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0091, 0.1553, 0.1318, 0.7031, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0396, 0.1553, 0.1865, 0.1924, 0.4258, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1787, 0.0840, 0.0425, 0.2344, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.1543, 0.0393, 0.0664, 0.1191, 0.1406, 0.4043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.1245, 0.0557, 0.0211, 0.1128, 0.0593, 0.1787, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0132, 0.0869, 0.0369, 0.0376, 0.1123, 0.1709, 0.4043, 0.0146, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1475, 0.0400, 0.0204, 0.0640, 0.0835, 0.1641, 0.0967, 0.1260, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.1045, 0.0728, 0.0242, 0.1069, 0.2031, 0.1816, 0.0476, 0.0815, 0.0630, 0.0272, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.0476, 0.0454, 0.0417, 0.0850, 0.0713, 0.0549, 0.0918, 0.0491, 0.0388, 0.1514, 0.0459, 0.0000, 0.0000, 0.0000],
        [0.4961, 0.0732, 0.0204, 0.0070, 0.0566, 0.0153, 0.0522, 0.0166, 0.0312, 0.0220, 0.0781, 0.0143, 0.1172, 0.0000, 0.0000],
        [0.0154, 0.0806, 0.0198, 0.0148, 0.0530, 0.1084, 0.4238, 0.0112, 0.0850, 0.0391, 0.0165, 0.0447, 0.0403, 0.0469, 0.0000],
        [0.0320, 0.0762, 0.0381, 0.0410, 0.0820, 0.0552, 0.1089, 0.0398, 0.0532, 0.0295, 0.0830, 0.0435, 0.1138, 0.0583, 0.1455]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0008,     -1.5938,     -2.2188,     -3.0938,     -2.7656,     -2.1406,     -1.4922,     -1.1406,     -2.5938,     -2.6875,     -3.2500,     -2.1406,     -0.8164,     -2.6562,     -2.1406],
        [    -0.0327,      1.9453,      2.7188,      3.0625,      3.4219,      4.0625,      4.0938,      0.8477,      3.5312,      3.3594,      3.7344,      1.6406,      1.1484,      3.6094,      2.7969],
        [     0.0004,     -0.7344,     -0.4629,     -0.8320,      0.1338,     -0.4863,     -0.8672,     -0.8203,     -0.8477,     -0.7188,      0.4414,     -0.1865,      0.1426,     -0.7695,      0.2168],
        [    -0.0061,      2.8281,      2.6719,      4.3438,      5.4062,      3.2969,      2.9375,      1.5234,      3.7344,      3.2031,      5.9062,      3.7344,      1.2109,      4.0938,      3.0781],
        [    -0.0342,      1.3359,      1.5156,      1.5469,      2.3438,      2.2812,      3.2656,     -0.0137,      2.1562,      1.4375,      2.2188,      0.6875,      0.3574,      2.3750,      0.7852],
        [    -0.0253,      0.3594,     -0.3945,     -1.0781,      0.6289,      0.9961,      1.6797,     -0.9180,      0.2559,      0.3184,      0.3770,     -0.1826,     -0.4043,      0.1621,      0.1240],
        [    -0.0217,      0.6836,     -0.6758,     -0.1543,      0.4297,      0.5938,      1.6484,     -1.2656,      0.8984,     -0.4766,     -0.1182,     -1.1719,     -0.7969,      0.5234,     -0.7617],
        [    -0.0032,     -1.1016,     -1.9062,     -2.8750,     -1.2031,     -1.8438,     -0.7422,     -1.6406,     -2.2031,     -1.8125,     -0.9023,     -2.4688,     -0.5547,     -2.4844,     -1.9297],
        [    -0.0344,      1.8516,      0.9883,      1.0078,      2.1094,      2.5312,      3.3906,      0.0684,      2.2031,      1.6953,      1.2500,      1.5625,      0.9375,      1.8125,      1.3984],
        [     0.0112,      0.0576,     -1.2500,     -1.9219,     -0.7852,     -0.5156,      0.1611,     -0.3652,     -0.1060,     -0.1816,     -1.0078,     -0.1523,      1.3594,      0.0972,      0.4199],
        [    -0.0381,      0.1465,     -0.2178,     -1.3203,      0.1660,      0.8125,      0.6992,     -0.6406,     -0.1001,     -0.3633,     -1.1953,      0.7266,      0.3164,     -0.2051,      0.6055],
        [     0.0106,     -1.7500,     -1.7969,     -1.8828,     -1.1641,     -1.3438,     -1.6094,     -1.0938,     -1.7188,     -1.9531,     -0.5898,     -1.7891,      0.6133,     -1.6875,     -1.0078],
        [    -0.0103,     -1.9219,     -3.2031,     -4.2812,     -2.1719,     -3.5000,     -2.2656,     -3.4062,     -2.7656,     -3.1250,     -1.8594,     -3.5625,     -1.4531,     -2.8906,     -2.8438],
        [    -0.0449,      1.6172,      0.2100,     -0.0806,      1.1953,      1.9141,      3.2812,     -0.3594,      1.6641,      0.8867,      0.0240,      1.0234,      0.9180,      1.0703,      0.5078],
        [    -0.0192,      0.8477,      0.1562,      0.2295,      0.9258,      0.5273,      1.2109,      0.2002,      0.4902,     -0.1001,      0.9336,      0.2910,      1.2500,      0.5820,      1.4922]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7699],
        [0.3009],
        [0.2012],
        [0.2339],
        [0.3191],
        [0.2368],
        [0.2108],
        [0.1599],
        [0.1049],
        [0.2835],
        [0.1061],
        [0.1749],
        [0.1353],
        [0.0795]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9688, 0.0303, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9844, 0.0139, 0.0033, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.0728, 0.0073, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8945, 0.0156, 0.0435, 0.0386, 0.0067, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9297, 0.0212, 0.0125, 0.0121, 0.0139, 0.0105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.0894, 0.0588, 0.0141, 0.0132, 0.0376, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.0173, 0.0942, 0.0146, 0.0045, 0.0144, 0.0147, 0.6602, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.0214, 0.1357, 0.0299, 0.0131, 0.0090, 0.0204, 0.0791, 0.0172, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.0610, 0.0342, 0.0557, 0.0253, 0.0118, 0.0288, 0.0371, 0.0179, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6016, 0.0588, 0.0618, 0.0297, 0.0082, 0.0179, 0.0072, 0.1118, 0.0138, 0.0535, 0.0344, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.0121, 0.0776, 0.0102, 0.0108, 0.0090, 0.0016, 0.0164, 0.0043, 0.0208, 0.0033, 0.1377, 0.0000, 0.0000, 0.0000],
        [0.0459, 0.0089, 0.0549, 0.0036, 0.0050, 0.0141, 0.0432, 0.1367, 0.0232, 0.0413, 0.0082, 0.2148, 0.3984, 0.0000, 0.0000],
        [0.2617, 0.0115, 0.0544, 0.0120, 0.0146, 0.0110, 0.0195, 0.0339, 0.0195, 0.1318, 0.0074, 0.0996, 0.3008, 0.0212, 0.0000],
        [0.4785, 0.0292, 0.0496, 0.0104, 0.0199, 0.0160, 0.0042, 0.0085, 0.0012, 0.0271, 0.0075, 0.0596, 0.2100, 0.0020, 0.0762]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0054,     -0.1030,      0.0135,     -0.1172,     -0.1328,     -0.1187,     -0.1270,      0.0120,     -0.1602,     -0.0513,     -0.2461,      0.0182,      0.0215,     -0.1816,     -0.1104],
        [     0.0104,     -3.4531,     -5.5312,     -5.7812,     -5.3438,     -6.0625,     -6.7188,     -9.0000,     -6.9688,     -5.3438,     -5.9375,     -4.5625,     -6.3438,     -6.7188,     -4.8125],
        [     0.0064,     -4.2500,     -5.6875,     -3.6562,     -4.2812,     -6.6562,     -6.3750,     -6.5625,     -7.3438,     -7.0938,     -5.1250,     -5.0938,     -4.3438,     -7.0000,     -4.7812],
        [    -0.0234,     -2.4688,     -4.7812,     -2.3906,     -0.6602,     -2.2656,     -2.8281,     -4.8438,     -3.3750,     -5.4375,     -0.4375,     -3.2031,     -3.9219,     -3.4688,     -2.3906],
        [     0.1021,     -3.9531,     -2.9219,     -3.0469,     -4.8125,     -4.7500,     -4.4688,     -2.0469,     -6.2500,     -4.6562,     -5.1562,     -2.3125,     -2.1719,     -6.4062,     -4.5938],
        [     0.0298,     -3.7500,     -4.2812,     -4.3125,     -4.1875,     -4.4688,     -1.3516,     -3.6875,     -3.9375,     -3.7656,     -5.9375,     -2.1406,     -2.7812,     -4.3125,     -3.1094],
        [     0.0422,     -1.9297,     -2.3438,     -3.7812,     -3.8438,     -2.7969,     -1.4375,     -2.4531,     -2.9531,     -2.3125,     -4.8750,     -1.1172,     -1.4219,     -3.5312,     -2.6406],
        [     0.0513,     -2.2969,     -0.6016,     -2.4688,     -3.6562,     -2.4844,     -2.4531,      1.3438,     -2.1250,     -1.2578,     -3.6562,      0.2041,      0.3281,     -2.1094,     -0.8164],
        [     0.0496,     -3.4062,     -1.5547,     -3.0625,     -3.8906,     -4.2500,     -3.4531,     -2.0938,     -3.6250,     -1.1484,     -5.0625,     -1.0781,     -0.4961,     -3.8906,     -2.5000],
        [     0.0967,     -2.2500,     -2.8281,     -2.3438,     -3.1406,     -3.8906,     -3.0000,     -2.7500,     -3.4688,     -1.8516,     -1.6250,     -0.5938,     -0.9844,     -3.0469,     -2.4688],
        [     0.0806,     -2.2500,     -2.2031,     -2.9375,     -4.2188,     -3.4375,     -4.3438,     -1.6094,     -3.7031,     -2.3438,     -2.7812,     -1.0156,     -1.2188,     -3.8594,     -2.1562],
        [     0.1191,     -3.9375,     -2.0781,     -4.0938,     -4.0312,     -4.2188,     -5.9375,     -3.6250,     -4.9688,     -3.3906,     -5.2188,     -1.5000,      1.1406,     -4.2188,     -2.3125],
        [     0.0496,     -1.5938,      0.2305,     -2.5000,     -2.1719,     -1.1328,     -0.0085,      1.1406,     -0.6328,     -0.0554,     -1.6719,      1.5938,      2.2188,      0.2432,      1.3906],
        [     0.0437,     -3.0938,     -1.5312,     -3.0469,     -2.8438,     -3.1250,     -2.5469,     -2.0000,     -2.5469,     -0.6445,     -3.5156,     -0.9258,      0.1787,     -2.4688,     -1.6484],
        [     0.0796,     -2.7188,     -2.1875,     -3.7500,     -3.1094,     -3.3125,     -4.6562,     -3.9375,     -5.9375,     -2.7969,     -4.0625,     -2.0000,     -0.7422,     -5.3750,     -1.7578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8978],
        [0.8382],
        [0.7951],
        [0.6975],
        [0.6426],
        [0.6345],
        [0.5097],
        [0.5997],
        [0.7196],
        [0.5697],
        [0.7266],
        [0.4936],
        [0.5045],
        [0.7046]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0056,     -0.6406,     -0.6562,     -0.6016,     -0.6133,     -0.6289,     -0.5898,     -0.5508,     -0.6250,     -0.6523,     -0.6523,     -0.6016,     -0.5703,     -0.6016,     -0.6016],
        [     0.2617,    -33.7500,    -34.0000,    -32.2500,    -32.7500,    -33.0000,    -30.8750,    -28.8750,    -33.2500,    -34.0000,    -34.7500,    -31.3750,    -29.6250,    -32.0000,    -32.2500],
        [     0.2793,    -34.2500,    -34.7500,    -32.5000,    -33.0000,    -33.5000,    -31.6250,    -29.5000,    -33.5000,    -34.5000,    -35.0000,    -32.0000,    -30.3750,    -32.2500,    -32.5000],
        [     0.2988,    -32.7500,    -33.0000,    -30.6250,    -31.7500,    -32.7500,    -30.5000,    -28.5000,    -32.2500,    -33.7500,    -34.0000,    -30.8750,    -29.6250,    -31.2500,    -31.3750],
        [     0.2715,    -30.5000,    -30.3750,    -28.3750,    -29.5000,    -30.1250,    -28.2500,    -26.1250,    -30.0000,    -31.1250,    -31.3750,    -28.2500,    -27.0000,    -28.8750,    -28.6250],
        [     0.2949,    -36.2500,    -36.5000,    -34.2500,    -35.5000,    -35.5000,    -33.5000,    -30.8750,    -35.7500,    -36.5000,    -37.5000,    -33.7500,    -31.7500,    -34.5000,    -34.7500],
        [     0.2598,    -30.3750,    -30.6250,    -28.6250,    -29.3750,    -29.8750,    -28.2500,    -26.1250,    -29.8750,    -30.7500,    -31.3750,    -28.3750,    -27.0000,    -28.8750,    -28.8750],
        [     0.2451,    -28.7500,    -28.8750,    -26.8750,    -28.0000,    -28.5000,    -26.8750,    -24.8750,    -28.3750,    -29.2500,    -29.7500,    -27.0000,    -25.6250,    -27.3750,    -27.3750],
        [     0.2910,    -35.7500,    -35.7500,    -33.7500,    -35.0000,    -35.2500,    -32.7500,    -30.3750,    -35.2500,    -36.0000,    -37.0000,    -33.0000,    -31.2500,    -34.0000,    -33.7500],
        [     0.2949,    -39.0000,    -39.2500,    -36.7500,    -38.0000,    -38.2500,    -36.2500,    -33.2500,    -38.2500,    -38.7500,    -40.0000,    -36.0000,    -34.5000,    -36.7500,    -37.0000],
        [     0.2969,    -36.7500,    -36.7500,    -34.5000,    -35.5000,    -36.0000,    -34.2500,    -31.5000,    -36.0000,    -37.2500,    -38.0000,    -34.2500,    -32.5000,    -34.7500,    -35.2500],
        [     0.3047,    -33.5000,    -33.7500,    -31.3750,    -32.5000,    -33.5000,    -31.3750,    -29.2500,    -32.7500,    -34.7500,    -34.5000,    -31.7500,    -30.5000,    -31.6250,    -31.7500],
        [     0.2773,    -33.7500,    -33.7500,    -31.6250,    -33.0000,    -33.2500,    -31.3750,    -28.8750,    -33.0000,    -34.0000,    -35.0000,    -31.5000,    -29.8750,    -32.0000,    -32.2500],
        [     0.3027,    -36.2500,    -36.2500,    -34.0000,    -35.5000,    -35.7500,    -33.2500,    -30.7500,    -35.7500,    -36.5000,    -37.2500,    -33.2500,    -31.7500,    -34.5000,    -34.0000],
        [     0.3379,    -40.5000,    -40.7500,    -38.2500,    -39.2500,    -40.0000,    -37.7500,    -35.0000,    -39.7500,    -41.0000,    -41.7500,    -38.0000,    -36.2500,    -38.2500,    -38.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8360],
        [0.8051],
        [0.7769],
        [0.7449],
        [0.7480],
        [0.7360],
        [0.7223],
        [0.7153],
        [0.7115],
        [0.7035],
        [0.6886],
        [0.6951],
        [0.6810],
        [0.6914]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.6055,     0.3926,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3262,     0.3613,     0.3125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.2295,     0.1846,     0.2637,     0.3203,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1099,     0.1309,     0.1543,     0.3438,     0.2617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0674,     0.0884,     0.0903,     0.2305,     0.3223,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0386,     0.0420,     0.0349,     0.1006,     0.1309,     0.1699,     0.4844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0322,     0.0286,     0.0256,     0.0776,     0.0981,     0.1201,     0.3652,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0156,     0.0116,     0.0142,     0.0349,     0.0444,     0.0610,     0.2031,     0.3320,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0096,     0.0090,     0.0128,     0.0300,     0.0398,     0.0413,     0.1611,     0.1816,     0.3789,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0063,     0.0042,     0.0038,     0.0114,     0.0226,     0.0347,     0.1016,     0.1436,     0.2266,     0.2129,     0.2314,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0045,     0.0043,     0.0058,     0.0131,     0.0164,     0.0205,     0.0537,     0.0757,     0.1660,     0.0845,     0.1797,     0.3750,     0.0000,     0.0000],
        [    0.0000,     0.0031,     0.0028,     0.0028,     0.0079,     0.0108,     0.0135,     0.0405,     0.0309,     0.1187,     0.0413,     0.1060,     0.4121,     0.2090,     0.0000],
        [    0.0000,     0.0013,     0.0012,     0.0013,     0.0031,     0.0077,     0.0075,     0.0273,     0.0603,     0.0491,     0.0439,     0.0742,     0.1816,     0.4375,     0.1045]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0071,     -0.7266,     -0.7070,     -0.6758,     -0.7070,     -0.7422,     -0.7617,     -0.7773,     -0.7930,     -0.7617,     -0.8281,     -0.8047,     -0.8125,     -0.8594,     -0.8789],
        [     0.1001,    -10.1250,     -9.4375,     -8.7500,     -9.3750,     -9.3125,     -9.6875,     -9.6875,     -9.2500,     -9.1250,     -9.8750,     -9.2500,     -9.2500,     -9.3125,     -9.8125],
        [     0.0129,      5.5000,      5.0625,      5.2500,      5.6875,      6.1250,      6.3750,      6.8125,      6.8125,      7.1875,      6.7500,      7.0000,      7.6562,      7.5312,      7.0000],
        [     0.0115,      8.8125,      8.9375,      8.7500,      9.5000,      9.9375,     10.2500,     11.0000,     11.1875,     11.6250,     11.1875,     11.6250,     12.3750,     12.3125,     11.8750],
        [     0.0693,      5.4688,      5.2500,      5.5938,      5.7812,      6.6250,      6.8438,      7.5625,      7.4688,      8.3125,      7.4062,      8.0625,      9.2500,      8.6875,      8.1250],
        [     0.0549,      7.8125,      8.0000,      8.1250,      8.9375,      8.6875,      9.0625,     10.3125,     10.5000,     10.6250,     10.2500,     10.9375,     11.8125,     11.8750,     11.0625],
        [     0.0271,      9.3750,      9.6875,      9.6875,     10.6250,     10.9375,     10.5000,     12.0000,     12.6875,     12.1250,     12.1250,     12.6250,     13.2500,     14.0625,     12.5625],
        [     0.0413,      8.4375,      8.5000,      8.3125,      9.3750,      9.6250,      9.8750,     10.9375,     10.8750,     11.8750,     11.0625,     11.7500,     12.6875,     12.5000,     12.0000],
        [     0.0947,      5.6875,      5.5625,      5.4688,      6.5625,      6.8125,      7.0000,      8.1250,      7.7500,      8.9375,      7.9688,      8.8125,     10.1250,      9.3750,      9.0625],
        [     0.0149,     12.0625,     11.7500,     11.9375,     12.8750,     13.0625,     13.4375,     14.6250,     15.1250,     14.9375,     15.0625,     15.6250,     16.2500,     16.7500,     16.0000],
        [     0.0649,      7.1875,      7.1250,      7.4688,      8.3125,      8.6250,      8.6250,     10.0000,     10.1250,     10.8750,      9.8750,     10.8750,     12.0000,     11.8125,     10.7500],
        [    -0.0162,     15.0625,     14.6875,     14.5625,     15.6250,     16.3750,     16.7500,     17.8750,     18.1250,     18.6250,     18.6250,     18.6250,     19.8750,     20.2500,     19.7500],
        [     0.0454,      6.1562,      6.0938,      6.4062,      7.2188,      7.4375,      7.6875,      8.6250,      9.0000,      9.7500,      9.0625,      9.8125,     10.5625,     10.7500,     10.1875],
        [     0.0967,      4.8750,      4.7812,      4.7812,      5.8125,      6.1250,      6.3438,      7.4688,      7.1875,      8.5000,      7.4688,      8.4375,      9.7500,      9.1250,      8.8125],
        [    -0.0089,     14.1250,     14.0000,     14.0625,     15.0000,     15.8750,     15.8750,     17.1250,     18.0000,     17.7500,     17.6250,     18.1250,     19.0000,     19.8750,     18.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5687],
        [0.1274],
        [0.0973],
        [0.1294],
        [0.1401],
        [0.0922],
        [0.0846],
        [0.1011],
        [0.0581],
        [0.0933],
        [0.0381],
        [0.0617],
        [0.0784],
        [0.0456]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0310,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.5742,     0.4180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0249,     0.4395,     0.1631,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.7031,     0.0952,     0.0796,     0.1069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0211,     0.8516,     0.0132,     0.0236,     0.0227,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.3730,     0.0242,     0.0215,     0.0190,     0.0613,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0654,     0.0017,     0.0039,     0.0125,     0.0239,     0.8594,     0.0317,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0141,     0.1211,     0.0044,     0.0043,     0.0076,     0.0297,     0.6797,     0.0315,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0159,     0.0064,     0.0106,     0.0062,     0.0236,     0.2139,     0.0288,     0.6055,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0090,     0.0031,     0.0082,     0.0134,     0.0107,     0.4199,     0.0408,     0.3477,     0.0820,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0072,     0.0038,     0.0076,     0.0076,     0.0079,     0.0996,     0.0287,     0.4453,     0.0623,     0.3125,     0.0168,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0156,     0.0015,     0.0020,     0.0080,     0.0243,     0.1699,     0.0164,     0.2295,     0.0206,     0.4805,     0.0072,     0.0233,     0.0000,     0.0000],
        [    0.0100,     0.0415,     0.0021,     0.0014,     0.0031,     0.0161,     0.1289,     0.0109,     0.0459,     0.0449,     0.5820,     0.0070,     0.0408,     0.0659,     0.0000],
        [    0.0003,     0.0092,     0.0052,     0.0044,     0.0069,     0.0075,     0.0245,     0.0118,     0.0991,     0.0554,     0.2109,     0.0183,     0.0398,     0.2178,     0.2891]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0016,     -0.2295,     -0.3594,     -0.3613,     -0.3223,     -0.3047,     -0.2275,     -0.3750,     -0.2734,     -0.2891,     -0.3008,     -0.3848,     -0.3555,     -0.2812,     -0.2480],
        [    -0.0120,      3.4375,      1.2109,      1.4375,      1.7578,      2.1094,      3.6562,      2.3750,      5.0000,      2.7656,      4.7500,      1.5859,      2.2969,      4.7812,      4.1562],
        [    -0.0315,      4.4688,      4.1250,      4.7812,      3.9688,      4.2812,      5.5938,      5.5000,      6.7812,      5.4062,      7.4062,      5.6562,      6.5000,      7.6562,      8.1250],
        [    -0.0325,      2.8438,      1.8438,      2.6719,      1.6797,      1.8906,      4.0938,      3.0000,      4.7188,      3.4688,      5.2188,      3.1562,      3.8906,      5.0312,      5.3438],
        [    -0.0173,      3.8750,      1.8672,      1.6875,      1.9844,      3.7500,      4.5938,      3.1719,      5.5625,      4.4688,      7.7188,      3.7344,      4.8750,      6.7188,      7.1250],
        [    -0.0076,      3.6875,     -0.4746,      0.1040,      0.0669,      1.1719,      3.2656,      0.7188,      4.0938,      1.9609,      4.7812,      0.7539,      2.0312,      4.5000,      4.3125],
        [    -0.0067,      5.9375,      3.2031,      3.0781,      2.9531,      4.1250,      6.2188,      3.0469,      5.6562,      4.8125,      5.4062,      2.9375,      3.0469,      5.5938,      6.9062],
        [     0.0095,      3.7031,      0.0374,      0.8828,      2.0469,      2.7031,      6.2812,      2.9844,      5.1875,      2.5781,      5.6875,      1.8828,      2.9062,      5.2500,      5.7500],
        [     0.0327,      2.1875,     -1.1328,     -1.1641,     -0.5820,      0.7734,      3.9062,      0.8320,      2.0781,      1.8281,      4.2500,     -0.3145,      1.4766,      1.8594,      3.6719],
        [     0.0356,      3.2656,      2.3594,      2.8594,      2.3281,      3.6562,      5.8750,      3.8594,      6.9062,      5.0000,      7.6562,      4.6562,      5.6875,      8.0625,      8.6875],
        [     0.0457,      2.6562,      1.5781,      2.5781,      3.0625,      2.8438,      6.5000,      4.1562,      6.3125,      4.8750,      4.6250,      2.5312,      4.6250,      6.5000,      6.8438],
        [     0.0194,      4.0938,      3.4688,      4.1562,      4.1562,      4.1875,      6.7500,      5.5000,      8.2500,      6.2812,      7.8750,      4.9688,      6.4062,      9.1875,      9.4375],
        [     0.0312,      2.8438,      0.5039,      0.7773,      2.1719,      3.2812,      5.2188,      2.8750,      5.5312,      3.1094,      6.2500,      2.0625,      3.2344,      6.3125,      7.0000],
        [     0.0437,      1.4609,     -1.5156,     -1.9141,     -1.1328,      0.5195,      2.5938,      0.1226,      1.5625,      1.5469,      4.0938,     -0.3203,      1.4453,      1.9297,      3.7500],
        [     0.0325,      3.4062,      2.8281,      2.6562,      3.1250,      3.2031,      4.3750,      3.6562,      5.7812,      5.1875,      6.5312,      4.0938,      4.8750,      6.5625,      6.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8445],
        [0.3480],
        [0.3558],
        [0.3663],
        [0.3884],
        [0.3676],
        [0.3849],
        [0.3938],
        [0.3410],
        [0.3389],
        [0.3270],
        [0.3479],
        [0.3348],
        [0.3216]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9453, 0.0542, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0110, 0.8594, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0283, 0.7461, 0.1855, 0.0415, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0117, 0.5234, 0.2910, 0.0559, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.2539, 0.0266, 0.0542, 0.1885, 0.3926, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.5156, 0.0179, 0.0510, 0.1279, 0.1406, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0469, 0.4355, 0.0420, 0.0498, 0.0840, 0.2080, 0.0830, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0096, 0.2324, 0.0579, 0.0142, 0.0654, 0.3594, 0.0942, 0.0962, 0.0713, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0190, 0.3125, 0.0476, 0.0177, 0.0928, 0.1592, 0.0439, 0.1318, 0.0918, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0027, 0.1719, 0.0510, 0.0166, 0.0625, 0.1504, 0.0874, 0.0918, 0.1475, 0.1240, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0028, 0.2412, 0.0986, 0.0160, 0.0200, 0.1016, 0.1299, 0.0601, 0.1191, 0.1465, 0.0415, 0.0227, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.2197, 0.0200, 0.0087, 0.0586, 0.1270, 0.0452, 0.0398, 0.0544, 0.0483, 0.1934, 0.0047, 0.0094, 0.0000, 0.0000],
        [0.0542, 0.2002, 0.0347, 0.0066, 0.0518, 0.1436, 0.0193, 0.0583, 0.0474, 0.0967, 0.1836, 0.0089, 0.0128, 0.0830, 0.0000],
        [0.0088, 0.3945, 0.0554, 0.0258, 0.0515, 0.0505, 0.0245, 0.0417, 0.0615, 0.0566, 0.0342, 0.0076, 0.0223, 0.0608, 0.1035]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0013,     -0.2578,     -0.2656,     -0.2852,     -0.2168,     -0.2119,     -0.2754,     -0.2500,     -0.3066,     -0.2656,     -0.1943,     -0.3203,     -0.3223,     -0.2930,     -0.2373],
        [     0.0457,     -2.8125,     -4.8438,     -5.7188,     -3.5000,     -3.8438,     -5.9375,     -4.5000,     -6.2188,     -4.8438,     -2.8281,     -6.7500,     -6.5312,     -5.4688,     -3.2969],
        [     0.0435,      4.4062,      2.5000,      1.8906,      1.8125,      2.4531,      2.2188,      1.6094,      2.1562,      1.9844,      1.2500,     -0.0679,      0.9102,      2.4688,      3.7344],
        [     0.0679,      3.3438,      1.9453,      0.4512,      1.1953,      2.0625,      1.2656,      0.1582,      0.6484,      1.0547,      0.5195,     -1.3438,     -0.6953,      1.0156,      3.0000],
        [     0.0226,      3.8125,      3.2344,      1.5859,      2.3438,      4.3750,      3.9219,      2.0938,      1.9844,      1.7031,      1.3516,     -0.4238,      0.1875,      2.0156,      2.8125],
        [     0.0425,      1.1484,     -1.1094,     -0.3945,      0.8477,      1.5859,      0.8477,     -2.0312,     -1.6719,     -1.5703,     -0.0481,     -3.8438,     -4.0000,     -0.6367,      1.1641],
        [     0.0267,      2.5781,     -0.7812,      0.2656,      1.1875,      1.2734,      0.9961,     -1.7031,     -1.6016,     -1.2656,     -0.6445,     -4.8750,     -3.5312,     -0.8203,      2.0000],
        [     0.0537,      2.2812,     -0.0559,      0.1152,      0.6406,      1.5391,      0.6250,      0.1455,      1.1328,      0.0439,      1.1250,     -2.7656,     -1.4609,      1.4219,      1.7188],
        [     0.0408,      3.2344,      1.8438,      0.4355,      1.9609,      3.6562,      2.3281,      2.3438,      2.0469,      2.3125,      2.0781,     -0.6523,      0.3887,      2.1406,      2.6250],
        [     0.0417,      2.8438,      0.9531,     -0.0311,      1.6250,      2.1719,      0.8750,      1.9766,      1.6094,      1.5234,      1.5469,     -0.1279,      1.1641,      1.9922,      2.5469],
        [     0.0177,      4.1875,      2.9688,      1.8516,      3.1719,      4.0625,      3.5156,      3.5625,      4.0312,      3.8594,      3.5781,      1.9531,      3.3125,      3.9375,      3.5156],
        [     0.0259,      4.4688,      3.5781,      1.7578,      1.9844,      3.6094,      3.8594,      3.0781,      3.7656,      3.9688,      2.7188,      2.1094,      3.4062,      3.8125,      3.9688],
        [     0.0547,      0.3086,     -2.0781,     -2.9219,     -1.0156,     -0.2383,     -1.2734,     -1.4062,     -1.0859,     -1.2031,      0.1807,     -3.5312,     -2.8438,     -0.3105,      0.5273],
        [     0.0396,      1.3438,     -0.4043,     -2.0625,     -0.0037,      1.0156,     -0.9922,      0.1162,     -0.0942,      0.6211,      1.2578,     -1.7734,     -1.4062,      0.4648,      0.5352],
        [     0.0280,      3.8281,      1.8672,      1.1016,      1.7969,      1.7812,      1.0547,      1.5859,      1.9766,      1.8906,      1.3828,     -0.1201,      0.9609,      1.9609,      2.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6784],
        [0.1032],
        [0.2525],
        [0.2618],
        [0.3203],
        [0.2556],
        [0.2295],
        [0.2223],
        [0.2055],
        [0.1807],
        [0.1146],
        [0.1791],
        [0.1669],
        [0.2004]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0496,     -1.2344,     -1.7188,     -1.4609,     -1.8438,     -1.8750,     -1.4844,     -1.6172,     -1.4375,     -1.4688,     -1.3906,     -1.3203,     -1.7109,     -1.4688,     -1.3203],
        [    -0.3027,     -9.8750,    -10.0000,     -8.6875,    -10.3125,    -12.5000,     -8.1250,     -9.3125,     -8.4375,     -7.9062,     -7.5938,     -6.2500,     -9.4375,     -7.3750,     -6.5312],
        [    -1.1016,    -30.3750,    -42.5000,    -35.0000,    -45.5000,    -42.2500,    -37.5000,    -39.7500,    -35.5000,    -35.2500,    -33.2500,    -33.0000,    -40.5000,    -36.2500,    -31.2500],
        [    -1.5703,    -40.5000,    -56.5000,    -47.2500,    -60.2500,    -58.0000,    -49.0000,    -52.5000,    -47.5000,    -47.7500,    -46.0000,    -44.2500,    -55.2500,    -50.0000,    -43.2500],
        [    -1.4688,    -38.7500,    -49.7500,    -41.7500,    -55.7500,    -55.7500,    -45.2500,    -49.2500,    -44.5000,    -44.7500,    -42.5000,    -39.0000,    -51.7500,    -45.2500,    -40.0000],
        [    -1.3906,    -34.7500,    -48.0000,    -40.7500,    -50.2500,    -53.7500,    -41.2500,    -45.0000,    -40.0000,    -40.5000,    -38.2500,    -35.5000,    -47.0000,    -39.5000,    -35.7500],
        [    -1.0469,    -28.0000,    -35.5000,    -30.1250,    -39.5000,    -41.7500,    -31.6250,    -34.2500,    -30.7500,    -30.6250,    -28.5000,    -25.5000,    -35.0000,    -29.2500,    -25.2500],
        [    -1.2812,    -33.0000,    -45.0000,    -38.0000,    -47.7500,    -49.0000,    -38.0000,    -41.2500,    -37.2500,    -38.0000,    -35.7500,    -33.7500,    -43.5000,    -37.7500,    -33.2500],
        [    -1.0547,    -26.7500,    -36.0000,    -30.7500,    -40.7500,    -40.2500,    -31.7500,    -33.0000,    -30.3750,    -30.3750,    -29.7500,    -26.7500,    -34.5000,    -30.1250,    -26.1250],
        [    -1.5156,    -38.5000,    -54.7500,    -45.7500,    -60.5000,    -56.7500,    -48.2500,    -50.2500,    -45.5000,    -45.7500,    -44.7500,    -42.7500,    -52.5000,    -46.7500,    -40.7500],
        [    -1.3594,    -34.7500,    -49.2500,    -40.2500,    -51.7500,    -49.5000,    -41.5000,    -44.5000,    -41.0000,    -42.5000,    -39.5000,    -38.5000,    -47.2500,    -43.0000,    -37.7500],
        [    -1.8828,    -47.7500,    -68.0000,    -57.0000,    -72.0000,    -70.0000,    -57.2500,    -61.2500,    -55.7500,    -56.7500,    -54.2500,    -52.0000,    -65.0000,    -57.5000,    -51.0000],
        [    -1.3906,    -34.5000,    -46.7500,    -39.2500,    -52.0000,    -52.5000,    -41.5000,    -44.2500,    -40.0000,    -40.5000,    -40.0000,    -36.2500,    -46.5000,    -41.0000,    -35.7500],
        [    -1.1719,    -29.2500,    -40.2500,    -34.2500,    -43.7500,    -44.5000,    -34.7500,    -37.0000,    -33.5000,    -34.2500,    -33.5000,    -30.8750,    -39.2500,    -33.7500,    -30.3750],
        [    -1.0234,    -27.2500,    -38.0000,    -32.0000,    -42.2500,    -40.0000,    -33.0000,    -34.0000,    -30.7500,    -30.2500,    -30.1250,    -27.8750,    -35.0000,    -30.3750,    -26.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7179],
        [0.4986],
        [0.5931],
        [0.5942],
        [0.6234],
        [0.5534],
        [0.5992],
        [0.5569],
        [0.5546],
        [0.6650],
        [0.5956],
        [0.6474],
        [0.5956],
        [0.5281]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0060,     0.8711,     0.1226,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0209,     -0.6250,     -0.9414,     -1.0156,     -0.6953,     -0.5742,     -0.6328,     -0.7305,     -0.9844,     -1.1953,     -1.0703,     -1.0156,     -1.0938,     -1.0547,     -1.2266],
        [    -0.3145,     -9.3750,    -15.6250,    -16.7500,    -10.6250,     -8.2500,    -11.1250,    -11.0625,    -16.1250,    -18.1250,    -18.7500,    -17.1250,    -18.0000,    -18.7500,    -20.0000],
        [     0.1562,      5.1250,      3.1719,      3.4219,      3.5000,      2.0312,      1.0312,      1.6719,      4.4375,      6.1875,      1.6484,      4.1250,      1.9766,      1.5703,      6.4375],
        [    -0.2754,     -6.5312,    -12.8125,    -14.3125,     -9.5000,     -8.6875,     -9.6875,    -11.5625,    -16.1250,    -18.1250,    -19.0000,    -14.8125,    -19.1250,    -19.7500,    -17.2500],
        [    -0.7500,    -21.7500,    -30.7500,    -34.5000,    -24.6250,    -20.3750,    -21.5000,    -25.1250,    -35.5000,    -42.5000,    -38.0000,    -34.7500,    -38.0000,    -37.0000,    -43.0000],
        [    -0.6797,    -19.1250,    -28.0000,    -31.0000,    -22.3750,    -18.2500,    -19.6250,    -23.0000,    -31.3750,    -38.5000,    -34.2500,    -31.2500,    -35.0000,    -33.2500,    -38.5000],
        [    -0.3496,    -11.0000,    -16.5000,    -17.7500,    -13.0000,    -10.2500,    -10.6875,    -13.0625,    -17.8750,    -22.3750,    -20.1250,    -18.6250,    -20.0000,    -18.8750,    -22.1250],
        [    -0.5352,    -15.0000,    -23.5000,    -24.3750,    -18.0000,    -14.5625,    -15.5625,    -17.6250,    -27.5000,    -31.7500,    -28.2500,    -25.5000,    -28.6250,    -29.0000,    -31.3750],
        [    -0.4824,    -16.3750,    -21.6250,    -22.8750,    -15.7500,    -12.8750,    -15.1875,    -16.2500,    -22.3750,    -28.1250,    -26.1250,    -25.6250,    -26.0000,    -25.8750,    -28.0000],
        [    -0.3242,    -10.7500,    -17.7500,    -19.0000,    -12.7500,    -10.8125,    -11.8750,    -11.2500,    -14.6875,    -18.0000,    -15.5625,    -16.3750,    -17.3750,    -15.7500,    -20.0000],
        [    -0.6992,    -20.8750,    -32.2500,    -32.5000,    -23.0000,    -17.8750,    -20.3750,    -22.2500,    -32.5000,    -38.7500,    -32.0000,    -32.7500,    -34.0000,    -33.5000,    -40.7500],
        [    -0.4238,    -12.6875,    -25.1250,    -24.5000,    -16.2500,    -11.7500,    -15.3125,    -15.9375,    -19.8750,    -22.6250,    -17.6250,    -19.3750,    -21.1250,    -18.8750,    -27.0000],
        [    -0.4746,    -13.6875,    -22.2500,    -23.3750,    -16.2500,    -13.5000,    -14.1250,    -15.8750,    -23.6250,    -28.3750,    -24.8750,    -22.8750,    -25.6250,    -24.8750,    -27.5000],
        [    -0.5234,    -16.2500,    -23.2500,    -24.5000,    -16.1250,    -13.1875,    -15.8125,    -16.2500,    -23.8750,    -29.3750,    -26.0000,    -25.3750,    -26.2500,    -25.8750,    -29.8750],
        [    -0.4277,    -15.7500,    -23.5000,    -25.7500,    -16.5000,    -12.9375,    -15.6250,    -17.3750,    -19.6250,    -27.0000,    -26.5000,    -26.2500,    -26.0000,    -23.6250,    -28.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8569],
        [0.3707],
        [0.7093],
        [0.7784],
        [0.8963],
        [0.7876],
        [0.8522],
        [0.7806],
        [0.7839],
        [0.8469],
        [0.6364],
        [0.8667],
        [0.8148],
        [0.6101]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0026,     -0.6016,     -0.5508,     -0.9219,     -0.6445,     -0.5781,     -0.7070,     -0.7227,     -0.7188,     -0.6211,     -0.7227,     -0.4043,     -0.7031,     -0.6992,     -0.6992],
        [    -0.0157,      8.1250,      7.5938,      8.2500,      3.9531,      3.3906,      4.8438,      6.5312,      5.2500,      4.7812,      4.0625,      3.5312,      4.1250,      4.7500,      6.0312],
        [     0.1069,    -22.2500,    -18.8750,    -29.3750,    -19.5000,    -18.1250,    -22.8750,    -22.6250,    -23.1250,    -21.5000,    -24.0000,    -15.6250,    -21.6250,    -22.3750,    -24.0000],
        [     0.1279,    -29.6250,    -26.0000,    -40.5000,    -27.0000,    -24.2500,    -30.5000,    -31.5000,    -30.8750,    -27.7500,    -30.8750,    -19.0000,    -29.2500,    -29.8750,    -31.1250],
        [     0.0947,    -21.6250,    -19.3750,    -33.0000,    -23.2500,    -20.7500,    -26.1250,    -26.8750,    -25.3750,    -21.8750,    -25.3750,    -13.7500,    -25.5000,    -24.6250,    -24.7500],
        [     0.0874,    -23.1250,    -20.3750,    -36.0000,    -25.1250,    -21.8750,    -26.8750,    -27.5000,    -28.5000,    -23.6250,    -28.1250,    -14.5000,    -26.8750,    -27.6250,    -26.1250],
        [     0.0762,    -16.2500,    -14.6875,    -26.5000,    -19.3750,    -17.5000,    -20.0000,    -20.7500,    -21.7500,    -17.8750,    -22.0000,    -11.0625,    -21.1250,    -22.1250,    -20.3750],
        [     0.0889,    -19.1250,    -17.5000,    -31.0000,    -21.3750,    -20.1250,    -23.5000,    -23.6250,    -24.2500,    -20.7500,    -24.8750,    -13.6250,    -24.3750,    -24.2500,    -22.6250],
        [     0.1147,    -27.3750,    -24.2500,    -40.0000,    -27.8750,    -24.7500,    -31.3750,    -32.5000,    -31.0000,    -26.7500,    -30.0000,    -16.5000,    -30.1250,    -29.1250,    -30.6250],
        [     0.1250,    -28.3750,    -25.2500,    -40.2500,    -27.3750,    -24.7500,    -31.7500,    -31.7500,    -30.5000,    -27.5000,    -30.6250,    -18.6250,    -30.0000,    -28.7500,    -30.6250],
        [     0.1289,    -31.8750,    -29.6250,    -48.5000,    -33.5000,    -30.1250,    -36.0000,    -37.7500,    -37.5000,    -32.2500,    -36.7500,    -20.6250,    -36.0000,    -35.7500,    -36.0000],
        [     0.0649,    -12.3750,     -9.7500,    -15.0625,    -10.4375,     -9.8750,    -12.1875,    -11.3750,    -10.5000,    -10.4375,    -11.1875,     -7.8750,    -10.5000,    -10.1875,    -11.3125],
        [     0.1348,    -30.1250,    -27.8750,    -46.2500,    -31.1250,    -28.2500,    -35.0000,    -36.2500,    -34.7500,    -30.1250,    -34.7500,    -20.0000,    -34.7500,    -33.7500,    -34.0000],
        [     0.1494,    -36.0000,    -32.7500,    -53.2500,    -36.7500,    -32.7500,    -41.2500,    -43.0000,    -40.7500,    -35.7500,    -40.0000,    -22.5000,    -39.7500,    -38.5000,    -40.7500],
        [     0.1104,    -23.0000,    -20.1250,    -29.0000,    -20.1250,    -17.3750,    -23.7500,    -24.0000,    -21.2500,    -20.5000,    -21.5000,    -14.5625,    -21.1250,    -20.1250,    -24.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1808],
        [0.3511],
        [0.5815],
        [0.8173],
        [0.9899],
        [0.9045],
        [0.7653],
        [0.8777],
        [0.5694],
        [0.9743],
        [0.4145],
        [0.8576],
        [0.8660],
        [0.4743]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6602,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7461,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5078,     0.2031,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6797,     0.1357,     0.1196,     0.0381,     0.0259,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1709,     0.3027,     0.2393,     0.1035,     0.0786,     0.0649,     0.0408,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1011,     0.2051,     0.2754,     0.1445,     0.1030,     0.0991,     0.0503,     0.0223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2432,     0.1719,     0.1855,     0.0771,     0.0952,     0.0669,     0.0742,     0.0593,     0.0267,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5508,     0.1787,     0.1445,     0.0737,     0.0128,     0.0142,     0.0035,     0.0151,     0.0078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6562,     0.1245,     0.0513,     0.0114,     0.0194,     0.0330,     0.0161,     0.0322,     0.0075,     0.0115,     0.0371,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4453,     0.0869,     0.1855,     0.0530,     0.0062,     0.0111,     0.0025,     0.0160,     0.0034,     0.0020,     0.1875,     0.0000,     0.0000,     0.0000],
        [    0.4277,     0.1562,     0.0757,     0.0138,     0.0161,     0.0693,     0.0156,     0.0786,     0.0444,     0.0432,     0.0356,     0.0128,     0.0116,     0.0000,     0.0000],
        [    0.1758,     0.0942,     0.0618,     0.0304,     0.0471,     0.0474,     0.0403,     0.0532,     0.0245,     0.0410,     0.2461,     0.0408,     0.0479,     0.0496,     0.0000],
        [    0.0000,     0.3574,     0.0898,     0.1689,     0.0245,     0.0019,     0.0029,     0.0004,     0.0081,     0.0010,     0.0004,     0.2393,     0.0008,     0.0023,     0.1021]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0047,     -0.0771,     -0.0747,     -0.1074,     -0.1064,     -0.0854,     -0.1021,     -0.0806,     -0.1123,     -0.0879,     -0.0806,     -0.1074,     -0.0981,     -0.1133,     -0.1113],
        [    -0.1582,     -0.8242,     -0.9570,     -2.6562,     -3.2969,     -2.2656,     -3.2188,     -2.3125,     -2.9844,     -2.9688,     -3.5156,     -2.7812,     -3.8906,     -4.2500,     -3.1406],
        [     0.1865,      8.8125,      7.7188,      6.9062,      5.6875,      5.1562,      4.5938,      4.3750,      5.3750,      4.5000,      3.1875,      7.1562,      3.7188,      4.0625,      6.7500],
        [     0.3418,     11.1875,     10.3125,     10.6875,      9.1875,      7.3438,      7.7812,      6.5000,      8.3125,      7.6875,      6.0625,     10.8125,      7.0938,      7.7812,     10.6875],
        [    -0.1309,     -1.7422,     -1.8672,     -3.0156,     -3.4062,     -2.0938,     -3.1406,     -2.3125,     -2.3281,     -2.1250,     -2.2969,     -3.1562,     -3.2969,     -3.2656,     -3.2812],
        [    -0.6055,    -12.7500,    -11.7500,    -15.0625,    -14.7500,    -11.5625,    -14.0625,    -11.7500,    -14.0625,    -11.6875,    -11.6250,    -15.1250,    -13.5000,    -15.4375,    -15.9375],
        [    -0.0359,      0.5391,      0.3027,     -0.5312,     -0.8125,     -0.9961,     -1.4688,     -1.7031,     -0.9258,     -0.9141,     -1.5078,     -0.4199,     -1.9609,     -2.1094,     -0.6484],
        [     0.0172,      0.7227,      1.0156,      0.3730,      0.0359,     -0.0067,     -0.6836,     -1.5000,      0.7812,      0.2334,     -0.8984,      0.5547,     -1.1484,     -1.2344,      0.1523],
        [    -0.0601,     -0.4082,     -0.3301,     -1.2109,     -0.9961,     -1.3516,     -1.2500,     -1.4688,     -2.2656,     -1.5391,     -0.4082,     -0.7891,     -1.3750,     -2.0938,     -1.0859],
        [     0.2949,     10.4375,      9.3125,      9.1250,      8.4375,      6.6875,      6.8125,      5.4062,      6.8750,      6.2188,      5.4062,      9.7500,      5.7812,      5.5312,      9.1875],
        [    -0.1904,     -1.8516,     -2.7344,     -4.2500,     -3.7031,     -3.1875,     -3.9062,     -3.2031,     -4.6562,     -4.2500,     -3.0625,     -4.1250,     -4.5312,     -5.3125,     -4.8750],
        [     0.4395,     14.0625,     12.4375,     13.1875,     11.9375,      9.8125,     10.3750,      8.8750,     10.7500,      9.1875,      8.6875,     13.1875,      9.0000,     10.1250,     13.0625],
        [    -0.1553,     -1.1641,     -1.8828,     -3.5938,     -3.4375,     -1.9766,     -3.4688,     -1.8516,     -2.4219,     -2.4375,     -2.6406,     -3.6562,     -3.7656,     -3.9531,     -3.6094],
        [    -0.0674,     -0.6914,     -1.1172,     -1.8203,     -1.3828,     -1.3828,     -1.5469,     -1.2656,     -2.0312,     -1.5234,      0.2656,     -1.5312,     -1.3750,     -1.3359,     -1.6641],
        [     0.4629,     15.0625,     13.6875,     14.3125,     12.3750,      9.8750,     10.2500,      8.2500,     11.2500,      9.2500,      8.3750,     14.6875,      8.9375,     10.0625,     13.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9071],
        [0.1523],
        [0.5252],
        [0.9028],
        [1.0000],
        [0.9041],
        [0.8727],
        [0.8219],
        [0.2962],
        [0.9639],
        [0.1769],
        [0.8979],
        [0.7867],
        [0.2467]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1309,     0.6523,     0.2168,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2070,     0.4102,     0.2432,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7383,     0.0623,     0.1035,     0.0771,     0.0187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0006,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6680,     0.1113,     0.1025,     0.0659,     0.0239,     0.0157,     0.0137,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1543,     0.1680,     0.3145,     0.1709,     0.0664,     0.0403,     0.0342,     0.0515,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0023,     0.0050,     0.0056,     0.0011,     0.0008,     0.0009,     0.0124,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.1367,     0.0635,     0.0850,     0.1406,     0.1807,     0.1436,     0.0623,     0.1167,     0.0623,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0004,     0.0005,     0.0001,     0.0001,     0.0001,     0.0018,     0.0001,     0.0002,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0479,     0.2871,     0.0889,     0.0664,     0.0864,     0.0923,     0.0579,     0.0693,     0.0479,     0.0579,     0.0325,     0.0664,     0.0000,     0.0000,     0.0000],
        [    0.9531,     0.0152,     0.0062,     0.0027,     0.0011,     0.0006,     0.0004,     0.0114,     0.0006,     0.0021,     0.0043,     0.0031,     0.0003,     0.0000,     0.0000],
        [    0.8633,     0.0150,     0.0134,     0.0157,     0.0052,     0.0040,     0.0039,     0.0320,     0.0060,     0.0096,     0.0149,     0.0102,     0.0045,     0.0026,     0.0000],
        [    0.0131,     0.2891,     0.0679,     0.0522,     0.0850,     0.0845,     0.0505,     0.0439,     0.0498,     0.0552,     0.0312,     0.0540,     0.0265,     0.0427,     0.0540]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0042,     -0.1235,     -0.1318,     -0.1318,     -0.1562,     -0.1572,     -0.1572,     -0.0972,     -0.1572,     -0.1455,     -0.1250,     -0.1348,     -0.1543,     -0.1846,     -0.1572],
        [    -0.2373,     -8.8750,     -7.0938,     -7.6250,     -9.8750,     -9.4375,     -9.8125,     -6.2500,     -9.0625,     -7.9375,     -7.2500,     -7.0938,     -8.9375,    -10.5000,     -8.5625],
        [    -0.0098,      1.5938,      0.4902,      0.3027,      0.3008,      0.5391,      0.1787,      0.4336,     -0.0118,      0.2031,     -0.2793,      0.3418,     -0.3340,     -0.3086,      0.1357],
        [    -0.0201,      0.6641,      0.1406,     -0.4238,     -0.7500,     -0.5352,     -0.9570,     -0.4434,     -0.9727,     -0.3203,     -0.7188,     -0.1152,     -1.4453,     -1.3281,     -0.3711],
        [    -0.0806,     -2.5469,     -2.0469,     -2.3438,     -3.7656,     -4.0625,     -3.8125,     -2.3281,     -3.5000,     -2.3438,     -2.4375,     -2.1875,     -3.8281,     -4.1562,     -2.7812],
        [    -0.2930,     -9.3125,     -7.7188,     -8.3750,    -11.8750,    -12.6875,    -12.8125,     -8.6250,    -11.7500,     -9.1250,     -9.5000,     -8.5000,    -12.0625,    -13.6875,     -9.8125],
        [    -0.0757,     -1.8672,     -1.9453,     -2.3906,     -3.4062,     -3.8281,     -3.9531,     -2.4062,     -3.6094,     -2.6094,     -2.3594,     -2.3281,     -3.9219,     -4.1250,     -2.9219],
        [    -0.0060,      0.0767,      0.7031,      0.0918,     -0.8555,     -1.3516,     -1.5156,     -1.1094,     -0.8398,      0.1426,     -0.7617,      0.2832,     -1.5391,     -1.0703,      0.1533],
        [    -0.1777,     -6.1875,     -5.4375,     -5.3438,     -7.0000,     -7.2812,     -7.1875,     -4.5312,     -6.8750,     -5.9375,     -5.5312,     -5.5312,     -6.7500,     -8.0000,     -6.3750],
        [     0.0649,      2.7969,      2.0156,      2.3125,      2.8125,      3.0625,      2.8281,      2.0000,      2.6250,      2.0000,      1.6328,      2.0156,      2.5156,      2.8750,      2.4219],
        [    -0.2461,     -9.3750,     -7.9688,     -7.8125,     -9.8750,     -9.8125,     -9.6875,     -6.5312,     -9.7500,     -8.8125,     -8.1250,     -8.4375,     -9.0000,    -11.0625,     -9.0625],
        [    -0.0081,      1.7812,      0.6094,      0.3203,      0.5781,      0.6484,      0.1787,      0.3613,     -0.0109,      0.1797,     -0.4004,      0.3145,     -0.3867,     -0.3516,      0.2559],
        [    -0.1807,     -4.3125,     -5.2188,     -6.0312,     -6.9688,     -7.5625,     -7.9688,     -4.6250,     -7.5625,     -6.3125,     -5.5625,     -5.9375,     -8.3125,     -8.9375,     -6.8438],
        [    -0.1328,     -4.1875,     -4.2812,     -4.1250,     -5.2500,     -5.5000,     -5.5312,     -3.4375,     -5.0938,     -4.6250,     -4.1875,     -4.5625,     -5.3750,     -5.9375,     -4.9062],
        [     0.0237,      3.1094,      1.6719,      1.4062,      1.8906,      1.8828,      1.3750,      1.2344,      1.3594,      1.4609,      0.8906,      1.4375,      0.7266,      1.2031,      1.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9191],
        [0.2285],
        [0.2731],
        [0.5262],
        [0.9821],
        [0.5914],
        [0.3024],
        [0.7367],
        [0.0168],
        [0.9040],
        [0.0997],
        [0.5535],
        [0.7139],
        [0.0193]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0262,     0.4980,     0.4766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.2598,     0.4746,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.2910,     0.4297,     0.2373,     0.0422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0005,     0.0000,     0.0000,     0.0003,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0085,     0.5352,     0.2227,     0.1226,     0.0493,     0.0269,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.3359,     0.3223,     0.1807,     0.0515,     0.0227,     0.0464,     0.0364,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2852,     0.1592,     0.0864,     0.0752,     0.0864,     0.0820,     0.0859,     0.0649,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.1699,     0.3379,     0.1992,     0.0337,     0.0141,     0.0374,     0.0309,     0.0162,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0003,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0359,     0.2383,     0.1387,     0.1021,     0.0588,     0.0479,     0.0503,     0.0515,     0.0542,     0.0796,     0.0496,     0.0923,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.3242,     0.2168,     0.1138,     0.0298,     0.0126,     0.0248,     0.0229,     0.0187,     0.0757,     0.0253,     0.1143,     0.0188,     0.0000,     0.0000],
        [    0.6250,     0.0747,     0.0142,     0.0137,     0.0273,     0.0378,     0.0221,     0.0190,     0.0408,     0.0090,     0.0613,     0.0082,     0.0179,     0.0286,     0.0000],
        [    0.0014,     0.1465,     0.2051,     0.1260,     0.0275,     0.0131,     0.0292,     0.0255,     0.0157,     0.0991,     0.0226,     0.1465,     0.0251,     0.0227,     0.0938]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0004,     -0.1611,     -0.2217,     -0.2119,     -0.1504,     -0.1177,     -0.1621,     -0.1562,     -0.1226,     -0.2139,     -0.1455,     -0.2285,     -0.1641,     -0.1504,     -0.2148],
        [     0.0095,      6.0312,      6.4688,      5.8438,      3.7812,      2.6562,      3.9062,      3.6094,      3.1250,      5.4375,      4.0312,      6.0000,      3.6562,      3.7812,      5.4062],
        [     0.0025,      2.9375,      2.9062,      2.5312,      1.5078,      1.0859,      1.4609,      1.4531,      1.2812,      2.3281,      1.4766,      2.5781,      1.3750,      1.4453,      2.2812],
        [     0.0089,      6.0625,      6.6562,      6.0938,      4.0625,      3.0625,      4.1562,      4.0000,      3.3594,      5.8438,      3.9531,      6.3438,      4.0000,      3.9062,      5.7812],
        [     0.0105,      5.5312,      5.9062,      5.3125,      3.5938,      2.5000,      3.7031,      3.4375,      2.8750,      5.0000,      3.6719,      5.5000,      3.5312,      3.3906,      4.9375],
        [    -0.0178,     -7.6250,    -11.8750,    -11.6250,     -8.1250,     -6.7812,     -9.1250,     -8.7500,     -6.6875,    -11.9375,     -7.7812,    -12.6875,     -9.3125,     -8.3750,    -12.0625],
        [     0.0052,      4.1250,      3.2656,      2.6719,      1.7578,      1.1484,      1.4531,      1.4609,      1.5547,      2.2500,      1.7188,      2.5938,      1.3125,      1.4844,      2.1406],
        [     0.0059,      4.4062,      4.3750,      3.7969,      2.5469,      1.7188,      2.4375,      2.1875,      1.8672,      3.4531,      2.1406,      3.8125,      2.3594,      2.1719,      3.3438],
        [    -0.0019,     -0.5859,     -1.1953,     -1.3438,     -1.1953,     -1.2500,     -1.2031,     -1.4844,     -1.3672,     -1.6328,     -1.0625,     -1.6250,     -1.3203,     -1.3906,     -1.6562],
        [     0.0071,      5.1562,      5.8438,      5.3125,      3.5312,      2.6562,      3.6250,      3.4375,      2.7969,      5.0938,      3.2500,      5.5312,      3.5781,      3.3438,      5.0312],
        [    -0.0232,    -10.3750,    -14.3125,    -13.7500,    -10.0000,     -7.8438,    -10.8125,    -10.5000,     -8.3125,    -14.0625,     -9.1250,    -14.8750,    -10.8750,     -9.8750,    -14.0000],
        [    -0.0001,      1.8906,      1.3516,      1.0391,      0.4941,      0.2871,      0.3340,      0.3594,      0.4121,      0.7930,      0.3203,      0.9414,      0.1875,      0.3320,      0.7266],
        [     0.0074,      5.2500,      4.8438,      4.1875,      2.8438,      1.9844,      2.6562,      2.5781,      2.3750,      3.7812,      2.6719,      4.1875,      2.3750,      2.4375,      3.6719],
        [    -0.0055,     -2.1250,     -3.7969,     -3.8281,     -3.1406,     -2.8125,     -3.3438,     -3.5000,     -2.7344,     -4.2500,     -2.3281,     -4.3438,     -3.5469,     -3.0938,     -4.2188],
        [     0.0058,      4.6250,      4.9688,      4.5000,      2.9688,      2.2344,      3.0156,      2.8906,      2.4062,      4.2500,      2.7656,      4.6250,      2.8750,      2.7812,      4.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0030],
        [    0.0129],
        [    0.0028],
        [    0.0005],
        [    0.7423],
        [    0.0242],
        [    0.0008],
        [    0.0367],
        [    0.0061],
        [    0.5954],
        [    0.0188],
        [    0.0109],
        [    0.1196],
        [    0.0036]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(lihood:0.0080 Lann:0.0021ndum:0.0031 creamy:0.0023lihood:0.0046lihood:0.0061 tob:0.0018lihood:0.0055)
lihood
------
		( Lann:0.0021ndum:0.0031 creamy:0.0023lihood:0.0046lihood:0.0061 tob:0.0018lihood:0.0055lihood:0.0067)
lihoodlihoodndumlihoodware Phantlihoodlihood� Airesndum princndum Aires Aires
@ 2550 train 4.1083 , allloss: 4.1083, dt: 1189.57ms, fracRes: 0.3179, norm(attn): 0.4434, norm(output): 0.9336, norm(x): 1.0807, norm(y): 0.9908, norm:0.4983, tok/sec: 110184.69, flops:96.51, batch-reuse:1
@ 2551 train 4.5070 , allloss: 4.5070, dt: 700.62ms, fracRes: 0.3236, norm(attn): 0.4434, norm(output): 0.9336, norm(x): 1.0912, norm(y): 0.9909, norm:1.1197, tok/sec: 187079.40, flops:163.85, batch-reuse:1
@ 2552 train 4.0693 , allloss: 4.0693, dt: 698.79ms, fracRes: 0.3286, norm(attn): 0.4434, norm(output): 0.9336, norm(x): 1.0820, norm(y): 0.9905, norm:0.7586, tok/sec: 187569.47, flops:164.28, batch-reuse:1
@ 2553 train 4.0708 , allloss: 4.0708, dt: 697.91ms, fracRes: 0.3291, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.0851, norm(y): 0.9904, norm:0.5195, tok/sec: 187806.50, flops:164.49, batch-reuse:1
@ 2554 train 4.0390 , allloss: 4.0390, dt: 690.84ms, fracRes: 0.3260, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0841, norm(y): 0.9905, norm:0.4642, tok/sec: 189727.46, flops:166.17, batch-reuse:1
@ 2555 train 3.8505 , allloss: 3.8505, dt: 700.86ms, fracRes: 0.3280, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0873, norm(y): 0.9906, norm:0.5112, tok/sec: 187015.31, flops:163.80, batch-reuse:1
@ 2556 train 3.9283 , allloss: 3.9283, dt: 683.63ms, fracRes: 0.3360, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0992, norm(y): 0.9907, norm:0.4904, tok/sec: 191728.71, flops:167.93, batch-reuse:1
@ 2557 train 3.9536 , allloss: 3.9536, dt: 701.95ms, fracRes: 0.3348, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0924, norm(y): 0.9905, norm:0.4675, tok/sec: 186724.90, flops:163.54, batch-reuse:1
@ 2558 train 3.9942 , allloss: 3.9942, dt: 700.39ms, fracRes: 0.3288, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0883, norm(y): 0.9906, norm:0.4404, tok/sec: 187140.91, flops:163.91, batch-reuse:1
@ 2559 train 3.9556 , allloss: 3.9556, dt: 696.38ms, fracRes: 0.3308, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0944, norm(y): 0.9907, norm:0.4368, tok/sec: 188220.00, flops:164.85, batch-reuse:1
@ 2560 train 3.8432 , allloss: 3.8432, dt: 682.89ms, fracRes: 0.3305, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.0911, norm(y): 0.9907, norm:0.4627, tok/sec: 191936.15, flops:168.11, batch-reuse:1
@ 2561 train 3.9350 , allloss: 3.9350, dt: 700.12ms, fracRes: 0.3332, norm(attn): 0.4453, norm(output): 0.9336, norm(x): 1.1008, norm(y): 0.9910, norm:0.5164, tok/sec: 187212.29, flops:163.97, batch-reuse:1
@ 2562 train 3.9279 , allloss: 3.9279, dt: 701.39ms, fracRes: 0.3299, norm(attn): 0.4551, norm(output): 0.9375, norm(x): 1.0930, norm(y): 0.9907, norm:0.4717, tok/sec: 186874.88, flops:163.68, batch-reuse:1
@ 2563 train 3.8942 , allloss: 3.8942, dt: 702.80ms, fracRes: 0.3272, norm(attn): 0.4453, norm(output): 0.9336, norm(x): 1.0894, norm(y): 0.9909, norm:0.4756, tok/sec: 186499.77, flops:163.35, batch-reuse:1
@ 2564 train 3.8266 , allloss: 3.8266, dt: 695.14ms, fracRes: 0.3294, norm(attn): 0.4434, norm(output): 0.9297, norm(x): 1.0854, norm(y): 0.9907, norm:0.4888, tok/sec: 188555.18, flops:165.15, batch-reuse:1
@ 2565 train 4.0101 , allloss: 4.0101, dt: 690.21ms, fracRes: 0.3331, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0964, norm(y): 0.9908, norm:0.4033, tok/sec: 189901.40, flops:166.33, batch-reuse:1
@ 2566 train 3.9448 , allloss: 3.9448, dt: 695.05ms, fracRes: 0.3429, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0999, norm(y): 0.9904, norm:0.4579, tok/sec: 188579.50, flops:165.17, batch-reuse:1
@ 2567 train 3.9192 , allloss: 3.9192, dt: 708.51ms, fracRes: 0.3445, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1016, norm(y): 0.9904, norm:0.3959, tok/sec: 184996.52, flops:162.03, batch-reuse:1
@ 2568 train 3.9300 , allloss: 3.9300, dt: 708.31ms, fracRes: 0.3411, norm(attn): 0.4453, norm(output): 0.9375, norm(x): 1.1017, norm(y): 0.9906, norm:0.4264, tok/sec: 185050.19, flops:162.08, batch-reuse:1
@ 2569 train 3.9863 , allloss: 3.9863, dt: 703.10ms, fracRes: 0.3368, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0933, norm(y): 0.9907, norm:0.4081, tok/sec: 186421.03, flops:163.28, batch-reuse:1
@ 2570 train 3.9046 , allloss: 3.9046, dt: 702.64ms, fracRes: 0.3348, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0949, norm(y): 0.9905, norm:0.4014, tok/sec: 186541.73, flops:163.38, batch-reuse:1
@ 2571 train 3.8820 , allloss: 3.8820, dt: 690.53ms, fracRes: 0.3388, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0980, norm(y): 0.9905, norm:0.4206, tok/sec: 189812.88, flops:166.25, batch-reuse:1
@ 2572 train 4.0179 , allloss: 4.0179, dt: 693.35ms, fracRes: 0.3357, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0973, norm(y): 0.9908, norm:0.4154, tok/sec: 189041.00, flops:165.57, batch-reuse:1
@ 2573 train 3.9292 , allloss: 3.9292, dt: 691.45ms, fracRes: 0.3375, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.0989, norm(y): 0.9906, norm:0.3945, tok/sec: 189560.45, flops:166.03, batch-reuse:1
@ 2574 train 3.8746 , allloss: 3.8746, dt: 693.90ms, fracRes: 0.3391, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0973, norm(y): 0.9904, norm:0.3917, tok/sec: 188892.97, flops:165.44, batch-reuse:1
@ 2575 train 3.9212 , allloss: 3.9212, dt: 696.23ms, fracRes: 0.3401, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0998, norm(y): 0.9906, norm:0.3607, tok/sec: 188259.06, flops:164.89, batch-reuse:1
@ 2576 train 3.8924 , allloss: 3.8924, dt: 687.16ms, fracRes: 0.3437, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0971, norm(y): 0.9904, norm:0.3879, tok/sec: 190743.52, flops:167.06, batch-reuse:1
@ 2577 train 3.9822 , allloss: 3.9822, dt: 678.36ms, fracRes: 0.3373, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0964, norm(y): 0.9908, norm:0.3791, tok/sec: 193218.06, flops:169.23, batch-reuse:1
@ 2578 train 3.7608 , allloss: 3.7608, dt: 700.86ms, fracRes: 0.3318, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0872, norm(y): 0.9908, norm:0.3921, tok/sec: 187016.39, flops:163.80, batch-reuse:1
@ 2579 train 3.9652 , allloss: 3.9652, dt: 701.76ms, fracRes: 0.3295, norm(attn): 0.4414, norm(output): 0.9297, norm(x): 1.0872, norm(y): 0.9908, norm:0.3888, tok/sec: 186776.41, flops:163.59, batch-reuse:1
@ 2580 train 3.9210 , allloss: 3.9210, dt: 699.23ms, fracRes: 0.3294, norm(attn): 0.4355, norm(output): 0.9297, norm(x): 1.0855, norm(y): 0.9907, norm:0.3644, tok/sec: 187452.12, flops:164.18, batch-reuse:1
@ 2581 train 3.8705 , allloss: 3.8705, dt: 699.07ms, fracRes: 0.3290, norm(attn): 0.4355, norm(output): 0.9336, norm(x): 1.0897, norm(y): 0.9907, norm:0.3918, tok/sec: 187494.37, flops:164.22, batch-reuse:1
@ 2582 train 3.8591 , allloss: 3.8591, dt: 691.92ms, fracRes: 0.3307, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0886, norm(y): 0.9907, norm:0.3618, tok/sec: 189431.90, flops:165.91, batch-reuse:1
@ 2583 train 3.8592 , allloss: 3.8592, dt: 691.30ms, fracRes: 0.3320, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0872, norm(y): 0.9908, norm:0.4154, tok/sec: 189602.03, flops:166.06, batch-reuse:1
@ 2584 train 3.8916 , allloss: 3.8916, dt: 690.46ms, fracRes: 0.3364, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0973, norm(y): 0.9907, norm:0.3455, tok/sec: 189833.73, flops:166.27, batch-reuse:1
@ 2585 train 3.9046 , allloss: 3.9046, dt: 686.43ms, fracRes: 0.3419, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1023, norm(y): 0.9907, norm:0.3625, tok/sec: 190946.51, flops:167.24, batch-reuse:1
@ 2586 train 3.8052 , allloss: 3.8052, dt: 695.45ms, fracRes: 0.3424, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1081, norm(y): 0.9907, norm:0.3800, tok/sec: 188471.73, flops:165.07, batch-reuse:1
@ 2587 train 3.9999 , allloss: 3.9999, dt: 703.21ms, fracRes: 0.3438, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1053, norm(y): 0.9910, norm:0.3785, tok/sec: 186390.13, flops:163.25, batch-reuse:1
@ 2588 train 3.8455 , allloss: 3.8455, dt: 701.94ms, fracRes: 0.3328, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0952, norm(y): 0.9909, norm:0.3755, tok/sec: 186728.83, flops:163.55, batch-reuse:1
@ 2589 train 3.9476 , allloss: 3.9476, dt: 689.39ms, fracRes: 0.3324, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0938, norm(y): 0.9909, norm:0.3635, tok/sec: 190127.19, flops:166.52, batch-reuse:1
@ 2590 train 3.8726 , allloss: 3.8726, dt: 687.26ms, fracRes: 0.3315, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.0908, norm(y): 0.9909, norm:0.3656, tok/sec: 190715.46, flops:167.04, batch-reuse:1
@ 2591 train 3.9414 , allloss: 3.9414, dt: 678.95ms, fracRes: 0.3308, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0893, norm(y): 0.9910, norm:0.3754, tok/sec: 193050.34, flops:169.08, batch-reuse:1
@ 2592 train 3.9758 , allloss: 3.9758, dt: 680.50ms, fracRes: 0.3313, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0932, norm(y): 0.9911, norm:0.3741, tok/sec: 192610.23, flops:168.70, batch-reuse:1
@ 2593 train 3.8572 , allloss: 3.8572, dt: 695.44ms, fracRes: 0.3326, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1027, norm(y): 0.9912, norm:0.4085, tok/sec: 188472.44, flops:165.07, batch-reuse:1
@ 2594 train 3.8943 , allloss: 3.8943, dt: 715.16ms, fracRes: 0.3309, norm(attn): 0.4473, norm(output): 0.9375, norm(x): 1.0944, norm(y): 0.9910, norm:0.3813, tok/sec: 183277.54, flops:160.52, batch-reuse:1
@ 2595 train 3.9024 , allloss: 3.9024, dt: 708.16ms, fracRes: 0.3371, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0933, norm(y): 0.9907, norm:0.3868, tok/sec: 185087.14, flops:162.11, batch-reuse:1
@ 2596 train 4.0242 , allloss: 4.0242, dt: 697.03ms, fracRes: 0.3362, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1007, norm(y): 0.9911, norm:0.3936, tok/sec: 188043.80, flops:164.70, batch-reuse:1
@ 2597 train 3.8578 , allloss: 3.8578, dt: 706.24ms, fracRes: 0.3342, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.0987, norm(y): 0.9910, norm:0.4149, tok/sec: 185590.69, flops:162.55, batch-reuse:1
@ 2598 train 3.8491 , allloss: 3.8491, dt: 702.21ms, fracRes: 0.3270, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.0889, norm(y): 0.9910, norm:0.3580, tok/sec: 186657.38, flops:163.48, batch-reuse:1
@ 2599 train 3.8119 , allloss: 3.8119, dt: 699.07ms, fracRes: 0.3336, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0922, norm(y): 0.9905, norm:0.3797, tok/sec: 187495.72, flops:164.22, batch-reuse:1
@ 2600 train 3.8055 , allloss: 3.8055, dt: 708.31ms, fracRes: 0.3301, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0885, norm(y): 0.9906, norm:0.3572, tok/sec: 185047.89, flops:162.08, batch-reuse:1
@ 2601 train 3.9964 , allloss: 3.9964, dt: 709.90ms, fracRes: 0.3316, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0906, norm(y): 0.9908, norm:0.3616, tok/sec: 184633.61, flops:161.71, batch-reuse:1
@ 2602 train 3.9868 , allloss: 3.9868, dt: 708.16ms, fracRes: 0.3337, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0910, norm(y): 0.9907, norm:0.3799, tok/sec: 185087.57, flops:162.11, batch-reuse:1
@ 2603 train 4.1047 , allloss: 4.1047, dt: 712.19ms, fracRes: 0.3380, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.0958, norm(y): 0.9906, norm:0.4137, tok/sec: 184039.57, flops:161.19, batch-reuse:1
@ 2604 train 4.0626 , allloss: 4.0626, dt: 708.50ms, fracRes: 0.3440, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0992, norm(y): 0.9904, norm:0.3811, tok/sec: 184999.82, flops:162.03, batch-reuse:1
@ 2605 train 4.0156 , allloss: 4.0156, dt: 707.48ms, fracRes: 0.3477, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1058, norm(y): 0.9905, norm:0.3764, tok/sec: 185267.09, flops:162.27, batch-reuse:1
@ 2606 train 4.0797 , allloss: 4.0797, dt: 709.84ms, fracRes: 0.3374, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0982, norm(y): 0.9908, norm:0.3909, tok/sec: 184648.93, flops:161.73, batch-reuse:1
@ 2607 train 3.9991 , allloss: 3.9991, dt: 717.94ms, fracRes: 0.3406, norm(attn): 0.4395, norm(output): 0.9492, norm(x): 1.1120, norm(y): 0.9908, norm:0.3969, tok/sec: 182566.64, flops:159.90, batch-reuse:1
@ 2608 train 4.0606 , allloss: 4.0606, dt: 712.13ms, fracRes: 0.3316, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0972, norm(y): 0.9910, norm:0.3822, tok/sec: 184055.22, flops:161.21, batch-reuse:1
@ 2609 train 4.2353 , allloss: 4.2353, dt: 699.17ms, fracRes: 0.3344, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1045, norm(y): 0.9911, norm:0.3851, tok/sec: 187469.25, flops:164.20, batch-reuse:1
@ 2610 train 4.1920 , allloss: 4.1920, dt: 699.64ms, fracRes: 0.3329, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1018, norm(y): 0.9910, norm:0.4665, tok/sec: 187342.50, flops:164.08, batch-reuse:1
@ 2611 train 4.0879 , allloss: 4.0879, dt: 699.11ms, fracRes: 0.3312, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0999, norm(y): 0.9910, norm:0.4484, tok/sec: 187484.59, flops:164.21, batch-reuse:1
@ 2612 train 4.0751 , allloss: 4.0751, dt: 695.85ms, fracRes: 0.3373, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0990, norm(y): 0.9909, norm:0.4282, tok/sec: 188362.14, flops:164.98, batch-reuse:1
@ 2613 train 3.9293 , allloss: 3.9293, dt: 697.29ms, fracRes: 0.3321, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0938, norm(y): 0.9911, norm:0.3830, tok/sec: 187972.11, flops:164.64, batch-reuse:1
@ 2614 train 4.0927 , allloss: 4.0927, dt: 699.42ms, fracRes: 0.3302, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.0912, norm(y): 0.9910, norm:0.4085, tok/sec: 187400.93, flops:164.14, batch-reuse:1
@ 2615 train 4.0709 , allloss: 4.0709, dt: 693.36ms, fracRes: 0.3383, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1010, norm(y): 0.9909, norm:0.3797, tok/sec: 189039.64, flops:165.57, batch-reuse:1
@ 2616 train 4.0687 , allloss: 4.0687, dt: 689.56ms, fracRes: 0.3402, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1005, norm(y): 0.9908, norm:0.3744, tok/sec: 190079.40, flops:166.48, batch-reuse:1
@ 2617 train 3.9809 , allloss: 3.9809, dt: 678.97ms, fracRes: 0.3356, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0935, norm(y): 0.9909, norm:0.3892, tok/sec: 193043.96, flops:169.08, batch-reuse:1
@ 2618 train 3.9220 , allloss: 3.9220, dt: 687.88ms, fracRes: 0.3391, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0989, norm(y): 0.9908, norm:0.3720, tok/sec: 190546.17, flops:166.89, batch-reuse:1
@ 2619 train 3.9791 , allloss: 3.9791, dt: 705.88ms, fracRes: 0.3415, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1031, norm(y): 0.9907, norm:0.3749, tok/sec: 185686.91, flops:162.63, batch-reuse:1
@ 2620 train 4.0751 , allloss: 4.0751, dt: 694.09ms, fracRes: 0.3381, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1015, norm(y): 0.9908, norm:0.3896, tok/sec: 188839.25, flops:165.40, batch-reuse:1
@ 2621 train 4.0148 , allloss: 4.0148, dt: 699.94ms, fracRes: 0.3402, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1059, norm(y): 0.9909, norm:0.3883, tok/sec: 187261.39, flops:164.01, batch-reuse:1
@ 2622 train 4.0264 , allloss: 4.0264, dt: 695.06ms, fracRes: 0.3354, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1037, norm(y): 0.9911, norm:0.3962, tok/sec: 188576.07, flops:165.17, batch-reuse:1
@ 2623 train 4.1007 , allloss: 4.1007, dt: 701.31ms, fracRes: 0.3400, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1064, norm(y): 0.9910, norm:0.3653, tok/sec: 186894.89, flops:163.69, batch-reuse:1
@ 2624 train 4.1073 , allloss: 4.1073, dt: 702.40ms, fracRes: 0.3467, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1106, norm(y): 0.9908, norm:0.4020, tok/sec: 186606.82, flops:163.44, batch-reuse:1
@ 2625 train 4.0569 , allloss: 4.0569, dt: 700.78ms, fracRes: 0.3423, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1087, norm(y): 0.9908, norm:0.3948, tok/sec: 187036.50, flops:163.82, batch-reuse:1
@ 2626 train 4.0203 , allloss: 4.0203, dt: 701.36ms, fracRes: 0.3395, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1059, norm(y): 0.9911, norm:0.3866, tok/sec: 186881.68, flops:163.68, batch-reuse:1
@ 2627 train 4.0642 , allloss: 4.0642, dt: 700.27ms, fracRes: 0.3370, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1047, norm(y): 0.9911, norm:0.4298, tok/sec: 187172.77, flops:163.94, batch-reuse:1
@ 2628 train 3.9361 , allloss: 3.9361, dt: 701.63ms, fracRes: 0.3388, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1046, norm(y): 0.9908, norm:0.3792, tok/sec: 186810.30, flops:163.62, batch-reuse:1
@ 2629 train 4.0059 , allloss: 4.0059, dt: 704.02ms, fracRes: 0.3442, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1016, norm(y): 0.9907, norm:0.3790, tok/sec: 186175.58, flops:163.06, batch-reuse:1
@ 2630 train 4.0944 , allloss: 4.0944, dt: 702.95ms, fracRes: 0.3419, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1051, norm(y): 0.9909, norm:0.4365, tok/sec: 186461.06, flops:163.31, batch-reuse:1
@ 2631 train 3.9702 , allloss: 3.9702, dt: 702.83ms, fracRes: 0.3398, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0985, norm(y): 0.9908, norm:0.3918, tok/sec: 186491.29, flops:163.34, batch-reuse:1
@ 2632 train 4.0286 , allloss: 4.0286, dt: 699.27ms, fracRes: 0.3374, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1003, norm(y): 0.9910, norm:0.4351, tok/sec: 187439.97, flops:164.17, batch-reuse:1
@ 2633 train 4.0306 , allloss: 4.0306, dt: 691.13ms, fracRes: 0.3393, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1027, norm(y): 0.9909, norm:0.3725, tok/sec: 189648.01, flops:166.10, batch-reuse:1
@ 2634 train 3.9892 , allloss: 3.9892, dt: 705.36ms, fracRes: 0.3428, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1067, norm(y): 0.9907, norm:0.3789, tok/sec: 185822.48, flops:162.75, batch-reuse:1
@ 2635 train 3.9717 , allloss: 3.9717, dt: 701.31ms, fracRes: 0.3407, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1025, norm(y): 0.9907, norm:0.3630, tok/sec: 186896.67, flops:163.69, batch-reuse:1
@ 2636 train 4.0587 , allloss: 4.0587, dt: 702.39ms, fracRes: 0.3365, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1001, norm(y): 0.9910, norm:0.4034, tok/sec: 186609.16, flops:163.44, batch-reuse:1
@ 2637 train 4.0464 , allloss: 4.0464, dt: 703.50ms, fracRes: 0.3333, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0985, norm(y): 0.9910, norm:0.3713, tok/sec: 186314.83, flops:163.18, batch-reuse:1
@ 2638 train 4.0793 , allloss: 4.0793, dt: 680.45ms, fracRes: 0.3336, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0975, norm(y): 0.9910, norm:0.3936, tok/sec: 192624.60, flops:168.71, batch-reuse:1
@ 2639 train 4.1153 , allloss: 4.1153, dt: 697.56ms, fracRes: 0.3387, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1074, norm(y): 0.9910, norm:0.4054, tok/sec: 187901.18, flops:164.57, batch-reuse:1
@ 2640 train 3.9581 , allloss: 3.9581, dt: 695.17ms, fracRes: 0.3387, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1014, norm(y): 0.9909, norm:0.4365, tok/sec: 188546.58, flops:165.14, batch-reuse:1
@ 2641 train 4.0591 , allloss: 4.0591, dt: 688.34ms, fracRes: 0.3420, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1085, norm(y): 0.9911, norm:0.4330, tok/sec: 190418.07, flops:166.78, batch-reuse:1
@ 2642 train 4.0402 , allloss: 4.0402, dt: 684.72ms, fracRes: 0.3401, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1044, norm(y): 0.9909, norm:0.3704, tok/sec: 191423.69, flops:167.66, batch-reuse:1
@ 2643 train 3.9213 , allloss: 3.9213, dt: 702.38ms, fracRes: 0.3458, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1039, norm(y): 0.9905, norm:0.3804, tok/sec: 186610.11, flops:163.44, batch-reuse:1
@ 2644 train 4.0189 , allloss: 4.0189, dt: 694.33ms, fracRes: 0.3493, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1008, norm(y): 0.9905, norm:0.3709, tok/sec: 188775.77, flops:165.34, batch-reuse:1
@ 2645 train 4.0552 , allloss: 4.0552, dt: 696.89ms, fracRes: 0.3425, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.0991, norm(y): 0.9907, norm:0.3810, tok/sec: 188080.27, flops:164.73, batch-reuse:1
@ 2646 train 4.1000 , allloss: 4.1000, dt: 696.48ms, fracRes: 0.3445, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0948, norm(y): 0.9910, norm:0.4833, tok/sec: 188191.59, flops:164.83, batch-reuse:1
@ 2647 train 4.0273 , allloss: 4.0273, dt: 689.60ms, fracRes: 0.3462, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.0991, norm(y): 0.9909, norm:0.4300, tok/sec: 190070.79, flops:166.47, batch-reuse:1
@ 2648 train 3.9702 , allloss: 3.9702, dt: 689.09ms, fracRes: 0.3425, norm(attn): 0.4375, norm(output): 0.9297, norm(x): 1.0990, norm(y): 0.9907, norm:0.4279, tok/sec: 190210.08, flops:166.60, batch-reuse:1
@ 2649 train 3.9854 , allloss: 3.9854, dt: 705.94ms, fracRes: 0.3399, norm(attn): 0.4355, norm(output): 0.9375, norm(x): 1.1012, norm(y): 0.9906, norm:0.4514, tok/sec: 185669.60, flops:162.62, batch-reuse:1
@ 2650 train 3.9914 , allloss: 3.9914, dt: 707.85ms, fracRes: 0.3365, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0931, norm(y): 0.9908, norm:0.4317, tok/sec: 185169.80, flops:162.18, batch-reuse:1
@ 2651 train 3.9860 , allloss: 3.9860, dt: 698.12ms, fracRes: 0.3410, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0992, norm(y): 0.9910, norm:0.3953, tok/sec: 187748.96, flops:164.44, batch-reuse:1
@ 2652 train 4.0004 , allloss: 4.0004, dt: 708.30ms, fracRes: 0.3422, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.1028, norm(y): 0.9911, norm:0.4182, tok/sec: 185052.13, flops:162.08, batch-reuse:1
@ 2653 train 4.0360 , allloss: 4.0360, dt: 700.50ms, fracRes: 0.3348, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0953, norm(y): 0.9914, norm:0.4023, tok/sec: 187113.02, flops:163.88, batch-reuse:1
@ 2654 train 3.9778 , allloss: 3.9778, dt: 695.11ms, fracRes: 0.3412, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0970, norm(y): 0.9912, norm:0.4089, tok/sec: 188562.74, flops:165.15, batch-reuse:1
@ 2655 train 3.9631 , allloss: 3.9631, dt: 691.36ms, fracRes: 0.3451, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0999, norm(y): 0.9910, norm:0.3644, tok/sec: 189584.50, flops:166.05, batch-reuse:1
@ 2656 train 4.0789 , allloss: 4.0789, dt: 702.89ms, fracRes: 0.3421, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0970, norm(y): 0.9910, norm:0.3679, tok/sec: 186476.17, flops:163.33, batch-reuse:1
@ 2657 train 3.9826 , allloss: 3.9826, dt: 705.43ms, fracRes: 0.3383, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0971, norm(y): 0.9912, norm:0.3784, tok/sec: 185805.40, flops:162.74, batch-reuse:1
@ 2658 train 3.9951 , allloss: 3.9951, dt: 704.18ms, fracRes: 0.3349, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1001, norm(y): 0.9912, norm:0.3671, tok/sec: 186134.10, flops:163.03, batch-reuse:1
@ 2659 train 3.9571 , allloss: 3.9571, dt: 690.13ms, fracRes: 0.3379, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1033, norm(y): 0.9913, norm:0.3837, tok/sec: 189923.44, flops:166.35, batch-reuse:1
@ 2660 train 3.9466 , allloss: 3.9466, dt: 703.22ms, fracRes: 0.3467, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1091, norm(y): 0.9909, norm:0.3964, tok/sec: 186389.49, flops:163.25, batch-reuse:1
@ 2661 train 3.9700 , allloss: 3.9700, dt: 703.56ms, fracRes: 0.3388, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1017, norm(y): 0.9912, norm:0.4092, tok/sec: 186298.60, flops:163.17, batch-reuse:1
@ 2662 train 3.8720 , allloss: 3.8720, dt: 708.29ms, fracRes: 0.3374, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.0968, norm(y): 0.9911, norm:0.4598, tok/sec: 185055.36, flops:162.08, batch-reuse:1
@ 2663 train 4.0088 , allloss: 4.0088, dt: 706.39ms, fracRes: 0.3319, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0901, norm(y): 0.9912, norm:0.3940, tok/sec: 185551.16, flops:162.52, batch-reuse:1
@ 2664 train 4.0361 , allloss: 4.0361, dt: 687.99ms, fracRes: 0.3333, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.0979, norm(y): 0.9915, norm:0.3770, tok/sec: 190515.53, flops:166.86, batch-reuse:1
@ 2665 train 3.9659 , allloss: 3.9659, dt: 704.55ms, fracRes: 0.3361, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.0976, norm(y): 0.9913, norm:0.4209, tok/sec: 186036.91, flops:162.94, batch-reuse:1
@ 2666 train 4.0720 , allloss: 4.0720, dt: 681.99ms, fracRes: 0.3392, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.0980, norm(y): 0.9912, norm:0.4085, tok/sec: 192189.72, flops:168.33, batch-reuse:1
@ 2667 train 4.0550 , allloss: 4.0550, dt: 700.87ms, fracRes: 0.3414, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1006, norm(y): 0.9910, norm:0.3969, tok/sec: 187012.00, flops:163.80, batch-reuse:1
@ 2668 train 4.0497 , allloss: 4.0497, dt: 699.50ms, fracRes: 0.3393, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1012, norm(y): 0.9910, norm:0.4208, tok/sec: 187380.05, flops:164.12, batch-reuse:1
@ 2669 train 3.9879 , allloss: 3.9879, dt: 686.64ms, fracRes: 0.3386, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1029, norm(y): 0.9909, norm:0.4178, tok/sec: 190890.02, flops:167.19, batch-reuse:1
@ 2670 train 3.9884 , allloss: 3.9884, dt: 687.10ms, fracRes: 0.3371, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1031, norm(y): 0.9913, norm:0.3874, tok/sec: 190760.13, flops:167.08, batch-reuse:1
@ 2671 train 4.0340 , allloss: 4.0340, dt: 679.38ms, fracRes: 0.3384, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1052, norm(y): 0.9913, norm:0.3786, tok/sec: 192928.25, flops:168.98, batch-reuse:1
@ 2672 train 3.9688 , allloss: 3.9688, dt: 690.40ms, fracRes: 0.3409, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1061, norm(y): 0.9911, norm:0.4065, tok/sec: 189849.66, flops:166.28, batch-reuse:1
@ 2673 train 3.9259 , allloss: 3.9259, dt: 692.63ms, fracRes: 0.3389, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1024, norm(y): 0.9911, norm:0.3614, tok/sec: 189238.95, flops:165.75, batch-reuse:1
@ 2674 train 4.0206 , allloss: 4.0206, dt: 678.25ms, fracRes: 0.3371, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0999, norm(y): 0.9914, norm:0.4914, tok/sec: 193250.32, flops:169.26, batch-reuse:1
@ 2675 train 4.0273 , allloss: 4.0273, dt: 696.82ms, fracRes: 0.3347, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0989, norm(y): 0.9912, norm:0.4395, tok/sec: 188101.32, flops:164.75, batch-reuse:1
@ 2676 train 3.9593 , allloss: 3.9593, dt: 697.22ms, fracRes: 0.3362, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0979, norm(y): 0.9912, norm:0.3683, tok/sec: 187991.13, flops:164.65, batch-reuse:1
@ 2677 train 3.9608 , allloss: 3.9608, dt: 699.11ms, fracRes: 0.3352, norm(attn): 0.4453, norm(output): 0.9375, norm(x): 1.1012, norm(y): 0.9913, norm:0.3785, tok/sec: 187483.50, flops:164.21, batch-reuse:1
@ 2678 train 4.0710 , allloss: 4.0710, dt: 691.47ms, fracRes: 0.3347, norm(attn): 0.4473, norm(output): 0.9414, norm(x): 1.1053, norm(y): 0.9916, norm:0.3915, tok/sec: 189555.54, flops:166.02, batch-reuse:1
@ 2679 train 4.0410 , allloss: 4.0410, dt: 689.68ms, fracRes: 0.3394, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1069, norm(y): 0.9914, norm:0.4066, tok/sec: 190048.25, flops:166.45, batch-reuse:1
@ 2680 train 3.9056 , allloss: 3.9056, dt: 691.81ms, fracRes: 0.3456, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.1032, norm(y): 0.9910, norm:0.3558, tok/sec: 189463.56, flops:165.94, batch-reuse:1
@ 2681 train 4.0166 , allloss: 4.0166, dt: 712.48ms, fracRes: 0.3446, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1026, norm(y): 0.9910, norm:0.3885, tok/sec: 183966.53, flops:161.13, batch-reuse:1
@ 2682 train 3.9252 , allloss: 3.9252, dt: 695.46ms, fracRes: 0.3506, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1065, norm(y): 0.9911, norm:0.3918, tok/sec: 188467.20, flops:165.07, batch-reuse:1
@ 2683 train 3.9631 , allloss: 3.9631, dt: 698.89ms, fracRes: 0.3515, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1108, norm(y): 0.9912, norm:0.3960, tok/sec: 187543.75, flops:164.26, batch-reuse:1
@ 2684 train 4.0042 , allloss: 4.0042, dt: 694.63ms, fracRes: 0.3459, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1058, norm(y): 0.9913, norm:0.3956, tok/sec: 188693.42, flops:165.27, batch-reuse:1
@ 2685 train 4.0252 , allloss: 4.0252, dt: 693.05ms, fracRes: 0.3393, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1005, norm(y): 0.9917, norm:0.3707, tok/sec: 189124.64, flops:165.65, batch-reuse:1
@ 2686 train 4.0956 , allloss: 4.0956, dt: 693.98ms, fracRes: 0.3347, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1042, norm(y): 0.9917, norm:0.4184, tok/sec: 188870.59, flops:165.42, batch-reuse:1
@ 2687 train 3.9678 , allloss: 3.9678, dt: 694.48ms, fracRes: 0.3422, norm(attn): 0.4395, norm(output): 0.9453, norm(x): 1.1122, norm(y): 0.9911, norm:0.3774, tok/sec: 188732.93, flops:165.30, batch-reuse:1
@ 2688 train 3.9643 , allloss: 3.9643, dt: 678.77ms, fracRes: 0.3422, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1089, norm(y): 0.9910, norm:0.3607, tok/sec: 193102.14, flops:169.13, batch-reuse:1
@ 2689 train 4.0175 , allloss: 4.0175, dt: 681.92ms, fracRes: 0.3476, norm(attn): 0.4355, norm(output): 0.9375, norm(x): 1.1105, norm(y): 0.9910, norm:0.3997, tok/sec: 192209.27, flops:168.35, batch-reuse:1
@ 2690 train 3.9842 , allloss: 3.9842, dt: 686.70ms, fracRes: 0.3416, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1020, norm(y): 0.9911, norm:0.3924, tok/sec: 190871.93, flops:167.18, batch-reuse:1
@ 2691 train 4.0115 , allloss: 4.0115, dt: 706.39ms, fracRes: 0.3367, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1015, norm(y): 0.9914, norm:0.3762, tok/sec: 185552.98, flops:162.52, batch-reuse:1
@ 2692 train 3.8421 , allloss: 3.8421, dt: 709.60ms, fracRes: 0.3424, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1057, norm(y): 0.9911, norm:0.3874, tok/sec: 184711.22, flops:161.78, batch-reuse:1
@ 2693 train 4.0242 , allloss: 4.0242, dt: 695.57ms, fracRes: 0.3421, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1037, norm(y): 0.9911, norm:0.3971, tok/sec: 188437.29, flops:165.04, batch-reuse:1
@ 2694 train 4.0223 , allloss: 4.0223, dt: 694.63ms, fracRes: 0.3457, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1076, norm(y): 0.9911, norm:0.3824, tok/sec: 188692.90, flops:165.27, batch-reuse:1
@ 2695 train 3.9494 , allloss: 3.9494, dt: 708.69ms, fracRes: 0.3471, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1091, norm(y): 0.9909, norm:0.4129, tok/sec: 184949.90, flops:161.99, batch-reuse:1
@ 2696 train 3.9586 , allloss: 3.9586, dt: 710.78ms, fracRes: 0.3392, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1031, norm(y): 0.9909, norm:0.3599, tok/sec: 184405.33, flops:161.51, batch-reuse:1
@ 2697 train 3.9081 , allloss: 3.9081, dt: 703.51ms, fracRes: 0.3358, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1007, norm(y): 0.9911, norm:0.3611, tok/sec: 186311.48, flops:163.18, batch-reuse:1
@ 2698 train 3.9365 , allloss: 3.9365, dt: 702.03ms, fracRes: 0.3333, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.0969, norm(y): 0.9913, norm:0.3646, tok/sec: 186703.27, flops:163.53, batch-reuse:1
@ 2699 train 4.0264 , allloss: 4.0264, dt: 688.24ms, fracRes: 0.3355, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.0976, norm(y): 0.9915, norm:0.3938, tok/sec: 190444.52, flops:166.80, batch-reuse:1
@ 2700 train 3.8940 , allloss: 3.8940, dt: 692.89ms, fracRes: 0.3427, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1022, norm(y): 0.9912, norm:0.4043, tok/sec: 189166.15, flops:165.68, batch-reuse:1
@ 2701 train 3.9026 , allloss: 3.9026, dt: 695.08ms, fracRes: 0.3417, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.0992, norm(y): 0.9912, norm:0.3415, tok/sec: 188570.12, flops:165.16, batch-reuse:1
@ 2702 train 3.9910 , allloss: 3.9910, dt: 700.35ms, fracRes: 0.3391, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1017, norm(y): 0.9913, norm:0.3683, tok/sec: 187153.34, flops:163.92, batch-reuse:1
@ 2703 train 4.0111 , allloss: 4.0111, dt: 699.60ms, fracRes: 0.3389, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1043, norm(y): 0.9914, norm:0.3905, tok/sec: 187352.33, flops:164.09, batch-reuse:1
@ 2704 train 4.0854 , allloss: 4.0854, dt: 687.63ms, fracRes: 0.3392, norm(attn): 0.4395, norm(output): 0.9453, norm(x): 1.1117, norm(y): 0.9914, norm:0.3947, tok/sec: 190613.23, flops:166.95, batch-reuse:1
@ 2705 train 3.9442 , allloss: 3.9442, dt: 683.66ms, fracRes: 0.3449, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1093, norm(y): 0.9913, norm:0.3651, tok/sec: 191721.89, flops:167.92, batch-reuse:1
@ 2706 train 3.9059 , allloss: 3.9059, dt: 699.09ms, fracRes: 0.3449, norm(attn): 0.4414, norm(output): 0.9336, norm(x): 1.1052, norm(y): 0.9912, norm:0.4161, tok/sec: 187489.58, flops:164.21, batch-reuse:1
@ 2707 train 3.9893 , allloss: 3.9893, dt: 705.61ms, fracRes: 0.3443, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1038, norm(y): 0.9912, norm:0.3578, tok/sec: 185756.24, flops:162.70, batch-reuse:1
@ 2708 train 3.9208 , allloss: 3.9208, dt: 701.48ms, fracRes: 0.3423, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1073, norm(y): 0.9912, norm:0.3774, tok/sec: 186851.00, flops:163.65, batch-reuse:1
@ 2709 train 3.8852 , allloss: 3.8852, dt: 699.37ms, fracRes: 0.3401, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1089, norm(y): 0.9912, norm:0.4124, tok/sec: 187413.58, flops:164.15, batch-reuse:1
@ 2710 train 4.0499 , allloss: 4.0499, dt: 682.43ms, fracRes: 0.3409, norm(attn): 0.4453, norm(output): 0.9375, norm(x): 1.1088, norm(y): 0.9915, norm:0.4050, tok/sec: 192067.85, flops:168.22, batch-reuse:1
@ 2711 train 4.1151 , allloss: 4.1151, dt: 699.16ms, fracRes: 0.3464, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1119, norm(y): 0.9916, norm:0.4320, tok/sec: 187470.21, flops:164.20, batch-reuse:1
@ 2712 train 4.0196 , allloss: 4.0196, dt: 701.12ms, fracRes: 0.3436, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.1049, norm(y): 0.9914, norm:0.4527, tok/sec: 186947.71, flops:163.74, batch-reuse:1
@ 2713 train 3.9420 , allloss: 3.9420, dt: 699.52ms, fracRes: 0.3494, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1133, norm(y): 0.9912, norm:0.4386, tok/sec: 187375.13, flops:164.11, batch-reuse:1
@ 2714 train 3.9876 , allloss: 3.9876, dt: 684.06ms, fracRes: 0.3499, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1117, norm(y): 0.9914, norm:0.4453, tok/sec: 191609.76, flops:167.82, batch-reuse:1
@ 2715 train 3.9418 , allloss: 3.9418, dt: 693.19ms, fracRes: 0.3440, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1062, norm(y): 0.9913, norm:0.4124, tok/sec: 189086.52, flops:165.61, batch-reuse:1
@ 2716 train 3.9117 , allloss: 3.9117, dt: 706.80ms, fracRes: 0.3401, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1014, norm(y): 0.9912, norm:0.3886, tok/sec: 185444.32, flops:162.42, batch-reuse:1
@ 2717 train 3.9640 , allloss: 3.9640, dt: 689.65ms, fracRes: 0.3383, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1013, norm(y): 0.9912, norm:0.3838, tok/sec: 190054.50, flops:166.46, batch-reuse:1
@ 2718 train 3.9201 , allloss: 3.9201, dt: 699.56ms, fracRes: 0.3384, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1024, norm(y): 0.9912, norm:0.3760, tok/sec: 187363.63, flops:164.10, batch-reuse:1
@ 2719 train 4.0036 , allloss: 4.0036, dt: 694.43ms, fracRes: 0.3396, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1092, norm(y): 0.9913, norm:0.4064, tok/sec: 188748.61, flops:165.32, batch-reuse:1
@ 2720 train 4.0005 , allloss: 4.0005, dt: 700.90ms, fracRes: 0.3348, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1020, norm(y): 0.9913, norm:0.3661, tok/sec: 187005.58, flops:163.79, batch-reuse:1
@ 2721 train 3.8979 , allloss: 3.8979, dt: 696.73ms, fracRes: 0.3421, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1049, norm(y): 0.9912, norm:0.3689, tok/sec: 188125.65, flops:164.77, batch-reuse:1
@ 2722 train 3.9738 , allloss: 3.9738, dt: 692.52ms, fracRes: 0.3454, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1040, norm(y): 0.9911, norm:0.4005, tok/sec: 189266.84, flops:165.77, batch-reuse:1
@ 2723 train 4.0319 , allloss: 4.0319, dt: 700.45ms, fracRes: 0.3467, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1060, norm(y): 0.9911, norm:0.3900, tok/sec: 187125.56, flops:163.89, batch-reuse:1
@ 2724 train 3.9271 , allloss: 3.9271, dt: 693.83ms, fracRes: 0.3449, norm(attn): 0.4395, norm(output): 0.9336, norm(x): 1.1012, norm(y): 0.9911, norm:0.4067, tok/sec: 188909.92, flops:165.46, batch-reuse:1
@ 2725 train 3.9606 , allloss: 3.9606, dt: 695.40ms, fracRes: 0.3446, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1007, norm(y): 0.9911, norm:0.3881, tok/sec: 188484.71, flops:165.09, batch-reuse:1
@ 2726 train 3.9233 , allloss: 3.9233, dt: 700.84ms, fracRes: 0.3437, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1000, norm(y): 0.9912, norm:0.3597, tok/sec: 187021.86, flops:163.80, batch-reuse:1
@ 2727 train 3.9980 , allloss: 3.9980, dt: 698.47ms, fracRes: 0.3473, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1049, norm(y): 0.9910, norm:0.3652, tok/sec: 187655.97, flops:164.36, batch-reuse:1
@ 2728 train 4.0142 , allloss: 4.0142, dt: 699.42ms, fracRes: 0.3436, norm(attn): 0.4375, norm(output): 0.9336, norm(x): 1.1027, norm(y): 0.9911, norm:0.3293, tok/sec: 187401.38, flops:164.14, batch-reuse:1
@ 2729 train 3.9845 , allloss: 3.9845, dt: 693.98ms, fracRes: 0.3436, norm(attn): 0.4375, norm(output): 0.9375, norm(x): 1.1085, norm(y): 0.9913, norm:0.3599, tok/sec: 188870.39, flops:165.42, batch-reuse:1
@ 2730 train 3.9793 , allloss: 3.9793, dt: 697.78ms, fracRes: 0.3414, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1079, norm(y): 0.9913, norm:0.3586, tok/sec: 187841.15, flops:164.52, batch-reuse:1
@ 2731 train 3.9201 , allloss: 3.9201, dt: 698.15ms, fracRes: 0.3371, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1050, norm(y): 0.9913, norm:0.3668, tok/sec: 187741.40, flops:164.43, batch-reuse:1
@ 2732 train 3.9461 , allloss: 3.9461, dt: 699.86ms, fracRes: 0.3420, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1093, norm(y): 0.9914, norm:0.3959, tok/sec: 187283.27, flops:164.03, batch-reuse:1
@ 2733 train 4.0130 , allloss: 4.0130, dt: 705.12ms, fracRes: 0.3391, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1057, norm(y): 0.9918, norm:0.3911, tok/sec: 185886.26, flops:162.81, batch-reuse:1
@ 2734 train 3.8812 , allloss: 3.8812, dt: 699.13ms, fracRes: 0.3453, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1095, norm(y): 0.9913, norm:0.3744, tok/sec: 187478.58, flops:164.20, batch-reuse:1
@ 2735 train 3.9960 , allloss: 3.9960, dt: 708.22ms, fracRes: 0.3506, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1132, norm(y): 0.9913, norm:0.3618, tok/sec: 185072.18, flops:162.10, batch-reuse:1
@ 2736 train 3.9996 , allloss: 3.9996, dt: 708.04ms, fracRes: 0.3526, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1133, norm(y): 0.9912, norm:0.4353, tok/sec: 185119.67, flops:162.14, batch-reuse:1
@ 2737 train 4.0168 , allloss: 4.0168, dt: 705.26ms, fracRes: 0.3470, norm(attn): 0.4375, norm(output): 0.9414, norm(x): 1.1117, norm(y): 0.9915, norm:0.4449, tok/sec: 185848.11, flops:162.78, batch-reuse:1
@ 2738 train 3.8446 , allloss: 3.8446, dt: 707.57ms, fracRes: 0.3520, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1199, norm(y): 0.9912, norm:0.5568, tok/sec: 185242.43, flops:162.25, batch-reuse:1
@ 2739 train 3.9469 , allloss: 3.9469, dt: 680.10ms, fracRes: 0.3452, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1066, norm(y): 0.9912, norm:0.4754, tok/sec: 192724.00, flops:168.80, batch-reuse:1
@ 2740 train 3.7971 , allloss: 3.7971, dt: 699.18ms, fracRes: 0.3437, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1066, norm(y): 0.9911, norm:0.3896, tok/sec: 187464.71, flops:164.19, batch-reuse:1
@ 2741 train 3.9030 , allloss: 3.9030, dt: 692.07ms, fracRes: 0.3409, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1075, norm(y): 0.9913, norm:0.4073, tok/sec: 189391.90, flops:165.88, batch-reuse:1
@ 2742 train 3.8700 , allloss: 3.8700, dt: 694.14ms, fracRes: 0.3458, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1116, norm(y): 0.9913, norm:0.4134, tok/sec: 188827.32, flops:165.39, batch-reuse:1
@ 2743 train 3.8474 , allloss: 3.8474, dt: 696.66ms, fracRes: 0.3432, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1089, norm(y): 0.9913, norm:0.3692, tok/sec: 188143.16, flops:164.79, batch-reuse:1
@ 2744 train 3.8476 , allloss: 3.8476, dt: 677.56ms, fracRes: 0.3461, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1104, norm(y): 0.9913, norm:0.4223, tok/sec: 193448.07, flops:169.43, batch-reuse:1
@ 2745 train 3.8058 , allloss: 3.8058, dt: 693.39ms, fracRes: 0.3458, norm(attn): 0.4434, norm(output): 0.9492, norm(x): 1.1143, norm(y): 0.9914, norm:0.3698, tok/sec: 189029.37, flops:165.56, batch-reuse:1
@ 2746 train 3.8013 , allloss: 3.8013, dt: 695.13ms, fracRes: 0.3404, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1075, norm(y): 0.9915, norm:0.3661, tok/sec: 188556.99, flops:165.15, batch-reuse:1
@ 2747 train 3.8522 , allloss: 3.8522, dt: 694.91ms, fracRes: 0.3456, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1108, norm(y): 0.9913, norm:0.3864, tok/sec: 188617.80, flops:165.20, batch-reuse:1
@ 2748 train 3.9517 , allloss: 3.9517, dt: 696.84ms, fracRes: 0.3458, norm(attn): 0.4395, norm(output): 0.9375, norm(x): 1.1057, norm(y): 0.9916, norm:0.4004, tok/sec: 188094.04, flops:164.74, batch-reuse:1
@ 2749 train 3.8789 , allloss: 3.8789, dt: 693.70ms, fracRes: 0.3418, norm(attn): 0.4414, norm(output): 0.9375, norm(x): 1.1017, norm(y): 0.9914, norm:0.3605, tok/sec: 188946.73, flops:165.49, batch-reuse:1
@ 2750 train 3.8242 , allloss: 3.8242, dt: 684.65ms, fracRes: 0.3476, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1197, norm(y): 0.9914, norm:0.4144, tok/sec: 191445.15, flops:167.68, batch-reuse:1
@ 2751 train 3.9271 , allloss: 3.9271, dt: 692.03ms, fracRes: 0.3389, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1059, norm(y): 0.9915, norm:0.3931, tok/sec: 189401.49, flops:165.89, batch-reuse:1
@ 2752 train 3.8804 , allloss: 3.8804, dt: 685.61ms, fracRes: 0.3455, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1106, norm(y): 0.9912, norm:0.3725, tok/sec: 191175.86, flops:167.44, batch-reuse:1
@ 2753 train 3.8776 , allloss: 3.8776, dt: 689.71ms, fracRes: 0.3494, norm(attn): 0.4395, norm(output): 0.9453, norm(x): 1.1133, norm(y): 0.9911, norm:0.3715, tok/sec: 190038.14, flops:166.45, batch-reuse:1
@ 2754 train 3.8500 , allloss: 3.8500, dt: 690.57ms, fracRes: 0.3481, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1095, norm(y): 0.9909, norm:0.3741, tok/sec: 189802.99, flops:166.24, batch-reuse:1
@ 2755 train 3.8699 , allloss: 3.8699, dt: 679.36ms, fracRes: 0.3469, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1100, norm(y): 0.9913, norm:0.3809, tok/sec: 192934.62, flops:168.98, batch-reuse:1
@ 2756 train 3.8164 , allloss: 3.8164, dt: 694.19ms, fracRes: 0.3441, norm(attn): 0.4492, norm(output): 0.9414, norm(x): 1.1120, norm(y): 0.9916, norm:0.4206, tok/sec: 188813.24, flops:165.37, batch-reuse:1
@ 2757 train 3.8898 , allloss: 3.8898, dt: 688.02ms, fracRes: 0.3468, norm(attn): 0.4453, norm(output): 0.9375, norm(x): 1.1116, norm(y): 0.9916, norm:0.3760, tok/sec: 190505.17, flops:166.86, batch-reuse:1
@ 2758 train 3.8922 , allloss: 3.8922, dt: 697.26ms, fracRes: 0.3481, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1089, norm(y): 0.9914, norm:0.3618, tok/sec: 187982.45, flops:164.65, batch-reuse:1
@ 2759 train 3.8644 , allloss: 3.8644, dt: 686.28ms, fracRes: 0.3511, norm(attn): 0.4434, norm(output): 0.9375, norm(x): 1.1112, norm(y): 0.9914, norm:0.3933, tok/sec: 190990.09, flops:167.28, batch-reuse:1
@ 2760 train 3.7982 , allloss: 3.7982, dt: 686.88ms, fracRes: 0.3445, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1104, norm(y): 0.9915, norm:0.3587, tok/sec: 190821.91, flops:167.13, batch-reuse:1
@ 2761 train 3.9554 , allloss: 3.9554, dt: 702.33ms, fracRes: 0.3407, norm(attn): 0.4473, norm(output): 0.9375, norm(x): 1.1098, norm(y): 0.9917, norm:0.3870, tok/sec: 186623.98, flops:163.46, batch-reuse:1
@ 2762 train 3.9107 , allloss: 3.9107, dt: 701.58ms, fracRes: 0.3443, norm(attn): 0.4453, norm(output): 0.9414, norm(x): 1.1151, norm(y): 0.9917, norm:0.3843, tok/sec: 186823.06, flops:163.63, batch-reuse:1
@ 2763 train 3.8467 , allloss: 3.8467, dt: 702.88ms, fracRes: 0.3515, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1212, norm(y): 0.9913, norm:0.3958, tok/sec: 186477.37, flops:163.33, batch-reuse:1
@ 2764 train 3.8609 , allloss: 3.8609, dt: 700.89ms, fracRes: 0.3473, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1122, norm(y): 0.9914, norm:0.4011, tok/sec: 187008.12, flops:163.79, batch-reuse:1
@ 2765 train 3.8937 , allloss: 3.8937, dt: 700.35ms, fracRes: 0.3473, norm(attn): 0.4453, norm(output): 0.9414, norm(x): 1.1122, norm(y): 0.9914, norm:0.3987, tok/sec: 187151.36, flops:163.92, batch-reuse:1
@ 2766 train 3.8887 , allloss: 3.8887, dt: 688.62ms, fracRes: 0.3472, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1172, norm(y): 0.9915, norm:0.3674, tok/sec: 190341.00, flops:166.71, batch-reuse:1
@ 2767 train 3.8780 , allloss: 3.8780, dt: 692.56ms, fracRes: 0.3448, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1174, norm(y): 0.9916, norm:0.3474, tok/sec: 189257.78, flops:165.76, batch-reuse:1
@ 2768 train 3.8660 , allloss: 3.8660, dt: 697.82ms, fracRes: 0.3422, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1137, norm(y): 0.9916, norm:0.3352, tok/sec: 187829.53, flops:164.51, batch-reuse:1
@ 2769 train 3.8777 , allloss: 3.8777, dt: 698.30ms, fracRes: 0.3440, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1198, norm(y): 0.9916, norm:0.3538, tok/sec: 187700.82, flops:164.40, batch-reuse:1
@ 2770 train 3.8757 , allloss: 3.8757, dt: 687.64ms, fracRes: 0.3439, norm(attn): 0.4512, norm(output): 0.9453, norm(x): 1.1182, norm(y): 0.9919, norm:0.3763, tok/sec: 190610.65, flops:166.95, batch-reuse:1
@ 2771 train 3.9773 , allloss: 3.9773, dt: 694.32ms, fracRes: 0.3449, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1230, norm(y): 0.9921, norm:0.3592, tok/sec: 188777.26, flops:165.34, batch-reuse:1
@ 2772 train 3.8251 , allloss: 3.8251, dt: 697.56ms, fracRes: 0.3482, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1157, norm(y): 0.9916, norm:0.3742, tok/sec: 187901.31, flops:164.57, batch-reuse:1
@ 2773 train 3.8208 , allloss: 3.8208, dt: 695.98ms, fracRes: 0.3611, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1209, norm(y): 0.9910, norm:0.3912, tok/sec: 188326.52, flops:164.95, batch-reuse:1
@ 2774 train 3.7815 , allloss: 3.7815, dt: 689.99ms, fracRes: 0.3646, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1256, norm(y): 0.9910, norm:0.3816, tok/sec: 189960.85, flops:166.38, batch-reuse:1
@ 2775 train 3.8967 , allloss: 3.8967, dt: 698.03ms, fracRes: 0.3533, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1168, norm(y): 0.9913, norm:0.3868, tok/sec: 187773.46, flops:164.46, batch-reuse:1
@ 2776 train 4.0096 , allloss: 4.0096, dt: 699.65ms, fracRes: 0.3539, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1220, norm(y): 0.9915, norm:0.4396, tok/sec: 187340.07, flops:164.08, batch-reuse:1
@ 2777 train 3.8363 , allloss: 3.8363, dt: 696.76ms, fracRes: 0.3514, norm(attn): 0.4492, norm(output): 0.9414, norm(x): 1.1185, norm(y): 0.9915, norm:0.4175, tok/sec: 188115.67, flops:164.76, batch-reuse:1
@ 2778 train 3.9891 , allloss: 3.9891, dt: 696.07ms, fracRes: 0.3511, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1246, norm(y): 0.9916, norm:0.4226, tok/sec: 188302.53, flops:164.93, batch-reuse:1
@ 2779 train 3.8317 , allloss: 3.8317, dt: 696.43ms, fracRes: 0.3461, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1170, norm(y): 0.9913, norm:0.3825, tok/sec: 188204.28, flops:164.84, batch-reuse:1
@ 2780 train 3.7286 , allloss: 3.7286, dt: 689.76ms, fracRes: 0.3428, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1089, norm(y): 0.9912, norm:0.3955, tok/sec: 190026.12, flops:166.44, batch-reuse:1
@ 2781 train 3.7339 , allloss: 3.7339, dt: 689.59ms, fracRes: 0.3477, norm(attn): 0.4473, norm(output): 0.9414, norm(x): 1.1096, norm(y): 0.9915, norm:0.3759, tok/sec: 190071.12, flops:166.47, batch-reuse:1
@ 2782 train 3.8419 , allloss: 3.8419, dt: 686.10ms, fracRes: 0.3572, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1196, norm(y): 0.9914, norm:0.4084, tok/sec: 191040.20, flops:167.32, batch-reuse:1
@ 2783 train 3.9047 , allloss: 3.9047, dt: 695.38ms, fracRes: 0.3495, norm(attn): 0.4473, norm(output): 0.9414, norm(x): 1.1102, norm(y): 0.9919, norm:0.4875, tok/sec: 188490.79, flops:165.09, batch-reuse:1
@ 2784 train 3.9107 , allloss: 3.9107, dt: 687.49ms, fracRes: 0.3429, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1152, norm(y): 0.9922, norm:0.4483, tok/sec: 190651.90, flops:166.98, batch-reuse:1
@ 2785 train 4.0214 , allloss: 4.0214, dt: 680.49ms, fracRes: 0.3448, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1184, norm(y): 0.9921, norm:0.4472, tok/sec: 192614.55, flops:168.70, batch-reuse:1
@ 2786 train 3.9260 , allloss: 3.9260, dt: 695.23ms, fracRes: 0.3489, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1237, norm(y): 0.9920, norm:0.4001, tok/sec: 188530.67, flops:165.13, batch-reuse:1
@ 2787 train 4.0026 , allloss: 4.0026, dt: 683.54ms, fracRes: 0.3501, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1244, norm(y): 0.9919, norm:0.4347, tok/sec: 191753.39, flops:167.95, batch-reuse:1
@ 2788 train 4.0160 , allloss: 4.0160, dt: 689.84ms, fracRes: 0.3513, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1191, norm(y): 0.9918, norm:0.3685, tok/sec: 190002.21, flops:166.41, batch-reuse:1
@ 2789 train 4.0274 , allloss: 4.0274, dt: 686.02ms, fracRes: 0.3521, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1199, norm(y): 0.9917, norm:0.4409, tok/sec: 191062.38, flops:167.34, batch-reuse:1
@ 2790 train 4.0497 , allloss: 4.0497, dt: 694.57ms, fracRes: 0.3539, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1253, norm(y): 0.9916, norm:0.4193, tok/sec: 188710.90, flops:165.28, batch-reuse:1
@ 2791 train 3.9886 , allloss: 3.9886, dt: 695.42ms, fracRes: 0.3475, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1185, norm(y): 0.9918, norm:0.3951, tok/sec: 188478.64, flops:165.08, batch-reuse:1
@ 2792 train 4.6576 , allloss: 4.6576, dt: 697.87ms, fracRes: 0.3518, norm(attn): 0.4375, norm(output): 0.9531, norm(x): 1.1310, norm(y): 0.9922, norm:0.5755, tok/sec: 187817.72, flops:164.50, batch-reuse:1
@ 2793 train 4.0509 , allloss: 4.0509, dt: 696.83ms, fracRes: 0.3579, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1289, norm(y): 0.9918, norm:0.5327, tok/sec: 188097.45, flops:164.75, batch-reuse:1
@ 2794 train 3.9737 , allloss: 3.9737, dt: 690.70ms, fracRes: 0.3572, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1267, norm(y): 0.9916, norm:0.4153, tok/sec: 189768.13, flops:166.21, batch-reuse:1
@ 2795 train 3.9811 , allloss: 3.9811, dt: 696.28ms, fracRes: 0.3536, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1234, norm(y): 0.9916, norm:0.4031, tok/sec: 188244.95, flops:164.88, batch-reuse:1
@ 2796 train 4.1022 , allloss: 4.1022, dt: 704.99ms, fracRes: 0.3420, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1140, norm(y): 0.9918, norm:0.4279, tok/sec: 185920.96, flops:162.84, batch-reuse:1
@ 2797 train 3.9726 , allloss: 3.9726, dt: 708.66ms, fracRes: 0.3438, norm(attn): 0.4395, norm(output): 0.9414, norm(x): 1.1153, norm(y): 0.9919, norm:0.4010, tok/sec: 184958.67, flops:162.00, batch-reuse:1
@ 2798 train 3.9984 , allloss: 3.9984, dt: 705.54ms, fracRes: 0.3436, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1215, norm(y): 0.9922, norm:0.3764, tok/sec: 185776.08, flops:162.71, batch-reuse:1
@ 2799 train 3.9761 , allloss: 3.9761, dt: 710.20ms, fracRes: 0.3444, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1275, norm(y): 0.9922, norm:0.3998, tok/sec: 184555.33, flops:161.64, batch-reuse:1
@ 2800 train 4.1829 , allloss: 4.1829, dt: 689.43ms, fracRes: 0.3465, norm(attn): 0.4434, norm(output): 0.9570, norm(x): 1.1279, norm(y): 0.9921, norm:0.5043, tok/sec: 190116.34, flops:166.51, batch-reuse:1
@ 2801 train 4.0289 , allloss: 4.0289, dt: 698.88ms, fracRes: 0.3521, norm(attn): 0.4473, norm(output): 0.9492, norm(x): 1.1284, norm(y): 0.9915, norm:1.0326, tok/sec: 187544.84, flops:164.26, batch-reuse:1
@ 2802 train 4.0278 , allloss: 4.0278, dt: 702.55ms, fracRes: 0.3546, norm(attn): 0.4414, norm(output): 0.9453, norm(x): 1.1250, norm(y): 0.9914, norm:0.4474, tok/sec: 186566.29, flops:163.41, batch-reuse:1
@ 2803 train 3.9838 , allloss: 3.9838, dt: 692.96ms, fracRes: 0.3555, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1280, norm(y): 0.9916, norm:0.4305, tok/sec: 189149.10, flops:165.67, batch-reuse:1
@ 2804 train 4.0517 , allloss: 4.0517, dt: 676.18ms, fracRes: 0.3519, norm(attn): 0.4434, norm(output): 0.9609, norm(x): 1.1288, norm(y): 0.9918, norm:0.5386, tok/sec: 193841.64, flops:169.78, batch-reuse:1
@ 2805 train 3.8831 , allloss: 3.8831, dt: 699.81ms, fracRes: 0.3542, norm(attn): 0.4531, norm(output): 0.9453, norm(x): 1.1260, norm(y): 0.9920, norm:0.6021, tok/sec: 187295.33, flops:164.04, batch-reuse:1
@ 2806 train 3.9118 , allloss: 3.9118, dt: 683.30ms, fracRes: 0.3579, norm(attn): 0.4473, norm(output): 0.9453, norm(x): 1.1269, norm(y): 0.9920, norm:0.5391, tok/sec: 191822.44, flops:168.01, batch-reuse:1
@ 2807 train 4.2198 , allloss: 4.2198, dt: 691.84ms, fracRes: 0.3571, norm(attn): 0.4395, norm(output): 0.9453, norm(x): 1.1288, norm(y): 0.9917, norm:0.4356, tok/sec: 189454.23, flops:165.93, batch-reuse:1
@ 2808 train 3.9967 , allloss: 3.9967, dt: 690.92ms, fracRes: 0.3515, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1274, norm(y): 0.9916, norm:0.5072, tok/sec: 189707.43, flops:166.16, batch-reuse:1
@ 2809 train 3.9530 , allloss: 3.9530, dt: 694.72ms, fracRes: 0.3507, norm(attn): 0.4434, norm(output): 0.9531, norm(x): 1.1262, norm(y): 0.9919, norm:0.4466, tok/sec: 188668.16, flops:165.25, batch-reuse:1
@ 2810 train 3.9650 , allloss: 3.9650, dt: 701.19ms, fracRes: 0.3560, norm(attn): 0.4434, norm(output): 0.9414, norm(x): 1.1276, norm(y): 0.9920, norm:0.4512, tok/sec: 186928.96, flops:163.72, batch-reuse:1
@ 2811 train 4.0403 , allloss: 4.0403, dt: 689.38ms, fracRes: 0.3592, norm(attn): 0.4395, norm(output): 0.9453, norm(x): 1.1259, norm(y): 0.9919, norm:0.4757, tok/sec: 190130.22, flops:166.53, batch-reuse:1
@ 2812 train 4.0278 , allloss: 4.0278, dt: 700.46ms, fracRes: 0.3574, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1315, norm(y): 0.9921, norm:0.3963, tok/sec: 187123.27, flops:163.89, batch-reuse:1
@ 2813 train 4.0464 , allloss: 4.0464, dt: 696.75ms, fracRes: 0.3600, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1342, norm(y): 0.9923, norm:0.4652, tok/sec: 188118.50, flops:164.76, batch-reuse:1
@ 2814 train 4.0093 , allloss: 4.0093, dt: 700.33ms, fracRes: 0.3578, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1309, norm(y): 0.9923, norm:0.4162, tok/sec: 187156.46, flops:163.92, batch-reuse:1
@ 2815 train 4.0507 , allloss: 4.0507, dt: 705.68ms, fracRes: 0.3622, norm(attn): 0.4414, norm(output): 0.9531, norm(x): 1.1334, norm(y): 0.9921, norm:0.4952, tok/sec: 185738.86, flops:162.68, batch-reuse:1
@ 2816 train 3.9623 , allloss: 3.9623, dt: 692.17ms, fracRes: 0.3624, norm(attn): 0.4414, norm(output): 0.9531, norm(x): 1.1371, norm(y): 0.9917, norm:0.4212, tok/sec: 189363.98, flops:165.86, batch-reuse:1
@ 2817 train 4.0681 , allloss: 4.0681, dt: 686.78ms, fracRes: 0.3566, norm(attn): 0.4434, norm(output): 0.9492, norm(x): 1.1333, norm(y): 0.9920, norm:0.4362, tok/sec: 190851.39, flops:167.16, batch-reuse:1
@ 2818 train 4.0115 , allloss: 4.0115, dt: 692.83ms, fracRes: 0.3557, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1330, norm(y): 0.9919, norm:0.3848, tok/sec: 189183.21, flops:165.70, batch-reuse:1
@ 2819 train 4.0183 , allloss: 4.0183, dt: 681.43ms, fracRes: 0.3557, norm(attn): 0.4512, norm(output): 0.9492, norm(x): 1.1299, norm(y): 0.9919, norm:0.3845, tok/sec: 192349.42, flops:168.47, batch-reuse:1
@ 2820 train 3.9995 , allloss: 3.9995, dt: 696.10ms, fracRes: 0.3533, norm(attn): 0.4570, norm(output): 0.9453, norm(x): 1.1260, norm(y): 0.9921, norm:0.4145, tok/sec: 188294.79, flops:164.92, batch-reuse:1
@ 2821 train 3.9489 , allloss: 3.9489, dt: 700.62ms, fracRes: 0.3476, norm(attn): 0.4590, norm(output): 0.9492, norm(x): 1.1218, norm(y): 0.9921, norm:0.4075, tok/sec: 187080.35, flops:163.86, batch-reuse:1
@ 2822 train 3.9592 , allloss: 3.9592, dt: 701.80ms, fracRes: 0.3445, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1220, norm(y): 0.9922, norm:0.3752, tok/sec: 186765.05, flops:163.58, batch-reuse:1
@ 2823 train 4.0117 , allloss: 4.0117, dt: 683.06ms, fracRes: 0.3508, norm(attn): 0.4473, norm(output): 0.9492, norm(x): 1.1297, norm(y): 0.9921, norm:0.3865, tok/sec: 191888.59, flops:168.07, batch-reuse:1
@ 2824 train 3.9315 , allloss: 3.9315, dt: 690.57ms, fracRes: 0.3570, norm(attn): 0.4531, norm(output): 0.9492, norm(x): 1.1316, norm(y): 0.9917, norm:0.3783, tok/sec: 189802.53, flops:166.24, batch-reuse:1
@ 2825 train 3.9862 , allloss: 3.9862, dt: 698.79ms, fracRes: 0.3593, norm(attn): 0.4551, norm(output): 0.9492, norm(x): 1.1317, norm(y): 0.9916, norm:0.3864, tok/sec: 187569.35, flops:164.28, batch-reuse:1
@ 2826 train 4.0257 , allloss: 4.0257, dt: 688.35ms, fracRes: 0.3560, norm(attn): 0.4453, norm(output): 0.9570, norm(x): 1.1363, norm(y): 0.9917, norm:0.3805, tok/sec: 190415.89, flops:166.78, batch-reuse:1
@ 2827 train 4.0466 , allloss: 4.0466, dt: 700.47ms, fracRes: 0.3533, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1343, norm(y): 0.9919, norm:0.3758, tok/sec: 187119.07, flops:163.89, batch-reuse:1
@ 2828 train 4.0082 , allloss: 4.0082, dt: 703.71ms, fracRes: 0.3518, norm(attn): 0.4590, norm(output): 0.9648, norm(x): 1.1338, norm(y): 0.9919, norm:0.3995, tok/sec: 186259.85, flops:163.14, batch-reuse:1
@ 2829 train 3.9982 , allloss: 3.9982, dt: 690.72ms, fracRes: 0.3555, norm(attn): 0.4512, norm(output): 0.9492, norm(x): 1.1299, norm(y): 0.9922, norm:0.3600, tok/sec: 189761.98, flops:166.20, batch-reuse:1
@ 2830 train 4.0216 , allloss: 4.0216, dt: 696.66ms, fracRes: 0.3601, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1372, norm(y): 0.9920, norm:0.4556, tok/sec: 188143.03, flops:164.79, batch-reuse:1
@ 2831 train 4.0428 , allloss: 4.0428, dt: 690.84ms, fracRes: 0.3529, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1289, norm(y): 0.9924, norm:0.3733, tok/sec: 189728.58, flops:166.17, batch-reuse:1
@ 2832 train 3.9534 , allloss: 3.9534, dt: 696.49ms, fracRes: 0.3502, norm(attn): 0.4551, norm(output): 0.9531, norm(x): 1.1242, norm(y): 0.9922, norm:0.3560, tok/sec: 188190.17, flops:164.83, batch-reuse:1
@ 2833 train 4.0265 , allloss: 4.0265, dt: 693.38ms, fracRes: 0.3564, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1311, norm(y): 0.9922, norm:0.3800, tok/sec: 189033.59, flops:165.57, batch-reuse:1
@ 2834 train 4.0472 , allloss: 4.0472, dt: 703.76ms, fracRes: 0.3614, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1346, norm(y): 0.9921, norm:0.3588, tok/sec: 186245.34, flops:163.12, batch-reuse:1
@ 2835 train 4.0203 , allloss: 4.0203, dt: 702.24ms, fracRes: 0.3668, norm(attn): 0.4414, norm(output): 0.9609, norm(x): 1.1417, norm(y): 0.9918, norm:0.4423, tok/sec: 186647.30, flops:163.48, batch-reuse:1
@ 2836 train 4.0031 , allloss: 4.0031, dt: 703.78ms, fracRes: 0.3552, norm(attn): 0.4414, norm(output): 0.9531, norm(x): 1.1284, norm(y): 0.9919, norm:0.4200, tok/sec: 186238.90, flops:163.12, batch-reuse:1
@ 2837 train 4.0940 , allloss: 4.0940, dt: 682.76ms, fracRes: 0.3483, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1252, norm(y): 0.9922, norm:0.4097, tok/sec: 191974.76, flops:168.14, batch-reuse:1
@ 2838 train 4.2053 , allloss: 4.2053, dt: 691.46ms, fracRes: 0.3479, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1259, norm(y): 0.9925, norm:0.4024, tok/sec: 189559.34, flops:166.03, batch-reuse:1
@ 2839 train 3.9541 , allloss: 3.9541, dt: 694.88ms, fracRes: 0.3517, norm(attn): 0.4492, norm(output): 0.9570, norm(x): 1.1314, norm(y): 0.9923, norm:0.4270, tok/sec: 188626.21, flops:165.21, batch-reuse:1
@ 2840 train 4.0027 , allloss: 4.0027, dt: 688.43ms, fracRes: 0.3530, norm(attn): 0.4434, norm(output): 0.9492, norm(x): 1.1308, norm(y): 0.9922, norm:0.4020, tok/sec: 190391.82, flops:166.76, batch-reuse:1
@ 2841 train 3.9938 , allloss: 3.9938, dt: 693.54ms, fracRes: 0.3510, norm(attn): 0.4492, norm(output): 0.9453, norm(x): 1.1254, norm(y): 0.9923, norm:0.3783, tok/sec: 188988.75, flops:165.53, batch-reuse:1
@ 2842 train 4.0267 , allloss: 4.0267, dt: 695.96ms, fracRes: 0.3470, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1244, norm(y): 0.9925, norm:0.3813, tok/sec: 188333.10, flops:164.95, batch-reuse:1
@ 2843 train 3.9570 , allloss: 3.9570, dt: 697.68ms, fracRes: 0.3497, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1211, norm(y): 0.9923, norm:0.3827, tok/sec: 187869.01, flops:164.55, batch-reuse:1
@ 2844 train 3.9383 , allloss: 3.9383, dt: 703.22ms, fracRes: 0.3512, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1265, norm(y): 0.9924, norm:0.3839, tok/sec: 186387.60, flops:163.25, batch-reuse:1
@ 2845 train 3.9744 , allloss: 3.9744, dt: 704.32ms, fracRes: 0.3524, norm(attn): 0.4434, norm(output): 0.9492, norm(x): 1.1266, norm(y): 0.9923, norm:0.3795, tok/sec: 186097.43, flops:162.99, batch-reuse:1
@ 2846 train 4.0127 , allloss: 4.0127, dt: 703.05ms, fracRes: 0.3555, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1249, norm(y): 0.9923, norm:0.3779, tok/sec: 186433.68, flops:163.29, batch-reuse:1
@ 2847 train 4.0012 , allloss: 4.0012, dt: 702.52ms, fracRes: 0.3543, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1263, norm(y): 0.9922, norm:0.3965, tok/sec: 186574.84, flops:163.41, batch-reuse:1
@ 2848 train 4.0384 , allloss: 4.0384, dt: 701.28ms, fracRes: 0.3515, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1239, norm(y): 0.9923, norm:0.3329, tok/sec: 186903.22, flops:163.70, batch-reuse:1
@ 2849 train 4.0010 , allloss: 4.0010, dt: 705.71ms, fracRes: 0.3549, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1315, norm(y): 0.9923, norm:0.3610, tok/sec: 185729.88, flops:162.67, batch-reuse:1
@ 2850 train 3.9270 , allloss: 3.9270, dt: 702.97ms, fracRes: 0.3570, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1278, norm(y): 0.9919, norm:0.3867, tok/sec: 186454.92, flops:163.31, batch-reuse:1
@ 2851 train 3.9230 , allloss: 3.9230, dt: 698.40ms, fracRes: 0.3608, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1330, norm(y): 0.9920, norm:0.3714, tok/sec: 187675.64, flops:164.38, batch-reuse:1
@ 2852 train 3.9329 , allloss: 3.9329, dt: 697.47ms, fracRes: 0.3528, norm(attn): 0.4473, norm(output): 0.9492, norm(x): 1.1222, norm(y): 0.9920, norm:0.3814, tok/sec: 187923.98, flops:164.59, batch-reuse:1
@ 2853 train 3.9752 , allloss: 3.9752, dt: 702.12ms, fracRes: 0.3515, norm(attn): 0.4414, norm(output): 0.9531, norm(x): 1.1243, norm(y): 0.9922, norm:0.4092, tok/sec: 186679.43, flops:163.50, batch-reuse:1
@ 2854 train 3.9608 , allloss: 3.9608, dt: 700.27ms, fracRes: 0.3641, norm(attn): 0.4453, norm(output): 0.9648, norm(x): 1.1476, norm(y): 0.9918, norm:0.4435, tok/sec: 187174.43, flops:163.94, batch-reuse:1
@ 2855 train 3.9562 , allloss: 3.9562, dt: 703.57ms, fracRes: 0.3535, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1273, norm(y): 0.9919, norm:0.4188, tok/sec: 186295.26, flops:163.17, batch-reuse:1
@ 2856 train 3.9747 , allloss: 3.9747, dt: 703.64ms, fracRes: 0.3540, norm(attn): 0.4473, norm(output): 0.9453, norm(x): 1.1267, norm(y): 0.9922, norm:0.3946, tok/sec: 186276.70, flops:163.15, batch-reuse:1
@ 2857 train 3.9186 , allloss: 3.9186, dt: 702.40ms, fracRes: 0.3568, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1268, norm(y): 0.9921, norm:0.3835, tok/sec: 186606.25, flops:163.44, batch-reuse:1
@ 2858 train 3.9035 , allloss: 3.9035, dt: 699.38ms, fracRes: 0.3587, norm(attn): 0.4395, norm(output): 0.9492, norm(x): 1.1267, norm(y): 0.9917, norm:0.3501, tok/sec: 187411.79, flops:164.15, batch-reuse:1
@ 2859 train 3.8961 , allloss: 3.8961, dt: 703.52ms, fracRes: 0.3473, norm(attn): 0.4609, norm(output): 0.9414, norm(x): 1.1143, norm(y): 0.9921, norm:0.8228, tok/sec: 186309.65, flops:163.18, batch-reuse:1
@ 2860 train 4.0315 , allloss: 4.0315, dt: 697.33ms, fracRes: 0.3562, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1326, norm(y): 0.9923, norm:0.5721, tok/sec: 187962.72, flops:164.63, batch-reuse:1
@ 2861 train 4.1954 , allloss: 4.1954, dt: 693.98ms, fracRes: 0.3598, norm(attn): 0.4434, norm(output): 0.9492, norm(x): 1.1320, norm(y): 0.9925, norm:0.5338, tok/sec: 188871.11, flops:165.42, batch-reuse:1
@ 2862 train 4.0709 , allloss: 4.0709, dt: 706.69ms, fracRes: 0.3542, norm(attn): 0.4414, norm(output): 0.9414, norm(x): 1.1240, norm(y): 0.9920, norm:0.6173, tok/sec: 185471.85, flops:162.45, batch-reuse:1
@ 2863 train 4.0701 , allloss: 4.0701, dt: 693.12ms, fracRes: 0.3488, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1247, norm(y): 0.9920, norm:0.5501, tok/sec: 189104.73, flops:165.63, batch-reuse:1
@ 2864 train 3.8961 , allloss: 3.8961, dt: 697.39ms, fracRes: 0.3526, norm(attn): 0.4531, norm(output): 0.9492, norm(x): 1.1288, norm(y): 0.9922, norm:0.4542, tok/sec: 187946.34, flops:164.61, batch-reuse:1
@ 2865 train 4.0012 , allloss: 4.0012, dt: 691.43ms, fracRes: 0.3584, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1386, norm(y): 0.9924, norm:0.5374, tok/sec: 189567.90, flops:166.03, batch-reuse:1
@ 2866 train 4.0611 , allloss: 4.0611, dt: 706.12ms, fracRes: 0.3622, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1343, norm(y): 0.9920, norm:0.4074, tok/sec: 185622.15, flops:162.58, batch-reuse:1
@ 2867 train 4.0330 , allloss: 4.0330, dt: 693.95ms, fracRes: 0.3603, norm(attn): 0.4395, norm(output): 0.9531, norm(x): 1.1335, norm(y): 0.9920, norm:0.4872, tok/sec: 188877.27, flops:165.43, batch-reuse:1
@ 2868 train 4.0948 , allloss: 4.0948, dt: 711.10ms, fracRes: 0.3561, norm(attn): 0.4414, norm(output): 0.9531, norm(x): 1.1349, norm(y): 0.9923, norm:0.4503, tok/sec: 184324.03, flops:161.44, batch-reuse:1
@ 2869 train 3.9451 , allloss: 3.9451, dt: 711.27ms, fracRes: 0.3614, norm(attn): 0.4473, norm(output): 0.9609, norm(x): 1.1396, norm(y): 0.9921, norm:0.4487, tok/sec: 184278.86, flops:161.40, batch-reuse:1
@ 2870 train 4.0641 , allloss: 4.0641, dt: 704.16ms, fracRes: 0.3573, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1316, norm(y): 0.9922, norm:0.3790, tok/sec: 186140.09, flops:163.03, batch-reuse:1
@ 2871 train 3.9255 , allloss: 3.9255, dt: 707.18ms, fracRes: 0.3598, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1359, norm(y): 0.9921, norm:0.3883, tok/sec: 185344.29, flops:162.33, batch-reuse:1
@ 2872 train 4.0268 , allloss: 4.0268, dt: 702.87ms, fracRes: 0.3566, norm(attn): 0.4590, norm(output): 0.9531, norm(x): 1.1356, norm(y): 0.9924, norm:0.4196, tok/sec: 186481.49, flops:163.33, batch-reuse:1
@ 2873 train 4.0383 , allloss: 4.0383, dt: 700.29ms, fracRes: 0.3613, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1433, norm(y): 0.9925, norm:0.5091, tok/sec: 187168.88, flops:163.93, batch-reuse:1
@ 2874 train 3.9688 , allloss: 3.9688, dt: 677.18ms, fracRes: 0.3571, norm(attn): 0.4551, norm(output): 0.9570, norm(x): 1.1367, norm(y): 0.9925, norm:0.4237, tok/sec: 193554.32, flops:169.53, batch-reuse:1
@ 2875 train 4.1386 , allloss: 4.1386, dt: 700.41ms, fracRes: 0.3568, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1359, norm(y): 0.9926, norm:0.3812, tok/sec: 187136.77, flops:163.90, batch-reuse:1
@ 2876 train 3.9894 , allloss: 3.9894, dt: 691.51ms, fracRes: 0.3538, norm(attn): 0.4453, norm(output): 0.9570, norm(x): 1.1346, norm(y): 0.9922, norm:0.3994, tok/sec: 189544.76, flops:166.01, batch-reuse:1
@ 2877 train 4.0608 , allloss: 4.0608, dt: 695.85ms, fracRes: 0.3564, norm(attn): 0.4473, norm(output): 0.9609, norm(x): 1.1375, norm(y): 0.9924, norm:0.4048, tok/sec: 188363.43, flops:164.98, batch-reuse:1
@ 2878 train 4.0025 , allloss: 4.0025, dt: 696.89ms, fracRes: 0.3612, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1338, norm(y): 0.9921, norm:0.4144, tok/sec: 188080.85, flops:164.73, batch-reuse:1
@ 2879 train 3.9525 , allloss: 3.9525, dt: 704.58ms, fracRes: 0.3613, norm(attn): 0.4512, norm(output): 0.9453, norm(x): 1.1341, norm(y): 0.9922, norm:0.3950, tok/sec: 186028.60, flops:162.93, batch-reuse:1
@ 2880 train 3.9930 , allloss: 3.9930, dt: 694.99ms, fracRes: 0.3563, norm(attn): 0.4434, norm(output): 0.9531, norm(x): 1.1315, norm(y): 0.9923, norm:0.3836, tok/sec: 188595.09, flops:165.18, batch-reuse:1
@ 2881 train 3.9884 , allloss: 3.9884, dt: 691.96ms, fracRes: 0.3589, norm(attn): 0.4414, norm(output): 0.9492, norm(x): 1.1311, norm(y): 0.9921, norm:0.3733, tok/sec: 189420.61, flops:165.91, batch-reuse:1
@ 2882 train 3.9719 , allloss: 3.9719, dt: 686.57ms, fracRes: 0.3604, norm(attn): 0.4434, norm(output): 0.9453, norm(x): 1.1322, norm(y): 0.9921, norm:0.3839, tok/sec: 190908.05, flops:167.21, batch-reuse:1
@ 2883 train 4.0127 , allloss: 4.0127, dt: 696.18ms, fracRes: 0.3604, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1376, norm(y): 0.9922, norm:0.3712, tok/sec: 188272.02, flops:164.90, batch-reuse:1
@ 2884 train 3.8719 , allloss: 3.8719, dt: 713.05ms, fracRes: 0.3562, norm(attn): 0.4512, norm(output): 0.9453, norm(x): 1.1294, norm(y): 0.9922, norm:0.3873, tok/sec: 183819.88, flops:161.00, batch-reuse:1
@ 2885 train 3.8821 , allloss: 3.8821, dt: 712.72ms, fracRes: 0.3561, norm(attn): 0.4492, norm(output): 0.9453, norm(x): 1.1254, norm(y): 0.9922, norm:0.3683, tok/sec: 183902.83, flops:161.07, batch-reuse:1
@ 2886 train 3.9072 , allloss: 3.9072, dt: 707.59ms, fracRes: 0.3532, norm(attn): 0.4531, norm(output): 0.9492, norm(x): 1.1270, norm(y): 0.9922, norm:0.3419, tok/sec: 185236.94, flops:162.24, batch-reuse:1
@ 2887 train 3.8870 , allloss: 3.8870, dt: 691.63ms, fracRes: 0.3635, norm(attn): 0.4512, norm(output): 0.9570, norm(x): 1.1398, norm(y): 0.9921, norm:0.3716, tok/sec: 189512.94, flops:165.99, batch-reuse:1
@ 2888 train 3.9128 , allloss: 3.9128, dt: 693.55ms, fracRes: 0.3596, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1349, norm(y): 0.9922, norm:0.3398, tok/sec: 188986.09, flops:165.52, batch-reuse:1
@ 2889 train 3.9296 , allloss: 3.9296, dt: 707.08ms, fracRes: 0.3576, norm(attn): 0.4453, norm(output): 0.9570, norm(x): 1.1339, norm(y): 0.9923, norm:0.3687, tok/sec: 185369.79, flops:162.36, batch-reuse:1
@ 2890 train 3.9592 , allloss: 3.9592, dt: 681.32ms, fracRes: 0.3610, norm(attn): 0.4492, norm(output): 0.9688, norm(x): 1.1352, norm(y): 0.9923, norm:0.3610, tok/sec: 192378.64, flops:168.50, batch-reuse:1
@ 2891 train 3.9574 , allloss: 3.9574, dt: 683.64ms, fracRes: 0.3572, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1295, norm(y): 0.9923, norm:0.4162, tok/sec: 191725.90, flops:167.92, batch-reuse:1
@ 2892 train 3.9127 , allloss: 3.9127, dt: 682.25ms, fracRes: 0.3561, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1313, norm(y): 0.9924, norm:0.3875, tok/sec: 192117.12, flops:168.27, batch-reuse:1
@ 2893 train 3.8708 , allloss: 3.8708, dt: 686.66ms, fracRes: 0.3556, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1313, norm(y): 0.9922, norm:0.3589, tok/sec: 190884.06, flops:167.19, batch-reuse:1
@ 2894 train 3.9050 , allloss: 3.9050, dt: 692.42ms, fracRes: 0.3543, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1285, norm(y): 0.9923, norm:0.3828, tok/sec: 189296.82, flops:165.80, batch-reuse:1
@ 2895 train 4.0169 , allloss: 4.0169, dt: 710.92ms, fracRes: 0.3562, norm(attn): 0.4473, norm(output): 0.9609, norm(x): 1.1363, norm(y): 0.9926, norm:0.3840, tok/sec: 184369.83, flops:161.48, batch-reuse:1
@ 2896 train 4.0007 , allloss: 4.0007, dt: 708.03ms, fracRes: 0.3564, norm(attn): 0.4531, norm(output): 0.9570, norm(x): 1.1340, norm(y): 0.9924, norm:0.4490, tok/sec: 185123.35, flops:162.14, batch-reuse:1
@ 2897 train 3.9197 , allloss: 3.9197, dt: 710.40ms, fracRes: 0.3594, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1345, norm(y): 0.9920, norm:0.3907, tok/sec: 184505.16, flops:161.60, batch-reuse:1
@ 2898 train 3.9477 , allloss: 3.9477, dt: 713.43ms, fracRes: 0.3643, norm(attn): 0.4512, norm(output): 0.9609, norm(x): 1.1390, norm(y): 0.9920, norm:0.3954, tok/sec: 183721.90, flops:160.91, batch-reuse:1
@ 2899 train 3.9526 , allloss: 3.9526, dt: 708.56ms, fracRes: 0.3601, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1345, norm(y): 0.9923, norm:0.3855, tok/sec: 184984.69, flops:162.02, batch-reuse:1
@ 2900 train 3.9669 , allloss: 3.9669, dt: 680.91ms, fracRes: 0.3595, norm(attn): 0.4512, norm(output): 0.9570, norm(x): 1.1363, norm(y): 0.9924, norm:0.3546, tok/sec: 192495.44, flops:168.60, batch-reuse:1
@ 2901 train 3.9187 , allloss: 3.9187, dt: 695.79ms, fracRes: 0.3544, norm(attn): 0.4590, norm(output): 0.9609, norm(x): 1.1322, norm(y): 0.9925, norm:0.3710, tok/sec: 188377.57, flops:164.99, batch-reuse:1
@ 2902 train 3.9641 , allloss: 3.9641, dt: 700.36ms, fracRes: 0.3561, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1339, norm(y): 0.9923, norm:0.3671, tok/sec: 187149.39, flops:163.92, batch-reuse:1
@ 2903 train 4.0455 , allloss: 4.0455, dt: 701.41ms, fracRes: 0.3615, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1381, norm(y): 0.9923, norm:0.4280, tok/sec: 186869.55, flops:163.67, batch-reuse:1
@ 2904 train 3.9561 , allloss: 3.9561, dt: 688.41ms, fracRes: 0.3637, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1437, norm(y): 0.9924, norm:0.4241, tok/sec: 190397.49, flops:166.76, batch-reuse:1
@ 2905 train 4.1051 , allloss: 4.1051, dt: 699.39ms, fracRes: 0.3624, norm(attn): 0.4473, norm(output): 0.9766, norm(x): 1.1486, norm(y): 0.9924, norm:0.4556, tok/sec: 187408.34, flops:164.14, batch-reuse:1
@ 2906 train 3.9056 , allloss: 3.9056, dt: 701.76ms, fracRes: 0.3570, norm(attn): 0.4434, norm(output): 0.9570, norm(x): 1.1360, norm(y): 0.9924, norm:0.4226, tok/sec: 186776.15, flops:163.59, batch-reuse:1
@ 2907 train 3.9919 , allloss: 3.9919, dt: 678.25ms, fracRes: 0.3564, norm(attn): 0.4434, norm(output): 0.9531, norm(x): 1.1293, norm(y): 0.9923, norm:0.3999, tok/sec: 193250.93, flops:169.26, batch-reuse:1
@ 2908 train 3.9263 , allloss: 3.9263, dt: 694.02ms, fracRes: 0.3503, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1236, norm(y): 0.9925, norm:0.3880, tok/sec: 188860.27, flops:165.41, batch-reuse:1
@ 2909 train 3.9025 , allloss: 3.9025, dt: 696.27ms, fracRes: 0.3527, norm(attn): 0.4512, norm(output): 0.9648, norm(x): 1.1344, norm(y): 0.9925, norm:0.4455, tok/sec: 188248.30, flops:164.88, batch-reuse:1
@ 2910 train 3.9072 , allloss: 3.9072, dt: 699.02ms, fracRes: 0.3484, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1283, norm(y): 0.9924, norm:0.4725, tok/sec: 187508.44, flops:164.23, batch-reuse:1
@ 2911 train 3.9795 , allloss: 3.9795, dt: 689.94ms, fracRes: 0.3504, norm(attn): 0.4492, norm(output): 0.9453, norm(x): 1.1297, norm(y): 0.9926, norm:0.3723, tok/sec: 189976.80, flops:166.39, batch-reuse:1
@ 2912 train 3.9736 , allloss: 3.9736, dt: 684.12ms, fracRes: 0.3528, norm(attn): 0.4492, norm(output): 0.9570, norm(x): 1.1348, norm(y): 0.9925, norm:0.3890, tok/sec: 191592.34, flops:167.81, batch-reuse:1
@ 2913 train 3.9428 , allloss: 3.9428, dt: 701.84ms, fracRes: 0.3552, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1314, norm(y): 0.9926, norm:0.3416, tok/sec: 186753.69, flops:163.57, batch-reuse:1
@ 2914 train 3.8564 , allloss: 3.8564, dt: 702.07ms, fracRes: 0.3597, norm(attn): 0.4453, norm(output): 0.9492, norm(x): 1.1321, norm(y): 0.9924, norm:0.3646, tok/sec: 186694.90, flops:163.52, batch-reuse:1
@ 2915 train 3.8810 , allloss: 3.8810, dt: 696.81ms, fracRes: 0.3569, norm(attn): 0.4609, norm(output): 0.9453, norm(x): 1.1304, norm(y): 0.9927, norm:0.3645, tok/sec: 188102.54, flops:164.75, batch-reuse:1
@ 2916 train 3.8314 , allloss: 3.8314, dt: 702.65ms, fracRes: 0.3597, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1391, norm(y): 0.9923, norm:0.4063, tok/sec: 186539.07, flops:163.38, batch-reuse:1
@ 2917 train 3.8988 , allloss: 3.8988, dt: 696.47ms, fracRes: 0.3572, norm(attn): 0.4492, norm(output): 0.9570, norm(x): 1.1357, norm(y): 0.9923, norm:0.3720, tok/sec: 188195.84, flops:164.83, batch-reuse:1
@ 2918 train 3.9927 , allloss: 3.9927, dt: 693.21ms, fracRes: 0.3541, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1345, norm(y): 0.9927, norm:0.3679, tok/sec: 189079.56, flops:165.61, batch-reuse:1
@ 2919 train 3.8796 , allloss: 3.8796, dt: 698.46ms, fracRes: 0.3550, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1303, norm(y): 0.9926, norm:0.3688, tok/sec: 187659.11, flops:164.36, batch-reuse:1
@ 2920 train 4.0102 , allloss: 4.0102, dt: 705.85ms, fracRes: 0.3564, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1338, norm(y): 0.9926, norm:0.4125, tok/sec: 185692.81, flops:162.64, batch-reuse:1
@ 2921 train 3.9403 , allloss: 3.9403, dt: 691.57ms, fracRes: 0.3561, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1322, norm(y): 0.9924, norm:0.3453, tok/sec: 189528.69, flops:166.00, batch-reuse:1
@ 2922 train 3.9033 , allloss: 3.9033, dt: 686.12ms, fracRes: 0.3594, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1353, norm(y): 0.9924, norm:0.3821, tok/sec: 191034.76, flops:167.32, batch-reuse:1
@ 2923 train 3.8627 , allloss: 3.8627, dt: 684.55ms, fracRes: 0.3599, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1363, norm(y): 0.9923, norm:0.3878, tok/sec: 191473.02, flops:167.70, batch-reuse:1
@ 2924 train 3.9733 , allloss: 3.9733, dt: 695.27ms, fracRes: 0.3596, norm(attn): 0.4492, norm(output): 0.9492, norm(x): 1.1339, norm(y): 0.9923, norm:0.3593, tok/sec: 188518.32, flops:165.11, batch-reuse:1
@ 2925 train 4.0664 , allloss: 4.0664, dt: 693.03ms, fracRes: 0.3655, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1446, norm(y): 0.9928, norm:0.4021, tok/sec: 189128.34, flops:165.65, batch-reuse:1
@ 2926 train 3.9249 , allloss: 3.9249, dt: 695.47ms, fracRes: 0.3609, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1390, norm(y): 0.9927, norm:0.3996, tok/sec: 188465.97, flops:165.07, batch-reuse:1
@ 2927 train 3.8274 , allloss: 3.8274, dt: 698.55ms, fracRes: 0.3591, norm(attn): 0.4590, norm(output): 0.9648, norm(x): 1.1405, norm(y): 0.9925, norm:0.3852, tok/sec: 187634.52, flops:164.34, batch-reuse:1
@ 2928 train 3.9159 , allloss: 3.9159, dt: 690.67ms, fracRes: 0.3597, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1400, norm(y): 0.9923, norm:0.3601, tok/sec: 189775.93, flops:166.22, batch-reuse:1
@ 2929 train 3.8975 , allloss: 3.8975, dt: 703.57ms, fracRes: 0.3576, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1376, norm(y): 0.9924, norm:0.3671, tok/sec: 186295.32, flops:163.17, batch-reuse:1
@ 2930 train 3.8334 , allloss: 3.8334, dt: 686.98ms, fracRes: 0.3558, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1333, norm(y): 0.9923, norm:0.3543, tok/sec: 190794.36, flops:167.11, batch-reuse:1
@ 2931 train 3.8051 , allloss: 3.8051, dt: 678.90ms, fracRes: 0.3595, norm(attn): 0.4629, norm(output): 0.9688, norm(x): 1.1421, norm(y): 0.9925, norm:0.3753, tok/sec: 193066.07, flops:169.10, batch-reuse:1
@ 2932 train 3.7372 , allloss: 3.7372, dt: 691.05ms, fracRes: 0.3632, norm(attn): 0.4531, norm(output): 0.9531, norm(x): 1.1377, norm(y): 0.9924, norm:0.3880, tok/sec: 189671.17, flops:166.12, batch-reuse:1
@ 2933 train 3.8813 , allloss: 3.8813, dt: 697.22ms, fracRes: 0.3617, norm(attn): 0.4473, norm(output): 0.9648, norm(x): 1.1380, norm(y): 0.9926, norm:0.3785, tok/sec: 187991.58, flops:164.65, batch-reuse:1
@ 2934 train 3.9038 , allloss: 3.9038, dt: 693.17ms, fracRes: 0.3583, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1352, norm(y): 0.9927, norm:0.3827, tok/sec: 189089.57, flops:165.62, batch-reuse:1
@ 2935 train 3.8332 , allloss: 3.8332, dt: 705.76ms, fracRes: 0.3600, norm(attn): 0.4590, norm(output): 0.9609, norm(x): 1.1369, norm(y): 0.9928, norm:0.3895, tok/sec: 185717.52, flops:162.66, batch-reuse:1
@ 2936 train 3.7472 , allloss: 3.7472, dt: 705.55ms, fracRes: 0.3638, norm(attn): 0.4551, norm(output): 0.9531, norm(x): 1.1365, norm(y): 0.9925, norm:0.3742, tok/sec: 185774.07, flops:162.71, batch-reuse:1
@ 2937 train 3.8038 , allloss: 3.8038, dt: 706.63ms, fracRes: 0.3647, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1368, norm(y): 0.9924, norm:0.3779, tok/sec: 185489.75, flops:162.46, batch-reuse:1
@ 2938 train 3.8339 , allloss: 3.8339, dt: 705.68ms, fracRes: 0.3597, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1421, norm(y): 0.9929, norm:0.4025, tok/sec: 185739.30, flops:162.68, batch-reuse:1
@ 2939 train 3.8858 , allloss: 3.8858, dt: 705.58ms, fracRes: 0.3522, norm(attn): 0.4512, norm(output): 0.9570, norm(x): 1.1322, norm(y): 0.9931, norm:0.3802, tok/sec: 185765.15, flops:162.70, batch-reuse:1
@ 2940 train 3.8454 , allloss: 3.8454, dt: 708.35ms, fracRes: 0.3569, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1373, norm(y): 0.9929, norm:0.3570, tok/sec: 185037.61, flops:162.07, batch-reuse:1
@ 2941 train 3.7130 , allloss: 3.7130, dt: 693.18ms, fracRes: 0.3542, norm(attn): 0.4570, norm(output): 0.9531, norm(x): 1.1289, norm(y): 0.9926, norm:0.3887, tok/sec: 189087.82, flops:165.61, batch-reuse:1
@ 2942 train 3.8668 , allloss: 3.8668, dt: 687.29ms, fracRes: 0.3595, norm(attn): 0.4473, norm(output): 0.9492, norm(x): 1.1316, norm(y): 0.9927, norm:0.4228, tok/sec: 190707.52, flops:167.03, batch-reuse:1
@ 2943 train 3.8074 , allloss: 3.8074, dt: 701.65ms, fracRes: 0.3623, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1368, norm(y): 0.9925, norm:0.3523, tok/sec: 186805.35, flops:163.61, batch-reuse:1
@ 2944 train 3.8962 , allloss: 3.8962, dt: 674.22ms, fracRes: 0.3599, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1356, norm(y): 0.9927, norm:0.4081, tok/sec: 194403.99, flops:170.27, batch-reuse:1
@ 2945 train 3.8920 , allloss: 3.8920, dt: 694.19ms, fracRes: 0.3619, norm(attn): 0.4453, norm(output): 0.9570, norm(x): 1.1354, norm(y): 0.9923, norm:0.3793, tok/sec: 188813.31, flops:165.37, batch-reuse:1
@ 2946 train 3.8242 , allloss: 3.8242, dt: 693.93ms, fracRes: 0.3572, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1348, norm(y): 0.9923, norm:0.3840, tok/sec: 188882.92, flops:165.43, batch-reuse:1
@ 2947 train 3.8330 , allloss: 3.8330, dt: 696.58ms, fracRes: 0.3575, norm(attn): 0.4512, norm(output): 0.9570, norm(x): 1.1384, norm(y): 0.9926, norm:0.3763, tok/sec: 188166.21, flops:164.81, batch-reuse:1
@ 2948 train 3.7370 , allloss: 3.7370, dt: 684.10ms, fracRes: 0.3538, norm(attn): 0.4492, norm(output): 0.9531, norm(x): 1.1315, norm(y): 0.9926, norm:0.3879, tok/sec: 191597.68, flops:167.81, batch-reuse:1
@ 2949 train 3.8118 , allloss: 3.8118, dt: 692.94ms, fracRes: 0.3555, norm(attn): 0.4551, norm(output): 0.9570, norm(x): 1.1339, norm(y): 0.9927, norm:0.3595, tok/sec: 189153.40, flops:165.67, batch-reuse:1
@ 2950 train 3.8749 , allloss: 3.8749, dt: 701.09ms, fracRes: 0.3635, norm(attn): 0.4609, norm(output): 0.9766, norm(x): 1.1490, norm(y): 0.9927, norm:0.3737, tok/sec: 186955.40, flops:163.75, batch-reuse:1
@ 2951 train 3.8032 , allloss: 3.8032, dt: 701.02ms, fracRes: 0.3648, norm(attn): 0.4473, norm(output): 0.9648, norm(x): 1.1457, norm(y): 0.9928, norm:0.3826, tok/sec: 186973.14, flops:163.76, batch-reuse:1
@ 2952 train 3.8790 , allloss: 3.8790, dt: 699.34ms, fracRes: 0.3618, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1391, norm(y): 0.9928, norm:0.4248, tok/sec: 187421.63, flops:164.15, batch-reuse:1
@ 2953 train 3.8718 , allloss: 3.8718, dt: 697.83ms, fracRes: 0.3634, norm(attn): 0.4551, norm(output): 0.9609, norm(x): 1.1432, norm(y): 0.9926, norm:0.4323, tok/sec: 187828.95, flops:164.51, batch-reuse:1
@ 2954 train 3.8093 , allloss: 3.8093, dt: 697.80ms, fracRes: 0.3579, norm(attn): 0.4512, norm(output): 0.9648, norm(x): 1.1397, norm(y): 0.9926, norm:0.3665, tok/sec: 187837.10, flops:164.52, batch-reuse:1
@ 2955 train 3.8505 , allloss: 3.8505, dt: 711.28ms, fracRes: 0.3522, norm(attn): 0.4492, norm(output): 0.9648, norm(x): 1.1341, norm(y): 0.9927, norm:0.3793, tok/sec: 184277.44, flops:161.40, batch-reuse:1
@ 2956 train 3.8080 , allloss: 3.8080, dt: 698.57ms, fracRes: 0.3553, norm(attn): 0.4551, norm(output): 0.9570, norm(x): 1.1319, norm(y): 0.9927, norm:0.3883, tok/sec: 187627.99, flops:164.34, batch-reuse:1
@ 2957 train 3.9000 , allloss: 3.9000, dt: 706.85ms, fracRes: 0.3627, norm(attn): 0.4453, norm(output): 0.9453, norm(x): 1.1308, norm(y): 0.9924, norm:0.3488, tok/sec: 185431.88, flops:162.41, batch-reuse:1
@ 2958 train 3.8526 , allloss: 3.8526, dt: 707.65ms, fracRes: 0.3628, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1360, norm(y): 0.9926, norm:0.3770, tok/sec: 185221.65, flops:162.23, batch-reuse:1
@ 2959 train 3.8724 , allloss: 3.8724, dt: 688.79ms, fracRes: 0.3607, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1392, norm(y): 0.9928, norm:0.3390, tok/sec: 190291.91, flops:166.67, batch-reuse:1
@ 2960 train 3.8482 , allloss: 3.8482, dt: 696.14ms, fracRes: 0.3610, norm(attn): 0.4512, norm(output): 0.9531, norm(x): 1.1335, norm(y): 0.9925, norm:0.3744, tok/sec: 188283.69, flops:164.91, batch-reuse:1
@ 2961 train 3.7515 , allloss: 3.7515, dt: 694.26ms, fracRes: 0.3607, norm(attn): 0.4434, norm(output): 0.9531, norm(x): 1.1361, norm(y): 0.9923, norm:0.3753, tok/sec: 188794.31, flops:165.36, batch-reuse:1
@ 2962 train 3.8100 , allloss: 3.8100, dt: 694.99ms, fracRes: 0.3530, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1297, norm(y): 0.9928, norm:0.3440, tok/sec: 188594.70, flops:165.18, batch-reuse:1
@ 2963 train 3.8313 , allloss: 3.8313, dt: 712.66ms, fracRes: 0.3513, norm(attn): 0.4492, norm(output): 0.9688, norm(x): 1.1333, norm(y): 0.9927, norm:0.4014, tok/sec: 183920.24, flops:161.09, batch-reuse:1
@ 2964 train 3.8809 , allloss: 3.8809, dt: 711.50ms, fracRes: 0.3563, norm(attn): 0.4531, norm(output): 0.9609, norm(x): 1.1382, norm(y): 0.9930, norm:0.3856, tok/sec: 184218.16, flops:161.35, batch-reuse:1
@ 2965 train 3.8199 , allloss: 3.8199, dt: 688.91ms, fracRes: 0.3627, norm(attn): 0.4473, norm(output): 0.9609, norm(x): 1.1443, norm(y): 0.9928, norm:0.4182, tok/sec: 190259.51, flops:166.64, batch-reuse:1
@ 2966 train 3.7378 , allloss: 3.7378, dt: 697.50ms, fracRes: 0.3630, norm(attn): 0.4551, norm(output): 0.9531, norm(x): 1.1394, norm(y): 0.9926, norm:0.4171, tok/sec: 187916.85, flops:164.59, batch-reuse:1
@ 2967 train 3.8506 , allloss: 3.8506, dt: 698.08ms, fracRes: 0.3676, norm(attn): 0.4453, norm(output): 0.9570, norm(x): 1.1390, norm(y): 0.9924, norm:0.4215, tok/sec: 187759.99, flops:164.45, batch-reuse:1
@ 2968 train 3.8582 , allloss: 3.8582, dt: 699.78ms, fracRes: 0.3630, norm(attn): 0.4473, norm(output): 0.9609, norm(x): 1.1384, norm(y): 0.9925, norm:0.4293, tok/sec: 187303.44, flops:164.05, batch-reuse:1
@ 2969 train 3.7552 , allloss: 3.7552, dt: 707.74ms, fracRes: 0.3689, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1422, norm(y): 0.9923, norm:0.3750, tok/sec: 185197.75, flops:162.21, batch-reuse:1
@ 2970 train 3.7803 , allloss: 3.7803, dt: 705.55ms, fracRes: 0.3676, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1392, norm(y): 0.9923, norm:0.3779, tok/sec: 185772.44, flops:162.71, batch-reuse:1
@ 2971 train 3.8206 , allloss: 3.8206, dt: 694.06ms, fracRes: 0.3664, norm(attn): 0.4531, norm(output): 0.9648, norm(x): 1.1434, norm(y): 0.9925, norm:0.3948, tok/sec: 188848.85, flops:165.40, batch-reuse:1
@ 2972 train 3.7067 , allloss: 3.7067, dt: 700.70ms, fracRes: 0.3582, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1375, norm(y): 0.9929, norm:0.4081, tok/sec: 187059.15, flops:163.84, batch-reuse:1
@ 2973 train 3.8338 , allloss: 3.8338, dt: 704.69ms, fracRes: 0.3623, norm(attn): 0.4570, norm(output): 0.9648, norm(x): 1.1437, norm(y): 0.9926, norm:0.4056, tok/sec: 185998.58, flops:162.91, batch-reuse:1
@ 2974 train 3.7410 , allloss: 3.7410, dt: 682.03ms, fracRes: 0.3669, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1388, norm(y): 0.9923, norm:0.3912, tok/sec: 192178.30, flops:168.32, batch-reuse:1
@ 2975 train 3.9205 , allloss: 3.9205, dt: 695.48ms, fracRes: 0.3636, norm(attn): 0.4492, norm(output): 0.9648, norm(x): 1.1416, norm(y): 0.9925, norm:0.3694, tok/sec: 188463.46, flops:165.07, batch-reuse:1
@ 2976 train 3.9671 , allloss: 3.9671, dt: 679.99ms, fracRes: 0.3670, norm(attn): 0.4492, norm(output): 0.9609, norm(x): 1.1467, norm(y): 0.9926, norm:0.3913, tok/sec: 192756.57, flops:168.83, batch-reuse:1
@ 2977 train 3.9855 , allloss: 3.9855, dt: 690.14ms, fracRes: 0.3646, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1432, norm(y): 0.9925, norm:0.3638, tok/sec: 189920.56, flops:166.34, batch-reuse:1
@ 2978 train 3.9904 , allloss: 3.9904, dt: 697.93ms, fracRes: 0.3632, norm(attn): 0.4609, norm(output): 0.9648, norm(x): 1.1391, norm(y): 0.9927, norm:0.4005, tok/sec: 187801.94, flops:164.49, batch-reuse:1
@ 2979 train 4.0293 , allloss: 4.0293, dt: 672.74ms, fracRes: 0.3629, norm(attn): 0.4629, norm(output): 0.9570, norm(x): 1.1387, norm(y): 0.9930, norm:0.4694, tok/sec: 194833.14, flops:170.65, batch-reuse:1
@ 2980 train 3.8664 , allloss: 3.8664, dt: 693.98ms, fracRes: 0.3647, norm(attn): 0.4590, norm(output): 0.9609, norm(x): 1.1416, norm(y): 0.9928, norm:0.3890, tok/sec: 188870.65, flops:165.42, batch-reuse:1
@ 2981 train 3.9495 , allloss: 3.9495, dt: 691.79ms, fracRes: 0.3657, norm(attn): 0.4570, norm(output): 0.9688, norm(x): 1.1438, norm(y): 0.9926, norm:0.5055, tok/sec: 189466.76, flops:165.95, batch-reuse:1
@ 2982 train 4.0424 , allloss: 4.0424, dt: 702.73ms, fracRes: 0.3569, norm(attn): 0.4512, norm(output): 0.9766, norm(x): 1.1426, norm(y): 0.9928, norm:0.4580, tok/sec: 186519.32, flops:163.36, batch-reuse:1
@ 2983 train 3.9309 , allloss: 3.9309, dt: 695.41ms, fracRes: 0.3597, norm(attn): 0.4414, norm(output): 0.9688, norm(x): 1.1449, norm(y): 0.9929, norm:0.4034, tok/sec: 188480.45, flops:165.08, batch-reuse:1
@ 2984 train 3.9885 , allloss: 3.9885, dt: 686.79ms, fracRes: 0.3596, norm(attn): 0.4492, norm(output): 0.9609, norm(x): 1.1404, norm(y): 0.9931, norm:0.4119, tok/sec: 190846.68, flops:167.15, batch-reuse:1
@ 2985 train 4.0265 , allloss: 4.0265, dt: 694.23ms, fracRes: 0.3600, norm(attn): 0.4512, norm(output): 0.9688, norm(x): 1.1431, norm(y): 0.9930, norm:0.4833, tok/sec: 188801.64, flops:165.36, batch-reuse:1
@ 2986 train 3.9283 , allloss: 3.9283, dt: 699.16ms, fracRes: 0.3671, norm(attn): 0.4453, norm(output): 0.9648, norm(x): 1.1444, norm(y): 0.9928, norm:0.3789, tok/sec: 187469.44, flops:164.20, batch-reuse:1
@ 2987 train 4.0116 , allloss: 4.0116, dt: 690.26ms, fracRes: 0.3653, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1428, norm(y): 0.9927, norm:0.3892, tok/sec: 189886.97, flops:166.31, batch-reuse:1
@ 2988 train 4.0766 , allloss: 4.0766, dt: 698.85ms, fracRes: 0.3667, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1513, norm(y): 0.9930, norm:0.3903, tok/sec: 187552.97, flops:164.27, batch-reuse:1
@ 2989 train 4.0149 , allloss: 4.0149, dt: 698.99ms, fracRes: 0.3602, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1464, norm(y): 0.9932, norm:0.3919, tok/sec: 187515.09, flops:164.24, batch-reuse:1
@ 2990 train 4.0501 , allloss: 4.0501, dt: 691.59ms, fracRes: 0.3651, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1455, norm(y): 0.9931, norm:0.3761, tok/sec: 189521.63, flops:165.99, batch-reuse:1
@ 2991 train 3.9432 , allloss: 3.9432, dt: 682.11ms, fracRes: 0.3672, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1458, norm(y): 0.9929, norm:0.3711, tok/sec: 192156.00, flops:168.30, batch-reuse:1
@ 2992 train 3.9848 , allloss: 3.9848, dt: 690.04ms, fracRes: 0.3679, norm(attn): 0.4492, norm(output): 0.9609, norm(x): 1.1463, norm(y): 0.9928, norm:0.3614, tok/sec: 189947.39, flops:166.37, batch-reuse:1
@ 2993 train 3.9768 , allloss: 3.9768, dt: 707.22ms, fracRes: 0.3712, norm(attn): 0.4492, norm(output): 0.9844, norm(x): 1.1544, norm(y): 0.9930, norm:0.3831, tok/sec: 185333.61, flops:162.33, batch-reuse:1
@ 2994 train 4.0084 , allloss: 4.0084, dt: 690.32ms, fracRes: 0.3682, norm(attn): 0.4512, norm(output): 0.9688, norm(x): 1.1489, norm(y): 0.9930, norm:0.3999, tok/sec: 189870.31, flops:166.30, batch-reuse:1
@ 2995 train 3.8935 , allloss: 3.8935, dt: 697.65ms, fracRes: 0.3604, norm(attn): 0.4492, norm(output): 0.9648, norm(x): 1.1416, norm(y): 0.9929, norm:0.3953, tok/sec: 187876.78, flops:164.55, batch-reuse:1
@ 2996 train 3.9336 , allloss: 3.9336, dt: 701.27ms, fracRes: 0.3632, norm(attn): 0.4531, norm(output): 0.9609, norm(x): 1.1471, norm(y): 0.9931, norm:0.4377, tok/sec: 186905.82, flops:163.70, batch-reuse:1
@ 2997 train 3.9818 , allloss: 3.9818, dt: 680.34ms, fracRes: 0.3687, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1521, norm(y): 0.9930, norm:0.4375, tok/sec: 192656.60, flops:168.74, batch-reuse:1
@ 2998 train 4.0194 , allloss: 4.0194, dt: 686.07ms, fracRes: 0.3685, norm(attn): 0.4453, norm(output): 0.9766, norm(x): 1.1534, norm(y): 0.9930, norm:0.4051, tok/sec: 191048.63, flops:167.33, batch-reuse:1
@ 2999 train 3.8963 , allloss: 3.8963, dt: 687.40ms, fracRes: 0.3718, norm(attn): 0.4492, norm(output): 0.9648, norm(x): 1.1520, norm(y): 0.9929, norm:0.4094, tok/sec: 190679.28, flops:167.01, batch-reuse:1
@ 3000 train 4.0045 , allloss: 4.0045, dt: 706.02ms, fracRes: 0.3707, norm(attn): 0.4551, norm(output): 0.9844, norm(x): 1.1543, norm(y): 0.9932, norm:0.4059, tok/sec: 185648.16, flops:162.60, batch-reuse:1
@ 3001 train 4.0631 , allloss: 4.0631, dt: 703.80ms, fracRes: 0.3663, norm(attn): 0.4570, norm(output): 0.9766, norm(x): 1.1514, norm(y): 0.9934, norm:0.4039, tok/sec: 186233.92, flops:163.11, batch-reuse:1
@ 3002 train 3.9335 , allloss: 3.9335, dt: 700.74ms, fracRes: 0.3712, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1579, norm(y): 0.9928, norm:0.4339, tok/sec: 187048.33, flops:163.83, batch-reuse:1
@ 3003 train 3.9717 , allloss: 3.9717, dt: 702.99ms, fracRes: 0.3664, norm(attn): 0.4590, norm(output): 0.9688, norm(x): 1.1486, norm(y): 0.9927, norm:0.4665, tok/sec: 186450.43, flops:163.30, batch-reuse:1
@ 3004 train 4.0402 , allloss: 4.0402, dt: 697.62ms, fracRes: 0.3601, norm(attn): 0.4453, norm(output): 0.9609, norm(x): 1.1423, norm(y): 0.9928, norm:0.4647, tok/sec: 187885.57, flops:164.56, batch-reuse:1
@ 3005 train 4.2325 , allloss: 4.2325, dt: 700.80ms, fracRes: 0.3673, norm(attn): 0.4453, norm(output): 0.9688, norm(x): 1.1522, norm(y): 0.9933, norm:0.4619, tok/sec: 187032.68, flops:163.81, batch-reuse:1
@ 3006 train 3.9579 , allloss: 3.9579, dt: 683.27ms, fracRes: 0.3656, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1434, norm(y): 0.9932, norm:0.4709, tok/sec: 191829.87, flops:168.02, batch-reuse:1
@ 3007 train 4.0469 , allloss: 4.0469, dt: 700.31ms, fracRes: 0.3640, norm(attn): 0.4473, norm(output): 0.9531, norm(x): 1.1407, norm(y): 0.9931, norm:0.3720, tok/sec: 187162.07, flops:163.93, batch-reuse:1
@ 3008 train 4.0059 , allloss: 4.0059, dt: 696.27ms, fracRes: 0.3661, norm(attn): 0.4434, norm(output): 0.9609, norm(x): 1.1449, norm(y): 0.9929, norm:0.4420, tok/sec: 188248.23, flops:164.88, batch-reuse:1
@ 3009 train 3.9130 , allloss: 3.9130, dt: 696.19ms, fracRes: 0.3595, norm(attn): 0.4473, norm(output): 0.9648, norm(x): 1.1420, norm(y): 0.9931, norm:0.4698, tok/sec: 188269.77, flops:164.90, batch-reuse:1
@ 3010 train 3.9546 , allloss: 3.9546, dt: 694.24ms, fracRes: 0.3617, norm(attn): 0.4512, norm(output): 0.9688, norm(x): 1.1496, norm(y): 0.9931, norm:0.3915, tok/sec: 188800.34, flops:165.36, batch-reuse:1
@ 3011 train 4.0083 , allloss: 4.0083, dt: 701.93ms, fracRes: 0.3575, norm(attn): 0.4473, norm(output): 0.9727, norm(x): 1.1446, norm(y): 0.9932, norm:0.4064, tok/sec: 186730.79, flops:163.55, batch-reuse:1
@ 3012 train 4.1004 , allloss: 4.1004, dt: 702.33ms, fracRes: 0.3644, norm(attn): 0.4590, norm(output): 0.9648, norm(x): 1.1427, norm(y): 0.9932, norm:0.4679, tok/sec: 186623.41, flops:163.46, batch-reuse:1
@ 3013 train 4.1547 , allloss: 4.1547, dt: 693.69ms, fracRes: 0.3661, norm(attn): 0.4434, norm(output): 0.9688, norm(x): 1.1508, norm(y): 0.9935, norm:0.4537, tok/sec: 188948.29, flops:165.49, batch-reuse:1
@ 3014 train 3.9733 , allloss: 3.9733, dt: 692.58ms, fracRes: 0.3706, norm(attn): 0.4414, norm(output): 0.9727, norm(x): 1.1557, norm(y): 0.9929, norm:0.3916, tok/sec: 189252.05, flops:165.76, batch-reuse:1
@ 3015 train 3.9478 , allloss: 3.9478, dt: 700.33ms, fracRes: 0.3661, norm(attn): 0.4434, norm(output): 0.9688, norm(x): 1.1487, norm(y): 0.9926, norm:0.4362, tok/sec: 187157.54, flops:163.92, batch-reuse:1
@ 3016 train 3.9117 , allloss: 3.9117, dt: 700.10ms, fracRes: 0.3722, norm(attn): 0.4473, norm(output): 0.9648, norm(x): 1.1474, norm(y): 0.9924, norm:0.3509, tok/sec: 187219.24, flops:163.98, batch-reuse:1
@ 3017 train 3.9003 , allloss: 3.9003, dt: 701.80ms, fracRes: 0.3726, norm(attn): 0.4473, norm(output): 0.9570, norm(x): 1.1506, norm(y): 0.9927, norm:0.4242, tok/sec: 186765.49, flops:163.58, batch-reuse:1
@ 3018 train 3.9785 , allloss: 3.9785, dt: 703.47ms, fracRes: 0.3634, norm(attn): 0.4609, norm(output): 0.9609, norm(x): 1.1448, norm(y): 0.9931, norm:0.3460, tok/sec: 186322.15, flops:163.19, batch-reuse:1
@ 3019 train 4.1554 , allloss: 4.1554, dt: 691.89ms, fracRes: 0.3717, norm(attn): 0.4570, norm(output): 0.9648, norm(x): 1.1533, norm(y): 0.9931, norm:0.4512, tok/sec: 189441.30, flops:165.92, batch-reuse:1
@ 3020 train 3.8988 , allloss: 3.8988, dt: 694.20ms, fracRes: 0.3629, norm(attn): 0.4609, norm(output): 0.9609, norm(x): 1.1430, norm(y): 0.9932, norm:0.3605, tok/sec: 188810.52, flops:165.37, batch-reuse:1
@ 3021 train 3.9372 , allloss: 3.9372, dt: 702.19ms, fracRes: 0.3609, norm(attn): 0.4590, norm(output): 0.9531, norm(x): 1.1423, norm(y): 0.9934, norm:0.3697, tok/sec: 186661.18, flops:163.49, batch-reuse:1
@ 3022 train 4.0031 , allloss: 4.0031, dt: 701.50ms, fracRes: 0.3603, norm(attn): 0.4512, norm(output): 0.9688, norm(x): 1.1483, norm(y): 0.9932, norm:0.4067, tok/sec: 186845.22, flops:163.65, batch-reuse:1
@ 3023 train 4.0561 , allloss: 4.0561, dt: 700.13ms, fracRes: 0.3589, norm(attn): 0.4512, norm(output): 0.9609, norm(x): 1.1459, norm(y): 0.9933, norm:0.4206, tok/sec: 187210.82, flops:163.97, batch-reuse:1
@ 3024 train 3.9628 , allloss: 3.9628, dt: 694.42ms, fracRes: 0.3572, norm(attn): 0.4570, norm(output): 0.9766, norm(x): 1.1449, norm(y): 0.9932, norm:0.3954, tok/sec: 188749.26, flops:165.32, batch-reuse:1
@ 3025 train 3.9655 , allloss: 3.9655, dt: 702.73ms, fracRes: 0.3614, norm(attn): 0.4590, norm(output): 0.9727, norm(x): 1.1449, norm(y): 0.9933, norm:0.4091, tok/sec: 186518.50, flops:163.36, batch-reuse:1
@ 3026 train 4.0027 , allloss: 4.0027, dt: 701.57ms, fracRes: 0.3649, norm(attn): 0.4570, norm(output): 0.9688, norm(x): 1.1506, norm(y): 0.9933, norm:0.4152, tok/sec: 186827.82, flops:163.63, batch-reuse:1
@ 3027 train 4.0187 , allloss: 4.0187, dt: 698.01ms, fracRes: 0.3647, norm(attn): 0.4512, norm(output): 0.9648, norm(x): 1.1468, norm(y): 0.9931, norm:0.3861, tok/sec: 187780.00, flops:164.47, batch-reuse:1
@ 3028 train 3.9982 , allloss: 3.9982, dt: 683.28ms, fracRes: 0.3647, norm(attn): 0.4453, norm(output): 0.9609, norm(x): 1.1452, norm(y): 0.9930, norm:0.3870, tok/sec: 191827.39, flops:168.01, batch-reuse:1
@ 3029 train 3.8782 , allloss: 3.8782, dt: 705.12ms, fracRes: 0.3651, norm(attn): 0.4453, norm(output): 0.9531, norm(x): 1.1411, norm(y): 0.9929, norm:0.3622, tok/sec: 185887.07, flops:162.81, batch-reuse:1
@ 3030 train 3.9416 , allloss: 3.9416, dt: 694.66ms, fracRes: 0.3626, norm(attn): 0.4492, norm(output): 0.9609, norm(x): 1.1437, norm(y): 0.9931, norm:0.3690, tok/sec: 188684.80, flops:165.26, batch-reuse:1
@ 3031 train 3.9589 , allloss: 3.9589, dt: 710.08ms, fracRes: 0.3628, norm(attn): 0.4551, norm(output): 0.9648, norm(x): 1.1421, norm(y): 0.9931, norm:0.3812, tok/sec: 184586.50, flops:161.67, batch-reuse:1
@ 3032 train 3.9684 , allloss: 3.9684, dt: 707.48ms, fracRes: 0.3599, norm(attn): 0.4551, norm(output): 0.9609, norm(x): 1.1412, norm(y): 0.9933, norm:0.3639, tok/sec: 185265.84, flops:162.27, batch-reuse:1
@ 3033 train 3.9012 , allloss: 3.9012, dt: 709.12ms, fracRes: 0.3631, norm(attn): 0.4570, norm(output): 0.9609, norm(x): 1.1432, norm(y): 0.9933, norm:0.3640, tok/sec: 184838.84, flops:161.89, batch-reuse:1
@ 3034 train 3.9957 , allloss: 3.9957, dt: 694.71ms, fracRes: 0.3636, norm(attn): 0.4590, norm(output): 0.9688, norm(x): 1.1465, norm(y): 0.9936, norm:0.3387, tok/sec: 188670.49, flops:165.25, batch-reuse:1
@ 3035 train 4.0227 , allloss: 4.0227, dt: 701.87ms, fracRes: 0.3582, norm(attn): 0.4492, norm(output): 0.9688, norm(x): 1.1429, norm(y): 0.9936, norm:0.3697, tok/sec: 186747.86, flops:163.56, batch-reuse:1
@ 3036 train 3.9458 , allloss: 3.9458, dt: 691.48ms, fracRes: 0.3585, norm(attn): 0.4512, norm(output): 0.9766, norm(x): 1.1443, norm(y): 0.9933, norm:0.3370, tok/sec: 189552.15, flops:166.02, batch-reuse:1
@ 3037 train 4.0183 , allloss: 4.0183, dt: 695.38ms, fracRes: 0.3632, norm(attn): 0.4492, norm(output): 0.9648, norm(x): 1.1469, norm(y): 0.9932, norm:0.3674, tok/sec: 188488.72, flops:165.09, batch-reuse:1
@ 3038 train 3.9786 , allloss: 3.9786, dt: 698.32ms, fracRes: 0.3611, norm(attn): 0.4434, norm(output): 0.9766, norm(x): 1.1480, norm(y): 0.9932, norm:0.4034, tok/sec: 187696.40, flops:164.39, batch-reuse:1
@ 3039 train 4.2396 , allloss: 4.2396, dt: 691.14ms, fracRes: 0.3656, norm(attn): 0.4434, norm(output): 0.9844, norm(x): 1.1558, norm(y): 0.9932, norm:0.6109, tok/sec: 189645.78, flops:166.10, batch-reuse:1
@ 3040 train 3.9452 , allloss: 3.9452, dt: 680.55ms, fracRes: 0.3675, norm(attn): 0.4434, norm(output): 0.9648, norm(x): 1.1537, norm(y): 0.9931, norm:0.6508, tok/sec: 192596.73, flops:168.69, batch-reuse:1
@ 3041 train 3.9994 , allloss: 3.9994, dt: 694.75ms, fracRes: 0.3637, norm(attn): 0.4434, norm(output): 0.9609, norm(x): 1.1447, norm(y): 0.9929, norm:0.4760, tok/sec: 188659.48, flops:165.24, batch-reuse:1
@ 3042 train 3.9020 , allloss: 3.9020, dt: 690.47ms, fracRes: 0.3699, norm(attn): 0.4570, norm(output): 0.9688, norm(x): 1.1535, norm(y): 0.9929, norm:0.4797, tok/sec: 189828.74, flops:166.26, batch-reuse:1
@ 3043 train 3.9614 , allloss: 3.9614, dt: 697.93ms, fracRes: 0.3638, norm(attn): 0.4551, norm(output): 0.9766, norm(x): 1.1464, norm(y): 0.9931, norm:0.4412, tok/sec: 187801.94, flops:164.49, batch-reuse:1
@ 3044 train 3.9887 , allloss: 3.9887, dt: 696.49ms, fracRes: 0.3632, norm(attn): 0.4609, norm(output): 0.9688, norm(x): 1.1468, norm(y): 0.9933, norm:0.4329, tok/sec: 188189.01, flops:164.83, batch-reuse:1
@ 3045 train 4.2034 , allloss: 4.2034, dt: 689.00ms, fracRes: 0.3690, norm(attn): 0.4609, norm(output): 0.9805, norm(x): 1.1600, norm(y): 0.9936, norm:0.5403, tok/sec: 190236.21, flops:166.62, batch-reuse:1
@ 3046 train 3.9952 , allloss: 3.9952, dt: 687.79ms, fracRes: 0.3638, norm(attn): 0.4609, norm(output): 0.9766, norm(x): 1.1538, norm(y): 0.9934, norm:0.4475, tok/sec: 190568.50, flops:166.91, batch-reuse:1
@ 3047 train 3.9850 , allloss: 3.9850, dt: 687.83ms, fracRes: 0.3624, norm(attn): 0.4609, norm(output): 0.9805, norm(x): 1.1555, norm(y): 0.9931, norm:0.4756, tok/sec: 190559.58, flops:166.90, batch-reuse:1
@ 3048 train 3.9073 , allloss: 3.9073, dt: 693.58ms, fracRes: 0.3670, norm(attn): 0.4609, norm(output): 0.9688, norm(x): 1.1525, norm(y): 0.9931, norm:0.4411, tok/sec: 188978.30, flops:165.52, batch-reuse:1
@ 3049 train 4.1331 , allloss: 4.1331, dt: 689.76ms, fracRes: 0.3639, norm(attn): 0.4492, norm(output): 0.9727, norm(x): 1.1499, norm(y): 0.9935, norm:0.4346, tok/sec: 190026.51, flops:166.44, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.8984, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4375, 0.3203, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.1318, 0.1982, 0.6562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0240, 0.2949, 0.1943, 0.1689, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0771, 0.2188, 0.0601, 0.0942, 0.1396, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.2344, 0.0496, 0.0737, 0.0806, 0.2256, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.1226, 0.0413, 0.0413, 0.1514, 0.0596, 0.1650, 0.0613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0063, 0.1128, 0.0417, 0.0757, 0.0713, 0.1099, 0.4746, 0.0339, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0369, 0.1094, 0.0248, 0.0349, 0.0933, 0.1289, 0.2324, 0.0635, 0.2041, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0219, 0.1875, 0.0427, 0.0312, 0.0874, 0.2197, 0.2578, 0.0320, 0.0698, 0.0369, 0.0123, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.0542, 0.0459, 0.0410, 0.0703, 0.1201, 0.0811, 0.0718, 0.0737, 0.0649, 0.2412, 0.0386, 0.0000, 0.0000, 0.0000],
        [0.4238, 0.0554, 0.0098, 0.0058, 0.0449, 0.0165, 0.0693, 0.0098, 0.0311, 0.0330, 0.1533, 0.0122, 0.1348, 0.0000, 0.0000],
        [0.0094, 0.1162, 0.0182, 0.0347, 0.0486, 0.0664, 0.4199, 0.0154, 0.0630, 0.0256, 0.0322, 0.0718, 0.0381, 0.0408, 0.0000],
        [0.0106, 0.0679, 0.0457, 0.0693, 0.0688, 0.0330, 0.1309, 0.0525, 0.0469, 0.0219, 0.1089, 0.0557, 0.1035, 0.0625, 0.1226]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0195,     -1.4375,     -2.6406,     -3.3125,     -2.9688,     -1.9375,     -1.4141,     -1.5703,     -2.6562,     -3.0156,     -3.1875,     -2.3281,     -0.9844,     -2.5938,     -2.1562],
        [    -0.0238,      2.1406,      2.6094,      3.2500,      2.5000,      3.1094,      3.6875,      1.3672,      2.8594,      2.9531,      2.9219,      1.3984,      1.0156,      2.4062,      1.7734],
        [     0.0125,     -0.3008,     -0.5781,      0.0026,      0.3711,      0.1367,      0.2871,      0.3398,      0.0908,      0.2715,      1.1328,      0.4668,      0.9805,      0.6797,      0.5352],
        [    -0.0042,      2.3438,      2.7500,      3.9531,      4.1562,      2.7344,      3.1250,      2.8906,      2.4062,      2.9375,      4.0312,      3.2656,      2.1562,      2.5469,      2.0469],
        [    -0.0374,      2.4688,      2.0625,      1.9141,      2.5469,      2.8750,      3.8438,      0.7656,      3.1250,      1.6953,      2.1562,      1.5156,      1.1719,      2.8906,      1.1797],
        [     0.0027,      1.0469,     -0.2480,      0.2021,      0.5977,      1.6719,      1.9141,     -0.1592,      0.7734,      0.5547,      1.3125,      0.2197,      0.1426,      0.6328,      0.8711],
        [    -0.0054,      1.3047,     -0.2490,      0.1445,      0.2373,      1.2656,      1.4609,     -0.8359,      0.8398,     -0.2559,      0.1611,     -0.9648,     -0.2539,      0.6562,     -1.0156],
        [     0.0001,     -1.0703,     -2.1562,     -2.1562,     -0.8555,     -1.7891,     -0.7734,     -1.7656,     -1.6797,     -1.0234,      0.6562,     -1.9844,     -0.2871,     -1.1016,     -0.7812],
        [    -0.0110,      2.8906,      1.8906,      2.4844,      2.4219,      2.8594,      4.3125,      1.6875,      2.4688,      2.0156,      1.7500,      3.0938,      1.7422,      2.1562,      1.8906],
        [     0.0210,      1.1094,     -0.3770,     -0.0293,      0.9531,      1.2734,      1.8672,      0.5703,      1.7344,      0.6953,      1.1953,      0.5859,      1.7656,      2.3594,      1.5625],
        [    -0.0162,      2.1406,      0.6602,      0.3457,      1.3672,      2.2969,      2.4531,      0.3672,      1.1484,      0.5117,     -0.5938,      2.4531,      0.8945,      1.1094,      1.3672],
        [     0.0208,     -0.5664,     -0.7305,     -0.8398,     -0.3027,      0.2295,     -0.1631,     -0.2852,     -0.2559,     -0.3848,      0.9258,     -0.9062,      1.4609,      0.3066,      0.1187],
        [     0.0113,     -2.0156,     -3.7500,     -4.2812,     -2.2344,     -3.2344,     -1.7969,     -3.7500,     -2.5938,     -2.5469,     -1.0000,     -3.5312,     -1.1328,     -1.8984,     -2.1094],
        [    -0.0144,      2.5000,      0.6484,      1.2891,      1.6250,      1.9453,      3.7812,      0.4844,      1.8828,      0.9922,      1.2188,      2.0156,      1.3906,      1.4531,      1.3359],
        [     0.0034,      1.8594,      1.4609,      1.8828,      1.8750,      1.1406,      2.5156,      1.6016,      1.4922,      0.7305,      2.3281,      1.6641,      2.2812,      1.7812,      2.4531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7267],
        [0.3077],
        [0.2208],
        [0.3026],
        [0.3302],
        [0.2584],
        [0.1856],
        [0.2129],
        [0.1052],
        [0.2678],
        [0.0961],
        [0.1319],
        [0.1588],
        [0.0730]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0106, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0118, 0.0015, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8047, 0.0315, 0.0078, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6914, 0.0250, 0.1050, 0.1592, 0.0193, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0129, 0.0062, 0.0244, 0.0128, 0.0085, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7344, 0.0405, 0.0349, 0.0242, 0.0277, 0.0413, 0.0957, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.0100, 0.0403, 0.1670, 0.0491, 0.0260, 0.0293, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6172, 0.0166, 0.0271, 0.1328, 0.0493, 0.0140, 0.0369, 0.0786, 0.0288, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5586, 0.0242, 0.0139, 0.0325, 0.0549, 0.0188, 0.0439, 0.0786, 0.1016, 0.0742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4180, 0.0126, 0.0069, 0.0259, 0.0299, 0.0190, 0.0051, 0.0140, 0.0229, 0.0110, 0.4355, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.0125, 0.1196, 0.0366, 0.0179, 0.0214, 0.0062, 0.1504, 0.0209, 0.0194, 0.0236, 0.0618, 0.0000, 0.0000, 0.0000],
        [0.0413, 0.0019, 0.0155, 0.0011, 0.0072, 0.0086, 0.0104, 0.1016, 0.0415, 0.0103, 0.0121, 0.0640, 0.6836, 0.0000, 0.0000],
        [0.3320, 0.0161, 0.0167, 0.0306, 0.0728, 0.0229, 0.0403, 0.0508, 0.0544, 0.0593, 0.0889, 0.0117, 0.1543, 0.0496, 0.0000],
        [0.5234, 0.0250, 0.0139, 0.0033, 0.0264, 0.0327, 0.0037, 0.0139, 0.0042, 0.0221, 0.0520, 0.0136, 0.0884, 0.0105, 0.1670]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0085,     -0.1143,      0.0527,     -0.0825,     -0.1533,     -0.1147,     -0.1816,     -0.0003,     -0.1855,     -0.0957,     -0.2773,      0.0120,     -0.0344,     -0.2090,     -0.1299],
        [     0.0400,     -4.5000,     -5.7188,     -6.4375,     -6.0625,     -7.3125,     -8.6250,     -7.6562,     -7.2188,     -6.5312,     -6.3750,     -6.2188,     -7.4062,     -8.0000,     -4.8750],
        [     0.0464,     -4.3750,     -6.4375,     -3.4688,     -4.6875,     -6.8750,     -8.0625,     -6.1562,     -7.2500,     -8.3125,     -4.2812,     -6.7500,     -6.6875,     -7.9688,     -5.4062],
        [     0.0178,     -3.2188,     -4.6250,     -1.6172,     -1.7422,     -3.3906,     -4.8750,     -4.1875,     -3.5312,     -5.9062,     -1.0391,     -4.5938,     -6.5000,     -4.9375,     -3.2812],
        [     0.1328,     -3.1875,     -1.7500,     -1.3359,     -3.4531,     -2.5938,     -3.5000,     -0.4434,     -3.8594,     -5.9688,     -3.3594,     -3.1719,     -2.8125,     -5.0000,     -4.2812],
        [     0.0422,     -4.2500,     -4.9688,     -3.6094,     -4.2500,     -4.6562,     -2.9062,     -3.3438,     -3.0469,     -6.0938,     -5.0625,     -4.7188,     -5.6562,     -4.6562,     -4.1250],
        [     0.0747,     -2.8281,     -2.9688,     -3.3438,     -3.2031,     -2.7969,     -1.9609,     -1.3516,     -1.7969,     -3.5938,     -3.1875,     -3.2500,     -3.3750,     -3.1875,     -2.3438],
        [     0.0835,     -3.5312,     -2.1406,     -0.7148,     -1.9375,     -2.5781,     -2.4531,     -0.1030,     -1.7500,     -3.3906,     -1.5078,     -2.4219,     -1.6172,     -2.2969,     -1.3672],
        [     0.0684,     -3.5469,     -3.0625,     -1.4609,     -2.4531,     -3.7188,     -2.7500,     -1.9844,     -3.0000,     -3.0781,     -2.6406,     -3.9375,     -2.3750,     -4.1875,     -3.3750],
        [     0.0825,     -3.0625,     -3.6094,     -2.7500,     -2.2344,     -3.3125,     -2.4531,     -1.8750,     -1.6172,     -1.9297,      2.6719,     -2.4688,     -2.2969,     -1.5234,     -2.0156],
        [     0.0645,     -3.4375,     -4.0312,     -2.7188,     -2.5781,     -3.0156,     -4.3438,     -3.3281,     -2.8438,     -3.5781,      0.1040,     -3.8438,     -3.0312,     -3.5625,     -2.3594],
        [     0.1572,     -3.5469,     -1.2891,     -2.4688,     -3.1875,     -3.0156,     -4.2500,     -1.0625,     -3.0469,     -3.1094,     -2.9219,     -1.9531,      2.9375,     -2.2812,     -2.1250],
        [     0.0620,     -3.0000,     -0.9141,     -3.5625,     -1.6797,     -1.5078,     -1.3125,      0.9609,      0.0684,     -1.3281,     -1.1641,      0.5000,      2.8750,      1.7578,     -0.0030],
        [     0.0349,     -2.9844,     -2.9531,     -2.3438,     -1.4844,     -2.6406,     -2.0781,     -1.8438,     -1.7734,     -1.6875,     -1.2812,     -3.3125,     -0.7305,     -1.8672,     -2.2656],
        [     0.0292,     -3.0156,     -3.5938,     -5.0312,     -2.9531,     -2.7500,     -4.9062,     -3.6094,     -4.8125,     -3.1406,     -2.2812,     -3.6250,     -1.7500,     -3.8750,     -1.1094]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9000],
        [0.8305],
        [0.8114],
        [0.7006],
        [0.6881],
        [0.7387],
        [0.6448],
        [0.6863],
        [0.7142],
        [0.6851],
        [0.7352],
        [0.6139],
        [0.6218],
        [0.7503]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0055,     -0.5742,     -0.6133,     -0.5625,     -0.5547,     -0.5664,     -0.5391,     -0.5352,     -0.5742,     -0.5898,     -0.5977,     -0.5508,     -0.4922,     -0.5430,     -0.5508],
        [     0.2227,    -26.5000,    -27.6250,    -25.8750,    -25.8750,    -25.8750,    -24.5000,    -24.1250,    -26.5000,    -26.5000,    -27.5000,    -25.0000,    -22.3750,    -25.1250,    -25.6250],
        [     0.2520,    -28.8750,    -30.2500,    -28.1250,    -28.0000,    -28.0000,    -27.0000,    -26.3750,    -28.7500,    -28.8750,    -30.0000,    -27.3750,    -24.3750,    -27.2500,    -27.8750],
        [     0.2402,    -24.0000,    -25.0000,    -23.1250,    -23.2500,    -23.8750,    -22.7500,    -22.2500,    -23.8750,    -24.6250,    -25.1250,    -22.7500,    -20.6250,    -22.7500,    -23.1250],
        [     0.2344,    -24.6250,    -25.5000,    -23.6250,    -24.0000,    -24.2500,    -23.2500,    -22.6250,    -24.6250,    -25.1250,    -25.7500,    -23.2500,    -20.8750,    -23.2500,    -23.7500],
        [     0.2559,    -29.5000,    -30.6250,    -28.6250,    -29.0000,    -28.6250,    -27.6250,    -26.8750,    -29.6250,    -29.5000,    -31.0000,    -28.1250,    -25.1250,    -28.2500,    -29.1250],
        [     0.2168,    -24.6250,    -25.6250,    -23.8750,    -23.8750,    -24.0000,    -23.1250,    -22.5000,    -24.6250,    -24.7500,    -25.6250,    -23.3750,    -21.0000,    -23.3750,    -23.8750],
        [     0.2275,    -25.1250,    -26.0000,    -24.1250,    -24.6250,    -24.7500,    -23.8750,    -23.1250,    -25.2500,    -25.3750,    -26.2500,    -23.8750,    -21.3750,    -23.8750,    -24.3750],
        [     0.2520,    -28.7500,    -29.6250,    -27.7500,    -28.2500,    -28.1250,    -26.7500,    -26.0000,    -28.8750,    -28.6250,    -30.0000,    -26.8750,    -24.2500,    -27.5000,    -27.6250],
        [     0.2617,    -33.2500,    -34.5000,    -32.2500,    -32.2500,    -32.2500,    -31.1250,    -30.2500,    -33.2500,    -32.7500,    -34.5000,    -31.3750,    -28.1250,    -31.5000,    -32.2500],
        [     0.2617,    -29.8750,    -30.7500,    -28.7500,    -28.8750,    -29.0000,    -28.1250,    -27.2500,    -29.6250,    -30.1250,    -31.1250,    -28.2500,    -25.3750,    -28.2500,    -29.1250],
        [     0.2637,    -27.6250,    -29.0000,    -26.6250,    -26.8750,    -27.6250,    -26.2500,    -25.7500,    -27.5000,    -28.3750,    -28.7500,    -26.3750,    -23.5000,    -25.8750,    -26.6250],
        [     0.2578,    -30.1250,    -31.1250,    -28.8750,    -29.5000,    -29.3750,    -28.2500,    -27.3750,    -30.0000,    -30.0000,    -31.3750,    -28.3750,    -25.3750,    -28.6250,    -29.1250],
        [     0.2676,    -29.8750,    -30.8750,    -28.8750,    -29.3750,    -29.2500,    -27.7500,    -26.8750,    -30.0000,    -29.7500,    -31.1250,    -27.8750,    -25.2500,    -28.6250,    -28.5000],
        [     0.3047,    -35.0000,    -36.2500,    -33.7500,    -34.0000,    -34.2500,    -32.7500,    -32.0000,    -34.7500,    -35.0000,    -36.2500,    -33.0000,    -29.6250,    -33.0000,    -33.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8585],
        [0.8385],
        [0.8330],
        [0.8102],
        [0.7861],
        [0.7757],
        [0.7590],
        [0.7516],
        [0.7437],
        [0.7344],
        [0.7444],
        [0.7381],
        [0.7139],
        [0.7186]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7422,     0.1738,     0.0835,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0791,     0.3340,     0.2559,     0.3301,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1758,     0.1748,     0.1177,     0.2715,     0.2598,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1602,     0.1167,     0.0854,     0.1416,     0.3203,     0.1748,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0325,     0.1050,     0.0972,     0.1187,     0.2236,     0.2412,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0635,     0.0359,     0.0562,     0.1001,     0.1270,     0.2852,     0.3301,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0204,     0.0359,     0.0197,     0.0195,     0.1094,     0.0811,     0.2480,     0.2988,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0417,     0.0205,     0.0294,     0.0432,     0.0708,     0.1260,     0.1562,     0.3008,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.0258,     0.0126,     0.0194,     0.0386,     0.0615,     0.0967,     0.1416,     0.1436,     0.3301,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0204,     0.0103,     0.0126,     0.0280,     0.0371,     0.0815,     0.1206,     0.1094,     0.1484,     0.1846,     0.2471,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0103,     0.0043,     0.0089,     0.0171,     0.0215,     0.0586,     0.0615,     0.0625,     0.1426,     0.0879,     0.1602,     0.3633,     0.0000,     0.0000],
        [    0.0017,     0.0048,     0.0022,     0.0024,     0.0135,     0.0116,     0.0405,     0.0498,     0.0284,     0.0903,     0.0471,     0.1396,     0.4531,     0.1147,     0.0000],
        [    0.0009,     0.0176,     0.0093,     0.0093,     0.0155,     0.0292,     0.0364,     0.0449,     0.0869,     0.0747,     0.0708,     0.1113,     0.1484,     0.2559,     0.0889]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0103,     -0.9219,     -0.8906,     -0.8555,     -0.8477,     -0.9180,     -0.9648,     -0.9805,     -0.9961,     -0.9297,     -1.0391,     -1.0000,     -0.9688,     -1.0547,     -1.0547],
        [     0.0664,    -10.9375,    -10.6875,    -10.2500,    -10.1250,    -10.5000,    -10.8750,    -10.8750,    -10.6250,    -10.6875,    -11.1250,    -10.4375,    -10.3125,    -10.6875,    -10.8750],
        [     0.0110,     -1.4375,     -2.1719,     -1.4297,     -1.1328,     -1.2188,     -0.7930,     -0.7891,     -0.8672,     -0.4004,     -0.6406,     -0.4062,      0.1235,     -0.3809,     -0.1729],
        [     0.0067,      1.4453,      1.1797,      1.4297,      1.9922,      1.9531,      2.5781,      2.8438,      2.5625,      3.0625,      2.8125,      3.2188,      3.7656,      3.2500,      3.3125],
        [     0.0786,      0.0723,     -0.3203,      0.5156,      0.4707,      1.4609,      1.8750,      1.8750,      2.0156,      2.7812,      1.5781,      2.6719,      3.5625,      2.7500,      2.6719],
        [     0.0452,     -0.2734,     -0.5820,     -0.0811,      0.7383,      0.1328,      1.1250,      1.2344,      1.1016,      1.6953,      1.1719,      1.6875,      2.5156,      1.8516,      1.6484],
        [    -0.0085,      1.1641,      1.0859,      1.2891,      1.9219,      1.9922,      1.7188,      2.3125,      3.0781,      2.4219,      2.5312,      2.9688,      3.1094,      3.6875,      2.7188],
        [    -0.0029,      3.9844,      3.4062,      3.8594,      4.4375,      4.6875,      5.4688,      5.6250,      5.5312,      6.0625,      5.9062,      6.3438,      6.9062,      6.5625,      6.3438],
        [     0.0469,      0.6133,      0.0107,      0.0064,      1.7266,      1.4297,      2.5469,      2.7344,      2.1562,      3.1406,      2.5625,      3.6094,      4.6562,      3.3125,      3.2500],
        [    -0.0505,      4.7812,      4.0625,      4.4375,      4.8125,      5.3125,      5.8750,      6.0938,      6.7500,      6.4062,      6.6875,      7.0938,      7.3438,      7.8750,      7.5312],
        [     0.0110,      1.3359,      0.6211,      1.0469,      1.7344,      2.2031,      2.6562,      3.0312,      3.0469,      3.8750,      2.9062,      3.9844,      4.9062,      4.1875,      3.5781],
        [    -0.0583,      5.2500,      4.5625,      4.7500,      5.5625,      5.8438,      6.6250,      7.0312,      6.9375,      7.2188,      7.4375,      7.7500,      8.3125,      8.1875,      8.3125],
        [     0.0150,      1.7891,      0.9297,      1.6562,      2.3125,      2.5312,      3.5312,      3.5781,      3.6094,      4.4375,      3.9375,      4.5312,      5.3750,      4.8125,      4.5625],
        [     0.0400,      1.0625,      0.3047,      0.3750,      2.1094,      1.9453,      3.2031,      3.4062,      2.8438,      4.0000,      3.3594,      4.4375,      5.6250,      4.2500,      4.1875],
        [    -0.0579,      2.9375,      2.3125,      2.2969,      2.8125,      3.4531,      3.6719,      3.8750,      4.5312,      4.3750,      4.3438,      4.7812,      5.0625,      5.6250,      4.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6233],
        [0.2118],
        [0.1486],
        [0.1603],
        [0.1556],
        [0.1155],
        [0.0738],
        [0.0790],
        [0.0438],
        [0.0810],
        [0.0461],
        [0.0480],
        [0.0484],
        [0.0517]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0284,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0486,     0.7109,     0.2412,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0237,     0.2812,     0.2969,     0.3984,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0542,     0.8125,     0.0786,     0.0320,     0.0240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0342,     0.8672,     0.0103,     0.0155,     0.0076,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0292,     0.6992,     0.0168,     0.0075,     0.0151,     0.1475,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.0605,     0.0013,     0.0010,     0.0073,     0.0304,     0.8320,     0.0654,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0177,     0.2676,     0.0079,     0.0039,     0.0041,     0.0479,     0.5820,     0.0182,     0.0527,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0098,     0.0569,     0.0026,     0.0027,     0.0023,     0.0200,     0.3789,     0.0183,     0.4199,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.0156,     0.0024,     0.0026,     0.0022,     0.0103,     0.3594,     0.0334,     0.1455,     0.1953,     0.2305,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0066,     0.0017,     0.0021,     0.0056,     0.0144,     0.1611,     0.0194,     0.1245,     0.1465,     0.5117,     0.0053,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0116,     0.0006,     0.0006,     0.0022,     0.0095,     0.1748,     0.0208,     0.1602,     0.0272,     0.5195,     0.0023,     0.0698,     0.0000,     0.0000],
        [    0.0009,     0.0146,     0.0007,     0.0004,     0.0004,     0.0039,     0.0447,     0.0019,     0.0072,     0.0540,     0.8164,     0.0014,     0.0315,     0.0237,     0.0000],
        [    0.0006,     0.0047,     0.0010,     0.0017,     0.0006,     0.0022,     0.0205,     0.0021,     0.0356,     0.0378,     0.4414,     0.0034,     0.0356,     0.1426,     0.2715]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0040,     -0.2598,     -0.4219,     -0.4316,     -0.3418,     -0.3457,     -0.3125,     -0.4473,     -0.3496,     -0.3398,     -0.3730,     -0.4727,     -0.3906,     -0.3496,     -0.3223],
        [     0.0496,      3.5781,      2.2969,      2.5469,      1.6875,      2.5781,      3.7031,      2.1406,      3.8906,      3.3125,      5.4062,      2.2812,      2.6406,      4.2188,      5.1562],
        [     0.0386,      2.7188,      1.6406,      2.4219,      2.4062,      2.9375,      4.5312,      3.3125,      4.6875,      4.1562,      6.1875,      3.8438,      5.0625,      6.0938,      6.4375],
        [     0.0153,      2.4844,      2.5469,      2.8438,      1.9453,      3.0781,      4.7500,      3.6094,      4.3125,      4.6250,      5.8750,      4.4688,      4.9375,      5.2500,      5.8438],
        [     0.0481,      2.7500,      0.4180,     -0.4824,     -0.7656,      3.4688,      4.3750,      2.7344,      4.8750,      4.4062,      7.0312,      1.2734,      4.2188,      5.8125,      5.9062],
        [     0.0889,      3.3125,     -1.1172,     -0.7070,     -1.4219,      0.7188,      2.7031,     -0.1128,      3.1562,      2.0781,      4.6562,     -0.8398,      1.4375,      3.7812,      4.0938],
        [     0.0903,      3.2656,     -0.4590,     -1.2656,     -0.5664,      1.7109,      1.1406,     -2.3438,      0.1465,      0.8281,      0.5547,     -2.7969,     -2.6719,      0.2832,      1.8203],
        [     0.0889,      3.2344,     -0.5820,     -0.8750,      1.1094,      2.5469,      5.8438,      3.3125,      4.0625,      3.1719,      4.0625,      0.8086,      2.5312,      4.4062,      4.8750],
        [     0.1221,      2.8281,     -0.6836,     -1.3906,     -1.3438,      1.1172,      3.6094,      0.1445,      1.2109,      3.8281,      5.5312,     -0.2949,      2.1562,      2.0312,      4.9375],
        [     0.1289,      1.8906,     -1.1953,     -1.1719,     -1.3281,      0.8438,      3.7812,      0.7500,      3.8906,      2.3438,      5.7500,      0.3809,      3.2812,      5.4062,      5.8438],
        [     0.1216,      2.0938,      0.2207,      0.2969,      0.1475,      1.6797,      5.2500,      2.8594,      4.3438,      4.6250,      4.7812,      1.0078,      4.1875,      5.1250,      6.3750],
        [     0.1079,      2.4844,      1.1250,      1.3125,      2.3125,      3.2656,      5.6875,      3.5625,      5.4062,      5.5938,      6.8438,      2.2656,      5.7500,      6.8125,      7.7188],
        [     0.1089,      2.5938,     -0.3496,     -0.3926,      0.9258,      2.4062,      5.3125,      3.1875,      5.2188,      3.4531,      6.4062,      0.9688,      4.4062,      6.2500,      6.4375],
        [     0.1206,      2.8750,     -0.1270,     -0.7188,     -0.8164,      1.5547,      3.9844,      0.8555,      2.1719,      4.1875,      6.9062,      0.5078,      3.6406,      3.3594,      5.9062],
        [     0.1318,      2.2188,      0.6680,      1.1875,      0.1709,      1.4453,      3.6875,      1.3828,      4.2500,      4.3125,      6.7500,      1.8906,      4.2500,      5.6250,      6.2812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8010],
        [0.3876],
        [0.3705],
        [0.4031],
        [0.3874],
        [0.3698],
        [0.3684],
        [0.3590],
        [0.3379],
        [0.3348],
        [0.3383],
        [0.3372],
        [0.3253],
        [0.3305]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0967,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0111,     0.8281,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.7656,     0.1553,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0201,     0.5156,     0.1865,     0.0698,     0.2080,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.6289,     0.0210,     0.0405,     0.1631,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.4238,     0.0046,     0.0195,     0.1924,     0.1611,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.4590,     0.0234,     0.0251,     0.1045,     0.1533,     0.1523,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.1514,     0.0427,     0.0085,     0.1816,     0.3672,     0.1079,     0.0645,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.2139,     0.0923,     0.0109,     0.1338,     0.1025,     0.0498,     0.1943,     0.0796,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.1030,     0.0422,     0.0066,     0.0830,     0.1562,     0.1113,     0.1396,     0.1123,     0.1396,     0.1035,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0850,     0.1406,     0.0198,     0.0157,     0.0457,     0.1001,     0.1377,     0.1436,     0.1689,     0.0869,     0.0552,     0.0000,     0.0000,     0.0000],
        [    0.0684,     0.1201,     0.0161,     0.0050,     0.1118,     0.1621,     0.1123,     0.0532,     0.0942,     0.0762,     0.1230,     0.0119,     0.0449,     0.0000,     0.0000],
        [    0.0074,     0.1396,     0.0757,     0.0042,     0.0723,     0.1094,     0.0398,     0.0752,     0.0649,     0.1914,     0.1152,     0.0236,     0.0571,     0.0237,     0.0000],
        [    0.0006,     0.4238,     0.1245,     0.0125,     0.0229,     0.0167,     0.0261,     0.0859,     0.0684,     0.0806,     0.0121,     0.0110,     0.0315,     0.0143,     0.0684]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0015,     -0.2480,     -0.3105,     -0.3145,     -0.1904,     -0.1953,     -0.2969,     -0.3145,     -0.3379,     -0.3008,     -0.2988,     -0.3535,     -0.3359,     -0.3438,     -0.3145],
        [     0.0232,     -2.2188,     -4.9375,     -5.3750,     -1.9141,     -2.2969,     -4.8125,     -4.6875,     -5.5000,     -4.0938,     -3.6562,     -6.1875,     -5.4688,     -5.6250,     -3.2500],
        [     0.0172,      4.3438,      2.6875,      2.3594,      2.5625,      2.4844,      3.0781,      2.5781,      3.4688,      2.6719,      2.1250,      0.6250,      1.4297,      1.8359,      3.3750],
        [     0.0410,      4.5000,      2.9062,      2.1250,      3.0000,      3.6406,      3.6406,      2.8125,      3.3750,      2.6094,      1.2344,      0.4531,      0.8633,      1.3906,      3.0469],
        [     0.0134,      3.2500,      2.2344,      1.2578,      2.3438,      3.8906,      3.3594,      2.2031,      1.9688,      2.2812,      0.5234,     -0.0234,      0.0977,      0.3945,      1.5391],
        [     0.0197,      4.5625,      1.1484,      1.8047,      3.2031,      3.0312,      4.1250,      0.6602,      0.9453,      1.1797,     -0.0029,     -1.7578,     -1.9766,     -0.3066,      2.2812],
        [    -0.0254,      5.1250,      0.5859,      2.0469,      4.3438,      4.1562,      4.3438,      0.6797,      0.5156,      0.6914,     -0.5625,     -3.7969,     -2.6094,     -1.3984,      2.7344],
        [     0.0236,      3.8125,      0.8359,      0.9062,      2.3281,      2.7188,      2.7031,      1.9609,      3.3281,      2.1406,      1.7734,     -0.9648,      0.3984,      1.3906,      2.0156],
        [     0.0579,      3.5781,      2.3125,      0.7070,      3.7656,      4.4688,      3.2500,      2.7344,      2.8438,      3.1406,      2.9531,      0.2295,      1.1016,      0.6836,      1.5078],
        [     0.0405,      3.8125,      2.9688,      0.8398,      3.3438,      3.0781,      2.3594,      3.7188,      2.8281,      3.2188,      2.5781,      1.9844,      3.1562,      1.7188,      3.2656],
        [     0.0265,      4.0938,      3.1875,      1.3359,      3.8750,      4.5000,      4.1562,      4.3750,      4.1562,      4.3750,      4.0938,      2.3750,      3.5000,      2.5625,      3.2656],
        [     0.0260,      4.2188,      4.7188,      2.7656,      2.5469,      3.6094,      4.4062,      4.7188,      4.7500,      4.9062,      4.2500,      3.7969,      4.8438,      3.9375,      4.6250],
        [     0.0442,      0.6094,     -1.3984,     -2.5625,      0.5391,      0.9141,      0.5430,     -0.2041,      0.3672,      0.1562,      0.6328,     -1.7031,     -0.3730,     -0.5430,      0.4023],
        [     0.0442,      2.9844,      2.3750,     -0.5352,      2.3125,      2.7344,      1.7266,      2.3594,      2.2188,      3.2969,      2.7812,      1.1953,      2.0938,      1.2031,      2.0156],
        [     0.0093,      6.5312,      5.3125,      3.0000,      3.6094,      3.2969,      3.7500,      4.9375,      4.6875,      4.8750,      2.9688,      2.8750,      3.9219,      3.1406,      4.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6956],
        [0.1957],
        [0.2733],
        [0.3074],
        [0.3244],
        [0.2780],
        [0.2736],
        [0.2372],
        [0.2231],
        [0.2494],
        [0.1276],
        [0.1888],
        [0.1432],
        [0.1564]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0762,  -1.3516,  -1.8516,  -1.7891,  -2.0156,  -2.2188,  -1.9141,  -1.5234,  -1.7812,  -1.5781,  -1.3281,  -1.5078,  -1.6641,  -1.3203,  -1.6250],
        [ -0.4727, -12.1250, -12.3750, -10.6250, -13.3125, -14.8125, -12.0000,  -9.0625, -11.2500,  -8.0000,  -8.1875,  -7.8125,  -9.5625,  -7.5938,  -8.6250],
        [ -0.9141, -17.6250, -24.2500, -23.3750, -27.6250, -28.5000, -25.5000, -18.8750, -21.5000, -18.2500, -16.2500, -18.5000, -20.5000, -16.3750, -18.7500],
        [ -1.7891, -32.5000, -45.7500, -45.2500, -48.0000, -52.2500, -47.0000, -35.5000, -41.0000, -38.2500, -30.7500, -36.5000, -40.2500, -32.2500, -38.5000],
        [ -1.6406, -31.5000, -40.0000, -38.2500, -45.5000, -49.0000, -44.0000, -34.0000, -39.5000, -33.5000, -29.5000, -32.5000, -37.7500, -29.7500, -35.2500],
        [ -1.8594, -35.0000, -47.5000, -44.2500, -48.5000, -55.2500, -48.0000, -38.0000, -44.5000, -39.5000, -33.2500, -37.7500, -41.5000, -32.7500, -40.2500],
        [ -1.6406, -32.2500, -41.5000, -38.5000, -45.7500, -49.7500, -44.0000, -33.7500, -39.7500, -34.0000, -29.3750, -31.8750, -36.7500, -28.8750, -34.2500],
        [ -1.2109, -24.5000, -31.1250, -28.7500, -32.7500, -36.2500, -31.8750, -25.0000, -28.8750, -24.7500, -21.2500, -23.7500, -27.1250, -21.2500, -25.0000],
        [ -1.2344, -23.6250, -29.7500, -28.5000, -35.2500, -36.7500, -32.0000, -24.3750, -29.6250, -24.8750, -22.5000, -23.1250, -27.1250, -21.7500, -25.2500],
        [ -2.1562, -39.5000, -53.5000, -51.7500, -60.7500, -64.0000, -56.0000, -43.2500, -51.0000, -44.5000, -38.5000, -42.7500, -48.0000, -38.0000, -45.0000],
        [ -1.4141, -26.6250, -36.7500, -34.7500, -37.0000, -41.0000, -37.0000, -28.6250, -33.7500, -31.5000, -24.8750, -29.5000, -32.2500, -26.0000, -31.0000],
        [ -2.0469, -38.0000, -51.2500, -49.5000, -56.2500, -60.2500, -52.7500, -40.7500, -48.0000, -43.2500, -36.0000, -40.5000, -45.5000, -36.0000, -43.5000],
        [ -1.7031, -31.0000, -41.7500, -40.5000, -47.5000, -51.7500, -45.0000, -33.7500, -39.2500, -34.0000, -29.8750, -32.5000, -37.7500, -28.7500, -34.7500],
        [ -1.2812, -23.7500, -32.0000, -30.3750, -33.5000, -37.5000, -33.0000, -25.6250, -30.1250, -27.6250, -22.8750, -25.7500, -28.8750, -22.5000, -27.6250],
        [ -1.3203, -25.2500, -34.0000, -33.2500, -39.0000, -40.7500, -35.2500, -27.0000, -31.1250, -28.1250, -24.1250, -26.6250, -30.1250, -23.7500, -28.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7329],
        [0.5915],
        [0.6402],
        [0.6444],
        [0.6804],
        [0.5865],
        [0.6318],
        [0.5935],
        [0.6045],
        [0.6631],
        [0.6464],
        [0.6726],
        [0.5951],
        [0.5405]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.9805,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0018,     0.0001,     0.0000,     0.0000,     0.0013,     0.0008,     0.0001,     0.0005,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0317,     -0.6055,     -0.7891,     -0.9727,     -0.8086,     -0.6875,     -0.6602,     -1.0156,     -1.0156,     -1.0547,     -0.9062,     -1.0391,     -1.1875,     -1.2578,     -1.0938],
        [    -0.5625,     -9.8125,    -15.5625,    -19.1250,    -14.4375,    -11.0625,    -11.8125,    -17.0000,    -18.5000,    -19.2500,    -18.8750,    -19.5000,    -22.3750,    -25.3750,    -20.6250],
        [     0.2930,      6.3750,      2.3438,      3.6094,      6.5938,      4.6562,      3.8594,      6.7500,      7.5312,      6.6562,      3.9688,      4.4688,      5.0938,      6.0000,      5.2188],
        [    -0.6445,    -11.5000,    -16.6250,    -20.8750,    -16.1250,    -14.5000,    -13.6875,    -22.1250,    -22.0000,    -24.6250,    -22.3750,    -24.6250,    -28.5000,    -31.0000,    -25.0000],
        [    -0.8594,    -15.6875,    -19.8750,    -26.0000,    -21.5000,    -18.7500,    -17.7500,    -26.6250,    -27.5000,    -27.8750,    -24.3750,    -25.8750,    -30.6250,    -32.2500,    -28.1250],
        [    -0.9688,    -17.3750,    -22.2500,    -27.6250,    -23.5000,    -20.1250,    -19.2500,    -29.1250,    -30.2500,    -30.8750,    -25.7500,    -28.8750,    -34.5000,    -36.5000,    -31.5000],
        [    -0.5664,    -12.3125,    -15.8750,    -20.1250,    -15.4375,    -13.1250,    -12.3750,    -20.2500,    -21.1250,    -21.5000,    -18.2500,    -20.7500,    -23.0000,    -23.0000,    -20.6250],
        [    -0.5898,    -11.0625,    -16.6250,    -20.2500,    -15.7500,    -12.8125,    -12.3125,    -19.6250,    -20.6250,    -22.6250,    -20.5000,    -22.1250,    -25.1250,    -26.6250,    -22.6250],
        [    -0.4102,     -8.7500,    -11.8750,    -13.7500,    -10.9375,     -9.6875,     -9.5625,    -13.8750,    -13.6250,    -14.1250,    -11.9375,    -14.8750,    -16.3750,    -17.8750,    -14.7500],
        [    -0.3125,     -6.6562,     -9.9375,    -11.1875,    -10.3750,     -6.9688,     -7.4375,    -10.1250,     -8.0000,     -8.8125,     -6.9062,    -10.5625,    -11.3125,    -10.6250,    -11.1250],
        [    -0.6992,    -13.2500,    -18.0000,    -19.6250,    -18.0000,    -13.0625,    -12.7500,    -20.7500,    -20.1250,    -20.6250,    -14.7500,    -20.7500,    -23.2500,    -24.1250,    -22.3750],
        [    -0.6406,    -11.9375,    -18.5000,    -21.0000,    -17.6250,    -12.1250,    -13.1250,    -19.5000,    -20.1250,    -19.2500,    -13.6875,    -18.7500,    -20.8750,    -19.3750,    -20.3750],
        [    -0.3984,     -8.7500,    -13.2500,    -16.1250,    -11.0625,     -9.4375,     -9.3125,    -15.1250,    -14.8125,    -15.9375,    -14.6250,    -16.5000,    -17.7500,    -17.0000,    -14.7500],
        [    -0.5586,    -11.5625,    -14.4375,    -16.8750,    -13.3125,    -11.8750,    -11.7500,    -18.0000,    -17.7500,    -17.8750,    -14.0000,    -17.3750,    -19.0000,    -18.1250,    -17.1250],
        [    -0.3691,    -10.0000,    -13.7500,    -16.1250,    -12.5000,    -10.5000,    -10.8125,    -15.5625,    -13.3750,    -14.1875,    -11.6875,    -16.0000,    -15.3125,    -12.6250,    -14.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8433],
        [0.3987],
        [0.7003],
        [0.7492],
        [0.9131],
        [0.8354],
        [0.8616],
        [0.6960],
        [0.7268],
        [0.8797],
        [0.7143],
        [0.8794],
        [0.8258],
        [0.6281]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0056,     -0.7188,     -0.7891,     -0.9609,     -0.9141,     -0.8633,     -0.7617,     -0.9297,     -0.9570,     -0.8477,     -0.8008,     -0.8438,     -0.9336,     -0.9180,     -0.9062],
        [    -0.0270,      7.3438,      4.3750,      2.9375,      1.4922,      1.0625,      2.2031,      2.6562,      2.7500,      2.1250,      0.0272,      1.5000,      0.0154,      0.2676,      1.5312],
        [     0.1699,    -22.7500,    -23.2500,    -28.0000,    -25.8750,    -23.8750,    -20.8750,    -25.5000,    -27.3750,    -23.5000,    -22.3750,    -23.7500,    -25.6250,    -26.2500,    -25.3750],
        [     0.1816,    -24.6250,    -25.5000,    -30.5000,    -27.8750,    -25.7500,    -23.1250,    -27.7500,    -28.7500,    -25.2500,    -22.7500,    -25.3750,    -27.3750,    -27.2500,    -26.8750],
        [     0.1689,    -21.5000,    -24.1250,    -28.6250,    -27.7500,    -25.6250,    -22.8750,    -27.8750,    -28.3750,    -25.5000,    -23.6250,    -25.3750,    -27.7500,    -27.6250,    -28.1250],
        [     0.2256,    -30.1250,    -34.2500,    -41.0000,    -38.5000,    -35.7500,    -32.5000,    -39.7500,    -39.7500,    -36.2500,    -33.5000,    -36.2500,    -39.5000,    -38.2500,    -38.7500],
        [     0.1484,    -17.6250,    -20.6250,    -25.8750,    -25.2500,    -24.2500,    -21.1250,    -25.8750,    -26.3750,    -23.0000,    -22.2500,    -24.0000,    -27.0000,    -26.6250,    -25.2500],
        [     0.1553,    -19.0000,    -22.6250,    -27.5000,    -26.3750,    -25.3750,    -22.5000,    -26.8750,    -27.2500,    -24.6250,    -23.3750,    -25.3750,    -27.8750,    -27.3750,    -27.0000],
        [     0.2334,    -31.1250,    -34.5000,    -40.5000,    -38.2500,    -36.0000,    -32.0000,    -39.5000,    -39.7500,    -35.5000,    -32.0000,    -34.7500,    -37.7500,    -36.0000,    -38.5000],
        [     0.2793,    -37.0000,    -39.5000,    -47.2500,    -44.2500,    -41.2500,    -36.7500,    -44.5000,    -45.7500,    -40.5000,    -37.2500,    -40.2500,    -43.2500,    -42.2500,    -43.7500],
        [     0.2207,    -29.1250,    -32.2500,    -38.5000,    -36.2500,    -34.7500,    -30.0000,    -37.2500,    -38.2500,    -34.5000,    -31.2500,    -33.7500,    -36.5000,    -35.0000,    -36.5000],
        [     0.2207,    -27.5000,    -27.6250,    -36.0000,    -34.5000,    -33.0000,    -28.6250,    -33.0000,    -35.5000,    -31.1250,    -30.0000,    -30.0000,    -34.0000,    -34.2500,    -32.0000],
        [     0.2578,    -33.7500,    -37.7500,    -44.7500,    -41.5000,    -38.7500,    -35.5000,    -42.7500,    -42.5000,    -38.2500,    -34.7500,    -39.0000,    -42.2500,    -40.5000,    -41.2500],
        [     0.3359,    -44.5000,    -49.2500,    -58.5000,    -55.2500,    -51.7500,    -45.5000,    -57.0000,    -57.7500,    -52.0000,    -47.7500,    -51.2500,    -56.0000,    -55.0000,    -56.2500],
        [     0.2070,    -27.5000,    -27.1250,    -33.0000,    -32.0000,    -29.3750,    -26.1250,    -31.5000,    -33.0000,    -28.7500,    -26.7500,    -27.7500,    -30.8750,    -31.0000,    -30.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2212],
        [0.3818],
        [0.4951],
        [0.8892],
        [0.9919],
        [0.9867],
        [0.7639],
        [0.8914],
        [0.6512],
        [0.9710],
        [0.5349],
        [0.8659],
        [0.9062],
        [0.4676]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4238,     0.5781,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.5469,     0.4531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6094,     0.1807,     0.2109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0071,     0.0383,     0.0106,     0.0064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9766,     0.0024,     0.0105,     0.0053,     0.0021,     0.0036,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0608,     0.2158,     0.0452,     0.0216,     0.0437,     0.0214,     0.0229,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5234,     0.1006,     0.2334,     0.0603,     0.0283,     0.0195,     0.0188,     0.0103,     0.0053,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7344,     0.1206,     0.0752,     0.0500,     0.0026,     0.0134,     0.0005,     0.0009,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0011,     0.0055,     0.0025,     0.0009,     0.0017,     0.0004,     0.0003,     0.0001,     0.0002,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4453,     0.1914,     0.1533,     0.0757,     0.0160,     0.0278,     0.0084,     0.0135,     0.0048,     0.0009,     0.0620,     0.0000,     0.0000,     0.0000],
        [    0.6016,     0.0496,     0.1641,     0.0270,     0.0101,     0.0457,     0.0060,     0.0322,     0.0128,     0.0221,     0.0110,     0.0140,     0.0027,     0.0000,     0.0000],
        [    0.7383,     0.0233,     0.0845,     0.0469,     0.0208,     0.0239,     0.0091,     0.0092,     0.0040,     0.0057,     0.0124,     0.0138,     0.0029,     0.0046,     0.0000],
        [    0.0000,     0.4434,     0.1748,     0.1748,     0.0542,     0.0063,     0.0192,     0.0028,     0.0061,     0.0015,     0.0002,     0.0630,     0.0052,     0.0011,     0.0469]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0089,     -0.1631,     -0.1152,     -0.1396,     -0.1709,     -0.1367,     -0.1699,     -0.1387,     -0.1650,     -0.1455,     -0.1357,     -0.1504,     -0.1797,     -0.1670,     -0.1592],
        [    -0.1172,      0.1924,      1.3828,      0.0090,     -1.0859,     -1.2422,     -1.4219,     -1.4609,     -2.0312,     -3.0000,     -3.6094,     -0.6289,     -3.1562,     -3.9375,     -1.1016],
        [     0.1904,      7.3438,      7.1562,      6.6875,      5.4688,      4.3438,      4.8750,      4.0625,      4.0000,      2.9062,      1.5156,      5.9375,      3.6406,      2.5781,      5.3125],
        [     0.5078,     13.4375,     12.1875,     12.3750,     11.1250,      8.8750,     10.8750,      8.3125,      9.3125,      8.2500,      6.0625,     12.1875,     10.1250,      8.6250,     11.8125],
        [    -0.2773,     -5.1562,     -3.4688,     -4.7500,     -5.2812,     -3.8281,     -5.5000,     -3.7812,     -4.4375,     -4.7812,     -4.7812,     -5.0312,     -6.2188,     -6.4375,     -5.2812],
        [    -0.8984,    -18.0000,    -13.8750,    -15.8125,    -18.0000,    -14.3125,    -17.8750,    -14.6875,    -17.1250,    -15.1875,    -14.1250,    -17.1250,    -19.0000,    -18.2500,    -17.8750],
        [    -0.3340,     -6.3438,     -4.8750,     -5.5625,     -6.4688,     -5.9375,     -7.0000,     -5.7500,     -6.8125,     -6.6875,     -6.0312,     -6.3125,     -7.9375,     -7.6875,     -6.9688],
        [    -0.1543,     -2.3906,     -1.1250,     -2.6875,     -3.4219,     -2.7188,     -3.4375,     -3.3594,     -3.4531,     -2.6094,     -3.1562,     -2.7656,     -4.2812,     -4.7188,     -2.5000],
        [    -0.1758,     -1.8281,     -0.9844,     -2.3438,     -3.0938,     -3.4688,     -3.5000,     -4.0938,     -4.7812,     -3.9531,     -3.4531,     -2.7500,     -4.5000,     -4.0312,     -2.5781],
        [     0.4609,     13.6875,     11.8750,     11.4375,     11.0000,      8.0625,      9.6875,      6.3750,      7.0000,      6.4688,      5.2188,     10.5625,      8.3125,      6.7812,     11.0625],
        [    -0.4004,     -7.1875,     -5.5938,     -6.3750,     -7.4375,     -6.7812,     -8.2500,     -8.6875,     -9.5625,     -8.8750,     -6.5938,     -8.1875,     -9.8750,     -9.1250,     -8.1250],
        [     0.3223,      9.7500,      8.8750,      8.6875,      7.9688,      6.4062,      6.9688,      5.7500,      6.2500,      5.2188,      3.4688,      7.7500,      5.6875,      4.3125,      7.5938],
        [    -0.2500,     -2.7500,     -1.5547,     -3.3594,     -4.3438,     -2.8281,     -4.8750,     -3.1875,     -4.0938,     -3.5625,     -4.2500,     -4.0000,     -5.6562,     -6.1562,     -3.8750],
        [    -0.2119,     -3.6719,     -2.3750,     -2.9688,     -3.7812,     -3.6406,     -4.5938,     -4.5938,     -5.4375,     -5.0938,     -4.3125,     -4.1875,     -5.7500,     -5.2812,     -4.0312],
        [     0.4180,     12.0625,     11.1875,     11.1875,     10.0000,      7.8438,      8.9375,      7.0000,      7.8125,      6.4062,      4.5625,     10.1250,      7.6562,      6.0938,      9.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8717],
        [0.2687],
        [0.2892],
        [0.9021],
        [1.0000],
        [0.9795],
        [0.8786],
        [0.8905],
        [0.5112],
        [0.9984],
        [0.3302],
        [0.8651],
        [0.9320],
        [0.3494]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0300,     0.5781,     0.3926,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0248,     0.3574,     0.2734,     0.3438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3359,     0.1650,     0.1592,     0.2119,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.0159,     0.0197,     0.0267,     0.0161,     0.0208,     0.0097,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3438,     0.1089,     0.1309,     0.1553,     0.0928,     0.0811,     0.0327,     0.0540,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0193,     0.0447,     0.0466,     0.0211,     0.0234,     0.0068,     0.0098,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.3418,     0.0952,     0.0879,     0.1147,     0.1201,     0.1172,     0.0586,     0.0293,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.2256,     0.1143,     0.1162,     0.0674,     0.0452,     0.0728,     0.0405,     0.0466,     0.1030,     0.0693,     0.0938,     0.0000,     0.0000,     0.0000],
        [    0.9414,     0.0093,     0.0094,     0.0100,     0.0093,     0.0077,     0.0024,     0.0045,     0.0013,     0.0003,     0.0008,     0.0038,     0.0004,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0002,     0.0001,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1504,     0.0630,     0.0820,     0.0400,     0.0315,     0.0532,     0.0304,     0.0312,     0.0869,     0.0608,     0.0586,     0.0522,     0.1436,     0.1157]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0071,     -0.1719,     -0.1494,     -0.1396,     -0.1611,     -0.1445,     -0.1748,     -0.1475,     -0.1680,     -0.2061,     -0.1787,     -0.1611,     -0.1904,     -0.2334,     -0.2090],
        [    -0.2119,     -5.9062,     -3.8281,     -3.2188,     -5.0312,     -4.2188,     -5.4062,     -4.4062,     -5.1562,     -5.9062,     -5.1875,     -4.2500,     -5.3750,     -6.6250,     -5.5938],
        [     0.0708,      3.0312,      2.6406,      2.7656,      1.8750,      1.8594,      2.0156,      1.6406,      1.6016,      2.3594,      2.0781,      2.3750,      1.7266,      2.4531,      2.7188],
        [     0.0471,      2.7188,      2.4375,      2.6719,      1.6016,      1.7031,      1.8906,      1.5703,      1.1094,      1.7891,      1.6797,      2.2188,      1.5078,      2.0469,      2.4062],
        [    -0.0894,     -0.7969,     -0.8359,     -0.5508,     -1.0469,     -1.4531,     -1.7656,     -1.7891,     -2.4531,     -3.1250,     -3.1406,     -1.5625,     -3.4219,     -3.9531,     -2.5312],
        [    -0.6523,    -16.0000,    -13.1250,    -12.5625,    -14.8125,    -13.8750,    -16.7500,    -14.8750,    -15.5625,    -18.0000,    -17.0000,    -14.4375,    -17.6250,    -21.5000,    -18.7500],
        [    -0.1865,     -4.2188,     -4.0000,     -3.6875,     -4.1875,     -3.9375,     -4.7188,     -3.9844,     -4.5938,     -5.4688,     -4.9688,     -4.4062,     -5.3125,     -6.3125,     -5.8438],
        [    -0.1069,     -1.2578,     -1.0781,     -0.9062,     -1.4219,     -1.5547,     -2.4531,     -1.9609,     -2.4844,     -3.3281,     -3.3438,     -1.9062,     -3.7812,     -4.2812,     -2.7812],
        [    -0.2188,     -3.9688,     -3.1406,     -3.0938,     -3.8906,     -3.7812,     -5.0000,     -4.6562,     -5.5312,     -6.5312,     -5.9688,     -4.1250,     -6.4688,     -7.6875,     -5.6562],
        [     0.1328,      5.2500,      3.9688,      3.8906,      4.1562,      4.1875,      4.1562,      3.4688,      2.7812,      2.8906,      2.9531,      3.4844,      2.8750,      3.5312,      4.1250],
        [    -0.5938,    -15.0625,    -12.5000,    -11.9375,    -13.3750,    -12.3125,    -14.8125,    -13.1250,    -14.5000,    -17.2500,    -15.4375,    -13.6875,    -15.8125,    -19.5000,    -17.6250],
        [     0.0962,      3.8438,      3.1719,      3.1875,      2.6406,      2.2500,      2.7188,      2.1406,      2.2812,      3.0625,      2.6719,      2.9688,      2.4375,      3.3750,      3.5469],
        [    -0.2559,     -4.8750,     -4.8438,     -4.7812,     -4.8750,     -5.0625,     -6.2188,     -5.5938,     -6.8125,     -8.3750,     -7.3750,     -5.7500,     -8.0625,     -9.5000,     -7.6562],
        [    -0.4414,    -10.0000,     -9.2500,     -8.9375,     -9.3750,     -9.2500,    -11.1250,    -10.0000,    -11.0000,    -13.3750,    -12.3125,    -10.4375,    -13.1250,    -15.9375,    -13.5000],
        [     0.1338,      4.8438,      3.9531,      4.2188,      3.5000,      3.2656,      3.7969,      3.2344,      3.2656,      4.2812,      3.9219,      3.8906,      3.7812,      4.7812,      4.5625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9150],
        [0.0822],
        [0.0950],
        [0.4399],
        [0.9980],
        [0.8675],
        [0.4656],
        [0.5907],
        [0.0063],
        [0.9736],
        [0.0113],
        [0.5915],
        [0.8317],
        [0.0011]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7891,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.2695,     0.7266,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1348,     0.4629,     0.4023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0151,     0.0019,     0.0019,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0088,     0.0008,     0.0008,     0.0005,     0.0014,     0.0013,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0001,     0.0001,     0.0001,     0.0002,     0.0004,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0571,     0.2773,     0.2334,     0.0757,     0.0205,     0.0148,     0.0327,     0.0427,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0732,     0.2061,     0.1807,     0.0645,     0.0242,     0.0153,     0.0332,     0.0430,     0.1826,     0.0186,     0.1582,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0640,     0.1650,     0.1455,     0.0537,     0.0204,     0.0135,     0.0286,     0.0361,     0.1445,     0.0156,     0.1270,     0.0300,     0.0171,     0.1387]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0009,     -0.2324,     -0.3164,     -0.3105,     -0.2793,     -0.2139,     -0.2129,     -0.2471,     -0.2539,     -0.3184,     -0.2041,     -0.3125,     -0.2656,     -0.2373,     -0.3184],
        [    -0.0121,     -1.3359,     -3.9062,     -3.8750,     -4.5938,     -4.4688,     -4.5938,     -4.7188,     -4.4375,     -4.4375,     -3.5938,     -4.4062,     -5.2812,     -4.9688,     -4.5625],
        [     0.0112,      4.0625,      5.0625,      4.9375,      4.0000,      3.1250,      2.6562,      3.4219,      3.7188,      4.9688,      3.0312,      4.8438,      3.4844,      3.1562,      4.9375],
        [     0.0142,      4.5000,      5.7500,      5.5938,      4.5312,      3.5781,      3.0781,      3.8594,      4.1875,      5.6562,      3.3750,      5.5000,      4.0000,      3.6094,      5.5938],
        [    -0.0145,     -4.1875,     -6.2812,     -6.2500,     -6.5312,     -5.4062,     -5.6875,     -6.2812,     -6.0625,     -6.5312,     -4.6875,     -6.5312,     -6.7500,     -5.9688,     -6.6875],
        [    -0.1064,    -28.6250,    -39.5000,    -38.7500,    -35.5000,    -28.1250,    -28.1250,    -31.8750,    -32.2500,    -39.7500,    -25.1250,    -39.0000,    -34.5000,    -30.1250,    -39.7500],
        [    -0.0354,     -9.6250,    -13.8750,    -13.6875,    -13.8125,    -11.1250,    -11.6875,    -12.8125,    -12.6250,    -14.2500,    -10.0625,    -14.1250,    -13.8125,    -12.4375,    -14.5000],
        [    -0.0161,     -4.7188,     -7.1562,     -7.1250,     -7.5938,     -6.5938,     -6.6562,     -7.5000,     -7.3125,     -7.5938,     -6.1562,     -7.5312,     -7.8438,     -7.4062,     -7.7812],
        [    -0.0214,     -7.2500,     -9.8750,     -9.8750,     -9.6250,     -8.3125,     -7.8125,     -9.3125,     -9.3750,    -10.3125,     -7.6875,    -10.1250,     -9.5000,     -8.6875,    -10.3750],
        [     0.0171,      5.2812,      6.8750,      6.6875,      5.5625,      4.2500,      3.9375,      4.7500,      5.0000,      6.7500,      3.8594,      6.5938,      5.0625,      4.3750,      6.7188],
        [    -0.0649,    -17.6250,    -24.1250,    -23.7500,    -21.5000,    -17.2500,    -17.0000,    -19.3750,    -19.7500,    -24.3750,    -15.3125,    -24.0000,    -20.7500,    -18.2500,    -24.5000],
        [     0.0129,      4.5312,      5.5625,      5.4375,      4.4062,      3.4219,      2.9531,      3.7344,      4.0000,      5.4375,      3.1562,      5.2812,      3.7969,      3.2812,      5.4062],
        [    -0.0272,     -7.7812,    -11.3125,    -11.1875,    -11.3125,     -9.3750,     -9.6875,    -10.6250,    -10.4375,    -11.6250,     -8.1250,    -11.5625,    -11.4375,    -10.1875,    -11.8125],
        [    -0.0742,    -20.3750,    -28.0000,    -27.5000,    -25.2500,    -20.5000,    -20.5000,    -22.7500,    -23.0000,    -28.1250,    -17.3750,    -27.7500,    -24.5000,    -21.2500,    -28.2500],
        [     0.0120,      4.2812,      5.2188,      5.0938,      4.0938,      3.1250,      2.7188,      3.4688,      3.7031,      5.0938,      2.8594,      4.9688,      3.5156,      2.9531,      5.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0699],
        [0.0466],
        [0.0238],
        [0.1565],
        [1.0000],
        [0.2559],
        [0.1179],
        [0.1696],
        [0.0056],
        [0.9762],
        [0.0050],
        [0.1602],
        [0.6597],
        [0.0054]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Lua:0.0031 forfeiture:0.0016opian:0.0023 slender:0.0135 Lua:0.0032 Pyro:0.0063 fir:0.0074 Lua:0.0027)
 Lua
------
		( forfeiture:0.0016opian:0.0023 slender:0.0135 Lua:0.0032 Pyro:0.0063 fir:0.0074 Lua:0.0027enance:0.0038)
enance Luameal Luameal Luameal Luameal Luameal Luameal Luameal
@ 3050 train 4.0564 , allloss: 4.0564, dt: 1165.74ms, fracRes: 0.3632, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1506, norm(y): 0.9932, norm:0.4525, tok/sec: 112436.78, flops:98.48, batch-reuse:1
@ 3051 train 4.0188 , allloss: 4.0188, dt: 751.59ms, fracRes: 0.3675, norm(attn): 0.4512, norm(output): 0.9688, norm(x): 1.1501, norm(y): 0.9933, norm:0.3721, tok/sec: 174392.84, flops:152.74, batch-reuse:1
@ 3052 train 3.9690 , allloss: 3.9690, dt: 705.89ms, fracRes: 0.3664, norm(attn): 0.4609, norm(output): 0.9688, norm(x): 1.1525, norm(y): 0.9936, norm:0.4199, tok/sec: 185683.96, flops:162.63, batch-reuse:1
@ 3053 train 3.9520 , allloss: 3.9520, dt: 692.85ms, fracRes: 0.3639, norm(attn): 0.4590, norm(output): 0.9766, norm(x): 1.1574, norm(y): 0.9935, norm:0.4130, tok/sec: 189177.48, flops:165.69, batch-reuse:1
@ 3054 train 3.9960 , allloss: 3.9960, dt: 698.42ms, fracRes: 0.3608, norm(attn): 0.4492, norm(output): 0.9922, norm(x): 1.1555, norm(y): 0.9935, norm:0.3703, tok/sec: 187670.45, flops:164.37, batch-reuse:1
@ 3055 train 3.9330 , allloss: 3.9330, dt: 700.05ms, fracRes: 0.3620, norm(attn): 0.4512, norm(output): 0.9766, norm(x): 1.1515, norm(y): 0.9934, norm:0.3721, tok/sec: 187232.25, flops:163.99, batch-reuse:1
@ 3056 train 4.0112 , allloss: 4.0112, dt: 700.93ms, fracRes: 0.3631, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1564, norm(y): 0.9937, norm:0.3889, tok/sec: 186998.45, flops:163.78, batch-reuse:1
@ 3057 train 3.9525 , allloss: 3.9525, dt: 703.41ms, fracRes: 0.3665, norm(attn): 0.4590, norm(output): 0.9805, norm(x): 1.1573, norm(y): 0.9935, norm:0.3812, tok/sec: 186337.00, flops:163.20, batch-reuse:1
@ 3058 train 3.9777 , allloss: 3.9777, dt: 699.01ms, fracRes: 0.3590, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1519, norm(y): 0.9938, norm:0.3716, tok/sec: 187511.38, flops:164.23, batch-reuse:1
@ 3059 train 3.9513 , allloss: 3.9513, dt: 700.42ms, fracRes: 0.3616, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1510, norm(y): 0.9937, norm:0.4129, tok/sec: 187132.70, flops:163.90, batch-reuse:1
@ 3060 train 4.1369 , allloss: 4.1369, dt: 698.31ms, fracRes: 0.3580, norm(attn): 0.4609, norm(output): 0.9883, norm(x): 1.1510, norm(y): 0.9941, norm:0.3943, tok/sec: 187699.41, flops:164.40, batch-reuse:1
@ 3061 train 3.8615 , allloss: 3.8615, dt: 693.81ms, fracRes: 0.3695, norm(attn): 0.4551, norm(output): 0.9805, norm(x): 1.1608, norm(y): 0.9938, norm:0.9372, tok/sec: 188917.06, flops:165.46, batch-reuse:1
@ 3062 train 3.8966 , allloss: 3.8966, dt: 697.53ms, fracRes: 0.3703, norm(attn): 0.4570, norm(output): 0.9883, norm(x): 1.1574, norm(y): 0.9934, norm:0.4258, tok/sec: 187908.05, flops:164.58, batch-reuse:1
@ 3063 train 3.9441 , allloss: 3.9441, dt: 700.04ms, fracRes: 0.3644, norm(attn): 0.4590, norm(output): 0.9688, norm(x): 1.1489, norm(y): 0.9935, norm:0.4299, tok/sec: 187233.78, flops:163.99, batch-reuse:1
@ 3064 train 3.8816 , allloss: 3.8816, dt: 689.03ms, fracRes: 0.3705, norm(attn): 0.4531, norm(output): 0.9648, norm(x): 1.1525, norm(y): 0.9933, norm:0.3898, tok/sec: 190227.78, flops:166.61, batch-reuse:1
@ 3065 train 4.0174 , allloss: 4.0174, dt: 697.52ms, fracRes: 0.3646, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1562, norm(y): 0.9935, norm:0.3854, tok/sec: 187911.13, flops:164.58, batch-reuse:1
@ 3066 train 4.0269 , allloss: 4.0269, dt: 683.05ms, fracRes: 0.3683, norm(attn): 0.4590, norm(output): 0.9883, norm(x): 1.1580, norm(y): 0.9932, norm:0.4058, tok/sec: 191891.67, flops:168.07, batch-reuse:1
@ 3067 train 4.0652 , allloss: 4.0652, dt: 698.15ms, fracRes: 0.3682, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1604, norm(y): 0.9936, norm:0.3953, tok/sec: 187742.68, flops:164.44, batch-reuse:1
@ 3068 train 3.9348 , allloss: 3.9348, dt: 697.55ms, fracRes: 0.3680, norm(attn): 0.4512, norm(output): 0.9766, norm(x): 1.1535, norm(y): 0.9933, norm:0.3721, tok/sec: 187903.04, flops:164.58, batch-reuse:1
@ 3069 train 3.9742 , allloss: 3.9742, dt: 682.36ms, fracRes: 0.3655, norm(attn): 0.4609, norm(output): 0.9766, norm(x): 1.1538, norm(y): 0.9936, norm:0.4222, tok/sec: 192086.11, flops:168.24, batch-reuse:1
@ 3070 train 3.9343 , allloss: 3.9343, dt: 687.78ms, fracRes: 0.3669, norm(attn): 0.4629, norm(output): 0.9766, norm(x): 1.1489, norm(y): 0.9934, norm:0.3935, tok/sec: 190572.26, flops:166.91, batch-reuse:1
@ 3071 train 3.9460 , allloss: 3.9460, dt: 696.57ms, fracRes: 0.3647, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1515, norm(y): 0.9935, norm:0.3939, tok/sec: 188169.05, flops:164.81, batch-reuse:1
@ 3072 train 3.9519 , allloss: 3.9519, dt: 695.16ms, fracRes: 0.3607, norm(attn): 0.4609, norm(output): 0.9844, norm(x): 1.1510, norm(y): 0.9934, norm:0.4093, tok/sec: 188548.06, flops:165.14, batch-reuse:1
@ 3073 train 3.8980 , allloss: 3.8980, dt: 699.21ms, fracRes: 0.3594, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1456, norm(y): 0.9933, norm:0.3686, tok/sec: 187457.80, flops:164.19, batch-reuse:1
@ 3074 train 3.8806 , allloss: 3.8806, dt: 687.34ms, fracRes: 0.3691, norm(attn): 0.4648, norm(output): 0.9766, norm(x): 1.1553, norm(y): 0.9934, norm:0.3819, tok/sec: 190694.82, flops:167.02, batch-reuse:1
@ 3075 train 3.9657 , allloss: 3.9657, dt: 699.08ms, fracRes: 0.3627, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1520, norm(y): 0.9935, norm:0.4312, tok/sec: 187493.09, flops:164.22, batch-reuse:1
@ 3076 train 3.8933 , allloss: 3.8933, dt: 691.39ms, fracRes: 0.3574, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1458, norm(y): 0.9936, norm:0.5128, tok/sec: 189578.23, flops:166.04, batch-reuse:1
@ 3077 train 3.9238 , allloss: 3.9238, dt: 704.09ms, fracRes: 0.3609, norm(attn): 0.4609, norm(output): 0.9844, norm(x): 1.1509, norm(y): 0.9934, norm:0.3693, tok/sec: 186158.05, flops:163.05, batch-reuse:1
@ 3078 train 3.9234 , allloss: 3.9234, dt: 705.89ms, fracRes: 0.3641, norm(attn): 0.4590, norm(output): 0.9844, norm(x): 1.1560, norm(y): 0.9934, norm:0.3783, tok/sec: 185682.08, flops:162.63, batch-reuse:1
@ 3079 train 3.8841 , allloss: 3.8841, dt: 691.98ms, fracRes: 0.3609, norm(attn): 0.4551, norm(output): 0.9844, norm(x): 1.1520, norm(y): 0.9935, norm:0.3794, tok/sec: 189415.85, flops:165.90, batch-reuse:1
@ 3080 train 4.0242 , allloss: 4.0242, dt: 695.11ms, fracRes: 0.3610, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1535, norm(y): 0.9938, norm:0.3839, tok/sec: 188563.65, flops:165.15, batch-reuse:1
@ 3081 train 3.9925 , allloss: 3.9925, dt: 689.53ms, fracRes: 0.3677, norm(attn): 0.4590, norm(output): 0.9844, norm(x): 1.1576, norm(y): 0.9936, norm:0.3671, tok/sec: 190088.21, flops:166.49, batch-reuse:1
@ 3082 train 3.9735 , allloss: 3.9735, dt: 704.74ms, fracRes: 0.3726, norm(attn): 0.4590, norm(output): 0.9766, norm(x): 1.1620, norm(y): 0.9937, norm:0.3814, tok/sec: 185987.13, flops:162.90, batch-reuse:1
@ 3083 train 3.8996 , allloss: 3.8996, dt: 702.89ms, fracRes: 0.3643, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1534, norm(y): 0.9936, norm:0.3568, tok/sec: 186477.06, flops:163.33, batch-reuse:1
@ 3084 train 3.9099 , allloss: 3.9099, dt: 702.33ms, fracRes: 0.3630, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1558, norm(y): 0.9937, norm:0.3775, tok/sec: 186624.93, flops:163.46, batch-reuse:1
@ 3085 train 3.9952 , allloss: 3.9952, dt: 700.03ms, fracRes: 0.3620, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1532, norm(y): 0.9937, norm:0.3973, tok/sec: 187237.09, flops:163.99, batch-reuse:1
@ 3086 train 3.8434 , allloss: 3.8434, dt: 683.23ms, fracRes: 0.3659, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1602, norm(y): 0.9934, norm:0.4014, tok/sec: 191842.58, flops:168.03, batch-reuse:1
@ 3087 train 3.9332 , allloss: 3.9332, dt: 696.56ms, fracRes: 0.3664, norm(attn): 0.4590, norm(output): 0.9805, norm(x): 1.1525, norm(y): 0.9934, norm:0.4058, tok/sec: 188170.40, flops:164.81, batch-reuse:1
@ 3088 train 3.9357 , allloss: 3.9357, dt: 697.92ms, fracRes: 0.3653, norm(attn): 0.4551, norm(output): 0.9766, norm(x): 1.1507, norm(y): 0.9935, norm:0.3595, tok/sec: 187805.08, flops:164.49, batch-reuse:1
@ 3089 train 3.9619 , allloss: 3.9619, dt: 698.77ms, fracRes: 0.3685, norm(attn): 0.4570, norm(output): 0.9766, norm(x): 1.1594, norm(y): 0.9936, norm:0.3939, tok/sec: 187576.39, flops:164.29, batch-reuse:1
@ 3090 train 3.8510 , allloss: 3.8510, dt: 697.15ms, fracRes: 0.3672, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1602, norm(y): 0.9935, norm:0.3728, tok/sec: 188012.35, flops:164.67, batch-reuse:1
@ 3091 train 4.0776 , allloss: 4.0776, dt: 686.24ms, fracRes: 0.3642, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1643, norm(y): 0.9939, norm:0.3825, tok/sec: 191000.38, flops:167.29, batch-reuse:1
@ 3092 train 3.9295 , allloss: 3.9295, dt: 701.61ms, fracRes: 0.3611, norm(attn): 0.4629, norm(output): 0.9805, norm(x): 1.1517, norm(y): 0.9938, norm:0.4027, tok/sec: 186816.01, flops:163.62, batch-reuse:1
@ 3093 train 3.9339 , allloss: 3.9339, dt: 692.73ms, fracRes: 0.3604, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1503, norm(y): 0.9937, norm:0.3523, tok/sec: 189209.84, flops:165.72, batch-reuse:1
@ 3094 train 3.9171 , allloss: 3.9171, dt: 696.45ms, fracRes: 0.3640, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1539, norm(y): 0.9936, norm:0.3656, tok/sec: 188200.09, flops:164.84, batch-reuse:1
@ 3095 train 3.9444 , allloss: 3.9444, dt: 685.48ms, fracRes: 0.3645, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1481, norm(y): 0.9935, norm:0.3594, tok/sec: 191212.70, flops:167.47, batch-reuse:1
@ 3096 train 3.9997 , allloss: 3.9997, dt: 691.11ms, fracRes: 0.3663, norm(attn): 0.4570, norm(output): 0.9766, norm(x): 1.1527, norm(y): 0.9937, norm:0.4021, tok/sec: 189655.20, flops:166.11, batch-reuse:1
@ 3097 train 3.9514 , allloss: 3.9514, dt: 701.05ms, fracRes: 0.3700, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1577, norm(y): 0.9938, norm:0.3814, tok/sec: 186965.70, flops:163.75, batch-reuse:1
@ 3098 train 3.9539 , allloss: 3.9539, dt: 700.91ms, fracRes: 0.3705, norm(attn): 0.4531, norm(output): 0.9688, norm(x): 1.1527, norm(y): 0.9936, norm:0.3811, tok/sec: 187002.14, flops:163.79, batch-reuse:1
@ 3099 train 3.9764 , allloss: 3.9764, dt: 702.00ms, fracRes: 0.3678, norm(attn): 0.4453, norm(output): 0.9844, norm(x): 1.1572, norm(y): 0.9934, norm:0.3713, tok/sec: 186711.58, flops:163.53, batch-reuse:1
@ 3100 train 3.8429 , allloss: 3.8429, dt: 700.35ms, fracRes: 0.3644, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1571, norm(y): 0.9933, norm:0.3719, tok/sec: 187152.83, flops:163.92, batch-reuse:1
@ 3101 train 3.8862 , allloss: 3.8862, dt: 698.19ms, fracRes: 0.3652, norm(attn): 0.4629, norm(output): 0.9805, norm(x): 1.1603, norm(y): 0.9936, norm:0.3942, tok/sec: 187731.59, flops:164.43, batch-reuse:1
@ 3102 train 3.9546 , allloss: 3.9546, dt: 686.31ms, fracRes: 0.3649, norm(attn): 0.4590, norm(output): 0.9766, norm(x): 1.1601, norm(y): 0.9938, norm:0.3970, tok/sec: 190980.80, flops:167.27, batch-reuse:1
@ 3103 train 3.9162 , allloss: 3.9162, dt: 700.93ms, fracRes: 0.3648, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1555, norm(y): 0.9938, norm:0.3756, tok/sec: 186996.93, flops:163.78, batch-reuse:1
@ 3104 train 3.8322 , allloss: 3.8322, dt: 698.74ms, fracRes: 0.3680, norm(attn): 0.4531, norm(output): 0.9844, norm(x): 1.1550, norm(y): 0.9938, norm:0.3784, tok/sec: 187582.98, flops:164.30, batch-reuse:1
@ 3105 train 3.9846 , allloss: 3.9846, dt: 701.81ms, fracRes: 0.3660, norm(attn): 0.4512, norm(output): 0.9844, norm(x): 1.1580, norm(y): 0.9940, norm:0.3951, tok/sec: 186763.91, flops:163.58, batch-reuse:1
@ 3106 train 3.8763 , allloss: 3.8763, dt: 690.71ms, fracRes: 0.3607, norm(attn): 0.4609, norm(output): 0.9844, norm(x): 1.1529, norm(y): 0.9940, norm:0.3901, tok/sec: 189763.42, flops:166.21, batch-reuse:1
@ 3107 train 3.8547 , allloss: 3.8547, dt: 701.34ms, fracRes: 0.3633, norm(attn): 0.4609, norm(output): 0.9766, norm(x): 1.1515, norm(y): 0.9938, norm:0.3879, tok/sec: 186887.78, flops:163.69, batch-reuse:1
@ 3108 train 3.9514 , allloss: 3.9514, dt: 703.04ms, fracRes: 0.3593, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1529, norm(y): 0.9941, norm:0.3873, tok/sec: 186436.78, flops:163.29, batch-reuse:1
@ 3109 train 3.8443 , allloss: 3.8443, dt: 699.65ms, fracRes: 0.3660, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1632, norm(y): 0.9938, norm:0.4508, tok/sec: 187340.65, flops:164.08, batch-reuse:1
@ 3110 train 3.8672 , allloss: 3.8672, dt: 704.14ms, fracRes: 0.3675, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1591, norm(y): 0.9940, norm:0.4052, tok/sec: 186144.00, flops:163.04, batch-reuse:1
@ 3111 train 3.9974 , allloss: 3.9974, dt: 701.31ms, fracRes: 0.3710, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1615, norm(y): 0.9941, norm:0.4560, tok/sec: 186897.18, flops:163.69, batch-reuse:1
@ 3112 train 3.8415 , allloss: 3.8415, dt: 700.58ms, fracRes: 0.3679, norm(attn): 0.4531, norm(output): 0.9766, norm(x): 1.1527, norm(y): 0.9938, norm:0.3828, tok/sec: 187091.81, flops:163.87, batch-reuse:1
@ 3113 train 3.8827 , allloss: 3.8827, dt: 689.90ms, fracRes: 0.3658, norm(attn): 0.4590, norm(output): 0.9844, norm(x): 1.1530, norm(y): 0.9937, norm:0.3835, tok/sec: 189986.25, flops:166.40, batch-reuse:1
@ 3114 train 3.8742 , allloss: 3.8742, dt: 694.69ms, fracRes: 0.3620, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1551, norm(y): 0.9940, norm:0.4074, tok/sec: 188676.25, flops:165.25, batch-reuse:1
@ 3115 train 3.8427 , allloss: 3.8427, dt: 698.90ms, fracRes: 0.3567, norm(attn): 0.4688, norm(output): 0.9844, norm(x): 1.1508, norm(y): 0.9942, norm:0.5093, tok/sec: 187541.19, flops:164.26, batch-reuse:1
@ 3116 train 3.8362 , allloss: 3.8362, dt: 695.69ms, fracRes: 0.3659, norm(attn): 0.4668, norm(output): 0.9805, norm(x): 1.1571, norm(y): 0.9936, norm:0.4178, tok/sec: 188405.71, flops:165.02, batch-reuse:1
@ 3117 train 3.8422 , allloss: 3.8422, dt: 700.22ms, fracRes: 0.3727, norm(attn): 0.4590, norm(output): 0.9844, norm(x): 1.1603, norm(y): 0.9934, norm:0.3976, tok/sec: 187185.84, flops:163.95, batch-reuse:1
@ 3118 train 3.8112 , allloss: 3.8112, dt: 699.06ms, fracRes: 0.3717, norm(attn): 0.4609, norm(output): 0.9766, norm(x): 1.1532, norm(y): 0.9933, norm:0.3928, tok/sec: 187496.48, flops:164.22, batch-reuse:1
@ 3119 train 4.1615 , allloss: 4.1615, dt: 697.52ms, fracRes: 0.3770, norm(attn): 0.4492, norm(output): 0.9883, norm(x): 1.1701, norm(y): 0.9942, norm:0.5787, tok/sec: 187912.03, flops:164.58, batch-reuse:1
@ 3120 train 3.9144 , allloss: 3.9144, dt: 698.51ms, fracRes: 0.3704, norm(attn): 0.4551, norm(output): 0.9805, norm(x): 1.1538, norm(y): 0.9936, norm:0.4723, tok/sec: 187643.80, flops:164.35, batch-reuse:1
@ 3121 train 3.6471 , allloss: 3.6471, dt: 696.66ms, fracRes: 0.3754, norm(attn): 0.4668, norm(output): 0.9844, norm(x): 1.1632, norm(y): 0.9936, norm:0.5343, tok/sec: 188143.42, flops:164.79, batch-reuse:1
@ 3122 train 3.8075 , allloss: 3.8075, dt: 701.24ms, fracRes: 0.3676, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1593, norm(y): 0.9939, norm:0.4884, tok/sec: 186913.32, flops:163.71, batch-reuse:1
@ 3123 train 4.0088 , allloss: 4.0088, dt: 691.97ms, fracRes: 0.3695, norm(attn): 0.4570, norm(output): 0.9922, norm(x): 1.1649, norm(y): 0.9940, norm:0.5260, tok/sec: 189419.50, flops:165.90, batch-reuse:1
@ 3124 train 4.0135 , allloss: 4.0135, dt: 686.39ms, fracRes: 0.3777, norm(attn): 0.4570, norm(output): 0.9922, norm(x): 1.1685, norm(y): 0.9938, norm:0.4367, tok/sec: 190959.05, flops:167.25, batch-reuse:1
@ 3125 train 3.9039 , allloss: 3.9039, dt: 702.81ms, fracRes: 0.3729, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1653, norm(y): 0.9936, norm:0.4434, tok/sec: 186496.61, flops:163.34, batch-reuse:1
@ 3126 train 3.7299 , allloss: 3.7299, dt: 688.44ms, fracRes: 0.3743, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1658, norm(y): 0.9934, norm:0.4562, tok/sec: 190389.38, flops:166.75, batch-reuse:1
@ 3127 train 3.8533 , allloss: 3.8533, dt: 683.58ms, fracRes: 0.3725, norm(attn): 0.4629, norm(output): 0.9727, norm(x): 1.1587, norm(y): 0.9935, norm:0.4214, tok/sec: 191742.15, flops:167.94, batch-reuse:1
@ 3128 train 3.8555 , allloss: 3.8555, dt: 694.01ms, fracRes: 0.3701, norm(attn): 0.4629, norm(output): 0.9805, norm(x): 1.1605, norm(y): 0.9939, norm:0.3965, tok/sec: 188860.66, flops:165.41, batch-reuse:1
@ 3129 train 3.7243 , allloss: 3.7243, dt: 694.84ms, fracRes: 0.3663, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1558, norm(y): 0.9934, norm:0.4363, tok/sec: 188635.66, flops:165.22, batch-reuse:1
@ 3130 train 3.8490 , allloss: 3.8490, dt: 691.75ms, fracRes: 0.3707, norm(attn): 0.4531, norm(output): 0.9805, norm(x): 1.1615, norm(y): 0.9934, norm:0.3627, tok/sec: 189478.00, flops:165.96, batch-reuse:1
@ 3131 train 3.7378 , allloss: 3.7378, dt: 689.50ms, fracRes: 0.3704, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1627, norm(y): 0.9936, norm:0.4298, tok/sec: 190097.67, flops:166.50, batch-reuse:1
@ 3132 train 3.7827 , allloss: 3.7827, dt: 694.38ms, fracRes: 0.3694, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1574, norm(y): 0.9936, norm:0.3860, tok/sec: 188761.57, flops:165.33, batch-reuse:1
@ 3133 train 3.7853 , allloss: 3.7853, dt: 699.47ms, fracRes: 0.3720, norm(attn): 0.4668, norm(output): 0.9844, norm(x): 1.1654, norm(y): 0.9939, norm:0.3790, tok/sec: 187386.88, flops:164.12, batch-reuse:1
@ 3134 train 3.7581 , allloss: 3.7581, dt: 692.11ms, fracRes: 0.3736, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1673, norm(y): 0.9938, norm:0.3726, tok/sec: 189381.20, flops:165.87, batch-reuse:1
@ 3135 train 3.7973 , allloss: 3.7973, dt: 691.24ms, fracRes: 0.3713, norm(attn): 0.4629, norm(output): 0.9766, norm(x): 1.1618, norm(y): 0.9938, norm:0.4017, tok/sec: 189617.66, flops:166.08, batch-reuse:1
@ 3136 train 3.7566 , allloss: 3.7566, dt: 704.15ms, fracRes: 0.3704, norm(attn): 0.4609, norm(output): 0.9883, norm(x): 1.1661, norm(y): 0.9940, norm:0.4355, tok/sec: 186142.61, flops:163.03, batch-reuse:1
@ 3137 train 3.8402 , allloss: 3.8402, dt: 679.81ms, fracRes: 0.3626, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1603, norm(y): 0.9942, norm:0.3689, tok/sec: 192808.02, flops:168.87, batch-reuse:1
@ 3138 train 3.8841 , allloss: 3.8841, dt: 697.92ms, fracRes: 0.3654, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1614, norm(y): 0.9942, norm:0.3835, tok/sec: 187803.93, flops:164.49, batch-reuse:1
@ 3139 train 3.8183 , allloss: 3.8183, dt: 700.76ms, fracRes: 0.3700, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1647, norm(y): 0.9942, norm:0.3698, tok/sec: 187043.05, flops:163.82, batch-reuse:1
@ 3140 train 3.8344 , allloss: 3.8344, dt: 693.82ms, fracRes: 0.3717, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1644, norm(y): 0.9943, norm:0.3970, tok/sec: 188913.36, flops:165.46, batch-reuse:1
@ 3141 train 3.8619 , allloss: 3.8619, dt: 708.07ms, fracRes: 0.3713, norm(attn): 0.4629, norm(output): 0.9883, norm(x): 1.1637, norm(y): 0.9942, norm:0.3673, tok/sec: 185111.13, flops:162.13, batch-reuse:1
@ 3142 train 3.7740 , allloss: 3.7740, dt: 692.76ms, fracRes: 0.3683, norm(attn): 0.4629, norm(output): 0.9766, norm(x): 1.1572, norm(y): 0.9940, norm:0.3628, tok/sec: 189202.42, flops:165.71, batch-reuse:1
@ 3143 train 4.1147 , allloss: 4.1147, dt: 698.14ms, fracRes: 0.3753, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1806, norm(y): 0.9947, norm:0.6466, tok/sec: 187745.89, flops:164.44, batch-reuse:1
@ 3144 train 3.8558 , allloss: 3.8558, dt: 696.95ms, fracRes: 0.3737, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1695, norm(y): 0.9944, norm:0.5334, tok/sec: 188064.57, flops:164.72, batch-reuse:1
@ 3145 train 3.8215 , allloss: 3.8215, dt: 699.29ms, fracRes: 0.3691, norm(attn): 0.4590, norm(output): 0.9844, norm(x): 1.1619, norm(y): 0.9943, norm:0.3969, tok/sec: 187435.24, flops:164.17, batch-reuse:1
@ 3146 train 3.7991 , allloss: 3.7991, dt: 690.13ms, fracRes: 0.3719, norm(attn): 0.4570, norm(output): 0.9844, norm(x): 1.1571, norm(y): 0.9939, norm:0.4663, tok/sec: 189923.84, flops:166.35, batch-reuse:1
@ 3147 train 3.7588 , allloss: 3.7588, dt: 689.08ms, fracRes: 0.3669, norm(attn): 0.4609, norm(output): 0.9844, norm(x): 1.1582, norm(y): 0.9942, norm:0.3942, tok/sec: 190214.16, flops:166.60, batch-reuse:1
@ 3148 train 3.8559 , allloss: 3.8559, dt: 687.04ms, fracRes: 0.3662, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1642, norm(y): 0.9944, norm:0.4052, tok/sec: 190778.33, flops:167.09, batch-reuse:1
@ 3149 train 3.8808 , allloss: 3.8808, dt: 690.89ms, fracRes: 0.3636, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1627, norm(y): 0.9941, norm:0.3971, tok/sec: 189714.04, flops:166.16, batch-reuse:1
@ 3150 train 3.8716 , allloss: 3.8716, dt: 685.41ms, fracRes: 0.3714, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1726, norm(y): 0.9938, norm:0.3807, tok/sec: 191231.59, flops:167.49, batch-reuse:1
@ 3151 train 3.8462 , allloss: 3.8462, dt: 703.91ms, fracRes: 0.3680, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1724, norm(y): 0.9942, norm:0.3639, tok/sec: 186206.03, flops:163.09, batch-reuse:1
@ 3152 train 3.8180 , allloss: 3.8180, dt: 704.32ms, fracRes: 0.3705, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1724, norm(y): 0.9944, norm:0.3887, tok/sec: 186097.68, flops:162.99, batch-reuse:1
@ 3153 train 3.8535 , allloss: 3.8535, dt: 691.77ms, fracRes: 0.3753, norm(attn): 0.4668, norm(output): 0.9844, norm(x): 1.1653, norm(y): 0.9942, norm:0.3743, tok/sec: 189473.49, flops:165.95, batch-reuse:1
@ 3154 train 3.8630 , allloss: 3.8630, dt: 685.13ms, fracRes: 0.3767, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1691, norm(y): 0.9939, norm:0.3549, tok/sec: 191309.65, flops:167.56, batch-reuse:1
@ 3155 train 3.7196 , allloss: 3.7196, dt: 690.28ms, fracRes: 0.3761, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1677, norm(y): 0.9937, norm:0.3700, tok/sec: 189883.16, flops:166.31, batch-reuse:1
@ 3156 train 3.8100 , allloss: 3.8100, dt: 698.15ms, fracRes: 0.3710, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1676, norm(y): 0.9940, norm:0.3229, tok/sec: 187743.13, flops:164.44, batch-reuse:1
@ 3157 train 3.8829 , allloss: 3.8829, dt: 686.51ms, fracRes: 0.3706, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1690, norm(y): 0.9942, norm:0.3826, tok/sec: 190923.83, flops:167.22, batch-reuse:1
@ 3158 train 3.8150 , allloss: 3.8150, dt: 685.76ms, fracRes: 0.3689, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1648, norm(y): 0.9941, norm:0.3909, tok/sec: 191133.98, flops:167.41, batch-reuse:1
@ 3159 train 3.7392 , allloss: 3.7392, dt: 693.45ms, fracRes: 0.3690, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1621, norm(y): 0.9941, norm:0.3427, tok/sec: 189014.94, flops:165.55, batch-reuse:1
@ 3160 train 4.0017 , allloss: 4.0017, dt: 693.45ms, fracRes: 0.3658, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1643, norm(y): 0.9945, norm:0.3861, tok/sec: 189014.36, flops:165.55, batch-reuse:1
@ 3161 train 3.9417 , allloss: 3.9417, dt: 675.66ms, fracRes: 0.3688, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1696, norm(y): 0.9941, norm:0.3878, tok/sec: 193989.86, flops:169.91, batch-reuse:1
@ 3162 train 3.8765 , allloss: 3.8765, dt: 687.84ms, fracRes: 0.3793, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1761, norm(y): 0.9940, norm:0.3665, tok/sec: 190557.27, flops:166.90, batch-reuse:1
@ 3163 train 4.0078 , allloss: 4.0078, dt: 700.40ms, fracRes: 0.3751, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1748, norm(y): 0.9941, norm:0.3660, tok/sec: 187139.45, flops:163.91, batch-reuse:1
@ 3164 train 3.9260 , allloss: 3.9260, dt: 694.59ms, fracRes: 0.3761, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1729, norm(y): 0.9941, norm:0.3746, tok/sec: 188704.56, flops:165.28, batch-reuse:1
@ 3165 train 3.9050 , allloss: 3.9050, dt: 699.24ms, fracRes: 0.3830, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1757, norm(y): 0.9942, norm:0.4094, tok/sec: 187447.96, flops:164.18, batch-reuse:1
@ 3166 train 4.0621 , allloss: 4.0621, dt: 695.09ms, fracRes: 0.3828, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1808, norm(y): 0.9945, norm:0.4477, tok/sec: 188567.66, flops:165.16, batch-reuse:1
@ 3167 train 3.8627 , allloss: 3.8627, dt: 699.44ms, fracRes: 0.3804, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1760, norm(y): 0.9938, norm:0.3722, tok/sec: 187395.63, flops:164.13, batch-reuse:1
@ 3168 train 3.9435 , allloss: 3.9435, dt: 707.38ms, fracRes: 0.3711, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1692, norm(y): 0.9943, norm:0.3924, tok/sec: 185291.00, flops:162.29, batch-reuse:1
@ 3169 train 3.9788 , allloss: 3.9788, dt: 701.97ms, fracRes: 0.3718, norm(attn): 0.4570, norm(output): 0.9961, norm(x): 1.1728, norm(y): 0.9943, norm:0.4265, tok/sec: 186719.19, flops:163.54, batch-reuse:1
@ 3170 train 3.9413 , allloss: 3.9413, dt: 694.08ms, fracRes: 0.3740, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1716, norm(y): 0.9942, norm:0.3697, tok/sec: 188842.82, flops:165.40, batch-reuse:1
@ 3171 train 3.9628 , allloss: 3.9628, dt: 696.70ms, fracRes: 0.3739, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1717, norm(y): 0.9940, norm:0.3758, tok/sec: 188133.95, flops:164.78, batch-reuse:1
@ 3172 train 3.9345 , allloss: 3.9345, dt: 707.20ms, fracRes: 0.3767, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1788, norm(y): 0.9941, norm:0.3808, tok/sec: 185340.29, flops:162.33, batch-reuse:1
@ 3173 train 3.9663 , allloss: 3.9663, dt: 702.55ms, fracRes: 0.3757, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1763, norm(y): 0.9942, norm:0.3716, tok/sec: 186565.72, flops:163.40, batch-reuse:1
@ 3174 train 3.9969 , allloss: 3.9969, dt: 699.30ms, fracRes: 0.3722, norm(attn): 0.4531, norm(output): 0.9922, norm(x): 1.1729, norm(y): 0.9943, norm:0.3949, tok/sec: 187431.92, flops:164.16, batch-reuse:1
@ 3175 train 3.9848 , allloss: 3.9848, dt: 706.35ms, fracRes: 0.3683, norm(attn): 0.4570, norm(output): 0.9961, norm(x): 1.1711, norm(y): 0.9945, norm:0.3745, tok/sec: 185562.38, flops:162.53, batch-reuse:1
@ 3176 train 3.9389 , allloss: 3.9389, dt: 689.09ms, fracRes: 0.3694, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1671, norm(y): 0.9945, norm:0.3630, tok/sec: 190208.96, flops:166.60, batch-reuse:1
@ 3177 train 3.8764 , allloss: 3.8764, dt: 703.38ms, fracRes: 0.3710, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1638, norm(y): 0.9941, norm:0.3503, tok/sec: 186345.40, flops:163.21, batch-reuse:1
@ 3178 train 4.0641 , allloss: 4.0641, dt: 696.54ms, fracRes: 0.3741, norm(attn): 0.4590, norm(output): 0.9883, norm(x): 1.1688, norm(y): 0.9940, norm:0.3654, tok/sec: 188176.71, flops:164.82, batch-reuse:1
@ 3179 train 3.8902 , allloss: 3.8902, dt: 696.39ms, fracRes: 0.3765, norm(attn): 0.4590, norm(output): 0.9883, norm(x): 1.1671, norm(y): 0.9939, norm:0.3768, tok/sec: 188215.24, flops:164.85, batch-reuse:1
@ 3180 train 3.9648 , allloss: 3.9648, dt: 697.37ms, fracRes: 0.3731, norm(attn): 0.4570, norm(output): 0.9922, norm(x): 1.1706, norm(y): 0.9943, norm:0.3923, tok/sec: 187951.48, flops:164.62, batch-reuse:1
@ 3181 train 3.9729 , allloss: 3.9729, dt: 687.90ms, fracRes: 0.3702, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1621, norm(y): 0.9945, norm:0.3680, tok/sec: 190540.43, flops:166.89, batch-reuse:1
@ 3182 train 3.8923 , allloss: 3.8923, dt: 695.27ms, fracRes: 0.3663, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.1740, norm(y): 0.9952, norm:0.8376, tok/sec: 188518.90, flops:165.12, batch-reuse:1
@ 3183 train 4.0057 , allloss: 4.0057, dt: 720.05ms, fracRes: 0.3657, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1622, norm(y): 0.9949, norm:0.3861, tok/sec: 182032.50, flops:159.43, batch-reuse:1
@ 3184 train 4.0245 , allloss: 4.0245, dt: 691.55ms, fracRes: 0.3682, norm(attn): 0.4590, norm(output): 0.9961, norm(x): 1.1706, norm(y): 0.9944, norm:0.3675, tok/sec: 189533.72, flops:166.00, batch-reuse:1
@ 3185 train 4.0866 , allloss: 4.0866, dt: 687.71ms, fracRes: 0.3707, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1740, norm(y): 0.9944, norm:0.3957, tok/sec: 190591.49, flops:166.93, batch-reuse:1
@ 3186 train 4.0133 , allloss: 4.0133, dt: 692.86ms, fracRes: 0.3707, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1731, norm(y): 0.9943, norm:0.3768, tok/sec: 189174.75, flops:165.69, batch-reuse:1
@ 3187 train 3.9450 , allloss: 3.9450, dt: 691.62ms, fracRes: 0.3725, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1700, norm(y): 0.9945, norm:0.3749, tok/sec: 189514.25, flops:165.99, batch-reuse:1
@ 3188 train 3.8883 , allloss: 3.8883, dt: 708.09ms, fracRes: 0.3761, norm(attn): 0.4629, norm(output): 0.9844, norm(x): 1.1668, norm(y): 0.9943, norm:0.3926, tok/sec: 185106.27, flops:162.13, batch-reuse:1
@ 3189 train 3.9237 , allloss: 3.9237, dt: 709.34ms, fracRes: 0.3777, norm(attn): 0.4570, norm(output): 0.9883, norm(x): 1.1694, norm(y): 0.9941, norm:0.3570, tok/sec: 184779.94, flops:161.84, batch-reuse:1
@ 3190 train 4.0041 , allloss: 4.0041, dt: 710.78ms, fracRes: 0.3755, norm(attn): 0.4492, norm(output): 0.9922, norm(x): 1.1706, norm(y): 0.9944, norm:0.4170, tok/sec: 184404.71, flops:161.51, batch-reuse:1
@ 3191 train 3.9207 , allloss: 3.9207, dt: 696.63ms, fracRes: 0.3752, norm(attn): 0.4570, norm(output): 0.9883, norm(x): 1.1700, norm(y): 0.9946, norm:0.3879, tok/sec: 188151.66, flops:164.79, batch-reuse:1
@ 3192 train 3.9542 , allloss: 3.9542, dt: 692.92ms, fracRes: 0.3717, norm(attn): 0.4629, norm(output): 0.9883, norm(x): 1.1705, norm(y): 0.9944, norm:0.3738, tok/sec: 189158.93, flops:165.68, batch-reuse:1
@ 3193 train 3.9473 , allloss: 3.9473, dt: 716.99ms, fracRes: 0.3687, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1680, norm(y): 0.9946, norm:0.3694, tok/sec: 182809.42, flops:160.11, batch-reuse:1
@ 3194 train 3.9523 , allloss: 3.9523, dt: 701.92ms, fracRes: 0.3709, norm(attn): 0.4609, norm(output): 0.9844, norm(x): 1.1643, norm(y): 0.9943, norm:0.3712, tok/sec: 186734.60, flops:163.55, batch-reuse:1
@ 3195 train 3.9421 , allloss: 3.9421, dt: 683.00ms, fracRes: 0.3746, norm(attn): 0.4629, norm(output): 0.9883, norm(x): 1.1743, norm(y): 0.9942, norm:0.3912, tok/sec: 191905.47, flops:168.08, batch-reuse:1
@ 3196 train 3.9784 , allloss: 3.9784, dt: 689.67ms, fracRes: 0.3657, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1692, norm(y): 0.9944, norm:0.4013, tok/sec: 190050.16, flops:166.46, batch-reuse:1
@ 3197 train 3.9460 , allloss: 3.9460, dt: 677.89ms, fracRes: 0.3629, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1633, norm(y): 0.9945, norm:0.3956, tok/sec: 193351.87, flops:169.35, batch-reuse:1
@ 3198 train 3.9129 , allloss: 3.9129, dt: 694.24ms, fracRes: 0.3689, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1703, norm(y): 0.9948, norm:0.3768, tok/sec: 188798.78, flops:165.36, batch-reuse:1
@ 3199 train 3.9331 , allloss: 3.9331, dt: 703.50ms, fracRes: 0.3727, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1691, norm(y): 0.9944, norm:0.3829, tok/sec: 186315.46, flops:163.19, batch-reuse:1
@ 3200 train 3.9314 , allloss: 3.9314, dt: 697.22ms, fracRes: 0.3756, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1852, norm(y): 0.9943, norm:0.5148, tok/sec: 187991.90, flops:164.65, batch-reuse:1
@ 3201 train 3.9481 , allloss: 3.9481, dt: 700.62ms, fracRes: 0.3755, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1728, norm(y): 0.9941, norm:0.3956, tok/sec: 187080.60, flops:163.86, batch-reuse:1
@ 3202 train 3.9402 , allloss: 3.9402, dt: 697.84ms, fracRes: 0.3775, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1699, norm(y): 0.9941, norm:0.3730, tok/sec: 187825.42, flops:164.51, batch-reuse:1
@ 3203 train 4.0349 , allloss: 4.0349, dt: 694.73ms, fracRes: 0.3723, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1655, norm(y): 0.9944, norm:0.3751, tok/sec: 188666.22, flops:165.24, batch-reuse:1
@ 3204 train 3.9182 , allloss: 3.9182, dt: 711.26ms, fracRes: 0.3690, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1647, norm(y): 0.9943, norm:0.4936, tok/sec: 184281.58, flops:161.40, batch-reuse:1
@ 3205 train 3.9313 , allloss: 3.9313, dt: 697.31ms, fracRes: 0.3658, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1662, norm(y): 0.9946, norm:0.4601, tok/sec: 187968.57, flops:164.63, batch-reuse:1
@ 3206 train 3.8667 , allloss: 3.8667, dt: 703.65ms, fracRes: 0.3636, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1659, norm(y): 0.9949, norm:0.4295, tok/sec: 186273.73, flops:163.15, batch-reuse:1
@ 3207 train 4.0186 , allloss: 4.0186, dt: 708.23ms, fracRes: 0.3716, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1753, norm(y): 0.9947, norm:0.4182, tok/sec: 185069.26, flops:162.09, batch-reuse:1
@ 3208 train 3.9919 , allloss: 3.9919, dt: 692.01ms, fracRes: 0.3715, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1728, norm(y): 0.9945, norm:0.4116, tok/sec: 189408.41, flops:165.89, batch-reuse:1
@ 3209 train 3.9443 , allloss: 3.9443, dt: 699.16ms, fracRes: 0.3773, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1751, norm(y): 0.9942, norm:0.4287, tok/sec: 187470.65, flops:164.20, batch-reuse:1
@ 3210 train 3.9183 , allloss: 3.9183, dt: 704.28ms, fracRes: 0.3755, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1728, norm(y): 0.9945, norm:0.4407, tok/sec: 186109.08, flops:163.00, batch-reuse:1
@ 3211 train 3.9803 , allloss: 3.9803, dt: 708.26ms, fracRes: 0.3680, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1630, norm(y): 0.9947, norm:0.3785, tok/sec: 185063.21, flops:162.09, batch-reuse:1
@ 3212 train 4.1305 , allloss: 4.1305, dt: 703.56ms, fracRes: 0.3773, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1726, norm(y): 0.9949, norm:0.4676, tok/sec: 186297.97, flops:163.17, batch-reuse:1
@ 3213 train 3.9626 , allloss: 3.9626, dt: 707.89ms, fracRes: 0.3693, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1721, norm(y): 0.9947, norm:0.4289, tok/sec: 185158.45, flops:162.17, batch-reuse:1
@ 3214 train 4.0422 , allloss: 4.0422, dt: 707.86ms, fracRes: 0.3669, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1728, norm(y): 0.9946, norm:0.4527, tok/sec: 185166.37, flops:162.18, batch-reuse:1
@ 3215 train 3.9292 , allloss: 3.9292, dt: 705.48ms, fracRes: 0.3678, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1752, norm(y): 0.9947, norm:0.4381, tok/sec: 185790.14, flops:162.73, batch-reuse:1
@ 3216 train 3.9821 , allloss: 3.9821, dt: 711.11ms, fracRes: 0.3697, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1653, norm(y): 0.9947, norm:0.4184, tok/sec: 184321.19, flops:161.44, batch-reuse:1
@ 3217 train 3.9309 , allloss: 3.9309, dt: 708.34ms, fracRes: 0.3733, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1710, norm(y): 0.9945, norm:0.3965, tok/sec: 185041.66, flops:162.07, batch-reuse:1
@ 3218 train 4.0185 , allloss: 4.0185, dt: 703.56ms, fracRes: 0.3730, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1699, norm(y): 0.9945, norm:0.4283, tok/sec: 186298.79, flops:163.17, batch-reuse:1
@ 3219 train 4.0439 , allloss: 4.0439, dt: 705.07ms, fracRes: 0.3751, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1777, norm(y): 0.9949, norm:0.4125, tok/sec: 185900.46, flops:162.82, batch-reuse:1
@ 3220 train 3.9770 , allloss: 3.9770, dt: 703.84ms, fracRes: 0.3724, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1732, norm(y): 0.9950, norm:0.4010, tok/sec: 186223.88, flops:163.11, batch-reuse:1
@ 3221 train 3.9313 , allloss: 3.9313, dt: 706.75ms, fracRes: 0.3689, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1690, norm(y): 0.9951, norm:0.3812, tok/sec: 185456.77, flops:162.43, batch-reuse:1
@ 3222 train 3.9507 , allloss: 3.9507, dt: 705.01ms, fracRes: 0.3651, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1741, norm(y): 0.9952, norm:0.3895, tok/sec: 185915.24, flops:162.83, batch-reuse:1
@ 3223 train 3.9358 , allloss: 3.9358, dt: 696.48ms, fracRes: 0.3739, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1679, norm(y): 0.9942, norm:0.3764, tok/sec: 188193.07, flops:164.83, batch-reuse:1
@ 3224 train 3.9781 , allloss: 3.9781, dt: 676.78ms, fracRes: 0.3760, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1727, norm(y): 0.9944, norm:0.3653, tok/sec: 193670.03, flops:169.63, batch-reuse:1
@ 3225 train 3.9922 , allloss: 3.9922, dt: 688.92ms, fracRes: 0.3724, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1747, norm(y): 0.9947, norm:0.3659, tok/sec: 190257.34, flops:166.64, batch-reuse:1
@ 3226 train 3.9239 , allloss: 3.9239, dt: 685.12ms, fracRes: 0.3686, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1725, norm(y): 0.9950, norm:0.4009, tok/sec: 191311.91, flops:167.56, batch-reuse:1
@ 3227 train 3.8880 , allloss: 3.8880, dt: 684.76ms, fracRes: 0.3673, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1697, norm(y): 0.9953, norm:0.3822, tok/sec: 191412.56, flops:167.65, batch-reuse:1
@ 3228 train 3.8179 , allloss: 3.8179, dt: 677.48ms, fracRes: 0.3714, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1713, norm(y): 0.9948, norm:0.4038, tok/sec: 193470.67, flops:169.45, batch-reuse:1
@ 3229 train 4.0035 , allloss: 4.0035, dt: 686.53ms, fracRes: 0.3732, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1718, norm(y): 0.9947, norm:0.4414, tok/sec: 190919.98, flops:167.22, batch-reuse:1
@ 3230 train 4.0934 , allloss: 4.0934, dt: 700.87ms, fracRes: 0.3766, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1788, norm(y): 0.9950, norm:0.4191, tok/sec: 187014.36, flops:163.80, batch-reuse:1
@ 3231 train 3.8836 , allloss: 3.8836, dt: 702.79ms, fracRes: 0.3777, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1783, norm(y): 0.9949, norm:0.3892, tok/sec: 186502.11, flops:163.35, batch-reuse:1
@ 3232 train 3.9093 , allloss: 3.9093, dt: 702.30ms, fracRes: 0.3743, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1744, norm(y): 0.9948, norm:0.3427, tok/sec: 186633.61, flops:163.46, batch-reuse:1
@ 3233 train 3.9605 , allloss: 3.9605, dt: 688.51ms, fracRes: 0.3731, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1800, norm(y): 0.9952, norm:0.4048, tok/sec: 190370.46, flops:166.74, batch-reuse:1
@ 3234 train 4.0667 , allloss: 4.0667, dt: 701.13ms, fracRes: 0.3737, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1807, norm(y): 0.9950, norm:0.4529, tok/sec: 186943.64, flops:163.74, batch-reuse:1
@ 3235 train 3.9350 , allloss: 3.9350, dt: 686.16ms, fracRes: 0.3782, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1889, norm(y): 0.9948, norm:0.3917, tok/sec: 191023.34, flops:167.31, batch-reuse:1
@ 3236 train 4.0405 , allloss: 4.0405, dt: 703.41ms, fracRes: 0.3735, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1785, norm(y): 0.9950, norm:0.4062, tok/sec: 186339.02, flops:163.21, batch-reuse:1
@ 3237 train 3.9190 , allloss: 3.9190, dt: 705.64ms, fracRes: 0.3738, norm(attn): 0.4590, norm(output): 0.9883, norm(x): 1.1681, norm(y): 0.9945, norm:0.4314, tok/sec: 185749.71, flops:162.69, batch-reuse:1
@ 3238 train 3.9455 , allloss: 3.9455, dt: 703.02ms, fracRes: 0.3765, norm(attn): 0.4590, norm(output): 0.9922, norm(x): 1.1729, norm(y): 0.9947, norm:0.3460, tok/sec: 186440.51, flops:163.29, batch-reuse:1
@ 3239 train 3.9498 , allloss: 3.9498, dt: 675.45ms, fracRes: 0.3796, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1750, norm(y): 0.9951, norm:0.5156, tok/sec: 194052.31, flops:169.96, batch-reuse:1
@ 3240 train 3.9926 , allloss: 3.9926, dt: 685.42ms, fracRes: 0.3782, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1769, norm(y): 0.9951, norm:0.4219, tok/sec: 191229.66, flops:167.49, batch-reuse:1
@ 3241 train 3.9582 , allloss: 3.9582, dt: 689.98ms, fracRes: 0.3713, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1721, norm(y): 0.9951, norm:0.4388, tok/sec: 189965.25, flops:166.38, batch-reuse:1
@ 3242 train 3.9535 , allloss: 3.9535, dt: 697.56ms, fracRes: 0.3745, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1797, norm(y): 0.9949, norm:0.4119, tok/sec: 187901.43, flops:164.57, batch-reuse:1
@ 3243 train 3.8804 , allloss: 3.8804, dt: 681.73ms, fracRes: 0.3797, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1808, norm(y): 0.9945, norm:0.4178, tok/sec: 192262.71, flops:168.39, batch-reuse:1
@ 3244 train 3.9141 , allloss: 3.9141, dt: 692.12ms, fracRes: 0.3795, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1817, norm(y): 0.9948, norm:0.4292, tok/sec: 189377.87, flops:165.87, batch-reuse:1
@ 3245 train 3.9227 , allloss: 3.9227, dt: 674.49ms, fracRes: 0.3709, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1756, norm(y): 0.9950, norm:0.4096, tok/sec: 194328.60, flops:170.20, batch-reuse:1
@ 3246 train 3.8477 , allloss: 3.8477, dt: 672.37ms, fracRes: 0.3766, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1768, norm(y): 0.9945, norm:0.3803, tok/sec: 194939.75, flops:170.74, batch-reuse:1
@ 3247 train 3.8980 , allloss: 3.8980, dt: 696.95ms, fracRes: 0.3742, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1769, norm(y): 0.9950, norm:0.3778, tok/sec: 188066.31, flops:164.72, batch-reuse:1
@ 3248 train 4.0187 , allloss: 4.0187, dt: 688.36ms, fracRes: 0.3727, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1816, norm(y): 0.9955, norm:0.3870, tok/sec: 190412.53, flops:166.77, batch-reuse:1
@ 3249 train 3.9143 , allloss: 3.9143, dt: 700.37ms, fracRes: 0.3658, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1776, norm(y): 0.9954, norm:0.4066, tok/sec: 187147.98, flops:163.91, batch-reuse:1
@ 3250 train 3.8885 , allloss: 3.8885, dt: 696.71ms, fracRes: 0.3658, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1759, norm(y): 0.9952, norm:0.3706, tok/sec: 188129.12, flops:164.77, batch-reuse:1
@ 3251 train 3.8686 , allloss: 3.8686, dt: 695.09ms, fracRes: 0.3749, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1767, norm(y): 0.9949, norm:0.3929, tok/sec: 188568.82, flops:165.16, batch-reuse:1
@ 3252 train 3.8863 , allloss: 3.8863, dt: 692.03ms, fracRes: 0.3768, norm(attn): 0.4590, norm(output): 0.9883, norm(x): 1.1757, norm(y): 0.9947, norm:0.3905, tok/sec: 189403.19, flops:165.89, batch-reuse:1
@ 3253 train 4.0041 , allloss: 4.0041, dt: 683.22ms, fracRes: 0.3740, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1810, norm(y): 0.9951, norm:0.3839, tok/sec: 191843.66, flops:168.03, batch-reuse:1
@ 3254 train 3.8180 , allloss: 3.8180, dt: 680.98ms, fracRes: 0.3744, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1736, norm(y): 0.9949, norm:0.3553, tok/sec: 192475.83, flops:168.58, batch-reuse:1
@ 3255 train 3.9379 , allloss: 3.9379, dt: 687.07ms, fracRes: 0.3717, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1719, norm(y): 0.9950, norm:0.3663, tok/sec: 190770.12, flops:167.09, batch-reuse:1
@ 3256 train 3.9638 , allloss: 3.9638, dt: 688.26ms, fracRes: 0.3743, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1767, norm(y): 0.9947, norm:0.3748, tok/sec: 190439.77, flops:166.80, batch-reuse:1
@ 3257 train 3.8884 , allloss: 3.8884, dt: 701.69ms, fracRes: 0.3742, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1786, norm(y): 0.9947, norm:0.3649, tok/sec: 186794.50, flops:163.61, batch-reuse:1
@ 3258 train 3.9026 , allloss: 3.9026, dt: 688.53ms, fracRes: 0.3717, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1745, norm(y): 0.9949, norm:0.3743, tok/sec: 190366.04, flops:166.73, batch-reuse:1
@ 3259 train 3.9099 , allloss: 3.9099, dt: 697.32ms, fracRes: 0.3722, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1760, norm(y): 0.9950, norm:0.3535, tok/sec: 187966.26, flops:164.63, batch-reuse:1
@ 3260 train 3.9181 , allloss: 3.9181, dt: 707.93ms, fracRes: 0.3745, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1737, norm(y): 0.9949, norm:0.3510, tok/sec: 185148.29, flops:162.16, batch-reuse:1
@ 3261 train 3.8928 , allloss: 3.8928, dt: 716.31ms, fracRes: 0.3688, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1718, norm(y): 0.9949, norm:0.3513, tok/sec: 182981.98, flops:160.27, batch-reuse:1
@ 3262 train 3.8888 , allloss: 3.8888, dt: 710.85ms, fracRes: 0.3649, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1717, norm(y): 0.9953, norm:0.3631, tok/sec: 184388.82, flops:161.50, batch-reuse:1
@ 3263 train 3.8498 , allloss: 3.8498, dt: 714.07ms, fracRes: 0.3676, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1778, norm(y): 0.9952, norm:0.3781, tok/sec: 183556.95, flops:160.77, batch-reuse:1
@ 3264 train 3.9399 , allloss: 3.9399, dt: 686.00ms, fracRes: 0.3688, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1767, norm(y): 0.9955, norm:0.3654, tok/sec: 191067.76, flops:167.35, batch-reuse:1
@ 3265 train 3.8918 , allloss: 3.8918, dt: 693.47ms, fracRes: 0.3725, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1706, norm(y): 0.9955, norm:0.3730, tok/sec: 189007.86, flops:165.54, batch-reuse:1
@ 3266 train 3.8127 , allloss: 3.8127, dt: 708.24ms, fracRes: 0.3823, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1786, norm(y): 0.9949, norm:0.3932, tok/sec: 185066.64, flops:162.09, batch-reuse:1
@ 3267 train 3.8461 , allloss: 3.8461, dt: 703.11ms, fracRes: 0.3801, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1748, norm(y): 0.9947, norm:0.3634, tok/sec: 186417.56, flops:163.27, batch-reuse:1
@ 3268 train 3.8546 , allloss: 3.8546, dt: 706.22ms, fracRes: 0.3777, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1759, norm(y): 0.9950, norm:0.4002, tok/sec: 185595.58, flops:162.55, batch-reuse:1
@ 3269 train 3.8859 , allloss: 3.8859, dt: 699.28ms, fracRes: 0.3751, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1740, norm(y): 0.9952, norm:0.3564, tok/sec: 187439.14, flops:164.17, batch-reuse:1
@ 3270 train 3.8605 , allloss: 3.8605, dt: 698.03ms, fracRes: 0.3763, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1770, norm(y): 0.9952, norm:0.3789, tok/sec: 187773.27, flops:164.46, batch-reuse:1
@ 3271 train 3.8783 , allloss: 3.8783, dt: 707.98ms, fracRes: 0.3722, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1693, norm(y): 0.9952, norm:0.3707, tok/sec: 185134.26, flops:162.15, batch-reuse:1
@ 3272 train 3.8976 , allloss: 3.8976, dt: 692.79ms, fracRes: 0.3797, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1799, norm(y): 0.9948, norm:0.3613, tok/sec: 189193.50, flops:165.71, batch-reuse:1
@ 3273 train 3.9265 , allloss: 3.9265, dt: 688.26ms, fracRes: 0.3708, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1696, norm(y): 0.9953, norm:0.3492, tok/sec: 190440.83, flops:166.80, batch-reuse:1
@ 3274 train 3.8690 , allloss: 3.8690, dt: 693.47ms, fracRes: 0.3681, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1736, norm(y): 0.9955, norm:0.3547, tok/sec: 189007.60, flops:165.54, batch-reuse:1
@ 3275 train 3.8815 , allloss: 3.8815, dt: 697.32ms, fracRes: 0.3668, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1731, norm(y): 0.9953, norm:0.3592, tok/sec: 187965.61, flops:164.63, batch-reuse:1
@ 3276 train 3.8877 , allloss: 3.8877, dt: 700.18ms, fracRes: 0.3710, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1777, norm(y): 0.9951, norm:0.3849, tok/sec: 187197.50, flops:163.96, batch-reuse:1
@ 3277 train 3.9233 , allloss: 3.9233, dt: 683.01ms, fracRes: 0.3752, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1810, norm(y): 0.9952, norm:0.3459, tok/sec: 191902.39, flops:168.08, batch-reuse:1
@ 3278 train 3.9050 , allloss: 3.9050, dt: 685.61ms, fracRes: 0.3746, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1782, norm(y): 0.9952, norm:0.3645, tok/sec: 191175.53, flops:167.44, batch-reuse:1
@ 3279 train 3.9127 , allloss: 3.9127, dt: 701.52ms, fracRes: 0.3812, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1787, norm(y): 0.9950, norm:0.4151, tok/sec: 186840.20, flops:163.65, batch-reuse:1
@ 3280 train 3.8685 , allloss: 3.8685, dt: 700.84ms, fracRes: 0.3718, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1755, norm(y): 0.9951, norm:0.3607, tok/sec: 187020.46, flops:163.80, batch-reuse:1
@ 3281 train 3.8833 , allloss: 3.8833, dt: 685.33ms, fracRes: 0.3699, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1716, norm(y): 0.9949, norm:0.3604, tok/sec: 191252.74, flops:167.51, batch-reuse:1
@ 3282 train 3.8745 , allloss: 3.8745, dt: 700.48ms, fracRes: 0.3770, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1792, norm(y): 0.9948, norm:0.3652, tok/sec: 187117.54, flops:163.89, batch-reuse:1
@ 3283 train 3.9267 , allloss: 3.9267, dt: 700.06ms, fracRes: 0.3786, norm(attn): 0.4609, norm(output): 0.9883, norm(x): 1.1786, norm(y): 0.9950, norm:0.3657, tok/sec: 187230.91, flops:163.99, batch-reuse:1
@ 3284 train 3.8966 , allloss: 3.8966, dt: 686.35ms, fracRes: 0.3757, norm(attn): 0.4629, norm(output): 0.9883, norm(x): 1.1750, norm(y): 0.9952, norm:0.3792, tok/sec: 190969.46, flops:167.26, batch-reuse:1
@ 3285 train 3.8706 , allloss: 3.8706, dt: 698.32ms, fracRes: 0.3755, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1781, norm(y): 0.9951, norm:0.3958, tok/sec: 187696.34, flops:164.39, batch-reuse:1
@ 3286 train 3.8944 , allloss: 3.8944, dt: 692.25ms, fracRes: 0.3780, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1837, norm(y): 0.9953, norm:0.3791, tok/sec: 189340.82, flops:165.84, batch-reuse:1
@ 3287 train 3.8237 , allloss: 3.8237, dt: 689.71ms, fracRes: 0.3765, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1759, norm(y): 0.9952, norm:0.3510, tok/sec: 190039.38, flops:166.45, batch-reuse:1
@ 3288 train 4.0178 , allloss: 4.0178, dt: 688.88ms, fracRes: 0.3806, norm(attn): 0.4590, norm(output): 0.9961, norm(x): 1.1794, norm(y): 0.9949, norm:0.5051, tok/sec: 190267.41, flops:166.65, batch-reuse:1
@ 3289 train 3.9639 , allloss: 3.9639, dt: 691.04ms, fracRes: 0.3785, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1859, norm(y): 0.9955, norm:0.4982, tok/sec: 189672.67, flops:166.13, batch-reuse:1
@ 3290 train 3.9926 , allloss: 3.9926, dt: 691.83ms, fracRes: 0.3685, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1741, norm(y): 0.9958, norm:0.4515, tok/sec: 189457.95, flops:165.94, batch-reuse:1
@ 3291 train 3.8091 , allloss: 3.8091, dt: 689.01ms, fracRes: 0.3633, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1751, norm(y): 0.9954, norm:0.4335, tok/sec: 190232.45, flops:166.62, batch-reuse:1
@ 3292 train 4.0298 , allloss: 4.0298, dt: 701.65ms, fracRes: 0.3688, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1783, norm(y): 0.9957, norm:0.4835, tok/sec: 186806.43, flops:163.62, batch-reuse:1
@ 3293 train 3.9773 , allloss: 3.9773, dt: 703.17ms, fracRes: 0.3727, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1810, norm(y): 0.9955, norm:0.4101, tok/sec: 186401.82, flops:163.26, batch-reuse:1
@ 3294 train 3.9197 , allloss: 3.9197, dt: 701.38ms, fracRes: 0.3752, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1818, norm(y): 0.9952, norm:0.4075, tok/sec: 186876.22, flops:163.68, batch-reuse:1
@ 3295 train 3.7792 , allloss: 3.7792, dt: 700.79ms, fracRes: 0.3736, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1727, norm(y): 0.9948, norm:0.4174, tok/sec: 187033.89, flops:163.81, batch-reuse:1
@ 3296 train 3.7993 , allloss: 3.7993, dt: 694.34ms, fracRes: 0.3816, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1769, norm(y): 0.9947, norm:0.4471, tok/sec: 188772.92, flops:165.34, batch-reuse:1
@ 3297 train 3.7212 , allloss: 3.7212, dt: 703.25ms, fracRes: 0.3791, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1721, norm(y): 0.9945, norm:0.3692, tok/sec: 186381.34, flops:163.24, batch-reuse:1
@ 3298 train 3.8059 , allloss: 3.8059, dt: 698.50ms, fracRes: 0.3763, norm(attn): 0.4648, norm(output): 0.9844, norm(x): 1.1665, norm(y): 0.9947, norm:0.4272, tok/sec: 187647.58, flops:164.35, batch-reuse:1
@ 3299 train 3.7201 , allloss: 3.7201, dt: 696.05ms, fracRes: 0.3754, norm(attn): 0.4648, norm(output): 0.9883, norm(x): 1.1700, norm(y): 0.9951, norm:0.3877, tok/sec: 188308.46, flops:164.93, batch-reuse:1
@ 3300 train 3.7901 , allloss: 3.7901, dt: 698.62ms, fracRes: 0.3750, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1749, norm(y): 0.9951, norm:0.3576, tok/sec: 187615.56, flops:164.32, batch-reuse:1
@ 3301 train 3.8080 , allloss: 3.8080, dt: 690.01ms, fracRes: 0.3751, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1777, norm(y): 0.9951, norm:0.3842, tok/sec: 189957.37, flops:166.38, batch-reuse:1
@ 3302 train 3.7792 , allloss: 3.7792, dt: 709.07ms, fracRes: 0.3811, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1827, norm(y): 0.9949, norm:0.4135, tok/sec: 184849.28, flops:161.90, batch-reuse:1
@ 3303 train 3.6978 , allloss: 3.6978, dt: 711.16ms, fracRes: 0.3868, norm(attn): 0.4609, norm(output): 0.9922, norm(x): 1.1845, norm(y): 0.9947, norm:0.3846, tok/sec: 184308.52, flops:161.43, batch-reuse:1
@ 3304 train 3.8131 , allloss: 3.8131, dt: 711.78ms, fracRes: 0.3832, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1807, norm(y): 0.9947, norm:0.4107, tok/sec: 184146.65, flops:161.29, batch-reuse:1
@ 3305 train 3.8850 , allloss: 3.8850, dt: 713.32ms, fracRes: 0.3817, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1840, norm(y): 0.9950, norm:0.3480, tok/sec: 183748.24, flops:160.94, batch-reuse:1
@ 3306 train 3.7522 , allloss: 3.7522, dt: 707.87ms, fracRes: 0.3761, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1810, norm(y): 0.9951, norm:0.3968, tok/sec: 185164.88, flops:162.18, batch-reuse:1
@ 3307 train 3.7467 , allloss: 3.7467, dt: 707.11ms, fracRes: 0.3776, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1757, norm(y): 0.9947, norm:0.3578, tok/sec: 185362.16, flops:162.35, batch-reuse:1
@ 3308 train 3.8198 , allloss: 3.8198, dt: 697.68ms, fracRes: 0.3763, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1696, norm(y): 0.9949, norm:0.3785, tok/sec: 187867.14, flops:164.54, batch-reuse:1
@ 3309 train 3.7736 , allloss: 3.7736, dt: 703.41ms, fracRes: 0.3729, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1689, norm(y): 0.9951, norm:0.3955, tok/sec: 186336.93, flops:163.20, batch-reuse:1
@ 3310 train 3.8132 , allloss: 3.8132, dt: 686.96ms, fracRes: 0.3719, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1735, norm(y): 0.9953, norm:0.3613, tok/sec: 190801.11, flops:167.11, batch-reuse:1
@ 3311 train 3.8213 , allloss: 3.8213, dt: 687.39ms, fracRes: 0.3754, norm(attn): 0.4648, norm(output): 0.9922, norm(x): 1.1781, norm(y): 0.9953, norm:0.5077, tok/sec: 190680.40, flops:167.01, batch-reuse:1
@ 3312 train 3.7523 , allloss: 3.7523, dt: 697.21ms, fracRes: 0.3729, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1793, norm(y): 0.9952, norm:0.4190, tok/sec: 187993.70, flops:164.66, batch-reuse:1
@ 3313 train 3.8209 , allloss: 3.8209, dt: 700.02ms, fracRes: 0.3744, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1780, norm(y): 0.9954, norm:0.3641, tok/sec: 187241.49, flops:164.00, batch-reuse:1
@ 3314 train 3.7741 , allloss: 3.7741, dt: 705.70ms, fracRes: 0.3783, norm(attn): 0.4668, norm(output): 0.9883, norm(x): 1.1731, norm(y): 0.9948, norm:0.4112, tok/sec: 185734.53, flops:162.68, batch-reuse:1
@ 3315 train 3.9195 , allloss: 3.9195, dt: 699.21ms, fracRes: 0.3719, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1737, norm(y): 0.9954, norm:0.3867, tok/sec: 187457.48, flops:164.19, batch-reuse:1
@ 3316 train 3.8190 , allloss: 3.8190, dt: 698.76ms, fracRes: 0.3727, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1790, norm(y): 0.9953, norm:0.3789, tok/sec: 187576.77, flops:164.29, batch-reuse:1
@ 3317 train 3.8212 , allloss: 3.8212, dt: 711.05ms, fracRes: 0.3708, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1759, norm(y): 0.9953, norm:0.3958, tok/sec: 184336.39, flops:161.45, batch-reuse:1
@ 3318 train 3.6048 , allloss: 3.6048, dt: 697.52ms, fracRes: 0.3771, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1803, norm(y): 0.9948, norm:0.3892, tok/sec: 187910.87, flops:164.58, batch-reuse:1
@ 3319 train 3.8757 , allloss: 3.8757, dt: 709.27ms, fracRes: 0.3741, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1727, norm(y): 0.9951, norm:0.3486, tok/sec: 184799.45, flops:161.86, batch-reuse:1
@ 3320 train 3.9060 , allloss: 3.9060, dt: 707.86ms, fracRes: 0.3793, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1809, norm(y): 0.9955, norm:0.4027, tok/sec: 185166.75, flops:162.18, batch-reuse:1
@ 3321 train 3.8468 , allloss: 3.8468, dt: 704.90ms, fracRes: 0.3796, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1831, norm(y): 0.9957, norm:0.3829, tok/sec: 185943.34, flops:162.86, batch-reuse:1
@ 3322 train 3.6763 , allloss: 3.6763, dt: 693.72ms, fracRes: 0.3864, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1876, norm(y): 0.9950, norm:0.3671, tok/sec: 188939.78, flops:165.48, batch-reuse:1
@ 3323 train 3.6663 , allloss: 3.6663, dt: 676.73ms, fracRes: 0.3846, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1849, norm(y): 0.9950, norm:0.3954, tok/sec: 193684.90, flops:169.64, batch-reuse:1
@ 3324 train 3.7782 , allloss: 3.7782, dt: 695.42ms, fracRes: 0.3775, norm(attn): 0.4629, norm(output): 0.9922, norm(x): 1.1778, norm(y): 0.9953, norm:0.3726, tok/sec: 188478.64, flops:165.08, batch-reuse:1
@ 3325 train 3.8509 , allloss: 3.8509, dt: 697.07ms, fracRes: 0.3851, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1870, norm(y): 0.9951, norm:0.4111, tok/sec: 188033.76, flops:164.69, batch-reuse:1
@ 3326 train 3.7749 , allloss: 3.7749, dt: 693.57ms, fracRes: 0.3838, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1853, norm(y): 0.9949, norm:0.4026, tok/sec: 188981.09, flops:165.52, batch-reuse:1
@ 3327 train 3.7648 , allloss: 3.7648, dt: 697.53ms, fracRes: 0.3861, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1843, norm(y): 0.9949, norm:0.3746, tok/sec: 187908.82, flops:164.58, batch-reuse:1
@ 3328 train 3.7392 , allloss: 3.7392, dt: 698.45ms, fracRes: 0.3820, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1776, norm(y): 0.9951, norm:0.4022, tok/sec: 187661.93, flops:164.36, batch-reuse:1
@ 3329 train 3.7245 , allloss: 3.7245, dt: 702.20ms, fracRes: 0.3826, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1790, norm(y): 0.9952, norm:0.3802, tok/sec: 186660.23, flops:163.49, batch-reuse:1
@ 3330 train 3.7079 , allloss: 3.7079, dt: 685.53ms, fracRes: 0.3808, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1795, norm(y): 0.9949, norm:0.3923, tok/sec: 191199.00, flops:167.46, batch-reuse:1
@ 3331 train 3.5208 , allloss: 3.5208, dt: 701.72ms, fracRes: 0.3813, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1822, norm(y): 0.9945, norm:0.3712, tok/sec: 186787.39, flops:163.60, batch-reuse:1
@ 3332 train 3.8135 , allloss: 3.8135, dt: 707.54ms, fracRes: 0.3720, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1773, norm(y): 0.9957, norm:0.3537, tok/sec: 185249.80, flops:162.25, batch-reuse:1
@ 3333 train 3.7270 , allloss: 3.7270, dt: 696.85ms, fracRes: 0.3760, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1768, norm(y): 0.9956, norm:0.3766, tok/sec: 188093.01, flops:164.74, batch-reuse:1
@ 3334 train 3.7382 , allloss: 3.7382, dt: 704.40ms, fracRes: 0.3823, norm(attn): 0.4668, norm(output): 0.9922, norm(x): 1.1798, norm(y): 0.9951, norm:0.3901, tok/sec: 186076.71, flops:162.98, batch-reuse:1
@ 3335 train 3.6953 , allloss: 3.6953, dt: 699.09ms, fracRes: 0.3811, norm(attn): 0.4688, norm(output): 0.9922, norm(x): 1.1788, norm(y): 0.9950, norm:0.3972, tok/sec: 187489.19, flops:164.21, batch-reuse:1
@ 3336 train 3.8322 , allloss: 3.8322, dt: 707.28ms, fracRes: 0.3849, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1886, norm(y): 0.9953, norm:0.3676, tok/sec: 185318.24, flops:162.31, batch-reuse:1
@ 3337 train 3.7336 , allloss: 3.7336, dt: 714.42ms, fracRes: 0.3830, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1862, norm(y): 0.9954, norm:0.3758, tok/sec: 183467.21, flops:160.69, batch-reuse:1
@ 3338 train 3.7022 , allloss: 3.7022, dt: 703.67ms, fracRes: 0.3815, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1851, norm(y): 0.9952, norm:0.3681, tok/sec: 186268.56, flops:163.14, batch-reuse:1
@ 3339 train 3.7715 , allloss: 3.7715, dt: 703.13ms, fracRes: 0.3812, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1840, norm(y): 0.9953, norm:0.3511, tok/sec: 186413.45, flops:163.27, batch-reuse:1
@ 3340 train 3.6897 , allloss: 3.6897, dt: 703.39ms, fracRes: 0.3800, norm(attn): 0.4688, norm(output): 0.9922, norm(x): 1.1830, norm(y): 0.9953, norm:0.3822, tok/sec: 186343.88, flops:163.21, batch-reuse:1
@ 3341 train 4.0530 , allloss: 4.0530, dt: 708.07ms, fracRes: 0.3786, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1856, norm(y): 0.9962, norm:0.4308, tok/sec: 185112.57, flops:162.13, batch-reuse:1
@ 3342 train 3.9172 , allloss: 3.9172, dt: 696.53ms, fracRes: 0.3870, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1942, norm(y): 0.9955, norm:0.6548, tok/sec: 188179.48, flops:164.82, batch-reuse:1
@ 3343 train 3.9021 , allloss: 3.9021, dt: 694.35ms, fracRes: 0.3816, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1846, norm(y): 0.9951, norm:0.4830, tok/sec: 188768.77, flops:165.33, batch-reuse:1
@ 3344 train 3.9689 , allloss: 3.9689, dt: 692.77ms, fracRes: 0.3759, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1801, norm(y): 0.9954, norm:0.3939, tok/sec: 189200.72, flops:165.71, batch-reuse:1
@ 3345 train 3.9038 , allloss: 3.9038, dt: 707.27ms, fracRes: 0.3739, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1792, norm(y): 0.9958, norm:0.4427, tok/sec: 185319.99, flops:162.31, batch-reuse:1
@ 3346 train 3.8872 , allloss: 3.8872, dt: 708.64ms, fracRes: 0.3775, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1853, norm(y): 0.9955, norm:0.4112, tok/sec: 184963.84, flops:162.00, batch-reuse:1
@ 3347 train 3.9099 , allloss: 3.9099, dt: 705.57ms, fracRes: 0.3797, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1867, norm(y): 0.9955, norm:0.4274, tok/sec: 185768.61, flops:162.71, batch-reuse:1
@ 3348 train 3.8647 , allloss: 3.8647, dt: 697.78ms, fracRes: 0.3847, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1896, norm(y): 0.9954, norm:0.3937, tok/sec: 187842.30, flops:164.52, batch-reuse:1
@ 3349 train 3.8270 , allloss: 3.8270, dt: 695.08ms, fracRes: 0.3800, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1830, norm(y): 0.9953, norm:0.3964, tok/sec: 188570.44, flops:165.16, batch-reuse:1
@ 3350 train 3.8815 , allloss: 3.8815, dt: 694.70ms, fracRes: 0.3837, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1862, norm(y): 0.9950, norm:0.4093, tok/sec: 188674.64, flops:165.25, batch-reuse:1
@ 3351 train 4.0088 , allloss: 4.0088, dt: 705.04ms, fracRes: 0.3797, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1874, norm(y): 0.9958, norm:0.4287, tok/sec: 185908.01, flops:162.83, batch-reuse:1
@ 3352 train 3.9503 , allloss: 3.9503, dt: 703.55ms, fracRes: 0.3823, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1870, norm(y): 0.9961, norm:0.4233, tok/sec: 186299.87, flops:163.17, batch-reuse:1
@ 3353 train 3.9761 , allloss: 3.9761, dt: 699.05ms, fracRes: 0.3782, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1855, norm(y): 0.9961, norm:0.4107, tok/sec: 187500.13, flops:164.22, batch-reuse:1
@ 3354 train 3.9265 , allloss: 3.9265, dt: 694.02ms, fracRes: 0.3763, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1868, norm(y): 0.9959, norm:0.3769, tok/sec: 188859.17, flops:165.41, batch-reuse:1
@ 3355 train 4.0072 , allloss: 4.0072, dt: 685.45ms, fracRes: 0.3734, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1864, norm(y): 0.9961, norm:0.3971, tok/sec: 191221.08, flops:167.48, batch-reuse:1
@ 3356 train 3.9243 , allloss: 3.9243, dt: 684.01ms, fracRes: 0.3829, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1927, norm(y): 0.9960, norm:0.4133, tok/sec: 191623.12, flops:167.83, batch-reuse:1
@ 3357 train 3.9239 , allloss: 3.9239, dt: 698.53ms, fracRes: 0.3796, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1889, norm(y): 0.9961, norm:0.4002, tok/sec: 187640.28, flops:164.35, batch-reuse:1
@ 3358 train 3.9758 , allloss: 3.9758, dt: 697.08ms, fracRes: 0.3791, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1825, norm(y): 0.9956, norm:0.3875, tok/sec: 188030.48, flops:164.69, batch-reuse:1
@ 3359 train 3.8965 , allloss: 3.8965, dt: 685.63ms, fracRes: 0.3805, norm(attn): 0.4570, norm(output): 1.0000, norm(x): 1.1865, norm(y): 0.9955, norm:0.3720, tok/sec: 191170.54, flops:167.44, batch-reuse:1
@ 3360 train 3.9369 , allloss: 3.9369, dt: 696.30ms, fracRes: 0.3798, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1832, norm(y): 0.9959, norm:0.3607, tok/sec: 188241.08, flops:164.87, batch-reuse:1
@ 3361 train 3.9834 , allloss: 3.9834, dt: 697.02ms, fracRes: 0.3787, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1875, norm(y): 0.9961, norm:0.3654, tok/sec: 188047.27, flops:164.70, batch-reuse:1
@ 3362 train 3.8482 , allloss: 3.8482, dt: 698.33ms, fracRes: 0.3766, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1860, norm(y): 0.9961, norm:0.3685, tok/sec: 187694.48, flops:164.39, batch-reuse:1
@ 3363 train 3.9277 , allloss: 3.9277, dt: 699.50ms, fracRes: 0.3794, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1838, norm(y): 0.9959, norm:0.3637, tok/sec: 187378.96, flops:164.12, batch-reuse:1
@ 3364 train 3.9291 , allloss: 3.9291, dt: 679.23ms, fracRes: 0.3825, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1914, norm(y): 0.9958, norm:0.4005, tok/sec: 192971.12, flops:169.01, batch-reuse:1
@ 3365 train 3.8947 , allloss: 3.8947, dt: 702.46ms, fracRes: 0.3744, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1871, norm(y): 0.9960, norm:0.3717, tok/sec: 186591.05, flops:163.43, batch-reuse:1
@ 3366 train 4.0651 , allloss: 4.0651, dt: 702.36ms, fracRes: 0.3749, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1922, norm(y): 0.9964, norm:0.3829, tok/sec: 186615.62, flops:163.45, batch-reuse:1
@ 3367 train 3.9412 , allloss: 3.9412, dt: 685.21ms, fracRes: 0.3740, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1874, norm(y): 0.9960, norm:0.3935, tok/sec: 191288.61, flops:167.54, batch-reuse:1
@ 3368 train 4.0171 , allloss: 4.0171, dt: 693.52ms, fracRes: 0.3821, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1928, norm(y): 0.9959, norm:0.3869, tok/sec: 188996.10, flops:165.53, batch-reuse:1
@ 3369 train 3.9401 , allloss: 3.9401, dt: 694.45ms, fracRes: 0.3831, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1913, norm(y): 0.9960, norm:0.3752, tok/sec: 188743.49, flops:165.31, batch-reuse:1
@ 3370 train 3.9095 , allloss: 3.9095, dt: 699.93ms, fracRes: 0.3848, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1917, norm(y): 0.9957, norm:0.3726, tok/sec: 187263.50, flops:164.02, batch-reuse:1
@ 3371 train 3.8934 , allloss: 3.8934, dt: 696.69ms, fracRes: 0.3882, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1879, norm(y): 0.9956, norm:0.3777, tok/sec: 188136.27, flops:164.78, batch-reuse:1
@ 3372 train 3.9073 , allloss: 3.9073, dt: 697.97ms, fracRes: 0.3911, norm(attn): 0.4590, norm(output): 1.0000, norm(x): 1.1891, norm(y): 0.9952, norm:0.3947, tok/sec: 187788.98, flops:164.48, batch-reuse:1
@ 3373 train 3.9536 , allloss: 3.9536, dt: 691.51ms, fracRes: 0.3875, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1919, norm(y): 0.9959, norm:0.3842, tok/sec: 189545.35, flops:166.01, batch-reuse:1
@ 3374 train 3.8869 , allloss: 3.8869, dt: 691.00ms, fracRes: 0.3839, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1904, norm(y): 0.9961, norm:0.3967, tok/sec: 189683.34, flops:166.14, batch-reuse:1
@ 3375 train 3.8383 , allloss: 3.8383, dt: 689.86ms, fracRes: 0.3824, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1844, norm(y): 0.9961, norm:0.3689, tok/sec: 189998.27, flops:166.41, batch-reuse:1
@ 3376 train 4.0918 , allloss: 4.0918, dt: 690.28ms, fracRes: 0.3810, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1914, norm(y): 0.9961, norm:0.3824, tok/sec: 189883.23, flops:166.31, batch-reuse:1
@ 3377 train 3.9770 , allloss: 3.9770, dt: 693.13ms, fracRes: 0.3853, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2245, norm(y): 0.9965, norm:0.8330, tok/sec: 189102.26, flops:165.63, batch-reuse:1
@ 3378 train 4.0289 , allloss: 4.0289, dt: 691.44ms, fracRes: 0.3703, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1859, norm(y): 0.9964, norm:0.5329, tok/sec: 189564.89, flops:166.03, batch-reuse:1
@ 3379 train 3.8823 , allloss: 3.8823, dt: 684.96ms, fracRes: 0.3673, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1789, norm(y): 0.9962, norm:0.4160, tok/sec: 191356.26, flops:167.60, batch-reuse:1
@ 3380 train 3.9428 , allloss: 3.9428, dt: 698.05ms, fracRes: 0.3680, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1811, norm(y): 0.9965, norm:0.4548, tok/sec: 187769.42, flops:164.46, batch-reuse:1
@ 3381 train 3.9300 , allloss: 3.9300, dt: 696.52ms, fracRes: 0.3749, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1824, norm(y): 0.9962, norm:0.4182, tok/sec: 188180.45, flops:164.82, batch-reuse:1
@ 3382 train 3.9726 , allloss: 3.9726, dt: 694.10ms, fracRes: 0.3758, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1825, norm(y): 0.9961, norm:0.4133, tok/sec: 188838.34, flops:165.40, batch-reuse:1
@ 3383 train 3.9770 , allloss: 3.9770, dt: 693.36ms, fracRes: 0.3826, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1864, norm(y): 0.9957, norm:0.4009, tok/sec: 189039.05, flops:165.57, batch-reuse:1
@ 3384 train 3.9234 , allloss: 3.9234, dt: 695.22ms, fracRes: 0.3850, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1904, norm(y): 0.9957, norm:0.3809, tok/sec: 188534.10, flops:165.13, batch-reuse:1
@ 3385 train 3.8732 , allloss: 3.8732, dt: 697.91ms, fracRes: 0.3846, norm(attn): 0.4609, norm(output): 1.0000, norm(x): 1.1884, norm(y): 0.9955, norm:0.3618, tok/sec: 187805.34, flops:164.49, batch-reuse:1
@ 3386 train 4.1393 , allloss: 4.1393, dt: 701.68ms, fracRes: 0.3777, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1869, norm(y): 0.9969, norm:0.5073, tok/sec: 186798.49, flops:163.61, batch-reuse:1
@ 3387 train 3.9622 , allloss: 3.9622, dt: 690.51ms, fracRes: 0.3737, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1853, norm(y): 0.9970, norm:0.4571, tok/sec: 189818.06, flops:166.25, batch-reuse:1
@ 3388 train 3.8312 , allloss: 3.8312, dt: 695.66ms, fracRes: 0.3797, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1883, norm(y): 0.9962, norm:0.3977, tok/sec: 188415.14, flops:165.02, batch-reuse:1
@ 3389 train 3.8717 , allloss: 3.8717, dt: 700.24ms, fracRes: 0.3761, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1835, norm(y): 0.9959, norm:0.3945, tok/sec: 187181.95, flops:163.94, batch-reuse:1
@ 3390 train 4.0487 , allloss: 4.0487, dt: 691.95ms, fracRes: 0.3822, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1915, norm(y): 0.9964, norm:0.4754, tok/sec: 189424.66, flops:165.91, batch-reuse:1
@ 3391 train 4.0073 , allloss: 4.0073, dt: 682.88ms, fracRes: 0.3801, norm(attn): 0.4609, norm(output): 0.9961, norm(x): 1.1895, norm(y): 0.9961, norm:0.3858, tok/sec: 191940.91, flops:168.11, batch-reuse:1
@ 3392 train 3.9106 , allloss: 3.9106, dt: 685.78ms, fracRes: 0.3788, norm(attn): 0.4570, norm(output): 1.0000, norm(x): 1.1891, norm(y): 0.9961, norm:0.3957, tok/sec: 191128.47, flops:167.40, batch-reuse:1
@ 3393 train 4.0612 , allloss: 4.0612, dt: 688.47ms, fracRes: 0.3773, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1921, norm(y): 0.9968, norm:0.3846, tok/sec: 190380.55, flops:166.75, batch-reuse:1
@ 3394 train 3.9955 , allloss: 3.9955, dt: 702.10ms, fracRes: 0.3767, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1895, norm(y): 0.9967, norm:0.4076, tok/sec: 186686.79, flops:163.51, batch-reuse:1
@ 3395 train 3.9345 , allloss: 3.9345, dt: 697.30ms, fracRes: 0.3839, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1942, norm(y): 0.9962, norm:0.3594, tok/sec: 187971.46, flops:164.64, batch-reuse:1
@ 3396 train 3.9606 , allloss: 3.9606, dt: 692.71ms, fracRes: 0.3827, norm(attn): 0.4648, norm(output): 0.9961, norm(x): 1.1899, norm(y): 0.9960, norm:0.3655, tok/sec: 189217.59, flops:165.73, batch-reuse:1
@ 3397 train 3.9241 , allloss: 3.9241, dt: 695.45ms, fracRes: 0.3811, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1902, norm(y): 0.9962, norm:0.3759, tok/sec: 188470.24, flops:165.07, batch-reuse:1
@ 3398 train 3.9930 , allloss: 3.9930, dt: 697.12ms, fracRes: 0.3794, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1911, norm(y): 0.9967, norm:0.3849, tok/sec: 188019.04, flops:164.68, batch-reuse:1
@ 3399 train 3.9329 , allloss: 3.9329, dt: 697.76ms, fracRes: 0.3790, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1898, norm(y): 0.9963, norm:0.3578, tok/sec: 187846.35, flops:164.53, batch-reuse:1
@ 3400 train 3.9604 , allloss: 3.9604, dt: 697.89ms, fracRes: 0.3808, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1912, norm(y): 0.9962, norm:0.3772, tok/sec: 187812.59, flops:164.50, batch-reuse:1
@ 3401 train 3.9521 , allloss: 3.9521, dt: 695.98ms, fracRes: 0.3791, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1879, norm(y): 0.9961, norm:0.3434, tok/sec: 188326.13, flops:164.95, batch-reuse:1
@ 3402 train 3.9422 , allloss: 3.9422, dt: 695.60ms, fracRes: 0.3831, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1971, norm(y): 0.9962, norm:0.3912, tok/sec: 188431.03, flops:165.04, batch-reuse:1
@ 3403 train 3.9118 , allloss: 3.9118, dt: 691.36ms, fracRes: 0.3823, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1906, norm(y): 0.9962, norm:0.3224, tok/sec: 189585.94, flops:166.05, batch-reuse:1
@ 3404 train 3.8858 , allloss: 3.8858, dt: 693.33ms, fracRes: 0.3824, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1930, norm(y): 0.9964, norm:0.3585, tok/sec: 189047.18, flops:165.58, batch-reuse:1
@ 3405 train 3.8960 , allloss: 3.8960, dt: 694.16ms, fracRes: 0.3825, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1930, norm(y): 0.9961, norm:0.3344, tok/sec: 188822.00, flops:165.38, batch-reuse:1
@ 3406 train 3.8883 , allloss: 3.8883, dt: 678.86ms, fracRes: 0.3806, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1933, norm(y): 0.9962, norm:0.3649, tok/sec: 193077.59, flops:169.11, batch-reuse:1
@ 3407 train 3.9122 , allloss: 3.9122, dt: 690.88ms, fracRes: 0.3843, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1964, norm(y): 0.9960, norm:0.3399, tok/sec: 189716.73, flops:166.16, batch-reuse:1
@ 3408 train 3.9081 , allloss: 3.9081, dt: 690.24ms, fracRes: 0.3868, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1976, norm(y): 0.9963, norm:0.3682, tok/sec: 189892.41, flops:166.32, batch-reuse:1
@ 3409 train 4.0238 , allloss: 4.0238, dt: 692.57ms, fracRes: 0.3841, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1951, norm(y): 0.9965, norm:0.3776, tok/sec: 189255.04, flops:165.76, batch-reuse:1
@ 3410 train 3.9823 , allloss: 3.9823, dt: 685.34ms, fracRes: 0.3859, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2007, norm(y): 0.9965, norm:0.3862, tok/sec: 191249.75, flops:167.51, batch-reuse:1
@ 3411 train 3.9594 , allloss: 3.9594, dt: 689.60ms, fracRes: 0.3821, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1900, norm(y): 0.9960, norm:0.3489, tok/sec: 190069.02, flops:166.47, batch-reuse:1
@ 3412 train 3.9620 , allloss: 3.9620, dt: 695.53ms, fracRes: 0.3794, norm(attn): 0.4609, norm(output): 1.0000, norm(x): 1.1906, norm(y): 0.9960, norm:0.3787, tok/sec: 188448.60, flops:165.05, batch-reuse:1
@ 3413 train 4.0192 , allloss: 4.0192, dt: 695.57ms, fracRes: 0.3732, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1866, norm(y): 0.9967, norm:0.3757, tok/sec: 188437.36, flops:165.04, batch-reuse:1
@ 3414 train 3.9426 , allloss: 3.9426, dt: 680.86ms, fracRes: 0.3732, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1877, norm(y): 0.9972, norm:0.3960, tok/sec: 192510.61, flops:168.61, batch-reuse:1
@ 3415 train 3.8857 , allloss: 3.8857, dt: 687.28ms, fracRes: 0.3809, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1871, norm(y): 0.9963, norm:0.3581, tok/sec: 190712.42, flops:167.04, batch-reuse:1
@ 3416 train 3.9499 , allloss: 3.9499, dt: 688.44ms, fracRes: 0.3820, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1889, norm(y): 0.9960, norm:0.3843, tok/sec: 190390.04, flops:166.75, batch-reuse:1
@ 3417 train 3.9080 , allloss: 3.9080, dt: 694.35ms, fracRes: 0.3853, norm(attn): 0.4609, norm(output): 1.0000, norm(x): 1.1907, norm(y): 0.9959, norm:0.3689, tok/sec: 188769.22, flops:165.33, batch-reuse:1
@ 3418 train 3.8517 , allloss: 3.8517, dt: 697.56ms, fracRes: 0.3840, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1948, norm(y): 0.9962, norm:0.3648, tok/sec: 187901.18, flops:164.57, batch-reuse:1
@ 3419 train 3.9044 , allloss: 3.9044, dt: 697.57ms, fracRes: 0.3814, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1946, norm(y): 0.9963, norm:0.3521, tok/sec: 187898.86, flops:164.57, batch-reuse:1
@ 3420 train 3.9162 , allloss: 3.9162, dt: 697.33ms, fracRes: 0.3806, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1909, norm(y): 0.9963, norm:0.3446, tok/sec: 187962.02, flops:164.63, batch-reuse:1
@ 3421 train 3.9647 , allloss: 3.9647, dt: 698.58ms, fracRes: 0.3814, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1926, norm(y): 0.9961, norm:0.3562, tok/sec: 187625.04, flops:164.33, batch-reuse:1
@ 3422 train 3.9203 , allloss: 3.9203, dt: 704.47ms, fracRes: 0.3804, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1925, norm(y): 0.9961, norm:0.3420, tok/sec: 186057.31, flops:162.96, batch-reuse:1
@ 3423 train 3.8950 , allloss: 3.8950, dt: 702.93ms, fracRes: 0.3814, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1939, norm(y): 0.9963, norm:0.3261, tok/sec: 186465.74, flops:163.32, batch-reuse:1
@ 3424 train 3.9421 , allloss: 3.9421, dt: 705.35ms, fracRes: 0.3809, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1923, norm(y): 0.9965, norm:0.3543, tok/sec: 185825.56, flops:162.76, batch-reuse:1
@ 3425 train 3.9447 , allloss: 3.9447, dt: 704.80ms, fracRes: 0.3821, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1944, norm(y): 0.9965, norm:0.3467, tok/sec: 185970.83, flops:162.88, batch-reuse:1
@ 3426 train 3.8950 , allloss: 3.8950, dt: 701.88ms, fracRes: 0.3817, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1932, norm(y): 0.9966, norm:0.3438, tok/sec: 186743.61, flops:163.56, batch-reuse:1
@ 3427 train 3.9447 , allloss: 3.9447, dt: 688.81ms, fracRes: 0.3804, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1890, norm(y): 0.9963, norm:0.3494, tok/sec: 190288.56, flops:166.67, batch-reuse:1
@ 3428 train 3.8579 , allloss: 3.8579, dt: 701.44ms, fracRes: 0.3847, norm(attn): 0.4629, norm(output): 0.9961, norm(x): 1.1922, norm(y): 0.9962, norm:0.3466, tok/sec: 186861.61, flops:163.66, batch-reuse:1
@ 3429 train 3.8733 , allloss: 3.8733, dt: 690.38ms, fracRes: 0.3892, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1969, norm(y): 0.9964, norm:0.5013, tok/sec: 189856.08, flops:166.29, batch-reuse:1
@ 3430 train 4.1611 , allloss: 4.1611, dt: 691.60ms, fracRes: 0.3842, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1957, norm(y): 0.9976, norm:0.5031, tok/sec: 189519.87, flops:165.99, batch-reuse:1
@ 3431 train 3.9982 , allloss: 3.9982, dt: 705.55ms, fracRes: 0.3767, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1925, norm(y): 0.9969, norm:0.6760, tok/sec: 185773.69, flops:162.71, batch-reuse:1
@ 3432 train 3.8241 , allloss: 3.8241, dt: 705.21ms, fracRes: 0.3862, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.2022, norm(y): 0.9967, norm:0.7665, tok/sec: 185862.44, flops:162.79, batch-reuse:1
@ 3433 train 3.9643 , allloss: 3.9643, dt: 705.66ms, fracRes: 0.3898, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1937, norm(y): 0.9959, norm:0.7590, tok/sec: 185742.75, flops:162.68, batch-reuse:1
@ 3434 train 3.9132 , allloss: 3.9132, dt: 702.55ms, fracRes: 0.3782, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.1978, norm(y): 0.9958, norm:0.5835, tok/sec: 186566.16, flops:163.41, batch-reuse:1
@ 3435 train 3.8709 , allloss: 3.8709, dt: 697.27ms, fracRes: 0.3676, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.1893, norm(y): 0.9957, norm:0.5133, tok/sec: 187977.95, flops:164.64, batch-reuse:1
@ 3436 train 3.9255 , allloss: 3.9255, dt: 689.75ms, fracRes: 0.3657, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1853, norm(y): 0.9962, norm:0.4684, tok/sec: 190026.90, flops:166.44, batch-reuse:1
@ 3437 train 3.8968 , allloss: 3.8968, dt: 691.46ms, fracRes: 0.3733, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1885, norm(y): 0.9965, norm:0.4898, tok/sec: 189557.70, flops:166.03, batch-reuse:1
@ 3438 train 3.9805 , allloss: 3.9805, dt: 694.79ms, fracRes: 0.3825, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1939, norm(y): 0.9966, norm:0.4399, tok/sec: 188648.54, flops:165.23, batch-reuse:1
@ 3439 train 3.8428 , allloss: 3.8428, dt: 703.10ms, fracRes: 0.3886, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1951, norm(y): 0.9963, norm:0.4455, tok/sec: 186420.34, flops:163.28, batch-reuse:1
@ 3440 train 3.8044 , allloss: 3.8044, dt: 705.84ms, fracRes: 0.3905, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.2010, norm(y): 0.9963, norm:0.3736, tok/sec: 185696.57, flops:162.64, batch-reuse:1
@ 3441 train 3.9501 , allloss: 3.9501, dt: 690.26ms, fracRes: 0.3846, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2012, norm(y): 0.9965, norm:0.4270, tok/sec: 189886.57, flops:166.31, batch-reuse:1
@ 3442 train 3.8997 , allloss: 3.8997, dt: 699.07ms, fracRes: 0.3786, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.1980, norm(y): 0.9965, norm:0.3655, tok/sec: 187495.59, flops:164.22, batch-reuse:1
@ 3443 train 3.8786 , allloss: 3.8786, dt: 691.86ms, fracRes: 0.3754, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.1968, norm(y): 0.9964, norm:0.4208, tok/sec: 189449.85, flops:165.93, batch-reuse:1
@ 3444 train 3.8473 , allloss: 3.8473, dt: 695.98ms, fracRes: 0.3793, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1935, norm(y): 0.9963, norm:0.3899, tok/sec: 188326.26, flops:164.95, batch-reuse:1
@ 3445 train 3.8778 , allloss: 3.8778, dt: 683.39ms, fracRes: 0.3842, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.1992, norm(y): 0.9964, norm:0.3895, tok/sec: 191796.67, flops:167.99, batch-reuse:1
@ 3446 train 3.8723 , allloss: 3.8723, dt: 692.78ms, fracRes: 0.3856, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1992, norm(y): 0.9963, norm:0.4114, tok/sec: 189198.05, flops:165.71, batch-reuse:1
@ 3447 train 3.9197 , allloss: 3.9197, dt: 684.18ms, fracRes: 0.3850, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1938, norm(y): 0.9965, norm:0.3629, tok/sec: 191576.58, flops:167.79, batch-reuse:1
@ 3448 train 3.8554 , allloss: 3.8554, dt: 694.03ms, fracRes: 0.3876, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.1964, norm(y): 0.9964, norm:0.3872, tok/sec: 188855.21, flops:165.41, batch-reuse:1
@ 3449 train 3.9095 , allloss: 3.9095, dt: 680.73ms, fracRes: 0.3851, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1967, norm(y): 0.9965, norm:0.3821, tok/sec: 192547.22, flops:168.64, batch-reuse:1
@ 3450 train 3.8453 , allloss: 3.8453, dt: 691.56ms, fracRes: 0.3825, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1943, norm(y): 0.9965, norm:0.3364, tok/sec: 189532.02, flops:166.00, batch-reuse:1
@ 3451 train 3.9529 , allloss: 3.9529, dt: 694.09ms, fracRes: 0.3848, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2026, norm(y): 0.9969, norm:0.4035, tok/sec: 188839.58, flops:165.40, batch-reuse:1
@ 3452 train 3.9062 , allloss: 3.9062, dt: 693.85ms, fracRes: 0.3830, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1966, norm(y): 0.9965, norm:0.3822, tok/sec: 188905.05, flops:165.45, batch-reuse:1
@ 3453 train 3.8999 , allloss: 3.8999, dt: 701.06ms, fracRes: 0.3855, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.2011, norm(y): 0.9962, norm:0.4170, tok/sec: 186963.09, flops:163.75, batch-reuse:1
@ 3454 train 3.9360 , allloss: 3.9360, dt: 694.60ms, fracRes: 0.3776, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2005, norm(y): 0.9970, norm:0.4893, tok/sec: 188701.64, flops:165.28, batch-reuse:1
@ 3455 train 3.8772 , allloss: 3.8772, dt: 699.08ms, fracRes: 0.3910, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2031, norm(y): 0.9964, norm:0.5567, tok/sec: 187492.45, flops:164.22, batch-reuse:1
@ 3456 train 3.8279 , allloss: 3.8279, dt: 698.54ms, fracRes: 0.3885, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2034, norm(y): 0.9963, norm:0.3962, tok/sec: 187637.27, flops:164.34, batch-reuse:1
@ 3457 train 3.8380 , allloss: 3.8380, dt: 697.04ms, fracRes: 0.3857, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2051, norm(y): 0.9963, norm:0.4392, tok/sec: 188040.52, flops:164.70, batch-reuse:1
@ 3458 train 3.8079 , allloss: 3.8079, dt: 694.09ms, fracRes: 0.3888, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2015, norm(y): 0.9961, norm:0.3925, tok/sec: 188839.19, flops:165.40, batch-reuse:1
@ 3459 train 3.8543 , allloss: 3.8543, dt: 686.25ms, fracRes: 0.3881, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.1990, norm(y): 0.9959, norm:0.4182, tok/sec: 190996.20, flops:167.29, batch-reuse:1
@ 3460 train 3.9647 , allloss: 3.9647, dt: 691.73ms, fracRes: 0.3836, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2029, norm(y): 0.9968, norm:0.3914, tok/sec: 189483.48, flops:165.96, batch-reuse:1
@ 3461 train 3.8641 , allloss: 3.8641, dt: 697.07ms, fracRes: 0.3827, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1944, norm(y): 0.9966, norm:0.3939, tok/sec: 188032.28, flops:164.69, batch-reuse:1
@ 3462 train 3.8610 , allloss: 3.8610, dt: 701.12ms, fracRes: 0.3822, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1965, norm(y): 0.9966, norm:0.3946, tok/sec: 186947.71, flops:163.74, batch-reuse:1
@ 3463 train 3.8890 , allloss: 3.8890, dt: 682.79ms, fracRes: 0.3831, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1994, norm(y): 0.9965, norm:0.3824, tok/sec: 191965.78, flops:168.13, batch-reuse:1
@ 3464 train 3.7205 , allloss: 3.7205, dt: 706.72ms, fracRes: 0.3859, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1970, norm(y): 0.9960, norm:0.3519, tok/sec: 185466.28, flops:162.44, batch-reuse:1
@ 3465 train 3.8340 , allloss: 3.8340, dt: 703.73ms, fracRes: 0.3845, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1993, norm(y): 0.9961, norm:0.3914, tok/sec: 186252.91, flops:163.13, batch-reuse:1
@ 3466 train 3.8680 , allloss: 3.8680, dt: 704.15ms, fracRes: 0.3851, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1951, norm(y): 0.9961, norm:0.3531, tok/sec: 186141.73, flops:163.03, batch-reuse:1
@ 3467 train 3.8894 , allloss: 3.8894, dt: 704.17ms, fracRes: 0.3870, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1985, norm(y): 0.9965, norm:0.3457, tok/sec: 186135.80, flops:163.03, batch-reuse:1
@ 3468 train 3.8548 , allloss: 3.8548, dt: 704.29ms, fracRes: 0.3863, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1982, norm(y): 0.9971, norm:0.3680, tok/sec: 186105.30, flops:163.00, batch-reuse:1
@ 3469 train 3.8747 , allloss: 3.8747, dt: 695.99ms, fracRes: 0.3858, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1960, norm(y): 0.9965, norm:0.3644, tok/sec: 188324.91, flops:164.95, batch-reuse:1
@ 3470 train 3.9621 , allloss: 3.9621, dt: 691.76ms, fracRes: 0.3849, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1944, norm(y): 0.9966, norm:0.3581, tok/sec: 189477.08, flops:165.95, batch-reuse:1
@ 3471 train 3.8820 , allloss: 3.8820, dt: 702.94ms, fracRes: 0.3816, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1990, norm(y): 0.9966, norm:0.3721, tok/sec: 186463.65, flops:163.32, batch-reuse:1
@ 3472 train 3.8974 , allloss: 3.8974, dt: 701.94ms, fracRes: 0.3783, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1924, norm(y): 0.9970, norm:0.3524, tok/sec: 186727.18, flops:163.55, batch-reuse:1
@ 3473 train 3.7929 , allloss: 3.7929, dt: 698.11ms, fracRes: 0.3801, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2001, norm(y): 0.9966, norm:0.3750, tok/sec: 187753.13, flops:164.44, batch-reuse:1
@ 3474 train 3.8453 , allloss: 3.8453, dt: 697.75ms, fracRes: 0.3818, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1973, norm(y): 0.9967, norm:0.3863, tok/sec: 187850.26, flops:164.53, batch-reuse:1
@ 3475 train 3.7199 , allloss: 3.7199, dt: 699.39ms, fracRes: 0.3809, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1893, norm(y): 0.9963, norm:0.3552, tok/sec: 187408.28, flops:164.14, batch-reuse:1
@ 3476 train 3.8073 , allloss: 3.8073, dt: 692.38ms, fracRes: 0.3836, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1934, norm(y): 0.9967, norm:0.3595, tok/sec: 189307.05, flops:165.81, batch-reuse:1
@ 3477 train 3.7289 , allloss: 3.7289, dt: 690.27ms, fracRes: 0.3829, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1932, norm(y): 0.9967, norm:0.3396, tok/sec: 189885.20, flops:166.31, batch-reuse:1
@ 3478 train 3.8012 , allloss: 3.8012, dt: 684.32ms, fracRes: 0.3839, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1918, norm(y): 0.9964, norm:0.3484, tok/sec: 191537.47, flops:167.76, batch-reuse:1
@ 3479 train 3.6875 , allloss: 3.6875, dt: 701.48ms, fracRes: 0.3872, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.1961, norm(y): 0.9960, norm:0.3473, tok/sec: 186851.51, flops:163.65, batch-reuse:1
@ 3480 train 3.8187 , allloss: 3.8187, dt: 701.16ms, fracRes: 0.3862, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1955, norm(y): 0.9962, norm:0.3941, tok/sec: 186934.74, flops:163.73, batch-reuse:1
@ 3481 train 3.8348 , allloss: 3.8348, dt: 703.11ms, fracRes: 0.3765, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1914, norm(y): 0.9966, norm:0.3780, tok/sec: 186418.76, flops:163.28, batch-reuse:1
@ 3482 train 3.6611 , allloss: 3.6611, dt: 700.89ms, fracRes: 0.3864, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2091, norm(y): 0.9960, norm:0.4257, tok/sec: 187007.87, flops:163.79, batch-reuse:1
@ 3483 train 3.7938 , allloss: 3.7938, dt: 696.93ms, fracRes: 0.3780, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1931, norm(y): 0.9963, norm:0.3537, tok/sec: 188071.71, flops:164.72, batch-reuse:1
@ 3484 train 3.7687 , allloss: 3.7687, dt: 695.48ms, fracRes: 0.3807, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1925, norm(y): 0.9963, norm:0.3402, tok/sec: 188463.58, flops:165.07, batch-reuse:1
@ 3485 train 3.7452 , allloss: 3.7452, dt: 699.14ms, fracRes: 0.3814, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1920, norm(y): 0.9965, norm:0.3530, tok/sec: 187475.83, flops:164.20, batch-reuse:1
@ 3486 train 3.7551 , allloss: 3.7551, dt: 696.63ms, fracRes: 0.3801, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1920, norm(y): 0.9967, norm:0.3456, tok/sec: 188151.85, flops:164.79, batch-reuse:1
@ 3487 train 3.6854 , allloss: 3.6854, dt: 678.89ms, fracRes: 0.3813, norm(attn): 0.4707, norm(output): 0.9961, norm(x): 1.1845, norm(y): 0.9964, norm:0.3306, tok/sec: 193067.83, flops:169.10, batch-reuse:1
@ 3488 train 3.7983 , allloss: 3.7983, dt: 698.84ms, fracRes: 0.3841, norm(attn): 0.4668, norm(output): 0.9961, norm(x): 1.1868, norm(y): 0.9964, norm:0.3313, tok/sec: 187555.72, flops:164.27, batch-reuse:1
@ 3489 train 3.7696 , allloss: 3.7696, dt: 699.30ms, fracRes: 0.3854, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1949, norm(y): 0.9966, norm:0.3407, tok/sec: 187432.75, flops:164.16, batch-reuse:1
@ 3490 train 3.7088 , allloss: 3.7088, dt: 724.07ms, fracRes: 0.3862, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1957, norm(y): 0.9967, norm:0.3548, tok/sec: 181021.69, flops:158.55, batch-reuse:1
@ 3491 train 3.7235 , allloss: 3.7235, dt: 695.71ms, fracRes: 0.3932, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.2011, norm(y): 0.9961, norm:0.3548, tok/sec: 188399.26, flops:165.01, batch-reuse:1
@ 3492 train 3.8083 , allloss: 3.8083, dt: 689.38ms, fracRes: 0.3925, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.2009, norm(y): 0.9965, norm:0.3519, tok/sec: 190130.81, flops:166.53, batch-reuse:1
@ 3493 train 3.7725 , allloss: 3.7725, dt: 690.48ms, fracRes: 0.3931, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1992, norm(y): 0.9963, norm:0.3630, tok/sec: 189826.91, flops:166.26, batch-reuse:1
@ 3494 train 3.7541 , allloss: 3.7541, dt: 703.26ms, fracRes: 0.3910, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2028, norm(y): 0.9969, norm:0.3479, tok/sec: 186377.11, flops:163.24, batch-reuse:1
@ 3495 train 3.7699 , allloss: 3.7699, dt: 701.62ms, fracRes: 0.3889, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1972, norm(y): 0.9967, norm:0.3661, tok/sec: 186813.98, flops:163.62, batch-reuse:1
@ 3496 train 3.7874 , allloss: 3.7874, dt: 704.97ms, fracRes: 0.3854, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1992, norm(y): 0.9970, norm:0.3627, tok/sec: 185925.55, flops:162.84, batch-reuse:1
@ 3497 train 3.7354 , allloss: 3.7354, dt: 698.56ms, fracRes: 0.3825, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1972, norm(y): 0.9971, norm:0.3572, tok/sec: 187631.51, flops:164.34, batch-reuse:1
@ 3498 train 3.7373 , allloss: 3.7373, dt: 698.62ms, fracRes: 0.3841, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1980, norm(y): 0.9964, norm:0.3728, tok/sec: 187616.46, flops:164.32, batch-reuse:1
@ 3499 train 3.7788 , allloss: 3.7788, dt: 683.93ms, fracRes: 0.3837, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1913, norm(y): 0.9964, norm:0.3909, tok/sec: 191646.57, flops:167.85, batch-reuse:1
@ 3500 train 3.6701 , allloss: 3.6701, dt: 697.14ms, fracRes: 0.3882, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1950, norm(y): 0.9960, norm:0.4417, tok/sec: 188012.54, flops:164.67, batch-reuse:1
@ 3501 train 3.6275 , allloss: 3.6275, dt: 694.78ms, fracRes: 0.3838, norm(attn): 0.4688, norm(output): 0.9961, norm(x): 1.1885, norm(y): 0.9964, norm:0.4182, tok/sec: 188653.40, flops:165.23, batch-reuse:1
@ 3502 train 3.7013 , allloss: 3.7013, dt: 696.09ms, fracRes: 0.3900, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1972, norm(y): 0.9960, norm:0.3805, tok/sec: 188297.75, flops:164.92, batch-reuse:1
@ 3503 train 3.7574 , allloss: 3.7574, dt: 694.88ms, fracRes: 0.3862, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1958, norm(y): 0.9962, norm:0.3921, tok/sec: 188624.47, flops:165.21, batch-reuse:1
@ 3504 train 3.6854 , allloss: 3.6854, dt: 690.88ms, fracRes: 0.3874, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1936, norm(y): 0.9958, norm:0.3617, tok/sec: 189717.31, flops:166.16, batch-reuse:1
@ 3505 train 3.6793 , allloss: 3.6793, dt: 696.69ms, fracRes: 0.3884, norm(attn): 0.4707, norm(output): 0.9961, norm(x): 1.1957, norm(y): 0.9962, norm:0.3913, tok/sec: 188134.34, flops:164.78, batch-reuse:1
@ 3506 train 3.6500 , allloss: 3.6500, dt: 695.06ms, fracRes: 0.3928, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2076, norm(y): 0.9966, norm:0.4172, tok/sec: 188576.39, flops:165.17, batch-reuse:1
@ 3507 train 3.7191 , allloss: 3.7191, dt: 694.80ms, fracRes: 0.3847, norm(attn): 0.4727, norm(output): 1.0078, norm(x): 1.2002, norm(y): 0.9971, norm:0.3898, tok/sec: 188647.90, flops:165.23, batch-reuse:1
@ 3508 train 3.8436 , allloss: 3.8436, dt: 692.63ms, fracRes: 0.3895, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1996, norm(y): 0.9967, norm:0.3932, tok/sec: 189237.39, flops:165.74, batch-reuse:1
@ 3509 train 3.7650 , allloss: 3.7650, dt: 705.14ms, fracRes: 0.3989, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2104, norm(y): 0.9961, norm:0.4577, tok/sec: 185880.47, flops:162.80, batch-reuse:1
@ 3510 train 3.7444 , allloss: 3.7444, dt: 706.45ms, fracRes: 0.3925, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.1957, norm(y): 0.9961, norm:0.3606, tok/sec: 185536.07, flops:162.50, batch-reuse:1
@ 3511 train 3.7884 , allloss: 3.7884, dt: 705.34ms, fracRes: 0.3875, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1994, norm(y): 0.9966, norm:0.3647, tok/sec: 185828.83, flops:162.76, batch-reuse:1
@ 3512 train 3.8004 , allloss: 3.8004, dt: 706.97ms, fracRes: 0.3957, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2127, norm(y): 0.9965, norm:0.4030, tok/sec: 185399.48, flops:162.38, batch-reuse:1
@ 3513 train 3.7520 , allloss: 3.7520, dt: 689.23ms, fracRes: 0.3878, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.1994, norm(y): 0.9970, norm:0.4260, tok/sec: 190171.32, flops:166.56, batch-reuse:1
@ 3514 train 3.8565 , allloss: 3.8565, dt: 674.85ms, fracRes: 0.3897, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1979, norm(y): 0.9966, norm:0.3905, tok/sec: 194222.74, flops:170.11, batch-reuse:1
@ 3515 train 3.7428 , allloss: 3.7428, dt: 697.40ms, fracRes: 0.3895, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1952, norm(y): 0.9968, norm:0.3870, tok/sec: 187945.05, flops:164.61, batch-reuse:1
@ 3516 train 3.8426 , allloss: 3.8426, dt: 697.51ms, fracRes: 0.3870, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1989, norm(y): 0.9972, norm:0.3793, tok/sec: 187914.79, flops:164.59, batch-reuse:1
@ 3517 train 3.7954 , allloss: 3.7954, dt: 700.35ms, fracRes: 0.3852, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.1955, norm(y): 0.9969, norm:0.3908, tok/sec: 187153.15, flops:163.92, batch-reuse:1
@ 3518 train 3.7917 , allloss: 3.7917, dt: 695.68ms, fracRes: 0.3879, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2025, norm(y): 0.9966, norm:0.3965, tok/sec: 188408.10, flops:165.02, batch-reuse:1
@ 3519 train 3.6940 , allloss: 3.6940, dt: 684.16ms, fracRes: 0.3839, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1946, norm(y): 0.9967, norm:0.3872, tok/sec: 191581.72, flops:167.80, batch-reuse:1
@ 3520 train 3.6975 , allloss: 3.6975, dt: 698.39ms, fracRes: 0.3902, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9970, norm:0.4229, tok/sec: 187676.79, flops:164.38, batch-reuse:1
@ 3521 train 3.7146 , allloss: 3.7146, dt: 696.41ms, fracRes: 0.3845, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.1946, norm(y): 0.9971, norm:0.3760, tok/sec: 188212.01, flops:164.85, batch-reuse:1
@ 3522 train 3.9368 , allloss: 3.9368, dt: 682.33ms, fracRes: 0.3873, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2035, norm(y): 0.9981, norm:0.5672, tok/sec: 192096.11, flops:168.25, batch-reuse:1
@ 3523 train 3.7952 , allloss: 3.7952, dt: 700.09ms, fracRes: 0.3882, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2038, norm(y): 0.9968, norm:0.4874, tok/sec: 187221.66, flops:163.98, batch-reuse:1
@ 3524 train 3.7764 , allloss: 3.7764, dt: 682.48ms, fracRes: 0.3780, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.1977, norm(y): 0.9972, norm:0.4166, tok/sec: 192052.15, flops:168.21, batch-reuse:1
@ 3525 train 3.7733 , allloss: 3.7733, dt: 706.27ms, fracRes: 0.3793, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.1979, norm(y): 0.9971, norm:0.3989, tok/sec: 185582.61, flops:162.54, batch-reuse:1
@ 3526 train 3.9004 , allloss: 3.9004, dt: 706.04ms, fracRes: 0.3847, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2044, norm(y): 0.9972, norm:0.4084, tok/sec: 185644.90, flops:162.60, batch-reuse:1
@ 3527 train 3.9013 , allloss: 3.9013, dt: 700.85ms, fracRes: 0.3893, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2070, norm(y): 0.9970, norm:0.3791, tok/sec: 187017.98, flops:163.80, batch-reuse:1
@ 3528 train 3.9568 , allloss: 3.9568, dt: 705.53ms, fracRes: 0.3939, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.2059, norm(y): 0.9967, norm:0.3728, tok/sec: 185778.97, flops:162.72, batch-reuse:1
@ 3529 train 4.0112 , allloss: 4.0112, dt: 692.12ms, fracRes: 0.3936, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2104, norm(y): 0.9969, norm:0.3872, tok/sec: 189376.24, flops:165.87, batch-reuse:1
@ 3530 train 3.9756 , allloss: 3.9756, dt: 694.23ms, fracRes: 0.3899, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2152, norm(y): 0.9974, norm:0.3909, tok/sec: 188801.96, flops:165.36, batch-reuse:1
@ 3531 train 4.1404 , allloss: 4.1404, dt: 690.48ms, fracRes: 0.3912, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2125, norm(y): 0.9975, norm:0.4062, tok/sec: 189828.29, flops:166.26, batch-reuse:1
@ 3532 train 3.9857 , allloss: 3.9857, dt: 679.76ms, fracRes: 0.3831, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2069, norm(y): 0.9975, norm:0.4103, tok/sec: 192821.14, flops:168.88, batch-reuse:1
@ 3533 train 4.0800 , allloss: 4.0800, dt: 689.86ms, fracRes: 0.3776, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2021, norm(y): 0.9976, norm:0.4111, tok/sec: 189997.09, flops:166.41, batch-reuse:1
@ 3534 train 3.8699 , allloss: 3.8699, dt: 680.00ms, fracRes: 0.3831, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2033, norm(y): 0.9973, norm:0.3983, tok/sec: 192754.07, flops:168.82, batch-reuse:1
@ 3535 train 4.0739 , allloss: 4.0739, dt: 696.89ms, fracRes: 0.3763, norm(attn): 0.4746, norm(output): 1.0156, norm(x): 1.2111, norm(y): 0.9982, norm:0.5363, tok/sec: 188080.85, flops:164.73, batch-reuse:1
@ 3536 train 3.8948 , allloss: 3.8948, dt: 692.43ms, fracRes: 0.3750, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2073, norm(y): 0.9981, norm:0.4946, tok/sec: 189291.73, flops:165.79, batch-reuse:1
@ 3537 train 3.9861 , allloss: 3.9861, dt: 706.26ms, fracRes: 0.3735, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2084, norm(y): 0.9981, norm:0.4241, tok/sec: 185585.55, flops:162.55, batch-reuse:1
@ 3538 train 3.9040 , allloss: 3.9040, dt: 710.78ms, fracRes: 0.3783, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2090, norm(y): 0.9976, norm:0.4754, tok/sec: 184406.51, flops:161.51, batch-reuse:1
@ 3539 train 3.8891 , allloss: 3.8891, dt: 708.23ms, fracRes: 0.3864, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2106, norm(y): 0.9971, norm:0.4624, tok/sec: 185070.75, flops:162.10, batch-reuse:1
@ 3540 train 3.9319 , allloss: 3.9319, dt: 701.41ms, fracRes: 0.3916, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2115, norm(y): 0.9967, norm:0.3924, tok/sec: 186870.31, flops:163.67, batch-reuse:1
@ 3541 train 3.9221 , allloss: 3.9221, dt: 691.98ms, fracRes: 0.3954, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2172, norm(y): 0.9969, norm:0.4125, tok/sec: 189415.32, flops:165.90, batch-reuse:1
@ 3542 train 3.9191 , allloss: 3.9191, dt: 693.12ms, fracRes: 0.3946, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2143, norm(y): 0.9969, norm:0.3875, tok/sec: 189103.82, flops:165.63, batch-reuse:1
@ 3543 train 4.0344 , allloss: 4.0344, dt: 694.88ms, fracRes: 0.3894, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2083, norm(y): 0.9974, norm:0.3948, tok/sec: 188624.98, flops:165.21, batch-reuse:1
@ 3544 train 3.8676 , allloss: 3.8676, dt: 697.00ms, fracRes: 0.3900, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2074, norm(y): 0.9972, norm:0.3624, tok/sec: 188051.77, flops:164.71, batch-reuse:1
@ 3545 train 3.8886 , allloss: 3.8886, dt: 695.08ms, fracRes: 0.3925, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2095, norm(y): 0.9975, norm:0.3655, tok/sec: 188571.67, flops:165.16, batch-reuse:1
@ 3546 train 3.8986 , allloss: 3.8986, dt: 688.61ms, fracRes: 0.3898, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2030, norm(y): 0.9971, norm:0.3645, tok/sec: 190343.04, flops:166.71, batch-reuse:1
@ 3547 train 3.8589 , allloss: 3.8589, dt: 696.93ms, fracRes: 0.3901, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2044, norm(y): 0.9970, norm:0.3412, tok/sec: 188071.33, flops:164.72, batch-reuse:1
@ 3548 train 3.8525 , allloss: 3.8525, dt: 699.74ms, fracRes: 0.3939, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2049, norm(y): 0.9971, norm:0.3493, tok/sec: 187316.58, flops:164.06, batch-reuse:1
@ 3549 train 3.8417 , allloss: 3.8417, dt: 697.52ms, fracRes: 0.3930, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9971, norm:0.3682, tok/sec: 187911.58, flops:164.58, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0713, 0.9297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.3672, 0.1611, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0129, 0.2969, 0.1621, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.5039, 0.0942, 0.0864, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0236, 0.2227, 0.0447, 0.0601, 0.1357, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0176, 0.1602, 0.0378, 0.0596, 0.1992, 0.3594, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1465, 0.0530, 0.0752, 0.3125, 0.0579, 0.1582, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0060, 0.1826, 0.0193, 0.0369, 0.0654, 0.0532, 0.5664, 0.0104, 0.0598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0289, 0.1934, 0.0289, 0.0366, 0.1187, 0.0708, 0.2344, 0.0442, 0.1924, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0381, 0.4102, 0.0076, 0.0069, 0.0272, 0.0752, 0.3848, 0.0110, 0.0223, 0.0079, 0.0086, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1040, 0.0354, 0.0413, 0.0864, 0.0957, 0.0820, 0.0564, 0.0503, 0.0356, 0.2275, 0.0879, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.0410, 0.0132, 0.0044, 0.0579, 0.0173, 0.0459, 0.0198, 0.0396, 0.0211, 0.0835, 0.0245, 0.4648, 0.0000, 0.0000],
        [0.0101, 0.1748, 0.0088, 0.0144, 0.0312, 0.0376, 0.5508, 0.0088, 0.0361, 0.0123, 0.0137, 0.0603, 0.0203, 0.0189, 0.0000],
        [0.0156, 0.0933, 0.0201, 0.0483, 0.0752, 0.0513, 0.1152, 0.0244, 0.0371, 0.0177, 0.0757, 0.1138, 0.1758, 0.0349, 0.1016]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0229,     -1.6016,     -3.1094,     -3.6719,     -3.3281,     -2.1562,     -1.7031,     -1.4766,     -3.0781,     -3.3438,     -3.4688,     -2.6562,     -0.7656,     -3.0156,     -2.3125],
        [    -0.0381,      2.5312,      1.8203,      2.2500,      2.0312,      3.3125,      3.7812,      0.0830,      2.1875,      2.0312,      2.0938,      1.0156,     -0.2129,      1.5391,      1.0078],
        [     0.0068,     -0.2412,     -1.0703,     -0.3535,      0.2969,     -0.3516,     -0.9727,     -0.1914,     -0.0520,     -0.1084,      0.9023,      0.9648,      1.3594,      0.3496,      0.2949],
        [     0.0056,      3.1406,      2.5312,      3.7188,      4.5312,      2.4219,      3.9375,      1.7109,      2.7656,      2.7031,      4.5938,      3.7344,      1.4688,      3.1719,      2.0781],
        [    -0.0496,      2.6406,      0.9609,      0.8750,      2.0625,      2.6250,      3.8125,     -0.2197,      2.3594,      1.1875,      1.3672,      0.9844,      0.5703,      1.9141,      0.9375],
        [    -0.0197,      2.2188,      0.6211,      0.9141,      1.7344,      3.0625,      3.1094,     -0.3809,      1.8438,      1.2578,      2.0625,      0.8984,     -0.2051,      1.2656,      1.0000],
        [    -0.0435,      2.1719,      0.7266,      1.1797,      2.3906,      2.9844,      2.2031,     -0.5312,      2.4062,      1.2109,      2.3906,      0.5156,      0.4824,      1.7891,     -0.1680],
        [     0.0025,      0.4160,     -0.5977,     -0.2520,      1.1719,     -0.5117,      0.4941,      0.0457,      0.2471,      0.2715,      2.2969,      0.6836,      1.9219,      0.7070,      0.5664],
        [    -0.0112,      3.4062,      1.1484,      1.8047,      2.3750,      2.1719,      4.5312,      0.5312,      2.2812,      1.4297,      1.5234,      2.9375,      0.7227,      1.8125,      1.3438],
        [     0.0044,      1.9062,      0.0046,      0.2441,      1.4141,      0.8984,      2.0938,      0.4277,      1.8984,      0.5781,      1.5391,      1.1484,      2.4375,      2.2031,      1.0703],
        [    -0.0280,      2.3438,     -1.6406,     -1.7344,     -0.3633,      0.6562,      2.2812,     -1.2734,     -0.5586,     -1.6016,     -1.5156,      1.0859,      0.2236,     -0.8047,      0.7852],
        [    -0.0098,      0.0554,     -1.0234,     -0.8711,     -0.1309,     -0.0306,     -0.1807,     -0.5586,     -0.6719,     -1.0156,      0.8398,     -0.1143,      2.3125,     -0.2891,     -0.0708],
        [     0.0077,     -1.3984,     -2.5156,     -3.6250,     -1.0547,     -2.2656,     -1.2812,     -2.1250,     -1.4297,     -2.0625,     -0.6836,     -1.9062,      1.0312,     -1.0859,     -1.9141],
        [    -0.0299,      2.8125,     -0.1709,      0.3203,      1.0938,      1.2812,      3.9688,     -0.1738,      1.2422,      0.1611,      0.2754,      1.7578,      0.6602,      0.5938,      0.4160],
        [    -0.0092,      1.7734,      0.2402,      1.1172,      1.5625,      1.1797,      1.9844,      0.4355,      0.8516,      0.1138,      1.5703,      1.9688,      2.4062,      0.7891,      1.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7780],
        [0.3127],
        [0.1812],
        [0.3149],
        [0.3226],
        [0.2053],
        [0.1646],
        [0.2221],
        [0.1056],
        [0.2558],
        [0.1050],
        [0.1416],
        [0.1763],
        [0.0821]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9883, 0.0106, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9805, 0.0166, 0.0036, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8789, 0.0237, 0.0081, 0.0898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5742, 0.0457, 0.0233, 0.1943, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8711, 0.0204, 0.0066, 0.0215, 0.0669, 0.0124, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.0623, 0.0376, 0.0165, 0.0693, 0.0359, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5273, 0.0200, 0.0286, 0.0786, 0.1436, 0.0171, 0.0197, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.0176, 0.0216, 0.1235, 0.3359, 0.0143, 0.0498, 0.1064, 0.0498, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4316, 0.0815, 0.0266, 0.0569, 0.1592, 0.0262, 0.0654, 0.0288, 0.0835, 0.0400, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0386, 0.0071, 0.0026, 0.0287, 0.0972, 0.0151, 0.0051, 0.0178, 0.0330, 0.0058, 0.7500, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.0197, 0.1504, 0.1436, 0.0679, 0.0051, 0.0131, 0.1143, 0.0332, 0.0317, 0.0243, 0.2559, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.0057, 0.0143, 0.0072, 0.1089, 0.0131, 0.0251, 0.0649, 0.0649, 0.0059, 0.0391, 0.0302, 0.5312, 0.0000, 0.0000],
        [0.1191, 0.0148, 0.0103, 0.0444, 0.3477, 0.0240, 0.0312, 0.0422, 0.0461, 0.0242, 0.1660, 0.0032, 0.0645, 0.0618, 0.0000],
        [0.4004, 0.0305, 0.0415, 0.0074, 0.0898, 0.0225, 0.0031, 0.0052, 0.0066, 0.0183, 0.0752, 0.0432, 0.0967, 0.0228, 0.1357]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0093,     -0.1377,      0.0339,     -0.0518,     -0.1279,     -0.1787,     -0.1953,     -0.0283,     -0.2100,     -0.1167,     -0.2734,      0.0017,     -0.0869,     -0.2246,     -0.1514],
        [     0.0371,     -4.5000,     -5.1562,     -6.6875,     -5.4062,     -7.8125,     -8.7500,     -8.2500,     -7.2500,     -8.0625,     -6.2812,     -6.2812,     -9.5625,     -7.6562,     -6.0938],
        [     0.0776,     -4.0000,     -5.5312,     -1.4922,     -3.2344,     -6.9375,     -7.1250,     -6.5000,     -7.0000,     -8.1250,     -4.6562,     -5.9375,     -6.2500,     -6.5625,     -6.2188],
        [     0.0312,     -3.5781,     -4.6562,     -2.2500,      0.4902,     -3.0312,     -4.1875,     -4.5938,     -2.8281,     -6.5000,     -0.0109,     -4.1875,     -6.5625,     -3.1094,     -3.2969],
        [     0.1514,     -2.3750,     -3.0469,     -0.9258,     -1.1016,     -2.4219,     -3.2188,     -1.0547,     -2.7344,     -5.4688,     -1.1641,     -3.2031,     -2.5781,     -2.9375,     -3.5625],
        [     0.0430,     -3.7188,     -4.8438,     -3.6562,     -2.5312,     -4.2188,     -2.5312,     -2.9375,     -2.8125,     -5.3125,     -4.3125,     -4.2812,     -5.2500,     -3.6875,     -3.8125],
        [     0.0554,     -2.3281,     -2.8281,     -3.6562,     -2.2188,     -2.8750,     -1.8125,     -1.7422,     -0.7266,     -3.5312,     -2.3281,     -2.4531,     -3.5469,     -1.9297,     -2.0625],
        [     0.0703,     -3.2031,     -2.8438,     -1.8359,     -1.2266,     -3.3594,     -3.2188,     -1.0859,     -1.9297,     -3.8438,     -0.9727,     -3.1250,     -2.0625,     -1.4688,     -1.7344],
        [     0.0796,     -2.6875,     -2.4844,     -0.7383,      0.2598,     -2.8906,     -1.6484,     -0.8867,     -1.6484,     -2.4062,     -1.0938,     -4.0625,     -2.2500,     -2.1562,     -2.6406],
        [     0.1055,     -1.5625,     -2.6875,     -1.9219,     -0.8906,     -2.6875,     -1.7812,     -2.6094,     -1.5391,     -2.2812,      3.2500,     -2.0938,     -2.3281,     -0.5234,     -1.0000],
        [     0.0947,     -1.6016,     -2.6094,     -0.2051,      1.0156,     -0.8438,     -1.9375,     -0.6797,     -0.0649,     -1.8047,      3.0625,     -2.0156,     -0.4766,      0.1367,     -0.3633],
        [     0.1797,     -1.7969,      0.2432,      0.1982,     -0.5547,     -3.1562,     -2.2031,     -0.0317,     -1.2656,     -1.3125,     -1.5781,      0.7773,      4.3125,     -0.2461,     -0.9023],
        [     0.1118,     -2.6562,     -1.7422,     -2.4219,      0.2930,     -1.8281,     -1.1719,     -0.2246,     -0.2236,     -2.6250,     -0.7344,     -0.9883,      1.8750,      1.2734,     -1.1641],
        [     0.0957,     -1.9844,     -2.3438,     -0.8906,      1.1719,     -1.5078,     -1.2422,     -0.9375,     -0.8477,     -1.5000,      0.4297,     -3.5000,     -0.5195,     -0.5586,     -1.8047],
        [     0.0811,     -2.5000,     -2.1875,     -3.9219,     -1.4141,     -2.7969,     -4.7812,     -4.2500,     -4.0312,     -3.0000,     -1.5938,     -2.1406,     -1.3438,     -2.7812,     -1.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9084],
        [0.8302],
        [0.8290],
        [0.7171],
        [0.6409],
        [0.7208],
        [0.6743],
        [0.6445],
        [0.7426],
        [0.6428],
        [0.7171],
        [0.5335],
        [0.5850],
        [0.7458]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0057,     -0.6445,     -0.6484,     -0.6172,     -0.6250,     -0.6328,     -0.5859,     -0.5859,     -0.6406,     -0.6562,     -0.6445,     -0.5977,     -0.5547,     -0.6250,     -0.6250],
        [     0.2285,    -29.3750,    -28.8750,    -28.0000,    -29.0000,    -28.5000,    -26.8750,    -26.3750,    -29.3750,    -29.3750,    -29.6250,    -27.0000,    -25.0000,    -28.7500,    -28.8750],
        [     0.2490,    -30.1250,    -30.1250,    -28.8750,    -29.5000,    -29.3750,    -27.8750,    -27.2500,    -30.0000,    -30.2500,    -30.3750,    -28.0000,    -25.7500,    -29.3750,    -29.6250],
        [     0.2695,    -28.2500,    -28.1250,    -27.1250,    -27.8750,    -28.2500,    -26.5000,    -25.6250,    -28.0000,    -28.8750,    -28.5000,    -26.2500,    -24.8750,    -27.5000,    -27.6250],
        [     0.2412,    -27.2500,    -26.6250,    -25.6250,    -26.7500,    -26.6250,    -25.1250,    -24.3750,    -27.0000,    -27.3750,    -27.3750,    -24.8750,    -23.3750,    -26.5000,    -26.3750],
        [     0.2637,    -30.8750,    -30.3750,    -29.2500,    -30.5000,    -30.0000,    -28.5000,    -27.8750,    -30.8750,    -31.0000,    -31.2500,    -28.5000,    -26.5000,    -30.3750,    -30.3750],
        [     0.2393,    -28.6250,    -28.5000,    -27.2500,    -28.1250,    -28.1250,    -26.6250,    -25.8750,    -28.6250,    -28.8750,    -28.8750,    -26.5000,    -24.7500,    -28.1250,    -28.1250],
        [     0.2637,    -31.2500,    -31.0000,    -29.5000,    -30.8750,    -30.7500,    -29.2500,    -28.5000,    -31.3750,    -31.7500,    -31.7500,    -29.1250,    -27.1250,    -30.6250,    -30.8750],
        [     0.2676,    -32.5000,    -31.7500,    -30.7500,    -32.2500,    -31.7500,    -29.8750,    -29.0000,    -32.7500,    -32.5000,    -32.7500,    -29.5000,    -27.6250,    -32.0000,    -31.5000],
        [     0.2617,    -35.0000,    -34.7500,    -33.2500,    -34.5000,    -34.0000,    -32.5000,    -31.6250,    -35.0000,    -35.0000,    -35.5000,    -32.2500,    -29.8750,    -34.2500,    -34.5000],
        [     0.2734,    -33.5000,    -33.0000,    -31.6250,    -33.0000,    -32.5000,    -31.1250,    -30.2500,    -33.5000,    -33.7500,    -33.7500,    -30.8750,    -28.7500,    -32.7500,    -33.0000],
        [     0.2812,    -32.0000,    -32.0000,    -30.3750,    -31.6250,    -31.7500,    -29.8750,    -29.1250,    -31.7500,    -32.5000,    -32.2500,    -29.8750,    -27.6250,    -31.1250,    -31.3750],
        [     0.2539,    -31.1250,    -30.6250,    -29.3750,    -30.7500,    -30.3750,    -28.8750,    -28.1250,    -31.1250,    -31.3750,    -31.5000,    -28.7500,    -26.6250,    -30.5000,    -30.6250],
        [     0.2773,    -33.2500,    -32.7500,    -31.7500,    -33.0000,    -32.5000,    -30.5000,    -29.8750,    -33.5000,    -33.5000,    -33.5000,    -30.3750,    -28.5000,    -32.7500,    -32.2500],
        [     0.2969,    -37.0000,    -37.0000,    -35.5000,    -36.5000,    -36.2500,    -34.2500,    -33.7500,    -37.0000,    -37.5000,    -37.2500,    -34.2500,    -31.8750,    -36.2500,    -36.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8793],
        [0.8547],
        [0.8543],
        [0.8460],
        [0.8337],
        [0.8219],
        [0.7933],
        [0.7840],
        [0.7827],
        [0.7708],
        [0.7659],
        [0.7786],
        [0.7456],
        [0.7413]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0967,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0317,     0.3496,     0.2051,     0.4121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.1963,     0.1289,     0.3203,     0.3535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0064,     0.1025,     0.0752,     0.1738,     0.3711,     0.2695,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0266,     0.0640,     0.0801,     0.1348,     0.2373,     0.3555,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0500,     0.0403,     0.0845,     0.1338,     0.1885,     0.1807,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0270,     0.0144,     0.0276,     0.0991,     0.1040,     0.1592,     0.3574,     0.2109,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0297,     0.0221,     0.0444,     0.0635,     0.1147,     0.1025,     0.1768,     0.2168,     0.2285,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0146,     0.0083,     0.0222,     0.0381,     0.0752,     0.0684,     0.1816,     0.1484,     0.3301,     0.1133,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0117,     0.0089,     0.0165,     0.0302,     0.0591,     0.0757,     0.1426,     0.1211,     0.1631,     0.2129,     0.1582,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0093,     0.0072,     0.0217,     0.0344,     0.0447,     0.0498,     0.0859,     0.0781,     0.1543,     0.0889,     0.0908,     0.3340,     0.0000,     0.0000],
        [    0.0000,     0.0039,     0.0022,     0.0046,     0.0166,     0.0197,     0.0312,     0.0752,     0.0439,     0.1182,     0.0537,     0.0708,     0.3594,     0.2002,     0.0000],
        [    0.0000,     0.0048,     0.0051,     0.0096,     0.0129,     0.0391,     0.0205,     0.0540,     0.0718,     0.0674,     0.0623,     0.0684,     0.1914,     0.2871,     0.1064]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0120,     -1.1406,     -1.1328,     -1.1094,     -1.1016,     -1.1562,     -1.1875,     -1.2031,     -1.2031,     -1.1562,     -1.2656,     -1.2344,     -1.2031,     -1.2812,     -1.3125],
        [    -0.0022,    -14.0000,    -13.0000,    -12.5625,    -12.7500,    -12.5625,    -13.5000,    -13.3750,    -12.9375,    -13.5625,    -13.5000,    -13.6875,    -13.1250,    -13.2500,    -13.7500],
        [    -0.0192,     -2.1719,     -2.3594,     -1.6953,     -1.5156,     -1.2969,     -1.6406,     -1.2656,     -1.3125,     -1.0000,     -1.2422,     -1.3594,     -0.6094,     -0.9180,     -1.1172],
        [    -0.0498,      2.3594,      1.8203,      2.5156,      3.1406,      2.7031,      3.1094,      3.5625,      3.1250,      3.5781,      3.6094,      3.1406,      4.1250,      3.7188,      3.7500],
        [    -0.0140,      5.0625,      4.6250,      5.5312,      5.6250,      6.4375,      6.6875,      6.9688,      7.0312,      7.8438,      6.8438,      7.1875,      8.2500,      7.9688,      7.6562],
        [     0.0072,      2.7812,      2.4844,      3.3125,      4.0625,      3.7500,      4.2188,      4.5938,      4.4688,      4.9688,      4.5312,      4.3125,      5.5625,      5.2812,      4.6875],
        [    -0.0386,      0.8359,      1.0703,      1.5859,      2.1562,      2.5469,      1.3125,      2.3750,      2.8906,      2.4688,      2.3438,      2.4844,      2.9688,      3.4844,      2.3750],
        [    -0.0576,      4.6875,      4.4688,      5.2188,      5.6875,      6.0312,      6.0000,      6.5625,      6.4375,      6.9375,      6.7188,      6.7812,      7.6250,      7.5312,      7.3125],
        [    -0.0110,      6.7812,      6.1562,      6.8125,      8.1250,      8.1250,      8.5625,      9.3750,      8.8750,      9.7500,      9.0000,      9.2500,     10.7500,     10.1875,      9.6875],
        [    -0.0786,      5.0938,      4.7812,      5.5000,      5.8438,      6.4375,      6.3125,      6.8750,      7.0625,      7.1250,      7.0938,      7.2188,      8.0625,      8.1875,      8.0000],
        [    -0.0742,      7.5938,      7.0000,      8.0000,      8.5625,      9.1875,      9.1250,     10.1250,      9.8750,     10.6875,      9.6250,     10.1875,     11.6250,     11.3125,     10.6250],
        [    -0.1357,     11.5000,     11.1875,     11.8125,     12.4375,     13.0625,     13.3125,     14.0000,     13.8125,     14.1250,     14.3750,     14.0625,     15.1250,     15.3750,     15.3750],
        [    -0.0444,      1.8203,      1.5625,      2.6719,      3.1250,      3.3906,      3.5000,      4.0312,      3.9531,      4.6250,      4.0625,      4.0938,      5.4062,      5.0938,      4.5625],
        [    -0.0236,      7.2188,      6.6562,      7.3750,      8.6875,      8.8125,      9.3125,     10.1875,      9.6250,     10.6250,      9.8125,     10.1250,     11.7500,     11.1250,     10.6875],
        [    -0.1118,      6.6562,      6.7188,      7.3438,      7.6562,      8.7500,      8.1250,      9.0625,      9.3750,      9.3125,      9.2500,      9.3125,     10.3750,     10.7500,      9.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5816],
        [0.3106],
        [0.1623],
        [0.1229],
        [0.1593],
        [0.1289],
        [0.0810],
        [0.0743],
        [0.0564],
        [0.0655],
        [0.0434],
        [0.0535],
        [0.0444],
        [0.0418]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0386,     0.6992,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.1089,     0.3359,     0.5547,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0132,     0.7852,     0.0771,     0.0781,     0.0457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.7383,     0.0369,     0.0879,     0.0311,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.6211,     0.0850,     0.1050,     0.0378,     0.0791,     0.0688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0024,     0.1279,     0.0024,     0.0043,     0.0171,     0.0226,     0.7578,     0.0659,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0068,     0.2539,     0.0021,     0.0045,     0.0043,     0.0175,     0.6250,     0.0422,     0.0459,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0396,     0.0079,     0.0162,     0.0059,     0.0258,     0.4102,     0.0603,     0.3066,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0110,     0.0014,     0.0079,     0.0030,     0.0077,     0.2910,     0.0491,     0.3262,     0.1816,     0.1211,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0138,     0.0030,     0.0082,     0.0075,     0.0181,     0.2305,     0.0618,     0.1064,     0.1318,     0.4043,     0.0134,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0237,     0.0014,     0.0019,     0.0039,     0.0099,     0.1289,     0.0164,     0.1455,     0.0388,     0.5664,     0.0045,     0.0569,     0.0000,     0.0000],
        [    0.0027,     0.0806,     0.0009,     0.0015,     0.0010,     0.0063,     0.1436,     0.0094,     0.0154,     0.0664,     0.5703,     0.0038,     0.0669,     0.0305,     0.0000],
        [    0.0002,     0.0079,     0.0016,     0.0051,     0.0010,     0.0041,     0.0757,     0.0121,     0.1143,     0.0403,     0.3555,     0.0114,     0.0869,     0.2256,     0.0588]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0049,     -0.2754,     -0.5195,     -0.5664,     -0.5000,     -0.4629,     -0.3652,     -0.5508,     -0.4336,     -0.4355,     -0.4375,     -0.5469,     -0.4980,     -0.4375,     -0.3652],
        [     0.0200,      5.0938,      4.4062,      5.4062,      3.9531,      4.2188,      5.7812,      4.6250,      5.1562,      4.5625,      6.5625,      4.7812,      5.0000,      5.7188,      5.3125],
        [     0.0288,      2.9219,      1.9531,      2.2656,      1.5469,      2.3438,      3.2344,      1.7891,      2.2188,      3.0312,      4.6562,      2.9219,      3.2344,      3.3750,      4.0938],
        [    -0.0078,      3.7656,      4.9062,      5.4062,      3.9375,      5.0000,      5.2500,      4.8125,      4.5000,      6.0938,      6.5625,      5.4375,      5.3438,      5.0312,      6.1562],
        [    -0.0027,      4.0938,      1.7656,      1.7734,      1.2344,      3.7656,      4.6875,      3.7344,      3.6094,      5.3750,      6.7500,      2.6562,      4.5000,      4.2812,      5.2500],
        [     0.0430,      5.1875,      2.1875,      3.0625,      2.0156,      3.2031,      4.5312,      2.6094,      4.1875,      4.9688,      6.1875,      3.0938,      4.3438,      4.9688,      5.0938],
        [     0.0469,      5.6562,      3.6562,      3.8750,      2.8594,      3.5938,      3.4531,      1.6484,      2.7969,      4.2188,      4.2500,      2.1406,      1.6562,      3.4688,      4.1875],
        [     0.0312,      4.0000,      0.0354,      0.6055,      1.9922,      2.2656,      5.7812,      3.3438,      4.3438,      3.7969,      5.4688,      2.0312,      2.9375,      4.2500,      5.3750],
        [     0.0591,      3.6875,     -1.1250,     -0.3594,     -0.3945,      1.0078,      4.5938,      1.8906,      1.9766,      3.7188,      5.3438,      0.8438,      2.7500,      2.0156,      4.1250],
        [     0.0525,      4.8438,      3.2188,      3.9375,      2.9219,      4.4062,      7.1875,      5.2500,      6.8750,      6.0000,      8.4375,      4.9062,      7.0312,      7.7188,      8.0625],
        [     0.0635,      3.6719,      1.6250,      3.3281,      2.3594,      3.3125,      6.9375,      5.1562,      7.0625,      6.4688,      6.0625,      2.9062,      6.0938,      7.0312,      7.1875],
        [     0.0422,      3.6406,      2.1250,      3.1250,      3.0312,      3.9062,      6.4688,      5.1250,      5.6875,      5.9062,      7.0312,      3.6094,      6.3750,      6.6562,      7.0938],
        [     0.0544,      2.9062,      0.0791,      0.3926,      1.0938,      2.0312,      4.5938,      2.5312,      4.7188,      3.3906,      6.0625,      1.2500,      3.7812,      5.5625,      5.5625],
        [     0.0640,      3.4531,     -1.0391,     -0.5312,     -0.9531,      0.9062,      4.0312,      1.3047,      1.7969,      3.2656,      5.4062,      0.3887,      3.2656,      2.4844,      3.8125],
        [     0.0854,      3.9219,      2.2812,      3.4844,      1.8203,      3.2500,      6.1875,      4.3438,      6.5938,      5.5312,      7.7188,      4.2812,      6.3125,      7.2500,      5.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7541],
        [0.4161],
        [0.3571],
        [0.3637],
        [0.3642],
        [0.3735],
        [0.3500],
        [0.3429],
        [0.3307],
        [0.3316],
        [0.3346],
        [0.3371],
        [0.3312],
        [0.3223]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8633, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0109, 0.6211, 0.3691, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0082, 0.6445, 0.2969, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0043, 0.3125, 0.5078, 0.0952, 0.0796, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0165, 0.4375, 0.1001, 0.0513, 0.2461, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0178, 0.3906, 0.0306, 0.0250, 0.2295, 0.1748, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0352, 0.3203, 0.0684, 0.0251, 0.1641, 0.1934, 0.1348, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0041, 0.0684, 0.0542, 0.0067, 0.3105, 0.2988, 0.1260, 0.0854, 0.0457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0194, 0.1943, 0.1064, 0.0134, 0.1338, 0.0874, 0.0479, 0.2500, 0.0623, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0019, 0.0742, 0.0806, 0.0096, 0.0972, 0.1045, 0.0957, 0.2871, 0.0649, 0.0801, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.0820, 0.1133, 0.0304, 0.0264, 0.0835, 0.1177, 0.1816, 0.1309, 0.0654, 0.1064, 0.0583, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.0596, 0.0391, 0.0084, 0.0806, 0.1172, 0.0864, 0.1074, 0.0781, 0.0566, 0.2383, 0.0242, 0.0645, 0.0000, 0.0000],
        [0.0058, 0.0850, 0.0562, 0.0044, 0.1035, 0.1260, 0.0515, 0.1064, 0.0562, 0.1099, 0.1787, 0.0332, 0.0559, 0.0277, 0.0000],
        [0.0037, 0.3281, 0.1416, 0.0193, 0.0469, 0.0371, 0.0684, 0.1143, 0.0459, 0.0376, 0.0112, 0.0175, 0.0461, 0.0233, 0.0601]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,     -0.2539,     -0.3105,     -0.3398,     -0.2598,     -0.2734,     -0.3242,     -0.3281,     -0.3867,     -0.3164,     -0.2910,     -0.3789,     -0.3730,     -0.3867,     -0.3164],
        [     0.0229,     -1.8281,     -3.6250,     -5.1562,     -2.3438,     -3.1562,     -4.5625,     -3.7500,     -4.8125,     -3.5000,     -2.3125,     -5.0625,     -4.4688,     -4.7812,     -2.6406],
        [     0.0265,      4.0625,      3.5625,      2.4531,      3.1875,      2.6406,      3.0469,      2.5000,      2.0781,      1.9297,      0.7227,      0.7891,      1.6953,      1.7578,      2.6719],
        [     0.0447,      4.4062,      3.6406,      1.9062,      3.3594,      3.3594,      2.8281,      2.6875,      1.8359,      1.8359,      0.2480,      0.8867,      1.5312,      1.3828,      2.6406],
        [     0.0100,      4.2812,      4.7812,      3.1094,      2.9219,      4.8125,      4.8750,      3.9219,      3.3906,      3.1562,      1.9219,      3.0000,      2.7812,      2.6406,      3.1406],
        [     0.0156,      3.2969,      1.8203,      1.1484,      2.7188,      2.2188,      3.1094,      1.2812,      0.3008,      1.1484,     -0.0464,      0.2080,     -0.6836,      0.2402,      2.2031],
        [    -0.0128,      3.0781,      0.5312,      0.3281,      2.5469,      2.2656,      2.0000,     -0.6367,     -1.3906,     -0.2891,     -1.9219,     -3.6562,     -2.8281,     -2.0469,      1.3984],
        [     0.0240,      2.2344,      0.6875,     -0.3105,      1.5625,      1.7344,      1.3672,      0.5273,      1.1016,      1.1641,      0.9531,     -1.3203,      0.0640,      0.7070,      1.3906],
        [     0.0337,      2.8438,      2.6094,      0.5195,      4.3750,      4.3125,      3.4531,      3.0625,      2.4375,      3.2812,      3.3906,      1.3281,      1.8516,      1.3750,      2.1094],
        [     0.0522,      2.3594,      1.7578,     -0.3203,      1.9844,      1.5547,      0.9570,      2.6094,      1.2188,      1.5312,      1.3438,      0.6250,      2.0469,      0.9766,      1.3594],
        [     0.0177,      3.6562,      3.7500,      1.6172,      3.9375,      4.0000,      3.9219,      5.0000,      3.5312,      3.7344,      3.9844,      3.4219,      3.6562,      2.6250,      2.8750],
        [     0.0339,      3.3594,      3.6875,      2.3750,      2.2344,      3.3906,      3.7188,      4.1562,      3.8281,      3.1406,      3.6250,      3.0156,      3.7656,      3.2031,      2.9688],
        [     0.0049,      0.4082,     -0.0114,     -1.5547,      0.7109,      1.0859,      0.7852,      1.0000,      0.6836,      0.3594,      1.7969,     -0.4941,      0.4883,      0.8008,      0.6484],
        [     0.0117,      2.6875,      2.2812,     -0.2656,      2.8906,      3.0938,      2.1875,      2.9219,      2.2812,      2.9531,      3.4375,      1.7500,      2.2812,      1.5703,      1.8906],
        [     0.0339,      4.5312,      3.6875,      1.6953,      2.5781,      2.3438,      2.9531,      3.4688,      2.5625,      2.3594,      1.1484,      1.5938,      2.5625,      1.8828,      2.8281]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6800],
        [0.2159],
        [0.2187],
        [0.2591],
        [0.2947],
        [0.2455],
        [0.2276],
        [0.2187],
        [0.2087],
        [0.2108],
        [0.1063],
        [0.1676],
        [0.1484],
        [0.1822]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.1025,  -1.6562,  -2.0312,  -1.9297,  -2.3750,  -2.0469,  -1.7812,  -1.9922,  -1.9688,  -1.6406,  -1.4219,  -1.9609,  -1.9844,  -1.5312,  -1.4922],
        [ -0.3516,  -9.6875,  -8.8125,  -6.3125,  -8.7500,  -8.6875,  -7.6562,  -8.0000,  -7.9375,  -6.0312,  -5.8125,  -7.8125,  -7.1562,  -5.8125,  -5.5938],
        [ -1.3828, -25.1250, -33.0000, -30.3750, -37.7500, -29.3750, -30.6250, -30.5000, -29.8750, -26.5000, -21.7500, -32.7500, -30.6250, -23.6250, -22.6250],
        [ -2.2500, -38.0000, -46.7500, -45.5000, -54.2500, -43.5000, -42.5000, -44.7500, -44.5000, -38.5000, -33.5000, -47.2500, -46.7500, -37.2500, -34.2500],
        [ -2.8281, -47.5000, -55.2500, -52.7500, -66.5000, -56.7500, -49.7500, -54.5000, -54.0000, -43.5000, -38.2500, -52.7500, -55.2500, -42.5000, -40.0000],
        [ -2.1562, -35.7500, -44.2500, -41.2500, -48.2500, -43.5000, -38.2500, -42.2500, -41.2500, -35.2500, -30.5000, -41.7500, -41.7500, -32.0000, -32.5000],
        [ -1.6328, -29.0000, -34.2500, -31.3750, -40.0000, -35.5000, -32.0000, -32.7500, -32.5000, -26.8750, -23.0000, -31.1250, -32.5000, -24.6250, -24.0000],
        [ -1.5078, -26.7500, -32.0000, -29.5000, -34.0000, -29.7500, -27.1250, -30.6250, -30.0000, -26.3750, -22.5000, -31.6250, -30.2500, -24.1250, -23.2500],
        [ -1.3984, -24.3750, -29.3750, -27.2500, -34.7500, -29.3750, -26.1250, -27.2500, -28.1250, -23.1250, -20.2500, -27.2500, -27.3750, -21.3750, -20.5000],
        [ -2.7500, -47.5000, -58.7500, -55.5000, -66.5000, -55.0000, -51.0000, -55.5000, -55.2500, -48.0000, -41.7500, -58.0000, -56.0000, -44.2500, -42.0000],
        [ -1.4141, -23.6250, -28.7500, -27.6250, -32.0000, -27.0000, -25.0000, -27.2500, -27.8750, -24.5000, -20.7500, -28.7500, -28.3750, -23.0000, -21.7500],
        [ -2.8750, -50.0000, -61.5000, -57.2500, -69.0000, -57.5000, -52.2500, -57.5000, -57.0000, -49.7500, -42.2500, -59.7500, -58.0000, -45.2500, -43.5000],
        [ -1.8906, -32.7500, -40.2500, -38.5000, -43.7500, -38.0000, -35.5000, -37.5000, -37.2500, -32.5000, -27.6250, -38.7500, -38.0000, -30.0000, -29.6250],
        [ -1.5547, -27.5000, -34.0000, -32.0000, -37.0000, -31.6250, -29.5000, -30.8750, -31.8750, -27.3750, -23.0000, -32.2500, -31.2500, -25.0000, -24.5000],
        [ -1.0781, -21.7500, -27.5000, -24.8750, -31.2500, -24.0000, -23.7500, -24.0000, -22.8750, -21.2500, -18.5000, -26.6250, -23.7500, -18.1250, -17.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7253],
        [0.5262],
        [0.6587],
        [0.6179],
        [0.6743],
        [0.6038],
        [0.6054],
        [0.5807],
        [0.5529],
        [0.5707],
        [0.6261],
        [0.6568],
        [0.5890],
        [0.3819]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0055,     0.9531,     0.0430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0001,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0008,     0.0000,     0.0000,     0.0004,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0011,     0.0001,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0449,  -0.7227,  -0.7031,  -1.0391,  -0.7305,  -0.9141,  -0.8359,  -1.0078,  -1.2344,  -1.2422,  -1.0547,  -1.0078,  -1.3594,  -1.4453,  -0.9922],
        [ -0.5117,  -7.5000,  -8.6250, -12.8125,  -9.3125, -10.8125, -10.8125, -11.2500, -15.7500, -14.6875, -13.7500, -11.7500, -17.5000, -19.7500, -11.8125],
        [  0.3027,   5.4688,   2.3750,   4.0625,   2.8594,   4.2500,   3.2969,   5.0938,   4.5625,   5.1250,   3.4531,   4.3125,   3.8438,   3.2344,   5.2188],
        [ -0.6133,  -9.0000,  -8.3125, -12.5625,  -8.6250, -12.1250, -11.0625, -14.8750, -17.3750, -20.5000, -17.8750, -15.6250, -22.0000, -23.7500, -13.3125],
        [ -1.2266, -17.7500, -16.6250, -26.2500, -18.0000, -23.5000, -21.1250, -25.2500, -30.5000, -31.1250, -28.2500, -23.3750, -34.5000, -37.5000, -25.7500],
        [ -1.1797, -17.5000, -17.0000, -26.7500, -18.5000, -23.6250, -21.1250, -25.2500, -30.7500, -31.0000, -27.2500, -24.2500, -34.2500, -36.5000, -25.1250],
        [ -0.8984, -14.3125, -14.5000, -22.0000, -15.5625, -19.0000, -17.2500, -21.2500, -24.6250, -24.3750, -20.5000, -19.5000, -27.1250, -28.1250, -20.5000],
        [ -0.8398, -12.5000, -12.1875, -18.6250, -13.8750, -17.1250, -15.5000, -18.5000, -23.8750, -24.8750, -22.0000, -19.1250, -27.5000, -29.6250, -19.0000],
        [ -0.5742,  -9.1875, -10.1875, -13.5625,  -8.3125, -11.0000, -10.6250, -13.4375, -15.8125, -15.9375, -12.8750, -13.3750, -17.0000, -18.6250, -12.3125],
        [ -0.6172, -10.6250, -12.9375, -17.6250, -11.0000, -13.8125, -12.4375, -14.6875, -16.3750, -16.6250, -11.5000, -14.0625, -17.6250, -18.1250, -14.5000],
        [ -0.9609, -15.5625, -16.5000, -21.7500, -14.6875, -16.8750, -15.4375, -19.3750, -22.8750, -23.7500, -16.1250, -20.0000, -24.3750, -25.1250, -19.7500],
        [ -0.4785,  -7.6562, -11.3125, -14.6875,  -8.3125,  -8.9375,  -9.3125, -11.1250, -11.4375, -11.4375,  -7.2812, -10.3750, -12.9375, -12.0000, -10.0625],
        [ -0.8516, -13.2500, -14.0625, -20.1250, -12.6875, -16.1250, -14.8750, -19.3750, -22.5000, -24.3750, -20.1250, -19.7500, -26.3750, -27.0000, -18.6250],
        [ -0.6836, -11.3750, -11.8750, -16.3750,  -8.9375, -13.0000, -11.8125, -15.4375, -19.0000, -19.6250, -15.4375, -16.2500, -19.7500, -20.7500, -14.4375],
        [ -0.7422, -14.1875, -14.9375, -21.5000, -14.2500, -17.5000, -16.0000, -21.1250, -21.2500, -24.5000, -19.1250, -21.3750, -25.3750, -24.2500, -18.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8200],
        [0.3404],
        [0.6395],
        [0.7492],
        [0.8913],
        [0.8177],
        [0.8433],
        [0.8154],
        [0.7536],
        [0.9017],
        [0.5860],
        [0.8748],
        [0.8729],
        [0.6963]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0078,     -1.0625,     -0.9141,     -1.2656,     -1.0547,     -0.9961,     -0.9453,     -1.0547,     -0.9688,     -0.8945,     -0.7734,     -1.0312,     -0.8867,     -0.9297,     -0.9766],
        [    -0.1157,     19.2500,     13.8125,     16.7500,     13.5625,     11.1875,     13.0000,     13.1250,     12.6250,     11.5000,      9.2500,     12.3125,      8.5000,     10.6875,     12.7500],
        [     0.1299,    -17.8750,    -14.0000,    -18.1250,    -17.6250,    -14.9375,    -15.2500,    -15.8125,    -15.9375,    -13.5000,    -11.6250,    -14.6250,    -12.4375,    -14.4375,    -13.8125],
        [     0.2656,    -38.2500,    -30.7500,    -41.0000,    -36.0000,    -32.5000,    -33.0000,    -36.5000,    -33.0000,    -29.3750,    -24.5000,    -33.7500,    -28.3750,    -30.1250,    -32.5000],
        [     0.2422,    -32.5000,    -28.8750,    -38.7500,    -31.2500,    -30.2500,    -28.6250,    -33.2500,    -29.8750,    -27.6250,    -24.1250,    -32.5000,    -28.2500,    -29.6250,    -31.2500],
        [     0.2578,    -37.0000,    -31.8750,    -44.2500,    -36.7500,    -33.2500,    -33.2500,    -36.7500,    -32.7500,    -31.5000,    -26.8750,    -36.7500,    -31.3750,    -32.2500,    -34.5000],
        [     0.2227,    -31.5000,    -26.7500,    -37.2500,    -31.3750,    -30.0000,    -29.3750,    -34.0000,    -28.8750,    -27.0000,    -22.1250,    -32.0000,    -28.2500,    -28.2500,    -30.6250],
        [     0.1904,    -27.1250,    -23.3750,    -31.6250,    -27.5000,    -26.1250,    -25.7500,    -29.1250,    -25.0000,    -23.8750,    -19.6250,    -27.3750,    -23.8750,    -24.1250,    -25.8750],
        [     0.2441,    -37.2500,    -30.5000,    -40.5000,    -35.0000,    -33.0000,    -32.2500,    -36.7500,    -31.7500,    -30.0000,    -23.0000,    -33.0000,    -27.6250,    -28.3750,    -32.5000],
        [     0.3652,    -52.2500,    -43.0000,    -57.5000,    -49.5000,    -44.7500,    -44.5000,    -48.2500,    -44.2500,    -41.0000,    -33.7500,    -46.0000,    -37.7500,    -40.2500,    -44.2500],
        [     0.3320,    -47.7500,    -40.2500,    -54.7500,    -46.2500,    -43.2500,    -41.7500,    -46.5000,    -42.2500,    -39.0000,    -32.5000,    -44.2500,    -37.0000,    -39.0000,    -42.7500],
        [     0.2451,    -32.7500,    -27.0000,    -36.0000,    -32.0000,    -28.1250,    -29.1250,    -29.6250,    -27.5000,    -25.6250,    -22.0000,    -27.7500,    -22.7500,    -24.5000,    -26.6250],
        [     0.3145,    -45.7500,    -38.2500,    -51.2500,    -43.5000,    -40.5000,    -40.2500,    -44.7500,    -39.0000,    -37.5000,    -30.0000,    -42.0000,    -35.2500,    -36.2500,    -40.2500],
        [     0.3555,    -52.2500,    -43.5000,    -58.5000,    -48.7500,    -46.0000,    -44.5000,    -50.5000,    -44.7500,    -42.2500,    -33.7500,    -47.2500,    -39.5000,    -41.2500,    -46.2500],
        [     0.2266,    -31.5000,    -25.6250,    -33.7500,    -29.5000,    -26.5000,    -26.6250,    -28.5000,    -26.3750,    -24.2500,    -20.1250,    -26.6250,    -21.8750,    -23.8750,    -26.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2514],
        [0.4303],
        [0.5053],
        [0.9019],
        [0.9977],
        [0.8838],
        [0.7466],
        [0.9009],
        [0.7736],
        [0.9818],
        [0.4709],
        [0.9590],
        [0.9016],
        [0.5215]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.5078,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3359,     0.1416,     0.5234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0171,     0.0181,     0.0018,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.0825,     0.1289,     0.0187,     0.0087,     0.0071,     0.0091,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3809,     0.1309,     0.3750,     0.0410,     0.0195,     0.0130,     0.0284,     0.0100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0186,     0.0344,     0.0051,     0.0016,     0.0012,     0.0029,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.1416,     0.1328,     0.5664,     0.1123,     0.0226,     0.0084,     0.0032,     0.0022,     0.0125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1895,     0.1504,     0.5312,     0.0527,     0.0112,     0.0050,     0.0018,     0.0021,     0.0022,     0.0007,     0.0522,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0009,     0.0019,     0.0005,     0.0002,     0.0002,     0.0002,     0.0009,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2207,     0.2197,     0.4023,     0.0452,     0.0058,     0.0084,     0.0023,     0.0006,     0.0006,     0.0003,     0.0376,     0.0016,     0.0007,     0.0542]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0153,     -0.1611,     -0.1504,     -0.1982,     -0.1943,     -0.1846,     -0.1650,     -0.1475,     -0.2500,     -0.2422,     -0.2314,     -0.2080,     -0.2559,     -0.2676,     -0.1992],
        [     0.1611,      6.2812,      6.7188,      6.3750,      4.4375,      2.7812,      3.4531,      1.9375,      0.9648,      0.4434,     -0.4824,      4.4688,      0.9102,      0.3340,      5.2812],
        [     0.3340,      9.1875,      9.1250,      9.5000,      7.7500,      5.8125,      6.1562,      5.0312,      4.0312,      3.6094,      2.8438,      7.5625,      4.5312,      3.9375,      8.0000],
        [     0.6172,     12.3750,     11.5000,     12.8125,     11.0625,      9.1250,      8.7500,      7.4375,      8.7500,      8.6875,      7.6875,     11.6250,      9.9375,      9.7500,     11.6250],
        [    -0.5664,     -4.5938,     -4.5312,     -6.8438,     -6.7812,     -6.2812,     -5.8750,     -5.2188,     -8.6250,     -9.4375,     -8.8125,     -7.4062,     -9.3750,     -9.7500,     -6.6250],
        [    -1.6016,    -18.5000,    -17.2500,    -22.6250,    -22.2500,    -19.2500,    -18.1250,    -16.1250,    -25.5000,    -24.8750,    -24.8750,    -22.7500,    -27.3750,    -28.6250,    -22.5000],
        [    -0.4219,     -2.6250,     -2.1719,     -4.0938,     -4.8750,     -5.0625,     -4.8125,     -4.9688,     -8.0625,     -8.0000,     -7.9375,     -5.1562,     -8.4375,     -9.0625,     -4.4062],
        [    -0.3203,     -1.3906,     -0.3359,     -2.5469,     -3.2969,     -3.7031,     -2.9219,     -3.9531,     -6.7500,     -6.4375,     -7.3125,     -3.9531,     -7.5625,     -8.9375,     -2.7031],
        [    -0.5625,     -4.4688,     -3.8594,     -5.7500,     -6.9062,     -7.2188,     -6.3438,     -5.9688,    -12.0000,    -10.5625,    -10.1875,     -7.4375,    -11.7500,    -13.0625,     -6.3750],
        [     0.4258,      7.6562,      7.5938,      9.0625,      7.4062,      5.8125,      4.8125,      3.8594,      3.4844,      5.2188,      4.2812,      7.1875,      4.7812,      3.5312,      7.0625],
        [    -0.9766,    -12.8750,    -11.6250,    -13.3125,    -13.3750,    -13.4375,    -12.7500,    -11.5625,    -18.5000,    -17.5000,    -16.1250,    -15.0000,    -19.0000,    -19.8750,    -14.8750],
        [     0.4863,     10.8750,     10.6875,     11.9375,      9.6250,      8.0625,      7.2500,      6.2188,      6.3750,      6.4062,      5.2812,      9.6250,      6.6562,      6.3125,      9.6250],
        [    -1.0469,    -12.3125,    -11.6875,    -14.7500,    -14.2500,    -12.6250,    -12.3125,    -10.1875,    -17.0000,    -16.5000,    -16.1250,    -15.5625,    -18.5000,    -19.2500,    -14.9375],
        [    -0.6758,     -7.7188,     -6.9688,     -8.3125,     -9.1875,     -9.3125,     -8.9375,     -7.7188,    -13.6875,    -12.1250,    -11.6250,     -9.8125,    -13.7500,    -14.4375,     -9.3750],
        [     0.3477,      9.5625,      9.5625,     10.1250,      7.9688,      5.9062,      6.2812,      5.0000,      3.5781,      3.5781,      2.9844,      7.7812,      4.6250,      3.8438,      8.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8407],
        [0.2980],
        [0.5068],
        [0.9915],
        [1.0000],
        [0.9762],
        [0.9390],
        [0.9922],
        [0.6614],
        [1.0000],
        [0.4097],
        [1.0000],
        [0.9993],
        [0.5501]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0112,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0649,     0.3398,     0.5977,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0605,     0.3105,     0.3203,     0.3105,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0020,     0.0074,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0014,     0.0049,     0.0004,     0.0001,     0.0011,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.0203,     0.0864,     0.0189,     0.0075,     0.0131,     0.0034,     0.0104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0027,     0.0116,     0.0004,     0.0002,     0.0024,     0.0001,     0.0013,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1001,     0.1670,     0.1484,     0.0540,     0.1348,     0.1631,     0.0544,     0.1348,     0.0315,     0.0114,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.1055,     0.1045,     0.1147,     0.2393,     0.0610,     0.0791,     0.0398,     0.0491,     0.0703,     0.0708,     0.0630,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.0479,     0.0542,     0.0757,     0.1387,     0.0525,     0.0486,     0.0327,     0.0262,     0.0413,     0.0645,     0.0315,     0.2002,     0.0967,     0.0879]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0126,     -0.1826,     -0.1514,     -0.2197,     -0.2334,     -0.1592,     -0.2324,     -0.1797,     -0.2441,     -0.3145,     -0.2393,     -0.1807,     -0.2637,     -0.3184,     -0.2754],
        [    -0.2578,     -4.7500,     -2.3594,     -3.8594,     -4.9062,     -4.2500,     -5.5625,     -3.9844,     -5.2500,     -6.6875,     -4.7500,     -3.2969,     -4.7500,     -6.3750,     -5.1250],
        [     0.0151,      1.6641,      2.2344,      1.7031,      1.9062,      1.5391,      1.0859,      0.9648,      0.6523,      0.4395,      1.1953,      1.5859,      1.8750,      1.0547,      1.4922],
        [     0.0403,      1.6719,      1.7031,      1.6719,      1.9688,      1.6016,      1.5234,      1.2734,      0.8242,      0.6133,      1.2422,      1.3281,      1.8828,      1.2266,      1.4844],
        [    -0.4980,     -6.7188,     -5.4062,     -8.2500,     -8.9375,     -6.4062,     -9.0000,     -6.9062,     -9.8125,    -12.4375,     -9.7500,     -6.8438,    -10.6250,    -13.1250,    -10.3750],
        [    -1.1797,    -17.5000,    -13.1875,    -19.1250,    -22.3750,    -17.1250,    -22.7500,    -18.7500,    -22.2500,    -28.0000,    -23.0000,    -15.5625,    -26.1250,    -29.2500,    -24.5000],
        [    -0.4863,     -7.0312,     -5.8125,     -8.3125,     -9.3750,     -7.3125,     -9.5625,     -7.4062,     -9.5625,    -11.9375,     -9.4375,     -6.9375,    -10.4375,    -12.3750,    -10.4375],
        [    -0.2695,     -4.0000,     -2.5469,     -4.0625,     -5.0000,     -4.4375,     -5.7812,     -4.6562,     -5.3750,     -7.1562,     -5.3750,     -3.5625,     -6.0625,     -6.8438,     -5.6875],
        [    -0.5430,     -6.4688,     -4.9688,     -8.3750,     -9.0000,     -6.5312,     -9.5625,     -7.1875,    -10.3125,    -13.3125,    -10.3125,     -6.6562,    -11.2500,    -13.9375,    -10.6875],
        [    -0.0500,      0.4609,      0.3418,     -0.6680,      0.2441,      0.4355,     -0.6602,      0.2461,     -1.2031,     -2.2344,     -1.3125,     -0.6094,     -1.1797,     -2.6250,     -0.9414],
        [    -1.0078,    -16.6250,    -13.6250,    -18.2500,    -19.5000,    -14.8750,    -20.1250,    -15.9375,    -20.2500,    -25.8750,    -21.1250,    -15.4375,    -23.6250,    -26.8750,    -23.1250],
        [     0.1504,      3.7500,      3.7500,      3.8438,      4.5625,      3.2031,      3.4688,      2.7812,      2.9844,      3.3438,      3.3594,      3.2344,      4.1875,      3.8750,      4.2812],
        [    -0.9883,    -15.6875,    -13.1250,    -18.0000,    -18.6250,    -13.6875,    -19.3750,    -14.9375,    -19.7500,    -25.6250,    -20.2500,    -15.1250,    -23.0000,    -26.2500,    -22.6250],
        [    -0.9023,    -12.8125,    -10.5625,    -15.2500,    -16.5000,    -12.1875,    -17.5000,    -13.8125,    -17.6250,    -22.8750,    -18.1250,    -12.6875,    -21.1250,    -24.2500,    -19.5000],
        [     0.1660,      3.5000,      3.6250,      3.9688,      4.5625,      3.5938,      3.5156,      3.1250,      2.9062,      3.3594,      3.7969,      3.0938,      4.9375,      4.2188,      4.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9312],
        [0.2163],
        [0.0658],
        [0.8905],
        [1.0000],
        [0.8768],
        [0.4039],
        [0.8674],
        [0.1163],
        [0.9993],
        [0.0153],
        [0.9964],
        [0.9635],
        [0.0150]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1143,     0.4863,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0193,     0.2236,     0.4277,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0520,     0.0027,     0.0022,     0.0044,     0.0015,     0.0023,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0544,     0.1885,     0.1719,     0.1338,     0.0742,     0.1060,     0.0417,     0.0476,     0.0547,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.0496,     0.1611,     0.1196,     0.0337,     0.1089,     0.0200,     0.0391,     0.0273,     0.1660,     0.0933,     0.1807,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0427,     0.1357,     0.0981,     0.0249,     0.0791,     0.0144,     0.0289,     0.0209,     0.1377,     0.0728,     0.1494,     0.0238,     0.0327,     0.1377]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.2188,     -0.3145,     -0.3066,     -0.2402,     -0.2988,     -0.2383,     -0.2773,     -0.2461,     -0.3398,     -0.3066,     -0.3320,     -0.2393,     -0.2637,     -0.3340],
        [    -0.0087,      1.7656,     -2.0469,     -2.7188,     -2.7500,     -3.1250,     -3.8906,     -4.2188,     -3.3594,     -3.4062,     -3.4062,     -2.9844,     -2.9219,     -3.2188,     -3.3750],
        [     0.0070,      1.4531,      1.2578,      1.0156,      0.4766,      0.8672,     -0.1216,      0.1064,      0.1768,      0.9531,      0.6875,      1.1172,      0.4141,      0.4590,      0.9883],
        [     0.0175,      2.4688,      3.1094,      2.8594,      1.9609,      2.6094,      1.5000,      1.8984,      1.7266,      3.0469,      2.6875,      3.1250,      1.9141,      2.1562,      3.0625],
        [    -0.0601,     -8.3125,    -12.8750,    -12.8125,    -10.5000,    -12.9375,    -10.7500,    -12.3750,    -10.6875,    -14.2500,    -12.5000,    -13.8125,    -10.3125,    -11.1250,    -14.0000],
        [    -0.1367,    -18.0000,    -26.6250,    -25.8750,    -19.8750,    -25.5000,    -19.7500,    -23.1250,    -20.2500,    -28.5000,    -25.6250,    -28.1250,    -20.1250,    -21.8750,    -28.2500],
        [    -0.0515,     -6.9375,    -11.6875,    -11.7500,    -10.0000,    -12.0000,    -10.5625,    -12.0625,    -10.1875,    -13.2500,    -11.7500,    -12.6875,     -9.8125,    -10.4375,    -12.9375],
        [    -0.0204,     -2.9062,     -5.8750,     -6.0938,     -5.3750,     -6.4062,     -6.0312,     -6.9062,     -5.6562,     -6.9062,     -6.1875,     -6.5312,     -5.3750,     -5.6562,     -6.7188],
        [    -0.0801,    -11.3125,    -17.1250,    -17.0000,    -13.6250,    -17.5000,    -13.8750,    -16.2500,    -14.1875,    -18.7500,    -17.0000,    -18.3750,    -13.6875,    -14.8750,    -18.5000],
        [     0.0087,      1.2500,      1.1562,      0.9102,      0.3164,      0.6719,     -0.2559,     -0.1279,      0.0109,      0.8555,      0.6172,      1.0469,      0.2266,      0.3340,      0.9336],
        [    -0.1060,    -14.9375,    -21.1250,    -20.5000,    -15.7500,    -20.0000,    -15.5625,    -18.1250,    -16.0000,    -22.3750,    -19.7500,    -22.1250,    -15.7500,    -17.1250,    -22.2500],
        [     0.0251,      3.5938,      4.7812,      4.4688,      3.2031,      4.3750,      2.6875,      3.3594,      3.0000,      4.8125,      4.2188,      4.8750,      3.1094,      3.4375,      4.8125],
        [    -0.0889,    -12.2500,    -19.1250,    -19.0000,    -15.3750,    -18.7500,    -15.3750,    -18.1250,    -15.7500,    -21.0000,    -18.5000,    -20.5000,    -15.1875,    -16.2500,    -20.6250],
        [    -0.0967,    -14.0625,    -20.2500,    -19.8750,    -15.6875,    -19.7500,    -15.9375,    -18.3750,    -15.9375,    -21.7500,    -18.8750,    -21.3750,    -15.6250,    -16.7500,    -21.5000],
        [     0.0261,      3.8906,      5.0625,      4.7188,      3.3438,      4.5000,      2.7969,      3.5000,      3.1719,      5.0625,      4.4375,      5.1562,      3.3125,      3.6250,      5.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0208],
        [0.0154],
        [0.0050],
        [0.3847],
        [1.0000],
        [0.4775],
        [0.1327],
        [0.2895],
        [0.0052],
        [1.0000],
        [0.0020],
        [0.9105],
        [0.5367],
        [0.0018]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( ........:0.0064 impunity:0.0023 impunity:0.0032 vel:0.0081acious:0.0030!:0.0050 frag:0.0044bid:0.0030)
bid
------
		( impunity:0.0023 impunity:0.0032 vel:0.0081acious:0.0030!:0.0050 frag:0.0044bid:0.0030 impunity:0.0023)
 impunityposed jurisd jurisd jurisduct impunity ........endif.lihoodenance ........ society ........
@ 3550 train 3.9292 , allloss: 3.9292, dt: 1191.52ms, fracRes: 0.3909, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2135, norm(y): 0.9973, norm:0.3398, tok/sec: 110003.92, flops:96.35, batch-reuse:1
@ 3551 train 4.0418 , allloss: 4.0418, dt: 693.95ms, fracRes: 0.3886, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2114, norm(y): 0.9979, norm:0.3933, tok/sec: 188877.33, flops:165.43, batch-reuse:1
@ 3552 train 3.9410 , allloss: 3.9410, dt: 695.35ms, fracRes: 0.3944, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.2130, norm(y): 0.9974, norm:0.3293, tok/sec: 188497.90, flops:165.10, batch-reuse:1
@ 3553 train 3.8981 , allloss: 3.8981, dt: 702.09ms, fracRes: 0.3981, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2168, norm(y): 0.9971, norm:0.3627, tok/sec: 186689.45, flops:163.51, batch-reuse:1
@ 3554 train 3.8818 , allloss: 3.8818, dt: 700.86ms, fracRes: 0.3958, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2095, norm(y): 0.9969, norm:0.3504, tok/sec: 187014.80, flops:163.80, batch-reuse:1
@ 3555 train 3.9486 , allloss: 3.9486, dt: 678.76ms, fracRes: 0.3924, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2127, norm(y): 0.9975, norm:0.3586, tok/sec: 193103.91, flops:169.13, batch-reuse:1
@ 3556 train 3.8920 , allloss: 3.8920, dt: 685.57ms, fracRes: 0.3871, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2080, norm(y): 0.9974, norm:0.3486, tok/sec: 191186.10, flops:167.45, batch-reuse:1
@ 3557 train 4.0346 , allloss: 4.0346, dt: 694.09ms, fracRes: 0.3777, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2131, norm(y): 0.9987, norm:0.4312, tok/sec: 188838.73, flops:165.40, batch-reuse:1
@ 3558 train 3.8402 , allloss: 3.8402, dt: 691.05ms, fracRes: 0.3856, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2107, norm(y): 0.9980, norm:0.3551, tok/sec: 189671.95, flops:166.13, batch-reuse:1
@ 3559 train 3.9258 , allloss: 3.9258, dt: 710.35ms, fracRes: 0.3837, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2094, norm(y): 0.9976, norm:0.3709, tok/sec: 184517.42, flops:161.61, batch-reuse:1
@ 3560 train 3.8673 , allloss: 3.8673, dt: 696.41ms, fracRes: 0.3794, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2048, norm(y): 0.9975, norm:0.4004, tok/sec: 188210.73, flops:164.85, batch-reuse:1
@ 3561 train 3.9095 , allloss: 3.9095, dt: 689.93ms, fracRes: 0.3859, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2080, norm(y): 0.9974, norm:0.3818, tok/sec: 189978.84, flops:166.39, batch-reuse:1
@ 3562 train 3.9048 , allloss: 3.9048, dt: 693.37ms, fracRes: 0.3871, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2070, norm(y): 0.9975, norm:0.3814, tok/sec: 189034.96, flops:165.57, batch-reuse:1
@ 3563 train 3.9423 , allloss: 3.9423, dt: 693.19ms, fracRes: 0.3872, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2033, norm(y): 0.9975, norm:0.4248, tok/sec: 189084.44, flops:165.61, batch-reuse:1
@ 3564 train 3.9017 , allloss: 3.9017, dt: 695.94ms, fracRes: 0.3891, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2056, norm(y): 0.9975, norm:0.3887, tok/sec: 188337.23, flops:164.96, batch-reuse:1
@ 3565 train 3.9123 , allloss: 3.9123, dt: 686.24ms, fracRes: 0.3953, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2162, norm(y): 0.9976, norm:0.3818, tok/sec: 191001.57, flops:167.29, batch-reuse:1
@ 3566 train 3.8556 , allloss: 3.8556, dt: 689.16ms, fracRes: 0.3978, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2147, norm(y): 0.9973, norm:0.3775, tok/sec: 190192.24, flops:166.58, batch-reuse:1
@ 3567 train 3.9566 , allloss: 3.9566, dt: 704.15ms, fracRes: 0.3928, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2115, norm(y): 0.9974, norm:0.3806, tok/sec: 186142.80, flops:163.03, batch-reuse:1
@ 3568 train 3.8344 , allloss: 3.8344, dt: 704.14ms, fracRes: 0.3927, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2108, norm(y): 0.9974, norm:0.3831, tok/sec: 186143.87, flops:163.04, batch-reuse:1
@ 3569 train 3.9748 , allloss: 3.9748, dt: 682.00ms, fracRes: 0.3950, norm(attn): 0.4629, norm(output): 1.0000, norm(x): 1.2105, norm(y): 0.9977, norm:0.3898, tok/sec: 192186.43, flops:168.33, batch-reuse:1
@ 3570 train 3.9375 , allloss: 3.9375, dt: 684.05ms, fracRes: 0.3952, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2125, norm(y): 0.9977, norm:0.3877, tok/sec: 191611.50, flops:167.82, batch-reuse:1
@ 3571 train 3.9598 , allloss: 3.9598, dt: 697.19ms, fracRes: 0.3936, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2096, norm(y): 0.9980, norm:0.3717, tok/sec: 188001.29, flops:164.66, batch-reuse:1
@ 3572 train 3.8981 , allloss: 3.8981, dt: 677.87ms, fracRes: 0.3927, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2152, norm(y): 0.9980, norm:0.4335, tok/sec: 193359.48, flops:169.35, batch-reuse:1
@ 3573 train 3.9579 , allloss: 3.9579, dt: 681.69ms, fracRes: 0.3892, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2181, norm(y): 0.9979, norm:0.3890, tok/sec: 192274.95, flops:168.41, batch-reuse:1
@ 3574 train 3.8423 , allloss: 3.8423, dt: 700.85ms, fracRes: 0.3903, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2098, norm(y): 0.9975, norm:0.3990, tok/sec: 187018.62, flops:163.80, batch-reuse:1
@ 3575 train 3.8251 , allloss: 3.8251, dt: 696.24ms, fracRes: 0.3982, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2117, norm(y): 0.9974, norm:0.3822, tok/sec: 188255.71, flops:164.88, batch-reuse:1
@ 3576 train 3.8216 , allloss: 3.8216, dt: 694.80ms, fracRes: 0.3940, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.2066, norm(y): 0.9976, norm:0.4095, tok/sec: 188646.21, flops:165.23, batch-reuse:1
@ 3577 train 3.9828 , allloss: 3.9828, dt: 700.30ms, fracRes: 0.3878, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2080, norm(y): 0.9979, norm:0.4151, tok/sec: 187165.06, flops:163.93, batch-reuse:1
@ 3578 train 3.9051 , allloss: 3.9051, dt: 699.74ms, fracRes: 0.3800, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2062, norm(y): 0.9981, norm:0.3763, tok/sec: 187314.92, flops:164.06, batch-reuse:1
@ 3579 train 3.8507 , allloss: 3.8507, dt: 701.00ms, fracRes: 0.3845, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2129, norm(y): 0.9977, norm:0.3759, tok/sec: 186978.23, flops:163.77, batch-reuse:1
@ 3580 train 3.8912 , allloss: 3.8912, dt: 699.76ms, fracRes: 0.3874, norm(attn): 0.4648, norm(output): 1.0156, norm(x): 1.2136, norm(y): 0.9976, norm:0.4103, tok/sec: 187310.33, flops:164.06, batch-reuse:1
@ 3581 train 3.8623 , allloss: 3.8623, dt: 693.09ms, fracRes: 0.3866, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2082, norm(y): 0.9974, norm:0.3685, tok/sec: 189112.41, flops:165.64, batch-reuse:1
@ 3582 train 3.8725 , allloss: 3.8725, dt: 682.23ms, fracRes: 0.3905, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2072, norm(y): 0.9974, norm:0.4112, tok/sec: 192122.22, flops:168.27, batch-reuse:1
@ 3583 train 3.9954 , allloss: 3.9954, dt: 690.71ms, fracRes: 0.3904, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2105, norm(y): 0.9976, norm:0.3747, tok/sec: 189764.92, flops:166.21, batch-reuse:1
@ 3584 train 3.8997 , allloss: 3.8997, dt: 693.89ms, fracRes: 0.3896, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2085, norm(y): 0.9978, norm:0.3698, tok/sec: 188894.47, flops:165.44, batch-reuse:1
@ 3585 train 3.8854 , allloss: 3.8854, dt: 689.54ms, fracRes: 0.3912, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.2101, norm(y): 0.9974, norm:0.3639, tok/sec: 190086.96, flops:166.49, batch-reuse:1
@ 3586 train 3.8073 , allloss: 3.8073, dt: 679.68ms, fracRes: 0.3910, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2068, norm(y): 0.9973, norm:0.3786, tok/sec: 192843.52, flops:168.90, batch-reuse:1
@ 3587 train 3.9106 , allloss: 3.9106, dt: 700.71ms, fracRes: 0.3866, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2103, norm(y): 0.9975, norm:0.3673, tok/sec: 187055.65, flops:163.83, batch-reuse:1
@ 3588 train 3.8814 , allloss: 3.8814, dt: 696.49ms, fracRes: 0.3861, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2046, norm(y): 0.9976, norm:0.3663, tok/sec: 188190.11, flops:164.83, batch-reuse:1
@ 3589 train 3.9848 , allloss: 3.9848, dt: 708.40ms, fracRes: 0.3877, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2118, norm(y): 0.9982, norm:0.3689, tok/sec: 185024.16, flops:162.05, batch-reuse:1
@ 3590 train 3.7709 , allloss: 3.7709, dt: 697.96ms, fracRes: 0.3915, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2076, norm(y): 0.9977, norm:0.3677, tok/sec: 187791.80, flops:164.48, batch-reuse:1
@ 3591 train 3.8826 , allloss: 3.8826, dt: 695.47ms, fracRes: 0.3908, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2072, norm(y): 0.9976, norm:0.3899, tok/sec: 188466.49, flops:165.07, batch-reuse:1
@ 3592 train 3.7822 , allloss: 3.7822, dt: 705.12ms, fracRes: 0.3885, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2010, norm(y): 0.9978, norm:0.3512, tok/sec: 185886.00, flops:162.81, batch-reuse:1
@ 3593 train 3.9600 , allloss: 3.9600, dt: 689.81ms, fracRes: 0.3912, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2054, norm(y): 0.9981, norm:0.3972, tok/sec: 190012.98, flops:166.42, batch-reuse:1
@ 3594 train 3.8434 , allloss: 3.8434, dt: 702.91ms, fracRes: 0.4022, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2169, norm(y): 0.9973, norm:0.3461, tok/sec: 186471.81, flops:163.32, batch-reuse:1
@ 3595 train 3.9139 , allloss: 3.9139, dt: 701.30ms, fracRes: 0.3960, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2140, norm(y): 0.9979, norm:0.4033, tok/sec: 186898.83, flops:163.70, batch-reuse:1
@ 3596 train 3.8972 , allloss: 3.8972, dt: 682.07ms, fracRes: 0.3917, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9977, norm:0.3583, tok/sec: 192169.30, flops:168.31, batch-reuse:1
@ 3597 train 3.8809 , allloss: 3.8809, dt: 693.44ms, fracRes: 0.3869, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2074, norm(y): 0.9981, norm:0.3720, tok/sec: 189016.76, flops:165.55, batch-reuse:1
@ 3598 train 3.8757 , allloss: 3.8757, dt: 686.77ms, fracRes: 0.3873, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2092, norm(y): 0.9978, norm:0.3731, tok/sec: 190853.90, flops:167.16, batch-reuse:1
@ 3599 train 3.8569 , allloss: 3.8569, dt: 700.42ms, fracRes: 0.3880, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2082, norm(y): 0.9975, norm:0.3951, tok/sec: 187132.76, flops:163.90, batch-reuse:1
@ 3600 train 3.8012 , allloss: 3.8012, dt: 693.13ms, fracRes: 0.3861, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2059, norm(y): 0.9975, norm:0.3794, tok/sec: 189101.48, flops:165.63, batch-reuse:1
@ 3601 train 3.9024 , allloss: 3.9024, dt: 689.39ms, fracRes: 0.3907, norm(attn): 0.4629, norm(output): 1.0078, norm(x): 1.2117, norm(y): 0.9977, norm:0.3811, tok/sec: 190126.14, flops:166.52, batch-reuse:1
@ 3602 train 3.9193 , allloss: 3.9193, dt: 703.65ms, fracRes: 0.3920, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2109, norm(y): 0.9980, norm:0.3958, tok/sec: 186273.99, flops:163.15, batch-reuse:1
@ 3603 train 3.9340 , allloss: 3.9340, dt: 690.51ms, fracRes: 0.3913, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2117, norm(y): 0.9981, norm:0.3599, tok/sec: 189820.22, flops:166.26, batch-reuse:1
@ 3604 train 3.8919 , allloss: 3.8919, dt: 703.53ms, fracRes: 0.3948, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2141, norm(y): 0.9979, norm:0.3877, tok/sec: 186304.98, flops:163.18, batch-reuse:1
@ 3605 train 3.8715 , allloss: 3.8715, dt: 702.93ms, fracRes: 0.3956, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.2111, norm(y): 0.9974, norm:0.3537, tok/sec: 186465.42, flops:163.32, batch-reuse:1
@ 3606 train 3.8575 , allloss: 3.8575, dt: 703.40ms, fracRes: 0.3940, norm(attn): 0.4648, norm(output): 1.0000, norm(x): 1.2087, norm(y): 0.9976, norm:0.3634, tok/sec: 186339.40, flops:163.21, batch-reuse:1
@ 3607 train 3.8896 , allloss: 3.8896, dt: 691.33ms, fracRes: 0.3869, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2075, norm(y): 0.9982, norm:0.3810, tok/sec: 189594.51, flops:166.06, batch-reuse:1
@ 3608 train 3.9257 , allloss: 3.9257, dt: 700.30ms, fracRes: 0.3921, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2148, norm(y): 0.9979, norm:0.3620, tok/sec: 187164.74, flops:163.93, batch-reuse:1
@ 3609 train 3.9403 , allloss: 3.9403, dt: 685.08ms, fracRes: 0.3928, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2119, norm(y): 0.9980, norm:0.4061, tok/sec: 191324.96, flops:167.57, batch-reuse:1
@ 3610 train 3.7677 , allloss: 3.7677, dt: 696.89ms, fracRes: 0.4047, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2233, norm(y): 0.9974, norm:0.4263, tok/sec: 188080.47, flops:164.73, batch-reuse:1
@ 3611 train 3.9036 , allloss: 3.9036, dt: 695.77ms, fracRes: 0.3901, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2171, norm(y): 0.9986, norm:0.4487, tok/sec: 188384.15, flops:165.00, batch-reuse:1
@ 3612 train 3.9330 , allloss: 3.9330, dt: 693.36ms, fracRes: 0.3869, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2084, norm(y): 0.9983, norm:0.4098, tok/sec: 189038.60, flops:165.57, batch-reuse:1
@ 3613 train 3.8580 , allloss: 3.8580, dt: 686.86ms, fracRes: 0.3868, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2079, norm(y): 0.9977, norm:0.3781, tok/sec: 190826.87, flops:167.14, batch-reuse:1
@ 3614 train 3.8717 , allloss: 3.8717, dt: 695.26ms, fracRes: 0.3868, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2106, norm(y): 0.9978, norm:0.3878, tok/sec: 188521.62, flops:165.12, batch-reuse:1
@ 3615 train 3.8850 , allloss: 3.8850, dt: 697.22ms, fracRes: 0.3933, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2147, norm(y): 0.9978, norm:0.3687, tok/sec: 187992.35, flops:164.65, batch-reuse:1
@ 3616 train 3.7833 , allloss: 3.7833, dt: 686.48ms, fracRes: 0.3950, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2142, norm(y): 0.9975, norm:0.3616, tok/sec: 190932.45, flops:167.23, batch-reuse:1
@ 3617 train 3.8395 , allloss: 3.8395, dt: 683.26ms, fracRes: 0.3939, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2080, norm(y): 0.9977, norm:0.3628, tok/sec: 191833.68, flops:168.02, batch-reuse:1
@ 3618 train 3.7782 , allloss: 3.7782, dt: 697.71ms, fracRes: 0.3927, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2103, norm(y): 0.9980, norm:0.3627, tok/sec: 187859.83, flops:164.54, batch-reuse:1
@ 3619 train 3.8540 , allloss: 3.8540, dt: 685.81ms, fracRes: 0.3923, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2069, norm(y): 0.9978, norm:0.3935, tok/sec: 191119.17, flops:167.39, batch-reuse:1
@ 3620 train 3.9161 , allloss: 3.9161, dt: 704.44ms, fracRes: 0.3949, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2171, norm(y): 0.9980, norm:0.3704, tok/sec: 186064.80, flops:162.97, batch-reuse:1
@ 3621 train 3.8409 , allloss: 3.8409, dt: 709.21ms, fracRes: 0.3931, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2114, norm(y): 0.9981, norm:0.4083, tok/sec: 184815.04, flops:161.87, batch-reuse:1
@ 3622 train 3.8964 , allloss: 3.8964, dt: 694.71ms, fracRes: 0.3870, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2087, norm(y): 0.9982, norm:0.3815, tok/sec: 188670.30, flops:165.25, batch-reuse:1
@ 3623 train 3.8902 , allloss: 3.8902, dt: 697.23ms, fracRes: 0.3902, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2131, norm(y): 0.9978, norm:0.3989, tok/sec: 187988.88, flops:164.65, batch-reuse:1
@ 3624 train 3.7556 , allloss: 3.7556, dt: 683.29ms, fracRes: 0.3928, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2120, norm(y): 0.9972, norm:0.3429, tok/sec: 191824.78, flops:168.01, batch-reuse:1
@ 3625 train 3.8830 , allloss: 3.8830, dt: 686.03ms, fracRes: 0.3921, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2136, norm(y): 0.9979, norm:0.3571, tok/sec: 191058.39, flops:167.34, batch-reuse:1
@ 3626 train 3.8118 , allloss: 3.8118, dt: 695.86ms, fracRes: 0.3913, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2137, norm(y): 0.9982, norm:0.3500, tok/sec: 188359.43, flops:164.98, batch-reuse:1
@ 3627 train 3.8874 , allloss: 3.8874, dt: 696.49ms, fracRes: 0.3873, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2092, norm(y): 0.9981, norm:0.3529, tok/sec: 188188.82, flops:164.83, batch-reuse:1
@ 3628 train 3.9372 , allloss: 3.9372, dt: 684.22ms, fracRes: 0.3874, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2172, norm(y): 0.9984, norm:0.3587, tok/sec: 191564.63, flops:167.78, batch-reuse:1
@ 3629 train 3.8113 , allloss: 3.8113, dt: 694.31ms, fracRes: 0.3858, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2140, norm(y): 0.9985, norm:0.3359, tok/sec: 188780.95, flops:165.34, batch-reuse:1
@ 3630 train 3.7615 , allloss: 3.7615, dt: 688.43ms, fracRes: 0.3940, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2190, norm(y): 0.9978, norm:0.4021, tok/sec: 190393.87, flops:166.76, batch-reuse:1
@ 3631 train 3.8220 , allloss: 3.8220, dt: 702.85ms, fracRes: 0.3921, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2073, norm(y): 0.9977, norm:0.3434, tok/sec: 186485.22, flops:163.33, batch-reuse:1
@ 3632 train 3.8150 , allloss: 3.8150, dt: 698.61ms, fracRes: 0.3908, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2113, norm(y): 0.9978, norm:0.3975, tok/sec: 187617.42, flops:164.33, batch-reuse:1
@ 3633 train 3.9393 , allloss: 3.9393, dt: 706.66ms, fracRes: 0.3866, norm(attn): 0.4609, norm(output): 1.0078, norm(x): 1.2099, norm(y): 0.9983, norm:0.3740, tok/sec: 185480.24, flops:162.45, batch-reuse:1
@ 3634 train 3.7466 , allloss: 3.7466, dt: 707.78ms, fracRes: 0.3892, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2052, norm(y): 0.9978, norm:0.3706, tok/sec: 185187.33, flops:162.20, batch-reuse:1
@ 3635 train 3.8052 , allloss: 3.8052, dt: 714.45ms, fracRes: 0.3943, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2133, norm(y): 0.9980, norm:0.3667, tok/sec: 183459.55, flops:160.68, batch-reuse:1
@ 3636 train 3.7856 , allloss: 3.7856, dt: 691.30ms, fracRes: 0.3915, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2089, norm(y): 0.9984, norm:0.3625, tok/sec: 189602.16, flops:166.06, batch-reuse:1
@ 3637 train 3.8809 , allloss: 3.8809, dt: 707.32ms, fracRes: 0.3905, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2132, norm(y): 0.9983, norm:0.3562, tok/sec: 185309.18, flops:162.30, batch-reuse:1
@ 3638 train 3.8522 , allloss: 3.8522, dt: 704.11ms, fracRes: 0.3872, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2064, norm(y): 0.9983, norm:0.3639, tok/sec: 186152.00, flops:163.04, batch-reuse:1
@ 3639 train 3.8758 , allloss: 3.8758, dt: 704.35ms, fracRes: 0.3869, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2086, norm(y): 0.9983, norm:0.3546, tok/sec: 186088.67, flops:162.99, batch-reuse:1
@ 3640 train 3.8123 , allloss: 3.8123, dt: 703.98ms, fracRes: 0.3887, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2123, norm(y): 0.9985, norm:0.3553, tok/sec: 186186.30, flops:163.07, batch-reuse:1
@ 3641 train 3.8498 , allloss: 3.8498, dt: 694.94ms, fracRes: 0.3938, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2165, norm(y): 0.9984, norm:0.3852, tok/sec: 188609.58, flops:165.19, batch-reuse:1
@ 3642 train 4.0474 , allloss: 4.0474, dt: 703.27ms, fracRes: 0.3912, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2155, norm(y): 0.9984, norm:0.3951, tok/sec: 186374.65, flops:163.24, batch-reuse:1
@ 3643 train 3.8455 , allloss: 3.8455, dt: 696.78ms, fracRes: 0.3955, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2157, norm(y): 0.9982, norm:0.3643, tok/sec: 188110.52, flops:164.76, batch-reuse:1
@ 3644 train 3.9162 , allloss: 3.9162, dt: 689.79ms, fracRes: 0.3948, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2131, norm(y): 0.9980, norm:0.4055, tok/sec: 190016.26, flops:166.43, batch-reuse:1
@ 3645 train 3.8308 , allloss: 3.8308, dt: 709.26ms, fracRes: 0.3927, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2096, norm(y): 0.9978, norm:0.3899, tok/sec: 184802.12, flops:161.86, batch-reuse:1
@ 3646 train 3.8364 , allloss: 3.8364, dt: 684.07ms, fracRes: 0.3987, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2180, norm(y): 0.9982, norm:0.3971, tok/sec: 191606.43, flops:167.82, batch-reuse:1
@ 3647 train 3.8616 , allloss: 3.8616, dt: 697.33ms, fracRes: 0.3937, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2139, norm(y): 0.9986, norm:0.4118, tok/sec: 187963.56, flops:164.63, batch-reuse:1
@ 3648 train 3.8859 , allloss: 3.8859, dt: 701.75ms, fracRes: 0.3902, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2126, norm(y): 0.9983, norm:0.3817, tok/sec: 186779.14, flops:163.59, batch-reuse:1
@ 3649 train 3.9054 , allloss: 3.9054, dt: 684.04ms, fracRes: 0.3881, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2106, norm(y): 0.9984, norm:0.3848, tok/sec: 191615.51, flops:167.83, batch-reuse:1
@ 3650 train 3.9088 , allloss: 3.9088, dt: 699.27ms, fracRes: 0.3891, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2141, norm(y): 0.9986, norm:0.3890, tok/sec: 187442.08, flops:164.17, batch-reuse:1
@ 3651 train 3.8726 , allloss: 3.8726, dt: 700.78ms, fracRes: 0.3892, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2121, norm(y): 0.9982, norm:0.3507, tok/sec: 187037.77, flops:163.82, batch-reuse:1
@ 3652 train 3.8002 , allloss: 3.8002, dt: 699.03ms, fracRes: 0.3909, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2178, norm(y): 0.9984, norm:0.3637, tok/sec: 187505.12, flops:164.23, batch-reuse:1
@ 3653 train 3.7841 , allloss: 3.7841, dt: 694.62ms, fracRes: 0.3897, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2114, norm(y): 0.9984, norm:0.3582, tok/sec: 188696.14, flops:165.27, batch-reuse:1
@ 3654 train 3.9353 , allloss: 3.9353, dt: 685.74ms, fracRes: 0.3915, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2103, norm(y): 0.9984, norm:0.3457, tok/sec: 191139.90, flops:167.41, batch-reuse:1
@ 3655 train 3.9295 , allloss: 3.9295, dt: 681.45ms, fracRes: 0.3930, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2125, norm(y): 0.9984, norm:0.3792, tok/sec: 192344.04, flops:168.47, batch-reuse:1
@ 3656 train 3.8981 , allloss: 3.8981, dt: 690.27ms, fracRes: 0.3888, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2119, norm(y): 0.9988, norm:0.4088, tok/sec: 189886.31, flops:166.31, batch-reuse:1
@ 3657 train 3.9220 , allloss: 3.9220, dt: 703.14ms, fracRes: 0.3878, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2101, norm(y): 0.9987, norm:0.4000, tok/sec: 186410.79, flops:163.27, batch-reuse:1
@ 3658 train 3.8194 , allloss: 3.8194, dt: 702.92ms, fracRes: 0.3890, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2122, norm(y): 0.9984, norm:0.3459, tok/sec: 186467.13, flops:163.32, batch-reuse:1
@ 3659 train 3.8709 , allloss: 3.8709, dt: 693.53ms, fracRes: 0.3897, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2177, norm(y): 0.9985, norm:0.3788, tok/sec: 188993.63, flops:165.53, batch-reuse:1
@ 3660 train 3.7016 , allloss: 3.7016, dt: 702.00ms, fracRes: 0.3902, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2189, norm(y): 0.9985, norm:0.3982, tok/sec: 186713.16, flops:163.53, batch-reuse:1
@ 3661 train 3.7680 , allloss: 3.7680, dt: 700.76ms, fracRes: 0.3855, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2140, norm(y): 0.9989, norm:0.4152, tok/sec: 187042.16, flops:163.82, batch-reuse:1
@ 3662 train 3.6091 , allloss: 3.6091, dt: 702.99ms, fracRes: 0.3903, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2134, norm(y): 0.9981, norm:0.3618, tok/sec: 186449.55, flops:163.30, batch-reuse:1
@ 3663 train 3.6964 , allloss: 3.6964, dt: 704.61ms, fracRes: 0.3954, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2088, norm(y): 0.9976, norm:0.3728, tok/sec: 186019.47, flops:162.93, batch-reuse:1
@ 3664 train 3.7750 , allloss: 3.7750, dt: 695.83ms, fracRes: 0.3964, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9979, norm:0.3598, tok/sec: 188367.37, flops:164.98, batch-reuse:1
@ 3665 train 3.7794 , allloss: 3.7794, dt: 709.10ms, fracRes: 0.3874, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.2052, norm(y): 0.9985, norm:0.3772, tok/sec: 184843.69, flops:161.90, batch-reuse:1
@ 3666 train 3.6424 , allloss: 3.6424, dt: 704.71ms, fracRes: 0.3905, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2058, norm(y): 0.9982, norm:0.3835, tok/sec: 185993.04, flops:162.90, batch-reuse:1
@ 3667 train 3.7620 , allloss: 3.7620, dt: 698.17ms, fracRes: 0.3994, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2190, norm(y): 0.9975, norm:0.3873, tok/sec: 187737.04, flops:164.43, batch-reuse:1
@ 3668 train 3.7608 , allloss: 3.7608, dt: 706.56ms, fracRes: 0.3910, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2080, norm(y): 0.9974, norm:0.4042, tok/sec: 185506.52, flops:162.48, batch-reuse:1
@ 3669 train 3.7938 , allloss: 3.7938, dt: 715.27ms, fracRes: 0.3861, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2117, norm(y): 0.9980, norm:0.4782, tok/sec: 183248.64, flops:160.50, batch-reuse:1
@ 3670 train 3.8154 , allloss: 3.8154, dt: 692.69ms, fracRes: 0.3913, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2144, norm(y): 0.9988, norm:0.4536, tok/sec: 189221.56, flops:165.73, batch-reuse:1
@ 3671 train 3.6778 , allloss: 3.6778, dt: 694.17ms, fracRes: 0.3927, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.2068, norm(y): 0.9979, norm:0.3751, tok/sec: 188818.30, flops:165.38, batch-reuse:1
@ 3672 train 3.7484 , allloss: 3.7484, dt: 697.58ms, fracRes: 0.3949, norm(attn): 0.4688, norm(output): 1.0000, norm(x): 1.2065, norm(y): 0.9973, norm:0.3862, tok/sec: 187896.23, flops:164.57, batch-reuse:1
@ 3673 train 3.7332 , allloss: 3.7332, dt: 697.52ms, fracRes: 0.3977, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2142, norm(y): 0.9976, norm:0.3999, tok/sec: 187912.80, flops:164.58, batch-reuse:1
@ 3674 train 3.6913 , allloss: 3.6913, dt: 688.82ms, fracRes: 0.3980, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2161, norm(y): 0.9976, norm:0.3633, tok/sec: 190284.21, flops:166.66, batch-reuse:1
@ 3675 train 3.7752 , allloss: 3.7752, dt: 698.60ms, fracRes: 0.3916, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9980, norm:0.4141, tok/sec: 187621.20, flops:164.33, batch-reuse:1
@ 3676 train 3.8010 , allloss: 3.8010, dt: 698.42ms, fracRes: 0.3911, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2147, norm(y): 0.9984, norm:0.3604, tok/sec: 187669.36, flops:164.37, batch-reuse:1
@ 3677 train 3.7407 , allloss: 3.7407, dt: 697.12ms, fracRes: 0.3921, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2139, norm(y): 0.9984, norm:0.3825, tok/sec: 188019.61, flops:164.68, batch-reuse:1
@ 3678 train 3.7560 , allloss: 3.7560, dt: 695.91ms, fracRes: 0.3900, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2104, norm(y): 0.9985, norm:0.3722, tok/sec: 188345.17, flops:164.96, batch-reuse:1
@ 3679 train 3.6894 , allloss: 3.6894, dt: 696.56ms, fracRes: 0.3871, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2133, norm(y): 0.9988, norm:0.3686, tok/sec: 188169.88, flops:164.81, batch-reuse:1
@ 3680 train 3.6680 , allloss: 3.6680, dt: 683.30ms, fracRes: 0.3895, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2084, norm(y): 0.9985, norm:0.3542, tok/sec: 191821.23, flops:168.01, batch-reuse:1
@ 3681 train 3.6692 , allloss: 3.6692, dt: 692.70ms, fracRes: 0.3931, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2125, norm(y): 0.9981, norm:0.3556, tok/sec: 189217.92, flops:165.73, batch-reuse:1
@ 3682 train 3.6472 , allloss: 3.6472, dt: 694.92ms, fracRes: 0.4003, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2179, norm(y): 0.9978, norm:0.3722, tok/sec: 188614.18, flops:165.20, batch-reuse:1
@ 3683 train 3.7699 , allloss: 3.7699, dt: 695.10ms, fracRes: 0.4008, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2174, norm(y): 0.9982, norm:0.3646, tok/sec: 188566.63, flops:165.16, batch-reuse:1
@ 3684 train 3.8285 , allloss: 3.8285, dt: 693.23ms, fracRes: 0.3947, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2131, norm(y): 0.9988, norm:0.3819, tok/sec: 189074.55, flops:165.60, batch-reuse:1
@ 3685 train 3.6557 , allloss: 3.6557, dt: 694.37ms, fracRes: 0.3999, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2155, norm(y): 0.9982, norm:0.3695, tok/sec: 188762.61, flops:165.33, batch-reuse:1
@ 3686 train 3.6776 , allloss: 3.6776, dt: 686.18ms, fracRes: 0.3942, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2069, norm(y): 0.9980, norm:0.3734, tok/sec: 191015.91, flops:167.30, batch-reuse:1
@ 3687 train 3.7441 , allloss: 3.7441, dt: 700.13ms, fracRes: 0.3907, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2096, norm(y): 0.9985, norm:0.3784, tok/sec: 187211.97, flops:163.97, batch-reuse:1
@ 3688 train 3.7965 , allloss: 3.7965, dt: 696.13ms, fracRes: 0.3924, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2148, norm(y): 0.9987, norm:0.3606, tok/sec: 188286.85, flops:164.91, batch-reuse:1
@ 3689 train 3.7975 , allloss: 3.7975, dt: 692.97ms, fracRes: 0.3949, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2176, norm(y): 0.9985, norm:0.3664, tok/sec: 189144.55, flops:165.66, batch-reuse:1
@ 3690 train 3.6650 , allloss: 3.6650, dt: 693.98ms, fracRes: 0.3934, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2125, norm(y): 0.9981, norm:0.3612, tok/sec: 188869.22, flops:165.42, batch-reuse:1
@ 3691 train 3.7693 , allloss: 3.7693, dt: 693.13ms, fracRes: 0.3968, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2179, norm(y): 0.9979, norm:0.3582, tok/sec: 189102.00, flops:165.63, batch-reuse:1
@ 3692 train 3.7039 , allloss: 3.7039, dt: 695.20ms, fracRes: 0.4006, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2237, norm(y): 0.9981, norm:0.4321, tok/sec: 188537.85, flops:165.13, batch-reuse:1
@ 3693 train 3.7790 , allloss: 3.7790, dt: 708.16ms, fracRes: 0.3978, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2140, norm(y): 0.9986, norm:0.3967, tok/sec: 185089.20, flops:162.11, batch-reuse:1
@ 3694 train 3.7531 , allloss: 3.7531, dt: 706.20ms, fracRes: 0.3978, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2148, norm(y): 0.9986, norm:0.3989, tok/sec: 185601.40, flops:162.56, batch-reuse:1
@ 3695 train 3.7493 , allloss: 3.7493, dt: 694.15ms, fracRes: 0.3952, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2152, norm(y): 0.9989, norm:0.3781, tok/sec: 188824.07, flops:165.38, batch-reuse:1
@ 3696 train 3.7707 , allloss: 3.7707, dt: 696.85ms, fracRes: 0.3932, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2158, norm(y): 0.9989, norm:0.4242, tok/sec: 188092.24, flops:164.74, batch-reuse:1
@ 3697 train 3.7487 , allloss: 3.7487, dt: 704.98ms, fracRes: 0.3907, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2086, norm(y): 0.9989, norm:0.3482, tok/sec: 185921.71, flops:162.84, batch-reuse:1
@ 3698 train 3.8427 , allloss: 3.8427, dt: 685.69ms, fracRes: 0.3914, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2161, norm(y): 0.9988, norm:0.3766, tok/sec: 191154.12, flops:167.42, batch-reuse:1
@ 3699 train 3.6342 , allloss: 3.6342, dt: 691.58ms, fracRes: 0.3904, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2110, norm(y): 0.9983, norm:0.3748, tok/sec: 189525.48, flops:166.00, batch-reuse:1
@ 3700 train 3.7385 , allloss: 3.7385, dt: 697.68ms, fracRes: 0.3943, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2178, norm(y): 0.9983, norm:0.3876, tok/sec: 187867.59, flops:164.54, batch-reuse:1
@ 3701 train 3.8174 , allloss: 3.8174, dt: 699.28ms, fracRes: 0.3967, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2168, norm(y): 0.9984, norm:0.3839, tok/sec: 187437.93, flops:164.17, batch-reuse:1
@ 3702 train 3.7504 , allloss: 3.7504, dt: 690.43ms, fracRes: 0.3934, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2153, norm(y): 0.9988, norm:0.3526, tok/sec: 189841.40, flops:166.27, batch-reuse:1
@ 3703 train 3.6921 , allloss: 3.6921, dt: 678.29ms, fracRes: 0.3895, norm(attn): 0.4668, norm(output): 1.0000, norm(x): 1.2071, norm(y): 0.9986, norm:0.3572, tok/sec: 193239.59, flops:169.25, batch-reuse:1
@ 3704 train 3.6975 , allloss: 3.6975, dt: 698.11ms, fracRes: 0.3871, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2075, norm(y): 0.9989, norm:0.3877, tok/sec: 187752.94, flops:164.44, batch-reuse:1
@ 3705 train 3.8012 , allloss: 3.8012, dt: 707.57ms, fracRes: 0.3874, norm(attn): 0.4707, norm(output): 1.0000, norm(x): 1.2086, norm(y): 0.9994, norm:0.4101, tok/sec: 185242.30, flops:162.25, batch-reuse:1
@ 3706 train 3.7199 , allloss: 3.7199, dt: 708.20ms, fracRes: 0.3907, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2135, norm(y): 0.9989, norm:0.3654, tok/sec: 185077.98, flops:162.10, batch-reuse:1
@ 3707 train 3.8366 , allloss: 3.8366, dt: 701.92ms, fracRes: 0.3961, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2247, norm(y): 0.9984, norm:0.3680, tok/sec: 186732.95, flops:163.55, batch-reuse:1
@ 3708 train 3.8893 , allloss: 3.8893, dt: 683.06ms, fracRes: 0.3948, norm(attn): 0.4648, norm(output): 1.0156, norm(x): 1.2217, norm(y): 0.9984, norm:0.3696, tok/sec: 191889.99, flops:168.07, batch-reuse:1
@ 3709 train 3.8929 , allloss: 3.8929, dt: 682.84ms, fracRes: 0.4003, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2250, norm(y): 0.9983, norm:0.3714, tok/sec: 191951.57, flops:168.12, batch-reuse:1
@ 3710 train 3.9293 , allloss: 3.9293, dt: 693.90ms, fracRes: 0.3981, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2259, norm(y): 0.9984, norm:0.3894, tok/sec: 188892.91, flops:165.44, batch-reuse:1
@ 3711 train 3.9574 , allloss: 3.9574, dt: 691.51ms, fracRes: 0.3980, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2252, norm(y): 0.9985, norm:0.3683, tok/sec: 189544.70, flops:166.01, batch-reuse:1
@ 3712 train 3.9363 , allloss: 3.9363, dt: 695.86ms, fracRes: 0.4022, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2298, norm(y): 0.9985, norm:0.4779, tok/sec: 188360.72, flops:164.98, batch-reuse:1
@ 3713 train 4.0200 , allloss: 4.0200, dt: 696.12ms, fracRes: 0.4006, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2310, norm(y): 0.9984, norm:0.4436, tok/sec: 188288.66, flops:164.91, batch-reuse:1
@ 3714 train 3.9156 , allloss: 3.9156, dt: 700.95ms, fracRes: 0.4011, norm(attn): 0.4668, norm(output): 1.0234, norm(x): 1.2299, norm(y): 0.9984, norm:0.4965, tok/sec: 186990.69, flops:163.78, batch-reuse:1
@ 3715 train 3.9277 , allloss: 3.9277, dt: 697.49ms, fracRes: 0.4041, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2293, norm(y): 0.9984, norm:0.4455, tok/sec: 187918.45, flops:164.59, batch-reuse:1
@ 3716 train 3.8437 , allloss: 3.8437, dt: 694.20ms, fracRes: 0.4028, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2309, norm(y): 0.9981, norm:0.4118, tok/sec: 188811.04, flops:165.37, batch-reuse:1
@ 3717 train 3.8877 , allloss: 3.8877, dt: 688.28ms, fracRes: 0.3941, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2237, norm(y): 0.9987, norm:0.3832, tok/sec: 190434.49, flops:166.79, batch-reuse:1
@ 3718 train 3.8519 , allloss: 3.8519, dt: 687.77ms, fracRes: 0.3900, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2175, norm(y): 0.9991, norm:0.3899, tok/sec: 190575.24, flops:166.92, batch-reuse:1
@ 3719 train 3.9300 , allloss: 3.9300, dt: 694.43ms, fracRes: 0.3908, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2134, norm(y): 0.9991, norm:0.3957, tok/sec: 188748.81, flops:165.32, batch-reuse:1
@ 3720 train 3.8385 , allloss: 3.8385, dt: 699.48ms, fracRes: 0.3952, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2139, norm(y): 0.9989, norm:0.3843, tok/sec: 187386.05, flops:164.12, batch-reuse:1
@ 3721 train 3.8599 , allloss: 3.8599, dt: 689.11ms, fracRes: 0.3970, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2181, norm(y): 0.9986, norm:0.3671, tok/sec: 190206.13, flops:166.59, batch-reuse:1
@ 3722 train 3.7994 , allloss: 3.7994, dt: 672.02ms, fracRes: 0.3992, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2183, norm(y): 0.9981, norm:0.3989, tok/sec: 195041.90, flops:170.83, batch-reuse:1
@ 3723 train 3.8834 , allloss: 3.8834, dt: 699.25ms, fracRes: 0.3906, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2142, norm(y): 0.9985, norm:0.3551, tok/sec: 187447.64, flops:164.18, batch-reuse:1
@ 3724 train 3.9243 , allloss: 3.9243, dt: 697.13ms, fracRes: 0.3901, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2175, norm(y): 0.9992, norm:0.3735, tok/sec: 188017.56, flops:164.68, batch-reuse:1
@ 3725 train 3.9080 , allloss: 3.9080, dt: 695.28ms, fracRes: 0.3900, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2239, norm(y): 0.9995, norm:0.3857, tok/sec: 188517.09, flops:165.11, batch-reuse:1
@ 3726 train 3.9388 , allloss: 3.9388, dt: 702.06ms, fracRes: 0.3975, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2274, norm(y): 0.9993, norm:0.3724, tok/sec: 186695.22, flops:163.52, batch-reuse:1
@ 3727 train 3.8840 , allloss: 3.8840, dt: 698.21ms, fracRes: 0.3963, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2261, norm(y): 0.9988, norm:0.4181, tok/sec: 187724.67, flops:164.42, batch-reuse:1
@ 3728 train 3.8674 , allloss: 3.8674, dt: 699.00ms, fracRes: 0.3945, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2276, norm(y): 0.9991, norm:0.4193, tok/sec: 187514.58, flops:164.24, batch-reuse:1
@ 3729 train 3.8952 , allloss: 3.8952, dt: 695.09ms, fracRes: 0.3956, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2276, norm(y): 0.9996, norm:0.4097, tok/sec: 188568.11, flops:165.16, batch-reuse:1
@ 3730 train 3.9140 , allloss: 3.9140, dt: 707.29ms, fracRes: 0.3958, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2289, norm(y): 0.9991, norm:0.4037, tok/sec: 185314.68, flops:162.31, batch-reuse:1
@ 3731 train 3.8336 , allloss: 3.8336, dt: 691.45ms, fracRes: 0.4046, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2314, norm(y): 0.9986, norm:0.3907, tok/sec: 189560.05, flops:166.03, batch-reuse:1
@ 3732 train 3.9422 , allloss: 3.9422, dt: 703.88ms, fracRes: 0.4040, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2273, norm(y): 0.9985, norm:0.3988, tok/sec: 186213.10, flops:163.10, batch-reuse:1
@ 3733 train 3.9429 , allloss: 3.9429, dt: 693.84ms, fracRes: 0.3983, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2236, norm(y): 0.9993, norm:0.3813, tok/sec: 188907.84, flops:165.46, batch-reuse:1
@ 3734 train 3.8964 , allloss: 3.8964, dt: 700.76ms, fracRes: 0.4042, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2250, norm(y): 0.9991, norm:0.3865, tok/sec: 187041.84, flops:163.82, batch-reuse:1
@ 3735 train 3.9490 , allloss: 3.9490, dt: 705.85ms, fracRes: 0.4036, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2283, norm(y): 0.9986, norm:0.3993, tok/sec: 185693.12, flops:162.64, batch-reuse:1
@ 3736 train 3.9824 , allloss: 3.9824, dt: 686.76ms, fracRes: 0.3955, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2213, norm(y): 0.9985, norm:0.3662, tok/sec: 190855.03, flops:167.16, batch-reuse:1
@ 3737 train 3.8451 , allloss: 3.8451, dt: 695.33ms, fracRes: 0.3971, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2229, norm(y): 0.9984, norm:0.3498, tok/sec: 188502.81, flops:165.10, batch-reuse:1
@ 3738 train 3.8341 , allloss: 3.8341, dt: 697.14ms, fracRes: 0.3927, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2235, norm(y): 0.9989, norm:0.3841, tok/sec: 188013.57, flops:164.67, batch-reuse:1
@ 3739 train 3.8695 , allloss: 3.8695, dt: 691.70ms, fracRes: 0.3967, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2231, norm(y): 0.9990, norm:0.3523, tok/sec: 189491.71, flops:165.97, batch-reuse:1
@ 3740 train 3.9410 , allloss: 3.9410, dt: 700.88ms, fracRes: 0.3959, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2220, norm(y): 0.9990, norm:0.4793, tok/sec: 187011.87, flops:163.80, batch-reuse:1
@ 3741 train 4.0779 , allloss: 4.0779, dt: 703.95ms, fracRes: 0.4059, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2361, norm(y): 0.9994, norm:0.5411, tok/sec: 186195.82, flops:163.08, batch-reuse:1
@ 3742 train 3.8393 , allloss: 3.8393, dt: 702.39ms, fracRes: 0.4066, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2324, norm(y): 0.9987, norm:0.3866, tok/sec: 186608.97, flops:163.44, batch-reuse:1
@ 3743 train 3.9069 , allloss: 3.9069, dt: 709.57ms, fracRes: 0.3989, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2277, norm(y): 0.9988, norm:0.4491, tok/sec: 184719.91, flops:161.79, batch-reuse:1
@ 3744 train 4.1107 , allloss: 4.1107, dt: 698.73ms, fracRes: 0.4083, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2330, norm(y): 0.9992, norm:0.4552, tok/sec: 187585.80, flops:164.30, batch-reuse:1
@ 3745 train 3.9167 , allloss: 3.9167, dt: 704.88ms, fracRes: 0.4139, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2368, norm(y): 0.9987, norm:0.4795, tok/sec: 185948.56, flops:162.86, batch-reuse:1
@ 3746 train 3.8855 , allloss: 3.8855, dt: 698.04ms, fracRes: 0.4012, norm(attn): 0.4766, norm(output): 1.0078, norm(x): 1.2234, norm(y): 0.9990, norm:0.4328, tok/sec: 187770.96, flops:164.46, batch-reuse:1
@ 3747 train 3.8820 , allloss: 3.8820, dt: 700.36ms, fracRes: 0.3993, norm(attn): 0.4727, norm(output): 1.0234, norm(x): 1.2261, norm(y): 0.9991, norm:0.3957, tok/sec: 187148.69, flops:163.92, batch-reuse:1
@ 3748 train 3.8767 , allloss: 3.8767, dt: 685.63ms, fracRes: 0.3999, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2294, norm(y): 0.9993, norm:0.4345, tok/sec: 191171.07, flops:167.44, batch-reuse:1
@ 3749 train 3.9096 , allloss: 3.9096, dt: 695.19ms, fracRes: 0.3973, norm(attn): 0.4648, norm(output): 1.0156, norm(x): 1.2282, norm(y): 0.9991, norm:0.4324, tok/sec: 188540.82, flops:165.13, batch-reuse:1
@ 3750 train 3.9315 , allloss: 3.9315, dt: 706.70ms, fracRes: 0.3972, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2261, norm(y): 0.9989, norm:0.4074, tok/sec: 185469.66, flops:162.44, batch-reuse:1
@ 3751 train 3.9320 , allloss: 3.9320, dt: 707.76ms, fracRes: 0.3970, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2239, norm(y): 0.9988, norm:0.4279, tok/sec: 185193.82, flops:162.20, batch-reuse:1
@ 3752 train 3.8585 , allloss: 3.8585, dt: 693.75ms, fracRes: 0.4054, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2385, norm(y): 0.9988, norm:0.4205, tok/sec: 188933.03, flops:165.48, batch-reuse:1
@ 3753 train 3.9516 , allloss: 3.9516, dt: 709.65ms, fracRes: 0.3970, norm(attn): 0.4746, norm(output): 1.0078, norm(x): 1.2278, norm(y): 1.0000, norm:0.4333, tok/sec: 184698.31, flops:161.77, batch-reuse:1
@ 3754 train 3.8958 , allloss: 3.8958, dt: 688.93ms, fracRes: 0.3972, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2265, norm(y): 0.9996, norm:0.4164, tok/sec: 190255.50, flops:166.64, batch-reuse:1
@ 3755 train 3.9038 , allloss: 3.9038, dt: 697.78ms, fracRes: 0.3916, norm(attn): 0.4746, norm(output): 1.0078, norm(x): 1.2173, norm(y): 0.9997, norm:0.3924, tok/sec: 187841.28, flops:164.52, batch-reuse:1
@ 3756 train 3.9989 , allloss: 3.9989, dt: 699.65ms, fracRes: 0.3896, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2214, norm(y): 0.9998, norm:0.4250, tok/sec: 187338.48, flops:164.08, batch-reuse:1
@ 3757 train 3.9157 , allloss: 3.9157, dt: 693.53ms, fracRes: 0.3947, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2275, norm(y): 0.9996, norm:0.4061, tok/sec: 188992.26, flops:165.53, batch-reuse:1
@ 3758 train 3.8840 , allloss: 3.8840, dt: 697.15ms, fracRes: 0.3907, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2244, norm(y): 0.9996, norm:0.3910, tok/sec: 188011.25, flops:164.67, batch-reuse:1
@ 3759 train 3.9188 , allloss: 3.9188, dt: 709.10ms, fracRes: 0.3928, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2206, norm(y): 0.9992, norm:0.3805, tok/sec: 184843.94, flops:161.90, batch-reuse:1
@ 3760 train 3.9498 , allloss: 3.9498, dt: 687.60ms, fracRes: 0.3970, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2230, norm(y): 0.9990, norm:0.4077, tok/sec: 190621.29, flops:166.96, batch-reuse:1
@ 3761 train 3.9852 , allloss: 3.9852, dt: 698.55ms, fracRes: 0.4027, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2336, norm(y): 0.9994, norm:0.3925, tok/sec: 187635.29, flops:164.34, batch-reuse:1
@ 3762 train 3.7924 , allloss: 3.7924, dt: 694.12ms, fracRes: 0.4058, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2375, norm(y): 0.9993, norm:0.4377, tok/sec: 188833.02, flops:165.39, batch-reuse:1
@ 3763 train 3.9659 , allloss: 3.9659, dt: 710.05ms, fracRes: 0.3972, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2310, norm(y): 0.9993, norm:0.4358, tok/sec: 184594.43, flops:161.68, batch-reuse:1
@ 3764 train 3.9025 , allloss: 3.9025, dt: 695.57ms, fracRes: 0.3961, norm(attn): 0.4668, norm(output): 1.0156, norm(x): 1.2281, norm(y): 0.9992, norm:0.3558, tok/sec: 188437.16, flops:165.04, batch-reuse:1
@ 3765 train 3.8814 , allloss: 3.8814, dt: 698.07ms, fracRes: 0.3937, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2273, norm(y): 0.9992, norm:0.3653, tok/sec: 187764.16, flops:164.45, batch-reuse:1
@ 3766 train 3.8448 , allloss: 3.8448, dt: 685.81ms, fracRes: 0.3884, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2266, norm(y): 0.9994, norm:0.3637, tok/sec: 191120.76, flops:167.39, batch-reuse:1
@ 3767 train 3.8961 , allloss: 3.8961, dt: 686.74ms, fracRes: 0.3831, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2205, norm(y): 0.9999, norm:0.4038, tok/sec: 190861.19, flops:167.17, batch-reuse:1
@ 3768 train 3.8750 , allloss: 3.8750, dt: 691.55ms, fracRes: 0.3893, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2251, norm(y): 0.9996, norm:0.4329, tok/sec: 189533.26, flops:166.00, batch-reuse:1
@ 3769 train 4.0653 , allloss: 4.0653, dt: 685.30ms, fracRes: 0.3933, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2239, norm(y): 0.9993, norm:0.4155, tok/sec: 191261.46, flops:167.52, batch-reuse:1
@ 3770 train 3.9261 , allloss: 3.9261, dt: 694.06ms, fracRes: 0.3962, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2286, norm(y): 0.9993, norm:0.3671, tok/sec: 188847.55, flops:165.40, batch-reuse:1
@ 3771 train 3.9139 , allloss: 3.9139, dt: 711.38ms, fracRes: 0.4048, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2384, norm(y): 0.9994, norm:0.4092, tok/sec: 184250.27, flops:161.38, batch-reuse:1
@ 3772 train 3.9307 , allloss: 3.9307, dt: 707.75ms, fracRes: 0.4037, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2329, norm(y): 0.9993, norm:0.3475, tok/sec: 185196.38, flops:162.21, batch-reuse:1
@ 3773 train 3.9041 , allloss: 3.9041, dt: 689.46ms, fracRes: 0.4042, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2291, norm(y): 0.9990, norm:0.3781, tok/sec: 190108.91, flops:166.51, batch-reuse:1
@ 3774 train 3.8896 , allloss: 3.8896, dt: 685.13ms, fracRes: 0.4070, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2320, norm(y): 0.9992, norm:0.3701, tok/sec: 191309.65, flops:167.56, batch-reuse:1
@ 3775 train 3.8846 , allloss: 3.8846, dt: 703.34ms, fracRes: 0.4090, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2396, norm(y): 0.9993, norm:0.3913, tok/sec: 186356.77, flops:163.22, batch-reuse:1
@ 3776 train 3.9511 , allloss: 3.9511, dt: 697.39ms, fracRes: 0.4022, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2338, norm(y): 0.9993, norm:0.3950, tok/sec: 187947.24, flops:164.61, batch-reuse:1
@ 3777 train 3.9028 , allloss: 3.9028, dt: 704.34ms, fracRes: 0.4011, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2357, norm(y): 0.9995, norm:0.3811, tok/sec: 186091.38, flops:162.99, batch-reuse:1
@ 3778 train 3.8961 , allloss: 3.8961, dt: 705.14ms, fracRes: 0.4026, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2311, norm(y): 0.9993, norm:0.3774, tok/sec: 185881.92, flops:162.81, batch-reuse:1
@ 3779 train 3.7945 , allloss: 3.7945, dt: 698.94ms, fracRes: 0.4007, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2270, norm(y): 0.9987, norm:0.3420, tok/sec: 187528.78, flops:164.25, batch-reuse:1
@ 3780 train 3.9155 , allloss: 3.9155, dt: 706.51ms, fracRes: 0.3949, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2280, norm(y): 0.9994, norm:0.3553, tok/sec: 185520.61, flops:162.49, batch-reuse:1
@ 3781 train 3.8109 , allloss: 3.8109, dt: 707.70ms, fracRes: 0.4007, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2297, norm(y): 0.9993, norm:0.3571, tok/sec: 185208.23, flops:162.22, batch-reuse:1
@ 3782 train 4.0336 , allloss: 4.0336, dt: 703.38ms, fracRes: 0.3996, norm(attn): 0.4727, norm(output): 1.0234, norm(x): 1.2404, norm(y): 1.0000, norm:0.5713, tok/sec: 186347.10, flops:163.21, batch-reuse:1
@ 3783 train 3.8194 , allloss: 3.8194, dt: 708.08ms, fracRes: 0.4022, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2297, norm(y): 0.9996, norm:0.3617, tok/sec: 185108.83, flops:162.13, batch-reuse:1
@ 3784 train 3.8853 , allloss: 3.8853, dt: 704.40ms, fracRes: 0.4021, norm(attn): 0.4668, norm(output): 1.0078, norm(x): 1.2254, norm(y): 0.9993, norm:0.3614, tok/sec: 186075.57, flops:162.98, batch-reuse:1
@ 3785 train 3.8740 , allloss: 3.8740, dt: 692.38ms, fracRes: 0.3967, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2258, norm(y): 0.9994, norm:0.3679, tok/sec: 189306.07, flops:165.80, batch-reuse:1
@ 3786 train 3.8740 , allloss: 3.8740, dt: 687.91ms, fracRes: 0.3981, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2286, norm(y): 0.9994, norm:0.3854, tok/sec: 190536.99, flops:166.88, batch-reuse:1
@ 3787 train 3.9081 , allloss: 3.9081, dt: 690.77ms, fracRes: 0.3953, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2259, norm(y): 0.9992, norm:0.3560, tok/sec: 189746.78, flops:166.19, batch-reuse:1
@ 3788 train 3.8560 , allloss: 3.8560, dt: 686.41ms, fracRes: 0.3961, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2262, norm(y): 0.9993, norm:0.3733, tok/sec: 190953.27, flops:167.25, batch-reuse:1
@ 3789 train 3.9092 , allloss: 3.9092, dt: 699.61ms, fracRes: 0.4019, norm(attn): 0.4707, norm(output): 1.0312, norm(x): 1.2361, norm(y): 0.9996, norm:0.3974, tok/sec: 187350.29, flops:164.09, batch-reuse:1
@ 3790 train 3.9833 , allloss: 3.9833, dt: 688.23ms, fracRes: 0.3996, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2293, norm(y): 0.9995, norm:0.3719, tok/sec: 190447.36, flops:166.80, batch-reuse:1
@ 3791 train 3.8470 , allloss: 3.8470, dt: 698.28ms, fracRes: 0.4033, norm(attn): 0.4727, norm(output): 1.0312, norm(x): 1.2415, norm(y): 0.9993, norm:0.4308, tok/sec: 187708.19, flops:164.41, batch-reuse:1
@ 3792 train 3.9507 , allloss: 3.9507, dt: 714.58ms, fracRes: 0.3938, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2275, norm(y): 1.0000, norm:0.4146, tok/sec: 183424.17, flops:160.65, batch-reuse:1
@ 3793 train 3.9259 , allloss: 3.9259, dt: 693.90ms, fracRes: 0.3912, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2229, norm(y): 0.9998, norm:0.3776, tok/sec: 188890.90, flops:165.44, batch-reuse:1
@ 3794 train 3.8701 , allloss: 3.8701, dt: 707.61ms, fracRes: 0.3892, norm(attn): 0.4688, norm(output): 1.0312, norm(x): 1.2258, norm(y): 1.0001, norm:0.4327, tok/sec: 185232.01, flops:162.24, batch-reuse:1
@ 3795 train 3.8159 , allloss: 3.8159, dt: 704.60ms, fracRes: 0.3934, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2279, norm(y): 0.9995, norm:0.4066, tok/sec: 186022.37, flops:162.93, batch-reuse:1
@ 3796 train 3.9303 , allloss: 3.9303, dt: 700.25ms, fracRes: 0.3916, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2244, norm(y): 0.9998, norm:0.3601, tok/sec: 187179.65, flops:163.94, batch-reuse:1
@ 3797 train 3.9295 , allloss: 3.9295, dt: 710.82ms, fracRes: 0.3955, norm(attn): 0.4707, norm(output): 1.0312, norm(x): 1.2345, norm(y): 0.9995, norm:0.4094, tok/sec: 184395.56, flops:161.50, batch-reuse:1
@ 3798 train 3.8689 , allloss: 3.8689, dt: 691.49ms, fracRes: 0.3932, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2259, norm(y): 0.9997, norm:0.3754, tok/sec: 189550.32, flops:166.02, batch-reuse:1
@ 3799 train 3.8744 , allloss: 3.8744, dt: 689.39ms, fracRes: 0.3989, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2319, norm(y): 0.9998, norm:0.3951, tok/sec: 190128.44, flops:166.53, batch-reuse:1
@ 3800 train 3.8674 , allloss: 3.8674, dt: 690.26ms, fracRes: 0.3999, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2286, norm(y): 0.9994, norm:0.3717, tok/sec: 189886.71, flops:166.31, batch-reuse:1
@ 3801 train 3.8481 , allloss: 3.8481, dt: 693.95ms, fracRes: 0.3990, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2259, norm(y): 0.9994, norm:0.3620, tok/sec: 188878.89, flops:165.43, batch-reuse:1
@ 3802 train 3.8850 , allloss: 3.8850, dt: 679.29ms, fracRes: 0.4027, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2255, norm(y): 0.9991, norm:0.3724, tok/sec: 192953.04, flops:169.00, batch-reuse:1
@ 3803 train 3.8776 , allloss: 3.8776, dt: 701.71ms, fracRes: 0.4070, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2303, norm(y): 0.9993, norm:0.3693, tok/sec: 186789.61, flops:163.60, batch-reuse:1
@ 3804 train 3.8043 , allloss: 3.8043, dt: 698.81ms, fracRes: 0.4061, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2354, norm(y): 0.9994, norm:0.3968, tok/sec: 187564.87, flops:164.28, batch-reuse:1
@ 3805 train 3.9494 , allloss: 3.9494, dt: 700.01ms, fracRes: 0.3962, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2303, norm(y): 0.9997, norm:0.3753, tok/sec: 187244.23, flops:164.00, batch-reuse:1
@ 3806 train 3.8736 , allloss: 3.8736, dt: 700.53ms, fracRes: 0.3948, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2302, norm(y): 0.9999, norm:0.3902, tok/sec: 187103.84, flops:163.88, batch-reuse:1
@ 3807 train 3.8044 , allloss: 3.8044, dt: 699.43ms, fracRes: 0.4039, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2319, norm(y): 0.9997, norm:0.3856, tok/sec: 187397.93, flops:164.13, batch-reuse:1
@ 3808 train 3.8374 , allloss: 3.8374, dt: 696.76ms, fracRes: 0.3998, norm(attn): 0.4727, norm(output): 1.0234, norm(x): 1.2289, norm(y): 0.9993, norm:0.3747, tok/sec: 188115.67, flops:164.76, batch-reuse:1
@ 3809 train 3.8194 , allloss: 3.8194, dt: 693.47ms, fracRes: 0.4005, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2270, norm(y): 0.9993, norm:0.3663, tok/sec: 189008.83, flops:165.54, batch-reuse:1
@ 3810 train 3.7975 , allloss: 3.7975, dt: 701.12ms, fracRes: 0.3933, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2271, norm(y): 0.9998, norm:0.3818, tok/sec: 186946.18, flops:163.74, batch-reuse:1
@ 3811 train 3.7619 , allloss: 3.7619, dt: 704.67ms, fracRes: 0.4021, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2341, norm(y): 0.9995, norm:0.3953, tok/sec: 186004.12, flops:162.91, batch-reuse:1
@ 3812 train 3.8232 , allloss: 3.8232, dt: 695.94ms, fracRes: 0.3955, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2251, norm(y): 1.0001, norm:0.3675, tok/sec: 188339.04, flops:164.96, batch-reuse:1
@ 3813 train 3.7024 , allloss: 3.7024, dt: 709.78ms, fracRes: 0.4016, norm(attn): 0.4727, norm(output): 1.0078, norm(x): 1.2231, norm(y): 0.9991, norm:0.3895, tok/sec: 184666.48, flops:161.74, batch-reuse:1
@ 3814 train 3.8848 , allloss: 3.8848, dt: 753.18ms, fracRes: 0.3954, norm(attn): 0.4727, norm(output): 1.0078, norm(x): 1.2215, norm(y): 1.0004, norm:0.3663, tok/sec: 174024.13, flops:152.42, batch-reuse:1
@ 3815 train 3.8008 , allloss: 3.8008, dt: 705.03ms, fracRes: 0.3934, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2252, norm(y): 0.9998, norm:0.4262, tok/sec: 185910.46, flops:162.83, batch-reuse:1
@ 3816 train 3.8669 , allloss: 3.8669, dt: 691.42ms, fracRes: 0.3876, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2203, norm(y): 0.9999, norm:0.3856, tok/sec: 189570.12, flops:166.04, batch-reuse:1
@ 3817 train 3.8489 , allloss: 3.8489, dt: 698.18ms, fracRes: 0.3885, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2233, norm(y): 0.9999, norm:0.3922, tok/sec: 187734.35, flops:164.43, batch-reuse:1
@ 3818 train 3.8644 , allloss: 3.8644, dt: 691.96ms, fracRes: 0.3906, norm(attn): 0.4688, norm(output): 1.0312, norm(x): 1.2258, norm(y): 0.9998, norm:0.3625, tok/sec: 189421.98, flops:165.91, batch-reuse:1
@ 3819 train 3.8233 , allloss: 3.8233, dt: 692.52ms, fracRes: 0.3985, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2260, norm(y): 0.9994, norm:0.3837, tok/sec: 189268.34, flops:165.77, batch-reuse:1
@ 3820 train 3.8980 , allloss: 3.8980, dt: 702.11ms, fracRes: 0.3989, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2293, norm(y): 0.9995, norm:0.3763, tok/sec: 186682.48, flops:163.51, batch-reuse:1
@ 3821 train 3.9169 , allloss: 3.9169, dt: 711.58ms, fracRes: 0.3946, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2320, norm(y): 0.9997, norm:0.3666, tok/sec: 184198.90, flops:161.33, batch-reuse:1
@ 3822 train 3.7810 , allloss: 3.7810, dt: 715.50ms, fracRes: 0.3949, norm(attn): 0.4688, norm(output): 1.0312, norm(x): 1.2321, norm(y): 0.9995, norm:0.3568, tok/sec: 183189.10, flops:160.45, batch-reuse:1
@ 3823 train 3.8584 , allloss: 3.8584, dt: 685.46ms, fracRes: 0.3933, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2301, norm(y): 0.9999, norm:0.3539, tok/sec: 191217.09, flops:167.48, batch-reuse:1
@ 3824 train 3.7979 , allloss: 3.7979, dt: 705.26ms, fracRes: 0.3966, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2284, norm(y): 0.9997, norm:0.3528, tok/sec: 185850.37, flops:162.78, batch-reuse:1
@ 3825 train 3.7923 , allloss: 3.7923, dt: 681.75ms, fracRes: 0.4032, norm(attn): 0.4707, norm(output): 1.0391, norm(x): 1.2412, norm(y): 0.9998, norm:0.3782, tok/sec: 192259.35, flops:168.39, batch-reuse:1
@ 3826 train 3.8688 , allloss: 3.8688, dt: 696.83ms, fracRes: 0.3978, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2248, norm(y): 0.9997, norm:0.3791, tok/sec: 188098.74, flops:164.75, batch-reuse:1
@ 3827 train 3.8103 , allloss: 3.8103, dt: 675.67ms, fracRes: 0.3985, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2264, norm(y): 0.9997, norm:0.3680, tok/sec: 193987.94, flops:169.91, batch-reuse:1
@ 3828 train 3.7840 , allloss: 3.7840, dt: 700.74ms, fracRes: 0.3974, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2290, norm(y): 0.9998, norm:0.3834, tok/sec: 187046.81, flops:163.83, batch-reuse:1
@ 3829 train 3.8214 , allloss: 3.8214, dt: 706.55ms, fracRes: 0.3973, norm(attn): 0.4668, norm(output): 1.0234, norm(x): 1.2322, norm(y): 0.9998, norm:0.3498, tok/sec: 185511.03, flops:162.48, batch-reuse:1
@ 3830 train 3.8567 , allloss: 3.8567, dt: 690.63ms, fracRes: 0.3963, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2332, norm(y): 0.9998, norm:0.3962, tok/sec: 189786.28, flops:166.23, batch-reuse:1
@ 3831 train 3.7162 , allloss: 3.7162, dt: 703.13ms, fracRes: 0.4025, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2338, norm(y): 0.9998, norm:0.3538, tok/sec: 186410.98, flops:163.27, batch-reuse:1
@ 3832 train 3.7270 , allloss: 3.7270, dt: 699.85ms, fracRes: 0.4072, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2370, norm(y): 0.9993, norm:0.4240, tok/sec: 187286.72, flops:164.04, batch-reuse:1
@ 3833 train 3.7901 , allloss: 3.7901, dt: 683.37ms, fracRes: 0.4111, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2380, norm(y): 0.9989, norm:0.3698, tok/sec: 191802.43, flops:167.99, batch-reuse:1
@ 3834 train 3.8398 , allloss: 3.8398, dt: 700.85ms, fracRes: 0.4028, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2327, norm(y): 0.9998, norm:0.4003, tok/sec: 187018.94, flops:163.80, batch-reuse:1
@ 3835 train 3.7367 , allloss: 3.7367, dt: 705.46ms, fracRes: 0.4015, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2400, norm(y): 0.9998, norm:0.4227, tok/sec: 185797.55, flops:162.73, batch-reuse:1
@ 3836 train 3.8038 , allloss: 3.8038, dt: 687.77ms, fracRes: 0.3934, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2289, norm(y): 1.0000, norm:0.3805, tok/sec: 190575.37, flops:166.92, batch-reuse:1
@ 3837 train 3.9102 , allloss: 3.9102, dt: 693.35ms, fracRes: 0.3928, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2286, norm(y): 0.9999, norm:0.3717, tok/sec: 189041.26, flops:165.57, batch-reuse:1
@ 3838 train 3.7958 , allloss: 3.7958, dt: 698.36ms, fracRes: 0.4005, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2302, norm(y): 0.9997, norm:0.3602, tok/sec: 187684.23, flops:164.38, batch-reuse:1
@ 3839 train 3.7736 , allloss: 3.7736, dt: 683.63ms, fracRes: 0.3969, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2255, norm(y): 0.9994, norm:0.3405, tok/sec: 191730.52, flops:167.93, batch-reuse:1
@ 3840 train 3.9098 , allloss: 3.9098, dt: 694.26ms, fracRes: 0.3931, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2251, norm(y): 0.9999, norm:0.3811, tok/sec: 188794.63, flops:165.36, batch-reuse:1
@ 3841 train 3.8493 , allloss: 3.8493, dt: 690.12ms, fracRes: 0.4014, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2304, norm(y): 1.0001, norm:0.3699, tok/sec: 189925.80, flops:166.35, batch-reuse:1
@ 3842 train 3.8536 , allloss: 3.8536, dt: 701.15ms, fracRes: 0.4157, norm(attn): 0.4648, norm(output): 1.0078, norm(x): 1.2346, norm(y): 0.9998, norm:0.4811, tok/sec: 186938.24, flops:163.73, batch-reuse:1
@ 3843 train 3.8682 , allloss: 3.8682, dt: 695.08ms, fracRes: 0.4032, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2332, norm(y): 0.9993, norm:0.4503, tok/sec: 188570.76, flops:165.16, batch-reuse:1
@ 3844 train 3.7927 , allloss: 3.7927, dt: 692.55ms, fracRes: 0.3989, norm(attn): 0.4727, norm(output): 1.0312, norm(x): 1.2295, norm(y): 0.9992, norm:0.4224, tok/sec: 189258.82, flops:165.76, batch-reuse:1
@ 3845 train 3.7913 , allloss: 3.7913, dt: 691.89ms, fracRes: 0.3980, norm(attn): 0.4746, norm(output): 1.0391, norm(x): 1.2351, norm(y): 1.0001, norm:0.4468, tok/sec: 189440.13, flops:165.92, batch-reuse:1
@ 3846 train 3.5855 , allloss: 3.5855, dt: 698.20ms, fracRes: 0.4018, norm(attn): 0.4746, norm(output): 1.0312, norm(x): 1.2396, norm(y): 0.9997, norm:0.4403, tok/sec: 187728.19, flops:164.42, batch-reuse:1
@ 3847 train 3.8873 , allloss: 3.8873, dt: 690.60ms, fracRes: 0.3956, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2318, norm(y): 0.9999, norm:0.3896, tok/sec: 189793.42, flops:166.23, batch-reuse:1
@ 3848 train 3.7805 , allloss: 3.7805, dt: 699.59ms, fracRes: 0.3965, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2253, norm(y): 0.9995, norm:0.3788, tok/sec: 187356.35, flops:164.10, batch-reuse:1
@ 3849 train 3.6846 , allloss: 3.6846, dt: 692.52ms, fracRes: 0.3965, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2246, norm(y): 0.9995, norm:0.3757, tok/sec: 189269.38, flops:165.77, batch-reuse:1
@ 3850 train 3.7494 , allloss: 3.7494, dt: 686.32ms, fracRes: 0.3955, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2303, norm(y): 0.9997, norm:0.3815, tok/sec: 190977.35, flops:167.27, batch-reuse:1
@ 3851 train 3.7324 , allloss: 3.7324, dt: 699.80ms, fracRes: 0.3980, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2311, norm(y): 0.9996, norm:0.3750, tok/sec: 187299.10, flops:164.05, batch-reuse:1
@ 3852 train 3.6831 , allloss: 3.6831, dt: 712.37ms, fracRes: 0.4018, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2308, norm(y): 0.9990, norm:0.4259, tok/sec: 183995.03, flops:161.15, batch-reuse:1
@ 3853 train 3.7526 , allloss: 3.7526, dt: 698.42ms, fracRes: 0.3981, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2296, norm(y): 0.9994, norm:0.3669, tok/sec: 187670.32, flops:164.37, batch-reuse:1
@ 3854 train 3.7343 , allloss: 3.7343, dt: 699.26ms, fracRes: 0.3936, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2234, norm(y): 1.0000, norm:0.3778, tok/sec: 187444.57, flops:164.17, batch-reuse:1
@ 3855 train 3.6539 , allloss: 3.6539, dt: 707.22ms, fracRes: 0.3940, norm(attn): 0.4688, norm(output): 1.0078, norm(x): 1.2187, norm(y): 0.9996, norm:0.3593, tok/sec: 185334.04, flops:162.33, batch-reuse:1
@ 3856 train 3.7166 , allloss: 3.7166, dt: 708.88ms, fracRes: 0.3914, norm(attn): 0.4746, norm(output): 1.0156, norm(x): 1.2219, norm(y): 1.0007, norm:0.3876, tok/sec: 184901.13, flops:161.95, batch-reuse:1
@ 3857 train 3.6051 , allloss: 3.6051, dt: 709.52ms, fracRes: 0.3978, norm(attn): 0.4746, norm(output): 1.0078, norm(x): 1.2260, norm(y): 1.0005, norm:0.3958, tok/sec: 184734.00, flops:161.80, batch-reuse:1
@ 3858 train 3.7158 , allloss: 3.7158, dt: 705.19ms, fracRes: 0.3989, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2257, norm(y): 1.0001, norm:0.4140, tok/sec: 185866.96, flops:162.79, batch-reuse:1
@ 3859 train 3.6850 , allloss: 3.6850, dt: 693.68ms, fracRes: 0.4026, norm(attn): 0.4707, norm(output): 1.0078, norm(x): 1.2256, norm(y): 0.9998, norm:0.3775, tok/sec: 188951.08, flops:165.49, batch-reuse:1
@ 3860 train 3.7598 , allloss: 3.7598, dt: 702.22ms, fracRes: 0.4042, norm(attn): 0.4688, norm(output): 1.0156, norm(x): 1.2309, norm(y): 0.9992, norm:0.4610, tok/sec: 186653.57, flops:163.48, batch-reuse:1
@ 3861 train 3.7656 , allloss: 3.7656, dt: 703.86ms, fracRes: 0.4001, norm(attn): 0.4668, norm(output): 1.0234, norm(x): 1.2320, norm(y): 0.9998, norm:0.4299, tok/sec: 186218.65, flops:163.10, batch-reuse:1
@ 3862 train 3.7424 , allloss: 3.7424, dt: 707.13ms, fracRes: 0.3975, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2260, norm(y): 0.9999, norm:0.3468, tok/sec: 185357.16, flops:162.35, batch-reuse:1
@ 3863 train 3.7696 , allloss: 3.7696, dt: 693.81ms, fracRes: 0.3975, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2232, norm(y): 0.9999, norm:0.3985, tok/sec: 188916.86, flops:165.46, batch-reuse:1
@ 3864 train 3.7418 , allloss: 3.7418, dt: 700.16ms, fracRes: 0.3992, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2297, norm(y): 1.0000, norm:0.3819, tok/sec: 187202.85, flops:163.96, batch-reuse:1
@ 3865 train 3.7845 , allloss: 3.7845, dt: 704.38ms, fracRes: 0.3976, norm(attn): 0.4727, norm(output): 1.0234, norm(x): 1.2280, norm(y): 1.0001, norm:0.3749, tok/sec: 186081.24, flops:162.98, batch-reuse:1
@ 3866 train 3.6653 , allloss: 3.6653, dt: 701.18ms, fracRes: 0.3966, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2254, norm(y): 0.9996, norm:0.3707, tok/sec: 186930.42, flops:163.72, batch-reuse:1
@ 3867 train 3.6756 , allloss: 3.6756, dt: 697.43ms, fracRes: 0.3992, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2337, norm(y): 0.9998, norm:0.3816, tok/sec: 187936.51, flops:164.61, batch-reuse:1
@ 3868 train 3.6376 , allloss: 3.6376, dt: 712.32ms, fracRes: 0.3954, norm(attn): 0.4727, norm(output): 1.0078, norm(x): 1.2228, norm(y): 0.9997, norm:0.3825, tok/sec: 184007.04, flops:161.16, batch-reuse:1
@ 3869 train 3.6300 , allloss: 3.6300, dt: 713.03ms, fracRes: 0.4025, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2346, norm(y): 0.9995, norm:0.3609, tok/sec: 183824.06, flops:161.00, batch-reuse:1
@ 3870 train 3.6773 , allloss: 3.6773, dt: 711.19ms, fracRes: 0.4023, norm(attn): 0.4785, norm(output): 1.0156, norm(x): 1.2319, norm(y): 1.0001, norm:0.4015, tok/sec: 184300.24, flops:161.42, batch-reuse:1
@ 3871 train 3.7532 , allloss: 3.7532, dt: 695.78ms, fracRes: 0.4013, norm(attn): 0.4727, norm(output): 1.0234, norm(x): 1.2395, norm(y): 1.0002, norm:0.4077, tok/sec: 188382.34, flops:165.00, batch-reuse:1
@ 3872 train 3.7501 , allloss: 3.7501, dt: 692.10ms, fracRes: 0.4004, norm(attn): 0.4707, norm(output): 1.0312, norm(x): 1.2368, norm(y): 0.9999, norm:0.3602, tok/sec: 189383.35, flops:165.87, batch-reuse:1
@ 3873 train 3.7165 , allloss: 3.7165, dt: 691.41ms, fracRes: 0.4021, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2360, norm(y): 0.9999, norm:0.3495, tok/sec: 189571.36, flops:166.04, batch-reuse:1
@ 3874 train 3.7205 , allloss: 3.7205, dt: 684.98ms, fracRes: 0.4045, norm(attn): 0.4707, norm(output): 1.0234, norm(x): 1.2350, norm(y): 0.9998, norm:0.3491, tok/sec: 191350.53, flops:167.60, batch-reuse:1
@ 3875 train 3.6662 , allloss: 3.6662, dt: 686.29ms, fracRes: 0.4001, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2274, norm(y): 1.0002, norm:0.3718, tok/sec: 190987.11, flops:167.28, batch-reuse:1
@ 3876 train 3.6884 , allloss: 3.6884, dt: 700.75ms, fracRes: 0.4028, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2349, norm(y): 1.0000, norm:0.3721, tok/sec: 187046.23, flops:163.83, batch-reuse:1
@ 3877 train 3.7632 , allloss: 3.7632, dt: 700.65ms, fracRes: 0.4053, norm(attn): 0.4688, norm(output): 1.0234, norm(x): 1.2357, norm(y): 0.9998, norm:0.4005, tok/sec: 187073.03, flops:163.85, batch-reuse:1
@ 3878 train 3.6931 , allloss: 3.6931, dt: 687.07ms, fracRes: 0.3992, norm(attn): 0.4707, norm(output): 1.0156, norm(x): 1.2324, norm(y): 1.0000, norm:0.3609, tok/sec: 190768.14, flops:167.09, batch-reuse:1
@ 3879 train 3.7238 , allloss: 3.7238, dt: 698.10ms, fracRes: 0.3931, norm(attn): 0.4727, norm(output): 1.0312, norm(x): 1.2327, norm(y): 1.0002, norm:0.3782, tok/sec: 187754.03, flops:164.45, batch-reuse:1
@ 3880 train 3.8515 , allloss: 3.8515, dt: 687.62ms, fracRes: 0.3964, norm(attn): 0.4727, norm(output): 1.0156, norm(x): 1.2344, norm(y): 1.0003, norm:0.3802, tok/sec: 190618.19, flops:166.95, batch-reuse:1
@ 3881 train 3.7636 , allloss: 3.7636, dt: 700.11ms, fracRes: 0.3936, norm(attn): 0.4785, norm(output): 1.0312, norm(x): 1.2305, norm(y): 1.0010, norm:0.4264, tok/sec: 187216.37, flops:163.97, batch-reuse:1
@ 3882 train 3.7386 , allloss: 3.7386, dt: 706.51ms, fracRes: 0.4017, norm(attn): 0.4766, norm(output): 1.0156, norm(x): 1.2353, norm(y): 1.0007, norm:0.3693, tok/sec: 185519.42, flops:162.49, batch-reuse:1
