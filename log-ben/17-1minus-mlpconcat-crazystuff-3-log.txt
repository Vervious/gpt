Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-3
MLPSCALE: 2
Experiment description: Transformer, max LR 0.00015
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config) 
========
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights * y + (1-xWeights)*machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=True
MLP_SCALE=2
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=False
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True
IDENTITY_LOSS=True

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 6, with 45,318,144 parameters
num non-decayed parameter tensors: 6, with 5,376 parameters
@ 0 train 10.9052 , allloss: 26.7497, dt: 4142.55ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:24.3499, tok/sec: 31640.42, flops:12.33, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3184, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2734, 0.1914, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1650, 0.2051, 0.1299, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1147, 0.1816, 0.1138, 0.2393, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.0903, 0.1582, 0.1445, 0.1504, 0.1514, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0884, 0.1299, 0.1250, 0.1592, 0.1396, 0.0908, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.1260, 0.0928, 0.1001, 0.1514, 0.0947, 0.1299, 0.1514, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.0962, 0.0693, 0.1553, 0.1245, 0.0747, 0.1245, 0.0645, 0.1104, 0.0728, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0918, 0.0732, 0.1328, 0.1084, 0.1338, 0.0723, 0.0825, 0.0718, 0.0320, 0.1128, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0640, 0.0815, 0.0933, 0.0977, 0.0972, 0.1279, 0.1162, 0.0688, 0.0679, 0.0437, 0.0566, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0479, 0.0811, 0.0654, 0.0645, 0.1348, 0.1309, 0.1045, 0.0864, 0.0532, 0.0452, 0.0437, 0.0732, 0.0000, 0.0000],
        [0.0703, 0.0613, 0.0679, 0.1045, 0.0486, 0.1079, 0.0845, 0.0854, 0.0410, 0.1011, 0.0557, 0.0479, 0.0684, 0.0562, 0.0000],
        [0.0713, 0.0366, 0.0623, 0.0762, 0.1152, 0.0659, 0.0574, 0.0825, 0.0645, 0.1074, 0.0645, 0.0505, 0.0474, 0.0427, 0.0552]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0055,  0.0126,  ..., -0.0052, -0.0314, -0.0040],
        [-0.0393,  0.0147, -0.0200,  ...,  0.0009, -0.0195, -0.0112],
        [-0.0154,  0.0036,  0.0355,  ..., -0.0114, -0.0315, -0.0010],
        ...,
        [ 0.0396,  0.0134,  0.0291,  ..., -0.0290,  0.0155, -0.0080],
        [ 0.0171, -0.0075,  0.0050,  ...,  0.0081,  0.0211, -0.0197],
        [ 0.0339,  0.0148,  0.0129,  ..., -0.0517,  0.0332,  0.0164]], device='cuda:0', requires_grad=True)
K: tensor([-0.5117, -1.3438, -0.2471,  0.3418,  1.0312,  0.6758, -0.1807, -0.5820,  0.4980,  0.1245,  0.2041,  0.8945, -0.1025, -0.3281, -0.1523,  0.4355,  0.9219,  0.7422,  0.1748,  1.0938, -0.5703,  0.6289,  0.4902,  1.5781, -0.1504, -0.7539, -0.4316,  0.3574, -0.0698, -0.1338,  0.0271,  0.0806,
        -1.5234,  0.1484, -0.6719, -1.3047,  0.0547, -0.3555,  1.0312,  0.4453, -0.2246,  0.4434, -0.5352,  0.3203,  0.0820, -0.0547,  0.0598,  0.4043,  0.2617,  0.0884, -0.0201, -0.2539,  0.6992, -0.7383,  0.1099, -1.3984,  0.1196, -0.2969, -0.7852, -0.5781, -0.9023,  0.2480,  0.4238, -1.0000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0002,  0.0196,  ...,  0.0048, -0.0207,  0.0031],
        [-0.0530,  0.0037, -0.0053,  ...,  0.0109,  0.0176, -0.0549],
        [ 0.0130, -0.0044,  0.0238,  ..., -0.0191,  0.0007, -0.0118],
        ...,
        [ 0.0070,  0.0007,  0.0166,  ...,  0.0186,  0.0129,  0.0007],
        [ 0.0202, -0.0310, -0.0076,  ...,  0.0318,  0.0194, -0.0212],
        [ 0.0233,  0.0036,  0.0030,  ...,  0.0249,  0.0251, -0.0159]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8516, -0.3223,  0.0515, -0.7852, -0.2314,  1.0078,  0.5586, -0.0684,  0.1553, -0.2773, -1.5391,  0.0244,  0.9570,  0.0282, -0.9531,  0.1436,  0.3945, -0.2676, -0.8984,  0.4805,  0.0854, -0.2051, -0.3652,  0.3301, -0.4375,  0.1904, -0.9766, -0.8672, -0.7539, -0.2969,  0.6680, -0.4629,
         0.3711,  0.1406,  0.4531,  0.4551, -0.1865, -0.3281,  0.0508,  0.5039,  0.9102,  0.7852, -0.8438,  0.5117,  0.2773,  0.4746, -0.1143, -0.4102, -0.2324,  0.0474,  0.4629,  0.0452, -0.7891,  0.4375, -0.3770,  0.8711,  0.4707,  0.2002,  0.1167, -0.6133,  0.3984, -0.0535, -0.2324, -0.1099],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0103, -0.1309, -0.2969,  0.4434, -0.2598, -0.1533, -0.0649,  0.1670, -0.1182,  0.0693,  0.4004,  0.1123,  0.0013, -0.1934],
        [ 0.0000, -0.0457,  0.0500, -0.1670, -0.1973,  0.3730,  0.3789,  0.2793,  0.0265,  0.0581, -0.1523, -0.1357,  0.0640, -0.1816, -0.0762],
        [ 0.0000,  0.0106, -0.3496, -0.0312,  0.0869, -0.1299,  0.0603,  0.2188,  0.1484, -0.2109,  0.2969,  0.1934, -0.2197, -0.2539,  0.1738],
        [ 0.0000, -0.0162,  0.2031, -0.2539,  0.6875,  0.0033,  0.1152,  0.2490, -0.1475, -0.5312,  0.3086,  0.4355,  0.1650, -0.5938, -0.1680],
        [ 0.0000, -0.3457,  0.1147, -0.3516,  0.3926,  0.1553,  0.3164, -0.3438,  0.2217,  0.0408, -0.4395,  0.0305, -0.0938,  0.1133, -0.3379],
        [ 0.0000, -0.5234,  0.0374, -0.0518, -0.0120, -0.0101,  0.0012, -0.0938,  0.2617, -0.2363, -0.2852, -0.2695, -0.1021,  0.3945, -0.0227],
        [ 0.0000, -0.1963,  0.1865,  0.1504,  0.3906,  0.2598, -0.1699,  0.3926,  0.0869, -0.0811, -0.0977, -0.0796, -0.0344, -0.1006,  0.0229],
        [ 0.0000,  0.3691,  0.0623,  0.1396,  0.5547,  0.0854,  0.3984,  0.5547, -0.2637,  0.3574, -0.5508, -0.5117, -0.4922, -0.1128,  0.2520],
        [ 0.0000, -0.1128, -0.4434,  0.3652,  0.1416, -0.3691,  0.1436, -0.5156,  0.0229, -0.3945, -0.0957,  0.2070, -0.0874, -0.2773,  0.3906],
        [ 0.0000,  0.0234, -0.2021,  0.3926,  0.1924,  0.4004, -0.2168, -0.0806, -0.2236, -1.0312,  0.2324,  0.1465,  0.0227, -0.1011,  0.5664],
        [ 0.0000, -0.2832, -0.0376,  0.0952,  0.1416,  0.1396,  0.4121,  0.3184, -0.2061, -0.2188, -0.6602, -0.4023,  0.2080, -0.0835,  0.2227],
        [ 0.0000, -0.3828,  0.1436, -0.0718, -0.0820,  0.6562,  0.6211,  0.3984,  0.2070, -0.2773, -0.4375, -0.4746,  0.0464,  0.0164,  0.1680],
        [ 0.0000, -0.1396, -0.0378,  0.3906, -0.3730,  0.4238,  0.1787,  0.1895, -0.5430,  0.3574, -0.2383, -0.3906, -0.0289, -0.2295, -0.2148],
        [ 0.0000, -0.6641, -0.1328,  0.0684,  0.4824, -0.0786, -0.2148,  0.1475, -0.0957,  0.4121, -0.0952, -0.3418, -0.4043, -0.5078, -0.2539]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5026],
        [0.3248],
        [0.2448],
        [0.1924],
        [0.1653],
        [0.1411],
        [0.1182],
        [0.1042],
        [0.0988],
        [0.0941],
        [0.0799],
        [0.0746],
        [0.0701],
        [0.0638]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3301, 0.3379, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.2617, 0.1875, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1523, 0.2256, 0.1377, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1299, 0.1650, 0.1187, 0.2695, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1021, 0.1436, 0.1533, 0.1855, 0.1289, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.0879, 0.1230, 0.1235, 0.1494, 0.1660, 0.0923, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1328, 0.0928, 0.1035, 0.1309, 0.0947, 0.1045, 0.1777, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1069, 0.0623, 0.1641, 0.1128, 0.0889, 0.1162, 0.0605, 0.0928, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.1050, 0.0796, 0.1377, 0.1108, 0.1270, 0.0693, 0.0879, 0.0601, 0.0391, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0618, 0.0723, 0.0908, 0.1182, 0.0962, 0.0952, 0.1162, 0.0679, 0.0728, 0.0613, 0.0608, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0413, 0.0938, 0.0742, 0.0549, 0.1245, 0.0811, 0.1406, 0.0913, 0.0564, 0.0476, 0.0435, 0.0835, 0.0000, 0.0000],
        [0.0723, 0.0830, 0.0571, 0.0791, 0.0540, 0.0942, 0.0830, 0.0952, 0.0474, 0.1201, 0.0645, 0.0422, 0.0471, 0.0610, 0.0000],
        [0.0718, 0.0488, 0.0542, 0.0598, 0.1279, 0.0645, 0.0776, 0.0603, 0.0708, 0.0747, 0.0874, 0.0496, 0.0537, 0.0327, 0.0669]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0055,  0.0126,  ..., -0.0052, -0.0314, -0.0040],
        [-0.0393,  0.0147, -0.0200,  ...,  0.0009, -0.0195, -0.0112],
        [-0.0154,  0.0036,  0.0355,  ..., -0.0114, -0.0315, -0.0010],
        ...,
        [ 0.0396,  0.0134,  0.0291,  ..., -0.0290,  0.0155, -0.0080],
        [ 0.0171, -0.0075,  0.0050,  ...,  0.0081,  0.0211, -0.0197],
        [ 0.0339,  0.0148,  0.0129,  ..., -0.0517,  0.0332,  0.0164]], device='cuda:0', requires_grad=True)
K: tensor([    -1.0078,     -1.3281,      0.0220,      0.2500,      0.4922,     -0.0723,     -0.4414,     -0.5039,      0.5078,      0.0223,      0.1387,      0.8867,     -0.4492,      0.1855,     -0.0001,      1.0078,      0.6367,      0.2871,      0.4531,      0.8867,     -0.2734,      0.1206,
             0.3535,      1.5703,     -0.1416,     -0.6953,     -0.9570,      0.0718,      0.1631,     -0.2041,      0.3496,      0.6523,     -1.2500,      0.0569,     -0.1953,     -1.3203,      0.0361,     -0.0151,      1.0156,      0.4746,     -0.3574,      0.3613,     -0.4453,      0.9453,
            -0.0325,      0.0243,     -0.1572,      0.1211,      0.4863,      0.0354,     -0.9219,      0.0742,      0.4473,     -0.6445,      0.3906,     -0.8516,     -0.0981,     -0.6328,     -0.9258,     -0.4375,     -0.1689,     -0.2334,     -0.0535,     -0.7930], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0002,  0.0196,  ...,  0.0048, -0.0207,  0.0031],
        [-0.0530,  0.0037, -0.0053,  ...,  0.0109,  0.0176, -0.0549],
        [ 0.0130, -0.0044,  0.0238,  ..., -0.0191,  0.0007, -0.0118],
        ...,
        [ 0.0070,  0.0007,  0.0166,  ...,  0.0186,  0.0129,  0.0007],
        [ 0.0202, -0.0310, -0.0076,  ...,  0.0318,  0.0194, -0.0212],
        [ 0.0233,  0.0036,  0.0030,  ...,  0.0249,  0.0251, -0.0159]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6523,  0.1006,  0.4355, -0.6758,  0.0044,  0.8945,  0.1162,  0.0089,  0.2637,  0.2715, -1.2734,  0.0030,  1.0391,  0.6914, -0.6914,  0.4531,  0.3555, -0.9844, -0.3672,  0.6445, -0.3672, -0.2070, -0.4980,  0.6250, -0.1113,  0.7773, -0.8477, -0.6289, -1.0078, -0.3223,  0.2246, -0.2832,
         0.4551,  1.1016,  0.0410,  0.2637, -0.2217, -0.3730,  0.2520,  0.3984,  0.7891,  1.1719, -0.2178,  0.3164,  0.1592,  0.9609,  0.8047, -0.3984, -0.1021, -0.3398,  0.2793, -0.1475, -0.6406, -0.0413, -0.4785,  0.7422,  0.3965, -0.3965,  0.4844, -0.3320, -0.0530, -0.6367, -0.1270, -0.6914],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0542, -0.1226, -0.2715,  0.3574, -0.2334, -0.0776, -0.0199,  0.0071, -0.1045,  0.0481,  0.3984,  0.1973, -0.0698, -0.1099],
        [ 0.0000, -0.0083,  0.0206, -0.1074, -0.1699,  0.3477,  0.3516,  0.2520,  0.0640,  0.0018, -0.0845, -0.0991,  0.0311, -0.2715, -0.2139],
        [ 0.0000, -0.0442, -0.3789,  0.0142,  0.1221, -0.1201,  0.0398,  0.1650,  0.1201, -0.2393,  0.2197,  0.1348, -0.0520, -0.0718,  0.1660],
        [ 0.0000, -0.1416,  0.2490, -0.2412,  0.5625,  0.1050,  0.0669,  0.0991, -0.0698, -0.5781,  0.1113,  0.3789,  0.1309, -0.5547, -0.3359],
        [ 0.0000, -0.2197,  0.0164, -0.3125,  0.5117, -0.0493,  0.0957, -0.5117,  0.0864,  0.0908, -0.6133,  0.1465, -0.1816,  0.1089, -0.3242],
        [ 0.0000, -0.3848, -0.0386,  0.0262,  0.2139, -0.1504, -0.0898, -0.0309,  0.3262, -0.1797, -0.0132, -0.0713, -0.3379,  0.5000,  0.1348],
        [ 0.0000, -0.2383,  0.0957,  0.1006,  0.2891,  0.3984, -0.1895,  0.2734, -0.0542,  0.0527,  0.0757, -0.0747,  0.1221, -0.1621, -0.4570],
        [ 0.0000,  0.4023,  0.0461,  0.1553,  0.3867,  0.0659,  0.1650,  0.6953, -0.1641,  0.6250, -0.6484, -0.5078, -0.5508, -0.0613, -0.0708],
        [ 0.0000,  0.0144, -0.5273,  0.4453,  0.0698, -0.1719,  0.0991, -0.5508, -0.1250, -0.1660, -0.2852,  0.0240, -0.4219, -0.6328,  0.1787],
        [ 0.0000,  0.2051, -0.0737,  0.4785,  0.2598,  0.3965, -0.2100,  0.0286, -0.3555, -0.7852,  0.1211, -0.2266,  0.0820, -0.2441,  0.3711],
        [ 0.0000, -0.3301, -0.1709,  0.0574,  0.3203,  0.1133,  0.1045,  0.3047, -0.2344, -0.1631, -0.3379, -0.3477,  0.1738, -0.2949,  0.2490],
        [ 0.0000, -0.5039,  0.3184,  0.0815, -0.2158,  0.6016,  0.1719,  0.7227,  0.2910, -0.1904, -0.3613, -0.4473,  0.2012, -0.0425,  0.1211],
        [ 0.0000,  0.1387, -0.2334,  0.0938, -0.2910,  0.2695,  0.1396,  0.2812, -0.4199,  0.5117, -0.1104, -0.5352, -0.4277, -0.1650, -0.2051],
        [ 0.0000, -0.3828, -0.2793, -0.1797,  0.5781, -0.1040,  0.0801, -0.1719, -0.0096,  0.0457,  0.2021, -0.3672, -0.2871, -0.7852, -0.0679]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5033],
        [0.3293],
        [0.2476],
        [0.1946],
        [0.1646],
        [0.1420],
        [0.1202],
        [0.1057],
        [0.0975],
        [0.0928],
        [0.0786],
        [0.0739],
        [0.0731],
        [0.0619]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3418, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.2480, 0.1855, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1436, 0.2412, 0.1484, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1514, 0.1436, 0.1240, 0.2832, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1123, 0.1299, 0.1562, 0.2168, 0.1147, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.0933, 0.1172, 0.1147, 0.1348, 0.1904, 0.1006, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.1348, 0.0962, 0.1069, 0.1177, 0.0972, 0.0942, 0.1846, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1147, 0.0591, 0.1553, 0.1040, 0.1055, 0.1162, 0.0737, 0.0757, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1138, 0.0825, 0.1309, 0.1069, 0.1060, 0.0737, 0.0947, 0.0659, 0.0596, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0605, 0.0654, 0.0762, 0.1445, 0.0986, 0.0762, 0.1060, 0.0708, 0.0713, 0.0820, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0410, 0.0928, 0.0776, 0.0659, 0.0991, 0.0583, 0.1572, 0.1011, 0.0525, 0.0583, 0.0493, 0.0801, 0.0000, 0.0000],
        [0.0684, 0.0835, 0.0549, 0.0530, 0.0615, 0.0845, 0.0864, 0.0928, 0.0583, 0.1108, 0.0645, 0.0415, 0.0498, 0.0903, 0.0000],
        [0.0654, 0.0596, 0.0544, 0.0593, 0.1104, 0.0728, 0.0820, 0.0491, 0.0786, 0.0566, 0.0806, 0.0486, 0.0649, 0.0488, 0.0684]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0055,  0.0126,  ..., -0.0052, -0.0314, -0.0040],
        [-0.0393,  0.0147, -0.0200,  ...,  0.0009, -0.0195, -0.0112],
        [-0.0154,  0.0036,  0.0355,  ..., -0.0114, -0.0315, -0.0010],
        ...,
        [ 0.0396,  0.0134,  0.0291,  ..., -0.0290,  0.0155, -0.0080],
        [ 0.0171, -0.0075,  0.0050,  ...,  0.0081,  0.0211, -0.0197],
        [ 0.0339,  0.0148,  0.0129,  ..., -0.0517,  0.0332,  0.0164]], device='cuda:0', requires_grad=True)
K: tensor([-1.5078, -0.7461,  0.3906, -0.2100,  0.1416, -0.4199, -0.7422, -0.4297,  0.5234, -0.1758,  0.0410,  0.6680, -0.0505,  0.7070, -0.0311,  1.0234,  0.5039,  0.1709,  0.4668,  0.4219,  0.1064,  0.1260,  0.2754,  1.1562,  0.1016, -0.6016, -0.8984,  0.0835,  0.4004, -0.3027,  0.3340,  0.7617,
        -0.7344,  0.1582, -0.0447, -1.1406, -0.0251,  0.4219,  0.9375,  0.4609, -0.7227, -0.0417, -0.3750,  1.3125, -0.1602, -0.1514,  0.0552, -0.1064,  0.6719,  0.1660, -0.8438,  0.0262,  0.2070, -0.4375,  0.6484, -0.5820,  0.0510, -0.8164, -1.0469, -0.1084,  0.3535, -0.0474,  0.0542, -0.3359],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0002,  0.0196,  ...,  0.0048, -0.0207,  0.0031],
        [-0.0530,  0.0037, -0.0053,  ...,  0.0109,  0.0176, -0.0549],
        [ 0.0130, -0.0044,  0.0238,  ..., -0.0191,  0.0007, -0.0118],
        ...,
        [ 0.0070,  0.0007,  0.0166,  ...,  0.0186,  0.0129,  0.0007],
        [ 0.0202, -0.0310, -0.0076,  ...,  0.0318,  0.0194, -0.0212],
        [ 0.0233,  0.0036,  0.0030,  ...,  0.0249,  0.0251, -0.0159]], device='cuda:0', requires_grad=True)
Q: tensor([     0.0977,      0.1904,      0.3223,     -0.5234,      0.2178,      0.8984,     -0.2031,      0.0542,      0.0618,      0.5430,     -0.7930,     -0.0082,      0.7695,      0.7852,     -0.3301,      0.3652,      0.4629,     -1.0938,      0.2559,      0.5352,     -0.4238,     -0.2559,
            -0.5703,      0.6797,     -0.2129,      1.1562,     -0.5820,     -0.4980,     -0.9844,     -0.2773,     -0.2539,     -0.0244,      0.5352,      1.2500,     -0.3008,      0.0713,     -0.2393,     -0.1021,      0.0009,      0.0298,      0.1660,      1.2500,      0.1797,      0.3945,
             0.0952,      0.9648,      1.0078,     -0.6641,     -0.1201,     -0.3828,     -0.0649,      0.0187,     -0.2246,     -0.4883,     -0.3027,      0.4883,      0.3750,     -0.6367,      0.7734,     -0.3438,     -0.3906,     -1.0781,     -0.2949,     -0.8477], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1001,     -0.1060,     -0.2422,      0.2598,     -0.1963,     -0.0074,      0.0228,     -0.1973,     -0.0432,      0.0250,      0.2490,      0.1289,     -0.1602,     -0.0771],
        [     0.0000,      0.0327,     -0.0065,     -0.0449,     -0.1475,      0.3242,      0.3047,      0.2539,      0.0771,     -0.0240,     -0.0728,     -0.1084,      0.0215,     -0.3066,     -0.2773],
        [     0.0000,     -0.1060,     -0.3965,      0.0510,      0.1455,     -0.0864,     -0.0015,      0.0903,      0.0732,     -0.2070,      0.0830,      0.0747,      0.0835,      0.1104,      0.2363],
        [     0.0000,     -0.2520,      0.2676,     -0.2158,      0.4238,      0.1855,      0.0591,     -0.0688,      0.0840,     -0.5273,      0.0225,      0.1953,      0.1191,     -0.3457,     -0.4512],
        [     0.0000,     -0.0713,     -0.1230,     -0.2676,      0.5586,     -0.1787,     -0.1328,     -0.6016,     -0.0728,      0.0801,     -0.6680,      0.2197,     -0.1660,      0.1650,     -0.1992],
        [     0.0000,     -0.2363,     -0.0884,      0.0967,      0.4258,     -0.2139,     -0.1079,      0.0781,      0.3047,     -0.1406,      0.2080,      0.0513,     -0.2852,      0.7070,      0.3535],
        [     0.0000,     -0.2285,     -0.0003,     -0.0214,      0.1406,      0.4863,     -0.1523,      0.1157,     -0.1865,      0.2285,      0.1299,     -0.0310,      0.2637,     -0.0757,     -0.3320],
        [     0.0000,      0.3965,      0.0547,      0.1621,      0.2578,      0.0664,      0.0334,      0.7109,     -0.1729,      0.6602,     -0.6562,     -0.4141,     -0.2559,      0.1797,     -0.0820],
        [     0.0000,      0.1108,     -0.5508,      0.4102,      0.0148,      0.0255,      0.1226,     -0.3340,     -0.3027,     -0.0923,     -0.1953,      0.0134,     -0.4766,     -0.6719,      0.1099],
        [     0.0000,      0.3125,     -0.0072,      0.4531,      0.2500,      0.2422,     -0.1196,      0.1270,     -0.2373,     -0.3359,     -0.0082,     -0.4121,      0.1040,     -0.0059,      0.0284],
        [     0.0000,     -0.3066,     -0.2334,     -0.0767,      0.5625,      0.1797,     -0.0752,      0.2520,     -0.1533,     -0.1465,     -0.0032,     -0.2168,      0.0383,     -0.2969,      0.2100],
        [     0.0000,     -0.4844,      0.3340,      0.1562,     -0.0113,      0.3984,     -0.1318,      0.8633,      0.4199,     -0.2354,     -0.1318,     -0.2988,      0.1855,      0.1543,      0.1006],
        [     0.0000,      0.2021,     -0.2197,     -0.2539,     -0.1050,      0.2129,      0.2354,      0.3066,     -0.1562,      0.4824,     -0.0581,     -0.4961,     -0.3145,      0.2773,     -0.2559],
        [     0.0000,     -0.0972,     -0.1855,     -0.1006,      0.5195,      0.1050,      0.2246,     -0.2910,      0.1787,     -0.1475,      0.2041,     -0.2988,     -0.0140,     -0.2949,      0.0405]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5046],
        [0.3337],
        [0.2507],
        [0.1964],
        [0.1630],
        [0.1433],
        [0.1231],
        [0.1082],
        [0.0956],
        [0.0894],
        [0.0774],
        [0.0726],
        [0.0741],
        [0.0616]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.5938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.4492, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.2158, 0.2207, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.1191, 0.2373, 0.1953, 0.2539, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.2598, 0.0874, 0.1641, 0.2129, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1387, 0.1543, 0.1196, 0.2402, 0.1240, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1191, 0.1562, 0.1006, 0.1118, 0.1875, 0.1187, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1167, 0.1060, 0.1113, 0.1089, 0.1445, 0.0835, 0.1113, 0.1211, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0654, 0.0918, 0.1758, 0.1094, 0.1089, 0.1016, 0.1055, 0.0786, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.0796, 0.0747, 0.1318, 0.0615, 0.0908, 0.1201, 0.0874, 0.0830, 0.0781, 0.1177, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0674, 0.0537, 0.0776, 0.1250, 0.1113, 0.1021, 0.0752, 0.0825, 0.1089, 0.0601, 0.0591, 0.0000, 0.0000, 0.0000],
        [0.0615, 0.0679, 0.0723, 0.0540, 0.1016, 0.0613, 0.0532, 0.0684, 0.1138, 0.0762, 0.0525, 0.0771, 0.1406, 0.0000, 0.0000],
        [0.0659, 0.0579, 0.0688, 0.0598, 0.0688, 0.0859, 0.0454, 0.0698, 0.0713, 0.0613, 0.0679, 0.0869, 0.0962, 0.0933, 0.0000],
        [0.0483, 0.0879, 0.0615, 0.0503, 0.0898, 0.0466, 0.0615, 0.0576, 0.0791, 0.0579, 0.0479, 0.0645, 0.0718, 0.0801, 0.0947]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0055,  0.0126,  ..., -0.0052, -0.0314, -0.0040],
        [-0.0393,  0.0147, -0.0200,  ...,  0.0009, -0.0195, -0.0112],
        [-0.0154,  0.0036,  0.0355,  ..., -0.0114, -0.0315, -0.0010],
        ...,
        [ 0.0396,  0.0134,  0.0291,  ..., -0.0290,  0.0155, -0.0080],
        [ 0.0171, -0.0075,  0.0050,  ...,  0.0081,  0.0211, -0.0197],
        [ 0.0339,  0.0148,  0.0129,  ..., -0.0517,  0.0332,  0.0164]], device='cuda:0', requires_grad=True)
K: tensor([-1.1094,  1.6719, -0.2578, -0.8750, -0.0320, -0.8867, -0.7656, -0.0742, -0.5078, -0.4727, -0.6055, -0.3457, -0.4531,  1.7109, -0.2031,  0.3320,  0.2715,  0.5000, -0.1924, -0.8672,  0.2188,  0.7812,  0.5430,  0.3105,  0.2480,  0.2441, -0.6953,  0.2207, -0.8828, -0.2754,  0.5430,  1.3906,
        -0.1914,  0.3711,  0.5820, -0.4258, -0.4238,  0.1006,  0.7148, -1.0078, -0.4180, -0.3340, -0.2041,  0.0608,  0.1152, -1.0469,  0.0437,  0.1289,  0.3477, -0.0830, -0.9102,  0.4531, -0.7031,  0.5977,  0.2930, -0.1348, -0.0293, -0.3926, -0.4609,  1.2266,  0.8711, -0.4043, -1.0781, -0.1377],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0002,  0.0196,  ...,  0.0048, -0.0207,  0.0031],
        [-0.0530,  0.0037, -0.0053,  ...,  0.0109,  0.0176, -0.0549],
        [ 0.0130, -0.0044,  0.0238,  ..., -0.0191,  0.0007, -0.0118],
        ...,
        [ 0.0070,  0.0007,  0.0166,  ...,  0.0186,  0.0129,  0.0007],
        [ 0.0202, -0.0310, -0.0076,  ...,  0.0318,  0.0194, -0.0212],
        [ 0.0233,  0.0036,  0.0030,  ...,  0.0249,  0.0251, -0.0159]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0312,  0.8594, -0.5352, -0.5312,  0.4160, -0.5898,  0.0322,  0.3750,  0.3711,  0.4453, -0.2695,  0.9375, -0.2188,  0.0688,  0.1279, -0.1777, -0.2598,  0.0933,  0.7148, -0.6758, -0.0625,  0.1182, -0.6016,  0.0070,  0.1436,  1.0312, -0.1396, -0.7070,  0.3672, -0.2559, -0.9062,  0.1963,
         0.0532,  0.2578, -0.6992,  0.3652, -0.4746,  0.6445,  0.3750, -0.7891, -0.5195,  0.2676, -0.9375,  0.5039, -0.1138, -0.3125, -0.2051, -1.7578, -0.2559,  0.0194, -0.1455,  1.1328,  0.0222, -0.1826,  0.5391, -0.3047,  0.2598, -0.1562,  0.3809, -0.6836,  0.8828, -1.2422, -0.1050,  0.7656],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3828,  0.0635,  0.0879, -0.3027, -0.0728, -0.2383, -0.1016, -0.8438, -0.1416, -0.3184, -0.2324, -0.1504, -0.3652,  0.0276],
        [ 0.0000,  0.4785, -0.0171,  0.1543, -0.0267,  0.4375,  0.0208,  0.1177,  0.0056, -0.1436,  0.0796,  0.2373,  0.0240, -0.1377, -0.2754],
        [ 0.0000, -0.2930, -0.2715, -0.0576,  0.1641,  0.2773,  0.1680, -0.0039,  0.3555,  0.3047,  0.1074, -0.0771,  0.1611,  0.1885,  0.7539],
        [ 0.0000, -0.4844,  0.2021,  0.0108,  0.2734, -0.3457,  0.1270,  0.0092,  0.2373,  0.1245, -0.0209, -0.0552,  0.1533,  0.6211, -0.0135],
        [ 0.0000,  0.6719, -0.4180,  0.2158,  0.4746,  0.0854, -0.4219, -0.0231, -0.0081, -0.0747, -0.4863,  0.3828,  0.0913, -0.2217,  0.2002],
        [ 0.0000,  0.1777,  0.2852,  0.0342,  0.7305,  0.0669, -0.0693,  0.1387,  0.2559,  0.2969, -0.0708,  0.1348,  0.0752,  0.3652,  0.7070],
        [ 0.0000,  0.1670,  0.4395, -0.0026,  0.1016,  0.6211,  0.1631,  0.0435,  0.3516,  0.2314,  0.4453,  0.2891,  0.2598,  0.2949,  0.7695],
        [ 0.0000,  0.1836,  0.0874,  0.1328,  0.1113,  0.3965, -0.1543,  0.1348,  0.2178,  0.0942,  0.0383,  0.3555,  0.3008,  0.3594,  0.1689],
        [ 0.0000, -0.1230,  0.2168,  0.8711,  0.3945,  0.3867,  0.3203,  0.3574,  0.0640,  0.1797,  0.1426,  0.4414,  0.2197,  0.1758,  0.7422],
        [ 0.0000,  0.0518, -0.0081,  0.5625, -0.2061,  0.1836,  0.4629,  0.1445,  0.0942,  0.0371,  0.4453,  0.1025,  0.0693,  0.1826,  0.4688],
        [ 0.0000, -0.1147, -0.3418,  0.0286,  0.5039,  0.3887,  0.2988, -0.0053,  0.0894,  0.3633, -0.2305, -0.2461,  0.3535,  0.0684, -0.3145],
        [ 0.0000,  0.0996,  0.1602, -0.1338,  0.4980, -0.0060, -0.1455,  0.1006,  0.6133,  0.2129, -0.1602,  0.2256,  0.8242,  0.8594,  0.2373],
        [ 0.0000, -0.1318,  0.0432, -0.1001,  0.0435,  0.2617, -0.3750,  0.0537,  0.0762, -0.0752,  0.0275,  0.2734,  0.3730,  0.3418,  0.2197],
        [ 0.0000,  0.6016,  0.2441,  0.0410,  0.6172, -0.0332,  0.2432,  0.1738,  0.4961,  0.1797, -0.0081,  0.2891,  0.3984,  0.5078,  0.6719]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5150],
        [0.3542],
        [0.2589],
        [0.1954],
        [0.1619],
        [0.1375],
        [0.1287],
        [0.1152],
        [0.0984],
        [0.0910],
        [0.0782],
        [0.0749],
        [0.0750],
        [0.0627]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.4590, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2871, 0.2178, 0.2275, 0.2695, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1206, 0.2334, 0.1924, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.2539, 0.0928, 0.1738, 0.2139, 0.1357, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1387, 0.1553, 0.1240, 0.2354, 0.1235, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1167, 0.1660, 0.0996, 0.1245, 0.1787, 0.1172, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1152, 0.1094, 0.1094, 0.1050, 0.1465, 0.0835, 0.1060, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0613, 0.0938, 0.1670, 0.1157, 0.1060, 0.0996, 0.1021, 0.0898, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0747, 0.0771, 0.1260, 0.0640, 0.0923, 0.1226, 0.0840, 0.0845, 0.0791, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.0674, 0.0549, 0.0786, 0.1235, 0.1006, 0.1055, 0.0757, 0.0850, 0.1060, 0.0635, 0.0649, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0679, 0.0771, 0.0552, 0.1050, 0.0605, 0.0513, 0.0684, 0.1045, 0.0771, 0.0537, 0.0781, 0.1387, 0.0000, 0.0000],
        [0.0649, 0.0601, 0.0693, 0.0630, 0.0669, 0.0908, 0.0483, 0.0669, 0.0698, 0.0613, 0.0728, 0.0850, 0.0938, 0.0874, 0.0000],
        [0.0466, 0.0840, 0.0630, 0.0503, 0.0898, 0.0474, 0.0598, 0.0588, 0.0850, 0.0544, 0.0488, 0.0688, 0.0771, 0.0737, 0.0928]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0055,  0.0126,  ..., -0.0052, -0.0314, -0.0040],
        [-0.0393,  0.0147, -0.0200,  ...,  0.0009, -0.0195, -0.0112],
        [-0.0154,  0.0036,  0.0355,  ..., -0.0114, -0.0315, -0.0010],
        ...,
        [ 0.0396,  0.0134,  0.0291,  ..., -0.0290,  0.0155, -0.0080],
        [ 0.0171, -0.0075,  0.0050,  ...,  0.0081,  0.0211, -0.0197],
        [ 0.0339,  0.0148,  0.0129,  ..., -0.0517,  0.0332,  0.0164]], device='cuda:0', requires_grad=True)
K: tensor([-1.0234,  1.7031, -0.2461, -0.8281, -0.1060, -0.6914, -0.6953,  0.0496, -0.5156, -0.3418, -0.5625, -0.4395, -0.3906,  1.7031, -0.0620,  0.2832,  0.1338,  0.5078, -0.2305, -0.8086,  0.1260,  0.8320,  0.5781,  0.4238,  0.2832,  0.2910, -0.5781,  0.1387, -1.0625, -0.3242,  0.6875,  1.3516,
        -0.1748,  0.3789,  0.6523, -0.4941, -0.4160,  0.1875,  0.5508, -1.1484, -0.3398, -0.2256, -0.2520, -0.0830, -0.0322, -1.0000,  0.0410,  0.1826,  0.4551,  0.0118, -0.8867,  0.4902, -0.6680,  0.5312,  0.2188, -0.1768, -0.0425, -0.0913, -0.4258,  1.1875,  0.9141, -0.4941, -1.2500, -0.1836],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0002,  0.0196,  ...,  0.0048, -0.0207,  0.0031],
        [-0.0530,  0.0037, -0.0053,  ...,  0.0109,  0.0176, -0.0549],
        [ 0.0130, -0.0044,  0.0238,  ..., -0.0191,  0.0007, -0.0118],
        ...,
        [ 0.0070,  0.0007,  0.0166,  ...,  0.0186,  0.0129,  0.0007],
        [ 0.0202, -0.0310, -0.0076,  ...,  0.0318,  0.0194, -0.0212],
        [ 0.0233,  0.0036,  0.0030,  ...,  0.0249,  0.0251, -0.0159]], device='cuda:0', requires_grad=True)
Q: tensor([-0.9961,  0.9102, -0.5273, -0.6211,  0.3555, -0.6289, -0.1187,  0.3984,  0.1357,  0.6172, -0.4238,  0.8906, -0.0371,  0.1377, -0.0415, -0.2676, -0.3359,  0.2324,  0.7188, -0.6523,  0.0074,  0.2334, -0.5430, -0.1245,  0.1709,  0.9453, -0.0488, -0.7109,  0.2617, -0.1475, -0.8125,  0.2676,
        -0.0417,  0.2031, -0.6289,  0.4219, -0.4004,  0.6992,  0.2891, -0.7812, -0.5117,  0.3535, -0.9844,  0.4668,  0.0535, -0.4102, -0.2168, -1.6953, -0.1650,  0.0186, -0.1128,  1.0859, -0.0559, -0.1660,  0.4160, -0.1641,  0.2256, -0.2090,  0.4766, -0.7891,  0.9180, -1.3125,  0.0874,  0.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4062,  0.0791,  0.1494, -0.3145, -0.1299, -0.2852, -0.1543, -0.8164, -0.1152, -0.3145, -0.1611, -0.1060, -0.3047,  0.0317],
        [ 0.0000,  0.5312,  0.0011,  0.1426,  0.0096,  0.4551, -0.0021,  0.0520,  0.0325, -0.1069,  0.1196,  0.3164, -0.0369, -0.0884, -0.2412],
        [ 0.0000, -0.2734, -0.2305, -0.0623,  0.2021,  0.2715,  0.1719,  0.0271,  0.3809,  0.3340,  0.1475, -0.0249,  0.1865,  0.1963,  0.7148],
        [ 0.0000, -0.4531,  0.2080,  0.0151,  0.3301, -0.3379,  0.1475,  0.0039,  0.2754,  0.2021, -0.0121, -0.0312,  0.1641,  0.5977,  0.0527],
        [ 0.0000,  0.6719, -0.3340,  0.2930,  0.5039,  0.0493, -0.3906, -0.0140,  0.1406,  0.0034, -0.3750,  0.4668,  0.1455, -0.1211,  0.1738],
        [ 0.0000,  0.1621,  0.2793,  0.0527,  0.6953,  0.0479, -0.1094,  0.1089,  0.2773,  0.2373, -0.1045,  0.2832,  0.1523,  0.3457,  0.5742],
        [ 0.0000,  0.2168,  0.5664,  0.0574,  0.2832,  0.6445,  0.2217,  0.0908,  0.3906,  0.2910,  0.5352,  0.3984,  0.2930,  0.3770,  0.8125],
        [ 0.0000,  0.1621,  0.1099,  0.1133,  0.0698,  0.4043, -0.1592,  0.0811,  0.2637,  0.0605,  0.1069,  0.3945,  0.3691,  0.2871,  0.2236],
        [ 0.0000, -0.1846,  0.2432,  0.8203,  0.4512,  0.3633,  0.3008,  0.3242,  0.2002,  0.2070,  0.2129,  0.4180,  0.2930,  0.3281,  0.7109],
        [ 0.0000,  0.0398,  0.0742,  0.5625, -0.1123,  0.2520,  0.5352,  0.1543,  0.1602,  0.0962,  0.5430,  0.1016,  0.1387,  0.2480,  0.5586],
        [ 0.0000, -0.1074, -0.3066,  0.0515,  0.5000,  0.2969,  0.3418,  0.0093,  0.1289,  0.3496, -0.1670, -0.1426,  0.3652,  0.0762, -0.2236],
        [ 0.0000,  0.0947,  0.2236, -0.1133,  0.5312, -0.0186, -0.1855,  0.0991,  0.5273,  0.2207, -0.1387,  0.2363,  0.8086,  0.7500,  0.2949],
        [ 0.0000, -0.0776,  0.0684, -0.0297,  0.0349,  0.3359, -0.2930,  0.0325,  0.0728, -0.0571,  0.1128,  0.2715,  0.3711,  0.2969,  0.3164],
        [ 0.0000,  0.5859,  0.2969,  0.0752,  0.6523,  0.0156,  0.2490,  0.2305,  0.5977,  0.1514,  0.0447,  0.3848,  0.5000,  0.4551,  0.6836]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5160],
        [0.3550],
        [0.2586],
        [0.1950],
        [0.1644],
        [0.1368],
        [0.1277],
        [0.1150],
        [0.1003],
        [0.0907],
        [0.0783],
        [0.0752],
        [0.0745],
        [0.0631]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Factors:0.0002 made:0.0002 notified:0.0002payment:0.0002Credits:0.0001 Ember:0.0002 cups:0.0002 caste:0.0002)
 caste
------
		( made:0.0002 notified:0.0002payment:0.0002Credits:0.0001 Ember:0.0002 cups:0.0002 caste:0.0002 Tup:0.0002)
 Tup Sunshine Apsharing NDPdry Moff NDP overloadoxide overload overload murderousoxide NDP
@ 1 train 10.8956 , allloss: 26.7369, dt: 7647.20ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:24.9005, tok/sec: 17139.87, flops:6.68, batch-reuse:1
@ 2 train 10.8966 , allloss: 26.7231, dt: 1123.23ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:24.4228, tok/sec: 116691.65, flops:45.46, batch-reuse:1
@ 3 train 10.8842 , allloss: 26.6906, dt: 1114.31ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:24.0808, tok/sec: 117626.23, flops:45.83, batch-reuse:1
@ 4 train 10.8792 , allloss: 26.6529, dt: 1127.51ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.0518, norm(x): 0.0543, norm(y): 0.9986, norm:23.1943, tok/sec: 116248.90, flops:45.29, batch-reuse:1
@ 5 train 10.8776 , allloss: 26.6099, dt: 1125.93ms, fracRes: 0.0063, norm(attn): 0.0361, norm(output): 0.0518, norm(x): 0.0544, norm(y): 0.9986, norm:22.9005, tok/sec: 116412.23, flops:45.35, batch-reuse:1
@ 6 train 10.8579 , allloss: 26.5438, dt: 1114.46ms, fracRes: 0.0063, norm(attn): 0.0364, norm(output): 0.0518, norm(x): 0.0544, norm(y): 0.9986, norm:23.1131, tok/sec: 117610.73, flops:45.82, batch-reuse:1
@ 7 train 10.8362 , allloss: 26.4513, dt: 1109.31ms, fracRes: 0.0063, norm(attn): 0.0364, norm(output): 0.0532, norm(x): 0.0545, norm(y): 0.9986, norm:22.5243, tok/sec: 118155.86, flops:46.03, batch-reuse:1
@ 8 train 10.8280 , allloss: 26.3608, dt: 1124.63ms, fracRes: 0.0063, norm(attn): 0.0364, norm(output): 0.0532, norm(x): 0.0546, norm(y): 0.9986, norm:22.1669, tok/sec: 116546.46, flops:45.41, batch-reuse:1
@ 9 train 10.8035 , allloss: 26.2400, dt: 1133.74ms, fracRes: 0.0063, norm(attn): 0.0364, norm(output): 0.0537, norm(x): 0.0547, norm(y): 0.9986, norm:21.6311, tok/sec: 115609.90, flops:45.04, batch-reuse:1
@ 10 train 10.7814 , allloss: 26.1085, dt: 1125.23ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0537, norm(x): 0.0548, norm(y): 0.9986, norm:21.4724, tok/sec: 116484.75, flops:45.38, batch-reuse:1
@ 11 train 10.7807 , allloss: 25.9967, dt: 1133.68ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.0537, norm(x): 0.0549, norm(y): 0.9986, norm:20.3039, tok/sec: 115616.02, flops:45.04, batch-reuse:1
@ 12 train 10.7535 , allloss: 25.8554, dt: 1140.52ms, fracRes: 0.0063, norm(attn): 0.0371, norm(output): 0.0537, norm(x): 0.0550, norm(y): 0.9986, norm:20.5717, tok/sec: 114922.96, flops:44.77, batch-reuse:1
@ 13 train 10.7407 , allloss: 25.7028, dt: 1137.05ms, fracRes: 0.0063, norm(attn): 0.0374, norm(output): 0.0537, norm(x): 0.0551, norm(y): 0.9986, norm:19.9597, tok/sec: 115273.33, flops:44.91, batch-reuse:1
@ 14 train 10.7146 , allloss: 25.5499, dt: 1141.82ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0537, norm(x): 0.0553, norm(y): 0.9986, norm:19.9185, tok/sec: 114792.61, flops:44.72, batch-reuse:1
@ 15 train 10.6987 , allloss: 25.4128, dt: 1138.05ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0544, norm(x): 0.0554, norm(y): 0.9986, norm:19.8098, tok/sec: 115172.15, flops:44.87, batch-reuse:1
@ 16 train 10.6764 , allloss: 25.2643, dt: 1142.97ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0544, norm(x): 0.0555, norm(y): 0.9986, norm:19.3623, tok/sec: 114676.57, flops:44.68, batch-reuse:1
@ 17 train 10.6563 , allloss: 25.1256, dt: 1114.39ms, fracRes: 0.0064, norm(attn): 0.0376, norm(output): 0.0544, norm(x): 0.0556, norm(y): 0.9986, norm:19.3097, tok/sec: 117617.52, flops:45.82, batch-reuse:1
@ 18 train 10.6404 , allloss: 24.9889, dt: 1111.21ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.0544, norm(x): 0.0557, norm(y): 0.9986, norm:19.0734, tok/sec: 117954.21, flops:45.95, batch-reuse:1
@ 19 train 10.6148 , allloss: 24.8472, dt: 1119.61ms, fracRes: 0.0064, norm(attn): 0.0383, norm(output): 0.0544, norm(x): 0.0558, norm(y): 0.9986, norm:19.4578, tok/sec: 117069.15, flops:45.61, batch-reuse:1
@ 20 train 10.5970 , allloss: 24.7188, dt: 1120.55ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.0544, norm(x): 0.0559, norm(y): 0.9986, norm:19.4477, tok/sec: 116971.41, flops:45.57, batch-reuse:1
@ 21 train 10.5666 , allloss: 24.5859, dt: 1122.37ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.0544, norm(x): 0.0560, norm(y): 0.9986, norm:19.4104, tok/sec: 116781.13, flops:45.50, batch-reuse:1
@ 22 train 10.5552 , allloss: 24.4586, dt: 1129.31ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.0544, norm(x): 0.0561, norm(y): 0.9986, norm:19.1539, tok/sec: 116064.05, flops:45.22, batch-reuse:1
@ 23 train 10.5312 , allloss: 24.3271, dt: 1124.12ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.0544, norm(x): 0.0562, norm(y): 0.9986, norm:18.6797, tok/sec: 116600.15, flops:45.43, batch-reuse:1
@ 24 train 10.5300 , allloss: 24.2215, dt: 1130.09ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.0544, norm(x): 0.0563, norm(y): 0.9986, norm:19.2829, tok/sec: 115983.39, flops:45.19, batch-reuse:1
@ 25 train 10.4819 , allloss: 24.0671, dt: 1134.29ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.0544, norm(x): 0.0564, norm(y): 0.9986, norm:19.9421, tok/sec: 115553.84, flops:45.02, batch-reuse:1
@ 26 train 10.4733 , allloss: 23.9433, dt: 1126.64ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.0544, norm(x): 0.0565, norm(y): 0.9986, norm:19.1319, tok/sec: 116339.11, flops:45.33, batch-reuse:1
@ 27 train 10.4500 , allloss: 23.7970, dt: 1123.88ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.0544, norm(x): 0.0566, norm(y): 0.9986, norm:19.1303, tok/sec: 116624.61, flops:45.44, batch-reuse:1
@ 28 train 10.4335 , allloss: 23.6614, dt: 1143.50ms, fracRes: 0.0066, norm(attn): 0.0393, norm(output): 0.0544, norm(x): 0.0567, norm(y): 0.9986, norm:19.1861, tok/sec: 114623.97, flops:44.66, batch-reuse:1
@ 29 train 10.4097 , allloss: 23.5189, dt: 1136.85ms, fracRes: 0.0066, norm(attn): 0.0393, norm(output): 0.0544, norm(x): 0.0568, norm(y): 0.9986, norm:19.2990, tok/sec: 115294.17, flops:44.92, batch-reuse:1
@ 30 train 10.3892 , allloss: 23.3823, dt: 1123.43ms, fracRes: 0.0067, norm(attn): 0.0398, norm(output): 0.0549, norm(x): 0.0570, norm(y): 0.9986, norm:19.5856, tok/sec: 116671.21, flops:45.46, batch-reuse:1
@ 31 train 10.3851 , allloss: 23.2512, dt: 1133.73ms, fracRes: 0.0067, norm(attn): 0.0403, norm(output): 0.0549, norm(x): 0.0571, norm(y): 0.9986, norm:19.8519, tok/sec: 115611.43, flops:45.04, batch-reuse:1
@ 32 train 10.3577 , allloss: 23.1001, dt: 1139.14ms, fracRes: 0.0067, norm(attn): 0.0403, norm(output): 0.0549, norm(x): 0.0572, norm(y): 0.9986, norm:20.4271, tok/sec: 115062.59, flops:44.83, batch-reuse:1
@ 33 train 10.3204 , allloss: 22.9483, dt: 1122.28ms, fracRes: 0.0068, norm(attn): 0.0405, norm(output): 0.0549, norm(x): 0.0574, norm(y): 0.9986, norm:21.1096, tok/sec: 116790.48, flops:45.50, batch-reuse:1
@ 34 train 10.3261 , allloss: 22.8361, dt: 1136.15ms, fracRes: 0.0068, norm(attn): 0.0415, norm(output): 0.0549, norm(x): 0.0575, norm(y): 0.9986, norm:21.3741, tok/sec: 115364.75, flops:44.95, batch-reuse:1
@ 35 train 10.3099 , allloss: 22.7086, dt: 1130.92ms, fracRes: 0.0069, norm(attn): 0.0415, norm(output): 0.0549, norm(x): 0.0576, norm(y): 0.9986, norm:21.8626, tok/sec: 115898.84, flops:45.15, batch-reuse:1
@ 36 train 10.2924 , allloss: 22.5713, dt: 1157.10ms, fracRes: 0.0069, norm(attn): 0.0417, norm(output): 0.0549, norm(x): 0.0578, norm(y): 0.9986, norm:22.3233, tok/sec: 113276.51, flops:44.13, batch-reuse:1
@ 37 train 10.2809 , allloss: 22.4541, dt: 1152.79ms, fracRes: 0.0070, norm(attn): 0.0425, norm(output): 0.0549, norm(x): 0.0579, norm(y): 0.9986, norm:22.3668, tok/sec: 113699.54, flops:44.30, batch-reuse:1
@ 38 train 10.2721 , allloss: 22.3372, dt: 1156.65ms, fracRes: 0.0070, norm(attn): 0.0427, norm(output): 0.0549, norm(x): 0.0580, norm(y): 0.9986, norm:22.8524, tok/sec: 113320.36, flops:44.15, batch-reuse:1
@ 39 train 10.2663 , allloss: 22.2307, dt: 1149.71ms, fracRes: 0.0071, norm(attn): 0.0430, norm(output): 0.0549, norm(x): 0.0581, norm(y): 0.9986, norm:22.8922, tok/sec: 114004.34, flops:44.42, batch-reuse:1
@ 40 train 10.2367 , allloss: 22.1024, dt: 1164.30ms, fracRes: 0.0071, norm(attn): 0.0432, norm(output): 0.0549, norm(x): 0.0582, norm(y): 0.9986, norm:23.2346, tok/sec: 112576.17, flops:43.86, batch-reuse:1
@ 41 train 10.2263 , allloss: 21.9969, dt: 1148.41ms, fracRes: 0.0072, norm(attn): 0.0432, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9986, norm:23.5660, tok/sec: 114133.83, flops:44.47, batch-reuse:1
@ 42 train 10.2288 , allloss: 21.9202, dt: 1164.72ms, fracRes: 0.0072, norm(attn): 0.0442, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9986, norm:23.9068, tok/sec: 112535.01, flops:43.84, batch-reuse:1
@ 43 train 10.2320 , allloss: 21.8385, dt: 1140.84ms, fracRes: 0.0073, norm(attn): 0.0442, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9986, norm:24.0911, tok/sec: 114890.30, flops:44.76, batch-reuse:1
@ 44 train 10.2286 , allloss: 21.7768, dt: 1152.95ms, fracRes: 0.0073, norm(attn): 0.0457, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9986, norm:24.2969, tok/sec: 113684.52, flops:44.29, batch-reuse:1
@ 45 train 10.2180 , allloss: 21.7049, dt: 1139.23ms, fracRes: 0.0074, norm(attn): 0.0457, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9986, norm:24.5973, tok/sec: 115052.74, flops:44.82, batch-reuse:1
@ 46 train 10.2111 , allloss: 21.6393, dt: 1143.22ms, fracRes: 0.0074, norm(attn): 0.0466, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9986, norm:25.0533, tok/sec: 114651.41, flops:44.67, batch-reuse:1
@ 47 train 10.2014 , allloss: 21.5808, dt: 1144.85ms, fracRes: 0.0075, norm(attn): 0.0469, norm(output): 0.0549, norm(x): 0.0584, norm(y): 0.9986, norm:25.5554, tok/sec: 114488.07, flops:44.60, batch-reuse:1
@ 48 train 10.2023 , allloss: 21.5316, dt: 1140.22ms, fracRes: 0.0075, norm(attn): 0.0471, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9986, norm:25.5796, tok/sec: 114953.72, flops:44.79, batch-reuse:1
@ 49 train 10.2068 , allloss: 21.4928, dt: 1140.52ms, fracRes: 0.0076, norm(attn): 0.0471, norm(output): 0.0549, norm(x): 0.0583, norm(y): 0.9986, norm:25.6173, tok/sec: 114922.94, flops:44.77, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3184, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2734, 0.1924, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1670, 0.1641, 0.2051, 0.1299, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1143, 0.1816, 0.1143, 0.2393, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.0903, 0.1582, 0.1455, 0.1514, 0.1514, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.0884, 0.1289, 0.1250, 0.1602, 0.1396, 0.0908, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.1260, 0.0923, 0.1006, 0.1514, 0.0947, 0.1299, 0.1514, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.0962, 0.0693, 0.1553, 0.1250, 0.0742, 0.1245, 0.0645, 0.1108, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0908, 0.0732, 0.1338, 0.1089, 0.1348, 0.0723, 0.0820, 0.0713, 0.0325, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0640, 0.0811, 0.0933, 0.0972, 0.0977, 0.1279, 0.1162, 0.0688, 0.0679, 0.0439, 0.0566, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0481, 0.0806, 0.0649, 0.0645, 0.1348, 0.1309, 0.1040, 0.0864, 0.0532, 0.0454, 0.0437, 0.0737, 0.0000, 0.0000],
        [0.0703, 0.0613, 0.0679, 0.1045, 0.0486, 0.1079, 0.0845, 0.0850, 0.0408, 0.1011, 0.0554, 0.0481, 0.0684, 0.0559, 0.0000],
        [0.0713, 0.0366, 0.0623, 0.0767, 0.1147, 0.0659, 0.0574, 0.0820, 0.0645, 0.1084, 0.0640, 0.0510, 0.0474, 0.0427, 0.0549]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0053,  0.0124,  ..., -0.0050, -0.0313, -0.0042],
        [-0.0391,  0.0145, -0.0198,  ...,  0.0009, -0.0197, -0.0113],
        [-0.0154,  0.0038,  0.0353,  ..., -0.0112, -0.0315, -0.0012],
        ...,
        [ 0.0396,  0.0136,  0.0289,  ..., -0.0288,  0.0156, -0.0082],
        [ 0.0171, -0.0073,  0.0049,  ...,  0.0081,  0.0212, -0.0197],
        [ 0.0337,  0.0149,  0.0128,  ..., -0.0515,  0.0333,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([-0.5156, -1.3438, -0.2539,  0.3418,  1.0312,  0.6602, -0.1787, -0.5781,  0.4883,  0.1167,  0.2090,  0.8906, -0.1060, -0.3301, -0.1475,  0.4453,  0.9180,  0.7344,  0.1670,  1.0938, -0.5586,  0.6211,  0.4980,  1.5781, -0.1475, -0.7578, -0.4297,  0.3594, -0.0659, -0.1299,  0.0342,  0.0928,
        -1.5234,  0.1475, -0.6602, -1.3125,  0.0571, -0.3613,  1.0312,  0.4473, -0.2207,  0.4355, -0.5273,  0.3203,  0.0767, -0.0574,  0.0525,  0.4102,  0.2656,  0.0781, -0.0214, -0.2490,  0.7031, -0.7344,  0.1035, -1.4062,  0.1187, -0.2930, -0.7891, -0.5703, -0.9023,  0.2480,  0.4238, -0.9961],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0004,  0.0194,  ...,  0.0050, -0.0206,  0.0030],
        [-0.0529,  0.0035, -0.0051,  ...,  0.0108,  0.0176, -0.0550],
        [ 0.0129, -0.0043,  0.0237,  ..., -0.0190,  0.0008, -0.0117],
        ...,
        [ 0.0070,  0.0009,  0.0164,  ...,  0.0188,  0.0130,  0.0005],
        [ 0.0202, -0.0308, -0.0078,  ...,  0.0320,  0.0195, -0.0214],
        [ 0.0235,  0.0034,  0.0032,  ...,  0.0250,  0.0250, -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8516, -0.3262,  0.0513, -0.7812, -0.2236,  1.0078,  0.5664, -0.0654,  0.1582, -0.2695, -1.5391,  0.0155,  0.9688,  0.0135, -0.9492,  0.1406,  0.3945, -0.2578, -0.8945,  0.4844,  0.0742, -0.2109, -0.3730,  0.3301, -0.4375,  0.1914, -0.9727, -0.8672, -0.7539, -0.2910,  0.6680, -0.4629,
         0.3730,  0.1406,  0.4355,  0.4629, -0.1855, -0.3203,  0.0544,  0.5078,  0.9062,  0.7852, -0.8555,  0.5078,  0.2676,  0.4883, -0.1143, -0.4219, -0.2383,  0.0461,  0.4688,  0.0410, -0.7891,  0.4414, -0.3750,  0.8789,  0.4766,  0.2021,  0.1270, -0.6211,  0.3945, -0.0471, -0.2314, -0.1079],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.0111,     -0.1260,     -0.2949,      0.4375,     -0.2617,     -0.1562,     -0.0669,      0.1641,     -0.1250,      0.0615,      0.4004,      0.1104,     -0.0024,     -0.1963],
        [     0.0000,     -0.0420,      0.0586,     -0.1660,     -0.1992,      0.3750,      0.3730,      0.2832,      0.0255,      0.0508,     -0.1533,     -0.1406,      0.0630,     -0.1797,     -0.0820],
        [     0.0000,      0.0055,     -0.3438,     -0.0315,      0.0889,     -0.1309,      0.0552,      0.2188,      0.1494,     -0.2178,      0.2910,      0.1895,     -0.2197,     -0.2490,      0.1719],
        [     0.0000,     -0.0193,      0.2051,     -0.2520,      0.6914,      0.0021,      0.1128,      0.2520,     -0.1484,     -0.5312,      0.3066,      0.4453,      0.1592,     -0.5898,     -0.1699],
        [     0.0000,     -0.3477,      0.1177,     -0.3457,      0.3906,      0.1514,      0.3125,     -0.3496,      0.2227,      0.0398,     -0.4434,      0.0305,     -0.0957,      0.1138,     -0.3457],
        [     0.0000,     -0.5234,      0.0391,     -0.0466,     -0.0074,     -0.0084,      0.0008,     -0.0972,      0.2656,     -0.2354,     -0.2793,     -0.2676,     -0.1079,      0.3984,     -0.0197],
        [     0.0000,     -0.1973,      0.1816,      0.1514,      0.3945,      0.2617,     -0.1709,      0.3906,      0.0791,     -0.0732,     -0.1064,     -0.0762,     -0.0388,     -0.1123,      0.0179],
        [     0.0000,      0.3672,      0.0564,      0.1406,      0.5508,      0.0845,      0.3984,      0.5508,     -0.2656,      0.3613,     -0.5508,     -0.5078,     -0.4941,     -0.1167,      0.2451],
        [     0.0000,     -0.1157,     -0.4414,      0.3672,      0.1455,     -0.3750,      0.1445,     -0.5156,      0.0269,     -0.3984,     -0.0854,      0.2041,     -0.0923,     -0.2715,      0.3926],
        [     0.0000,      0.0144,     -0.2002,      0.4023,      0.1953,      0.4062,     -0.2139,     -0.0898,     -0.2314,     -1.0156,      0.2148,      0.1582,      0.0187,     -0.1089,      0.5547],
        [     0.0000,     -0.2793,     -0.0430,      0.0957,      0.1377,      0.1436,      0.4141,      0.3164,     -0.2070,     -0.2236,     -0.6562,     -0.4043,      0.2109,     -0.0850,      0.2188],
        [     0.0000,     -0.3750,      0.1436,     -0.0737,     -0.0781,      0.6602,      0.6289,      0.3984,      0.2109,     -0.2695,     -0.4316,     -0.4707,      0.0518,      0.0183,      0.1680],
        [     0.0000,     -0.1416,     -0.0359,      0.3945,     -0.3711,      0.4258,      0.1797,      0.1885,     -0.5469,      0.3633,     -0.2412,     -0.3828,     -0.0322,     -0.2324,     -0.2168],
        [     0.0000,     -0.6680,     -0.1367,      0.0718,      0.4766,     -0.0781,     -0.2188,      0.1377,     -0.1011,      0.4180,     -0.1060,     -0.3359,     -0.4082,     -0.5156,     -0.2617]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5024],
        [0.3237],
        [0.2444],
        [0.1921],
        [0.1653],
        [0.1408],
        [0.1181],
        [0.1043],
        [0.0986],
        [0.0942],
        [0.0800],
        [0.0745],
        [0.0702],
        [0.0637]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3301, 0.3398, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.2598, 0.1885, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1514, 0.2236, 0.1377, 0.3125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1299, 0.1641, 0.1191, 0.2695, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1021, 0.1426, 0.1533, 0.1875, 0.1279, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0889, 0.1226, 0.1245, 0.1504, 0.1631, 0.0928, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.1348, 0.0923, 0.1050, 0.1328, 0.0947, 0.1060, 0.1719, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1069, 0.0608, 0.1641, 0.1143, 0.0874, 0.1191, 0.0601, 0.0938, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1055, 0.0801, 0.1406, 0.1138, 0.1260, 0.0703, 0.0850, 0.0591, 0.0388, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0635, 0.0728, 0.0918, 0.1191, 0.0938, 0.0981, 0.1133, 0.0674, 0.0708, 0.0615, 0.0598, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0415, 0.0928, 0.0737, 0.0559, 0.1240, 0.0845, 0.1377, 0.0913, 0.0559, 0.0483, 0.0435, 0.0825, 0.0000, 0.0000],
        [0.0728, 0.0840, 0.0574, 0.0815, 0.0549, 0.0947, 0.0845, 0.0933, 0.0461, 0.1201, 0.0635, 0.0430, 0.0459, 0.0583, 0.0000],
        [0.0728, 0.0496, 0.0540, 0.0608, 0.1299, 0.0640, 0.0791, 0.0588, 0.0703, 0.0757, 0.0869, 0.0505, 0.0532, 0.0315, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0053,  0.0124,  ..., -0.0050, -0.0313, -0.0042],
        [-0.0391,  0.0145, -0.0198,  ...,  0.0009, -0.0197, -0.0113],
        [-0.0154,  0.0038,  0.0353,  ..., -0.0112, -0.0315, -0.0012],
        ...,
        [ 0.0396,  0.0136,  0.0289,  ..., -0.0288,  0.0156, -0.0082],
        [ 0.0171, -0.0073,  0.0049,  ...,  0.0081,  0.0212, -0.0197],
        [ 0.0337,  0.0149,  0.0128,  ..., -0.0515,  0.0333,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([-0.9297, -1.4062, -0.0113,  0.3164,  0.5039, -0.1196, -0.4316, -0.4512,  0.4883,  0.0184,  0.1680,  0.8672, -0.4277,  0.1016,  0.0250,  1.0234,  0.6484,  0.2559,  0.3867,  0.8984, -0.2354,  0.0898,  0.3965,  1.4922, -0.1641, -0.7070, -1.0078,  0.0613,  0.1836, -0.1758,  0.3379,  0.6875,
        -1.2578,  0.0466, -0.1748, -1.3672,  0.0796,  0.0170,  1.0391,  0.5273, -0.3262,  0.3496, -0.3535,  0.9609, -0.0811,  0.0405, -0.1543,  0.1045,  0.4961, -0.0148, -0.9102,  0.1318,  0.4824, -0.6562,  0.3418, -0.8828, -0.1250, -0.6406, -0.9297, -0.4570, -0.2812, -0.1826, -0.0564, -0.7930],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0004,  0.0194,  ...,  0.0050, -0.0206,  0.0030],
        [-0.0529,  0.0035, -0.0051,  ...,  0.0108,  0.0176, -0.0550],
        [ 0.0129, -0.0043,  0.0237,  ..., -0.0190,  0.0008, -0.0117],
        ...,
        [ 0.0070,  0.0009,  0.0164,  ...,  0.0188,  0.0130,  0.0005],
        [ 0.0202, -0.0308, -0.0078,  ...,  0.0320,  0.0195, -0.0214],
        [ 0.0235,  0.0034,  0.0032,  ...,  0.0250,  0.0250, -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7773,  0.0747,  0.4355, -0.5977, -0.0162,  0.8711,  0.1963, -0.0087,  0.2617,  0.2451, -1.2734, -0.0615,  1.0859,  0.6562, -0.7031,  0.4258,  0.2988, -0.9688, -0.3926,  0.5898, -0.3887, -0.2139, -0.5195,  0.6641, -0.1396,  0.7891, -0.8047, -0.5625, -1.0156, -0.3301,  0.2012, -0.2715,
         0.4824,  1.0938,  0.0250,  0.3008, -0.2100, -0.3730,  0.2559,  0.4219,  0.7656,  1.2109, -0.2305,  0.2695,  0.1543,  1.0312,  0.8125, -0.4141, -0.1748, -0.3242,  0.3047, -0.1367, -0.6250, -0.0051, -0.4980,  0.7734,  0.3770, -0.3809,  0.4961, -0.3320, -0.0522, -0.6133, -0.1016, -0.7031],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0581, -0.1196, -0.2695,  0.3574, -0.2354, -0.0820, -0.0181,  0.0093, -0.0967,  0.0410,  0.4023,  0.2012, -0.0684, -0.1021],
        [ 0.0000, -0.0044,  0.0267, -0.0972, -0.1582,  0.3574,  0.3672,  0.2578,  0.0713,  0.0306, -0.0762, -0.0864,  0.0488, -0.2500, -0.1982],
        [ 0.0000, -0.0486, -0.3730,  0.0135,  0.1318, -0.1230,  0.0457,  0.1670,  0.1377, -0.2363,  0.2441,  0.1475, -0.0464, -0.0488,  0.1719],
        [ 0.0000, -0.1406,  0.2500, -0.2324,  0.5859,  0.1035,  0.0820,  0.1084, -0.0679, -0.5508,  0.1318,  0.4082,  0.1348, -0.5312, -0.3281],
        [ 0.0000, -0.2217,  0.0090, -0.3086,  0.5117, -0.0486,  0.1040, -0.5156,  0.0879,  0.0830, -0.5977,  0.1328, -0.1836,  0.0991, -0.3438],
        [ 0.0000, -0.3848, -0.0466,  0.0254,  0.2227, -0.1602, -0.0879, -0.0544,  0.3164, -0.1885, -0.0204, -0.0679, -0.3574,  0.4746,  0.1021],
        [ 0.0000, -0.2422,  0.0771,  0.0903,  0.2832,  0.3652, -0.2012,  0.2334, -0.0806,  0.0322,  0.0381, -0.0825,  0.0806, -0.2188, -0.5195],
        [ 0.0000,  0.4043,  0.0248,  0.1523,  0.3848,  0.0488,  0.1641,  0.6445, -0.2061,  0.6016, -0.6797, -0.5234, -0.5977, -0.1279, -0.1416],
        [ 0.0000,  0.0083, -0.5547,  0.4355,  0.0742, -0.1924,  0.1196, -0.5664, -0.1240, -0.1816, -0.2598,  0.0195, -0.4297, -0.6367,  0.1455],
        [ 0.0000,  0.2021, -0.0776,  0.4863,  0.2754,  0.3809, -0.2051, -0.0146, -0.3789, -0.7969,  0.0928, -0.2188,  0.0378, -0.2871,  0.2988],
        [ 0.0000, -0.3262, -0.1924,  0.0437,  0.3047,  0.0659,  0.1089,  0.2539, -0.2676, -0.2139, -0.3594, -0.3867,  0.1211, -0.3496,  0.1660],
        [ 0.0000, -0.5039,  0.3008,  0.0718, -0.2041,  0.5898,  0.2061,  0.6914,  0.2852, -0.2051, -0.3516, -0.4590,  0.1826, -0.0559,  0.0825],
        [ 0.0000,  0.1455, -0.2373,  0.1118, -0.2793,  0.2656,  0.1504,  0.2461, -0.4551,  0.5000, -0.1377, -0.5273, -0.4609, -0.2197, -0.2793],
        [ 0.0000, -0.3887, -0.3027, -0.1807,  0.5781, -0.1309,  0.0801, -0.2129, -0.0342,  0.0391,  0.1738, -0.3672, -0.3145, -0.8359, -0.1543]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5033],
        [0.3277],
        [0.2470],
        [0.1946],
        [0.1642],
        [0.1420],
        [0.1203],
        [0.1062],
        [0.0974],
        [0.0935],
        [0.0791],
        [0.0741],
        [0.0739],
        [0.0621]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3418, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.2490, 0.1855, 0.2891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1426, 0.2373, 0.1484, 0.2891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1514, 0.1416, 0.1245, 0.2852, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.1128, 0.1289, 0.1572, 0.2188, 0.1118, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.0962, 0.1182, 0.1167, 0.1387, 0.1836, 0.1006, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1406, 0.0972, 0.1104, 0.1221, 0.0957, 0.0947, 0.1729, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.1162, 0.0574, 0.1553, 0.1074, 0.1025, 0.1191, 0.0703, 0.0747, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.1172, 0.0840, 0.1367, 0.1123, 0.1040, 0.0737, 0.0884, 0.0625, 0.0581, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0645, 0.0654, 0.0786, 0.1475, 0.0938, 0.0786, 0.1006, 0.0688, 0.0688, 0.0811, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0425, 0.0938, 0.0796, 0.0684, 0.0981, 0.0610, 0.1504, 0.0991, 0.0520, 0.0579, 0.0493, 0.0801, 0.0000, 0.0000],
        [0.0713, 0.0889, 0.0559, 0.0576, 0.0649, 0.0830, 0.0889, 0.0884, 0.0549, 0.1123, 0.0618, 0.0432, 0.0476, 0.0811, 0.0000],
        [0.0688, 0.0625, 0.0549, 0.0615, 0.1167, 0.0703, 0.0835, 0.0459, 0.0762, 0.0586, 0.0791, 0.0527, 0.0674, 0.0442, 0.0576]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0053,  0.0124,  ..., -0.0050, -0.0313, -0.0042],
        [-0.0391,  0.0145, -0.0198,  ...,  0.0009, -0.0197, -0.0113],
        [-0.0154,  0.0038,  0.0353,  ..., -0.0112, -0.0315, -0.0012],
        ...,
        [ 0.0396,  0.0136,  0.0289,  ..., -0.0288,  0.0156, -0.0082],
        [ 0.0171, -0.0073,  0.0049,  ...,  0.0081,  0.0212, -0.0197],
        [ 0.0337,  0.0149,  0.0128,  ..., -0.0515,  0.0333,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([-1.3594, -0.9375,  0.3301, -0.0713,  0.1963, -0.5156, -0.7578, -0.3164,  0.4746, -0.1709,  0.0674,  0.6562, -0.0182,  0.5156,  0.0267,  1.0703,  0.5469,  0.1191,  0.3633,  0.4785,  0.2080,  0.0391,  0.3398,  1.0234,  0.0505, -0.6328, -1.0312,  0.0208,  0.5430, -0.2969,  0.3027,  0.8398,
        -0.7617,  0.0378, -0.0106, -1.2188,  0.0596,  0.4766,  1.0078,  0.5508, -0.6602, -0.0156, -0.2285,  1.3906, -0.2441, -0.1406,  0.0309, -0.1328,  0.6328,  0.1016, -0.8320,  0.1562,  0.2852, -0.5078,  0.5430, -0.6172,  0.0105, -0.8789, -1.0781, -0.2197,  0.1138,  0.0452,  0.0635, -0.3223],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0004,  0.0194,  ...,  0.0050, -0.0206,  0.0030],
        [-0.0529,  0.0035, -0.0051,  ...,  0.0108,  0.0176, -0.0550],
        [ 0.0129, -0.0043,  0.0237,  ..., -0.0190,  0.0008, -0.0117],
        ...,
        [ 0.0070,  0.0009,  0.0164,  ...,  0.0188,  0.0130,  0.0005],
        [ 0.0202, -0.0308, -0.0078,  ...,  0.0320,  0.0195, -0.0214],
        [ 0.0235,  0.0034,  0.0032,  ...,  0.0250,  0.0250, -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3535,  0.1514,  0.3281, -0.3379,  0.1680,  0.8281, -0.0566,  0.0227,  0.0062,  0.4453, -0.8047, -0.1943,  0.8867,  0.7656, -0.4238,  0.3125,  0.3496, -1.0938,  0.2314,  0.4316, -0.4824, -0.2793, -0.5859,  0.7578, -0.1895,  1.1719, -0.4531, -0.2969, -1.0000, -0.3223, -0.2500, -0.0332,
         0.6328,  1.2344, -0.4023,  0.1455, -0.1846, -0.0850,  0.0258,  0.0874,  0.1187,  1.2891,  0.1650,  0.3027,  0.0923,  1.0938,  1.0781, -0.6758, -0.2695, -0.3613, -0.0225, -0.0303, -0.1943, -0.3926, -0.3340,  0.5547,  0.3711, -0.6133,  0.7891, -0.3184, -0.4082, -1.0000, -0.2402, -0.8828],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1040,     -0.1055,     -0.2412,      0.2598,     -0.1914,     -0.0131,      0.0232,     -0.1943,     -0.0209,      0.0201,      0.2598,      0.1426,     -0.1660,     -0.0654],
        [     0.0000,      0.0378,     -0.0024,     -0.0312,     -0.1270,      0.3301,      0.3242,      0.2471,      0.0776,      0.0205,     -0.0605,     -0.0820,      0.0410,     -0.3027,     -0.2734],
        [     0.0000,     -0.1050,     -0.3984,      0.0439,      0.1582,     -0.0981,      0.0063,      0.0811,      0.0952,     -0.2129,      0.1260,      0.0879,      0.0825,      0.1357,      0.2197],
        [     0.0000,     -0.2402,      0.2676,     -0.2051,      0.4629,      0.1787,      0.0752,     -0.0649,      0.0938,     -0.4863,      0.0669,      0.2773,      0.1455,     -0.3145,     -0.4180],
        [     0.0000,     -0.0698,     -0.1357,     -0.2676,      0.5625,     -0.1924,     -0.1318,     -0.6211,     -0.0835,      0.0591,     -0.6406,      0.1875,     -0.1855,      0.1270,     -0.2734],
        [     0.0000,     -0.2393,     -0.1064,      0.0903,      0.4219,     -0.2500,     -0.1216,      0.0146,      0.2676,     -0.1758,      0.1641,      0.0540,     -0.3203,      0.6445,      0.2471],
        [     0.0000,     -0.2324,     -0.0267,     -0.0376,      0.1318,      0.4160,     -0.1855,      0.0299,     -0.2539,      0.1904,      0.0649,     -0.0488,      0.2109,     -0.1963,     -0.4766],
        [     0.0000,      0.3965,      0.0245,      0.1553,      0.2520,      0.0097,     -0.0004,      0.6016,     -0.2754,      0.6016,     -0.7539,     -0.4707,     -0.3613,      0.0356,     -0.2754],
        [     0.0000,      0.1099,     -0.5977,      0.3984,      0.0320,     -0.0165,      0.1328,     -0.3965,     -0.3340,     -0.1133,     -0.1943,     -0.0019,     -0.5000,     -0.7344,     -0.0085],
        [     0.0000,      0.3145,     -0.0165,      0.4688,      0.2734,      0.1953,     -0.1484,      0.0302,     -0.3145,     -0.3848,     -0.0991,     -0.4453,      0.0247,     -0.1260,     -0.1299],
        [     0.0000,     -0.2891,     -0.2754,     -0.0884,      0.5391,      0.0859,     -0.0898,      0.1582,     -0.2236,     -0.2236,     -0.0581,     -0.2559,     -0.0361,     -0.4043,      0.0349],
        [     0.0000,     -0.4727,      0.3164,      0.1533,      0.0001,      0.3613,     -0.1138,      0.7891,      0.3730,     -0.2715,     -0.1650,     -0.3262,      0.1592,      0.0894,      0.0073],
        [     0.0000,      0.2178,     -0.2412,     -0.2119,     -0.0903,      0.1543,      0.2188,      0.2158,     -0.2617,      0.4551,     -0.1426,     -0.5039,     -0.4023,      0.1260,     -0.4395],
        [     0.0000,     -0.0938,     -0.2236,     -0.1089,      0.5312,      0.0265,      0.1953,     -0.4004,      0.1030,     -0.1592,      0.1436,     -0.2637,     -0.0198,     -0.4434,     -0.1768]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5041],
        [0.3316],
        [0.2492],
        [0.1969],
        [0.1625],
        [0.1437],
        [0.1238],
        [0.1096],
        [0.0962],
        [0.0910],
        [0.0785],
        [0.0731],
        [0.0763],
        [0.0624]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3984, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.4629, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3008, 0.2266, 0.2061, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.1348, 0.2383, 0.2100, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.3047, 0.0830, 0.1748, 0.1758, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1748, 0.1533, 0.1348, 0.2129, 0.1064, 0.0879, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1484, 0.1475, 0.1377, 0.0952, 0.1641, 0.0942, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1660, 0.1104, 0.1318, 0.1025, 0.1128, 0.0640, 0.1113, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.1001, 0.1006, 0.2002, 0.0977, 0.1025, 0.0762, 0.0815, 0.0488, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1157, 0.0815, 0.1797, 0.0581, 0.0796, 0.0918, 0.0903, 0.0500, 0.0747, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.1104, 0.0679, 0.1025, 0.1177, 0.1069, 0.0625, 0.0811, 0.0474, 0.1025, 0.0457, 0.0562, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.1143, 0.0698, 0.0742, 0.0869, 0.0605, 0.0420, 0.0747, 0.0615, 0.0864, 0.0476, 0.0781, 0.1230, 0.0000, 0.0000],
        [0.0894, 0.0869, 0.0776, 0.0771, 0.0562, 0.0649, 0.0376, 0.0752, 0.0486, 0.0723, 0.0518, 0.0850, 0.1045, 0.0728, 0.0000],
        [0.0742, 0.1289, 0.0767, 0.0850, 0.0718, 0.0583, 0.0469, 0.0615, 0.0413, 0.0684, 0.0405, 0.0713, 0.0581, 0.0520, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0053,  0.0124,  ..., -0.0050, -0.0313, -0.0042],
        [-0.0391,  0.0145, -0.0198,  ...,  0.0009, -0.0197, -0.0113],
        [-0.0154,  0.0038,  0.0353,  ..., -0.0112, -0.0315, -0.0012],
        ...,
        [ 0.0396,  0.0136,  0.0289,  ..., -0.0288,  0.0156, -0.0082],
        [ 0.0171, -0.0073,  0.0049,  ...,  0.0081,  0.0212, -0.0197],
        [ 0.0337,  0.0149,  0.0128,  ..., -0.0515,  0.0333,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([-0.6211,  0.9492, -0.6250, -1.0234,  0.4004, -1.4141, -0.8047, -0.1299, -0.5469, -0.7188, -0.4688, -0.3867, -0.4434,  0.7773,  0.0447,  0.9492,  0.4414,  0.6172,  0.0015, -0.3125,  0.8594,  0.2256,  0.4453,  0.2832,  0.1826, -0.4668, -0.9219,  0.4336,  0.3691,  0.0840,  0.9688,  1.3750,
         0.2432,  0.3574, -0.0300, -0.3984, -0.2285,  0.3105,  0.2314, -0.3535, -0.5234, -0.1328, -0.1729,  0.2031, -0.1006, -1.4609, -0.1904,  0.5703, -0.6211,  0.0718, -0.7227,  0.5625, -0.1914,  0.2852,  0.0398, -0.3223, -0.1895, -0.8867, -0.5742,  1.2578,  0.4219, -0.1167,  0.0598, -0.2168],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0004,  0.0194,  ...,  0.0050, -0.0206,  0.0030],
        [-0.0529,  0.0035, -0.0051,  ...,  0.0108,  0.0176, -0.0550],
        [ 0.0129, -0.0043,  0.0237,  ..., -0.0190,  0.0008, -0.0117],
        ...,
        [ 0.0070,  0.0009,  0.0164,  ...,  0.0188,  0.0130,  0.0005],
        [ 0.0202, -0.0308, -0.0078,  ...,  0.0320,  0.0195, -0.0214],
        [ 0.0235,  0.0034,  0.0032,  ...,  0.0250,  0.0250, -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4609,  0.3145, -0.1807,  0.2266,  0.3535,  0.0153, -0.0840,  0.1875,  0.1533,  0.1445,  0.0903, -0.3418,  0.2695, -0.2373, -0.6523,  0.0903, -0.5469,  0.5352,  1.1484, -0.5938, -0.4531, -0.3691, -0.9922, -0.0156,  0.3770,  0.5352,  0.3711,  0.0603,  0.1836, -0.4043, -0.5430,  0.0486,
         1.1328, -0.0825, -1.3828,  0.7461, -0.5664,  0.8984, -0.2598, -0.1562, -0.7812, -0.0564, -0.5039,  0.1738, -0.4219,  0.0161,  0.3535, -1.8984, -0.7422,  0.3691, -0.2949, -0.0869,  0.1670,  0.1191,  0.7422,  0.3906,  0.6758, -0.4941, -0.0669, -0.4355,  0.3730, -0.4824, -0.5156,  0.5273],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4141,  0.0522,  0.0308, -0.3398, -0.0825, -0.3789, -0.1709, -1.0000, -0.1406, -0.3965, -0.4355, -0.3047, -0.5312, -0.4160],
        [ 0.0000,  0.4902, -0.1167,  0.1533, -0.1475,  0.1602, -0.2852,  0.0137, -0.5508, -0.3086, -0.3027, -0.3535, -0.2490, -0.6484, -0.7734],
        [ 0.0000, -0.2852, -0.3789, -0.1230, -0.0371,  0.0037, -0.1235, -0.3828, -0.0068,  0.0864, -0.3281, -0.2539, -0.0713, -0.1030,  0.3125],
        [ 0.0000, -0.3750,  0.1963,  0.0723,  0.1245, -0.3652, -0.2266, -0.1953, -0.3750,  0.0713, -0.4062, -0.4141, -0.2480, -0.0610, -0.6172],
        [ 0.0000,  0.7266, -0.5742,  0.1719,  0.1777, -0.2598, -0.8438, -0.3965, -0.7539, -0.3008, -0.8047, -0.1416, -0.3145, -0.6719, -0.3457],
        [ 0.0000,  0.2969,  0.1680,  0.0427,  0.4961, -0.1973, -0.3867, -0.1787, -0.2285,  0.2100, -0.3145, -0.1543, -0.0410, -0.0583,  0.4375],
        [ 0.0000,  0.2324,  0.2266,  0.1572, -0.2129,  0.3320, -0.2197, -0.1973, -0.2051,  0.2480, -0.0381,  0.0518,  0.1455, -0.1836,  0.3047],
        [ 0.0000,  0.2100, -0.2002, -0.0239, -0.2734, -0.1787, -0.7500, -0.1943, -0.7188, -0.2715, -0.7227, -0.1855, -0.0552, -0.4531, -0.4512],
        [ 0.0000,  0.1523,  0.1553,  0.8477,  0.1299,  0.1787, -0.1226, -0.0498, -0.5625,  0.2119, -0.3340,  0.2363, -0.1387, -0.5195,  0.1436],
        [ 0.0000,  0.1240, -0.2285,  0.5625, -0.5664, -0.2500, -0.1089, -0.1260, -0.7148, -0.3145, -0.3008, -0.2676, -0.4043, -0.6211, -0.3398],
        [ 0.0000,  0.1118, -0.3750,  0.0371,  0.1787,  0.0811, -0.4551, -0.1934, -0.7344,  0.0400, -0.7695, -0.5625, -0.2158, -0.6875, -0.7148],
        [ 0.0000,  0.3516, -0.1396, -0.0786,  0.0762, -0.2852, -0.6523, -0.0728, -0.2676,  0.0688, -0.5273, -0.0303,  0.4219,  0.0898, -0.3086],
        [ 0.0000, -0.0294, -0.1426, -0.1494, -0.4648, -0.3203, -0.8672, -0.1738, -0.6133, -0.2109, -0.5508, -0.0554,  0.1543, -0.2090, -0.3867],
        [ 0.0000,  0.5547,  0.0320,  0.1377, -0.0325, -0.2412, -0.4609, -0.1875, -0.5859, -0.0850, -0.6055, -0.0396, -0.2422, -0.3535, -0.1318]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5146],
        [0.3563],
        [0.2655],
        [0.2040],
        [0.1699],
        [0.1557],
        [0.1436],
        [0.1348],
        [0.1088],
        [0.1093],
        [0.0957],
        [0.0895],
        [0.0897],
        [0.0843]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.4785, 0.2451, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.2285, 0.2109, 0.2617, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1943, 0.1396, 0.2373, 0.2100, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.3047, 0.0874, 0.1836, 0.1699, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1797, 0.1572, 0.1406, 0.2002, 0.1045, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1123, 0.1504, 0.1562, 0.1416, 0.0996, 0.1533, 0.0938, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1689, 0.1133, 0.1309, 0.0962, 0.1118, 0.0635, 0.1079, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0986, 0.1064, 0.1973, 0.0991, 0.0991, 0.0723, 0.0791, 0.0535, 0.1069, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.1157, 0.0835, 0.1787, 0.0581, 0.0796, 0.0933, 0.0879, 0.0498, 0.0718, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1143, 0.0688, 0.1021, 0.1123, 0.0986, 0.0618, 0.0811, 0.0476, 0.0977, 0.0496, 0.0659, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.1157, 0.0728, 0.0771, 0.0840, 0.0593, 0.0405, 0.0747, 0.0576, 0.0879, 0.0500, 0.0840, 0.1152, 0.0000, 0.0000],
        [0.0889, 0.0908, 0.0776, 0.0806, 0.0532, 0.0649, 0.0386, 0.0742, 0.0457, 0.0752, 0.0549, 0.0869, 0.1006, 0.0669, 0.0000],
        [0.0747, 0.1230, 0.0786, 0.0825, 0.0698, 0.0569, 0.0449, 0.0630, 0.0427, 0.0654, 0.0425, 0.0791, 0.0605, 0.0520, 0.0649]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0092, -0.0053,  0.0124,  ..., -0.0050, -0.0313, -0.0042],
        [-0.0391,  0.0145, -0.0198,  ...,  0.0009, -0.0197, -0.0113],
        [-0.0154,  0.0038,  0.0353,  ..., -0.0112, -0.0315, -0.0012],
        ...,
        [ 0.0396,  0.0136,  0.0289,  ..., -0.0288,  0.0156, -0.0082],
        [ 0.0171, -0.0073,  0.0049,  ...,  0.0081,  0.0212, -0.0197],
        [ 0.0337,  0.0149,  0.0128,  ..., -0.0515,  0.0333,  0.0165]], device='cuda:0', requires_grad=True)
K: tensor([    -0.5156,      0.9297,     -0.7461,     -1.0234,      0.3301,     -1.3438,     -0.7227,     -0.2109,     -0.5938,     -0.6797,     -0.4102,     -0.3691,     -0.4727,      0.7500,      0.0376,      0.9922,      0.3516,      0.6719,      0.0114,     -0.2695,      0.8086,      0.2676,
             0.4785,      0.4375,      0.2061,     -0.5312,     -0.9297,      0.3535,      0.2891,      0.0874,      1.1094,      1.3594,      0.2412,      0.3848,      0.0334,     -0.4062,     -0.2373,      0.3730,      0.0664,     -0.4629,     -0.4883,     -0.0471,     -0.2100,      0.0679,
            -0.0981,     -1.4688,     -0.2559,      0.6094,     -0.6250,      0.0591,     -0.6602,      0.7031,     -0.1924,      0.2363,      0.0010,     -0.3340,     -0.3320,     -0.7656,     -0.5742,      1.3047,      0.5117,     -0.1895,      0.0311,     -0.3164], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0118,  0.0004,  0.0194,  ...,  0.0050, -0.0206,  0.0030],
        [-0.0529,  0.0035, -0.0051,  ...,  0.0108,  0.0176, -0.0550],
        [ 0.0129, -0.0043,  0.0237,  ..., -0.0190,  0.0008, -0.0117],
        ...,
        [ 0.0070,  0.0009,  0.0164,  ...,  0.0188,  0.0130,  0.0005],
        [ 0.0202, -0.0308, -0.0078,  ...,  0.0320,  0.0195, -0.0214],
        [ 0.0235,  0.0034,  0.0032,  ...,  0.0250,  0.0250, -0.0160]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5039,  0.4102, -0.2041,  0.1787,  0.3496,  0.0077, -0.1689,  0.1768,  0.0396,  0.1709, -0.0830, -0.3770,  0.3145, -0.1846, -0.7109,  0.0188, -0.6367,  0.7461,  1.1328, -0.5547, -0.4863, -0.3125, -1.0312, -0.1143,  0.4512,  0.4473,  0.4297,  0.0415,  0.1089, -0.3242, -0.4316,  0.0635,
         1.1094, -0.2217, -1.3594,  0.7734, -0.6406,  0.9531, -0.3652, -0.1504, -0.7422, -0.0991, -0.5625,  0.1426, -0.3086, -0.0249,  0.3418, -1.8281, -0.7109,  0.3262, -0.3086, -0.2080,  0.1855,  0.1240,  0.7344,  0.4961,  0.7031, -0.5781, -0.0532, -0.4473,  0.3711, -0.5234, -0.4883,  0.6016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.4395,  0.0623,  0.0781, -0.3750, -0.1318, -0.4668, -0.2363, -1.0000, -0.1235, -0.4062, -0.4316, -0.2891, -0.5273, -0.4453],
        [ 0.0000,  0.5430, -0.1221,  0.1367, -0.1475,  0.1206, -0.3496, -0.0674, -0.6016, -0.3203, -0.2988, -0.3770, -0.3398, -0.6602, -0.8203],
        [ 0.0000, -0.2676, -0.3496, -0.1357, -0.0359, -0.0308, -0.1504, -0.3965, -0.0344,  0.1182, -0.3359, -0.2461, -0.0674, -0.1250,  0.2539],
        [ 0.0000, -0.3340,  0.1982,  0.0762,  0.1191, -0.3945, -0.2734, -0.2490, -0.4336,  0.1216, -0.4453, -0.4434, -0.3125, -0.1084, -0.6172],
        [ 0.0000,  0.7305, -0.5195,  0.2227,  0.1465, -0.3105, -0.8594, -0.4121, -0.7188, -0.2383, -0.7109, -0.1455, -0.3203, -0.6406, -0.3926],
        [ 0.0000,  0.2969,  0.1602,  0.0483,  0.4043, -0.2451, -0.4668, -0.2188, -0.2578,  0.1768, -0.3379, -0.0586, -0.0171, -0.0918,  0.2812],
        [ 0.0000,  0.2891,  0.3281,  0.2295, -0.1206,  0.3145, -0.1826, -0.1768, -0.1914,  0.3203,  0.0170,  0.1279,  0.1245, -0.1455,  0.3027],
        [ 0.0000,  0.1963, -0.2070, -0.0623, -0.3711, -0.2197, -0.7852, -0.2520, -0.7109, -0.3027, -0.6602, -0.1328, -0.0420, -0.4980, -0.4727],
        [ 0.0000,  0.1172,  0.1924,  0.8086,  0.1221,  0.1230, -0.1973, -0.1050, -0.4961,  0.1963, -0.2949,  0.2168, -0.1187, -0.4355,  0.0566],
        [ 0.0000,  0.1138, -0.2139,  0.5469, -0.5742, -0.2637, -0.1040, -0.1650, -0.7305, -0.3633, -0.2754, -0.3145, -0.4355, -0.6523, -0.3672],
        [ 0.0000,  0.1235, -0.3848,  0.0107,  0.1089, -0.0208, -0.4883, -0.2168, -0.7500, -0.0325, -0.7109, -0.4258, -0.2412, -0.6953, -0.6523],
        [ 0.0000,  0.3594, -0.1021, -0.0444,  0.0415, -0.3086, -0.6875, -0.0752, -0.3379,  0.0854, -0.4805,  0.0386,  0.3574, -0.0055, -0.2754],
        [ 0.0000,  0.0203, -0.1357, -0.0991, -0.5156, -0.3125, -0.8359, -0.1836, -0.6641, -0.1670, -0.4844, -0.0250,  0.1235, -0.2832, -0.3867],
        [ 0.0000,  0.5000,  0.0527,  0.1006, -0.0693, -0.2734, -0.5078, -0.1729, -0.5586, -0.1309, -0.5664,  0.0569, -0.2100, -0.3613, -0.1416]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5158],
        [0.3581],
        [0.2671],
        [0.2051],
        [0.1740],
        [0.1574],
        [0.1452],
        [0.1372],
        [0.1131],
        [0.1119],
        [0.0982],
        [0.0919],
        [0.0907],
        [0.0863]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Factors:0.0002 made:0.0003 Frame:0.0002windows:0.0002 offend:0.0002 in:0.0002 hunt:0.0002 Cathy:0.0002)
 Cathy
------
		( made:0.0003 Frame:0.0002windows:0.0002 offend:0.0002 in:0.0002 hunt:0.0002 Cathy:0.0002,:0.0003)
, calactactactactact the,act the,riaact,
@ 50 train 10.1936 , allloss: 21.4350, dt: 1533.36ms, fracRes: 0.0076, norm(attn): 0.0479, norm(output): 0.0549, norm(x): 0.0582, norm(y): 0.9986, norm:25.7128, tok/sec: 85480.39, flops:33.30, batch-reuse:1
@ 51 train 10.2051 , allloss: 21.4025, dt: 1168.48ms, fracRes: 0.0076, norm(attn): 0.0493, norm(output): 0.0547, norm(x): 0.0581, norm(y): 0.9986, norm:25.5421, tok/sec: 112172.68, flops:43.70, batch-reuse:1
@ 52 train 10.1729 , allloss: 21.3244, dt: 1178.00ms, fracRes: 0.0077, norm(attn): 0.0500, norm(output): 0.0547, norm(x): 0.0580, norm(y): 0.9986, norm:25.5228, tok/sec: 111266.80, flops:43.35, batch-reuse:1
@ 53 train 10.1887 , allloss: 21.3065, dt: 1149.22ms, fracRes: 0.0077, norm(attn): 0.0505, norm(output): 0.0544, norm(x): 0.0579, norm(y): 0.9985, norm:25.2854, tok/sec: 114053.08, flops:44.44, batch-reuse:1
@ 54 train 10.1706 , allloss: 21.2704, dt: 1158.05ms, fracRes: 0.0078, norm(attn): 0.0508, norm(output): 0.0544, norm(x): 0.0578, norm(y): 0.9985, norm:25.3267, tok/sec: 113183.62, flops:44.10, batch-reuse:1
@ 55 train 10.2013 , allloss: 21.2861, dt: 1184.90ms, fracRes: 0.0078, norm(attn): 0.0510, norm(output): 0.0544, norm(x): 0.0576, norm(y): 0.9985, norm:24.8170, tok/sec: 110618.92, flops:43.10, batch-reuse:1
@ 56 train 10.1506 , allloss: 21.2224, dt: 1177.37ms, fracRes: 0.0078, norm(attn): 0.0518, norm(output): 0.0544, norm(x): 0.0575, norm(y): 0.9985, norm:25.1749, tok/sec: 111325.66, flops:43.37, batch-reuse:1
@ 57 train 10.1317 , allloss: 21.2068, dt: 1152.14ms, fracRes: 0.0079, norm(attn): 0.0532, norm(output): 0.0544, norm(x): 0.0574, norm(y): 0.9985, norm:25.5579, tok/sec: 113764.39, flops:44.32, batch-reuse:1
@ 58 train 10.1559 , allloss: 21.2297, dt: 1138.18ms, fracRes: 0.0079, norm(attn): 0.0537, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9985, norm:25.3890, tok/sec: 115158.88, flops:44.87, batch-reuse:1
@ 59 train 10.1085 , allloss: 21.1636, dt: 1158.86ms, fracRes: 0.0079, norm(attn): 0.0544, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9985, norm:25.9128, tok/sec: 113104.19, flops:44.07, batch-reuse:1
@ 60 train 10.1195 , allloss: 21.1544, dt: 1153.87ms, fracRes: 0.0079, norm(attn): 0.0547, norm(output): 0.0537, norm(x): 0.0572, norm(y): 0.9984, norm:26.2973, tok/sec: 113593.73, flops:44.26, batch-reuse:1
@ 61 train 10.1250 , allloss: 21.1243, dt: 1155.75ms, fracRes: 0.0080, norm(attn): 0.0549, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9984, norm:26.5202, tok/sec: 113408.54, flops:44.18, batch-reuse:1
@ 62 train 10.1113 , allloss: 21.0730, dt: 1147.86ms, fracRes: 0.0080, norm(attn): 0.0554, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9984, norm:28.8133, tok/sec: 114188.49, flops:44.49, batch-reuse:1
@ 63 train 10.1209 , allloss: 21.0177, dt: 1177.19ms, fracRes: 0.0080, norm(attn): 0.0557, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9984, norm:27.2213, tok/sec: 111343.02, flops:43.38, batch-reuse:1
@ 64 train 10.1249 , allloss: 20.9817, dt: 1151.18ms, fracRes: 0.0080, norm(attn): 0.0576, norm(output): 0.0537, norm(x): 0.0574, norm(y): 0.9984, norm:27.6988, tok/sec: 113859.22, flops:44.36, batch-reuse:1
@ 65 train 10.1321 , allloss: 20.9661, dt: 1118.01ms, fracRes: 0.0080, norm(attn): 0.0583, norm(output): 0.0537, norm(x): 0.0574, norm(y): 0.9984, norm:27.9562, tok/sec: 117237.27, flops:45.68, batch-reuse:1
@ 66 train 10.1234 , allloss: 20.9711, dt: 1154.58ms, fracRes: 0.0080, norm(attn): 0.0583, norm(output): 0.0537, norm(x): 0.0573, norm(y): 0.9984, norm:28.4245, tok/sec: 113523.94, flops:44.23, batch-reuse:1
@ 67 train 10.0835 , allloss: 20.9456, dt: 1148.90ms, fracRes: 0.0080, norm(attn): 0.0588, norm(output): 0.0537, norm(x): 0.0572, norm(y): 0.9984, norm:28.7627, tok/sec: 114084.70, flops:44.45, batch-reuse:1
@ 68 train 10.1133 , allloss: 21.0097, dt: 1155.96ms, fracRes: 0.0080, norm(attn): 0.0588, norm(output): 0.0537, norm(x): 0.0571, norm(y): 0.9984, norm:29.0271, tok/sec: 113387.79, flops:44.18, batch-reuse:1
@ 69 train 10.0865 , allloss: 21.0160, dt: 1141.07ms, fracRes: 0.0080, norm(attn): 0.0598, norm(output): 0.0537, norm(x): 0.0570, norm(y): 0.9984, norm:29.4624, tok/sec: 114867.97, flops:44.75, batch-reuse:1
@ 70 train 10.0907 , allloss: 21.0279, dt: 1144.99ms, fracRes: 0.0080, norm(attn): 0.0615, norm(output): 0.0518, norm(x): 0.0570, norm(y): 0.9983, norm:29.7088, tok/sec: 114474.03, flops:44.60, batch-reuse:1
@ 71 train 10.0878 , allloss: 21.0148, dt: 1136.13ms, fracRes: 0.0079, norm(attn): 0.0615, norm(output): 0.0518, norm(x): 0.0569, norm(y): 0.9983, norm:29.4838, tok/sec: 115366.97, flops:44.95, batch-reuse:1
@ 72 train 10.0761 , allloss: 21.0096, dt: 1163.25ms, fracRes: 0.0079, norm(attn): 0.0623, norm(output): 0.0527, norm(x): 0.0569, norm(y): 0.9983, norm:29.6843, tok/sec: 112677.35, flops:43.90, batch-reuse:1
@ 73 train 10.0739 , allloss: 21.0241, dt: 1166.61ms, fracRes: 0.0079, norm(attn): 0.0623, norm(output): 0.0532, norm(x): 0.0568, norm(y): 0.9983, norm:30.6279, tok/sec: 112352.59, flops:43.77, batch-reuse:1
@ 74 train 10.0646 , allloss: 21.0601, dt: 1152.72ms, fracRes: 0.0079, norm(attn): 0.0625, norm(output): 0.0525, norm(x): 0.0567, norm(y): 0.9983, norm:30.4878, tok/sec: 113706.74, flops:44.30, batch-reuse:1
@ 75 train 10.1766 , allloss: 21.2322, dt: 1137.32ms, fracRes: 0.0079, norm(attn): 0.0630, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9983, norm:31.6504, tok/sec: 115246.56, flops:44.90, batch-reuse:1
@ 76 train 10.0553 , allloss: 21.1422, dt: 1166.80ms, fracRes: 0.0079, norm(attn): 0.0630, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9983, norm:31.4656, tok/sec: 112334.38, flops:43.77, batch-reuse:1
@ 77 train 10.1380 , allloss: 21.2840, dt: 1161.52ms, fracRes: 0.0079, norm(attn): 0.0635, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9983, norm:35.4372, tok/sec: 112844.84, flops:43.96, batch-reuse:1
@ 78 train 10.0629 , allloss: 21.2005, dt: 1158.68ms, fracRes: 0.0079, norm(attn): 0.0640, norm(output): 0.0520, norm(x): 0.0566, norm(y): 0.9982, norm:32.9618, tok/sec: 113122.09, flops:44.07, batch-reuse:1
@ 79 train 10.0188 , allloss: 21.1251, dt: 1177.65ms, fracRes: 0.0079, norm(attn): 0.0654, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9982, norm:34.1003, tok/sec: 111299.24, flops:43.36, batch-reuse:1
@ 80 train 10.0322 , allloss: 21.1366, dt: 1163.34ms, fracRes: 0.0079, norm(attn): 0.0659, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9982, norm:33.1356, tok/sec: 112668.59, flops:43.90, batch-reuse:1
@ 81 train 10.0191 , allloss: 21.1629, dt: 1129.40ms, fracRes: 0.0079, norm(attn): 0.0659, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9982, norm:32.5837, tok/sec: 116054.54, flops:45.21, batch-reuse:1
@ 82 train 9.9836 , allloss: 21.1846, dt: 1144.68ms, fracRes: 0.0079, norm(attn): 0.0664, norm(output): 0.0518, norm(x): 0.0566, norm(y): 0.9982, norm:33.6077, tok/sec: 114505.22, flops:44.61, batch-reuse:1
@ 83 train 9.9899 , allloss: 21.2769, dt: 1161.59ms, fracRes: 0.0079, norm(attn): 0.0664, norm(output): 0.0518, norm(x): 0.0565, norm(y): 0.9982, norm:33.1034, tok/sec: 112837.99, flops:43.96, batch-reuse:1
@ 84 train 9.9759 , allloss: 21.3455, dt: 1132.54ms, fracRes: 0.0079, norm(attn): 0.0669, norm(output): 0.0518, norm(x): 0.0564, norm(y): 0.9982, norm:32.6156, tok/sec: 115733.22, flops:45.09, batch-reuse:1
@ 85 train 9.9559 , allloss: 21.3993, dt: 1133.81ms, fracRes: 0.0079, norm(attn): 0.0669, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9982, norm:33.2906, tok/sec: 115603.65, flops:45.04, batch-reuse:1
@ 86 train 9.9289 , allloss: 21.4384, dt: 1141.05ms, fracRes: 0.0079, norm(attn): 0.0669, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9982, norm:32.7652, tok/sec: 114870.13, flops:44.75, batch-reuse:1
@ 87 train 9.9301 , allloss: 21.4766, dt: 1158.63ms, fracRes: 0.0079, norm(attn): 0.0674, norm(output): 0.0518, norm(x): 0.0562, norm(y): 0.9981, norm:32.2359, tok/sec: 113126.65, flops:44.07, batch-reuse:1
@ 88 train 9.9330 , allloss: 21.5321, dt: 1161.31ms, fracRes: 0.0080, norm(attn): 0.0684, norm(output): 0.0518, norm(x): 0.0562, norm(y): 0.9981, norm:32.5844, tok/sec: 112865.97, flops:43.97, batch-reuse:1
@ 89 train 9.9068 , allloss: 21.5222, dt: 1164.57ms, fracRes: 0.0080, norm(attn): 0.0693, norm(output): 0.0518, norm(x): 0.0562, norm(y): 0.9981, norm:32.8184, tok/sec: 112549.60, flops:43.85, batch-reuse:1
@ 90 train 9.9025 , allloss: 21.5301, dt: 1185.52ms, fracRes: 0.0080, norm(attn): 0.0698, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9981, norm:32.3760, tok/sec: 110560.62, flops:43.07, batch-reuse:1
@ 91 train 9.9209 , allloss: 21.5368, dt: 1174.95ms, fracRes: 0.0080, norm(attn): 0.0693, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9981, norm:32.6335, tok/sec: 111555.65, flops:43.46, batch-reuse:1
@ 92 train 9.8726 , allloss: 21.4620, dt: 1183.12ms, fracRes: 0.0081, norm(attn): 0.0698, norm(output): 0.0515, norm(x): 0.0563, norm(y): 0.9981, norm:32.3753, tok/sec: 110785.51, flops:43.16, batch-reuse:1
@ 93 train 9.8839 , allloss: 21.4542, dt: 1156.54ms, fracRes: 0.0081, norm(attn): 0.0703, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9981, norm:31.1223, tok/sec: 113330.71, flops:44.15, batch-reuse:1
@ 94 train 9.9218 , allloss: 21.4935, dt: 1165.11ms, fracRes: 0.0081, norm(attn): 0.0708, norm(output): 0.0513, norm(x): 0.0563, norm(y): 0.9981, norm:32.3348, tok/sec: 112497.45, flops:43.83, batch-reuse:1
@ 95 train 9.8807 , allloss: 21.4712, dt: 1166.23ms, fracRes: 0.0081, norm(attn): 0.0708, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9981, norm:32.0061, tok/sec: 112389.25, flops:43.79, batch-reuse:1
@ 96 train 9.8498 , allloss: 21.4174, dt: 1136.34ms, fracRes: 0.0081, norm(attn): 0.0708, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9981, norm:31.7421, tok/sec: 115345.89, flops:44.94, batch-reuse:1
@ 97 train 9.8582 , allloss: 21.3740, dt: 1161.39ms, fracRes: 0.0081, norm(attn): 0.0713, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9981, norm:31.0451, tok/sec: 112857.58, flops:43.97, batch-reuse:1
@ 98 train 9.8209 , allloss: 21.2929, dt: 1157.38ms, fracRes: 0.0082, norm(attn): 0.0713, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9980, norm:31.1869, tok/sec: 113248.88, flops:44.12, batch-reuse:1
@ 99 train 9.8444 , allloss: 21.3088, dt: 1155.81ms, fracRes: 0.0082, norm(attn): 0.0732, norm(output): 0.0518, norm(x): 0.0561, norm(y): 0.9980, norm:30.1446, tok/sec: 113402.24, flops:44.18, batch-reuse:1
@ 100 train 9.8175 , allloss: 21.2631, dt: 1147.55ms, fracRes: 0.0082, norm(attn): 0.0732, norm(output): 0.0510, norm(x): 0.0561, norm(y): 0.9980, norm:30.5071, tok/sec: 114218.53, flops:44.50, batch-reuse:1
@ 101 train 9.7939 , allloss: 21.1945, dt: 1129.10ms, fracRes: 0.0082, norm(attn): 0.0732, norm(output): 0.0518, norm(x): 0.0561, norm(y): 0.9980, norm:30.1993, tok/sec: 116084.93, flops:45.23, batch-reuse:1
@ 102 train 9.8101 , allloss: 21.1425, dt: 1169.11ms, fracRes: 0.0082, norm(attn): 0.0752, norm(output): 0.0510, norm(x): 0.0561, norm(y): 0.9980, norm:29.8639, tok/sec: 112112.99, flops:43.68, batch-reuse:1
@ 103 train 9.8018 , allloss: 21.0670, dt: 1149.16ms, fracRes: 0.0082, norm(attn): 0.0752, norm(output): 0.0510, norm(x): 0.0561, norm(y): 0.9980, norm:29.7624, tok/sec: 114058.78, flops:44.44, batch-reuse:1
@ 104 train 9.7805 , allloss: 20.9990, dt: 1159.54ms, fracRes: 0.0082, norm(attn): 0.0752, norm(output): 0.0510, norm(x): 0.0560, norm(y): 0.9980, norm:29.7375, tok/sec: 113037.82, flops:44.04, batch-reuse:1
@ 105 train 9.7630 , allloss: 20.9404, dt: 1152.49ms, fracRes: 0.0082, norm(attn): 0.0771, norm(output): 0.0510, norm(x): 0.0560, norm(y): 0.9979, norm:29.3171, tok/sec: 113729.27, flops:44.31, batch-reuse:1
@ 106 train 9.7720 , allloss: 20.8773, dt: 1138.59ms, fracRes: 0.0083, norm(attn): 0.0776, norm(output): 0.0515, norm(x): 0.0561, norm(y): 0.9979, norm:29.8227, tok/sec: 115118.08, flops:44.85, batch-reuse:1
@ 107 train 9.7433 , allloss: 20.7164, dt: 1140.88ms, fracRes: 0.0083, norm(attn): 0.0781, norm(output): 0.0515, norm(x): 0.0561, norm(y): 0.9979, norm:29.2089, tok/sec: 114886.94, flops:44.76, batch-reuse:1
@ 108 train 9.7366 , allloss: 20.5655, dt: 1159.33ms, fracRes: 0.0083, norm(attn): 0.0786, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9979, norm:29.6707, tok/sec: 113058.51, flops:44.05, batch-reuse:1
@ 109 train 9.6929 , allloss: 20.3889, dt: 1169.60ms, fracRes: 0.0084, norm(attn): 0.0791, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9979, norm:30.2289, tok/sec: 112065.48, flops:43.66, batch-reuse:1
@ 110 train 9.7282 , allloss: 20.3187, dt: 1160.88ms, fracRes: 0.0084, norm(attn): 0.0801, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9979, norm:29.4808, tok/sec: 112907.37, flops:43.99, batch-reuse:1
@ 111 train 9.6901 , allloss: 20.1605, dt: 1141.73ms, fracRes: 0.0084, norm(attn): 0.0811, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9979, norm:29.3409, tok/sec: 114801.19, flops:44.73, batch-reuse:1
@ 112 train 9.6763 , allloss: 20.0350, dt: 1126.66ms, fracRes: 0.0084, norm(attn): 0.0811, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9979, norm:29.3836, tok/sec: 116336.33, flops:45.32, batch-reuse:1
@ 113 train 9.6440 , allloss: 19.9048, dt: 1133.54ms, fracRes: 0.0085, norm(attn): 0.0830, norm(output): 0.0518, norm(x): 0.0563, norm(y): 0.9979, norm:29.6984, tok/sec: 115630.44, flops:45.05, batch-reuse:1
@ 114 train 9.6462 , allloss: 19.8458, dt: 1130.37ms, fracRes: 0.0085, norm(attn): 0.0835, norm(output): 0.0518, norm(x): 0.0564, norm(y): 0.9978, norm:29.6582, tok/sec: 115954.52, flops:45.18, batch-reuse:1
@ 115 train 9.6311 , allloss: 19.7893, dt: 1128.32ms, fracRes: 0.0085, norm(attn): 0.0845, norm(output): 0.0518, norm(x): 0.0564, norm(y): 0.9978, norm:29.6791, tok/sec: 116165.92, flops:45.26, batch-reuse:1
@ 116 train 9.6089 , allloss: 19.7262, dt: 1134.16ms, fracRes: 0.0086, norm(attn): 0.0850, norm(output): 0.0510, norm(x): 0.0564, norm(y): 0.9978, norm:29.2975, tok/sec: 115567.68, flops:45.03, batch-reuse:1
@ 117 train 9.5927 , allloss: 19.6654, dt: 1136.04ms, fracRes: 0.0086, norm(attn): 0.0854, norm(output): 0.0510, norm(x): 0.0564, norm(y): 0.9978, norm:29.4346, tok/sec: 115376.42, flops:44.95, batch-reuse:1
@ 118 train 9.5799 , allloss: 19.6305, dt: 1132.12ms, fracRes: 0.0086, norm(attn): 0.0859, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9978, norm:29.6296, tok/sec: 115776.14, flops:45.11, batch-reuse:1
@ 119 train 9.5838 , allloss: 19.6498, dt: 1133.15ms, fracRes: 0.0086, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9978, norm:29.4622, tok/sec: 115670.68, flops:45.07, batch-reuse:1
@ 120 train 9.6225 , allloss: 19.6727, dt: 1142.60ms, fracRes: 0.0087, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9977, norm:29.0356, tok/sec: 114714.16, flops:44.69, batch-reuse:1
@ 121 train 9.6323 , allloss: 19.6837, dt: 1128.32ms, fracRes: 0.0087, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9977, norm:29.1408, tok/sec: 116165.58, flops:45.26, batch-reuse:1
@ 122 train 9.6312 , allloss: 19.6756, dt: 1144.55ms, fracRes: 0.0087, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9977, norm:30.0002, tok/sec: 114518.60, flops:44.62, batch-reuse:1
@ 123 train 9.5831 , allloss: 19.5805, dt: 1165.69ms, fracRes: 0.0088, norm(attn): 0.0869, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9977, norm:30.2156, tok/sec: 112441.98, flops:43.81, batch-reuse:1
@ 124 train 9.6005 , allloss: 19.5747, dt: 1170.70ms, fracRes: 0.0088, norm(attn): 0.0869, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9977, norm:30.0198, tok/sec: 111960.45, flops:43.62, batch-reuse:1
@ 125 train 9.6043 , allloss: 19.6031, dt: 1166.36ms, fracRes: 0.0088, norm(attn): 0.0879, norm(output): 0.0510, norm(x): 0.0563, norm(y): 0.9977, norm:30.1845, tok/sec: 112377.02, flops:43.78, batch-reuse:1
@ 126 train 9.5813 , allloss: 19.6258, dt: 1171.77ms, fracRes: 0.0089, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9977, norm:30.1334, tok/sec: 111858.03, flops:43.58, batch-reuse:1
@ 127 train 9.5691 , allloss: 19.6439, dt: 1159.40ms, fracRes: 0.0089, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0561, norm(y): 0.9976, norm:30.9203, tok/sec: 113051.67, flops:44.04, batch-reuse:1
@ 128 train 9.5630 , allloss: 19.6208, dt: 1139.36ms, fracRes: 0.0090, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9976, norm:30.9412, tok/sec: 115039.59, flops:44.82, batch-reuse:1
@ 129 train 9.6072 , allloss: 19.6664, dt: 1126.84ms, fracRes: 0.0090, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9976, norm:31.9105, tok/sec: 116318.02, flops:45.32, batch-reuse:1
@ 130 train 9.5831 , allloss: 19.6335, dt: 1125.28ms, fracRes: 0.0090, norm(attn): 0.0864, norm(output): 0.0510, norm(x): 0.0562, norm(y): 0.9976, norm:31.7015, tok/sec: 116479.07, flops:45.38, batch-reuse:1
@ 131 train 9.5846 , allloss: 19.6820, dt: 1151.46ms, fracRes: 0.0091, norm(attn): 0.0869, norm(output): 0.0505, norm(x): 0.0562, norm(y): 0.9976, norm:31.4520, tok/sec: 113831.31, flops:44.35, batch-reuse:1
@ 132 train 9.5733 , allloss: 19.7422, dt: 1160.07ms, fracRes: 0.0091, norm(attn): 0.0874, norm(output): 0.0505, norm(x): 0.0560, norm(y): 0.9975, norm:36.3130, tok/sec: 112986.27, flops:44.02, batch-reuse:1
@ 133 train 9.5681 , allloss: 19.6338, dt: 1148.06ms, fracRes: 0.0092, norm(attn): 0.0874, norm(output): 0.0508, norm(x): 0.0562, norm(y): 0.9975, norm:36.8150, tok/sec: 114168.50, flops:44.48, batch-reuse:1
@ 134 train 9.5498 , allloss: 19.7554, dt: 1137.00ms, fracRes: 0.0092, norm(attn): 0.0869, norm(output): 0.0505, norm(x): 0.0559, norm(y): 0.9975, norm:31.7560, tok/sec: 115278.77, flops:44.91, batch-reuse:1
@ 135 train 9.5398 , allloss: 19.7856, dt: 1169.56ms, fracRes: 0.0092, norm(attn): 0.0879, norm(output): 0.0505, norm(x): 0.0559, norm(y): 0.9975, norm:30.6607, tok/sec: 112069.50, flops:43.66, batch-reuse:1
@ 136 train 9.5344 , allloss: 19.7311, dt: 1158.18ms, fracRes: 0.0093, norm(attn): 0.0874, norm(output): 0.0505, norm(x): 0.0560, norm(y): 0.9975, norm:35.2739, tok/sec: 113170.87, flops:44.09, batch-reuse:1
@ 137 train 9.4999 , allloss: 19.8264, dt: 1150.16ms, fracRes: 0.0093, norm(attn): 0.0884, norm(output): 0.0505, norm(x): 0.0558, norm(y): 0.9974, norm:48.3011, tok/sec: 113960.17, flops:44.40, batch-reuse:1
@ 138 train 9.4808 , allloss: 19.6075, dt: 1146.76ms, fracRes: 0.0094, norm(attn): 0.0884, norm(output): 0.0508, norm(x): 0.0562, norm(y): 0.9974, norm:46.7433, tok/sec: 114298.08, flops:44.53, batch-reuse:1
@ 139 train 9.4034 , allloss: 19.6388, dt: 1144.37ms, fracRes: 0.0094, norm(attn): 0.0884, norm(output): 0.0505, norm(x): 0.0559, norm(y): 0.9974, norm:31.4816, tok/sec: 114536.57, flops:44.62, batch-reuse:1
@ 140 train 9.4641 , allloss: 19.7736, dt: 1147.67ms, fracRes: 0.0094, norm(attn): 0.0884, norm(output): 0.0505, norm(x): 0.0558, norm(y): 0.9974, norm:36.0856, tok/sec: 114206.92, flops:44.50, batch-reuse:1
@ 141 train 9.4583 , allloss: 19.6178, dt: 1149.80ms, fracRes: 0.0096, norm(attn): 0.0884, norm(output): 0.0505, norm(x): 0.0561, norm(y): 0.9974, norm:56.1429, tok/sec: 113995.00, flops:44.41, batch-reuse:1
@ 142 train 9.4678 , allloss: 19.7419, dt: 1151.99ms, fracRes: 0.0096, norm(attn): 0.0913, norm(output): 0.0505, norm(x): 0.0558, norm(y): 0.9973, norm:35.8892, tok/sec: 113779.08, flops:44.33, batch-reuse:1
@ 143 train 9.4563 , allloss: 19.7171, dt: 1179.10ms, fracRes: 0.0096, norm(attn): 0.0913, norm(output): 0.0505, norm(x): 0.0557, norm(y): 0.9973, norm:31.4742, tok/sec: 111162.68, flops:43.31, batch-reuse:1
@ 144 train 9.4273 , allloss: 19.6400, dt: 1173.07ms, fracRes: 0.0096, norm(attn): 0.0913, norm(output): 0.0505, norm(x): 0.0557, norm(y): 0.9973, norm:30.0411, tok/sec: 111734.63, flops:43.53, batch-reuse:1
@ 145 train 9.4437 , allloss: 19.6490, dt: 1159.12ms, fracRes: 0.0096, norm(attn): 0.0933, norm(output): 0.0505, norm(x): 0.0556, norm(y): 0.9973, norm:31.4392, tok/sec: 113079.07, flops:44.06, batch-reuse:1
@ 146 train 9.4654 , allloss: 19.7043, dt: 1154.17ms, fracRes: 0.0096, norm(attn): 0.0938, norm(output): 0.0503, norm(x): 0.0554, norm(y): 0.9973, norm:30.2555, tok/sec: 113564.28, flops:44.24, batch-reuse:1
@ 147 train 9.4132 , allloss: 19.6365, dt: 1155.28ms, fracRes: 0.0097, norm(attn): 0.0947, norm(output): 0.0496, norm(x): 0.0553, norm(y): 0.9972, norm:30.6559, tok/sec: 113455.02, flops:44.20, batch-reuse:1
@ 148 train 9.4091 , allloss: 19.6134, dt: 1165.04ms, fracRes: 0.0097, norm(attn): 0.0957, norm(output): 0.0496, norm(x): 0.0551, norm(y): 0.9972, norm:34.6524, tok/sec: 112504.06, flops:43.83, batch-reuse:1
@ 149 train 9.3611 , allloss: 19.5866, dt: 1158.62ms, fracRes: 0.0097, norm(attn): 0.0967, norm(output): 0.0498, norm(x): 0.0550, norm(y): 0.9972, norm:37.2617, tok/sec: 113128.14, flops:44.07, batch-reuse:1
@ 150 train 9.4385 , allloss: 19.7664, dt: 1194.14ms, fracRes: 0.0097, norm(attn): 0.1011, norm(output): 0.0481, norm(x): 0.0547, norm(y): 0.9972, norm:67.3019, tok/sec: 109762.90, flops:42.76, batch-reuse:1
@ 151 train 9.3605 , allloss: 19.5067, dt: 1186.63ms, fracRes: 0.0098, norm(attn): 0.1016, norm(output): 0.0496, norm(x): 0.0549, norm(y): 0.9972, norm:44.8537, tok/sec: 110457.74, flops:43.03, batch-reuse:1
@ 152 train 9.3405 , allloss: 19.5350, dt: 1167.76ms, fracRes: 0.0098, norm(attn): 0.1035, norm(output): 0.0481, norm(x): 0.0546, norm(y): 0.9971, norm:32.4272, tok/sec: 112242.64, flops:43.73, batch-reuse:1
@ 153 train 9.3298 , allloss: 19.5656, dt: 1151.57ms, fracRes: 0.0098, norm(attn): 0.1074, norm(output): 0.0479, norm(x): 0.0544, norm(y): 0.9971, norm:33.9214, tok/sec: 113820.49, flops:44.34, batch-reuse:1
@ 154 train 9.3462 , allloss: 19.5341, dt: 1178.66ms, fracRes: 0.0099, norm(attn): 0.1094, norm(output): 0.0479, norm(x): 0.0544, norm(y): 0.9971, norm:43.3963, tok/sec: 111204.12, flops:43.33, batch-reuse:1
@ 155 train 9.3618 , allloss: 19.6664, dt: 1176.52ms, fracRes: 0.0099, norm(attn): 0.1113, norm(output): 0.0479, norm(x): 0.0540, norm(y): 0.9971, norm:58.9862, tok/sec: 111406.89, flops:43.40, batch-reuse:1
@ 156 train 9.3028 , allloss: 19.5023, dt: 1128.74ms, fracRes: 0.0100, norm(attn): 0.1152, norm(output): 0.0479, norm(x): 0.0542, norm(y): 0.9971, norm:34.9284, tok/sec: 116122.30, flops:45.24, batch-reuse:1
@ 157 train 9.3258 , allloss: 19.5515, dt: 1134.41ms, fracRes: 0.0100, norm(attn): 0.1172, norm(output): 0.0474, norm(x): 0.0541, norm(y): 0.9971, norm:31.0585, tok/sec: 115542.30, flops:45.02, batch-reuse:1
@ 158 train 9.2974 , allloss: 19.5508, dt: 1144.75ms, fracRes: 0.0101, norm(attn): 0.1187, norm(output): 0.0471, norm(x): 0.0538, norm(y): 0.9970, norm:35.7465, tok/sec: 114498.49, flops:44.61, batch-reuse:1
@ 159 train 9.3074 , allloss: 19.4599, dt: 1182.12ms, fracRes: 0.0101, norm(attn): 0.1206, norm(output): 0.0474, norm(x): 0.0540, norm(y): 0.9970, norm:44.1785, tok/sec: 110879.04, flops:43.20, batch-reuse:1
@ 160 train 9.2836 , allloss: 19.4544, dt: 1179.08ms, fracRes: 0.0102, norm(attn): 0.1245, norm(output): 0.0471, norm(x): 0.0537, norm(y): 0.9970, norm:43.5469, tok/sec: 111164.61, flops:43.31, batch-reuse:1
@ 161 train 9.2632 , allloss: 19.4139, dt: 1144.44ms, fracRes: 0.0103, norm(attn): 0.1250, norm(output): 0.0471, norm(x): 0.0537, norm(y): 0.9970, norm:31.0792, tok/sec: 114529.67, flops:44.62, batch-reuse:1
@ 162 train 9.2751 , allloss: 19.4054, dt: 1140.21ms, fracRes: 0.0103, norm(attn): 0.1260, norm(output): 0.0469, norm(x): 0.0535, norm(y): 0.9970, norm:29.9851, tok/sec: 114954.39, flops:44.79, batch-reuse:1
@ 163 train 9.2463 , allloss: 19.3145, dt: 1148.72ms, fracRes: 0.0105, norm(attn): 0.1299, norm(output): 0.0469, norm(x): 0.0534, norm(y): 0.9969, norm:38.8894, tok/sec: 114102.79, flops:44.45, batch-reuse:1
@ 164 train 9.1980 , allloss: 19.2731, dt: 1151.88ms, fracRes: 0.0106, norm(attn): 0.1318, norm(output): 0.0469, norm(x): 0.0535, norm(y): 0.9969, norm:45.1136, tok/sec: 113789.32, flops:44.33, batch-reuse:1
@ 165 train 9.2186 , allloss: 19.2008, dt: 1146.71ms, fracRes: 0.0107, norm(attn): 0.1328, norm(output): 0.0469, norm(x): 0.0534, norm(y): 0.9969, norm:33.5289, tok/sec: 114302.55, flops:44.53, batch-reuse:1
@ 166 train 9.1468 , allloss: 19.1462, dt: 1133.63ms, fracRes: 0.0107, norm(attn): 0.1328, norm(output): 0.0466, norm(x): 0.0533, norm(y): 0.9969, norm:29.4455, tok/sec: 115621.15, flops:45.05, batch-reuse:1
@ 167 train 9.1594 , allloss: 19.1810, dt: 1128.19ms, fracRes: 0.0108, norm(attn): 0.1338, norm(output): 0.0466, norm(x): 0.0532, norm(y): 0.9968, norm:38.7511, tok/sec: 116179.16, flops:45.26, batch-reuse:1
@ 168 train 9.1404 , allloss: 19.0220, dt: 1152.08ms, fracRes: 0.0109, norm(attn): 0.1396, norm(output): 0.0466, norm(x): 0.0532, norm(y): 0.9968, norm:37.1942, tok/sec: 113769.64, flops:44.32, batch-reuse:1
@ 169 train 9.1425 , allloss: 19.0363, dt: 1154.23ms, fracRes: 0.0109, norm(attn): 0.1387, norm(output): 0.0466, norm(x): 0.0532, norm(y): 0.9968, norm:33.5889, tok/sec: 113557.87, flops:44.24, batch-reuse:1
@ 170 train 9.1204 , allloss: 19.0145, dt: 1150.78ms, fracRes: 0.0109, norm(attn): 0.1396, norm(output): 0.0466, norm(x): 0.0529, norm(y): 0.9968, norm:28.8532, tok/sec: 113898.52, flops:44.37, batch-reuse:1
@ 171 train 9.1088 , allloss: 18.9789, dt: 1155.85ms, fracRes: 0.0109, norm(attn): 0.1396, norm(output): 0.0464, norm(x): 0.0527, norm(y): 0.9967, norm:29.7360, tok/sec: 113398.99, flops:44.18, batch-reuse:1
@ 172 train 9.0911 , allloss: 18.8849, dt: 1171.64ms, fracRes: 0.0109, norm(attn): 0.1396, norm(output): 0.0464, norm(x): 0.0526, norm(y): 0.9967, norm:32.4759, tok/sec: 111870.14, flops:43.58, batch-reuse:1
@ 173 train 9.0637 , allloss: 18.7389, dt: 1151.20ms, fracRes: 0.0109, norm(attn): 0.1416, norm(output): 0.0464, norm(x): 0.0525, norm(y): 0.9967, norm:39.1945, tok/sec: 113856.44, flops:44.36, batch-reuse:1
@ 174 train 9.1176 , allloss: 18.8839, dt: 1167.24ms, fracRes: 0.0107, norm(attn): 0.1406, norm(output): 0.0457, norm(x): 0.0522, norm(y): 0.9967, norm:41.2966, tok/sec: 112292.55, flops:43.75, batch-reuse:1
@ 175 train 9.1003 , allloss: 18.7874, dt: 1176.27ms, fracRes: 0.0107, norm(attn): 0.1416, norm(output): 0.0457, norm(x): 0.0520, norm(y): 0.9966, norm:38.9246, tok/sec: 111430.33, flops:43.41, batch-reuse:1
@ 176 train 9.0693 , allloss: 18.6840, dt: 1194.72ms, fracRes: 0.0106, norm(attn): 0.1426, norm(output): 0.0457, norm(x): 0.0519, norm(y): 0.9966, norm:43.0262, tok/sec: 109709.03, flops:42.74, batch-reuse:1
@ 177 train 9.0655 , allloss: 18.8355, dt: 1191.26ms, fracRes: 0.0105, norm(attn): 0.1416, norm(output): 0.0454, norm(x): 0.0517, norm(y): 0.9966, norm:51.7344, tok/sec: 110028.38, flops:42.87, batch-reuse:1
@ 178 train 9.0735 , allloss: 18.6812, dt: 1184.41ms, fracRes: 0.0105, norm(attn): 0.1426, norm(output): 0.0457, norm(x): 0.0518, norm(y): 0.9966, norm:35.8862, tok/sec: 110664.44, flops:43.11, batch-reuse:1
@ 179 train 9.0097 , allloss: 18.6313, dt: 1193.25ms, fracRes: 0.0104, norm(attn): 0.1426, norm(output): 0.0457, norm(x): 0.0516, norm(y): 0.9966, norm:31.2953, tok/sec: 109844.96, flops:42.80, batch-reuse:1
@ 180 train 9.0498 , allloss: 18.8711, dt: 1192.55ms, fracRes: 0.0103, norm(attn): 0.1426, norm(output): 0.0454, norm(x): 0.0514, norm(y): 0.9965, norm:47.0942, tok/sec: 109909.42, flops:42.82, batch-reuse:1
@ 181 train 9.0306 , allloss: 18.7665, dt: 1179.47ms, fracRes: 0.0102, norm(attn): 0.1465, norm(output): 0.0454, norm(x): 0.0513, norm(y): 0.9965, norm:36.0863, tok/sec: 111128.12, flops:43.30, batch-reuse:1
@ 182 train 9.0180 , allloss: 18.7916, dt: 1160.02ms, fracRes: 0.0102, norm(attn): 0.1465, norm(output): 0.0454, norm(x): 0.0513, norm(y): 0.9965, norm:29.1005, tok/sec: 112990.84, flops:44.02, batch-reuse:1
@ 183 train 8.9671 , allloss: 18.8392, dt: 1158.15ms, fracRes: 0.0101, norm(attn): 0.1455, norm(output): 0.0454, norm(x): 0.0512, norm(y): 0.9965, norm:33.8870, tok/sec: 113173.32, flops:44.09, batch-reuse:1
@ 184 train 8.9054 , allloss: 18.6700, dt: 1172.67ms, fracRes: 0.0101, norm(attn): 0.1465, norm(output): 0.0454, norm(x): 0.0512, norm(y): 0.9964, norm:40.4134, tok/sec: 111772.70, flops:43.55, batch-reuse:1
@ 185 train 8.9269 , allloss: 18.7787, dt: 1161.51ms, fracRes: 0.0100, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0512, norm(y): 0.9964, norm:33.6307, tok/sec: 112846.67, flops:43.97, batch-reuse:1
@ 186 train 8.9903 , allloss: 18.8311, dt: 1185.86ms, fracRes: 0.0100, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0513, norm(y): 0.9964, norm:32.1305, tok/sec: 110529.25, flops:43.06, batch-reuse:1
@ 187 train 8.9862 , allloss: 18.8093, dt: 1186.24ms, fracRes: 0.0100, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0514, norm(y): 0.9964, norm:35.7685, tok/sec: 110493.73, flops:43.05, batch-reuse:1
@ 188 train 8.8953 , allloss: 18.7720, dt: 1171.77ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0454, norm(x): 0.0512, norm(y): 0.9964, norm:33.4761, tok/sec: 111858.46, flops:43.58, batch-reuse:1
@ 189 train 8.9474 , allloss: 18.7888, dt: 1172.88ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0514, norm(y): 0.9963, norm:32.2539, tok/sec: 111752.39, flops:43.54, batch-reuse:1
@ 190 train 8.9104 , allloss: 18.7364, dt: 1179.12ms, fracRes: 0.0100, norm(attn): 0.1475, norm(output): 0.0457, norm(x): 0.0514, norm(y): 0.9963, norm:34.1021, tok/sec: 111160.66, flops:43.31, batch-reuse:1
@ 191 train 8.9081 , allloss: 18.8830, dt: 1162.35ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0513, norm(y): 0.9963, norm:40.5350, tok/sec: 112764.57, flops:43.93, batch-reuse:1
@ 192 train 8.9253 , allloss: 18.7667, dt: 1183.87ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0514, norm(y): 0.9963, norm:36.3495, tok/sec: 110714.76, flops:43.13, batch-reuse:1
@ 193 train 8.8719 , allloss: 18.7926, dt: 1182.05ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0513, norm(y): 0.9963, norm:34.3643, tok/sec: 110885.35, flops:43.20, batch-reuse:1
@ 194 train 8.8963 , allloss: 18.8242, dt: 1166.20ms, fracRes: 0.0099, norm(attn): 0.1465, norm(output): 0.0457, norm(x): 0.0513, norm(y): 0.9962, norm:35.5620, tok/sec: 112392.44, flops:43.79, batch-reuse:1
@ 195 train 8.9077 , allloss: 18.6528, dt: 1133.89ms, fracRes: 0.0099, norm(attn): 0.1484, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9962, norm:36.0164, tok/sec: 115595.26, flops:45.04, batch-reuse:1
@ 196 train 8.8432 , allloss: 18.6002, dt: 1146.64ms, fracRes: 0.0099, norm(attn): 0.1484, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9962, norm:35.6790, tok/sec: 114309.63, flops:44.54, batch-reuse:1
@ 197 train 8.8663 , allloss: 18.5802, dt: 1141.16ms, fracRes: 0.0100, norm(attn): 0.1514, norm(output): 0.0457, norm(x): 0.0515, norm(y): 0.9962, norm:49.0206, tok/sec: 114858.64, flops:44.75, batch-reuse:1
@ 198 train 8.8212 , allloss: 18.5422, dt: 1160.71ms, fracRes: 0.0100, norm(attn): 0.1475, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9962, norm:37.1229, tok/sec: 112923.81, flops:44.00, batch-reuse:1
@ 199 train 8.8615 , allloss: 18.3845, dt: 1185.48ms, fracRes: 0.0101, norm(attn): 0.1504, norm(output): 0.0464, norm(x): 0.0519, norm(y): 0.9962, norm:41.3398, tok/sec: 110564.13, flops:43.08, batch-reuse:1
@ 200 train 8.8590 , allloss: 18.5355, dt: 1189.05ms, fracRes: 0.0101, norm(attn): 0.1484, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9962, norm:42.1938, tok/sec: 110232.26, flops:42.95, batch-reuse:1
@ 201 train 8.8493 , allloss: 18.3508, dt: 1180.25ms, fracRes: 0.0102, norm(attn): 0.1514, norm(output): 0.0457, norm(x): 0.0518, norm(y): 0.9961, norm:38.8162, tok/sec: 111054.53, flops:43.27, batch-reuse:1
@ 202 train 8.8570 , allloss: 18.4644, dt: 1186.97ms, fracRes: 0.0102, norm(attn): 0.1514, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9961, norm:40.2980, tok/sec: 110426.13, flops:43.02, batch-reuse:1
@ 203 train 8.8611 , allloss: 18.2373, dt: 1176.85ms, fracRes: 0.0103, norm(attn): 0.1543, norm(output): 0.0457, norm(x): 0.0519, norm(y): 0.9961, norm:41.7833, tok/sec: 111375.45, flops:43.39, batch-reuse:1
@ 204 train 8.8383 , allloss: 18.3227, dt: 1162.21ms, fracRes: 0.0102, norm(attn): 0.1523, norm(output): 0.0457, norm(x): 0.0518, norm(y): 0.9961, norm:37.2148, tok/sec: 112777.76, flops:43.94, batch-reuse:1
@ 205 train 8.8172 , allloss: 18.1976, dt: 1191.50ms, fracRes: 0.0103, norm(attn): 0.1553, norm(output): 0.0457, norm(x): 0.0518, norm(y): 0.9961, norm:34.8504, tok/sec: 110006.25, flops:42.86, batch-reuse:1
@ 206 train 8.8152 , allloss: 18.2918, dt: 1145.64ms, fracRes: 0.0104, norm(attn): 0.1553, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9960, norm:32.7797, tok/sec: 114409.14, flops:44.57, batch-reuse:1
@ 207 train 8.7355 , allloss: 18.1936, dt: 1144.58ms, fracRes: 0.0104, norm(attn): 0.1562, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9960, norm:33.0208, tok/sec: 114515.12, flops:44.62, batch-reuse:1
@ 208 train 8.7809 , allloss: 18.2807, dt: 1142.03ms, fracRes: 0.0104, norm(attn): 0.1562, norm(output): 0.0457, norm(x): 0.0517, norm(y): 0.9960, norm:36.0977, tok/sec: 114771.50, flops:44.71, batch-reuse:1
@ 209 train 8.7787 , allloss: 18.2306, dt: 1171.56ms, fracRes: 0.0105, norm(attn): 0.1572, norm(output): 0.0457, norm(x): 0.0516, norm(y): 0.9960, norm:39.5008, tok/sec: 111878.29, flops:43.59, batch-reuse:1
@ 210 train 8.7662 , allloss: 18.4241, dt: 1132.66ms, fracRes: 0.0104, norm(attn): 0.1572, norm(output): 0.0449, norm(x): 0.0513, norm(y): 0.9959, norm:41.6889, tok/sec: 115720.28, flops:45.08, batch-reuse:1
@ 211 train 8.7229 , allloss: 18.2606, dt: 1148.11ms, fracRes: 0.0104, norm(attn): 0.1582, norm(output): 0.0457, norm(x): 0.0512, norm(y): 0.9959, norm:38.7578, tok/sec: 114163.33, flops:44.48, batch-reuse:1
@ 212 train 8.7402 , allloss: 18.4372, dt: 1130.27ms, fracRes: 0.0103, norm(attn): 0.1611, norm(output): 0.0457, norm(x): 0.0512, norm(y): 0.9959, norm:33.7696, tok/sec: 115964.89, flops:45.18, batch-reuse:1
@ 213 train 8.7002 , allloss: 18.4871, dt: 1148.85ms, fracRes: 0.0102, norm(attn): 0.1621, norm(output): 0.0454, norm(x): 0.0510, norm(y): 0.9959, norm:33.6090, tok/sec: 114089.63, flops:44.45, batch-reuse:1
@ 214 train 8.7190 , allloss: 18.5982, dt: 1181.35ms, fracRes: 0.0101, norm(attn): 0.1621, norm(output): 0.0442, norm(x): 0.0507, norm(y): 0.9958, norm:34.2911, tok/sec: 110950.65, flops:43.23, batch-reuse:1
@ 215 train 8.6674 , allloss: 18.5500, dt: 1150.74ms, fracRes: 0.0100, norm(attn): 0.1670, norm(output): 0.0454, norm(x): 0.0506, norm(y): 0.9958, norm:38.5446, tok/sec: 113902.75, flops:44.38, batch-reuse:1
@ 216 train 8.6527 , allloss: 18.7491, dt: 1164.78ms, fracRes: 0.0100, norm(attn): 0.1699, norm(output): 0.0442, norm(x): 0.0503, norm(y): 0.9958, norm:39.3513, tok/sec: 112529.74, flops:43.84, batch-reuse:1
@ 217 train 8.6879 , allloss: 18.7622, dt: 1158.98ms, fracRes: 0.0099, norm(attn): 0.1709, norm(output): 0.0449, norm(x): 0.0505, norm(y): 0.9957, norm:35.7855, tok/sec: 113093.00, flops:44.06, batch-reuse:1
@ 218 train 8.6633 , allloss: 18.9152, dt: 1156.89ms, fracRes: 0.0098, norm(attn): 0.1719, norm(output): 0.0442, norm(x): 0.0502, norm(y): 0.9957, norm:32.3591, tok/sec: 113296.89, flops:44.14, batch-reuse:1
@ 219 train 8.7031 , allloss: 19.0087, dt: 1135.25ms, fracRes: 0.0097, norm(attn): 0.1729, norm(output): 0.0442, norm(x): 0.0501, norm(y): 0.9957, norm:32.2599, tok/sec: 115456.06, flops:44.98, batch-reuse:1
@ 220 train 8.6539 , allloss: 19.0865, dt: 1160.77ms, fracRes: 0.0095, norm(attn): 0.1738, norm(output): 0.0442, norm(x): 0.0499, norm(y): 0.9957, norm:34.2981, tok/sec: 112917.71, flops:43.99, batch-reuse:1
@ 221 train 8.6176 , allloss: 18.9477, dt: 1143.33ms, fracRes: 0.0095, norm(attn): 0.1768, norm(output): 0.0442, norm(x): 0.0497, norm(y): 0.9956, norm:41.1497, tok/sec: 114640.99, flops:44.66, batch-reuse:1
@ 222 train 8.6092 , allloss: 19.0866, dt: 1159.38ms, fracRes: 0.0094, norm(attn): 0.1768, norm(output): 0.0442, norm(x): 0.0496, norm(y): 0.9956, norm:39.8660, tok/sec: 113053.70, flops:44.05, batch-reuse:1
@ 223 train 8.6180 , allloss: 18.9565, dt: 1133.01ms, fracRes: 0.0093, norm(attn): 0.1807, norm(output): 0.0439, norm(x): 0.0493, norm(y): 0.9956, norm:33.8928, tok/sec: 115684.78, flops:45.07, batch-reuse:1
@ 224 train 8.5670 , allloss: 18.9617, dt: 1156.30ms, fracRes: 0.0092, norm(attn): 0.1816, norm(output): 0.0432, norm(x): 0.0490, norm(y): 0.9955, norm:32.9342, tok/sec: 113354.73, flops:44.16, batch-reuse:1
@ 225 train 8.5617 , allloss: 18.9232, dt: 1163.81ms, fracRes: 0.0091, norm(attn): 0.1826, norm(output): 0.0435, norm(x): 0.0488, norm(y): 0.9955, norm:35.2392, tok/sec: 112623.03, flops:43.88, batch-reuse:1
@ 226 train 8.5575 , allloss: 18.8590, dt: 1166.32ms, fracRes: 0.0091, norm(attn): 0.1807, norm(output): 0.0432, norm(x): 0.0487, norm(y): 0.9955, norm:40.8362, tok/sec: 112381.09, flops:43.78, batch-reuse:1
@ 227 train 8.5622 , allloss: 18.7899, dt: 1150.85ms, fracRes: 0.0090, norm(attn): 0.1846, norm(output): 0.0432, norm(x): 0.0486, norm(y): 0.9955, norm:37.5869, tok/sec: 113891.30, flops:44.37, batch-reuse:1
@ 228 train 8.5148 , allloss: 18.7006, dt: 1134.85ms, fracRes: 0.0090, norm(attn): 0.1865, norm(output): 0.0430, norm(x): 0.0484, norm(y): 0.9954, norm:31.4860, tok/sec: 115497.47, flops:45.00, batch-reuse:1
@ 229 train 8.5284 , allloss: 18.6313, dt: 1154.75ms, fracRes: 0.0090, norm(attn): 0.1865, norm(output): 0.0432, norm(x): 0.0486, norm(y): 0.9954, norm:35.5086, tok/sec: 113506.74, flops:44.22, batch-reuse:1
@ 230 train 8.5316 , allloss: 18.5783, dt: 1155.05ms, fracRes: 0.0089, norm(attn): 0.1885, norm(output): 0.0430, norm(x): 0.0481, norm(y): 0.9954, norm:59.5760, tok/sec: 113477.62, flops:44.21, batch-reuse:1
@ 231 train 8.4942 , allloss: 18.5267, dt: 1147.60ms, fracRes: 0.0088, norm(attn): 0.1885, norm(output): 0.0435, norm(x): 0.0487, norm(y): 0.9954, norm:54.7074, tok/sec: 114213.92, flops:44.50, batch-reuse:1
@ 232 train 8.4579 , allloss: 18.1473, dt: 1160.24ms, fracRes: 0.0090, norm(attn): 0.1914, norm(output): 0.0432, norm(x): 0.0483, norm(y): 0.9953, norm:40.9914, tok/sec: 112969.85, flops:44.01, batch-reuse:1
@ 233 train 8.4987 , allloss: 18.4799, dt: 1183.75ms, fracRes: 0.0088, norm(attn): 0.1885, norm(output): 0.0432, norm(x): 0.0484, norm(y): 0.9953, norm:66.3359, tok/sec: 110726.25, flops:43.14, batch-reuse:1
@ 234 train 8.4051 , allloss: 17.9422, dt: 1150.80ms, fracRes: 0.0089, norm(attn): 0.1963, norm(output): 0.0432, norm(x): 0.0485, norm(y): 0.9953, norm:43.4274, tok/sec: 113896.44, flops:44.37, batch-reuse:1
@ 235 train 8.4235 , allloss: 17.9440, dt: 1166.14ms, fracRes: 0.0089, norm(attn): 0.1934, norm(output): 0.0432, norm(x): 0.0484, norm(y): 0.9953, norm:35.3792, tok/sec: 112398.14, flops:43.79, batch-reuse:1
@ 236 train 8.3931 , allloss: 18.2771, dt: 1191.28ms, fracRes: 0.0088, norm(attn): 0.1885, norm(output): 0.0432, norm(x): 0.0483, norm(y): 0.9953, norm:73.2082, tok/sec: 110025.96, flops:42.87, batch-reuse:1
@ 237 train 8.4089 , allloss: 17.8521, dt: 1174.34ms, fracRes: 0.0090, norm(attn): 0.1982, norm(output): 0.0432, norm(x): 0.0482, norm(y): 0.9952, norm:44.2854, tok/sec: 111613.10, flops:43.48, batch-reuse:1
@ 238 train 8.3815 , allloss: 17.8516, dt: 1161.23ms, fracRes: 0.0089, norm(attn): 0.1934, norm(output): 0.0432, norm(x): 0.0484, norm(y): 0.9952, norm:47.0404, tok/sec: 112873.69, flops:43.98, batch-reuse:1
@ 239 train 8.3796 , allloss: 17.8006, dt: 1143.43ms, fracRes: 0.0089, norm(attn): 0.1973, norm(output): 0.0430, norm(x): 0.0479, norm(y): 0.9952, norm:49.5569, tok/sec: 114630.35, flops:44.66, batch-reuse:1
@ 240 train 8.3963 , allloss: 18.0952, dt: 1140.81ms, fracRes: 0.0088, norm(attn): 0.1914, norm(output): 0.0432, norm(x): 0.0482, norm(y): 0.9952, norm:41.1221, tok/sec: 114893.83, flops:44.76, batch-reuse:1
@ 241 train 8.3507 , allloss: 17.9104, dt: 1155.45ms, fracRes: 0.0088, norm(attn): 0.1934, norm(output): 0.0432, norm(x): 0.0482, norm(y): 0.9951, norm:32.6691, tok/sec: 113438.49, flops:44.20, batch-reuse:1
@ 242 train 8.3734 , allloss: 17.8976, dt: 1162.72ms, fracRes: 0.0087, norm(attn): 0.1934, norm(output): 0.0430, norm(x): 0.0478, norm(y): 0.9951, norm:38.3778, tok/sec: 112728.32, flops:43.92, batch-reuse:1
@ 243 train 8.2587 , allloss: 17.8680, dt: 1143.01ms, fracRes: 0.0087, norm(attn): 0.1924, norm(output): 0.0432, norm(x): 0.0478, norm(y): 0.9951, norm:32.1414, tok/sec: 114672.91, flops:44.68, batch-reuse:1
@ 244 train 8.3681 , allloss: 17.8870, dt: 1145.49ms, fracRes: 0.0088, norm(attn): 0.1953, norm(output): 0.0430, norm(x): 0.0476, norm(y): 0.9951, norm:48.5182, tok/sec: 114424.19, flops:44.58, batch-reuse:1
@ 245 train 8.2979 , allloss: 18.3541, dt: 1152.21ms, fracRes: 0.0085, norm(attn): 0.1934, norm(output): 0.0435, norm(x): 0.0483, norm(y): 0.9951, norm:66.7106, tok/sec: 113756.71, flops:44.32, batch-reuse:1
@ 246 train 8.4060 , allloss: 17.5779, dt: 1178.03ms, fracRes: 0.0089, norm(attn): 0.2021, norm(output): 0.0430, norm(x): 0.0474, norm(y): 0.9950, norm:47.5268, tok/sec: 111263.36, flops:43.35, batch-reuse:1
@ 247 train 8.3199 , allloss: 17.7302, dt: 1151.57ms, fracRes: 0.0086, norm(attn): 0.1924, norm(output): 0.0430, norm(x): 0.0478, norm(y): 0.9951, norm:32.7694, tok/sec: 113820.14, flops:44.34, batch-reuse:1
@ 248 train 8.3126 , allloss: 18.4564, dt: 1163.93ms, fracRes: 0.0083, norm(attn): 0.1895, norm(output): 0.0442, norm(x): 0.0487, norm(y): 0.9952, norm:68.8200, tok/sec: 112611.73, flops:43.87, batch-reuse:1
@ 249 train 8.2594 , allloss: 17.5835, dt: 1173.95ms, fracRes: 0.0086, norm(attn): 0.1953, norm(output): 0.0432, norm(x): 0.0482, norm(y): 0.9951, norm:44.9033, tok/sec: 111650.53, flops:43.50, batch-reuse:1
@ 250 train 8.2694 , allloss: 17.6629, dt: 1149.98ms, fracRes: 0.0084, norm(attn): 0.1934, norm(output): 0.0442, norm(x): 0.0484, norm(y): 0.9951, norm:34.3858, tok/sec: 113977.16, flops:44.41, batch-reuse:1
@ 251 train 8.1978 , allloss: 17.8443, dt: 1162.46ms, fracRes: 0.0083, norm(attn): 0.1885, norm(output): 0.0437, norm(x): 0.0484, norm(y): 0.9951, norm:36.1146, tok/sec: 112754.05, flops:43.93, batch-reuse:1
@ 252 train 8.3010 , allloss: 17.5511, dt: 1134.83ms, fracRes: 0.0084, norm(attn): 0.1904, norm(output): 0.0432, norm(x): 0.0481, norm(y): 0.9950, norm:47.8512, tok/sec: 115499.38, flops:45.00, batch-reuse:1
@ 253 train 8.2328 , allloss: 18.0286, dt: 1128.00ms, fracRes: 0.0081, norm(attn): 0.1914, norm(output): 0.0454, norm(x): 0.0492, norm(y): 0.9951, norm:45.4428, tok/sec: 116198.92, flops:45.27, batch-reuse:1
@ 254 train 8.1792 , allloss: 17.6120, dt: 1155.22ms, fracRes: 0.0081, norm(attn): 0.1875, norm(output): 0.0454, norm(x): 0.0490, norm(y): 0.9950, norm:32.6373, tok/sec: 113461.08, flops:44.20, batch-reuse:1
@ 255 train 8.2176 , allloss: 17.4582, dt: 1145.48ms, fracRes: 0.0081, norm(attn): 0.1865, norm(output): 0.0432, norm(x): 0.0484, norm(y): 0.9950, norm:55.7816, tok/sec: 114425.69, flops:44.58, batch-reuse:1
@ 256 train 8.2005 , allloss: 17.6367, dt: 1133.18ms, fracRes: 0.0078, norm(attn): 0.1875, norm(output): 0.0444, norm(x): 0.0486, norm(y): 0.9950, norm:38.6368, tok/sec: 115667.33, flops:45.06, batch-reuse:1
@ 257 train 8.2436 , allloss: 16.9831, dt: 1152.21ms, fracRes: 0.0080, norm(attn): 0.1982, norm(output): 0.0439, norm(x): 0.0480, norm(y): 0.9950, norm:37.5726, tok/sec: 113756.66, flops:44.32, batch-reuse:1
@ 258 train 8.1880 , allloss: 17.4916, dt: 1137.96ms, fracRes: 0.0077, norm(attn): 0.1875, norm(output): 0.0447, norm(x): 0.0487, norm(y): 0.9950, norm:32.0530, tok/sec: 115181.92, flops:44.87, batch-reuse:1
@ 259 train 8.1971 , allloss: 17.6189, dt: 1158.52ms, fracRes: 0.0076, norm(attn): 0.1826, norm(output): 0.0442, norm(x): 0.0483, norm(y): 0.9950, norm:44.3773, tok/sec: 113137.20, flops:44.08, batch-reuse:1
@ 260 train 8.2912 , allloss: 16.4153, dt: 1158.94ms, fracRes: 0.0081, norm(attn): 0.2012, norm(output): 0.0430, norm(x): 0.0469, norm(y): 0.9949, norm:81.3585, tok/sec: 113096.65, flops:44.06, batch-reuse:1
@ 261 train 8.2331 , allloss: 17.4938, dt: 1170.69ms, fracRes: 0.0073, norm(attn): 0.1895, norm(output): 0.0461, norm(x): 0.0489, norm(y): 0.9950, norm:47.5698, tok/sec: 111960.86, flops:43.62, batch-reuse:1
@ 262 train 8.2297 , allloss: 17.5861, dt: 1132.98ms, fracRes: 0.0073, norm(attn): 0.1807, norm(output): 0.0457, norm(x): 0.0489, norm(y): 0.9950, norm:34.4373, tok/sec: 115688.06, flops:45.07, batch-reuse:1
@ 263 train 8.2521 , allloss: 16.9266, dt: 1137.56ms, fracRes: 0.0076, norm(attn): 0.1807, norm(output): 0.0432, norm(x): 0.0474, norm(y): 0.9949, norm:60.0514, tok/sec: 115222.31, flops:44.89, batch-reuse:1
@ 264 train 8.2196 , allloss: 17.4254, dt: 1161.52ms, fracRes: 0.0075, norm(attn): 0.1729, norm(output): 0.0439, norm(x): 0.0478, norm(y): 0.9948, norm:52.9332, tok/sec: 112844.80, flops:43.96, batch-reuse:1
@ 265 train 8.2047 , allloss: 17.1299, dt: 1181.85ms, fracRes: 0.0074, norm(attn): 0.1895, norm(output): 0.0464, norm(x): 0.0491, norm(y): 0.9949, norm:35.5126, tok/sec: 110904.07, flops:43.21, batch-reuse:1
@ 266 train 8.2203 , allloss: 17.2944, dt: 1188.65ms, fracRes: 0.0074, norm(attn): 0.1924, norm(output): 0.0466, norm(x): 0.0493, norm(y): 0.9949, norm:37.8949, tok/sec: 110269.27, flops:42.96, batch-reuse:1
@ 267 train 8.1680 , allloss: 17.4062, dt: 1160.48ms, fracRes: 0.0075, norm(attn): 0.1797, norm(output): 0.0449, norm(x): 0.0484, norm(y): 0.9948, norm:34.2683, tok/sec: 112946.69, flops:44.00, batch-reuse:1
@ 268 train 8.2683 , allloss: 16.9009, dt: 1169.35ms, fracRes: 0.0078, norm(attn): 0.1846, norm(output): 0.0432, norm(x): 0.0474, norm(y): 0.9947, norm:58.3023, tok/sec: 112089.97, flops:43.67, batch-reuse:1
@ 269 train 8.2535 , allloss: 18.1532, dt: 1165.03ms, fracRes: 0.0072, norm(attn): 0.1807, norm(output): 0.0457, norm(x): 0.0488, norm(y): 0.9948, norm:124.1371, tok/sec: 112505.19, flops:43.83, batch-reuse:1
@ 270 train 8.2638 , allloss: 16.8171, dt: 1134.90ms, fracRes: 0.0073, norm(attn): 0.1934, norm(output): 0.0457, norm(x): 0.0488, norm(y): 0.9948, norm:39.5574, tok/sec: 115491.69, flops:45.00, batch-reuse:1
@ 271 train 8.1887 , allloss: 16.5225, dt: 1135.95ms, fracRes: 0.0075, norm(attn): 0.1953, norm(output): 0.0454, norm(x): 0.0482, norm(y): 0.9948, norm:40.1123, tok/sec: 115384.92, flops:44.95, batch-reuse:1
@ 272 train 8.2047 , allloss: 17.8857, dt: 1136.57ms, fracRes: 0.0071, norm(attn): 0.1777, norm(output): 0.0461, norm(x): 0.0491, norm(y): 0.9947, norm:70.5760, tok/sec: 115322.13, flops:44.93, batch-reuse:1
@ 273 train 8.3108 , allloss: 17.2803, dt: 1174.37ms, fracRes: 0.0074, norm(attn): 0.1738, norm(output): 0.0435, norm(x): 0.0476, norm(y): 0.9946, norm:60.2793, tok/sec: 111610.09, flops:43.48, batch-reuse:1
@ 274 train 8.1708 , allloss: 17.5212, dt: 1176.20ms, fracRes: 0.0072, norm(attn): 0.1719, norm(output): 0.0461, norm(x): 0.0490, norm(y): 0.9947, norm:32.5525, tok/sec: 111436.79, flops:43.42, batch-reuse:1
@ 275 train 8.1722 , allloss: 17.4662, dt: 1173.70ms, fracRes: 0.0071, norm(attn): 0.1826, norm(output): 0.0461, norm(x): 0.0488, norm(y): 0.9947, norm:39.8256, tok/sec: 111674.39, flops:43.51, batch-reuse:1
@ 276 train 8.1508 , allloss: 17.0408, dt: 1182.18ms, fracRes: 0.0073, norm(attn): 0.1758, norm(output): 0.0435, norm(x): 0.0476, norm(y): 0.9946, norm:41.5710, tok/sec: 110873.21, flops:43.20, batch-reuse:1
@ 277 train 8.1149 , allloss: 18.1604, dt: 1149.87ms, fracRes: 0.0072, norm(attn): 0.1650, norm(output): 0.0452, norm(x): 0.0485, norm(y): 0.9946, norm:69.4559, tok/sec: 113988.10, flops:44.41, batch-reuse:1
@ 278 train 8.1449 , allloss: 17.3919, dt: 1156.97ms, fracRes: 0.0073, norm(attn): 0.1709, norm(output): 0.0439, norm(x): 0.0478, norm(y): 0.9945, norm:43.1520, tok/sec: 113288.67, flops:44.14, batch-reuse:1
@ 279 train 8.0735 , allloss: 17.4200, dt: 1151.27ms, fracRes: 0.0072, norm(attn): 0.1650, norm(output): 0.0442, norm(x): 0.0482, norm(y): 0.9945, norm:30.7149, tok/sec: 113849.55, flops:44.36, batch-reuse:1
@ 280 train 8.1282 , allloss: 17.9805, dt: 1168.11ms, fracRes: 0.0071, norm(attn): 0.1621, norm(output): 0.0442, norm(x): 0.0481, norm(y): 0.9945, norm:44.4600, tok/sec: 112208.41, flops:43.72, batch-reuse:1
@ 281 train 8.0666 , allloss: 17.3062, dt: 1154.17ms, fracRes: 0.0073, norm(attn): 0.1660, norm(output): 0.0442, norm(x): 0.0478, norm(y): 0.9945, norm:33.1758, tok/sec: 113563.95, flops:44.24, batch-reuse:1
@ 282 train 8.0403 , allloss: 17.7636, dt: 1155.81ms, fracRes: 0.0072, norm(attn): 0.1592, norm(output): 0.0442, norm(x): 0.0480, norm(y): 0.9944, norm:44.2024, tok/sec: 113402.66, flops:44.18, batch-reuse:1
@ 283 train 8.0235 , allloss: 16.8008, dt: 1156.15ms, fracRes: 0.0075, norm(attn): 0.1709, norm(output): 0.0427, norm(x): 0.0466, norm(y): 0.9943, norm:53.4473, tok/sec: 113368.99, flops:44.17, batch-reuse:1
@ 284 train 8.0594 , allloss: 17.6062, dt: 1185.25ms, fracRes: 0.0072, norm(attn): 0.1572, norm(output): 0.0432, norm(x): 0.0475, norm(y): 0.9944, norm:32.5182, tok/sec: 110585.73, flops:43.08, batch-reuse:1
@ 285 train 8.0417 , allloss: 17.2899, dt: 1184.72ms, fracRes: 0.0072, norm(attn): 0.1582, norm(output): 0.0435, norm(x): 0.0475, norm(y): 0.9944, norm:29.4577, tok/sec: 110635.49, flops:43.10, batch-reuse:1
@ 286 train 8.0639 , allloss: 17.1573, dt: 1183.66ms, fracRes: 0.0073, norm(attn): 0.1621, norm(output): 0.0430, norm(x): 0.0469, norm(y): 0.9943, norm:33.6923, tok/sec: 110734.50, flops:43.14, batch-reuse:1
@ 287 train 8.0383 , allloss: 16.8988, dt: 1168.90ms, fracRes: 0.0073, norm(attn): 0.1582, norm(output): 0.0430, norm(x): 0.0467, norm(y): 0.9943, norm:35.4869, tok/sec: 112132.86, flops:43.69, batch-reuse:1
@ 288 train 8.0527 , allloss: 17.4570, dt: 1165.82ms, fracRes: 0.0071, norm(attn): 0.1631, norm(output): 0.0432, norm(x): 0.0472, norm(y): 0.9943, norm:53.0539, tok/sec: 112429.38, flops:43.80, batch-reuse:1
@ 289 train 8.0088 , allloss: 16.6194, dt: 1160.52ms, fracRes: 0.0073, norm(attn): 0.1611, norm(output): 0.0432, norm(x): 0.0469, norm(y): 0.9943, norm:33.1554, tok/sec: 112942.00, flops:44.00, batch-reuse:1
@ 290 train 7.9894 , allloss: 16.6132, dt: 1170.02ms, fracRes: 0.0076, norm(attn): 0.1670, norm(output): 0.0417, norm(x): 0.0458, norm(y): 0.9942, norm:42.9412, tok/sec: 112025.90, flops:43.65, batch-reuse:1
@ 291 train 7.9209 , allloss: 16.9469, dt: 1168.57ms, fracRes: 0.0075, norm(attn): 0.1709, norm(output): 0.0417, norm(x): 0.0461, norm(y): 0.9941, norm:52.4567, tok/sec: 112164.71, flops:43.70, batch-reuse:1
@ 292 train 7.9203 , allloss: 16.3265, dt: 1172.12ms, fracRes: 0.0077, norm(attn): 0.1670, norm(output): 0.0425, norm(x): 0.0464, norm(y): 0.9942, norm:32.7090, tok/sec: 111824.61, flops:43.57, batch-reuse:1
@ 293 train 7.9765 , allloss: 16.7576, dt: 1182.84ms, fracRes: 0.0078, norm(attn): 0.1660, norm(output): 0.0425, norm(x): 0.0462, norm(y): 0.9941, norm:40.8699, tok/sec: 110810.90, flops:43.17, batch-reuse:1
@ 294 train 7.9312 , allloss: 15.9937, dt: 1170.31ms, fracRes: 0.0082, norm(attn): 0.1758, norm(output): 0.0413, norm(x): 0.0459, norm(y): 0.9941, norm:34.4280, tok/sec: 111997.63, flops:43.63, batch-reuse:1
@ 295 train 7.9475 , allloss: 16.8302, dt: 1168.10ms, fracRes: 0.0078, norm(attn): 0.1729, norm(output): 0.0415, norm(x): 0.0461, norm(y): 0.9940, norm:42.6276, tok/sec: 112210.04, flops:43.72, batch-reuse:1
@ 296 train 7.8725 , allloss: 16.4194, dt: 1196.46ms, fracRes: 0.0079, norm(attn): 0.1699, norm(output): 0.0417, norm(x): 0.0461, norm(y): 0.9940, norm:30.4806, tok/sec: 109550.06, flops:42.68, batch-reuse:1
@ 297 train 7.8476 , allloss: 15.6334, dt: 1182.69ms, fracRes: 0.0086, norm(attn): 0.1855, norm(output): 0.0396, norm(x): 0.0449, norm(y): 0.9939, norm:31.1250, tok/sec: 110825.76, flops:43.18, batch-reuse:1
@ 298 train 7.9137 , allloss: 15.9910, dt: 1154.80ms, fracRes: 0.0084, norm(attn): 0.1836, norm(output): 0.0393, norm(x): 0.0446, norm(y): 0.9939, norm:28.2233, tok/sec: 113502.12, flops:44.22, batch-reuse:1
@ 299 train 7.9268 , allloss: 15.8677, dt: 1132.57ms, fracRes: 0.0083, norm(attn): 0.1914, norm(output): 0.0391, norm(x): 0.0441, norm(y): 0.9938, norm:40.7169, tok/sec: 115729.90, flops:45.09, batch-reuse:1
@ 300 train 7.8815 , allloss: 15.8737, dt: 1151.15ms, fracRes: 0.0081, norm(attn): 0.1904, norm(output): 0.0391, norm(x): 0.0441, norm(y): 0.9937, norm:27.6347, tok/sec: 113861.44, flops:44.36, batch-reuse:1
@ 301 train 8.0019 , allloss: 15.6610, dt: 1141.24ms, fracRes: 0.0081, norm(attn): 0.2090, norm(output): 0.0376, norm(x): 0.0429, norm(y): 0.9936, norm:29.8761, tok/sec: 114851.01, flops:44.75, batch-reuse:1
@ 302 train 7.8694 , allloss: 15.8062, dt: 1132.16ms, fracRes: 0.0080, norm(attn): 0.2031, norm(output): 0.0383, norm(x): 0.0433, norm(y): 0.9936, norm:26.0363, tok/sec: 115771.29, flops:45.10, batch-reuse:1
@ 303 train 7.8890 , allloss: 15.4885, dt: 1156.76ms, fracRes: 0.0083, norm(attn): 0.2207, norm(output): 0.0364, norm(x): 0.0422, norm(y): 0.9935, norm:30.0664, tok/sec: 113309.82, flops:44.15, batch-reuse:1
@ 304 train 7.8597 , allloss: 16.0209, dt: 1189.87ms, fracRes: 0.0077, norm(attn): 0.2148, norm(output): 0.0376, norm(x): 0.0430, norm(y): 0.9935, norm:36.4616, tok/sec: 110156.74, flops:42.92, batch-reuse:1
@ 305 train 7.8343 , allloss: 14.9732, dt: 1188.93ms, fracRes: 0.0079, norm(attn): 0.2393, norm(output): 0.0352, norm(x): 0.0411, norm(y): 0.9933, norm:43.4179, tok/sec: 110244.06, flops:42.95, batch-reuse:1
@ 306 train 7.7848 , allloss: 15.7309, dt: 1183.98ms, fracRes: 0.0074, norm(attn): 0.2207, norm(output): 0.0374, norm(x): 0.0425, norm(y): 0.9933, norm:26.2088, tok/sec: 110704.46, flops:43.13, batch-reuse:1
@ 307 train 7.9702 , allloss: 16.2994, dt: 1174.79ms, fracRes: 0.0072, norm(attn): 0.2363, norm(output): 0.0366, norm(x): 0.0418, norm(y): 0.9930, norm:66.2497, tok/sec: 111570.20, flops:43.47, batch-reuse:1
@ 308 train 7.9052 , allloss: 14.5391, dt: 1158.66ms, fracRes: 0.0075, norm(attn): 0.2695, norm(output): 0.0334, norm(x): 0.0391, norm(y): 0.9929, norm:51.1734, tok/sec: 113124.18, flops:44.07, batch-reuse:1
@ 309 train 7.9463 , allloss: 14.6762, dt: 1183.87ms, fracRes: 0.0073, norm(attn): 0.2520, norm(output): 0.0352, norm(x): 0.0403, norm(y): 0.9931, norm:50.9108, tok/sec: 110715.25, flops:43.13, batch-reuse:1
@ 310 train 7.8959 , allloss: 15.0422, dt: 1177.00ms, fracRes: 0.0070, norm(attn): 0.2451, norm(output): 0.0359, norm(x): 0.0409, norm(y): 0.9931, norm:31.1980, tok/sec: 111360.84, flops:43.39, batch-reuse:1
@ 311 train 7.9348 , allloss: 15.2814, dt: 1145.84ms, fracRes: 0.0070, norm(attn): 0.2773, norm(output): 0.0339, norm(x): 0.0393, norm(y): 0.9926, norm:56.8770, tok/sec: 114389.16, flops:44.57, batch-reuse:1
@ 312 train 7.9575 , allloss: 15.5620, dt: 1158.39ms, fracRes: 0.0070, norm(attn): 0.2656, norm(output): 0.0352, norm(x): 0.0403, norm(y): 0.9928, norm:29.9238, tok/sec: 113150.31, flops:44.08, batch-reuse:1
@ 313 train 7.8014 , allloss: 15.3019, dt: 1180.59ms, fracRes: 0.0069, norm(attn): 0.2500, norm(output): 0.0364, norm(x): 0.0413, norm(y): 0.9930, norm:27.4092, tok/sec: 111022.37, flops:43.25, batch-reuse:1
@ 314 train 7.7922 , allloss: 14.9344, dt: 1155.55ms, fracRes: 0.0068, norm(attn): 0.2598, norm(output): 0.0354, norm(x): 0.0406, norm(y): 0.9929, norm:24.6105, tok/sec: 113427.77, flops:44.19, batch-reuse:1
@ 315 train 7.8134 , allloss: 14.5248, dt: 1157.51ms, fracRes: 0.0067, norm(attn): 0.2852, norm(output): 0.0334, norm(x): 0.0385, norm(y): 0.9926, norm:19.8723, tok/sec: 113236.03, flops:44.12, batch-reuse:1
@ 316 train 7.8446 , allloss: 14.4887, dt: 1158.40ms, fracRes: 0.0065, norm(attn): 0.3047, norm(output): 0.0315, norm(x): 0.0369, norm(y): 0.9921, norm:29.8215, tok/sec: 113149.44, flops:44.08, batch-reuse:1
@ 317 train 7.8543 , allloss: 14.8315, dt: 1158.80ms, fracRes: 0.0064, norm(attn): 0.2910, norm(output): 0.0330, norm(x): 0.0379, norm(y): 0.9922, norm:25.7321, tok/sec: 113109.85, flops:44.07, batch-reuse:1
@ 318 train 7.7754 , allloss: 14.4602, dt: 1139.82ms, fracRes: 0.0064, norm(attn): 0.2930, norm(output): 0.0330, norm(x): 0.0378, norm(y): 0.9923, norm:25.7648, tok/sec: 114993.85, flops:44.80, batch-reuse:1
@ 319 train 7.7479 , allloss: 14.4672, dt: 1134.57ms, fracRes: 0.0064, norm(attn): 0.2871, norm(output): 0.0332, norm(x): 0.0381, norm(y): 0.9923, norm:28.0956, tok/sec: 115525.52, flops:45.01, batch-reuse:1
@ 320 train 7.7832 , allloss: 14.8466, dt: 1131.36ms, fracRes: 0.0064, norm(attn): 0.2852, norm(output): 0.0332, norm(x): 0.0385, norm(y): 0.9923, norm:28.6986, tok/sec: 115853.43, flops:45.14, batch-reuse:1
@ 321 train 7.8109 , allloss: 14.1675, dt: 1141.00ms, fracRes: 0.0065, norm(attn): 0.2988, norm(output): 0.0325, norm(x): 0.0377, norm(y): 0.9923, norm:22.6036, tok/sec: 114874.40, flops:44.76, batch-reuse:1
@ 322 train 7.7303 , allloss: 14.5520, dt: 1141.73ms, fracRes: 0.0065, norm(attn): 0.2832, norm(output): 0.0332, norm(x): 0.0384, norm(y): 0.9923, norm:24.2796, tok/sec: 114801.62, flops:44.73, batch-reuse:1
@ 323 train 7.7991 , allloss: 14.5433, dt: 1145.50ms, fracRes: 0.0066, norm(attn): 0.2891, norm(output): 0.0332, norm(x): 0.0385, norm(y): 0.9923, norm:19.4317, tok/sec: 114423.85, flops:44.58, batch-reuse:1
@ 324 train 7.7538 , allloss: 13.9277, dt: 1148.30ms, fracRes: 0.0067, norm(attn): 0.3008, norm(output): 0.0327, norm(x): 0.0378, norm(y): 0.9923, norm:26.4230, tok/sec: 114144.16, flops:44.47, batch-reuse:1
@ 325 train 7.7879 , allloss: 14.6271, dt: 1151.02ms, fracRes: 0.0066, norm(attn): 0.2812, norm(output): 0.0334, norm(x): 0.0384, norm(y): 0.9924, norm:40.9668, tok/sec: 113874.55, flops:44.37, batch-reuse:1
@ 326 train 7.8212 , allloss: 13.8419, dt: 1126.39ms, fracRes: 0.0068, norm(attn): 0.2891, norm(output): 0.0330, norm(x): 0.0382, norm(y): 0.9924, norm:38.4207, tok/sec: 116364.84, flops:45.34, batch-reuse:1
@ 327 train 7.8493 , allloss: 14.5506, dt: 1154.20ms, fracRes: 0.0067, norm(attn): 0.2715, norm(output): 0.0337, norm(x): 0.0388, norm(y): 0.9925, norm:32.6190, tok/sec: 113560.50, flops:44.24, batch-reuse:1
@ 328 train 7.7863 , allloss: 13.9450, dt: 1162.45ms, fracRes: 0.0071, norm(attn): 0.2891, norm(output): 0.0332, norm(x): 0.0388, norm(y): 0.9925, norm:42.0471, tok/sec: 112754.86, flops:43.93, batch-reuse:1
@ 329 train 7.7970 , allloss: 14.8926, dt: 1155.92ms, fracRes: 0.0070, norm(attn): 0.2656, norm(output): 0.0349, norm(x): 0.0397, norm(y): 0.9926, norm:41.1450, tok/sec: 113391.74, flops:44.18, batch-reuse:1
@ 330 train 7.7826 , allloss: 14.1145, dt: 1151.81ms, fracRes: 0.0074, norm(attn): 0.2793, norm(output): 0.0349, norm(x): 0.0400, norm(y): 0.9927, norm:36.9373, tok/sec: 113796.91, flops:44.34, batch-reuse:1
@ 331 train 7.7229 , allloss: 14.6821, dt: 1149.60ms, fracRes: 0.0072, norm(attn): 0.2520, norm(output): 0.0354, norm(x): 0.0404, norm(y): 0.9928, norm:41.5070, tok/sec: 114015.78, flops:44.42, batch-reuse:1
@ 332 train 7.7910 , allloss: 13.3306, dt: 1143.71ms, fracRes: 0.0079, norm(attn): 0.2832, norm(output): 0.0349, norm(x): 0.0402, norm(y): 0.9927, norm:90.4315, tok/sec: 114602.54, flops:44.65, batch-reuse:1
@ 333 train 7.7534 , allloss: 14.4732, dt: 1136.37ms, fracRes: 0.0076, norm(attn): 0.2520, norm(output): 0.0352, norm(x): 0.0406, norm(y): 0.9928, norm:33.5206, tok/sec: 115342.62, flops:44.94, batch-reuse:1
@ 334 train 7.7372 , allloss: 13.8606, dt: 1131.12ms, fracRes: 0.0077, norm(attn): 0.2637, norm(output): 0.0352, norm(x): 0.0406, norm(y): 0.9928, norm:49.2128, tok/sec: 115878.51, flops:45.15, batch-reuse:1
@ 335 train 7.8141 , allloss: 14.9711, dt: 1127.00ms, fracRes: 0.0077, norm(attn): 0.2402, norm(output): 0.0356, norm(x): 0.0413, norm(y): 0.9928, norm:205.1379, tok/sec: 116302.02, flops:45.31, batch-reuse:1
@ 336 train 7.9756 , allloss: 13.2544, dt: 1141.47ms, fracRes: 0.0085, norm(attn): 0.2793, norm(output): 0.0354, norm(x): 0.0413, norm(y): 0.9928, norm:138.6884, tok/sec: 114826.92, flops:44.74, batch-reuse:1
@ 337 train 7.8307 , allloss: 13.8411, dt: 1150.23ms, fracRes: 0.0082, norm(attn): 0.2559, norm(output): 0.0364, norm(x): 0.0418, norm(y): 0.9928, norm:63.2731, tok/sec: 113952.89, flops:44.40, batch-reuse:1
@ 338 train 9.0369 , allloss: 18.6266, dt: 1160.30ms, fracRes: 0.0073, norm(attn): 0.2227, norm(output): 0.0400, norm(x): 0.0439, norm(y): 0.9929, norm:596.2145, tok/sec: 112963.75, flops:44.01, batch-reuse:1
@ 339 train 8.4406 , allloss: 18.5153, dt: 1169.09ms, fracRes: 0.0073, norm(attn): 0.2334, norm(output): 0.0396, norm(x): 0.0431, norm(y): 0.9928, norm:253.8602, tok/sec: 112114.48, flops:43.68, batch-reuse:1
@ 340 train 8.3461 , allloss: 15.7376, dt: 1142.06ms, fracRes: 0.0075, norm(attn): 0.2520, norm(output): 0.0386, norm(x): 0.0426, norm(y): 0.9928, norm:139.3882, tok/sec: 114767.62, flops:44.71, batch-reuse:1
@ 341 train 8.2461 , allloss: 14.3212, dt: 1150.90ms, fracRes: 0.0078, norm(attn): 0.2617, norm(output): 0.0386, norm(x): 0.0432, norm(y): 0.9929, norm:136.3532, tok/sec: 113886.32, flops:44.37, batch-reuse:1
@ 342 train 7.8284 , allloss: 14.3534, dt: 1134.86ms, fracRes: 0.0079, norm(attn): 0.2441, norm(output): 0.0388, norm(x): 0.0440, norm(y): 0.9929, norm:65.3642, tok/sec: 115495.74, flops:45.00, batch-reuse:1
@ 343 train 7.9426 , allloss: 15.9000, dt: 1131.57ms, fracRes: 0.0076, norm(attn): 0.2148, norm(output): 0.0413, norm(x): 0.0455, norm(y): 0.9930, norm:172.9843, tok/sec: 115832.44, flops:45.13, batch-reuse:1
@ 344 train 7.9548 , allloss: 15.0746, dt: 1146.95ms, fracRes: 0.0081, norm(attn): 0.2207, norm(output): 0.0405, norm(x): 0.0452, norm(y): 0.9930, norm:115.0921, tok/sec: 114278.52, flops:44.52, batch-reuse:1
@ 345 train 7.8376 , allloss: 14.3221, dt: 1151.61ms, fracRes: 0.0087, norm(attn): 0.2490, norm(output): 0.0405, norm(x): 0.0450, norm(y): 0.9929, norm:51.2994, tok/sec: 113816.51, flops:44.34, batch-reuse:1
@ 346 train 7.8075 , allloss: 14.6278, dt: 1141.41ms, fracRes: 0.0086, norm(attn): 0.2344, norm(output): 0.0415, norm(x): 0.0459, norm(y): 0.9930, norm:37.6538, tok/sec: 114832.92, flops:44.74, batch-reuse:1
@ 347 train 7.8361 , allloss: 15.4657, dt: 1160.21ms, fracRes: 0.0079, norm(attn): 0.2148, norm(output): 0.0427, norm(x): 0.0467, norm(y): 0.9931, norm:42.3026, tok/sec: 112972.75, flops:44.01, batch-reuse:1
@ 348 train 7.7595 , allloss: 15.3919, dt: 1176.42ms, fracRes: 0.0076, norm(attn): 0.2031, norm(output): 0.0427, norm(x): 0.0467, norm(y): 0.9930, norm:38.1407, tok/sec: 111416.42, flops:43.41, batch-reuse:1
@ 349 train 7.7908 , allloss: 14.6329, dt: 1155.94ms, fracRes: 0.0080, norm(attn): 0.2031, norm(output): 0.0425, norm(x): 0.0462, norm(y): 0.9930, norm:40.7052, tok/sec: 113390.22, flops:44.18, batch-reuse:1
@ 350 train 7.8144 , allloss: 14.8304, dt: 1165.53ms, fracRes: 0.0080, norm(attn): 0.2041, norm(output): 0.0425, norm(x): 0.0461, norm(y): 0.9929, norm:37.9511, tok/sec: 112456.91, flops:43.81, batch-reuse:1
@ 351 train 7.9071 , allloss: 15.8325, dt: 1138.48ms, fracRes: 0.0080, norm(attn): 0.2129, norm(output): 0.0427, norm(x): 0.0466, norm(y): 0.9928, norm:104.6663, tok/sec: 115128.49, flops:44.85, batch-reuse:1
@ 352 train 8.1362 , allloss: 14.5964, dt: 1154.51ms, fracRes: 0.0082, norm(attn): 0.2480, norm(output): 0.0388, norm(x): 0.0426, norm(y): 0.9924, norm:126.5721, tok/sec: 113530.23, flops:44.23, batch-reuse:1
@ 353 train 7.9876 , allloss: 15.5775, dt: 1150.76ms, fracRes: 0.0083, norm(attn): 0.2480, norm(output): 0.0403, norm(x): 0.0449, norm(y): 0.9925, norm:77.6024, tok/sec: 113900.53, flops:44.38, batch-reuse:1
@ 354 train 8.6932 , allloss: 19.4937, dt: 1152.10ms, fracRes: 0.0083, norm(attn): 0.2354, norm(output): 0.0503, norm(x): 0.0548, norm(y): 0.9930, norm:732.4410, tok/sec: 113767.82, flops:44.32, batch-reuse:1
@ 355 train 7.8487 , allloss: 16.0246, dt: 1147.87ms, fracRes: 0.0113, norm(attn): 0.1924, norm(output): 0.0442, norm(x): 0.0507, norm(y): 0.9931, norm:90.7906, tok/sec: 114187.24, flops:44.49, batch-reuse:1
@ 356 train 7.9212 , allloss: 16.2150, dt: 1130.30ms, fracRes: 0.0112, norm(attn): 0.2148, norm(output): 0.0471, norm(x): 0.0531, norm(y): 0.9931, norm:51.3464, tok/sec: 115962.57, flops:45.18, batch-reuse:1
@ 357 train 7.9099 , allloss: 15.3071, dt: 1148.74ms, fracRes: 0.0114, norm(attn): 0.2090, norm(output): 0.0442, norm(x): 0.0507, norm(y): 0.9930, norm:58.4468, tok/sec: 114100.45, flops:44.45, batch-reuse:1
@ 358 train 7.8018 , allloss: 15.9865, dt: 1175.68ms, fracRes: 0.0104, norm(attn): 0.2139, norm(output): 0.0471, norm(x): 0.0528, norm(y): 0.9930, norm:49.9416, tok/sec: 111485.72, flops:43.43, batch-reuse:1
@ 359 train 7.9901 , allloss: 16.1677, dt: 1156.95ms, fracRes: 0.0097, norm(attn): 0.1943, norm(output): 0.0439, norm(x): 0.0498, norm(y): 0.9930, norm:59.1500, tok/sec: 113291.28, flops:44.14, batch-reuse:1
@ 360 train 7.9103 , allloss: 17.7699, dt: 1162.96ms, fracRes: 0.0093, norm(attn): 0.2168, norm(output): 0.0483, norm(x): 0.0540, norm(y): 0.9930, norm:89.1165, tok/sec: 112705.87, flops:43.91, batch-reuse:1
@ 361 train 7.9016 , allloss: 16.6155, dt: 1146.14ms, fracRes: 0.0102, norm(attn): 0.1885, norm(output): 0.0422, norm(x): 0.0485, norm(y): 0.9930, norm:109.2195, tok/sec: 114359.23, flops:44.55, batch-reuse:1
@ 362 train 7.8438 , allloss: 16.0335, dt: 1152.65ms, fracRes: 0.0131, norm(attn): 0.1875, norm(output): 0.0454, norm(x): 0.0523, norm(y): 0.9931, norm:57.0111, tok/sec: 113713.63, flops:44.30, batch-reuse:1
@ 363 train 7.8671 , allloss: 16.1515, dt: 1150.74ms, fracRes: 0.0135, norm(attn): 0.1787, norm(output): 0.0444, norm(x): 0.0525, norm(y): 0.9932, norm:48.9143, tok/sec: 113902.01, flops:44.38, batch-reuse:1
@ 364 train 7.9138 , allloss: 16.9821, dt: 1154.54ms, fracRes: 0.0112, norm(attn): 0.1992, norm(output): 0.0405, norm(x): 0.0478, norm(y): 0.9931, norm:143.6636, tok/sec: 113527.22, flops:44.23, batch-reuse:1
@ 365 train 7.8272 , allloss: 15.5919, dt: 1162.44ms, fracRes: 0.0121, norm(attn): 0.1885, norm(output): 0.0415, norm(x): 0.0491, norm(y): 0.9932, norm:37.1450, tok/sec: 112756.36, flops:43.93, batch-reuse:1
@ 366 train 7.8551 , allloss: 16.5982, dt: 1176.31ms, fracRes: 0.0105, norm(attn): 0.2021, norm(output): 0.0442, norm(x): 0.0514, norm(y): 0.9931, norm:55.9158, tok/sec: 111426.52, flops:43.41, batch-reuse:1
@ 367 train 7.7516 , allloss: 15.5564, dt: 1137.01ms, fracRes: 0.0102, norm(attn): 0.2041, norm(output): 0.0400, norm(x): 0.0472, norm(y): 0.9930, norm:32.1612, tok/sec: 115278.12, flops:44.91, batch-reuse:1
@ 368 train 7.8466 , allloss: 15.5990, dt: 1140.07ms, fracRes: 0.0098, norm(attn): 0.2324, norm(output): 0.0366, norm(x): 0.0440, norm(y): 0.9927, norm:64.6190, tok/sec: 114968.53, flops:44.79, batch-reuse:1
@ 369 train 7.8156 , allloss: 15.8925, dt: 1180.10ms, fracRes: 0.0124, norm(attn): 0.2188, norm(output): 0.0400, norm(x): 0.0484, norm(y): 0.9929, norm:45.8143, tok/sec: 111068.22, flops:43.27, batch-reuse:1
@ 370 train 7.8592 , allloss: 15.7905, dt: 1152.20ms, fracRes: 0.0120, norm(attn): 0.2295, norm(output): 0.0388, norm(x): 0.0467, norm(y): 0.9928, norm:38.8436, tok/sec: 113757.54, flops:44.32, batch-reuse:1
@ 371 train 7.8123 , allloss: 14.6505, dt: 1156.73ms, fracRes: 0.0104, norm(attn): 0.2520, norm(output): 0.0339, norm(x): 0.0416, norm(y): 0.9924, norm:69.1418, tok/sec: 113312.42, flops:44.15, batch-reuse:1
@ 372 train 7.8601 , allloss: 13.4025, dt: 1171.27ms, fracRes: 0.0103, norm(attn): 0.2520, norm(output): 0.0339, norm(x): 0.0415, norm(y): 0.9926, norm:40.1919, tok/sec: 111905.53, flops:43.60, batch-reuse:1
@ 373 train 7.8514 , allloss: 13.4152, dt: 1159.69ms, fracRes: 0.0097, norm(attn): 0.2695, norm(output): 0.0327, norm(x): 0.0400, norm(y): 0.9923, norm:36.6361, tok/sec: 113023.25, flops:44.03, batch-reuse:1
@ 374 train 7.8180 , allloss: 13.1054, dt: 1150.89ms, fracRes: 0.0123, norm(attn): 0.2793, norm(output): 0.0330, norm(x): 0.0421, norm(y): 0.9927, norm:30.4937, tok/sec: 113887.69, flops:44.37, batch-reuse:1
@ 375 train 7.8700 , allloss: 13.4166, dt: 1159.46ms, fracRes: 0.0105, norm(attn): 0.2793, norm(output): 0.0330, norm(x): 0.0408, norm(y): 0.9925, norm:26.9140, tok/sec: 113046.19, flops:44.04, batch-reuse:1
@ 376 train 8.0294 , allloss: 14.6414, dt: 1193.83ms, fracRes: 0.0085, norm(attn): 0.2734, norm(output): 0.0332, norm(x): 0.0393, norm(y): 0.9919, norm:167.4155, tok/sec: 109791.24, flops:42.77, batch-reuse:1
@ 377 train 7.9061 , allloss: 12.5505, dt: 1167.01ms, fracRes: 0.0091, norm(attn): 0.2891, norm(output): 0.0320, norm(x): 0.0392, norm(y): 0.9923, norm:45.1205, tok/sec: 112314.35, flops:43.76, batch-reuse:1
@ 378 train 7.8389 , allloss: 11.9866, dt: 1158.94ms, fracRes: 0.0111, norm(attn): 0.3008, norm(output): 0.0317, norm(x): 0.0405, norm(y): 0.9926, norm:39.2590, tok/sec: 113096.47, flops:44.06, batch-reuse:1
@ 379 train 7.9441 , allloss: 12.3317, dt: 1161.24ms, fracRes: 0.0093, norm(attn): 0.2988, norm(output): 0.0310, norm(x): 0.0381, norm(y): 0.9921, norm:102.1890, tok/sec: 112872.09, flops:43.97, batch-reuse:1
@ 380 train 7.9907 , allloss: 12.6691, dt: 1185.77ms, fracRes: 0.0081, norm(attn): 0.3145, norm(output): 0.0305, norm(x): 0.0364, norm(y): 0.9916, norm:80.6636, tok/sec: 110537.88, flops:43.07, batch-reuse:1
@ 381 train 7.8775 , allloss: 12.5088, dt: 1183.75ms, fracRes: 0.0103, norm(attn): 0.3262, norm(output): 0.0304, norm(x): 0.0381, norm(y): 0.9920, norm:40.4027, tok/sec: 110726.36, flops:43.14, batch-reuse:1
@ 382 train 7.8211 , allloss: 12.8783, dt: 1190.46ms, fracRes: 0.0090, norm(attn): 0.2949, norm(output): 0.0327, norm(x): 0.0390, norm(y): 0.9922, norm:39.5546, tok/sec: 110101.85, flops:42.90, batch-reuse:1
@ 383 train 7.8114 , allloss: 13.0571, dt: 1176.13ms, fracRes: 0.0085, norm(attn): 0.3105, norm(output): 0.0311, norm(x): 0.0372, norm(y): 0.9918, norm:39.1680, tok/sec: 111443.66, flops:43.42, batch-reuse:1
@ 384 train 7.7735 , allloss: 12.7072, dt: 1166.78ms, fracRes: 0.0077, norm(attn): 0.3164, norm(output): 0.0295, norm(x): 0.0358, norm(y): 0.9914, norm:23.8072, tok/sec: 112336.29, flops:43.77, batch-reuse:1
@ 385 train 7.7577 , allloss: 11.8966, dt: 1184.61ms, fracRes: 0.0085, norm(attn): 0.3555, norm(output): 0.0273, norm(x): 0.0339, norm(y): 0.9909, norm:56.2594, tok/sec: 110646.06, flops:43.11, batch-reuse:1
@ 386 train 7.8475 , allloss: 11.7164, dt: 1155.53ms, fracRes: 0.0086, norm(attn): 0.3438, norm(output): 0.0284, norm(x): 0.0352, norm(y): 0.9913, norm:46.5604, tok/sec: 113430.09, flops:44.19, batch-reuse:1
@ 387 train 7.7950 , allloss: 11.5255, dt: 1156.64ms, fracRes: 0.0087, norm(attn): 0.3457, norm(output): 0.0273, norm(x): 0.0343, norm(y): 0.9911, norm:35.9954, tok/sec: 113321.34, flops:44.15, batch-reuse:1
@ 388 train 7.8603 , allloss: 11.5317, dt: 1173.06ms, fracRes: 0.0082, norm(attn): 0.3730, norm(output): 0.0269, norm(x): 0.0331, norm(y): 0.9906, norm:195.1137, tok/sec: 111734.94, flops:43.53, batch-reuse:1
@ 389 train 7.9497 , allloss: 11.9611, dt: 1155.21ms, fracRes: 0.0072, norm(attn): 0.3145, norm(output): 0.0293, norm(x): 0.0349, norm(y): 0.9912, norm:114.1507, tok/sec: 113461.17, flops:44.20, batch-reuse:1
@ 390 train 7.9968 , allloss: 11.9370, dt: 1182.73ms, fracRes: 0.0076, norm(attn): 0.3398, norm(output): 0.0309, norm(x): 0.0367, norm(y): 0.9915, norm:81.4094, tok/sec: 110821.69, flops:43.18, batch-reuse:1
@ 391 train 7.8318 , allloss: 12.0925, dt: 1158.95ms, fracRes: 0.0071, norm(attn): 0.3262, norm(output): 0.0309, norm(x): 0.0363, norm(y): 0.9914, norm:38.5248, tok/sec: 113095.16, flops:44.06, batch-reuse:1
@ 392 train 7.8789 , allloss: 12.0503, dt: 1145.37ms, fracRes: 0.0070, norm(attn): 0.3223, norm(output): 0.0311, norm(x): 0.0362, norm(y): 0.9915, norm:62.8456, tok/sec: 114436.86, flops:44.58, batch-reuse:1
@ 393 train 7.8204 , allloss: 11.8856, dt: 1138.05ms, fracRes: 0.0071, norm(attn): 0.3418, norm(output): 0.0311, norm(x): 0.0363, norm(y): 0.9914, norm:38.6967, tok/sec: 115172.92, flops:44.87, batch-reuse:1
@ 394 train 7.7741 , allloss: 11.9839, dt: 1147.98ms, fracRes: 0.0069, norm(attn): 0.3242, norm(output): 0.0315, norm(x): 0.0368, norm(y): 0.9915, norm:33.1327, tok/sec: 114176.09, flops:44.48, batch-reuse:1
@ 395 train 7.9610 , allloss: 12.1672, dt: 1162.92ms, fracRes: 0.0074, norm(attn): 0.3203, norm(output): 0.0322, norm(x): 0.0376, norm(y): 0.9917, norm:80.0901, tok/sec: 112709.73, flops:43.91, batch-reuse:1
@ 396 train 7.8168 , allloss: 12.7221, dt: 1178.59ms, fracRes: 0.0069, norm(attn): 0.2852, norm(output): 0.0332, norm(x): 0.0381, norm(y): 0.9918, norm:183.6039, tok/sec: 111210.60, flops:43.33, batch-reuse:1
@ 397 train 8.3781 , allloss: 11.8604, dt: 1152.81ms, fracRes: 0.0079, norm(attn): 0.3809, norm(output): 0.0317, norm(x): 0.0382, norm(y): 0.9915, norm:129.7535, tok/sec: 113698.29, flops:44.30, batch-reuse:1
@ 398 train 8.2813 , allloss: 11.9648, dt: 1150.48ms, fracRes: 0.0077, norm(attn): 0.3535, norm(output): 0.0332, norm(x): 0.0392, norm(y): 0.9917, norm:90.9599, tok/sec: 113928.50, flops:44.39, batch-reuse:1
@ 399 train 8.0582 , allloss: 13.2071, dt: 1146.70ms, fracRes: 0.0071, norm(attn): 0.2734, norm(output): 0.0354, norm(x): 0.0403, norm(y): 0.9918, norm:141.7183, tok/sec: 114303.26, flops:44.53, batch-reuse:1
@ 400 train 7.8705 , allloss: 12.9407, dt: 1158.22ms, fracRes: 0.0072, norm(attn): 0.2637, norm(output): 0.0354, norm(x): 0.0407, norm(y): 0.9921, norm:47.8177, tok/sec: 113166.94, flops:44.09, batch-reuse:1
@ 401 train 8.0970 , allloss: 11.7778, dt: 1178.60ms, fracRes: 0.0084, norm(attn): 0.3086, norm(output): 0.0356, norm(x): 0.0418, norm(y): 0.9923, norm:158.6198, tok/sec: 111209.68, flops:43.33, batch-reuse:1
@ 402 train 7.8559 , allloss: 12.2263, dt: 1184.34ms, fracRes: 0.0078, norm(attn): 0.2734, norm(output): 0.0376, norm(x): 0.0428, norm(y): 0.9923, norm:51.9362, tok/sec: 110670.54, flops:43.12, batch-reuse:1
@ 403 train 8.2523 , allloss: 14.4941, dt: 1185.71ms, fracRes: 0.0074, norm(attn): 0.2539, norm(output): 0.0391, norm(x): 0.0437, norm(y): 0.9923, norm:470.1383, tok/sec: 110543.14, flops:43.07, batch-reuse:1
@ 404 train 8.0430 , allloss: 13.0947, dt: 1188.31ms, fracRes: 0.0080, norm(attn): 0.2812, norm(output): 0.0391, norm(x): 0.0444, norm(y): 0.9921, norm:108.8618, tok/sec: 110301.37, flops:42.97, batch-reuse:1
@ 405 train 7.9416 , allloss: 13.9739, dt: 1185.84ms, fracRes: 0.0078, norm(attn): 0.2617, norm(output): 0.0396, norm(x): 0.0446, norm(y): 0.9921, norm:84.6321, tok/sec: 110531.16, flops:43.06, batch-reuse:1
@ 406 train 8.6458 , allloss: 16.0807, dt: 1162.21ms, fracRes: 0.0075, norm(attn): 0.2344, norm(output): 0.0430, norm(x): 0.0464, norm(y): 0.9923, norm:821.8527, tok/sec: 112778.31, flops:43.94, batch-reuse:1
@ 407 train 7.9286 , allloss: 11.8652, dt: 1148.03ms, fracRes: 0.0082, norm(attn): 0.2773, norm(output): 0.0405, norm(x): 0.0458, norm(y): 0.9922, norm:154.0537, tok/sec: 114170.90, flops:44.48, batch-reuse:1
@ 408 train 7.8544 , allloss: 13.2421, dt: 1148.53ms, fracRes: 0.0077, norm(attn): 0.2402, norm(output): 0.0417, norm(x): 0.0463, norm(y): 0.9923, norm:77.7242, tok/sec: 114122.00, flops:44.46, batch-reuse:1
@ 409 train 7.8024 , allloss: 12.2278, dt: 1158.46ms, fracRes: 0.0079, norm(attn): 0.2461, norm(output): 0.0415, norm(x): 0.0462, norm(y): 0.9921, norm:92.1641, tok/sec: 113143.55, flops:44.08, batch-reuse:1
@ 410 train 7.9730 , allloss: 15.6211, dt: 1167.68ms, fracRes: 0.0075, norm(attn): 0.2178, norm(output): 0.0430, norm(x): 0.0467, norm(y): 0.9922, norm:214.8067, tok/sec: 112250.20, flops:43.73, batch-reuse:1
@ 411 train 7.8739 , allloss: 13.3617, dt: 1186.74ms, fracRes: 0.0079, norm(attn): 0.2305, norm(output): 0.0417, norm(x): 0.0462, norm(y): 0.9920, norm:65.9938, tok/sec: 110446.94, flops:43.03, batch-reuse:1
@ 412 train 7.8671 , allloss: 14.3708, dt: 1161.25ms, fracRes: 0.0078, norm(attn): 0.2090, norm(output): 0.0427, norm(x): 0.0463, norm(y): 0.9920, norm:43.5598, tok/sec: 112871.07, flops:43.97, batch-reuse:1
@ 413 train 7.6509 , allloss: 14.4672, dt: 1190.78ms, fracRes: 0.0077, norm(attn): 0.1914, norm(output): 0.0430, norm(x): 0.0471, norm(y): 0.9922, norm:65.7162, tok/sec: 110072.20, flops:42.88, batch-reuse:1
@ 414 train 8.0178 , allloss: 13.4704, dt: 1194.01ms, fracRes: 0.0081, norm(attn): 0.2324, norm(output): 0.0430, norm(x): 0.0473, norm(y): 0.9920, norm:271.2668, tok/sec: 109774.45, flops:42.77, batch-reuse:1
@ 415 train 8.2297 , allloss: 16.6763, dt: 1158.43ms, fracRes: 0.0080, norm(attn): 0.2051, norm(output): 0.0508, norm(x): 0.0529, norm(y): 0.9926, norm:319.8413, tok/sec: 113146.58, flops:44.08, batch-reuse:1
@ 416 train 10.0843 , allloss: 17.4460, dt: 1168.52ms, fracRes: 0.0074, norm(attn): 0.2480, norm(output): 0.0427, norm(x): 0.0464, norm(y): 0.9920, norm:1468.4696, tok/sec: 112168.92, flops:43.70, batch-reuse:1
@ 417 train 9.2633 , allloss: 13.9262, dt: 1148.26ms, fracRes: 0.0081, norm(attn): 0.2451, norm(output): 0.0435, norm(x): 0.0489, norm(y): 0.9919, norm:542.3860, tok/sec: 114148.04, flops:44.47, batch-reuse:1
@ 418 train 8.7576 , allloss: 14.4456, dt: 1131.58ms, fracRes: 0.0083, norm(attn): 0.2334, norm(output): 0.0454, norm(x): 0.0500, norm(y): 0.9920, norm:339.4150, tok/sec: 115831.34, flops:45.13, batch-reuse:1
@ 419 train 8.2613 , allloss: 17.6010, dt: 1134.02ms, fracRes: 0.0080, norm(attn): 0.2061, norm(output): 0.0508, norm(x): 0.0529, norm(y): 0.9921, norm:335.7888, tok/sec: 115581.58, flops:45.03, batch-reuse:1
@ 420 train 8.4058 , allloss: 17.7297, dt: 1142.23ms, fracRes: 0.0086, norm(attn): 0.2148, norm(output): 0.0508, norm(x): 0.0564, norm(y): 0.9924, norm:645.3134, tok/sec: 114750.87, flops:44.71, batch-reuse:1
@ 421 train 10.0748 , allloss: 15.1220, dt: 1136.20ms, fracRes: 0.0092, norm(attn): 0.2930, norm(output): 0.0466, norm(x): 0.0517, norm(y): 0.9919, norm:632.8038, tok/sec: 115360.24, flops:44.94, batch-reuse:1
@ 422 train 9.4873 , allloss: 15.8031, dt: 1156.71ms, fracRes: 0.0092, norm(attn): 0.2812, norm(output): 0.0483, norm(x): 0.0524, norm(y): 0.9919, norm:456.1787, tok/sec: 113314.75, flops:44.15, batch-reuse:1
@ 423 train 8.4460 , allloss: 19.1803, dt: 1173.20ms, fracRes: 0.0092, norm(attn): 0.2490, norm(output): 0.0640, norm(x): 0.0648, norm(y): 0.9924, norm:92.9780, tok/sec: 111721.80, flops:43.53, batch-reuse:1
@ 424 train 7.9592 , allloss: 21.9400, dt: 1144.52ms, fracRes: 0.0088, norm(attn): 0.2158, norm(output): 0.0640, norm(x): 0.0682, norm(y): 0.9927, norm:77.8229, tok/sec: 114521.32, flops:44.62, batch-reuse:1
@ 425 train 8.4801 , allloss: 23.1648, dt: 1153.99ms, fracRes: 0.0087, norm(attn): 0.1973, norm(output): 0.0554, norm(x): 0.0603, norm(y): 0.9926, norm:595.2630, tok/sec: 113581.78, flops:44.25, batch-reuse:1
@ 426 train 7.7912 , allloss: 19.4644, dt: 1160.55ms, fracRes: 0.0090, norm(attn): 0.2021, norm(output): 0.0630, norm(x): 0.0674, norm(y): 0.9927, norm:60.0625, tok/sec: 112939.31, flops:44.00, batch-reuse:1
@ 427 train 7.9249 , allloss: 17.4163, dt: 1153.71ms, fracRes: 0.0090, norm(attn): 0.2090, norm(output): 0.0659, norm(x): 0.0675, norm(y): 0.9926, norm:65.6512, tok/sec: 113609.01, flops:44.26, batch-reuse:1
@ 428 train 7.9498 , allloss: 16.5991, dt: 1147.16ms, fracRes: 0.0086, norm(attn): 0.2188, norm(output): 0.0649, norm(x): 0.0663, norm(y): 0.9924, norm:74.1245, tok/sec: 114258.19, flops:44.51, batch-reuse:1
@ 429 train 7.9227 , allloss: 16.2343, dt: 1189.13ms, fracRes: 0.0079, norm(attn): 0.2197, norm(output): 0.0649, norm(x): 0.0648, norm(y): 0.9924, norm:79.5744, tok/sec: 110225.01, flops:42.94, batch-reuse:1
@ 430 train 7.9127 , allloss: 17.3476, dt: 1165.59ms, fracRes: 0.0074, norm(attn): 0.2207, norm(output): 0.0688, norm(x): 0.0684, norm(y): 0.9927, norm:71.9390, tok/sec: 112451.06, flops:43.81, batch-reuse:1
@ 431 train 7.8814 , allloss: 19.6731, dt: 1151.96ms, fracRes: 0.0079, norm(attn): 0.2119, norm(output): 0.0728, norm(x): 0.0738, norm(y): 0.9931, norm:85.2360, tok/sec: 113782.21, flops:44.33, batch-reuse:1
@ 432 train 7.9782 , allloss: 21.7771, dt: 1176.63ms, fracRes: 0.0081, norm(attn): 0.2471, norm(output): 0.0947, norm(x): 0.0933, norm(y): 0.9933, norm:105.3081, tok/sec: 111396.35, flops:43.40, batch-reuse:1
@ 433 train 8.0213 , allloss: 22.3461, dt: 1143.87ms, fracRes: 0.0086, norm(attn): 0.2402, norm(output): 0.0947, norm(x): 0.0941, norm(y): 0.9934, norm:110.3298, tok/sec: 114586.27, flops:44.64, batch-reuse:1
@ 434 train 7.9661 , allloss: 20.2919, dt: 1161.87ms, fracRes: 0.0097, norm(attn): 0.2002, norm(output): 0.0728, norm(x): 0.0748, norm(y): 0.9934, norm:91.7810, tok/sec: 112810.85, flops:43.95, batch-reuse:1
@ 435 train 11.8034 , allloss: 17.5040, dt: 1184.10ms, fracRes: 0.0071, norm(attn): 0.2520, norm(output): 0.0442, norm(x): 0.0487, norm(y): 0.9920, norm:144.0443, tok/sec: 110693.52, flops:43.13, batch-reuse:1
@ 436 train 10.9516 , allloss: 17.7696, dt: 1174.39ms, fracRes: 0.0085, norm(attn): 0.2520, norm(output): 0.0459, norm(x): 0.0509, norm(y): 0.9923, norm:244.1188, tok/sec: 111608.14, flops:43.48, batch-reuse:1
@ 437 train 7.9063 , allloss: 24.8688, dt: 1150.03ms, fracRes: 0.0111, norm(attn): 0.2148, norm(output): 0.0933, norm(x): 0.0961, norm(y): 0.9939, norm:117.4663, tok/sec: 113972.59, flops:44.40, batch-reuse:1
@ 438 train 8.0030 , allloss: 29.0342, dt: 1191.84ms, fracRes: 0.0107, norm(attn): 0.2246, norm(output): 0.1064, norm(x): 0.1107, norm(y): 0.9941, norm:138.5490, tok/sec: 109974.52, flops:42.85, batch-reuse:1
@ 439 train 7.8795 , allloss: 31.3789, dt: 1174.44ms, fracRes: 0.0104, norm(attn): 0.2324, norm(output): 0.1191, norm(x): 0.1218, norm(y): 0.9943, norm:165.4119, tok/sec: 111604.20, flops:43.48, batch-reuse:1
@ 440 train 7.9064 , allloss: 32.0078, dt: 1156.65ms, fracRes: 0.0106, norm(attn): 0.2275, norm(output): 0.1226, norm(x): 0.1242, norm(y): 0.9945, norm:159.2426, tok/sec: 113320.50, flops:44.15, batch-reuse:1
@ 441 train 7.9143 , allloss: 31.0555, dt: 1176.48ms, fracRes: 0.0114, norm(attn): 0.2197, norm(output): 0.1172, norm(x): 0.1205, norm(y): 0.9946, norm:139.2696, tok/sec: 111410.30, flops:43.41, batch-reuse:1
@ 442 train 8.1075 , allloss: 30.5991, dt: 1192.43ms, fracRes: 0.0126, norm(attn): 0.2158, norm(output): 0.1084, norm(x): 0.1137, norm(y): 0.9948, norm:300.7332, tok/sec: 109919.79, flops:42.82, batch-reuse:1
@ 443 train 8.3073 , allloss: 27.2144, dt: 1177.43ms, fracRes: 0.0120, norm(attn): 0.1934, norm(output): 0.1299, norm(x): 0.1298, norm(y): 0.9951, norm:94.5154, tok/sec: 111320.88, flops:43.37, batch-reuse:1
@ 444 train 8.3890 , allloss: 25.4755, dt: 1185.85ms, fracRes: 0.0132, norm(attn): 0.1816, norm(output): 0.1367, norm(x): 0.1364, norm(y): 0.9955, norm:82.9567, tok/sec: 110530.12, flops:43.06, batch-reuse:1
@ 445 train 8.2794 , allloss: 24.1442, dt: 1160.92ms, fracRes: 0.0185, norm(attn): 0.1689, norm(output): 0.1279, norm(x): 0.1329, norm(y): 0.9959, norm:73.5359, tok/sec: 112903.92, flops:43.99, batch-reuse:1
@ 446 train 8.1424 , allloss: 23.5479, dt: 1134.77ms, fracRes: 0.0309, norm(attn): 0.1768, norm(output): 0.1074, norm(x): 0.1217, norm(y): 0.9962, norm:115.4683, tok/sec: 115504.89, flops:45.00, batch-reuse:1
@ 447 train 7.9179 , allloss: 23.0133, dt: 1164.39ms, fracRes: 0.0439, norm(attn): 0.2080, norm(output): 0.0835, norm(x): 0.1093, norm(y): 0.9963, norm:127.3336, tok/sec: 112567.34, flops:43.86, batch-reuse:1
@ 448 train 7.8723 , allloss: 23.6084, dt: 1177.67ms, fracRes: 0.0332, norm(attn): 0.2637, norm(output): 0.0635, norm(x): 0.0820, norm(y): 0.9954, norm:133.1783, tok/sec: 111297.84, flops:43.36, batch-reuse:1
@ 449 train 7.7157 , allloss: 19.9458, dt: 1143.64ms, fracRes: 0.0534, norm(attn): 0.2559, norm(output): 0.0559, norm(x): 0.0920, norm(y): 0.9960, norm:117.4772, tok/sec: 114609.75, flops:44.65, batch-reuse:1
@ 450 train 7.7839 , allloss: 19.1765, dt: 1149.38ms, fracRes: 0.0544, norm(attn): 0.2559, norm(output): 0.0544, norm(x): 0.0915, norm(y): 0.9959, norm:135.1725, tok/sec: 114037.23, flops:44.43, batch-reuse:1
@ 451 train 7.7598 , allloss: 21.1145, dt: 1162.52ms, fracRes: 0.0466, norm(attn): 0.2656, norm(output): 0.0525, norm(x): 0.0838, norm(y): 0.9951, norm:122.7917, tok/sec: 112748.17, flops:43.93, batch-reuse:1
@ 452 train 7.7959 , allloss: 24.5387, dt: 1184.62ms, fracRes: 0.0318, norm(attn): 0.2793, norm(output): 0.0518, norm(x): 0.0706, norm(y): 0.9938, norm:94.2642, tok/sec: 110645.02, flops:43.11, batch-reuse:1
@ 453 train 7.7887 , allloss: 25.2208, dt: 1182.93ms, fracRes: 0.0222, norm(attn): 0.2969, norm(output): 0.0491, norm(x): 0.0618, norm(y): 0.9930, norm:83.9144, tok/sec: 110802.99, flops:43.17, batch-reuse:1
@ 454 train 7.7798 , allloss: 21.0153, dt: 1183.46ms, fracRes: 0.0193, norm(attn): 0.2812, norm(output): 0.0449, norm(x): 0.0565, norm(y): 0.9932, norm:67.9368, tok/sec: 110753.19, flops:43.15, batch-reuse:1
@ 455 train 7.8371 , allloss: 16.9375, dt: 1182.25ms, fracRes: 0.0160, norm(attn): 0.2852, norm(output): 0.0378, norm(x): 0.0483, norm(y): 0.9930, norm:63.6823, tok/sec: 110867.04, flops:43.19, batch-reuse:1
@ 456 train 7.7301 , allloss: 15.3888, dt: 1174.78ms, fracRes: 0.0163, norm(attn): 0.2656, norm(output): 0.0391, norm(x): 0.0499, norm(y): 0.9935, norm:43.3729, tok/sec: 111571.95, flops:43.47, batch-reuse:1
@ 457 train 7.7876 , allloss: 14.3209, dt: 1183.60ms, fracRes: 0.0156, norm(attn): 0.2617, norm(output): 0.0386, norm(x): 0.0485, norm(y): 0.9934, norm:37.4640, tok/sec: 110739.85, flops:43.14, batch-reuse:1
@ 458 train 7.9362 , allloss: 13.0668, dt: 1142.46ms, fracRes: 0.0115, norm(attn): 0.2832, norm(output): 0.0354, norm(x): 0.0432, norm(y): 0.9927, norm:160.4535, tok/sec: 114727.83, flops:44.70, batch-reuse:1
@ 459 train 7.7411 , allloss: 14.9062, dt: 1142.20ms, fracRes: 0.0123, norm(attn): 0.2461, norm(output): 0.0381, norm(x): 0.0466, norm(y): 0.9931, norm:78.6832, tok/sec: 114753.70, flops:44.71, batch-reuse:1
@ 460 train 7.6277 , allloss: 13.0135, dt: 1170.92ms, fracRes: 0.0132, norm(attn): 0.2461, norm(output): 0.0371, norm(x): 0.0461, norm(y): 0.9931, norm:39.2728, tok/sec: 111938.98, flops:43.61, batch-reuse:1
@ 461 train 7.7188 , allloss: 12.7599, dt: 1156.04ms, fracRes: 0.0115, norm(attn): 0.2520, norm(output): 0.0364, norm(x): 0.0438, norm(y): 0.9926, norm:50.7346, tok/sec: 113379.72, flops:44.17, batch-reuse:1
@ 462 train 7.7449 , allloss: 13.0408, dt: 1159.49ms, fracRes: 0.0108, norm(attn): 0.2441, norm(output): 0.0369, norm(x): 0.0439, norm(y): 0.9925, norm:47.5972, tok/sec: 113042.86, flops:44.04, batch-reuse:1
@ 463 train 7.7355 , allloss: 13.5834, dt: 1150.11ms, fracRes: 0.0102, norm(attn): 0.2188, norm(output): 0.0388, norm(x): 0.0450, norm(y): 0.9924, norm:42.1428, tok/sec: 113964.51, flops:44.40, batch-reuse:1
@ 464 train 7.6831 , allloss: 14.0479, dt: 1160.32ms, fracRes: 0.0094, norm(attn): 0.2041, norm(output): 0.0393, norm(x): 0.0452, norm(y): 0.9922, norm:42.7962, tok/sec: 112961.50, flops:44.01, batch-reuse:1
@ 465 train 8.0787 , allloss: 13.7912, dt: 1155.61ms, fracRes: 0.0080, norm(attn): 0.2520, norm(output): 0.0376, norm(x): 0.0419, norm(y): 0.9915, norm:495.5594, tok/sec: 113422.11, flops:44.19, batch-reuse:1
@ 466 train 7.9590 , allloss: 16.5010, dt: 1151.56ms, fracRes: 0.0078, norm(attn): 0.1914, norm(output): 0.0415, norm(x): 0.0463, norm(y): 0.9922, norm:140.1685, tok/sec: 113820.82, flops:44.34, batch-reuse:1
@ 467 train 7.7821 , allloss: 16.3835, dt: 1194.47ms, fracRes: 0.0071, norm(attn): 0.1768, norm(output): 0.0430, norm(x): 0.0462, norm(y): 0.9922, norm:69.3065, tok/sec: 109731.96, flops:42.75, batch-reuse:1
@ 468 train 7.6683 , allloss: 18.5810, dt: 1190.56ms, fracRes: 0.0070, norm(attn): 0.1855, norm(output): 0.0457, norm(x): 0.0472, norm(y): 0.9921, norm:91.5036, tok/sec: 110093.09, flops:42.89, batch-reuse:1
@ 469 train 7.7060 , allloss: 15.6836, dt: 1144.10ms, fracRes: 0.0068, norm(attn): 0.1855, norm(output): 0.0457, norm(x): 0.0486, norm(y): 0.9923, norm:69.2057, tok/sec: 114563.63, flops:44.63, batch-reuse:1
@ 470 train 7.7117 , allloss: 14.5818, dt: 1140.82ms, fracRes: 0.0079, norm(attn): 0.1572, norm(output): 0.0503, norm(x): 0.0532, norm(y): 0.9926, norm:48.7759, tok/sec: 114892.89, flops:44.76, batch-reuse:1
@ 471 train 7.6119 , allloss: 14.5951, dt: 1139.24ms, fracRes: 0.0079, norm(attn): 0.1572, norm(output): 0.0537, norm(x): 0.0563, norm(y): 0.9926, norm:66.2212, tok/sec: 115052.62, flops:44.82, batch-reuse:1
@ 472 train 7.7774 , allloss: 14.2809, dt: 1167.21ms, fracRes: 0.0068, norm(attn): 0.1807, norm(output): 0.0542, norm(x): 0.0554, norm(y): 0.9925, norm:69.4996, tok/sec: 112295.42, flops:43.75, batch-reuse:1
@ 473 train 7.8532 , allloss: 14.7332, dt: 1136.81ms, fracRes: 0.0067, norm(attn): 0.1865, norm(output): 0.0544, norm(x): 0.0549, norm(y): 0.9924, norm:76.5064, tok/sec: 115298.21, flops:44.92, batch-reuse:1
@ 474 train 8.1050 , allloss: 21.4426, dt: 1158.51ms, fracRes: 0.0068, norm(attn): 0.1934, norm(output): 0.0588, norm(x): 0.0554, norm(y): 0.9922, norm:313.5316, tok/sec: 113138.76, flops:44.08, batch-reuse:1
@ 475 train 7.9270 , allloss: 14.1780, dt: 1159.19ms, fracRes: 0.0068, norm(attn): 0.1895, norm(output): 0.0510, norm(x): 0.0526, norm(y): 0.9921, norm:132.9795, tok/sec: 113071.65, flops:44.05, batch-reuse:1
@ 476 train 8.3042 , allloss: 17.9315, dt: 1165.17ms, fracRes: 0.0074, norm(attn): 0.2158, norm(output): 0.0588, norm(x): 0.0610, norm(y): 0.9921, norm:517.3084, tok/sec: 112491.97, flops:43.83, batch-reuse:1
@ 477 train 7.8694 , allloss: 15.8924, dt: 1184.14ms, fracRes: 0.0071, norm(attn): 0.2031, norm(output): 0.0549, norm(x): 0.0560, norm(y): 0.9920, norm:73.5347, tok/sec: 110689.62, flops:43.12, batch-reuse:1
@ 478 train 7.8960 , allloss: 17.4745, dt: 1174.79ms, fracRes: 0.0071, norm(attn): 0.1865, norm(output): 0.0557, norm(x): 0.0582, norm(y): 0.9920, norm:132.0123, tok/sec: 111570.77, flops:43.47, batch-reuse:1
@ 479 train 8.1322 , allloss: 17.5998, dt: 1139.46ms, fracRes: 0.0079, norm(attn): 0.2334, norm(output): 0.0544, norm(x): 0.0537, norm(y): 0.9917, norm:150.3594, tok/sec: 115029.58, flops:44.82, batch-reuse:1
@ 480 train 7.7704 , allloss: 19.6363, dt: 1161.78ms, fracRes: 0.0076, norm(attn): 0.2334, norm(output): 0.0620, norm(x): 0.0622, norm(y): 0.9917, norm:75.2526, tok/sec: 112820.16, flops:43.95, batch-reuse:1
@ 481 train 7.7623 , allloss: 19.9208, dt: 1168.79ms, fracRes: 0.0072, norm(attn): 0.2100, norm(output): 0.0620, norm(x): 0.0643, norm(y): 0.9919, norm:70.4458, tok/sec: 112143.50, flops:43.69, batch-reuse:1
@ 482 train 7.7767 , allloss: 18.9138, dt: 1178.30ms, fracRes: 0.0069, norm(attn): 0.2041, norm(output): 0.0623, norm(x): 0.0632, norm(y): 0.9919, norm:67.8339, tok/sec: 111238.23, flops:43.34, batch-reuse:1
@ 483 train 7.9876 , allloss: 19.6936, dt: 1157.39ms, fracRes: 0.0072, norm(attn): 0.2354, norm(output): 0.0688, norm(x): 0.0680, norm(y): 0.9917, norm:90.0177, tok/sec: 113248.18, flops:44.12, batch-reuse:1
@ 484 train 7.9222 , allloss: 19.1231, dt: 1171.92ms, fracRes: 0.0070, norm(attn): 0.2041, norm(output): 0.0623, norm(x): 0.0627, norm(y): 0.9917, norm:84.8622, tok/sec: 111843.60, flops:43.57, batch-reuse:1
@ 485 train 9.2757 , allloss: 20.4351, dt: 1159.61ms, fracRes: 0.0070, norm(attn): 0.2002, norm(output): 0.0515, norm(x): 0.0557, norm(y): 0.9917, norm:679.7916, tok/sec: 113031.01, flops:44.04, batch-reuse:1
@ 486 train 8.3404 , allloss: 21.7461, dt: 1143.41ms, fracRes: 0.0071, norm(attn): 0.2695, norm(output): 0.0771, norm(x): 0.0765, norm(y): 0.9917, norm:165.2106, tok/sec: 114632.86, flops:44.66, batch-reuse:1
@ 487 train 8.1617 , allloss: 22.2662, dt: 1164.47ms, fracRes: 0.0070, norm(attn): 0.2539, norm(output): 0.0718, norm(x): 0.0736, norm(y): 0.9917, norm:114.6068, tok/sec: 112559.02, flops:43.85, batch-reuse:1
@ 488 train 8.2618 , allloss: 21.3728, dt: 1150.12ms, fracRes: 0.0070, norm(attn): 0.2207, norm(output): 0.0588, norm(x): 0.0632, norm(y): 0.9919, norm:300.1233, tok/sec: 113963.43, flops:44.40, batch-reuse:1
@ 489 train 8.2386 , allloss: 19.4429, dt: 1138.47ms, fracRes: 0.0070, norm(attn): 0.2021, norm(output): 0.0564, norm(x): 0.0594, norm(y): 0.9915, norm:186.6154, tok/sec: 115129.53, flops:44.85, batch-reuse:1
@ 490 train 7.9194 , allloss: 19.7924, dt: 1154.11ms, fracRes: 0.0075, norm(attn): 0.1807, norm(output): 0.0586, norm(x): 0.0612, norm(y): 0.9919, norm:70.8099, tok/sec: 113570.12, flops:44.25, batch-reuse:1
@ 491 train 7.9509 , allloss: 20.0953, dt: 1186.23ms, fracRes: 0.0079, norm(attn): 0.1660, norm(output): 0.0552, norm(x): 0.0600, norm(y): 0.9921, norm:92.1472, tok/sec: 110494.60, flops:43.05, batch-reuse:1
@ 492 train 7.9065 , allloss: 20.5895, dt: 1172.58ms, fracRes: 0.0081, norm(attn): 0.1865, norm(output): 0.0640, norm(x): 0.0678, norm(y): 0.9921, norm:78.5392, tok/sec: 111781.27, flops:43.55, batch-reuse:1
@ 493 train 8.1148 , allloss: 20.5972, dt: 1139.61ms, fracRes: 0.0084, norm(attn): 0.1904, norm(output): 0.0659, norm(x): 0.0682, norm(y): 0.9920, norm:156.1795, tok/sec: 115014.32, flops:44.81, batch-reuse:1
@ 494 train 7.7655 , allloss: 20.3081, dt: 1154.48ms, fracRes: 0.0089, norm(attn): 0.1660, norm(output): 0.0542, norm(x): 0.0587, norm(y): 0.9922, norm:52.6697, tok/sec: 113532.90, flops:44.23, batch-reuse:1
@ 495 train 7.7058 , allloss: 19.5935, dt: 1148.26ms, fracRes: 0.0098, norm(attn): 0.1699, norm(output): 0.0500, norm(x): 0.0558, norm(y): 0.9924, norm:84.3185, tok/sec: 114148.78, flops:44.47, batch-reuse:1
@ 496 train 7.7842 , allloss: 19.7262, dt: 1146.60ms, fracRes: 0.0102, norm(attn): 0.1641, norm(output): 0.0566, norm(x): 0.0624, norm(y): 0.9926, norm:57.3993, tok/sec: 114313.55, flops:44.54, batch-reuse:1
@ 497 train 7.6820 , allloss: 18.0859, dt: 1144.80ms, fracRes: 0.0110, norm(attn): 0.1562, norm(output): 0.0544, norm(x): 0.0604, norm(y): 0.9928, norm:58.3526, tok/sec: 114493.15, flops:44.61, batch-reuse:1
@ 498 train 7.7235 , allloss: 15.2165, dt: 1145.35ms, fracRes: 0.0143, norm(attn): 0.1875, norm(output): 0.0459, norm(x): 0.0540, norm(y): 0.9933, norm:38.1105, tok/sec: 114437.88, flops:44.58, batch-reuse:1
@ 499 train 7.7206 , allloss: 14.7017, dt: 1142.61ms, fracRes: 0.0180, norm(attn): 0.2041, norm(output): 0.0437, norm(x): 0.0546, norm(y): 0.9935, norm:45.6396, tok/sec: 114712.73, flops:44.69, batch-reuse:1
@ 500 train 7.6588 , allloss: 15.3413, dt: 1162.46ms, fracRes: 0.0180, norm(attn): 0.2139, norm(output): 0.0422, norm(x): 0.0528, norm(y): 0.9932, norm:45.2900, tok/sec: 112754.16, flops:43.93, batch-reuse:1
@ 501 train 7.6457 , allloss: 15.7675, dt: 1150.97ms, fracRes: 0.0162, norm(attn): 0.2148, norm(output): 0.0405, norm(x): 0.0509, norm(y): 0.9929, norm:37.3702, tok/sec: 113879.65, flops:44.37, batch-reuse:1
@ 502 train 7.7163 , allloss: 15.6469, dt: 1190.17ms, fracRes: 0.0132, norm(attn): 0.2129, norm(output): 0.0396, norm(x): 0.0486, norm(y): 0.9927, norm:33.6656, tok/sec: 110129.24, flops:42.91, batch-reuse:1
@ 503 train 7.6907 , allloss: 16.4733, dt: 1142.92ms, fracRes: 0.0122, norm(attn): 0.2031, norm(output): 0.0417, norm(x): 0.0495, norm(y): 0.9925, norm:49.2206, tok/sec: 114681.62, flops:44.68, batch-reuse:1
@ 504 train 7.7221 , allloss: 15.6933, dt: 1159.88ms, fracRes: 0.0105, norm(attn): 0.2207, norm(output): 0.0405, norm(x): 0.0477, norm(y): 0.9923, norm:41.0356, tok/sec: 113004.96, flops:44.03, batch-reuse:1
@ 505 train 7.6775 , allloss: 15.2527, dt: 1150.12ms, fracRes: 0.0094, norm(attn): 0.2080, norm(output): 0.0432, norm(x): 0.0495, norm(y): 0.9923, norm:48.2091, tok/sec: 113963.83, flops:44.40, batch-reuse:1
@ 506 train 7.6662 , allloss: 13.6941, dt: 1158.84ms, fracRes: 0.0082, norm(attn): 0.2334, norm(output): 0.0405, norm(x): 0.0463, norm(y): 0.9920, norm:44.0322, tok/sec: 113106.05, flops:44.07, batch-reuse:1
@ 507 train 7.6941 , allloss: 13.7013, dt: 1126.31ms, fracRes: 0.0086, norm(attn): 0.2334, norm(output): 0.0393, norm(x): 0.0457, norm(y): 0.9919, norm:29.6580, tok/sec: 116372.58, flops:45.34, batch-reuse:1
@ 508 train 7.6996 , allloss: 13.4525, dt: 1150.65ms, fracRes: 0.0090, norm(attn): 0.2324, norm(output): 0.0393, norm(x): 0.0456, norm(y): 0.9918, norm:47.7332, tok/sec: 113911.31, flops:44.38, batch-reuse:1
@ 509 train 7.7111 , allloss: 12.7403, dt: 1162.93ms, fracRes: 0.0091, norm(attn): 0.2539, norm(output): 0.0376, norm(x): 0.0440, norm(y): 0.9915, norm:40.8161, tok/sec: 112708.90, flops:43.91, batch-reuse:1
@ 510 train 7.6662 , allloss: 12.9069, dt: 1158.31ms, fracRes: 0.0098, norm(attn): 0.2363, norm(output): 0.0388, norm(x): 0.0452, norm(y): 0.9916, norm:43.3336, tok/sec: 113157.60, flops:44.09, batch-reuse:1
@ 511 train 7.6958 , allloss: 12.3204, dt: 1167.15ms, fracRes: 0.0099, norm(attn): 0.2695, norm(output): 0.0354, norm(x): 0.0429, norm(y): 0.9912, norm:29.8291, tok/sec: 112300.67, flops:43.75, batch-reuse:1
@ 512 train 7.6530 , allloss: 12.4724, dt: 1190.97ms, fracRes: 0.0094, norm(attn): 0.2734, norm(output): 0.0352, norm(x): 0.0417, norm(y): 0.9908, norm:28.2124, tok/sec: 110055.16, flops:42.88, batch-reuse:1
@ 513 train 7.6823 , allloss: 12.6827, dt: 1138.83ms, fracRes: 0.0092, norm(attn): 0.2617, norm(output): 0.0354, norm(x): 0.0420, norm(y): 0.9908, norm:33.4870, tok/sec: 115093.16, flops:44.84, batch-reuse:1
@ 514 train 7.6693 , allloss: 12.0800, dt: 1137.77ms, fracRes: 0.0098, norm(attn): 0.2637, norm(output): 0.0359, norm(x): 0.0430, norm(y): 0.9910, norm:37.5483, tok/sec: 115201.06, flops:44.88, batch-reuse:1
@ 515 train 7.7527 , allloss: 13.8845, dt: 1139.80ms, fracRes: 0.0092, norm(attn): 0.2305, norm(output): 0.0386, norm(x): 0.0443, norm(y): 0.9912, norm:98.2482, tok/sec: 114995.17, flops:44.80, batch-reuse:1
@ 516 train 7.6684 , allloss: 13.0475, dt: 1141.49ms, fracRes: 0.0088, norm(attn): 0.2314, norm(output): 0.0388, norm(x): 0.0446, norm(y): 0.9911, norm:49.7006, tok/sec: 114825.70, flops:44.74, batch-reuse:1
@ 517 train 7.6365 , allloss: 13.6667, dt: 1168.43ms, fracRes: 0.0101, norm(attn): 0.2119, norm(output): 0.0393, norm(x): 0.0459, norm(y): 0.9914, norm:68.7469, tok/sec: 112177.50, flops:43.70, batch-reuse:1
@ 518 train 7.7318 , allloss: 12.5849, dt: 1168.73ms, fracRes: 0.0116, norm(attn): 0.2471, norm(output): 0.0388, norm(x): 0.0464, norm(y): 0.9911, norm:54.1500, tok/sec: 112149.06, flops:43.69, batch-reuse:1
@ 519 train 7.7404 , allloss: 14.8480, dt: 1151.38ms, fracRes: 0.0115, norm(attn): 0.2412, norm(output): 0.0388, norm(x): 0.0456, norm(y): 0.9906, norm:152.8360, tok/sec: 113839.53, flops:44.35, batch-reuse:1
@ 520 train 7.7685 , allloss: 12.1160, dt: 1133.69ms, fracRes: 0.0130, norm(attn): 0.2324, norm(output): 0.0386, norm(x): 0.0473, norm(y): 0.9912, norm:51.1311, tok/sec: 115614.93, flops:45.04, batch-reuse:1
@ 521 train 8.0539 , allloss: 20.5754, dt: 1155.48ms, fracRes: 0.0091, norm(attn): 0.2637, norm(output): 0.0417, norm(x): 0.0465, norm(y): 0.9906, norm:338.5411, tok/sec: 113435.47, flops:44.19, batch-reuse:1
@ 522 train 7.9749 , allloss: 13.6370, dt: 1160.62ms, fracRes: 0.0088, norm(attn): 0.3086, norm(output): 0.0334, norm(x): 0.0395, norm(y): 0.9900, norm:223.3055, tok/sec: 112932.84, flops:44.00, batch-reuse:1
@ 523 train 8.5093 , allloss: 13.7180, dt: 1147.10ms, fracRes: 0.0079, norm(attn): 0.3223, norm(output): 0.0344, norm(x): 0.0399, norm(y): 0.9900, norm:197.7229, tok/sec: 114263.96, flops:44.52, batch-reuse:1
@ 524 train 8.9527 , allloss: 11.1954, dt: 1130.77ms, fracRes: 0.0068, norm(attn): 0.4707, norm(output): 0.0292, norm(x): 0.0342, norm(y): 0.9887, norm:387.8889, tok/sec: 115913.72, flops:45.16, batch-reuse:1
@ 525 train 8.0773 , allloss: 11.0694, dt: 1146.98ms, fracRes: 0.0098, norm(attn): 0.3398, norm(output): 0.0349, norm(x): 0.0417, norm(y): 0.9902, norm:75.5036, tok/sec: 114275.65, flops:44.52, batch-reuse:1
@ 526 train 7.8569 , allloss: 14.8092, dt: 1134.43ms, fracRes: 0.0124, norm(attn): 0.2656, norm(output): 0.0388, norm(x): 0.0463, norm(y): 0.9909, norm:45.3406, tok/sec: 115540.14, flops:45.01, batch-reuse:1
@ 527 train 7.8465 , allloss: 21.1385, dt: 1132.54ms, fracRes: 0.0108, norm(attn): 0.2812, norm(output): 0.0425, norm(x): 0.0470, norm(y): 0.9904, norm:89.3865, tok/sec: 115732.63, flops:45.09, batch-reuse:1
@ 528 train 8.2099 , allloss: 19.8559, dt: 1137.79ms, fracRes: 0.0115, norm(attn): 0.2617, norm(output): 0.0405, norm(x): 0.0473, norm(y): 0.9907, norm:296.3741, tok/sec: 115199.13, flops:44.88, batch-reuse:1
@ 529 train 7.8525 , allloss: 14.1804, dt: 1157.97ms, fracRes: 0.0149, norm(attn): 0.2334, norm(output): 0.0405, norm(x): 0.0505, norm(y): 0.9913, norm:147.5387, tok/sec: 113191.40, flops:44.10, batch-reuse:1
@ 530 train 7.8155 , allloss: 13.0925, dt: 1156.09ms, fracRes: 0.0170, norm(attn): 0.2383, norm(output): 0.0405, norm(x): 0.0525, norm(y): 0.9913, norm:52.4718, tok/sec: 113375.25, flops:44.17, batch-reuse:1
@ 531 train 7.8238 , allloss: 13.3980, dt: 1178.02ms, fracRes: 0.0176, norm(attn): 0.2354, norm(output): 0.0413, norm(x): 0.0532, norm(y): 0.9914, norm:49.1426, tok/sec: 111264.30, flops:43.35, batch-reuse:1
@ 532 train 7.7359 , allloss: 14.6935, dt: 1141.94ms, fracRes: 0.0173, norm(attn): 0.2461, norm(output): 0.0403, norm(x): 0.0520, norm(y): 0.9914, norm:72.2762, tok/sec: 114779.98, flops:44.72, batch-reuse:1
@ 533 train 7.8716 , allloss: 13.5063, dt: 1153.71ms, fracRes: 0.0171, norm(attn): 0.2314, norm(output): 0.0415, norm(x): 0.0528, norm(y): 0.9912, norm:303.9335, tok/sec: 113608.89, flops:44.26, batch-reuse:1
@ 534 train 7.9611 , allloss: 11.7895, dt: 1149.31ms, fracRes: 0.0146, norm(attn): 0.2812, norm(output): 0.0376, norm(x): 0.0478, norm(y): 0.9908, norm:119.6233, tok/sec: 114043.97, flops:44.43, batch-reuse:1
@ 535 train 7.8325 , allloss: 12.1608, dt: 1134.60ms, fracRes: 0.0156, norm(attn): 0.2676, norm(output): 0.0369, norm(x): 0.0478, norm(y): 0.9908, norm:73.4643, tok/sec: 115522.59, flops:45.01, batch-reuse:1
@ 536 train 7.8337 , allloss: 13.4532, dt: 1149.00ms, fracRes: 0.0133, norm(attn): 0.2461, norm(output): 0.0371, norm(x): 0.0460, norm(y): 0.9908, norm:85.4567, tok/sec: 114074.64, flops:44.44, batch-reuse:1
@ 537 train 7.7133 , allloss: 15.5434, dt: 1151.32ms, fracRes: 0.0145, norm(attn): 0.2393, norm(output): 0.0386, norm(x): 0.0475, norm(y): 0.9912, norm:62.3173, tok/sec: 113844.51, flops:44.35, batch-reuse:1
@ 538 train 7.5639 , allloss: 13.9462, dt: 1140.33ms, fracRes: 0.0158, norm(attn): 0.2148, norm(output): 0.0383, norm(x): 0.0489, norm(y): 0.9917, norm:53.7572, tok/sec: 114942.64, flops:44.78, batch-reuse:1
@ 539 train 7.6788 , allloss: 13.1115, dt: 1125.35ms, fracRes: 0.0154, norm(attn): 0.2070, norm(output): 0.0371, norm(x): 0.0480, norm(y): 0.9916, norm:42.4315, tok/sec: 116472.58, flops:45.38, batch-reuse:1
@ 540 train 7.7194 , allloss: 13.4244, dt: 1142.30ms, fracRes: 0.0129, norm(attn): 0.2080, norm(output): 0.0361, norm(x): 0.0450, norm(y): 0.9912, norm:38.7908, tok/sec: 114743.71, flops:44.70, batch-reuse:1
@ 541 train 7.7145 , allloss: 14.2691, dt: 1175.53ms, fracRes: 0.0112, norm(attn): 0.2051, norm(output): 0.0354, norm(x): 0.0431, norm(y): 0.9912, norm:97.5221, tok/sec: 111500.03, flops:43.44, batch-reuse:1
@ 542 train 7.9662 , allloss: 14.1153, dt: 1188.41ms, fracRes: 0.0112, norm(attn): 0.2295, norm(output): 0.0354, norm(x): 0.0428, norm(y): 0.9909, norm:95.5426, tok/sec: 110292.14, flops:42.97, batch-reuse:1
@ 543 train 7.9157 , allloss: 14.5946, dt: 1162.43ms, fracRes: 0.0112, norm(attn): 0.2109, norm(output): 0.0364, norm(x): 0.0435, norm(y): 0.9909, norm:66.2387, tok/sec: 112757.05, flops:43.93, batch-reuse:1
@ 544 train 7.8204 , allloss: 14.6446, dt: 1173.10ms, fracRes: 0.0107, norm(attn): 0.2344, norm(output): 0.0349, norm(x): 0.0414, norm(y): 0.9908, norm:65.1426, tok/sec: 111731.02, flops:43.53, batch-reuse:1
@ 545 train 7.7296 , allloss: 14.0690, dt: 1130.80ms, fracRes: 0.0117, norm(attn): 0.2051, norm(output): 0.0383, norm(x): 0.0455, norm(y): 0.9915, norm:59.3417, tok/sec: 115910.81, flops:45.16, batch-reuse:1
@ 546 train 7.7654 , allloss: 14.8642, dt: 1153.01ms, fracRes: 0.0107, norm(attn): 0.1973, norm(output): 0.0376, norm(x): 0.0446, norm(y): 0.9912, norm:161.3088, tok/sec: 113678.55, flops:44.29, batch-reuse:1
@ 547 train 7.8303 , allloss: 15.3929, dt: 1181.08ms, fracRes: 0.0119, norm(attn): 0.2021, norm(output): 0.0400, norm(x): 0.0473, norm(y): 0.9915, norm:57.2448, tok/sec: 110976.34, flops:43.24, batch-reuse:1
@ 548 train 7.8045 , allloss: 19.3984, dt: 1164.33ms, fracRes: 0.0108, norm(attn): 0.1943, norm(output): 0.0439, norm(x): 0.0493, norm(y): 0.9915, norm:60.3172, tok/sec: 112572.48, flops:43.86, batch-reuse:1
@ 549 train 7.7494 , allloss: 19.1183, dt: 1168.64ms, fracRes: 0.0110, norm(attn): 0.1816, norm(output): 0.0439, norm(x): 0.0499, norm(y): 0.9914, norm:52.6765, tok/sec: 112158.03, flops:43.70, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.7266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.3711, 0.3066, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.3594, 0.2178, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.2754, 0.2891, 0.1338, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.2109, 0.3438, 0.1250, 0.1699, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1328, 0.2852, 0.1602, 0.1113, 0.0693, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.0723, 0.1104, 0.0957, 0.1309, 0.1953, 0.1021, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.2119, 0.1689, 0.1235, 0.1089, 0.0334, 0.0718, 0.1689, 0.0447, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1094, 0.1045, 0.0752, 0.1592, 0.1182, 0.0659, 0.1279, 0.0723, 0.1045, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0559, 0.2070, 0.1455, 0.1865, 0.1025, 0.0422, 0.0391, 0.0874, 0.0586, 0.0208, 0.0557, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.0571, 0.0659, 0.0884, 0.0903, 0.1055, 0.1523, 0.1152, 0.0625, 0.0713, 0.0488, 0.0520, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0349, 0.0454, 0.0505, 0.0669, 0.1797, 0.1504, 0.0752, 0.0938, 0.0659, 0.0718, 0.0364, 0.0559, 0.0000, 0.0000],
        [0.0601, 0.1089, 0.1104, 0.1348, 0.0498, 0.0479, 0.0515, 0.0996, 0.0339, 0.0737, 0.0354, 0.0620, 0.0771, 0.0547, 0.0000],
        [0.0698, 0.0515, 0.0752, 0.0791, 0.0923, 0.0503, 0.0498, 0.1021, 0.0527, 0.1084, 0.0579, 0.0566, 0.0588, 0.0425, 0.0535]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0122, -0.0016,  0.0071,  ..., -0.0030, -0.0313, -0.0052],
        [-0.0402,  0.0132, -0.0183,  ..., -0.0002, -0.0212, -0.0150],
        [-0.0153,  0.0080,  0.0317,  ..., -0.0078, -0.0347, -0.0022],
        ...,
        [ 0.0339,  0.0136,  0.0306,  ..., -0.0256,  0.0187, -0.0120],
        [ 0.0222, -0.0111,  0.0110,  ...,  0.0064,  0.0148, -0.0180],
        [ 0.0319,  0.0148,  0.0114,  ..., -0.0489,  0.0402,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([-0.3691, -1.3672, -0.2891,  0.3438,  1.1797,  0.6836, -0.1689, -0.4922,  0.4883,  0.0034,  0.3320,  0.9453, -0.1465, -0.5195,  0.0298,  0.5000,  0.8789,  0.7383,  0.3047,  1.0156, -0.7227,  0.7461,  0.5234,  1.3984, -0.1523, -0.8164, -0.3770,  0.2812, -0.2354, -0.0767,  0.2969,  0.1279,
        -1.4219,  0.0664, -0.7109, -1.2422,  0.0942, -0.5742,  0.9844,  0.5781, -0.2852,  0.4043, -0.5938,  0.5117,  0.1084, -0.1299,  0.0574,  0.4863,  0.0403,  0.1982, -0.1079, -0.2754,  0.7344, -0.6602,  0.2100, -1.4297,  0.0957, -0.4922, -0.6836, -0.5547, -0.8945,  0.3594,  0.1787, -0.8906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0094, -0.0009,  0.0189,  ...,  0.0052, -0.0201,  0.0053],
        [-0.0523,  0.0043, -0.0038,  ...,  0.0082,  0.0195, -0.0578],
        [ 0.0143, -0.0051,  0.0244,  ..., -0.0208,  0.0023, -0.0078],
        ...,
        [ 0.0039,  0.0035,  0.0156,  ...,  0.0175,  0.0138, -0.0022],
        [ 0.0197, -0.0321, -0.0131,  ...,  0.0268,  0.0252, -0.0167],
        [ 0.0242,  0.0040,  0.0074,  ...,  0.0262,  0.0221, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8203, -0.2295, -0.0659, -0.7852, -0.3711,  0.9883,  0.5000, -0.0923,  0.2031, -0.1533, -1.5312,  0.0273,  1.0391,  0.0195, -0.9883,  0.1011,  0.2520, -0.2354, -0.8047,  0.7422,  0.0186, -0.1660, -0.4531,  0.4355, -0.4434,  0.2754, -0.7773, -0.6562, -0.7578, -0.1602,  0.7227, -0.6250,
         0.3848,  0.1631,  0.3848,  0.5664, -0.1328, -0.2617,  0.2041,  0.4609,  0.8945,  0.9414, -0.9219,  0.3984,  0.3164,  0.5352, -0.1201, -0.7188, -0.1709,  0.0173,  0.5469, -0.2109, -0.5234,  0.6680, -0.1836,  1.0156,  0.6523,  0.3047,  0.1807, -0.7070,  0.2715, -0.0364, -0.4199, -0.2832],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.9844,  0.4180,  0.1133,  0.7227, -0.4043, -0.0933, -0.0737,  0.3418, -0.3164,  0.1260,  0.5977,  0.2227,  0.2363, -0.3789],
        [ 0.0000,  0.1357, -0.0537, -0.2871,  0.1187,  0.8633,  0.6562, -0.2012,  0.4023,  0.1245,  0.3574, -0.3848, -0.1865,  0.2246, -0.0781],
        [ 0.0000,  0.6641,  0.1641,  0.2539,  0.3477, -0.1533,  0.0066,  0.3809,  0.1621, -0.2119,  0.4219,  0.1416, -0.2520, -0.0947,  0.1069],
        [ 0.0000,  1.3359,  1.3828,  0.6172,  1.1562, -0.4570, -0.1758,  0.4609,  0.1377, -0.5430,  0.1885,  0.7578,  0.5117, -0.0933, -0.4121],
        [ 0.0000,  0.7539,  1.2422,  0.2363,  0.5391, -0.6562,  0.0967,  0.1934,  0.0625, -0.1455, -0.7617,  0.5391,  0.4434,  0.1924, -0.4531],
        [ 0.0000, -0.0903,  0.6758,  0.0972, -0.2637, -0.7344, -0.4004,  0.2793, -0.0189, -0.4004, -0.7031,  0.1099,  0.1187,  0.1494, -0.1709],
        [ 0.0000, -0.5664, -0.1445, -0.2852,  0.0275,  0.4297, -0.2197,  0.2676, -0.1846,  0.0659, -0.1816, -0.2793, -0.1475, -0.3184,  0.0859],
        [ 0.0000,  1.1484,  0.9180,  0.6055,  0.4805, -0.6992,  0.0649,  0.9180, -0.4121,  0.1680, -0.8945, -0.0684, -0.1260, -0.0420,  0.0488],
        [ 0.0000, -0.0447, -0.3750,  0.3730,  0.0757, -0.5078,  0.1533, -0.4141, -0.0447, -0.5547, -0.1631,  0.2832,  0.0025, -0.3613,  0.3496],
        [ 0.0000,  1.3047,  0.9570,  1.2031,  0.6055, -0.2832, -0.3613,  0.4453,  0.0474, -0.9922, -0.0067,  0.6211,  0.5195,  0.2500,  0.3281],
        [ 0.0000, -0.4629, -0.3164, -0.0262, -0.0021,  0.1514,  0.5234,  0.2393, -0.3711, -0.2363, -0.6172, -0.5586,  0.0144, -0.2773,  0.1187],
        [ 0.0000, -0.7461, -0.4785, -0.3730, -0.0918,  0.8906,  0.7188,  0.0253,  0.2422, -0.1108, -0.0259, -0.7031, -0.2734,  0.0405,  0.2891],
        [ 0.0000,  0.5938,  0.6094,  0.8086, -0.1885, -0.2285, -0.1553,  0.5078, -0.5703,  0.2041, -0.5273,  0.0330,  0.2480, -0.0947, -0.3027],
        [ 0.0000, -0.3047,  0.0718,  0.1230,  0.2793, -0.3301, -0.3398,  0.3809, -0.2812,  0.4375, -0.1875, -0.2100, -0.1729, -0.5000, -0.2676]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2117],
        [0.2586],
        [0.1460],
        [0.0627],
        [0.0767],
        [0.1007],
        [0.1300],
        [0.0629],
        [0.0907],
        [0.0447],
        [0.0894],
        [0.0793],
        [0.0468],
        [0.0614]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.7305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3262, 0.3730, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.3613, 0.2158, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.2656, 0.3164, 0.1475, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1021, 0.1992, 0.3828, 0.1240, 0.1445, 0.0461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.1387, 0.2969, 0.1523, 0.0972, 0.0608, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0698, 0.1064, 0.1069, 0.1279, 0.1826, 0.1055, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.2012, 0.1738, 0.1299, 0.1025, 0.0293, 0.0767, 0.1777, 0.0413, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.0938, 0.0723, 0.1699, 0.1206, 0.0679, 0.1299, 0.0796, 0.1030, 0.0559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.1816, 0.1787, 0.1914, 0.0830, 0.0369, 0.0422, 0.1094, 0.0515, 0.0236, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0513, 0.0608, 0.0884, 0.0991, 0.0991, 0.1592, 0.1113, 0.0669, 0.0654, 0.0557, 0.0588, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0349, 0.0447, 0.0557, 0.0742, 0.1572, 0.1553, 0.0742, 0.0923, 0.0674, 0.0757, 0.0422, 0.0564, 0.0000, 0.0000],
        [0.0605, 0.1011, 0.1230, 0.1377, 0.0476, 0.0388, 0.0518, 0.1152, 0.0298, 0.0635, 0.0298, 0.0801, 0.0781, 0.0430, 0.0000],
        [0.0708, 0.0522, 0.0728, 0.0815, 0.0933, 0.0525, 0.0608, 0.0913, 0.0574, 0.0972, 0.0591, 0.0635, 0.0513, 0.0474, 0.0486]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0122, -0.0016,  0.0071,  ..., -0.0030, -0.0313, -0.0052],
        [-0.0402,  0.0132, -0.0183,  ..., -0.0002, -0.0212, -0.0150],
        [-0.0153,  0.0080,  0.0317,  ..., -0.0078, -0.0347, -0.0022],
        ...,
        [ 0.0339,  0.0136,  0.0306,  ..., -0.0256,  0.0187, -0.0120],
        [ 0.0222, -0.0111,  0.0110,  ...,  0.0064,  0.0148, -0.0180],
        [ 0.0319,  0.0148,  0.0114,  ..., -0.0489,  0.0402,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([    -0.5039,     -1.5234,     -0.0659,      0.2871,      1.2344,      0.6914,     -0.0205,     -0.7539,      0.7930,      0.2891,      0.4121,      0.8945,     -0.2656,      0.1299,     -0.1240,      0.5859,      0.7773,      0.5625,      0.4434,      0.9375,     -0.6758,      1.1094,
             0.4609,      1.3203,      0.2158,     -0.7422,     -0.1689,      0.1836,     -0.3945,     -0.1201,      0.2988,      0.2129,     -1.6562,     -0.0801,     -0.5977,     -1.3359,      0.0085,     -0.6016,      0.9492,      0.8828,     -0.3145,      0.3262,     -0.4062,      0.5859,
            -0.0258,     -0.1582,     -0.1494,      0.7422,     -0.1270,      0.1406,      0.0012,     -0.2539,      0.7695,     -0.6172,      0.1846,     -1.3281,      0.0815,     -0.4277,     -0.6875,     -0.6758,     -0.7812,      0.0136,      0.5859,     -0.7383], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0094, -0.0009,  0.0189,  ...,  0.0052, -0.0201,  0.0053],
        [-0.0523,  0.0043, -0.0038,  ...,  0.0082,  0.0195, -0.0578],
        [ 0.0143, -0.0051,  0.0244,  ..., -0.0208,  0.0023, -0.0078],
        ...,
        [ 0.0039,  0.0035,  0.0156,  ...,  0.0175,  0.0138, -0.0022],
        [ 0.0197, -0.0321, -0.0131,  ...,  0.0268,  0.0252, -0.0167],
        [ 0.0242,  0.0040,  0.0074,  ...,  0.0262,  0.0221, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0312, -0.3867, -0.2988, -0.7812, -0.4883,  0.8867,  0.2324, -0.2168,  0.1030,  0.1104, -1.5703,  0.0588,  1.0391,  0.0635, -1.1250, -0.0186,  0.3281, -0.1953, -0.9258,  0.7891,  0.0369, -0.0854, -0.3730,  0.3652, -0.2617,  0.5586, -0.7109, -0.4453, -0.7578, -0.3926,  0.7188, -0.3613,
         0.3398,  0.0540,  0.2090,  0.6875, -0.0535, -0.2773,  0.4336,  0.3340,  0.9297,  0.8398, -1.1328,  0.3984,  0.3320,  0.4961,  0.2695, -0.7422, -0.4707,  0.2070,  0.6758, -0.1357, -0.2930,  0.9219, -0.3027,  1.1484,  0.7305,  0.0547,  0.2812, -0.4785,  0.3672,  0.0398, -0.4863, -0.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.9883,  0.4395,  0.0957,  0.6250, -0.5156, -0.1084, -0.0354,  0.2715, -0.4141, -0.0029,  0.5859,  0.1914,  0.1328, -0.4219],
        [ 0.0000,  0.1348, -0.0854, -0.3047,  0.1738,  0.8242,  0.6602, -0.2100,  0.3242,  0.1523,  0.4629, -0.4531, -0.2451,  0.1533, -0.1162],
        [ 0.0000,  0.6406,  0.1270,  0.1934,  0.1494, -0.3281,  0.0325,  0.3672,  0.1108, -0.3398,  0.2080,  0.1729, -0.3438, -0.2188, -0.0732],
        [ 0.0000,  1.1641,  1.3359,  0.5742,  0.8281, -0.5938, -0.2676,  0.5039, -0.1396, -0.6055, -0.0693,  0.7500,  0.3730, -0.3613, -0.5039],
        [ 0.0000,  0.6719,  1.3281,  0.1992,  0.3535, -0.7930, -0.0239,  0.2891, -0.0718, -0.3105, -1.0391,  0.5703,  0.4199, -0.1118, -0.4863],
        [ 0.0000, -0.1196,  0.6484, -0.0208, -0.4707, -0.9414, -0.4609,  0.2031, -0.2500, -0.5898, -1.0078,  0.0408, -0.0708, -0.1807, -0.4062],
        [ 0.0000, -0.6602, -0.2402, -0.2324, -0.0574,  0.2988, -0.2480,  0.2061, -0.2969, -0.0786, -0.2539, -0.2051, -0.2188, -0.4336, -0.1914],
        [ 0.0000,  1.0938,  0.9414,  0.6562,  0.4199, -0.8359,  0.1279,  0.9688, -0.4941,  0.0996, -0.9531,  0.0154, -0.2070, -0.1924, -0.0250],
        [ 0.0000, -0.1348, -0.3945,  0.4590,  0.1191, -0.4531,  0.1943, -0.3008, -0.0405, -0.6484, -0.0884,  0.3398, -0.0371, -0.3730,  0.3301],
        [ 0.0000,  1.0547,  1.0391,  1.1016,  0.2676, -0.5469, -0.4062,  0.5430, -0.2070, -0.9922, -0.5078,  0.7891,  0.5312, -0.2246,  0.1133],
        [ 0.0000, -0.4961, -0.3242,  0.0498,  0.1680,  0.1660,  0.6406,  0.2793, -0.2266, -0.2490, -0.4102, -0.3555,  0.0928, -0.0649,  0.1729],
        [ 0.0000, -0.7031, -0.4570, -0.2344,  0.0518,  0.8008,  0.7891,  0.0549,  0.2676, -0.0479,  0.0693, -0.5117, -0.2236,  0.0447,  0.1611],
        [ 0.0000,  0.5117,  0.7109,  0.8203, -0.2393, -0.4473, -0.1572,  0.6445, -0.7070,  0.0505, -0.7109,  0.2793,  0.2578, -0.3457, -0.3906],
        [ 0.0000, -0.3066,  0.0249,  0.1406,  0.2734, -0.3008, -0.1523,  0.2539, -0.2109,  0.3145, -0.1846, -0.1108, -0.3262, -0.4062, -0.3789]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2009],
        [0.2505],
        [0.1364],
        [0.0614],
        [0.0734],
        [0.0966],
        [0.1292],
        [0.0597],
        [0.0880],
        [0.0420],
        [0.0867],
        [0.0779],
        [0.0454],
        [0.0585]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.7227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.3730, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1992, 0.3613, 0.2148, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.2520, 0.3320, 0.1650, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1875, 0.4121, 0.1235, 0.1250, 0.0430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1436, 0.3008, 0.1445, 0.0874, 0.0552, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.0693, 0.1030, 0.1206, 0.1226, 0.1650, 0.1108, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.1836, 0.1719, 0.1348, 0.0947, 0.0289, 0.0869, 0.1875, 0.0415, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.0845, 0.0693, 0.1748, 0.1221, 0.0698, 0.1338, 0.0903, 0.0977, 0.0535, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1426, 0.1934, 0.1768, 0.0723, 0.0361, 0.0525, 0.1406, 0.0474, 0.0339, 0.0298, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0476, 0.0571, 0.0908, 0.1030, 0.0923, 0.1592, 0.1069, 0.0718, 0.0623, 0.0630, 0.0674, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0378, 0.0461, 0.0640, 0.0806, 0.1289, 0.1504, 0.0781, 0.0879, 0.0688, 0.0762, 0.0508, 0.0593, 0.0000, 0.0000],
        [0.0625, 0.0942, 0.1245, 0.1279, 0.0481, 0.0330, 0.0571, 0.1260, 0.0288, 0.0576, 0.0289, 0.1001, 0.0757, 0.0356, 0.0000],
        [0.0723, 0.0540, 0.0693, 0.0840, 0.0850, 0.0542, 0.0747, 0.0830, 0.0615, 0.0854, 0.0554, 0.0718, 0.0498, 0.0522, 0.0469]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0122, -0.0016,  0.0071,  ..., -0.0030, -0.0313, -0.0052],
        [-0.0402,  0.0132, -0.0183,  ..., -0.0002, -0.0212, -0.0150],
        [-0.0153,  0.0080,  0.0317,  ..., -0.0078, -0.0347, -0.0022],
        ...,
        [ 0.0339,  0.0136,  0.0306,  ..., -0.0256,  0.0187, -0.0120],
        [ 0.0222, -0.0111,  0.0110,  ...,  0.0064,  0.0148, -0.0180],
        [ 0.0319,  0.0148,  0.0114,  ..., -0.0489,  0.0402,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([-0.5977, -1.5625,  0.0903,  0.1963,  1.2031,  0.6602,  0.1455, -0.8672,  1.0000,  0.5234,  0.4629,  0.8203, -0.3594,  0.6641, -0.2715,  0.5938,  0.6445,  0.3652,  0.5938,  0.8086, -0.6406,  1.2969,  0.3125,  1.1406,  0.5391, -0.6289,  0.0264,  0.0649, -0.5156, -0.1758,  0.2637,  0.2812,
        -1.7734, -0.2217, -0.4551, -1.2891, -0.0698, -0.6211,  0.8672,  1.1172, -0.2559,  0.2275, -0.2559,  0.5977, -0.1196, -0.1426, -0.3730,  0.9570, -0.2695,  0.0767,  0.1113, -0.2051,  0.7422, -0.5000,  0.1416, -1.1953,  0.0869, -0.3906, -0.6289, -0.7305, -0.6055, -0.3750,  0.9062, -0.5859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0094, -0.0009,  0.0189,  ...,  0.0052, -0.0201,  0.0053],
        [-0.0523,  0.0043, -0.0038,  ...,  0.0082,  0.0195, -0.0578],
        [ 0.0143, -0.0051,  0.0244,  ..., -0.0208,  0.0023, -0.0078],
        ...,
        [ 0.0039,  0.0035,  0.0156,  ...,  0.0175,  0.0138, -0.0022],
        [ 0.0197, -0.0321, -0.0131,  ...,  0.0268,  0.0252, -0.0167],
        [ 0.0242,  0.0040,  0.0074,  ...,  0.0262,  0.0221, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.1797, -0.5430, -0.4980, -0.7383, -0.5898,  0.7578, -0.0879, -0.3047, -0.0118,  0.3496, -1.4688,  0.0708,  0.9375,  0.1250, -1.1172, -0.1377,  0.3730, -0.1367, -0.9766,  0.7734,  0.0688, -0.0187, -0.2070,  0.2852, -0.0659,  0.7578, -0.5586, -0.2363, -0.7344, -0.5938,  0.6055, -0.1709,
         0.2617, -0.0503,  0.0532,  0.7969,  0.0053, -0.2891,  0.6406,  0.1348,  0.8945,  0.7109, -1.2266,  0.3652,  0.3047,  0.4004,  0.6445, -0.6719, -0.6523,  0.3672,  0.7578, -0.0576, -0.1187,  1.0859, -0.3555,  1.2578,  0.7891, -0.1982,  0.3496, -0.2148,  0.4219,  0.1016, -0.4531, -0.3301],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.9648,  0.4453,  0.0742,  0.4551, -0.6094, -0.1133,  0.0236,  0.1709, -0.4863, -0.1914,  0.5312,  0.1533,  0.0117, -0.4219],
        [ 0.0000,  0.1201, -0.1138, -0.3184,  0.2041,  0.7383,  0.6328, -0.2188,  0.2109,  0.1631,  0.4746, -0.4902, -0.2852,  0.0623, -0.1436],
        [ 0.0000,  0.5977,  0.0757,  0.1143, -0.0869, -0.5078,  0.0432,  0.3418,  0.0186, -0.4473, -0.0840,  0.1885, -0.4062, -0.3301, -0.2441],
        [ 0.0000,  0.9180,  1.1953,  0.4961,  0.4180, -0.6992, -0.3105,  0.5352, -0.4082, -0.6094, -0.4141,  0.6914,  0.2275, -0.6133, -0.5469],
        [ 0.0000,  0.5508,  1.3359,  0.1318,  0.1455, -0.9219, -0.1128,  0.4082, -0.2227, -0.4043, -1.2031,  0.5820,  0.4023, -0.4023, -0.4844],
        [ 0.0000, -0.1455,  0.5977, -0.1396, -0.6406, -1.1016, -0.4785,  0.1436, -0.4453, -0.7266, -1.1953, -0.0016, -0.2637, -0.4609, -0.5898],
        [ 0.0000, -0.7461, -0.3457, -0.1875, -0.1738,  0.1260, -0.2715,  0.1089, -0.3809, -0.2539, -0.3516, -0.1592, -0.3047, -0.4707, -0.4355],
        [ 0.0000,  0.9609,  0.8906,  0.6484,  0.2969, -0.8867,  0.2100,  0.9805, -0.5312,  0.0630, -0.9062,  0.1270, -0.2236, -0.3340, -0.0825],
        [ 0.0000, -0.2197, -0.4180,  0.5078,  0.1484, -0.4082,  0.2422, -0.1504, -0.0737, -0.6719, -0.0571,  0.3340, -0.0840, -0.3613,  0.2969],
        [ 0.0000,  0.6445,  0.9531,  0.8594, -0.0376, -0.7266, -0.3555,  0.6289, -0.4590, -0.7891, -0.9219,  0.8164,  0.4492, -0.6367, -0.0364],
        [ 0.0000, -0.5039, -0.3203,  0.1406,  0.2676,  0.1611,  0.7031,  0.3047, -0.0908, -0.2344, -0.2207, -0.1543,  0.1562,  0.0806,  0.2080],
        [ 0.0000, -0.6133, -0.4121, -0.0830,  0.1475,  0.6172,  0.7695,  0.1138,  0.2334, -0.0109,  0.0913, -0.3164, -0.1611,  0.0150,  0.0275],
        [ 0.0000,  0.4062,  0.6836,  0.7148, -0.2656, -0.6406, -0.0952,  0.6953, -0.7773, -0.0830, -0.7734,  0.4668,  0.1875, -0.5664, -0.3867],
        [ 0.0000, -0.2910, -0.0378,  0.1504,  0.1650, -0.2852,  0.0344,  0.1396, -0.1611,  0.1709, -0.2637, -0.0028, -0.3711, -0.3242, -0.4316]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1954],
        [0.2443],
        [0.1300],
        [0.0656],
        [0.0745],
        [0.0947],
        [0.1288],
        [0.0603],
        [0.0863],
        [0.0448],
        [0.0838],
        [0.0770],
        [0.0474],
        [0.0570]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3535, 0.6445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3828, 0.3457, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3027, 0.2773, 0.1973, 0.2236, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.1885, 0.2031, 0.2314, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1709, 0.1709, 0.1895, 0.1680, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.1484, 0.1328, 0.1279, 0.1099, 0.0952, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1621, 0.1250, 0.0806, 0.1641, 0.1113, 0.1216, 0.1328, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.0845, 0.0889, 0.1011, 0.0977, 0.0864, 0.1631, 0.1904, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.1172, 0.0947, 0.0874, 0.1045, 0.0703, 0.1187, 0.1416, 0.0674, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0864, 0.0762, 0.0708, 0.0879, 0.0747, 0.1201, 0.1206, 0.0811, 0.1167, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0815, 0.0786, 0.0913, 0.0918, 0.0850, 0.1172, 0.1250, 0.0613, 0.0869, 0.0645, 0.0527, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1035, 0.0796, 0.0698, 0.0737, 0.0581, 0.0913, 0.1216, 0.0608, 0.0889, 0.0583, 0.0625, 0.0564, 0.0000, 0.0000],
        [0.0825, 0.0698, 0.0713, 0.0586, 0.0742, 0.0559, 0.0811, 0.1157, 0.0593, 0.0796, 0.0576, 0.0786, 0.0542, 0.0618, 0.0000],
        [0.0625, 0.0669, 0.0625, 0.0608, 0.0679, 0.0496, 0.1055, 0.1133, 0.0498, 0.0747, 0.0510, 0.0623, 0.0574, 0.0532, 0.0625]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0122, -0.0016,  0.0071,  ..., -0.0030, -0.0313, -0.0052],
        [-0.0402,  0.0132, -0.0183,  ..., -0.0002, -0.0212, -0.0150],
        [-0.0153,  0.0080,  0.0317,  ..., -0.0078, -0.0347, -0.0022],
        ...,
        [ 0.0339,  0.0136,  0.0306,  ..., -0.0256,  0.0187, -0.0120],
        [ 0.0222, -0.0111,  0.0110,  ...,  0.0064,  0.0148, -0.0180],
        [ 0.0319,  0.0148,  0.0114,  ..., -0.0489,  0.0402,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([-0.2363, -0.6016, -0.6641,  0.6562, -0.4180,  0.6016,  0.5508,  0.3555,  0.6836, -0.2373, -0.4707,  1.3047, -0.6992,  0.9023, -0.7930,  0.9219,  0.5820, -1.0781,  0.4922,  0.6680, -0.5039,  0.3750, -0.5430,  0.0796,  0.9570,  0.3711,  0.0991, -0.7891, -0.3281, -0.9297, -0.4375, -0.4805,
        -0.0801, -0.2090, -0.5195, -0.8398,  0.0378,  0.1973,  0.3398,  0.1943, -0.5547, -0.5234, -0.9961,  0.5273, -0.0776,  0.2578, -0.0684,  0.4805, -0.5703, -0.0332,  0.0737, -0.3672,  0.3477, -1.2734, -0.8633, -0.5195, -0.2930, -0.6914,  0.8164,  0.4922, -0.0571, -0.4551, -0.0094,  0.6602],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0094, -0.0009,  0.0189,  ...,  0.0052, -0.0201,  0.0053],
        [-0.0523,  0.0043, -0.0038,  ...,  0.0082,  0.0195, -0.0578],
        [ 0.0143, -0.0051,  0.0244,  ..., -0.0208,  0.0023, -0.0078],
        ...,
        [ 0.0039,  0.0035,  0.0156,  ...,  0.0175,  0.0138, -0.0022],
        [ 0.0197, -0.0321, -0.0131,  ...,  0.0268,  0.0252, -0.0167],
        [ 0.0242,  0.0040,  0.0074,  ...,  0.0262,  0.0221, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6914, -0.5000,  0.1270, -0.3105,  0.5273, -0.2080, -1.2812, -1.0703,  0.0500,  0.3516, -0.3203, -0.0447,  1.3359,  1.0859, -0.7031,  0.6016,  0.2695,  0.0718,  0.7344,  0.9023,  0.6602,  0.4863, -1.1094,  0.1973,  0.4688,  0.3594, -0.2148,  0.0036,  0.5859, -0.3008,  0.3008, -0.7227,
         0.0100,  0.3418,  0.0302,  0.7578, -0.1777,  0.3770,  0.3281, -0.8594,  0.4980,  0.8203,  0.0250, -0.4805,  0.2637,  0.1572,  0.5352, -0.3906, -0.2734,  0.1572,  0.0898, -0.0022,  0.0874, -0.1045,  0.1865,  0.8320,  0.6406, -0.5742, -0.2930, -0.3242, -0.5977, -0.2500, -0.3672,  0.3496],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.6016,      0.0090,      0.0112,      0.0182,     -0.1406,      0.4102,      0.4609,     -0.1279,     -0.0120,      0.0593,     -0.0069,      0.1855,      0.0649,     -0.0225],
        [     0.0000,     -0.1055,     -0.3477,     -0.1631,      0.0244,     -0.0325,      0.2246,      0.0708,      0.1797,      0.2715,      0.2695,      0.2471,      0.2070,      0.1924,      0.1953],
        [     0.0000,     -0.0918,     -0.4316,     -0.3047,     -0.4395,     -0.4199,      0.2578,      0.5508,     -0.3086,     -0.4805,     -0.1973,      0.0569,      0.1455,     -0.2441,     -0.1523],
        [     0.0000,      0.0112,      0.0840,      0.2148,      0.0275,     -0.0002,      0.5352,      0.5586,     -0.0286,      0.1572,      0.0908,      0.4609,      0.1709,      0.2520,      0.2539],
        [     0.0000,      0.0432,      0.0427,      0.1416,      0.0220,     -0.1855,      0.6016,      0.7656,     -0.1201,      0.0339,      0.0020,      0.4961,      0.3047,      0.0036,      0.0952],
        [     0.0000,     -0.3359,     -0.4434,     -0.4824,     -0.6328,     -0.7812,     -0.1514,      0.1514,     -0.6562,     -0.6719,     -0.4609,     -0.3438,     -0.4824,     -0.5820,     -0.6523],
        [     0.0000,     -0.2578,     -0.6992,      0.0156,     -0.3750,     -0.2852,     -0.2021,     -0.4570,     -0.3965,     -0.3203,     -0.6445,     -0.3066,     -0.4707,     -0.6133,     -0.6445],
        [     0.0000,     -0.3203,     -0.2656,     -0.1377,     -0.1729,     -0.2969,      0.3398,      0.4941,     -0.4805,     -0.3164,     -0.4844,      0.0209,     -0.3105,     -0.3926,     -0.1846],
        [     0.0000,      0.1514,     -0.0603,     -0.1396,      0.0364,     -0.3574,      0.1641,      0.3398,     -0.4023,     -0.0183,     -0.3418,     -0.1885,     -0.2793,     -0.2256,     -0.3945],
        [     0.0000,      0.0260,     -0.1001,     -0.1768,      0.0439,     -0.1216,      0.3555,      0.3594,     -0.0374,      0.3242,     -0.0457,      0.2617,      0.0444,      0.2490,      0.0698],
        [     0.0000,      0.2490,      0.2139,      0.3652,      0.3691,      0.2930,      0.6133,      0.6797,     -0.0361,      0.3145,      0.0146,     -0.1865,      0.1709,     -0.0547,      0.0288],
        [     0.0000,      0.3242,      0.0618,     -0.0723,     -0.0157,     -0.2539,      0.1973,      0.4863,     -0.2100,      0.1719,     -0.2520,     -0.1807,     -0.2852,     -0.2314,     -0.2930],
        [     0.0000,     -0.1709,     -0.1504,     -0.3457,     -0.1074,     -0.3887,     -0.0187,      0.3379,     -0.3301,     -0.0393,     -0.3613,     -0.0496,     -0.4219,     -0.2930,     -0.2598],
        [     0.0000,      0.0664,      0.0003,     -0.0291,      0.0791,     -0.2363,      0.5195,      0.5898,     -0.2285,      0.1748,     -0.2031,     -0.0038,     -0.0859,     -0.1611,      0.0015]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2788],
        [0.2611],
        [0.1635],
        [0.1471],
        [0.1420],
        [0.1372],
        [0.1322],
        [0.1057],
        [0.0972],
        [0.0935],
        [0.0850],
        [0.0852],
        [0.0865],
        [0.0754]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.6445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3867, 0.3418, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.2637, 0.1924, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.1895, 0.2031, 0.2275, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.1758, 0.1631, 0.1924, 0.1621, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2012, 0.1514, 0.1270, 0.1270, 0.1138, 0.1016, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1465, 0.0840, 0.1582, 0.1104, 0.1187, 0.1270, 0.0972, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.0898, 0.0972, 0.0977, 0.1001, 0.0874, 0.1621, 0.1709, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0972, 0.1318, 0.1064, 0.0791, 0.1064, 0.0708, 0.1147, 0.1338, 0.0630, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1025, 0.0869, 0.0669, 0.0908, 0.0752, 0.1099, 0.1123, 0.0786, 0.1162, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0898, 0.0859, 0.0923, 0.0879, 0.0840, 0.1191, 0.1270, 0.0566, 0.0850, 0.0618, 0.0481, 0.0000, 0.0000, 0.0000],
        [0.0747, 0.1152, 0.0894, 0.0669, 0.0742, 0.0603, 0.0918, 0.1177, 0.0581, 0.0884, 0.0576, 0.0557, 0.0500, 0.0000, 0.0000],
        [0.0845, 0.0845, 0.0845, 0.0554, 0.0776, 0.0576, 0.0757, 0.1011, 0.0586, 0.0845, 0.0586, 0.0654, 0.0486, 0.0630, 0.0000],
        [0.0635, 0.0781, 0.0737, 0.0540, 0.0703, 0.0520, 0.1055, 0.1113, 0.0491, 0.0801, 0.0527, 0.0547, 0.0503, 0.0554, 0.0496]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0122, -0.0016,  0.0071,  ..., -0.0030, -0.0313, -0.0052],
        [-0.0402,  0.0132, -0.0183,  ..., -0.0002, -0.0212, -0.0150],
        [-0.0153,  0.0080,  0.0317,  ..., -0.0078, -0.0347, -0.0022],
        ...,
        [ 0.0339,  0.0136,  0.0306,  ..., -0.0256,  0.0187, -0.0120],
        [ 0.0222, -0.0111,  0.0110,  ...,  0.0064,  0.0148, -0.0180],
        [ 0.0319,  0.0148,  0.0114,  ..., -0.0489,  0.0402,  0.0168]], device='cuda:0', requires_grad=True)
K: tensor([-0.0581, -0.6367, -0.9219,  0.8555, -0.5820,  0.4238,  0.4277,  0.4219,  0.6914, -0.2617, -0.5547,  1.3672, -0.7266,  0.7500, -0.4414,  0.8438,  0.8203, -1.0703,  0.1138,  0.5117, -0.2617,  0.3770, -0.2812, -0.0405,  1.0547,  0.3379,  0.0359, -0.9180, -0.2695, -0.9492, -0.3105, -0.6367,
         0.0703,  0.0251, -0.3965, -0.8477, -0.0361,  0.1357,  0.1631,  0.1406, -0.4141, -0.5625, -0.8711,  0.7188,  0.2412,  0.2178,  0.0219,  0.4980, -0.2773,  0.2393,  0.3125, -0.2441,  0.2041, -1.2734, -1.2109, -0.6641, -0.3047, -0.8438,  0.8594,  0.5156,  0.0957, -0.3457, -0.1016,  0.4785],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0094, -0.0009,  0.0189,  ...,  0.0052, -0.0201,  0.0053],
        [-0.0523,  0.0043, -0.0038,  ...,  0.0082,  0.0195, -0.0578],
        [ 0.0143, -0.0051,  0.0244,  ..., -0.0208,  0.0023, -0.0078],
        ...,
        [ 0.0039,  0.0035,  0.0156,  ...,  0.0175,  0.0138, -0.0022],
        [ 0.0197, -0.0321, -0.0131,  ...,  0.0268,  0.0252, -0.0167],
        [ 0.0242,  0.0040,  0.0074,  ...,  0.0262,  0.0221, -0.0230]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5156, -0.3828,  0.4609, -0.2734,  0.5781, -0.1245, -1.2344, -1.0391, -0.0386,  0.0942, -0.2061, -0.0339,  1.4297,  1.0156, -0.8672,  0.6797,  0.0032,  0.3477,  1.0781,  1.0859,  0.6055,  0.2832, -1.1875,  0.2988,  0.5352,  0.1689, -0.1914, -0.0262,  0.4512, -0.2656,  0.1748, -0.7773,
        -0.1934,  0.2021,  0.0815,  0.8867, -0.1465,  0.5938, -0.0952, -0.9023,  0.0240,  1.0547, -0.0028, -0.6211, -0.0019,  0.4336,  0.2969, -0.6953, -0.3730, -0.0376,  0.1152,  0.0801,  0.4336, -0.3418,  0.1787,  0.8633,  0.7148, -0.1963, -0.3809, -0.5312, -0.7266, -0.2754, -0.6250,  0.4199],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.5898,     -0.0659,      0.0162,      0.0625,     -0.0527,      0.4238,      0.4238,     -0.1104,      0.0247,      0.1064,     -0.0432,      0.1807,      0.0957,     -0.0236],
        [     0.0000,     -0.1230,     -0.3516,     -0.1099,      0.0559,     -0.0016,      0.2988,      0.1504,      0.2949,      0.3906,      0.3633,      0.3887,      0.3203,      0.3008,      0.4375],
        [     0.0000,     -0.1641,     -0.4766,     -0.2773,     -0.4023,     -0.2949,      0.3086,      0.5469,     -0.2285,     -0.3867,     -0.1211,      0.0996,      0.1602,     -0.1592,     -0.0564],
        [     0.0000,      0.0244,      0.0947,      0.2051,      0.0493,      0.0337,      0.5234,      0.4844,      0.0067,      0.1562,      0.0879,      0.3496,      0.0972,      0.2559,      0.2207],
        [     0.0000,      0.0593,     -0.0164,      0.1475,     -0.0231,     -0.1562,      0.5703,      0.6758,     -0.1748,      0.0388,     -0.0366,      0.3477,      0.1416,     -0.0591,     -0.0457],
        [     0.0000,     -0.2812,     -0.4629,     -0.4590,     -0.5664,     -0.6836,     -0.1221,      0.1729,     -0.5859,     -0.5703,     -0.3848,     -0.3965,     -0.4688,     -0.4922,     -0.6797],
        [     0.0000,     -0.0845,     -0.6406,     -0.0067,     -0.3633,     -0.2930,     -0.2236,     -0.4941,     -0.4512,     -0.2598,     -0.6758,     -0.3789,     -0.5508,     -0.6562,     -0.7422],
        [     0.0000,     -0.3125,     -0.2363,     -0.2324,     -0.2051,     -0.3398,      0.2754,      0.3262,     -0.5273,     -0.3066,     -0.5312,     -0.0815,     -0.4336,     -0.3984,     -0.3047],
        [     0.0000,      0.3066,      0.0923,     -0.2070,      0.0928,     -0.3184,      0.1660,      0.3164,     -0.4316,     -0.0034,     -0.3320,     -0.3730,     -0.3926,     -0.2266,     -0.5547],
        [     0.0000,      0.2119,      0.0481,     -0.2109,      0.0923,     -0.0991,      0.2812,      0.3027,     -0.0532,      0.3379,     -0.0554,      0.0300,     -0.1328,      0.1807,     -0.1641],
        [     0.0000,      0.3574,      0.3125,      0.3828,      0.3398,      0.2930,      0.6406,      0.7070,     -0.1021,      0.3027,     -0.0176,     -0.2676,      0.0781,     -0.0986,     -0.1025],
        [     0.0000,      0.4297,      0.1787,     -0.1104,     -0.0101,     -0.2178,      0.2031,      0.4512,     -0.2539,      0.1670,     -0.2637,     -0.2988,     -0.4043,     -0.2412,     -0.4648],
        [     0.0000,      0.0021,      0.0003,     -0.4219,     -0.0811,     -0.3809,     -0.1060,      0.1807,     -0.3633,      0.0036,     -0.3652,     -0.2520,     -0.5547,     -0.2930,     -0.4844],
        [     0.0000,      0.2080,      0.1523,     -0.1602,      0.1060,     -0.1982,      0.5117,      0.5664,     -0.2539,      0.2373,     -0.1836,     -0.1455,     -0.2324,     -0.1348,     -0.2471]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2969],
        [0.2681],
        [0.1729],
        [0.1546],
        [0.1484],
        [0.1428],
        [0.1339],
        [0.1099],
        [0.0992],
        [0.0990],
        [0.0866],
        [0.0872],
        [0.0923],
        [0.0813]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Roses:0.0008 of:0.0004 the:0.0007,:0.0015 The:0.0005 a:0.0029 a:0.0013,:0.0017)
,
------
		( of:0.0004 the:0.0007,:0.0015 The:0.0005 a:0.0029 a:0.0013,:0.0017 a:0.0044)
 a a a a a the the the the the the the the the the
@ 550 train 7.6825 , allloss: 17.7563, dt: 6852.34ms, fracRes: 0.0118, norm(attn): 0.1787, norm(output): 0.0430, norm(x): 0.0500, norm(y): 0.9912, norm:49.7350, tok/sec: 19128.06, flops:7.45, batch-reuse:1
@ 551 train 7.6973 , allloss: 15.8919, dt: 1149.60ms, fracRes: 0.0124, norm(attn): 0.1680, norm(output): 0.0427, norm(x): 0.0500, norm(y): 0.9914, norm:68.5731, tok/sec: 114015.26, flops:44.42, batch-reuse:1
@ 552 train 7.7967 , allloss: 13.3024, dt: 1158.56ms, fracRes: 0.0150, norm(attn): 0.2041, norm(output): 0.0405, norm(x): 0.0502, norm(y): 0.9915, norm:81.3876, tok/sec: 113134.01, flops:44.08, batch-reuse:1
@ 553 train 7.8007 , allloss: 13.8373, dt: 1142.48ms, fracRes: 0.0137, norm(attn): 0.1895, norm(output): 0.0415, norm(x): 0.0497, norm(y): 0.9914, norm:63.1254, tok/sec: 114726.23, flops:44.70, batch-reuse:1
@ 554 train 8.8200 , allloss: 18.7476, dt: 1146.99ms, fracRes: 0.0079, norm(attn): 0.1992, norm(output): 0.0393, norm(x): 0.0434, norm(y): 0.9904, norm:603.5708, tok/sec: 114274.70, flops:44.52, batch-reuse:1
@ 555 train 7.9477 , allloss: 15.4995, dt: 1155.46ms, fracRes: 0.0115, norm(attn): 0.1836, norm(output): 0.0432, norm(x): 0.0502, norm(y): 0.9917, norm:170.7731, tok/sec: 113437.08, flops:44.20, batch-reuse:1
@ 556 train 7.7381 , allloss: 13.4623, dt: 1140.33ms, fracRes: 0.0114, norm(attn): 0.1973, norm(output): 0.0405, norm(x): 0.0480, norm(y): 0.9917, norm:67.4832, tok/sec: 114942.04, flops:44.78, batch-reuse:1
@ 557 train 7.6960 , allloss: 13.9804, dt: 1147.73ms, fracRes: 0.0153, norm(attn): 0.1758, norm(output): 0.0454, norm(x): 0.0544, norm(y): 0.9922, norm:47.9478, tok/sec: 114200.76, flops:44.49, batch-reuse:1
@ 558 train 7.7876 , allloss: 16.4130, dt: 1140.73ms, fracRes: 0.0129, norm(attn): 0.1738, norm(output): 0.0466, norm(x): 0.0545, norm(y): 0.9921, norm:55.6883, tok/sec: 114901.80, flops:44.77, batch-reuse:1
@ 559 train 7.8529 , allloss: 15.7942, dt: 1155.17ms, fracRes: 0.0119, norm(attn): 0.1729, norm(output): 0.0439, norm(x): 0.0513, norm(y): 0.9920, norm:41.0192, tok/sec: 113465.53, flops:44.21, batch-reuse:1
@ 560 train 7.7862 , allloss: 15.7084, dt: 1147.20ms, fracRes: 0.0097, norm(attn): 0.1768, norm(output): 0.0430, norm(x): 0.0483, norm(y): 0.9918, norm:44.7313, tok/sec: 114254.11, flops:44.51, batch-reuse:1
@ 561 train 7.9017 , allloss: 14.7833, dt: 1142.66ms, fracRes: 0.0094, norm(attn): 0.1699, norm(output): 0.0430, norm(x): 0.0486, norm(y): 0.9917, norm:54.9279, tok/sec: 114708.13, flops:44.69, batch-reuse:1
@ 562 train 7.8169 , allloss: 13.1353, dt: 1151.70ms, fracRes: 0.0100, norm(attn): 0.1855, norm(output): 0.0422, norm(x): 0.0478, norm(y): 0.9916, norm:74.9692, tok/sec: 113807.67, flops:44.34, batch-reuse:1
@ 563 train 7.8677 , allloss: 14.8848, dt: 1167.84ms, fracRes: 0.0084, norm(attn): 0.1738, norm(output): 0.0413, norm(x): 0.0463, norm(y): 0.9914, norm:71.5406, tok/sec: 112234.14, flops:43.73, batch-reuse:1
@ 564 train 7.7624 , allloss: 16.6152, dt: 1186.31ms, fracRes: 0.0085, norm(attn): 0.1943, norm(output): 0.0398, norm(x): 0.0449, norm(y): 0.9907, norm:85.5300, tok/sec: 110487.38, flops:43.05, batch-reuse:1
@ 565 train 7.5827 , allloss: 14.5389, dt: 1140.37ms, fracRes: 0.0100, norm(attn): 0.1787, norm(output): 0.0417, norm(x): 0.0477, norm(y): 0.9913, norm:36.1505, tok/sec: 114938.14, flops:44.78, batch-reuse:1
@ 566 train 7.8348 , allloss: 14.1213, dt: 1151.53ms, fracRes: 0.0105, norm(attn): 0.1953, norm(output): 0.0405, norm(x): 0.0472, norm(y): 0.9912, norm:75.8426, tok/sec: 113824.07, flops:44.35, batch-reuse:1
@ 567 train 8.1165 , allloss: 17.0789, dt: 1156.50ms, fracRes: 0.0088, norm(attn): 0.2178, norm(output): 0.0391, norm(x): 0.0447, norm(y): 0.9909, norm:370.6502, tok/sec: 113335.38, flops:44.16, batch-reuse:1
@ 568 train 7.8985 , allloss: 12.8089, dt: 1184.85ms, fracRes: 0.0094, norm(attn): 0.2793, norm(output): 0.0327, norm(x): 0.0395, norm(y): 0.9904, norm:97.0666, tok/sec: 110623.40, flops:43.10, batch-reuse:1
@ 569 train 7.7953 , allloss: 12.7390, dt: 1156.25ms, fracRes: 0.0103, norm(attn): 0.2344, norm(output): 0.0386, norm(x): 0.0449, norm(y): 0.9910, norm:44.9426, tok/sec: 113359.26, flops:44.16, batch-reuse:1
@ 570 train 7.7357 , allloss: 16.0764, dt: 1161.16ms, fracRes: 0.0086, norm(attn): 0.1982, norm(output): 0.0417, norm(x): 0.0465, norm(y): 0.9911, norm:31.0791, tok/sec: 112880.25, flops:43.98, batch-reuse:1
@ 571 train 7.6998 , allloss: 15.1546, dt: 1135.24ms, fracRes: 0.0081, norm(attn): 0.1787, norm(output): 0.0427, norm(x): 0.0469, norm(y): 0.9915, norm:27.1324, tok/sec: 115457.06, flops:44.98, batch-reuse:1
@ 572 train 7.6838 , allloss: 13.5841, dt: 1150.88ms, fracRes: 0.0083, norm(attn): 0.1836, norm(output): 0.0415, norm(x): 0.0462, norm(y): 0.9915, norm:24.9962, tok/sec: 113888.92, flops:44.37, batch-reuse:1
@ 573 train 7.7277 , allloss: 12.5717, dt: 1132.78ms, fracRes: 0.0087, norm(attn): 0.2031, norm(output): 0.0391, norm(x): 0.0444, norm(y): 0.9913, norm:30.3489, tok/sec: 115708.18, flops:45.08, batch-reuse:1
@ 574 train 7.7033 , allloss: 11.5486, dt: 1150.17ms, fracRes: 0.0097, norm(attn): 0.2236, norm(output): 0.0359, norm(x): 0.0428, norm(y): 0.9915, norm:27.0756, tok/sec: 113958.68, flops:44.40, batch-reuse:1
@ 575 train 7.6894 , allloss: 11.5044, dt: 1177.56ms, fracRes: 0.0097, norm(attn): 0.2314, norm(output): 0.0344, norm(x): 0.0410, norm(y): 0.9913, norm:27.9177, tok/sec: 111307.69, flops:43.37, batch-reuse:1
@ 576 train 7.6498 , allloss: 11.4581, dt: 1143.61ms, fracRes: 0.0088, norm(attn): 0.2617, norm(output): 0.0312, norm(x): 0.0379, norm(y): 0.9909, norm:26.0090, tok/sec: 114612.12, flops:44.65, batch-reuse:1
@ 577 train 7.8169 , allloss: 12.0075, dt: 1156.03ms, fracRes: 0.0077, norm(attn): 0.2715, norm(output): 0.0302, norm(x): 0.0361, norm(y): 0.9901, norm:55.9226, tok/sec: 113380.84, flops:44.17, batch-reuse:1
@ 578 train 7.7412 , allloss: 10.9647, dt: 1141.37ms, fracRes: 0.0079, norm(attn): 0.3320, norm(output): 0.0262, norm(x): 0.0328, norm(y): 0.9897, norm:36.4824, tok/sec: 114837.62, flops:44.74, batch-reuse:1
@ 579 train 7.8379 , allloss: 11.3540, dt: 1146.23ms, fracRes: 0.0089, norm(attn): 0.2695, norm(output): 0.0303, norm(x): 0.0369, norm(y): 0.9907, norm:95.9100, tok/sec: 114350.45, flops:44.55, batch-reuse:1
@ 580 train 7.9093 , allloss: 11.1992, dt: 1161.67ms, fracRes: 0.0092, norm(attn): 0.2910, norm(output): 0.0303, norm(x): 0.0370, norm(y): 0.9910, norm:48.4716, tok/sec: 112830.55, flops:43.96, batch-reuse:1
@ 581 train 7.7514 , allloss: 11.7769, dt: 1180.02ms, fracRes: 0.0082, norm(attn): 0.2891, norm(output): 0.0295, norm(x): 0.0356, norm(y): 0.9906, norm:39.6370, tok/sec: 111076.14, flops:43.28, batch-reuse:1
@ 582 train 7.7504 , allloss: 13.4365, dt: 1176.52ms, fracRes: 0.0075, norm(attn): 0.3008, norm(output): 0.0284, norm(x): 0.0340, norm(y): 0.9897, norm:25.0658, tok/sec: 111406.85, flops:43.40, batch-reuse:1
@ 583 train 7.7232 , allloss: 13.0175, dt: 1179.52ms, fracRes: 0.0072, norm(attn): 0.3652, norm(output): 0.0256, norm(x): 0.0313, norm(y): 0.9883, norm:45.4946, tok/sec: 111122.80, flops:43.29, batch-reuse:1
@ 584 train 8.0343 , allloss: 17.7943, dt: 1193.37ms, fracRes: 0.0067, norm(attn): 0.3242, norm(output): 0.0304, norm(x): 0.0350, norm(y): 0.9879, norm:398.7058, tok/sec: 109833.44, flops:42.79, batch-reuse:1
@ 585 train 7.7193 , allloss: 12.8722, dt: 1175.26ms, fracRes: 0.0070, norm(attn): 0.4141, norm(output): 0.0239, norm(x): 0.0297, norm(y): 0.9876, norm:34.4023, tok/sec: 111525.50, flops:43.45, batch-reuse:1
@ 586 train 7.7286 , allloss: 10.3893, dt: 1180.44ms, fracRes: 0.0079, norm(attn): 0.4824, norm(output): 0.0206, norm(x): 0.0274, norm(y): 0.9870, norm:34.6537, tok/sec: 111036.16, flops:43.26, batch-reuse:1
@ 587 train 7.9402 , allloss: 10.6018, dt: 1146.54ms, fracRes: 0.0075, norm(attn): 0.5195, norm(output): 0.0195, norm(x): 0.0261, norm(y): 0.9852, norm:121.4913, tok/sec: 114319.23, flops:44.54, batch-reuse:1
@ 588 train 7.8911 , allloss: 10.6150, dt: 1133.65ms, fracRes: 0.0081, norm(attn): 0.5547, norm(output): 0.0192, norm(x): 0.0262, norm(y): 0.9860, norm:153.3766, tok/sec: 115618.97, flops:45.05, batch-reuse:1
@ 589 train 8.1910 , allloss: 10.5770, dt: 1170.46ms, fracRes: 0.0072, norm(attn): 0.6484, norm(output): 0.0175, norm(x): 0.0240, norm(y): 0.9837, norm:188.2492, tok/sec: 111983.51, flops:43.63, batch-reuse:1
@ 590 train 8.0010 , allloss: 10.3176, dt: 1175.74ms, fracRes: 0.0088, norm(attn): 0.6914, norm(output): 0.0172, norm(x): 0.0251, norm(y): 0.9851, norm:101.4082, tok/sec: 111480.54, flops:43.43, batch-reuse:1
@ 591 train 7.8381 , allloss: 10.1610, dt: 1173.18ms, fracRes: 0.0092, norm(attn): 0.6797, norm(output): 0.0182, norm(x): 0.0264, norm(y): 0.9861, norm:50.7519, tok/sec: 111724.11, flops:43.53, batch-reuse:1
@ 592 train 7.7807 , allloss: 9.9315, dt: 1186.54ms, fracRes: 0.0089, norm(attn): 0.6875, norm(output): 0.0179, norm(x): 0.0259, norm(y): 0.9857, norm:33.4592, tok/sec: 110466.02, flops:43.04, batch-reuse:1
@ 593 train 7.7641 , allloss: 10.1889, dt: 1165.19ms, fracRes: 0.0074, norm(attn): 0.6875, norm(output): 0.0177, norm(x): 0.0246, norm(y): 0.9839, norm:24.6419, tok/sec: 112489.56, flops:43.83, batch-reuse:1
@ 594 train 7.9191 , allloss: 10.6426, dt: 1150.71ms, fracRes: 0.0067, norm(attn): 0.6875, norm(output): 0.0181, norm(x): 0.0246, norm(y): 0.9828, norm:37.5928, tok/sec: 113905.39, flops:44.38, batch-reuse:1
@ 595 train 7.8072 , allloss: 10.9674, dt: 1135.82ms, fracRes: 0.0066, norm(attn): 0.6914, norm(output): 0.0184, norm(x): 0.0249, norm(y): 0.9825, norm:43.0293, tok/sec: 115398.96, flops:44.96, batch-reuse:1
@ 596 train 7.7662 , allloss: 10.1938, dt: 1144.96ms, fracRes: 0.0063, norm(attn): 0.7969, norm(output): 0.0162, norm(x): 0.0226, norm(y): 0.9791, norm:22.5366, tok/sec: 114476.87, flops:44.60, batch-reuse:1
@ 597 train 7.7503 , allloss: 9.7166, dt: 1155.61ms, fracRes: 0.0060, norm(attn): 0.8750, norm(output): 0.0150, norm(x): 0.0212, norm(y): 0.9772, norm:31.8058, tok/sec: 113422.67, flops:44.19, batch-reuse:1
@ 598 train 7.9080 , allloss: 9.5864, dt: 1154.34ms, fracRes: 0.0057, norm(attn): 0.9766, norm(output): 0.0130, norm(x): 0.0192, norm(y): 0.9712, norm:71.9556, tok/sec: 113547.58, flops:44.24, batch-reuse:1
@ 599 train 7.9257 , allloss: 9.4881, dt: 1176.57ms, fracRes: 0.0059, norm(attn): 0.9805, norm(output): 0.0141, norm(x): 0.0204, norm(y): 0.9759, norm:40.1338, tok/sec: 111401.81, flops:43.40, batch-reuse:1
@ 600 train 7.7698 , allloss: 9.1910, dt: 1144.26ms, fracRes: 0.0057, norm(attn): 1.0391, norm(output): 0.0131, norm(x): 0.0193, norm(y): 0.9737, norm:17.0529, tok/sec: 114547.19, flops:44.63, batch-reuse:1
@ 601 train 7.8254 , allloss: 9.2528, dt: 1180.19ms, fracRes: 0.0061, norm(attn): 1.0547, norm(output): 0.0138, norm(x): 0.0204, norm(y): 0.9749, norm:20.9226, tok/sec: 111059.87, flops:43.27, batch-reuse:1
@ 602 train 7.9496 , allloss: 9.3110, dt: 1182.37ms, fracRes: 0.0065, norm(attn): 1.0938, norm(output): 0.0143, norm(x): 0.0213, norm(y): 0.9758, norm:91.7730, tok/sec: 110855.75, flops:43.19, batch-reuse:1
@ 603 train 7.8738 , allloss: 9.1681, dt: 1166.52ms, fracRes: 0.0070, norm(attn): 1.1328, norm(output): 0.0146, norm(x): 0.0219, norm(y): 0.9782, norm:39.8475, tok/sec: 112361.15, flops:43.78, batch-reuse:1
@ 604 train 7.7600 , allloss: 9.0398, dt: 1144.10ms, fracRes: 0.0076, norm(attn): 1.1797, norm(output): 0.0150, norm(x): 0.0227, norm(y): 0.9804, norm:26.3849, tok/sec: 114563.15, flops:44.63, batch-reuse:1
@ 605 train 7.8067 , allloss: 9.0530, dt: 1161.52ms, fracRes: 0.0078, norm(attn): 1.2266, norm(output): 0.0156, norm(x): 0.0236, norm(y): 0.9812, norm:23.1898, tok/sec: 112845.58, flops:43.96, batch-reuse:1
@ 606 train 7.8806 , allloss: 9.0027, dt: 1162.98ms, fracRes: 0.0078, norm(attn): 1.2500, norm(output): 0.0162, norm(x): 0.0242, norm(y): 0.9825, norm:33.0232, tok/sec: 112703.56, flops:43.91, batch-reuse:1
@ 607 train 7.8697 , allloss: 9.0387, dt: 1155.48ms, fracRes: 0.0084, norm(attn): 1.2812, norm(output): 0.0178, norm(x): 0.0262, norm(y): 0.9849, norm:26.6792, tok/sec: 113434.81, flops:44.19, batch-reuse:1
@ 608 train 7.8257 , allloss: 9.0092, dt: 1173.28ms, fracRes: 0.0093, norm(attn): 1.2812, norm(output): 0.0195, norm(x): 0.0286, norm(y): 0.9870, norm:24.9363, tok/sec: 111714.60, flops:43.52, batch-reuse:1
@ 609 train 7.9197 , allloss: 9.3970, dt: 1167.40ms, fracRes: 0.0102, norm(attn): 1.2734, norm(output): 0.0229, norm(x): 0.0323, norm(y): 0.9888, norm:41.6349, tok/sec: 112277.00, flops:43.74, batch-reuse:1
@ 610 train 8.0686 , allloss: 9.4262, dt: 1141.99ms, fracRes: 0.0114, norm(attn): 1.2422, norm(output): 0.0260, norm(x): 0.0362, norm(y): 0.9906, norm:27.9609, tok/sec: 114775.57, flops:44.72, batch-reuse:1
@ 611 train 8.0684 , allloss: 9.4911, dt: 1157.35ms, fracRes: 0.0126, norm(attn): 1.2031, norm(output): 0.0302, norm(x): 0.0410, norm(y): 0.9919, norm:28.3362, tok/sec: 113252.19, flops:44.12, batch-reuse:1
@ 612 train 8.1414 , allloss: 9.6816, dt: 1154.30ms, fracRes: 0.0148, norm(attn): 1.1875, norm(output): 0.0344, norm(x): 0.0464, norm(y): 0.9928, norm:24.7611, tok/sec: 113551.26, flops:44.24, batch-reuse:1
@ 613 train 8.1938 , allloss: 10.4033, dt: 1154.67ms, fracRes: 0.0158, norm(attn): 1.1250, norm(output): 0.0388, norm(x): 0.0512, norm(y): 0.9933, norm:22.8052, tok/sec: 113514.33, flops:44.23, batch-reuse:1
@ 614 train 8.1298 , allloss: 10.1043, dt: 1160.43ms, fracRes: 0.0152, norm(attn): 1.1250, norm(output): 0.0405, norm(x): 0.0527, norm(y): 0.9937, norm:28.7687, tok/sec: 112951.49, flops:44.01, batch-reuse:1
@ 615 train 8.0810 , allloss: 10.2190, dt: 1172.81ms, fracRes: 0.0122, norm(attn): 1.1875, norm(output): 0.0410, norm(x): 0.0500, norm(y): 0.9937, norm:35.4756, tok/sec: 111758.98, flops:43.54, batch-reuse:1
@ 616 train 8.0431 , allloss: 10.3227, dt: 1162.14ms, fracRes: 0.0073, norm(attn): 1.2656, norm(output): 0.0386, norm(x): 0.0434, norm(y): 0.9934, norm:34.8211, tok/sec: 112784.84, flops:43.94, batch-reuse:1
@ 617 train 8.0111 , allloss: 10.3353, dt: 1129.86ms, fracRes: 0.0041, norm(attn): 1.3750, norm(output): 0.0339, norm(x): 0.0372, norm(y): 0.9929, norm:67.3400, tok/sec: 116006.81, flops:45.20, batch-reuse:1
@ 618 train 8.0623 , allloss: 11.1025, dt: 1164.73ms, fracRes: 0.0030, norm(attn): 1.4141, norm(output): 0.0330, norm(x): 0.0349, norm(y): 0.9925, norm:84.4602, tok/sec: 112534.41, flops:43.84, batch-reuse:1
@ 619 train 7.8238 , allloss: 10.8522, dt: 1165.50ms, fracRes: 0.0023, norm(attn): 1.5234, norm(output): 0.0317, norm(x): 0.0332, norm(y): 0.9922, norm:33.1762, tok/sec: 112459.48, flops:43.81, batch-reuse:1
@ 620 train 7.7693 , allloss: 11.3362, dt: 1141.43ms, fracRes: 0.0021, norm(attn): 1.5312, norm(output): 0.0315, norm(x): 0.0332, norm(y): 0.9919, norm:32.5365, tok/sec: 114831.48, flops:44.74, batch-reuse:1
@ 621 train 7.7796 , allloss: 11.5144, dt: 1195.01ms, fracRes: 0.0020, norm(attn): 1.4688, norm(output): 0.0332, norm(x): 0.0345, norm(y): 0.9920, norm:34.1956, tok/sec: 109683.01, flops:42.73, batch-reuse:1
@ 622 train 7.7642 , allloss: 11.2866, dt: 1201.91ms, fracRes: 0.0019, norm(attn): 1.4766, norm(output): 0.0342, norm(x): 0.0352, norm(y): 0.9919, norm:45.8190, tok/sec: 109053.54, flops:42.49, batch-reuse:1
@ 623 train 7.7719 , allloss: 10.9900, dt: 1154.89ms, fracRes: 0.0018, norm(attn): 1.4766, norm(output): 0.0349, norm(x): 0.0361, norm(y): 0.9923, norm:36.6433, tok/sec: 113493.48, flops:44.22, batch-reuse:1
@ 624 train 7.8679 , allloss: 12.4848, dt: 1136.66ms, fracRes: 0.0022, norm(attn): 1.4141, norm(output): 0.0388, norm(x): 0.0399, norm(y): 0.9928, norm:30.1578, tok/sec: 115313.01, flops:44.93, batch-reuse:1
@ 625 train 7.8814 , allloss: 11.9598, dt: 1164.74ms, fracRes: 0.0020, norm(attn): 1.4531, norm(output): 0.0391, norm(x): 0.0401, norm(y): 0.9929, norm:26.1801, tok/sec: 112533.54, flops:43.84, batch-reuse:1
@ 626 train 7.7707 , allloss: 11.4031, dt: 1192.38ms, fracRes: 0.0021, norm(attn): 1.4609, norm(output): 0.0403, norm(x): 0.0406, norm(y): 0.9931, norm:22.9899, tok/sec: 109925.09, flops:42.83, batch-reuse:1
@ 627 train 7.8276 , allloss: 11.7019, dt: 1189.62ms, fracRes: 0.0021, norm(attn): 1.4609, norm(output): 0.0430, norm(x): 0.0434, norm(y): 0.9933, norm:24.0795, tok/sec: 110179.43, flops:42.93, batch-reuse:1
@ 628 train 7.8770 , allloss: 11.1487, dt: 1175.87ms, fracRes: 0.0023, norm(attn): 1.4141, norm(output): 0.0444, norm(x): 0.0451, norm(y): 0.9936, norm:20.3850, tok/sec: 111468.09, flops:43.43, batch-reuse:1
@ 629 train 7.9699 , allloss: 11.6334, dt: 1144.64ms, fracRes: 0.0027, norm(attn): 1.3281, norm(output): 0.0474, norm(x): 0.0477, norm(y): 0.9938, norm:23.0456, tok/sec: 114509.58, flops:44.61, batch-reuse:1
@ 630 train 8.1333 , allloss: 12.3475, dt: 1135.63ms, fracRes: 0.0033, norm(attn): 1.2266, norm(output): 0.0469, norm(x): 0.0480, norm(y): 0.9937, norm:31.7438, tok/sec: 115418.27, flops:44.97, batch-reuse:1
@ 631 train 8.1740 , allloss: 12.1300, dt: 1130.71ms, fracRes: 0.0037, norm(attn): 1.1484, norm(output): 0.0432, norm(x): 0.0447, norm(y): 0.9932, norm:55.0369, tok/sec: 115919.95, flops:45.16, batch-reuse:1
@ 632 train 8.2950 , allloss: 13.0586, dt: 1123.65ms, fracRes: 0.0040, norm(attn): 1.0469, norm(output): 0.0396, norm(x): 0.0417, norm(y): 0.9923, norm:80.0390, tok/sec: 116648.69, flops:45.45, batch-reuse:1
@ 633 train 8.0901 , allloss: 12.6740, dt: 1140.77ms, fracRes: 0.0038, norm(attn): 1.0391, norm(output): 0.0378, norm(x): 0.0398, norm(y): 0.9919, norm:53.4161, tok/sec: 114897.91, flops:44.76, batch-reuse:1
@ 634 train 7.7364 , allloss: 11.8396, dt: 1171.54ms, fracRes: 0.0035, norm(attn): 1.0469, norm(output): 0.0366, norm(x): 0.0385, norm(y): 0.9919, norm:30.8723, tok/sec: 111879.65, flops:43.59, batch-reuse:1
@ 635 train 7.8969 , allloss: 12.8331, dt: 1130.51ms, fracRes: 0.0040, norm(attn): 0.9336, norm(output): 0.0364, norm(x): 0.0392, norm(y): 0.9915, norm:33.0955, tok/sec: 115940.14, flops:45.17, batch-reuse:1
@ 636 train 7.9783 , allloss: 13.3699, dt: 1150.34ms, fracRes: 0.0045, norm(attn): 0.9219, norm(output): 0.0374, norm(x): 0.0402, norm(y): 0.9914, norm:58.8765, tok/sec: 113942.10, flops:44.39, batch-reuse:1
@ 637 train 7.7872 , allloss: 12.4218, dt: 1183.42ms, fracRes: 0.0044, norm(attn): 1.0078, norm(output): 0.0364, norm(x): 0.0395, norm(y): 0.9916, norm:32.7201, tok/sec: 110757.01, flops:43.15, batch-reuse:1
@ 638 train 7.8026 , allloss: 12.7106, dt: 1179.81ms, fracRes: 0.0053, norm(attn): 0.9531, norm(output): 0.0371, norm(x): 0.0405, norm(y): 0.9915, norm:34.4285, tok/sec: 111096.16, flops:43.28, batch-reuse:1
@ 639 train 8.0419 , allloss: 14.1458, dt: 1151.52ms, fracRes: 0.0075, norm(attn): 0.8555, norm(output): 0.0391, norm(x): 0.0438, norm(y): 0.9913, norm:51.5581, tok/sec: 113824.83, flops:44.35, batch-reuse:1
@ 640 train 8.3361 , allloss: 14.8978, dt: 1141.92ms, fracRes: 0.0099, norm(attn): 0.8164, norm(output): 0.0396, norm(x): 0.0465, norm(y): 0.9913, norm:226.3722, tok/sec: 114782.11, flops:44.72, batch-reuse:1
@ 641 train 8.1747 , allloss: 15.9164, dt: 1155.35ms, fracRes: 0.0126, norm(attn): 0.7266, norm(output): 0.0413, norm(x): 0.0498, norm(y): 0.9911, norm:58.3387, tok/sec: 113447.64, flops:44.20, batch-reuse:1
@ 642 train 7.9865 , allloss: 15.2885, dt: 1178.18ms, fracRes: 0.0150, norm(attn): 0.6992, norm(output): 0.0415, norm(x): 0.0521, norm(y): 0.9913, norm:46.4634, tok/sec: 111249.38, flops:43.34, batch-reuse:1
@ 643 train 7.9796 , allloss: 14.8519, dt: 1158.37ms, fracRes: 0.0187, norm(attn): 0.6914, norm(output): 0.0422, norm(x): 0.0558, norm(y): 0.9915, norm:47.2132, tok/sec: 113152.52, flops:44.08, batch-reuse:1
@ 644 train 8.1520 , allloss: 14.6581, dt: 1149.90ms, fracRes: 0.0202, norm(attn): 0.6680, norm(output): 0.0430, norm(x): 0.0581, norm(y): 0.9915, norm:57.1582, tok/sec: 113985.54, flops:44.41, batch-reuse:1
@ 645 train 8.0805 , allloss: 14.3737, dt: 1149.99ms, fracRes: 0.0215, norm(attn): 0.5820, norm(output): 0.0425, norm(x): 0.0592, norm(y): 0.9914, norm:71.4150, tok/sec: 113976.82, flops:44.41, batch-reuse:1
@ 646 train 7.9023 , allloss: 14.1323, dt: 1176.71ms, fracRes: 0.0238, norm(attn): 0.5781, norm(output): 0.0432, norm(x): 0.0628, norm(y): 0.9918, norm:45.8913, tok/sec: 111388.90, flops:43.40, batch-reuse:1
@ 647 train 8.0091 , allloss: 14.3564, dt: 1135.07ms, fracRes: 0.0257, norm(attn): 0.5117, norm(output): 0.0449, norm(x): 0.0658, norm(y): 0.9917, norm:55.9756, tok/sec: 115474.44, flops:44.99, batch-reuse:1
@ 648 train 12.6730 , allloss: 19.3289, dt: 1141.64ms, fracRes: 0.0286, norm(attn): 0.2695, norm(output): 0.0520, norm(x): 0.0738, norm(y): 0.9909, norm:1514.8876, tok/sec: 114810.23, flops:44.73, batch-reuse:1
@ 649 train 8.8023 , allloss: 15.3342, dt: 1134.19ms, fracRes: 0.0325, norm(attn): 0.3633, norm(output): 0.0532, norm(x): 0.0794, norm(y): 0.9915, norm:304.0328, tok/sec: 115564.67, flops:45.02, batch-reuse:1
@ 650 train 8.3760 , allloss: 14.6889, dt: 1162.50ms, fracRes: 0.0369, norm(attn): 0.4375, norm(output): 0.0510, norm(x): 0.0819, norm(y): 0.9921, norm:88.1414, tok/sec: 112749.65, flops:43.93, batch-reuse:1
@ 651 train 8.2322 , allloss: 15.0728, dt: 1183.53ms, fracRes: 0.0447, norm(attn): 0.4355, norm(output): 0.0547, norm(x): 0.0910, norm(y): 0.9923, norm:66.9539, tok/sec: 110747.06, flops:43.15, batch-reuse:1
@ 652 train 8.1198 , allloss: 15.5950, dt: 1151.89ms, fracRes: 0.0512, norm(attn): 0.4062, norm(output): 0.0581, norm(x): 0.1000, norm(y): 0.9924, norm:63.4408, tok/sec: 113788.45, flops:44.33, batch-reuse:1
@ 653 train 8.2331 , allloss: 15.9092, dt: 1153.64ms, fracRes: 0.0528, norm(attn): 0.3730, norm(output): 0.0623, norm(x): 0.1059, norm(y): 0.9924, norm:69.8992, tok/sec: 113615.63, flops:44.26, batch-reuse:1
@ 654 train 8.6669 , allloss: 16.6449, dt: 1182.24ms, fracRes: 0.0593, norm(attn): 0.3438, norm(output): 0.0698, norm(x): 0.1180, norm(y): 0.9922, norm:115.2760, tok/sec: 110867.97, flops:43.19, batch-reuse:1
@ 655 train 8.6141 , allloss: 17.4666, dt: 1152.74ms, fracRes: 0.0644, norm(attn): 0.3145, norm(output): 0.0742, norm(x): 0.1263, norm(y): 0.9922, norm:88.6482, tok/sec: 113704.31, flops:44.30, batch-reuse:1
@ 656 train 8.6185 , allloss: 18.5432, dt: 1164.41ms, fracRes: 0.0686, norm(attn): 0.2988, norm(output): 0.0786, norm(x): 0.1341, norm(y): 0.9921, norm:90.0922, tok/sec: 112565.47, flops:43.86, batch-reuse:1
@ 657 train 8.6812 , allloss: 19.6027, dt: 1188.24ms, fracRes: 0.0675, norm(attn): 0.2832, norm(output): 0.0845, norm(x): 0.1377, norm(y): 0.9920, norm:101.5417, tok/sec: 110308.08, flops:42.98, batch-reuse:1
@ 658 train 8.9703 , allloss: 21.0659, dt: 1192.91ms, fracRes: 0.0693, norm(attn): 0.2793, norm(output): 0.0923, norm(x): 0.1453, norm(y): 0.9917, norm:132.4194, tok/sec: 109875.41, flops:42.81, batch-reuse:1
@ 659 train 8.9600 , allloss: 23.2656, dt: 1172.66ms, fracRes: 0.0691, norm(attn): 0.2832, norm(output): 0.0952, norm(x): 0.1485, norm(y): 0.9915, norm:149.5519, tok/sec: 111773.36, flops:43.55, batch-reuse:1
@ 660 train 9.1099 , allloss: 24.5486, dt: 1165.64ms, fracRes: 0.0717, norm(attn): 0.2930, norm(output): 0.1069, norm(x): 0.1606, norm(y): 0.9915, norm:161.7517, tok/sec: 112446.19, flops:43.81, batch-reuse:1
@ 661 train 9.3862 , allloss: 27.9919, dt: 1179.13ms, fracRes: 0.0796, norm(attn): 0.3164, norm(output): 0.1196, norm(x): 0.1764, norm(y): 0.9914, norm:568.8167, tok/sec: 111160.16, flops:43.31, batch-reuse:1
@ 662 train 12.4397 , allloss: 28.0159, dt: 1186.89ms, fracRes: 0.0884, norm(attn): 0.3477, norm(output): 0.1533, norm(x): 0.2129, norm(y): 0.9909, norm:416.6028, tok/sec: 110433.43, flops:43.02, batch-reuse:1
@ 663 train 13.1636 , allloss: 29.7287, dt: 1182.62ms, fracRes: 0.1014, norm(attn): 0.3633, norm(output): 0.1719, norm(x): 0.2395, norm(y): 0.9909, norm:313.7435, tok/sec: 110832.15, flops:43.18, batch-reuse:1
@ 664 train 11.7976 , allloss: 30.8097, dt: 1188.16ms, fracRes: 0.1083, norm(attn): 0.3613, norm(output): 0.1787, norm(x): 0.2493, norm(y): 0.9909, norm:493.9689, tok/sec: 110315.20, flops:42.98, batch-reuse:1
@ 665 train 11.5168 , allloss: 39.5121, dt: 1156.00ms, fracRes: 0.1029, norm(attn): 0.3594, norm(output): 0.1709, norm(x): 0.2369, norm(y): 0.9914, norm:663.2359, tok/sec: 113383.74, flops:44.17, batch-reuse:1
@ 666 train 10.4031 , allloss: 35.8527, dt: 1142.20ms, fracRes: 0.1150, norm(attn): 0.3711, norm(output): 0.1865, norm(x): 0.2604, norm(y): 0.9913, norm:236.2559, tok/sec: 114754.42, flops:44.71, batch-reuse:1
@ 667 train 11.2780 , allloss: 33.7383, dt: 1162.14ms, fracRes: 0.1201, norm(attn): 0.3750, norm(output): 0.2041, norm(x): 0.2781, norm(y): 0.9909, norm:371.0297, tok/sec: 112784.58, flops:43.94, batch-reuse:1
@ 668 train 11.1856 , allloss: 33.5042, dt: 1148.23ms, fracRes: 0.1142, norm(attn): 0.3672, norm(output): 0.2070, norm(x): 0.2770, norm(y): 0.9909, norm:367.4236, tok/sec: 114151.20, flops:44.47, batch-reuse:1
@ 669 train 10.0776 , allloss: 34.9971, dt: 1166.36ms, fracRes: 0.1020, norm(attn): 0.3613, norm(output): 0.2021, norm(x): 0.2630, norm(y): 0.9912, norm:277.6002, tok/sec: 112376.82, flops:43.78, batch-reuse:1
@ 670 train 9.4915 , allloss: 38.4817, dt: 1189.84ms, fracRes: 0.0825, norm(attn): 0.3594, norm(output): 0.2021, norm(x): 0.2461, norm(y): 0.9917, norm:249.2541, tok/sec: 110159.45, flops:42.92, batch-reuse:1
@ 671 train 9.6272 , allloss: 38.2665, dt: 1160.13ms, fracRes: 0.0751, norm(attn): 0.3555, norm(output): 0.2100, norm(x): 0.2475, norm(y): 0.9916, norm:226.4053, tok/sec: 112980.30, flops:44.02, batch-reuse:1
@ 672 train 10.9227 , allloss: 32.6294, dt: 1180.18ms, fracRes: 0.0549, norm(attn): 0.3242, norm(output): 0.2217, norm(x): 0.2479, norm(y): 0.9908, norm:331.3932, tok/sec: 111060.97, flops:43.27, batch-reuse:1
@ 673 train 10.9444 , allloss: 34.0569, dt: 1163.30ms, fracRes: 0.0408, norm(attn): 0.3008, norm(output): 0.2246, norm(x): 0.2392, norm(y): 0.9908, norm:318.6316, tok/sec: 112672.13, flops:43.90, batch-reuse:1
@ 674 train 9.4217 , allloss: 47.6524, dt: 1157.75ms, fracRes: 0.0244, norm(attn): 0.3027, norm(output): 0.2891, norm(x): 0.2679, norm(y): 0.9920, norm:320.2927, tok/sec: 113212.59, flops:44.11, batch-reuse:1
@ 675 train 9.3528 , allloss: 54.4059, dt: 1154.12ms, fracRes: 0.0420, norm(attn): 0.3027, norm(output): 0.3965, norm(x): 0.3564, norm(y): 0.9926, norm:318.8555, tok/sec: 113569.11, flops:44.25, batch-reuse:1
@ 676 train 9.2647 , allloss: 56.0330, dt: 1143.42ms, fracRes: 0.0598, norm(attn): 0.3164, norm(output): 0.4316, norm(x): 0.3920, norm(y): 0.9927, norm:365.1436, tok/sec: 114631.38, flops:44.66, batch-reuse:1
@ 677 train 9.1627 , allloss: 55.9739, dt: 1141.87ms, fracRes: 0.0633, norm(attn): 0.3086, norm(output): 0.4043, norm(x): 0.3667, norm(y): 0.9923, norm:398.7812, tok/sec: 114787.17, flops:44.72, batch-reuse:1
@ 678 train 9.3535 , allloss: 52.0465, dt: 1139.71ms, fracRes: 0.0493, norm(attn): 0.2695, norm(output): 0.3281, norm(x): 0.3013, norm(y): 0.9913, norm:401.8788, tok/sec: 115004.75, flops:44.81, batch-reuse:1
@ 679 train 10.4491 , allloss: 49.7115, dt: 1142.20ms, fracRes: 0.0323, norm(attn): 0.2461, norm(output): 0.3066, norm(x): 0.2868, norm(y): 0.9904, norm:558.5271, tok/sec: 114753.74, flops:44.71, batch-reuse:1
@ 680 train 9.1752 , allloss: 54.2104, dt: 1156.68ms, fracRes: 0.0669, norm(attn): 0.2754, norm(output): 0.3555, norm(x): 0.3289, norm(y): 0.9913, norm:341.7277, tok/sec: 113317.25, flops:44.15, batch-reuse:1
@ 681 train 8.7624 , allloss: 56.3502, dt: 1153.89ms, fracRes: 0.0701, norm(attn): 0.2754, norm(output): 0.3711, norm(x): 0.3339, norm(y): 0.9912, norm:316.7730, tok/sec: 113591.85, flops:44.26, batch-reuse:1
@ 682 train 10.0086 , allloss: 54.4767, dt: 1159.71ms, fracRes: 0.0654, norm(attn): 0.2715, norm(output): 0.3711, norm(x): 0.3480, norm(y): 0.9909, norm:621.7607, tok/sec: 113020.92, flops:44.03, batch-reuse:1
@ 683 train 8.3563 , allloss: 57.9583, dt: 1147.44ms, fracRes: 0.1319, norm(attn): 0.3281, norm(output): 0.4395, norm(x): 0.4101, norm(y): 0.9924, norm:248.1362, tok/sec: 114229.44, flops:44.50, batch-reuse:1
@ 684 train 8.2987 , allloss: 58.5252, dt: 1137.01ms, fracRes: 0.1899, norm(attn): 0.3828, norm(output): 0.5000, norm(x): 0.4852, norm(y): 0.9937, norm:222.7868, tok/sec: 115277.95, flops:44.91, batch-reuse:1
@ 685 train 8.2177 , allloss: 57.3448, dt: 1157.51ms, fracRes: 0.2504, norm(attn): 0.4297, norm(output): 0.5586, norm(x): 0.5652, norm(y): 0.9951, norm:188.3092, tok/sec: 113236.00, flops:44.12, batch-reuse:1
@ 686 train 8.2187 , allloss: 54.5743, dt: 1161.71ms, fracRes: 0.2749, norm(attn): 0.4551, norm(output): 0.5586, norm(x): 0.5921, norm(y): 0.9957, norm:206.6324, tok/sec: 112827.15, flops:43.96, batch-reuse:1
@ 687 train 8.1686 , allloss: 47.6055, dt: 1151.10ms, fracRes: 0.2942, norm(attn): 0.4414, norm(output): 0.5000, norm(x): 0.5657, norm(y): 0.9958, norm:211.2149, tok/sec: 113866.72, flops:44.36, batch-reuse:1
@ 688 train 8.1620 , allloss: 44.1069, dt: 1164.30ms, fracRes: 0.3010, norm(attn): 0.4258, norm(output): 0.4082, norm(x): 0.5158, norm(y): 0.9956, norm:206.3050, tok/sec: 112576.05, flops:43.86, batch-reuse:1
@ 689 train 8.1311 , allloss: 39.4688, dt: 1195.46ms, fracRes: 0.3262, norm(attn): 0.3867, norm(output): 0.3125, norm(x): 0.4752, norm(y): 0.9955, norm:183.7219, tok/sec: 109641.78, flops:42.72, batch-reuse:1
@ 690 train 8.1866 , allloss: 36.4992, dt: 1171.47ms, fracRes: 0.3325, norm(attn): 0.3594, norm(output): 0.2266, norm(x): 0.4301, norm(y): 0.9951, norm:154.9997, tok/sec: 111886.76, flops:43.59, batch-reuse:1
@ 691 train 8.1337 , allloss: 35.1964, dt: 1145.13ms, fracRes: 0.2619, norm(attn): 0.3867, norm(output): 0.1865, norm(x): 0.3561, norm(y): 0.9945, norm:157.6474, tok/sec: 114459.99, flops:44.59, batch-reuse:1
@ 692 train 8.1112 , allloss: 33.9439, dt: 1120.88ms, fracRes: 0.1198, norm(attn): 0.4688, norm(output): 0.2012, norm(x): 0.2724, norm(y): 0.9934, norm:150.1929, tok/sec: 116936.80, flops:45.56, batch-reuse:1
@ 693 train 11.4727 , allloss: 34.9303, dt: 1127.13ms, fracRes: 0.0389, norm(attn): 0.6055, norm(output): 0.3008, norm(x): 0.3057, norm(y): 0.9912, norm:391.4418, tok/sec: 116288.10, flops:45.31, batch-reuse:1
@ 694 train 12.1050 , allloss: 35.1955, dt: 1153.71ms, fracRes: 0.0303, norm(attn): 0.7344, norm(output): 0.3438, norm(x): 0.3358, norm(y): 0.9910, norm:288.6604, tok/sec: 113609.27, flops:44.26, batch-reuse:1
@ 695 train 12.5484 , allloss: 36.3518, dt: 1155.81ms, fracRes: 0.0281, norm(attn): 0.9062, norm(output): 0.4082, norm(x): 0.3906, norm(y): 0.9908, norm:321.4854, tok/sec: 113402.48, flops:44.18, batch-reuse:1
@ 696 train 13.4496 , allloss: 38.0299, dt: 1141.96ms, fracRes: 0.0357, norm(attn): 1.0547, norm(output): 0.5195, norm(x): 0.4866, norm(y): 0.9903, norm:351.8325, tok/sec: 114778.42, flops:44.72, batch-reuse:1
@ 697 train 14.0792 , allloss: 40.3782, dt: 1151.94ms, fracRes: 0.0673, norm(attn): 1.1172, norm(output): 0.6328, norm(x): 0.5908, norm(y): 0.9898, norm:377.1856, tok/sec: 113784.16, flops:44.33, batch-reuse:1
@ 698 train 14.3443 , allloss: 41.9483, dt: 1135.33ms, fracRes: 0.1038, norm(attn): 1.1172, norm(output): 0.6992, norm(x): 0.6547, norm(y): 0.9896, norm:302.5861, tok/sec: 115448.62, flops:44.98, batch-reuse:1
@ 699 train 14.4681 , allloss: 42.4247, dt: 1153.01ms, fracRes: 0.1298, norm(attn): 1.0703, norm(output): 0.7383, norm(x): 0.6763, norm(y): 0.9894, norm:231.1888, tok/sec: 113678.45, flops:44.29, batch-reuse:1
@ 700 train 14.5679 , allloss: 41.7369, dt: 1150.46ms, fracRes: 0.1523, norm(attn): 1.0391, norm(output): 0.7070, norm(x): 0.6656, norm(y): 0.9892, norm:231.4052, tok/sec: 113930.10, flops:44.39, batch-reuse:1
@ 701 train 14.5367 , allloss: 40.1454, dt: 1151.49ms, fracRes: 0.1720, norm(attn): 1.0078, norm(output): 0.6680, norm(x): 0.6340, norm(y): 0.9891, norm:250.2453, tok/sec: 113827.96, flops:44.35, batch-reuse:1
@ 702 train 14.5459 , allloss: 38.0832, dt: 1161.18ms, fracRes: 0.1746, norm(attn): 1.0000, norm(output): 0.5859, norm(x): 0.5807, norm(y): 0.9890, norm:285.4017, tok/sec: 112877.98, flops:43.98, batch-reuse:1
@ 703 train 14.4850 , allloss: 36.1773, dt: 1182.54ms, fracRes: 0.1616, norm(attn): 1.0078, norm(output): 0.4922, norm(x): 0.5047, norm(y): 0.9889, norm:343.2236, tok/sec: 110839.54, flops:43.18, batch-reuse:1
@ 704 train 14.0968 , allloss: 36.4187, dt: 1136.94ms, fracRes: 0.1392, norm(attn): 1.0078, norm(output): 0.4043, norm(x): 0.4330, norm(y): 0.9889, norm:402.9750, tok/sec: 115285.37, flops:44.92, batch-reuse:1
@ 705 train 13.6812 , allloss: 33.9524, dt: 1158.15ms, fracRes: 0.1229, norm(attn): 0.9844, norm(output): 0.3730, norm(x): 0.4040, norm(y): 0.9890, norm:352.9503, tok/sec: 113173.53, flops:44.09, batch-reuse:1
@ 706 train 13.3958 , allloss: 31.9803, dt: 1178.91ms, fracRes: 0.1228, norm(attn): 0.9180, norm(output): 0.4062, norm(x): 0.4258, norm(y): 0.9892, norm:222.1074, tok/sec: 111180.26, flops:43.32, batch-reuse:1
@ 707 train 12.9754 , allloss: 31.7102, dt: 1161.50ms, fracRes: 0.1001, norm(attn): 0.8828, norm(output): 0.4082, norm(x): 0.4174, norm(y): 0.9895, norm:281.3880, tok/sec: 112846.86, flops:43.97, batch-reuse:1
@ 708 train 12.4016 , allloss: 31.0385, dt: 1147.56ms, fracRes: 0.0563, norm(attn): 0.8594, norm(output): 0.3770, norm(x): 0.3715, norm(y): 0.9898, norm:204.2981, tok/sec: 114217.74, flops:44.50, batch-reuse:1
@ 709 train 11.4972 , allloss: 32.2619, dt: 1160.85ms, fracRes: 0.0221, norm(attn): 0.7383, norm(output): 0.3008, norm(x): 0.2864, norm(y): 0.9903, norm:213.6972, tok/sec: 112909.97, flops:43.99, batch-reuse:1
@ 710 train 8.4746 , allloss: 42.2599, dt: 1188.64ms, fracRes: 0.0141, norm(attn): 0.8008, norm(output): 0.2168, norm(x): 0.2079, norm(y): 0.9926, norm:146.4461, tok/sec: 110270.73, flops:42.96, batch-reuse:1
@ 711 train 8.0382 , allloss: 33.7062, dt: 1177.15ms, fracRes: 0.0136, norm(attn): 0.8047, norm(output): 0.2012, norm(x): 0.1959, norm(y): 0.9938, norm:92.4393, tok/sec: 111347.17, flops:43.38, batch-reuse:1
@ 712 train 7.8011 , allloss: 27.8056, dt: 1168.92ms, fracRes: 0.0154, norm(attn): 0.7969, norm(output): 0.2031, norm(x): 0.1974, norm(y): 0.9946, norm:109.1477, tok/sec: 112130.42, flops:43.69, batch-reuse:1
@ 713 train 7.8846 , allloss: 26.8815, dt: 1163.03ms, fracRes: 0.0205, norm(attn): 0.7773, norm(output): 0.2314, norm(x): 0.2240, norm(y): 0.9946, norm:133.6384, tok/sec: 112698.53, flops:43.91, batch-reuse:1
@ 714 train 7.7592 , allloss: 26.4244, dt: 1170.57ms, fracRes: 0.0210, norm(attn): 0.7734, norm(output): 0.2539, norm(x): 0.2445, norm(y): 0.9947, norm:128.2162, tok/sec: 111972.90, flops:43.62, batch-reuse:1
@ 715 train 7.7744 , allloss: 26.8151, dt: 1130.29ms, fracRes: 0.0208, norm(attn): 0.7852, norm(output): 0.2676, norm(x): 0.2576, norm(y): 0.9948, norm:93.3257, tok/sec: 115963.28, flops:45.18, batch-reuse:1
@ 716 train 7.9043 , allloss: 27.3040, dt: 1169.10ms, fracRes: 0.0195, norm(attn): 0.7852, norm(output): 0.2676, norm(x): 0.2559, norm(y): 0.9947, norm:61.1522, tok/sec: 112114.07, flops:43.68, batch-reuse:1
@ 717 train 7.9622 , allloss: 26.8169, dt: 1169.03ms, fracRes: 0.0200, norm(attn): 0.7812, norm(output): 0.2715, norm(x): 0.2586, norm(y): 0.9946, norm:73.0457, tok/sec: 112120.58, flops:43.68, batch-reuse:1
@ 718 train 8.1504 , allloss: 26.7168, dt: 1149.35ms, fracRes: 0.0231, norm(attn): 0.7656, norm(output): 0.2676, norm(x): 0.2593, norm(y): 0.9942, norm:86.3675, tok/sec: 114040.59, flops:44.43, batch-reuse:1
@ 719 train 8.2340 , allloss: 24.0911, dt: 1144.43ms, fracRes: 0.0295, norm(attn): 0.6836, norm(output): 0.2354, norm(x): 0.2343, norm(y): 0.9935, norm:124.8064, tok/sec: 114530.12, flops:44.62, batch-reuse:1
@ 720 train 8.0482 , allloss: 23.0265, dt: 1148.42ms, fracRes: 0.0543, norm(attn): 0.6562, norm(output): 0.1924, norm(x): 0.2163, norm(y): 0.9933, norm:164.9420, tok/sec: 114132.74, flops:44.47, batch-reuse:1
@ 721 train 8.3101 , allloss: 23.2684, dt: 1133.85ms, fracRes: 0.1156, norm(attn): 0.5703, norm(output): 0.1289, norm(x): 0.2070, norm(y): 0.9925, norm:114.9794, tok/sec: 115598.76, flops:45.04, batch-reuse:1
@ 722 train 8.6256 , allloss: 22.8228, dt: 1157.18ms, fracRes: 0.1581, norm(attn): 0.4961, norm(output): 0.0898, norm(x): 0.2062, norm(y): 0.9920, norm:91.6586, tok/sec: 113268.90, flops:44.13, batch-reuse:1
@ 723 train 8.4478 , allloss: 21.4044, dt: 1158.25ms, fracRes: 0.1205, norm(attn): 0.4824, norm(output): 0.0781, norm(x): 0.1658, norm(y): 0.9920, norm:97.7468, tok/sec: 113163.56, flops:44.09, batch-reuse:1
@ 724 train 8.0154 , allloss: 20.2204, dt: 1136.01ms, fracRes: 0.0783, norm(attn): 0.4824, norm(output): 0.0703, norm(x): 0.1246, norm(y): 0.9921, norm:87.0644, tok/sec: 115379.01, flops:44.95, batch-reuse:1
@ 725 train 7.8493 , allloss: 19.1891, dt: 1140.56ms, fracRes: 0.0491, norm(attn): 0.4629, norm(output): 0.0664, norm(x): 0.0986, norm(y): 0.9917, norm:63.1671, tok/sec: 114919.04, flops:44.77, batch-reuse:1
@ 726 train 7.7881 , allloss: 18.4703, dt: 1138.40ms, fracRes: 0.0498, norm(attn): 0.4453, norm(output): 0.0654, norm(x): 0.0990, norm(y): 0.9918, norm:56.7653, tok/sec: 115137.32, flops:44.86, batch-reuse:1
@ 727 train 7.8460 , allloss: 18.9958, dt: 1146.96ms, fracRes: 0.0618, norm(attn): 0.4453, norm(output): 0.0659, norm(x): 0.1105, norm(y): 0.9913, norm:52.5158, tok/sec: 114277.95, flops:44.52, batch-reuse:1
@ 728 train 7.8484 , allloss: 18.0111, dt: 1157.17ms, fracRes: 0.0391, norm(attn): 0.4590, norm(output): 0.0659, norm(x): 0.0931, norm(y): 0.9911, norm:56.1876, tok/sec: 113269.65, flops:44.13, batch-reuse:1
@ 729 train 7.7818 , allloss: 17.3780, dt: 1134.26ms, fracRes: 0.0151, norm(attn): 0.4375, norm(output): 0.0664, norm(x): 0.0748, norm(y): 0.9909, norm:56.8074, tok/sec: 115556.87, flops:45.02, batch-reuse:1
@ 730 train 7.7430 , allloss: 16.7896, dt: 1151.72ms, fracRes: 0.0110, norm(attn): 0.3750, norm(output): 0.0564, norm(x): 0.0620, norm(y): 0.9918, norm:33.6594, tok/sec: 113805.58, flops:44.34, batch-reuse:1
@ 731 train 7.8085 , allloss: 17.3544, dt: 1157.40ms, fracRes: 0.0109, norm(attn): 0.3750, norm(output): 0.0564, norm(x): 0.0619, norm(y): 0.9921, norm:53.5572, tok/sec: 113247.27, flops:44.12, batch-reuse:1
@ 732 train 8.6932 , allloss: 17.3200, dt: 1152.46ms, fracRes: 0.0109, norm(attn): 0.4043, norm(output): 0.0591, norm(x): 0.0649, norm(y): 0.9916, norm:164.3083, tok/sec: 113732.31, flops:44.31, batch-reuse:1
@ 733 train 8.5480 , allloss: 15.5622, dt: 1133.23ms, fracRes: 0.0132, norm(attn): 0.4688, norm(output): 0.0659, norm(x): 0.0724, norm(y): 0.9914, norm:95.8678, tok/sec: 115662.00, flops:45.06, batch-reuse:1
@ 734 train 8.2377 , allloss: 15.7881, dt: 1146.79ms, fracRes: 0.0173, norm(attn): 0.5234, norm(output): 0.0698, norm(x): 0.0800, norm(y): 0.9912, norm:74.7460, tok/sec: 114294.87, flops:44.53, batch-reuse:1
@ 735 train 8.1005 , allloss: 16.6528, dt: 1167.37ms, fracRes: 0.0225, norm(attn): 0.5742, norm(output): 0.0737, norm(x): 0.0884, norm(y): 0.9907, norm:72.5589, tok/sec: 112279.73, flops:43.74, batch-reuse:1
@ 736 train 8.0195 , allloss: 17.1276, dt: 1188.84ms, fracRes: 0.0222, norm(attn): 0.5703, norm(output): 0.0762, norm(x): 0.0903, norm(y): 0.9907, norm:63.9206, tok/sec: 110251.58, flops:42.95, batch-reuse:1
@ 737 train 7.9223 , allloss: 17.2355, dt: 1185.05ms, fracRes: 0.0191, norm(attn): 0.5430, norm(output): 0.0781, norm(x): 0.0890, norm(y): 0.9908, norm:58.5652, tok/sec: 110604.50, flops:43.09, batch-reuse:1
@ 738 train 8.0766 , allloss: 18.5658, dt: 1193.12ms, fracRes: 0.0163, norm(attn): 0.5312, norm(output): 0.0781, norm(x): 0.0866, norm(y): 0.9907, norm:66.2904, tok/sec: 109856.58, flops:42.80, batch-reuse:1
@ 739 train 8.0059 , allloss: 21.3418, dt: 1189.91ms, fracRes: 0.0151, norm(attn): 0.5000, norm(output): 0.0767, norm(x): 0.0843, norm(y): 0.9908, norm:117.9917, tok/sec: 110152.68, flops:42.92, batch-reuse:1
@ 740 train 7.8218 , allloss: 18.2061, dt: 1146.95ms, fracRes: 0.0156, norm(attn): 0.4844, norm(output): 0.0752, norm(x): 0.0837, norm(y): 0.9914, norm:56.9277, tok/sec: 114278.52, flops:44.52, batch-reuse:1
@ 741 train 8.1443 , allloss: 17.5257, dt: 1143.95ms, fracRes: 0.0216, norm(attn): 0.5586, norm(output): 0.0811, norm(x): 0.0960, norm(y): 0.9906, norm:158.6762, tok/sec: 114577.93, flops:44.64, batch-reuse:1
@ 742 train 7.9533 , allloss: 17.4465, dt: 1148.64ms, fracRes: 0.0161, norm(attn): 0.5000, norm(output): 0.0806, norm(x): 0.0901, norm(y): 0.9914, norm:70.4152, tok/sec: 114110.87, flops:44.46, batch-reuse:1
@ 743 train 8.0462 , allloss: 16.9366, dt: 1138.39ms, fracRes: 0.0159, norm(attn): 0.5000, norm(output): 0.0854, norm(x): 0.0937, norm(y): 0.9914, norm:90.6752, tok/sec: 115137.65, flops:44.86, batch-reuse:1
@ 744 train 8.0901 , allloss: 17.4395, dt: 1149.07ms, fracRes: 0.0154, norm(attn): 0.4961, norm(output): 0.0859, norm(x): 0.0956, norm(y): 0.9914, norm:100.7891, tok/sec: 114067.92, flops:44.44, batch-reuse:1
@ 745 train 7.9419 , allloss: 19.7129, dt: 1136.62ms, fracRes: 0.0145, norm(attn): 0.4688, norm(output): 0.0845, norm(x): 0.0924, norm(y): 0.9919, norm:85.4136, tok/sec: 115317.22, flops:44.93, batch-reuse:1
@ 746 train 8.2557 , allloss: 18.7056, dt: 1140.03ms, fracRes: 0.0140, norm(attn): 0.4688, norm(output): 0.0918, norm(x): 0.0997, norm(y): 0.9917, norm:143.8886, tok/sec: 114972.13, flops:44.79, batch-reuse:1
@ 747 train 7.9934 , allloss: 19.7760, dt: 1159.79ms, fracRes: 0.0137, norm(attn): 0.4336, norm(output): 0.0889, norm(x): 0.0973, norm(y): 0.9923, norm:78.5139, tok/sec: 113013.79, flops:44.03, batch-reuse:1
@ 748 train 8.1686 , allloss: 19.6386, dt: 1161.33ms, fracRes: 0.0134, norm(attn): 0.4297, norm(output): 0.0952, norm(x): 0.1031, norm(y): 0.9923, norm:103.8429, tok/sec: 112863.40, flops:43.97, batch-reuse:1
@ 749 train 8.1911 , allloss: 21.1258, dt: 1183.62ms, fracRes: 0.0132, norm(attn): 0.4199, norm(output): 0.1006, norm(x): 0.1073, norm(y): 0.9924, norm:94.8072, tok/sec: 110737.84, flops:43.14, batch-reuse:1
@ 750 train 8.2291 , allloss: 23.1488, dt: 1172.71ms, fracRes: 0.0138, norm(attn): 0.4082, norm(output): 0.1035, norm(x): 0.1117, norm(y): 0.9926, norm:188.6211, tok/sec: 111768.68, flops:43.55, batch-reuse:1
@ 751 train 10.9937 , allloss: 20.0994, dt: 1132.85ms, fracRes: 0.0141, norm(attn): 0.4629, norm(output): 0.1406, norm(x): 0.1424, norm(y): 0.9917, norm:212.5203, tok/sec: 115701.02, flops:45.08, batch-reuse:1
@ 752 train 10.8534 , allloss: 19.8179, dt: 1156.95ms, fracRes: 0.0154, norm(attn): 0.4688, norm(output): 0.1553, norm(x): 0.1552, norm(y): 0.9919, norm:147.7784, tok/sec: 113291.00, flops:44.14, batch-reuse:1
@ 753 train 10.5558 , allloss: 19.4996, dt: 1171.95ms, fracRes: 0.0171, norm(attn): 0.4844, norm(output): 0.1709, norm(x): 0.1705, norm(y): 0.9922, norm:134.9684, tok/sec: 111841.14, flops:43.57, batch-reuse:1
@ 754 train 10.1661 , allloss: 19.3131, dt: 1160.63ms, fracRes: 0.0197, norm(attn): 0.5312, norm(output): 0.1904, norm(x): 0.1902, norm(y): 0.9924, norm:115.5974, tok/sec: 112932.12, flops:44.00, batch-reuse:1
@ 755 train 9.6889 , allloss: 19.2197, dt: 1186.84ms, fracRes: 0.0244, norm(attn): 0.5820, norm(output): 0.2090, norm(x): 0.2089, norm(y): 0.9926, norm:105.8251, tok/sec: 110437.66, flops:43.03, batch-reuse:1
@ 756 train 9.1191 , allloss: 19.1390, dt: 1178.45ms, fracRes: 0.0353, norm(attn): 0.6250, norm(output): 0.2178, norm(x): 0.2252, norm(y): 0.9929, norm:99.9371, tok/sec: 111224.21, flops:43.33, batch-reuse:1
@ 757 train 8.6539 , allloss: 19.4184, dt: 1143.67ms, fracRes: 0.0617, norm(attn): 0.6328, norm(output): 0.2158, norm(x): 0.2409, norm(y): 0.9932, norm:113.2229, tok/sec: 114606.67, flops:44.65, batch-reuse:1
@ 758 train 8.2381 , allloss: 20.5025, dt: 1144.26ms, fracRes: 0.1124, norm(attn): 0.5938, norm(output): 0.1992, norm(x): 0.2612, norm(y): 0.9935, norm:144.4243, tok/sec: 114547.16, flops:44.63, batch-reuse:1
@ 759 train 8.1144 , allloss: 22.1134, dt: 1148.36ms, fracRes: 0.1613, norm(attn): 0.5273, norm(output): 0.1670, norm(x): 0.2728, norm(y): 0.9936, norm:222.5875, tok/sec: 114138.66, flops:44.47, batch-reuse:1
@ 760 train 8.3747 , allloss: 25.0759, dt: 1156.22ms, fracRes: 0.1602, norm(attn): 0.4668, norm(output): 0.1387, norm(x): 0.2521, norm(y): 0.9934, norm:138.7016, tok/sec: 113362.86, flops:44.17, batch-reuse:1
@ 761 train 8.1441 , allloss: 24.3350, dt: 1174.07ms, fracRes: 0.1538, norm(attn): 0.4629, norm(output): 0.1299, norm(x): 0.2407, norm(y): 0.9934, norm:138.4504, tok/sec: 111638.67, flops:43.49, batch-reuse:1
@ 762 train 7.8166 , allloss: 22.1407, dt: 1435.52ms, fracRes: 0.1296, norm(attn): 0.5000, norm(output): 0.1377, norm(x): 0.2266, norm(y): 0.9934, norm:249.8461, tok/sec: 91306.58, flops:35.57, batch-reuse:1
@ 763 train 7.8019 , allloss: 20.5364, dt: 1155.43ms, fracRes: 0.0849, norm(attn): 0.5508, norm(output): 0.1465, norm(x): 0.2007, norm(y): 0.9934, norm:207.1468, tok/sec: 113439.57, flops:44.20, batch-reuse:1
@ 764 train 7.7911 , allloss: 19.5248, dt: 1159.79ms, fracRes: 0.0479, norm(attn): 0.5742, norm(output): 0.1523, norm(x): 0.1777, norm(y): 0.9931, norm:157.9086, tok/sec: 113013.23, flops:44.03, batch-reuse:1
@ 765 train 7.7484 , allloss: 18.9133, dt: 1160.24ms, fracRes: 0.0248, norm(attn): 0.5820, norm(output): 0.1543, norm(x): 0.1616, norm(y): 0.9929, norm:90.2494, tok/sec: 112970.02, flops:44.01, batch-reuse:1
@ 766 train 7.7297 , allloss: 18.2885, dt: 1157.59ms, fracRes: 0.0116, norm(attn): 0.5898, norm(output): 0.1523, norm(x): 0.1507, norm(y): 0.9926, norm:30.0458, tok/sec: 113228.31, flops:44.11, batch-reuse:1
@ 767 train 7.8230 , allloss: 17.6027, dt: 1151.65ms, fracRes: 0.0077, norm(attn): 0.6016, norm(output): 0.1543, norm(x): 0.1481, norm(y): 0.9923, norm:28.9802, tok/sec: 113812.22, flops:44.34, batch-reuse:1
@ 768 train 7.9573 , allloss: 17.1407, dt: 1156.43ms, fracRes: 0.0090, norm(attn): 0.6055, norm(output): 0.1611, norm(x): 0.1563, norm(y): 0.9921, norm:31.0392, tok/sec: 113341.83, flops:44.16, batch-reuse:1
@ 769 train 7.9137 , allloss: 16.8583, dt: 1157.31ms, fracRes: 0.0142, norm(attn): 0.6250, norm(output): 0.1768, norm(x): 0.1737, norm(y): 0.9920, norm:50.2928, tok/sec: 113255.83, flops:44.12, batch-reuse:1
@ 770 train 8.0032 , allloss: 16.9913, dt: 1134.56ms, fracRes: 0.0215, norm(attn): 0.6641, norm(output): 0.2002, norm(x): 0.1983, norm(y): 0.9919, norm:46.7753, tok/sec: 115527.17, flops:45.01, batch-reuse:1
@ 771 train 8.0881 , allloss: 17.5063, dt: 1151.30ms, fracRes: 0.0295, norm(attn): 0.7148, norm(output): 0.2266, norm(x): 0.2272, norm(y): 0.9919, norm:35.9865, tok/sec: 113846.84, flops:44.35, batch-reuse:1
@ 772 train 8.1794 , allloss: 17.9391, dt: 1165.24ms, fracRes: 0.0426, norm(attn): 0.7500, norm(output): 0.2373, norm(x): 0.2485, norm(y): 0.9918, norm:52.4774, tok/sec: 112484.70, flops:43.82, batch-reuse:1
@ 773 train 8.2761 , allloss: 18.3407, dt: 1154.05ms, fracRes: 0.0532, norm(attn): 0.7539, norm(output): 0.2344, norm(x): 0.2520, norm(y): 0.9918, norm:88.4559, tok/sec: 113576.08, flops:44.25, batch-reuse:1
@ 774 train 8.2382 , allloss: 18.3229, dt: 1182.18ms, fracRes: 0.0603, norm(attn): 0.7461, norm(output): 0.2207, norm(x): 0.2433, norm(y): 0.9918, norm:102.6140, tok/sec: 110872.76, flops:43.20, batch-reuse:1
@ 775 train 8.2334 , allloss: 18.2641, dt: 1180.37ms, fracRes: 0.0609, norm(attn): 0.7266, norm(output): 0.1973, norm(x): 0.2221, norm(y): 0.9918, norm:125.5739, tok/sec: 111043.12, flops:43.26, batch-reuse:1
@ 776 train 8.0328 , allloss: 18.2009, dt: 1177.13ms, fracRes: 0.0543, norm(attn): 0.6914, norm(output): 0.1621, norm(x): 0.1894, norm(y): 0.9919, norm:144.1809, tok/sec: 111348.75, flops:43.38, batch-reuse:1
@ 777 train 7.8777 , allloss: 22.6111, dt: 1155.08ms, fracRes: 0.0369, norm(attn): 0.6055, norm(output): 0.1260, norm(x): 0.1444, norm(y): 0.9919, norm:100.3394, tok/sec: 113474.62, flops:44.21, batch-reuse:1
@ 778 train 7.8548 , allloss: 29.7923, dt: 1152.71ms, fracRes: 0.0161, norm(attn): 0.4785, norm(output): 0.1025, norm(x): 0.1088, norm(y): 0.9919, norm:66.9868, tok/sec: 113707.28, flops:44.30, batch-reuse:1
@ 779 train 8.1949 , allloss: 27.7030, dt: 1138.09ms, fracRes: 0.0107, norm(attn): 0.4844, norm(output): 0.0898, norm(x): 0.0924, norm(y): 0.9920, norm:121.8442, tok/sec: 115168.58, flops:44.87, batch-reuse:1
@ 780 train 7.8403 , allloss: 21.0895, dt: 1142.67ms, fracRes: 0.0192, norm(attn): 0.5234, norm(output): 0.0791, norm(x): 0.0892, norm(y): 0.9927, norm:48.2205, tok/sec: 114706.96, flops:44.69, batch-reuse:1
@ 781 train 7.7539 , allloss: 18.6562, dt: 1150.92ms, fracRes: 0.0193, norm(attn): 0.5469, norm(output): 0.0771, norm(x): 0.0874, norm(y): 0.9923, norm:47.9399, tok/sec: 113884.74, flops:44.37, batch-reuse:1
@ 782 train 8.3280 , allloss: 19.0002, dt: 1159.95ms, fracRes: 0.0138, norm(attn): 0.5703, norm(output): 0.0796, norm(x): 0.0867, norm(y): 0.9912, norm:350.4578, tok/sec: 112997.62, flops:44.02, batch-reuse:1
@ 783 train 8.0494 , allloss: 16.7399, dt: 1178.78ms, fracRes: 0.0117, norm(attn): 0.5508, norm(output): 0.0757, norm(x): 0.0811, norm(y): 0.9916, norm:109.3469, tok/sec: 111192.72, flops:43.32, batch-reuse:1
@ 784 train 7.7778 , allloss: 16.7083, dt: 1175.44ms, fracRes: 0.0115, norm(attn): 0.5195, norm(output): 0.0776, norm(x): 0.0823, norm(y): 0.9916, norm:38.4668, tok/sec: 111509.15, flops:43.44, batch-reuse:1
@ 785 train 7.7449 , allloss: 17.3969, dt: 1160.32ms, fracRes: 0.0104, norm(attn): 0.4922, norm(output): 0.0771, norm(x): 0.0807, norm(y): 0.9915, norm:39.7980, tok/sec: 112962.03, flops:44.01, batch-reuse:1
@ 786 train 7.7276 , allloss: 19.4968, dt: 1147.78ms, fracRes: 0.0090, norm(attn): 0.4688, norm(output): 0.0737, norm(x): 0.0768, norm(y): 0.9914, norm:35.7095, tok/sec: 114195.77, flops:44.49, batch-reuse:1
@ 787 train 7.9020 , allloss: 23.7875, dt: 1136.96ms, fracRes: 0.0072, norm(attn): 0.4316, norm(output): 0.0732, norm(x): 0.0749, norm(y): 0.9911, norm:78.2951, tok/sec: 115283.22, flops:44.91, batch-reuse:1
@ 788 train 7.9040 , allloss: 19.7081, dt: 1134.38ms, fracRes: 0.0076, norm(attn): 0.4297, norm(output): 0.0703, norm(x): 0.0721, norm(y): 0.9910, norm:44.7885, tok/sec: 115545.39, flops:45.02, batch-reuse:1
@ 789 train 7.7204 , allloss: 18.3529, dt: 1142.91ms, fracRes: 0.0083, norm(attn): 0.4102, norm(output): 0.0679, norm(x): 0.0709, norm(y): 0.9912, norm:45.2910, tok/sec: 114682.48, flops:44.68, batch-reuse:1
@ 790 train 7.8749 , allloss: 21.1848, dt: 1165.46ms, fracRes: 0.0094, norm(attn): 0.3438, norm(output): 0.0674, norm(x): 0.0713, norm(y): 0.9918, norm:114.6026, tok/sec: 112463.83, flops:43.82, batch-reuse:1
@ 791 train 7.9304 , allloss: 17.6612, dt: 1127.16ms, fracRes: 0.0140, norm(attn): 0.3477, norm(output): 0.0659, norm(x): 0.0735, norm(y): 0.9918, norm:92.6194, tok/sec: 116285.61, flops:45.30, batch-reuse:1
@ 792 train 9.5142 , allloss: 16.1207, dt: 1136.18ms, fracRes: 0.0133, norm(attn): 0.5781, norm(output): 0.0674, norm(x): 0.0747, norm(y): 0.9909, norm:140.7753, tok/sec: 115361.86, flops:44.94, batch-reuse:1
@ 793 train 8.6789 , allloss: 14.1748, dt: 1179.70ms, fracRes: 0.0222, norm(attn): 0.5859, norm(output): 0.0635, norm(x): 0.0786, norm(y): 0.9916, norm:94.3231, tok/sec: 111106.22, flops:43.29, batch-reuse:1
@ 794 train 8.0245 , allloss: 13.7500, dt: 1145.89ms, fracRes: 0.0420, norm(attn): 0.5508, norm(output): 0.0596, norm(x): 0.0901, norm(y): 0.9926, norm:132.4994, tok/sec: 114384.40, flops:44.56, batch-reuse:1
@ 795 train 7.7857 , allloss: 13.2409, dt: 1156.92ms, fracRes: 0.0452, norm(attn): 0.5391, norm(output): 0.0557, norm(x): 0.0896, norm(y): 0.9928, norm:134.1835, tok/sec: 113294.04, flops:44.14, batch-reuse:1
@ 796 train 7.8861 , allloss: 12.8481, dt: 1144.85ms, fracRes: 0.0299, norm(attn): 0.5508, norm(output): 0.0542, norm(x): 0.0754, norm(y): 0.9924, norm:76.3118, tok/sec: 114488.69, flops:44.60, batch-reuse:1
@ 797 train 7.9295 , allloss: 13.0177, dt: 1157.25ms, fracRes: 0.0189, norm(attn): 0.6250, norm(output): 0.0474, norm(x): 0.0613, norm(y): 0.9923, norm:67.9280, tok/sec: 113261.39, flops:44.13, batch-reuse:1
@ 798 train 7.9037 , allloss: 13.1009, dt: 1142.22ms, fracRes: 0.0170, norm(attn): 0.6094, norm(output): 0.0483, norm(x): 0.0613, norm(y): 0.9916, norm:54.2754, tok/sec: 114752.48, flops:44.71, batch-reuse:1
@ 799 train 7.7859 , allloss: 13.0658, dt: 1135.98ms, fracRes: 0.0122, norm(attn): 0.6523, norm(output): 0.0471, norm(x): 0.0564, norm(y): 0.9913, norm:33.7855, tok/sec: 115382.76, flops:44.95, batch-reuse:1
@ 800 train 7.7115 , allloss: 12.5400, dt: 1132.17ms, fracRes: 0.0133, norm(attn): 0.6836, norm(output): 0.0508, norm(x): 0.0603, norm(y): 0.9914, norm:35.6523, tok/sec: 115770.46, flops:45.10, batch-reuse:1
@ 801 train 7.7566 , allloss: 12.4053, dt: 1159.24ms, fracRes: 0.0190, norm(attn): 0.6484, norm(output): 0.0618, norm(x): 0.0739, norm(y): 0.9915, norm:44.2932, tok/sec: 113067.00, flops:44.05, batch-reuse:1
@ 802 train 7.8265 , allloss: 12.4188, dt: 1163.58ms, fracRes: 0.0162, norm(attn): 0.6250, norm(output): 0.0664, norm(x): 0.0760, norm(y): 0.9914, norm:46.1930, tok/sec: 112645.30, flops:43.89, batch-reuse:1
@ 803 train 7.8274 , allloss: 12.5076, dt: 1134.84ms, fracRes: 0.0108, norm(attn): 0.6289, norm(output): 0.0645, norm(x): 0.0701, norm(y): 0.9912, norm:36.0660, tok/sec: 115498.27, flops:45.00, batch-reuse:1
@ 804 train 7.6823 , allloss: 12.4227, dt: 1147.68ms, fracRes: 0.0070, norm(attn): 0.6875, norm(output): 0.0586, norm(x): 0.0618, norm(y): 0.9909, norm:26.4671, tok/sec: 114205.90, flops:44.49, batch-reuse:1
@ 805 train 7.7898 , allloss: 13.6280, dt: 1152.12ms, fracRes: 0.0069, norm(attn): 0.7578, norm(output): 0.0571, norm(x): 0.0604, norm(y): 0.9904, norm:28.3188, tok/sec: 113765.70, flops:44.32, batch-reuse:1
@ 806 train 9.1787 , allloss: 17.1666, dt: 1155.04ms, fracRes: 0.0273, norm(attn): 0.7305, norm(output): 0.0732, norm(x): 0.0925, norm(y): 0.9895, norm:974.8187, tok/sec: 113478.76, flops:44.21, batch-reuse:1
@ 807 train 8.0271 , allloss: 13.2718, dt: 1147.25ms, fracRes: 0.0082, norm(attn): 1.1562, norm(output): 0.0620, norm(x): 0.0657, norm(y): 0.9903, norm:80.8496, tok/sec: 114248.46, flops:44.51, batch-reuse:1
@ 808 train 8.3550 , allloss: 12.8353, dt: 1136.60ms, fracRes: 0.0094, norm(attn): 1.3125, norm(output): 0.0659, norm(x): 0.0704, norm(y): 0.9906, norm:145.9536, tok/sec: 115319.47, flops:44.93, batch-reuse:1
@ 809 train 8.5515 , allloss: 12.6211, dt: 1139.86ms, fracRes: 0.0090, norm(attn): 1.3750, norm(output): 0.0698, norm(x): 0.0733, norm(y): 0.9909, norm:149.3310, tok/sec: 114989.35, flops:44.80, batch-reuse:1
@ 810 train 8.5619 , allloss: 12.4798, dt: 1159.70ms, fracRes: 0.0075, norm(attn): 1.3984, norm(output): 0.0713, norm(x): 0.0745, norm(y): 0.9912, norm:128.2138, tok/sec: 113021.95, flops:44.03, batch-reuse:1
@ 811 train 8.5738 , allloss: 12.3779, dt: 1151.14ms, fracRes: 0.0058, norm(attn): 1.3828, norm(output): 0.0742, norm(x): 0.0751, norm(y): 0.9915, norm:116.0921, tok/sec: 113862.57, flops:44.36, batch-reuse:1
@ 812 train 8.5348 , allloss: 12.2359, dt: 1142.64ms, fracRes: 0.0046, norm(attn): 1.3125, norm(output): 0.0767, norm(x): 0.0755, norm(y): 0.9917, norm:104.0037, tok/sec: 114710.07, flops:44.69, batch-reuse:1
@ 813 train 8.7012 , allloss: 12.5915, dt: 1179.97ms, fracRes: 0.0040, norm(attn): 1.2109, norm(output): 0.0776, norm(x): 0.0762, norm(y): 0.9919, norm:89.7481, tok/sec: 111080.88, flops:43.28, batch-reuse:1
@ 814 train 8.6966 , allloss: 12.6117, dt: 1169.91ms, fracRes: 0.0038, norm(attn): 1.1172, norm(output): 0.0786, norm(x): 0.0784, norm(y): 0.9921, norm:85.3132, tok/sec: 112036.22, flops:43.65, batch-reuse:1
@ 815 train 8.6091 , allloss: 12.5681, dt: 1128.22ms, fracRes: 0.0038, norm(attn): 1.0469, norm(output): 0.0835, norm(x): 0.0817, norm(y): 0.9924, norm:82.8614, tok/sec: 116175.69, flops:45.26, batch-reuse:1
@ 816 train 8.5366 , allloss: 12.6217, dt: 1149.55ms, fracRes: 0.0040, norm(attn): 0.9961, norm(output): 0.0869, norm(x): 0.0860, norm(y): 0.9927, norm:78.2920, tok/sec: 114019.85, flops:44.42, batch-reuse:1
@ 817 train 8.4830 , allloss: 12.7015, dt: 1138.75ms, fracRes: 0.0045, norm(attn): 0.9375, norm(output): 0.0938, norm(x): 0.0921, norm(y): 0.9929, norm:80.1824, tok/sec: 115102.07, flops:44.84, batch-reuse:1
@ 818 train 8.5559 , allloss: 13.0160, dt: 1140.46ms, fracRes: 0.0053, norm(attn): 0.8750, norm(output): 0.1016, norm(x): 0.0994, norm(y): 0.9931, norm:83.1780, tok/sec: 114929.57, flops:44.78, batch-reuse:1
@ 819 train 8.6572 , allloss: 13.6060, dt: 1154.78ms, fracRes: 0.0065, norm(attn): 0.7969, norm(output): 0.1079, norm(x): 0.1061, norm(y): 0.9931, norm:89.5017, tok/sec: 113503.88, flops:44.22, batch-reuse:1
@ 820 train 8.3186 , allloss: 15.5237, dt: 1156.00ms, fracRes: 0.0077, norm(attn): 0.6641, norm(output): 0.1064, norm(x): 0.1065, norm(y): 0.9932, norm:89.0675, tok/sec: 113383.98, flops:44.17, batch-reuse:1
@ 821 train 9.6710 , allloss: 34.1502, dt: 1145.11ms, fracRes: 0.0088, norm(attn): 0.5000, norm(output): 0.2373, norm(x): 0.2112, norm(y): 0.9917, norm:146.7268, tok/sec: 114462.71, flops:44.59, batch-reuse:1
@ 822 train 9.5424 , allloss: 38.8227, dt: 1161.44ms, fracRes: 0.0117, norm(attn): 0.4785, norm(output): 0.2578, norm(x): 0.2372, norm(y): 0.9914, norm:148.3125, tok/sec: 112852.88, flops:43.97, batch-reuse:1
@ 823 train 9.1207 , allloss: 43.1619, dt: 1134.75ms, fracRes: 0.0162, norm(attn): 0.4668, norm(output): 0.2441, norm(x): 0.2324, norm(y): 0.9914, norm:230.0094, tok/sec: 115507.85, flops:45.00, batch-reuse:1
@ 824 train 8.8427 , allloss: 42.8482, dt: 1153.45ms, fracRes: 0.0198, norm(attn): 0.4512, norm(output): 0.2207, norm(x): 0.2160, norm(y): 0.9914, norm:192.5690, tok/sec: 113634.63, flops:44.27, batch-reuse:1
@ 825 train 8.5166 , allloss: 42.8549, dt: 1136.27ms, fracRes: 0.0292, norm(attn): 0.4590, norm(output): 0.2109, norm(x): 0.2136, norm(y): 0.9916, norm:171.0139, tok/sec: 115352.67, flops:44.94, batch-reuse:1
@ 826 train 8.4102 , allloss: 38.9478, dt: 1146.69ms, fracRes: 0.0376, norm(attn): 0.4473, norm(output): 0.1914, norm(x): 0.1986, norm(y): 0.9917, norm:153.5442, tok/sec: 114304.95, flops:44.53, batch-reuse:1
@ 827 train 8.4347 , allloss: 33.8299, dt: 1130.13ms, fracRes: 0.0460, norm(attn): 0.4199, norm(output): 0.1689, norm(x): 0.1875, norm(y): 0.9918, norm:157.5359, tok/sec: 115979.11, flops:45.19, batch-reuse:1
@ 828 train 8.0509 , allloss: 32.6725, dt: 1164.09ms, fracRes: 0.0462, norm(attn): 0.3945, norm(output): 0.1631, norm(x): 0.1847, norm(y): 0.9920, norm:140.5943, tok/sec: 112596.41, flops:43.87, batch-reuse:1
@ 829 train 7.9942 , allloss: 34.4430, dt: 1166.93ms, fracRes: 0.0494, norm(attn): 0.3965, norm(output): 0.2051, norm(x): 0.2215, norm(y): 0.9919, norm:129.2720, tok/sec: 112321.80, flops:43.76, batch-reuse:1
@ 830 train 7.9978 , allloss: 38.5006, dt: 1158.30ms, fracRes: 0.0499, norm(attn): 0.4062, norm(output): 0.2734, norm(x): 0.2769, norm(y): 0.9917, norm:152.9981, tok/sec: 113158.69, flops:44.09, batch-reuse:1
@ 831 train 8.0533 , allloss: 43.8688, dt: 1129.53ms, fracRes: 0.0508, norm(attn): 0.4277, norm(output): 0.3496, norm(x): 0.3456, norm(y): 0.9915, norm:161.8568, tok/sec: 116041.61, flops:45.21, batch-reuse:1
@ 832 train 8.1125 , allloss: 50.9308, dt: 1144.75ms, fracRes: 0.0451, norm(attn): 0.4434, norm(output): 0.4316, norm(x): 0.4140, norm(y): 0.9913, norm:200.0630, tok/sec: 114497.92, flops:44.61, batch-reuse:1
@ 833 train 7.8389 , allloss: 65.9013, dt: 1137.61ms, fracRes: 0.0353, norm(attn): 0.5273, norm(output): 0.6484, norm(x): 0.6063, norm(y): 0.9911, norm:254.1153, tok/sec: 115216.70, flops:44.89, batch-reuse:1
@ 834 train 7.7850 , allloss: 75.8412, dt: 1180.21ms, fracRes: 0.0344, norm(attn): 0.5664, norm(output): 0.8047, norm(x): 0.7455, norm(y): 0.9911, norm:213.9353, tok/sec: 111058.28, flops:43.27, batch-reuse:1
@ 835 train 7.7337 , allloss: 82.5827, dt: 1181.30ms, fracRes: 0.0411, norm(attn): 0.5625, norm(output): 0.8789, norm(x): 0.8159, norm(y): 0.9911, norm:170.6749, tok/sec: 110955.69, flops:43.23, batch-reuse:1
@ 836 train 7.7566 , allloss: 88.5503, dt: 1179.37ms, fracRes: 0.0557, norm(attn): 0.5547, norm(output): 0.9336, norm(x): 0.8765, norm(y): 0.9912, norm:177.9825, tok/sec: 111136.86, flops:43.30, batch-reuse:1
@ 837 train 7.7921 , allloss: 85.6859, dt: 1153.91ms, fracRes: 0.0942, norm(attn): 0.4570, norm(output): 0.8516, norm(x): 0.8045, norm(y): 0.9913, norm:166.7132, tok/sec: 113589.20, flops:44.25, batch-reuse:1
@ 838 train 7.7217 , allloss: 74.3415, dt: 1134.39ms, fracRes: 0.1441, norm(attn): 0.4023, norm(output): 0.8047, norm(x): 0.7651, norm(y): 0.9915, norm:152.6652, tok/sec: 115544.12, flops:45.02, batch-reuse:1
@ 839 train 7.6236 , allloss: 58.9222, dt: 1151.95ms, fracRes: 0.1840, norm(attn): 0.3809, norm(output): 0.7891, norm(x): 0.7484, norm(y): 0.9916, norm:211.5549, tok/sec: 113783.01, flops:44.33, batch-reuse:1
@ 840 train 7.7040 , allloss: 55.8528, dt: 1132.90ms, fracRes: 0.1960, norm(attn): 0.4043, norm(output): 0.8164, norm(x): 0.7726, norm(y): 0.9917, norm:208.2638, tok/sec: 115695.81, flops:45.08, batch-reuse:1
@ 841 train 7.6185 , allloss: 63.4011, dt: 1141.49ms, fracRes: 0.1861, norm(attn): 0.4414, norm(output): 0.8672, norm(x): 0.8128, norm(y): 0.9919, norm:200.3088, tok/sec: 114825.39, flops:44.74, batch-reuse:1
@ 842 train 7.7283 , allloss: 70.7931, dt: 1129.06ms, fracRes: 0.1588, norm(attn): 0.4922, norm(output): 0.9297, norm(x): 0.8509, norm(y): 0.9920, norm:152.7425, tok/sec: 116089.56, flops:45.23, batch-reuse:1
@ 843 train 7.7672 , allloss: 74.6328, dt: 1120.29ms, fracRes: 0.1167, norm(attn): 0.5352, norm(output): 0.9531, norm(x): 0.8767, norm(y): 0.9922, norm:109.5691, tok/sec: 116998.50, flops:45.58, batch-reuse:1
@ 844 train 7.7785 , allloss: 76.3010, dt: 1160.67ms, fracRes: 0.0700, norm(attn): 0.5664, norm(output): 0.9648, norm(x): 0.8776, norm(y): 0.9923, norm:77.1715, tok/sec: 112927.76, flops:44.00, batch-reuse:1
@ 845 train 7.7703 , allloss: 79.1920, dt: 1177.59ms, fracRes: 0.0387, norm(attn): 0.5898, norm(output): 0.8945, norm(x): 0.8210, norm(y): 0.9925, norm:67.1584, tok/sec: 111305.55, flops:43.36, batch-reuse:1
@ 846 train 7.8889 , allloss: 83.3762, dt: 1184.69ms, fracRes: 0.0245, norm(attn): 0.5664, norm(output): 0.7656, norm(x): 0.6954, norm(y): 0.9926, norm:237.1720, tok/sec: 110638.32, flops:43.10, batch-reuse:1
@ 847 train 8.8576 , allloss: 98.5163, dt: 1142.22ms, fracRes: 0.0287, norm(attn): 0.5508, norm(output): 0.6328, norm(x): 0.6025, norm(y): 0.9926, norm:820.4841, tok/sec: 114752.38, flops:44.71, batch-reuse:1
@ 848 train 8.0764 , allloss: 87.4253, dt: 1148.57ms, fracRes: 0.0172, norm(attn): 0.6523, norm(output): 0.8398, norm(x): 0.7749, norm(y): 0.9929, norm:114.5194, tok/sec: 114117.10, flops:44.46, batch-reuse:1
@ 849 train 7.9185 , allloss: 86.2824, dt: 1138.98ms, fracRes: 0.0111, norm(attn): 0.7852, norm(output): 1.1016, norm(x): 1.0049, norm(y): 0.9932, norm:132.6072, tok/sec: 115078.08, flops:44.83, batch-reuse:1
@ 850 train 7.8964 , allloss: 85.0035, dt: 1142.55ms, fracRes: 0.0096, norm(attn): 0.8633, norm(output): 1.2266, norm(x): 1.1279, norm(y): 0.9933, norm:182.2643, tok/sec: 114718.74, flops:44.69, batch-reuse:1
@ 851 train 8.0693 , allloss: 80.1401, dt: 1156.28ms, fracRes: 0.0072, norm(attn): 0.9102, norm(output): 1.2656, norm(x): 1.1533, norm(y): 0.9934, norm:219.5258, tok/sec: 113356.20, flops:44.16, batch-reuse:1
@ 852 train 8.0058 , allloss: 76.4590, dt: 1162.04ms, fracRes: 0.0078, norm(attn): 0.9336, norm(output): 1.2422, norm(x): 1.1291, norm(y): 0.9935, norm:183.0241, tok/sec: 112794.56, flops:43.94, batch-reuse:1
@ 853 train 7.9453 , allloss: 71.9991, dt: 1166.81ms, fracRes: 0.0100, norm(attn): 0.9492, norm(output): 1.1484, norm(x): 1.0475, norm(y): 0.9935, norm:145.8905, tok/sec: 112333.49, flops:43.77, batch-reuse:1
@ 854 train 8.0097 , allloss: 65.2544, dt: 1167.11ms, fracRes: 0.0133, norm(attn): 0.9297, norm(output): 1.0391, norm(x): 0.9485, norm(y): 0.9935, norm:110.5005, tok/sec: 112304.96, flops:43.75, batch-reuse:1
@ 855 train 8.1281 , allloss: 59.6388, dt: 1166.21ms, fracRes: 0.0214, norm(attn): 0.9141, norm(output): 0.9219, norm(x): 0.8400, norm(y): 0.9934, norm:85.0583, tok/sec: 112391.11, flops:43.79, batch-reuse:1
@ 856 train 8.2578 , allloss: 55.2012, dt: 1157.69ms, fracRes: 0.0382, norm(attn): 0.9141, norm(output): 0.8359, norm(x): 0.7635, norm(y): 0.9933, norm:202.0727, tok/sec: 113218.09, flops:44.11, batch-reuse:1
@ 857 train 8.3576 , allloss: 47.2301, dt: 1138.19ms, fracRes: 0.0841, norm(attn): 0.9102, norm(output): 0.7812, norm(x): 0.7193, norm(y): 0.9932, norm:180.7616, tok/sec: 115158.44, flops:44.87, batch-reuse:1
@ 858 train 8.2675 , allloss: 39.4176, dt: 1158.96ms, fracRes: 0.2000, norm(attn): 0.7969, norm(output): 0.7070, norm(x): 0.6756, norm(y): 0.9932, norm:145.5953, tok/sec: 113094.35, flops:44.06, batch-reuse:1
@ 859 train 7.8044 , allloss: 34.2816, dt: 1169.20ms, fracRes: 0.4218, norm(attn): 0.5820, norm(output): 0.6836, norm(x): 0.7001, norm(y): 0.9936, norm:202.2762, tok/sec: 112104.12, flops:43.68, batch-reuse:1
@ 860 train 7.7882 , allloss: 33.7211, dt: 1154.69ms, fracRes: 0.5155, norm(attn): 0.4355, norm(output): 0.6602, norm(x): 0.7058, norm(y): 0.9935, norm:120.8035, tok/sec: 113512.72, flops:44.22, batch-reuse:1
@ 861 train 7.7207 , allloss: 33.2418, dt: 1139.78ms, fracRes: 0.5756, norm(attn): 0.3379, norm(output): 0.6406, norm(x): 0.7166, norm(y): 0.9934, norm:89.8672, tok/sec: 114997.15, flops:44.80, batch-reuse:1
@ 862 train 7.8621 , allloss: 32.1575, dt: 1176.57ms, fracRes: 0.5558, norm(attn): 0.3359, norm(output): 0.5859, norm(x): 0.6876, norm(y): 0.9930, norm:84.3708, tok/sec: 111401.34, flops:43.40, batch-reuse:1
@ 863 train 8.0416 , allloss: 31.5803, dt: 1157.75ms, fracRes: 0.5645, norm(attn): 0.3672, norm(output): 0.5430, norm(x): 0.6782, norm(y): 0.9924, norm:72.0446, tok/sec: 113212.36, flops:44.11, batch-reuse:1
@ 864 train 9.4401 , allloss: 36.7977, dt: 1131.60ms, fracRes: 0.4568, norm(attn): 0.4609, norm(output): 0.4395, norm(x): 0.5914, norm(y): 0.9915, norm:117.5902, tok/sec: 115828.66, flops:45.13, batch-reuse:1
@ 865 train 8.9471 , allloss: 35.3906, dt: 1154.47ms, fracRes: 0.4773, norm(attn): 0.4766, norm(output): 0.4160, norm(x): 0.5934, norm(y): 0.9914, norm:117.3375, tok/sec: 113534.24, flops:44.23, batch-reuse:1
@ 866 train 8.3382 , allloss: 33.4042, dt: 1174.16ms, fracRes: 0.4790, norm(attn): 0.4805, norm(output): 0.4023, norm(x): 0.5916, norm(y): 0.9916, norm:67.3800, tok/sec: 111630.74, flops:43.49, batch-reuse:1
@ 867 train 8.1381 , allloss: 31.3498, dt: 1157.20ms, fracRes: 0.5047, norm(attn): 0.4512, norm(output): 0.4004, norm(x): 0.6113, norm(y): 0.9916, norm:58.2939, tok/sec: 113266.96, flops:44.13, batch-reuse:1
@ 868 train 7.8472 , allloss: 29.0628, dt: 1153.74ms, fracRes: 0.4990, norm(attn): 0.4434, norm(output): 0.3906, norm(x): 0.6124, norm(y): 0.9916, norm:57.4560, tok/sec: 113606.00, flops:44.26, batch-reuse:1
@ 869 train 7.7600 , allloss: 28.0370, dt: 1143.60ms, fracRes: 0.5379, norm(attn): 0.4121, norm(output): 0.3867, norm(x): 0.6441, norm(y): 0.9917, norm:71.7854, tok/sec: 114613.62, flops:44.65, batch-reuse:1
@ 870 train 7.6779 , allloss: 28.2150, dt: 1150.97ms, fracRes: 0.5147, norm(attn): 0.4238, norm(output): 0.3730, norm(x): 0.6399, norm(y): 0.9916, norm:82.6502, tok/sec: 113880.07, flops:44.37, batch-reuse:1
@ 871 train 7.7451 , allloss: 28.9172, dt: 1169.00ms, fracRes: 0.4829, norm(attn): 0.4648, norm(output): 0.3652, norm(x): 0.6389, norm(y): 0.9914, norm:78.4266, tok/sec: 112123.28, flops:43.68, batch-reuse:1
@ 872 train 7.7291 , allloss: 30.6703, dt: 1171.75ms, fracRes: 0.4033, norm(attn): 0.5312, norm(output): 0.3809, norm(x): 0.6195, norm(y): 0.9912, norm:75.7031, tok/sec: 111859.69, flops:43.58, batch-reuse:1
@ 873 train 7.8253 , allloss: 34.9712, dt: 1159.63ms, fracRes: 0.3947, norm(attn): 0.5664, norm(output): 0.3828, norm(x): 0.6376, norm(y): 0.9909, norm:51.4677, tok/sec: 113029.36, flops:44.04, batch-reuse:1
@ 874 train 7.7989 , allloss: 39.5305, dt: 1175.34ms, fracRes: 0.4242, norm(attn): 0.5469, norm(output): 0.3652, norm(x): 0.6499, norm(y): 0.9907, norm:40.5510, tok/sec: 111518.01, flops:43.45, batch-reuse:1
@ 875 train 7.8167 , allloss: 43.1668, dt: 1178.86ms, fracRes: 0.3251, norm(attn): 0.6797, norm(output): 0.4824, norm(x): 0.6802, norm(y): 0.9905, norm:48.5249, tok/sec: 111184.98, flops:43.32, batch-reuse:1
@ 876 train 7.7821 , allloss: 44.5851, dt: 1164.55ms, fracRes: 0.3173, norm(attn): 0.6758, norm(output): 0.5000, norm(x): 0.6882, norm(y): 0.9904, norm:62.3251, tok/sec: 112551.46, flops:43.85, batch-reuse:1
@ 877 train 7.7598 , allloss: 45.0215, dt: 1150.76ms, fracRes: 0.2961, norm(attn): 0.7422, norm(output): 0.5977, norm(x): 0.7673, norm(y): 0.9904, norm:73.8547, tok/sec: 113900.15, flops:44.38, batch-reuse:1
@ 878 train 7.6722 , allloss: 44.5010, dt: 1149.58ms, fracRes: 0.3354, norm(attn): 0.6914, norm(output): 0.6094, norm(x): 0.8073, norm(y): 0.9904, norm:66.6074, tok/sec: 114016.84, flops:44.42, batch-reuse:1
@ 879 train 7.6794 , allloss: 44.4577, dt: 1150.52ms, fracRes: 0.3474, norm(attn): 0.6758, norm(output): 0.6328, norm(x): 0.8403, norm(y): 0.9903, norm:61.4373, tok/sec: 113923.85, flops:44.38, batch-reuse:1
@ 880 train 7.7325 , allloss: 51.9788, dt: 1169.88ms, fracRes: 0.2922, norm(attn): 0.7539, norm(output): 0.7930, norm(x): 0.9353, norm(y): 0.9903, norm:72.5528, tok/sec: 112038.99, flops:43.65, batch-reuse:1
@ 881 train 7.6758 , allloss: 51.4269, dt: 1141.21ms, fracRes: 0.3364, norm(attn): 0.7266, norm(output): 0.8125, norm(x): 0.9871, norm(y): 0.9903, norm:171.9122, tok/sec: 114853.69, flops:44.75, batch-reuse:1
@ 882 train 7.6800 , allloss: 56.1447, dt: 1139.88ms, fracRes: 0.2737, norm(attn): 0.8281, norm(output): 1.0078, norm(x): 1.1156, norm(y): 0.9903, norm:118.7512, tok/sec: 114988.01, flops:44.80, batch-reuse:1
@ 883 train 7.6521 , allloss: 51.6633, dt: 1144.62ms, fracRes: 0.3495, norm(attn): 0.6797, norm(output): 0.7773, norm(x): 0.9669, norm(y): 0.9901, norm:119.7323, tok/sec: 114511.04, flops:44.61, batch-reuse:1
@ 884 train 7.6657 , allloss: 54.6981, dt: 1155.44ms, fracRes: 0.2921, norm(attn): 0.7383, norm(output): 0.8828, norm(x): 1.0172, norm(y): 0.9901, norm:203.1842, tok/sec: 113439.33, flops:44.20, batch-reuse:1
@ 885 train 7.7331 , allloss: 56.0032, dt: 1138.90ms, fracRes: 0.2422, norm(attn): 0.7734, norm(output): 0.9492, norm(x): 1.0325, norm(y): 0.9900, norm:167.8858, tok/sec: 115086.87, flops:44.84, batch-reuse:1
@ 886 train 7.9082 , allloss: 54.8835, dt: 1131.64ms, fracRes: 0.2036, norm(attn): 0.7500, norm(output): 0.8594, norm(x): 0.9264, norm(y): 0.9898, norm:169.2435, tok/sec: 115824.73, flops:45.13, batch-reuse:1
@ 887 train 7.8285 , allloss: 51.7300, dt: 1155.00ms, fracRes: 0.1455, norm(attn): 0.7266, norm(output): 0.7930, norm(x): 0.8135, norm(y): 0.9898, norm:264.5915, tok/sec: 113481.81, flops:44.21, batch-reuse:1
@ 888 train 8.0197 , allloss: 50.3546, dt: 1150.07ms, fracRes: 0.0990, norm(attn): 0.7266, norm(output): 0.7422, norm(x): 0.7351, norm(y): 0.9896, norm:328.6795, tok/sec: 113968.93, flops:44.40, batch-reuse:1
@ 889 train 8.0235 , allloss: 45.3116, dt: 1177.79ms, fracRes: 0.0803, norm(attn): 0.6562, norm(output): 0.5703, norm(x): 0.5639, norm(y): 0.9894, norm:383.4641, tok/sec: 111286.29, flops:43.36, batch-reuse:1
@ 890 train 8.2416 , allloss: 41.4427, dt: 1146.64ms, fracRes: 0.0555, norm(attn): 0.5820, norm(output): 0.3965, norm(x): 0.3901, norm(y): 0.9891, norm:372.4645, tok/sec: 114310.13, flops:44.54, batch-reuse:1
@ 891 train 8.1039 , allloss: 48.6796, dt: 1157.39ms, fracRes: 0.0517, norm(attn): 0.5000, norm(output): 0.2539, norm(x): 0.2639, norm(y): 0.9886, norm:591.1091, tok/sec: 113248.37, flops:44.12, batch-reuse:1
@ 892 train 8.1716 , allloss: 59.0220, dt: 1173.06ms, fracRes: 0.2085, norm(attn): 0.4102, norm(output): 0.1318, norm(x): 0.2614, norm(y): 0.9886, norm:741.0830, tok/sec: 111735.38, flops:43.53, batch-reuse:1
@ 893 train 8.1604 , allloss: 65.0230, dt: 1132.63ms, fracRes: 0.2067, norm(attn): 0.4199, norm(output): 0.1309, norm(x): 0.2594, norm(y): 0.9887, norm:234.6900, tok/sec: 115723.13, flops:45.09, batch-reuse:1
@ 894 train 9.0767 , allloss: 83.3604, dt: 1150.11ms, fracRes: 0.1499, norm(attn): 0.4258, norm(output): 0.1504, norm(x): 0.2335, norm(y): 0.9889, norm:2662.5730, tok/sec: 113964.40, flops:44.40, batch-reuse:1
@ 895 train 9.4674 , allloss: 107.0847, dt: 1172.49ms, fracRes: 0.1122, norm(attn): 0.4355, norm(output): 0.1846, norm(x): 0.2320, norm(y): 0.9889, norm:32835.2461, tok/sec: 111789.79, flops:43.55, batch-reuse:1
@ 896 train 11.2793 , allloss: 135.2148, dt: 1178.65ms, fracRes: 0.0709, norm(attn): 0.4355, norm(output): 0.2148, norm(x): 0.2342, norm(y): 0.9889, norm:11439.6494, tok/sec: 111205.61, flops:43.33, batch-reuse:1
@ 897 train 14.0830 , allloss: 156.2987, dt: 1176.77ms, fracRes: 0.0311, norm(attn): 0.4375, norm(output): 0.2266, norm(x): 0.2286, norm(y): 0.9889, norm:47500.8594, tok/sec: 111383.17, flops:43.39, batch-reuse:1
@ 898 train 13.9760 , allloss: 158.9209, dt: 1158.75ms, fracRes: 0.0140, norm(attn): 0.4395, norm(output): 0.2285, norm(x): 0.2187, norm(y): 0.9890, norm:9412.0293, tok/sec: 113114.83, flops:44.07, batch-reuse:1
@ 899 train 11.2208 , allloss: 160.2006, dt: 1166.61ms, fracRes: 0.0132, norm(attn): 0.4590, norm(output): 0.2363, norm(x): 0.2211, norm(y): 0.9889, norm:2472.1738, tok/sec: 112353.18, flops:43.77, batch-reuse:1
@ 900 train 10.7461 , allloss: 152.2381, dt: 1144.76ms, fracRes: 0.0198, norm(attn): 0.4648, norm(output): 0.2295, norm(x): 0.2176, norm(y): 0.9890, norm:5204.6504, tok/sec: 114497.59, flops:44.61, batch-reuse:1
@ 901 train 9.9747 , allloss: 148.5665, dt: 1152.56ms, fracRes: 0.0248, norm(attn): 0.4746, norm(output): 0.2285, norm(x): 0.2181, norm(y): 0.9890, norm:2970.5493, tok/sec: 113722.24, flops:44.31, batch-reuse:1
@ 902 train 9.4604 , allloss: 134.1494, dt: 1154.96ms, fracRes: 0.0443, norm(attn): 0.4824, norm(output): 0.2178, norm(x): 0.2197, norm(y): 0.9890, norm:940.1035, tok/sec: 113486.42, flops:44.21, batch-reuse:1
@ 903 train 8.5454 , allloss: 101.6976, dt: 1174.50ms, fracRes: 0.1258, norm(attn): 0.4414, norm(output): 0.1875, norm(x): 0.2557, norm(y): 0.9886, norm:599.2679, tok/sec: 111598.42, flops:43.48, batch-reuse:1
@ 904 train 8.5700 , allloss: 77.5694, dt: 1180.56ms, fracRes: 0.1454, norm(attn): 0.4355, norm(output): 0.1787, norm(x): 0.2634, norm(y): 0.9883, norm:380.6074, tok/sec: 111025.11, flops:43.26, batch-reuse:1
@ 905 train 8.5658 , allloss: 63.3335, dt: 1152.85ms, fracRes: 0.1417, norm(attn): 0.4434, norm(output): 0.1738, norm(x): 0.2606, norm(y): 0.9884, norm:4754.9419, tok/sec: 113693.76, flops:44.30, batch-reuse:1
@ 906 train 8.1910 , allloss: 51.3743, dt: 1171.23ms, fracRes: 0.1550, norm(attn): 0.4531, norm(output): 0.1797, norm(x): 0.2742, norm(y): 0.9885, norm:144.4377, tok/sec: 111909.26, flops:43.60, batch-reuse:1
@ 907 train 7.8122 , allloss: 47.5756, dt: 1163.95ms, fracRes: 0.1657, norm(attn): 0.4062, norm(output): 0.1709, norm(x): 0.2744, norm(y): 0.9888, norm:140.3717, tok/sec: 112609.93, flops:43.87, batch-reuse:1
@ 908 train 8.0317 , allloss: 43.3027, dt: 1146.74ms, fracRes: 0.1337, norm(attn): 0.4121, norm(output): 0.1699, norm(x): 0.2519, norm(y): 0.9891, norm:127.0009, tok/sec: 114299.20, flops:44.53, batch-reuse:1
@ 909 train 8.1050 , allloss: 38.7645, dt: 1146.73ms, fracRes: 0.0818, norm(attn): 0.4766, norm(output): 0.1963, norm(x): 0.2392, norm(y): 0.9888, norm:142.2528, tok/sec: 114300.55, flops:44.53, batch-reuse:1
@ 910 train 10.0766 , allloss: 34.6166, dt: 1159.00ms, fracRes: 0.0969, norm(attn): 0.6758, norm(output): 0.2910, norm(x): 0.3278, norm(y): 0.9891, norm:228.2863, tok/sec: 113090.51, flops:44.06, batch-reuse:1
@ 911 train 10.7441 , allloss: 33.8136, dt: 1159.22ms, fracRes: 0.1715, norm(attn): 0.7695, norm(output): 0.3789, norm(x): 0.4310, norm(y): 0.9898, norm:237.8526, tok/sec: 113069.09, flops:44.05, batch-reuse:1
@ 912 train 10.9762 , allloss: 34.0852, dt: 1162.87ms, fracRes: 0.1919, norm(attn): 0.8281, norm(output): 0.4395, norm(x): 0.4807, norm(y): 0.9902, norm:315.9809, tok/sec: 112714.66, flops:43.91, batch-reuse:1
@ 913 train 10.8516 , allloss: 33.9574, dt: 1157.35ms, fracRes: 0.1830, norm(attn): 0.8086, norm(output): 0.4297, norm(x): 0.4653, norm(y): 0.9906, norm:334.9670, tok/sec: 113251.59, flops:44.12, batch-reuse:1
@ 914 train 10.5323 , allloss: 32.2175, dt: 1122.99ms, fracRes: 0.1853, norm(attn): 0.7695, norm(output): 0.3809, norm(x): 0.4315, norm(y): 0.9909, norm:333.9278, tok/sec: 116717.06, flops:45.47, batch-reuse:1
@ 915 train 9.9028 , allloss: 30.6454, dt: 1148.45ms, fracRes: 0.1841, norm(attn): 0.7148, norm(output): 0.3066, norm(x): 0.3771, norm(y): 0.9914, norm:327.5939, tok/sec: 114129.63, flops:44.46, batch-reuse:1
@ 916 train 8.1825 , allloss: 26.4270, dt: 1158.76ms, fracRes: 0.0989, norm(attn): 0.6523, norm(output): 0.2051, norm(x): 0.2512, norm(y): 0.9920, norm:173.3506, tok/sec: 113114.08, flops:44.07, batch-reuse:1
@ 917 train 8.2099 , allloss: 28.7964, dt: 1160.80ms, fracRes: 0.0214, norm(attn): 0.6055, norm(output): 0.1309, norm(x): 0.1385, norm(y): 0.9921, norm:121.4873, tok/sec: 112915.16, flops:43.99, batch-reuse:1
@ 918 train 8.0139 , allloss: 26.1795, dt: 1144.55ms, fracRes: 0.0317, norm(attn): 0.5039, norm(output): 0.1094, norm(x): 0.1270, norm(y): 0.9916, norm:141.2824, tok/sec: 114518.77, flops:44.62, batch-reuse:1
@ 919 train 7.8284 , allloss: 23.7689, dt: 1139.28ms, fracRes: 0.0572, norm(attn): 0.5156, norm(output): 0.1099, norm(x): 0.1435, norm(y): 0.9923, norm:93.8286, tok/sec: 115047.78, flops:44.82, batch-reuse:1
@ 920 train 7.7960 , allloss: 22.0016, dt: 1142.92ms, fracRes: 0.0307, norm(attn): 0.5117, norm(output): 0.1108, norm(x): 0.1248, norm(y): 0.9925, norm:104.1020, tok/sec: 114681.62, flops:44.68, batch-reuse:1
@ 921 train 8.6432 , allloss: 22.0132, dt: 1145.47ms, fracRes: 0.0135, norm(attn): 0.4961, norm(output): 0.1128, norm(x): 0.1146, norm(y): 0.9921, norm:186.7532, tok/sec: 114426.47, flops:44.58, batch-reuse:1
@ 922 train 7.7728 , allloss: 21.0893, dt: 1142.03ms, fracRes: 0.0109, norm(attn): 0.4980, norm(output): 0.1006, norm(x): 0.1015, norm(y): 0.9927, norm:53.5386, tok/sec: 114771.21, flops:44.71, batch-reuse:1
@ 923 train 7.9289 , allloss: 21.3233, dt: 1136.92ms, fracRes: 0.0115, norm(attn): 0.5039, norm(output): 0.0923, norm(x): 0.0947, norm(y): 0.9929, norm:92.1944, tok/sec: 115286.70, flops:44.92, batch-reuse:1
@ 924 train 7.7327 , allloss: 22.3332, dt: 1159.47ms, fracRes: 0.0064, norm(attn): 0.4727, norm(output): 0.1016, norm(x): 0.1000, norm(y): 0.9924, norm:38.5019, tok/sec: 113044.77, flops:44.04, batch-reuse:1
@ 925 train 7.7571 , allloss: 21.0200, dt: 1145.89ms, fracRes: 0.0072, norm(attn): 0.4805, norm(output): 0.0977, norm(x): 0.0967, norm(y): 0.9923, norm:40.4561, tok/sec: 114384.67, flops:44.56, batch-reuse:1
@ 926 train 7.9023 , allloss: 19.2297, dt: 1153.62ms, fracRes: 0.0091, norm(attn): 0.4785, norm(output): 0.1069, norm(x): 0.1064, norm(y): 0.9921, norm:55.0083, tok/sec: 113618.14, flops:44.27, batch-reuse:1
@ 927 train 7.7173 , allloss: 18.0237, dt: 1140.59ms, fracRes: 0.0099, norm(attn): 0.4922, norm(output): 0.1001, norm(x): 0.1009, norm(y): 0.9923, norm:45.3606, tok/sec: 114915.63, flops:44.77, batch-reuse:1
@ 928 train 7.8059 , allloss: 18.1763, dt: 1159.25ms, fracRes: 0.0136, norm(attn): 0.4961, norm(output): 0.0981, norm(x): 0.1028, norm(y): 0.9921, norm:54.8042, tok/sec: 113066.16, flops:44.05, batch-reuse:1
@ 929 train 8.1144 , allloss: 18.3223, dt: 1159.94ms, fracRes: 0.0169, norm(attn): 0.4707, norm(output): 0.1060, norm(x): 0.1122, norm(y): 0.9918, norm:56.8541, tok/sec: 112998.79, flops:44.02, batch-reuse:1
@ 930 train 8.2398 , allloss: 17.3968, dt: 1157.33ms, fracRes: 0.0183, norm(attn): 0.4590, norm(output): 0.1094, norm(x): 0.1157, norm(y): 0.9917, norm:65.7488, tok/sec: 113253.99, flops:44.12, batch-reuse:1
@ 931 train 8.1127 , allloss: 17.3676, dt: 1173.88ms, fracRes: 0.0396, norm(attn): 0.4434, norm(output): 0.1021, norm(x): 0.1235, norm(y): 0.9915, norm:105.5694, tok/sec: 111656.72, flops:43.50, batch-reuse:1
@ 932 train 7.8652 , allloss: 17.4077, dt: 1168.07ms, fracRes: 0.0389, norm(attn): 0.4766, norm(output): 0.0815, norm(x): 0.1051, norm(y): 0.9911, norm:66.5938, tok/sec: 112212.81, flops:43.72, batch-reuse:1
@ 933 train 7.8322 , allloss: 17.1010, dt: 1133.70ms, fracRes: 0.0249, norm(attn): 0.4727, norm(output): 0.0723, norm(x): 0.0878, norm(y): 0.9904, norm:47.2658, tok/sec: 115614.27, flops:45.04, batch-reuse:1
@ 934 train 8.1417 , allloss: 18.5690, dt: 1162.45ms, fracRes: 0.0269, norm(attn): 0.5078, norm(output): 0.0713, norm(x): 0.0898, norm(y): 0.9897, norm:73.2236, tok/sec: 112755.32, flops:43.93, batch-reuse:1
@ 935 train 7.9725 , allloss: 19.9432, dt: 1175.75ms, fracRes: 0.0358, norm(attn): 0.5156, norm(output): 0.0723, norm(x): 0.0991, norm(y): 0.9898, norm:56.7636, tok/sec: 111479.66, flops:43.43, batch-reuse:1
@ 936 train 7.8889 , allloss: 19.7393, dt: 1154.91ms, fracRes: 0.0301, norm(attn): 0.4883, norm(output): 0.0723, norm(x): 0.0944, norm(y): 0.9900, norm:45.1491, tok/sec: 113490.64, flops:44.22, batch-reuse:1
@ 937 train 8.1907 , allloss: 22.1908, dt: 1133.74ms, fracRes: 0.0483, norm(attn): 0.4727, norm(output): 0.0786, norm(x): 0.1163, norm(y): 0.9899, norm:73.4084, tok/sec: 115609.95, flops:45.04, batch-reuse:1
@ 938 train 7.9630 , allloss: 23.1783, dt: 1144.24ms, fracRes: 0.0545, norm(attn): 0.4414, norm(output): 0.0791, norm(x): 0.1217, norm(y): 0.9897, norm:48.8461, tok/sec: 114549.83, flops:44.63, batch-reuse:1
@ 939 train 7.8657 , allloss: 22.8979, dt: 1168.51ms, fracRes: 0.0422, norm(attn): 0.3965, norm(output): 0.0815, norm(x): 0.1122, norm(y): 0.9893, norm:34.5898, tok/sec: 112169.79, flops:43.70, batch-reuse:1
@ 940 train 7.9373 , allloss: 24.4005, dt: 1187.55ms, fracRes: 0.0595, norm(attn): 0.3887, norm(output): 0.0854, norm(x): 0.1313, norm(y): 0.9889, norm:45.1007, tok/sec: 110371.57, flops:43.00, batch-reuse:1
@ 941 train 8.0442 , allloss: 22.5909, dt: 1148.97ms, fracRes: 0.0649, norm(attn): 0.3984, norm(output): 0.0898, norm(x): 0.1392, norm(y): 0.9887, norm:63.9230, tok/sec: 114078.31, flops:44.44, batch-reuse:1
@ 942 train 7.8433 , allloss: 18.6371, dt: 1141.86ms, fracRes: 0.0358, norm(attn): 0.4023, norm(output): 0.0928, norm(x): 0.1173, norm(y): 0.9890, norm:43.9246, tok/sec: 114788.61, flops:44.72, batch-reuse:1
@ 943 train 7.9261 , allloss: 16.8922, dt: 1128.88ms, fracRes: 0.0334, norm(attn): 0.4062, norm(output): 0.0957, norm(x): 0.1184, norm(y): 0.9890, norm:50.9228, tok/sec: 116108.46, flops:45.24, batch-reuse:1
@ 944 train 8.2378 , allloss: 16.1092, dt: 1156.84ms, fracRes: 0.0361, norm(attn): 0.3945, norm(output): 0.1006, norm(x): 0.1235, norm(y): 0.9892, norm:84.1271, tok/sec: 113302.16, flops:44.14, batch-reuse:1
@ 945 train 8.2216 , allloss: 15.2877, dt: 1156.42ms, fracRes: 0.0249, norm(attn): 0.3750, norm(output): 0.1016, norm(x): 0.1157, norm(y): 0.9894, norm:65.2272, tok/sec: 113342.69, flops:44.16, batch-reuse:1
@ 946 train 8.1242 , allloss: 14.5802, dt: 1169.73ms, fracRes: 0.0176, norm(attn): 0.3613, norm(output): 0.1030, norm(x): 0.1114, norm(y): 0.9895, norm:59.4608, tok/sec: 112053.65, flops:43.66, batch-reuse:1
@ 947 train 8.0418 , allloss: 14.3388, dt: 1169.11ms, fracRes: 0.0139, norm(attn): 0.3594, norm(output): 0.1050, norm(x): 0.1099, norm(y): 0.9897, norm:61.0697, tok/sec: 112112.90, flops:43.68, batch-reuse:1
@ 948 train 8.1373 , allloss: 14.5554, dt: 1173.09ms, fracRes: 0.0126, norm(attn): 0.3691, norm(output): 0.1084, norm(x): 0.1106, norm(y): 0.9897, norm:67.9785, tok/sec: 111732.45, flops:43.53, batch-reuse:1
@ 949 train 8.6094 , allloss: 15.2373, dt: 1143.20ms, fracRes: 0.0108, norm(attn): 0.3809, norm(output): 0.1089, norm(x): 0.1100, norm(y): 0.9897, norm:233.3750, tok/sec: 114653.92, flops:44.67, batch-reuse:1
@ 950 train 7.8136 , allloss: 14.5770, dt: 1142.49ms, fracRes: 0.0107, norm(attn): 0.4453, norm(output): 0.1084, norm(x): 0.1093, norm(y): 0.9896, norm:61.4762, tok/sec: 114725.30, flops:44.70, batch-reuse:1
@ 951 train 7.8927 , allloss: 14.4121, dt: 1152.04ms, fracRes: 0.0080, norm(attn): 0.4688, norm(output): 0.1079, norm(x): 0.1062, norm(y): 0.9895, norm:65.5717, tok/sec: 113774.09, flops:44.33, batch-reuse:1
@ 952 train 8.1976 , allloss: 14.2361, dt: 1136.75ms, fracRes: 0.0068, norm(attn): 0.4609, norm(output): 0.1050, norm(x): 0.1040, norm(y): 0.9896, norm:102.7583, tok/sec: 115304.33, flops:44.92, batch-reuse:1
@ 953 train 8.7220 , allloss: 14.6557, dt: 1180.14ms, fracRes: 0.0123, norm(attn): 0.4531, norm(output): 0.1074, norm(x): 0.1093, norm(y): 0.9897, norm:164.1997, tok/sec: 111065.17, flops:43.27, batch-reuse:1
@ 954 train 7.8546 , allloss: 15.6813, dt: 1173.09ms, fracRes: 0.0080, norm(attn): 0.4883, norm(output): 0.1025, norm(x): 0.1037, norm(y): 0.9894, norm:81.3802, tok/sec: 111732.67, flops:43.53, batch-reuse:1
@ 955 train 8.0459 , allloss: 18.2292, dt: 1159.23ms, fracRes: 0.0137, norm(attn): 0.4961, norm(output): 0.1045, norm(x): 0.1101, norm(y): 0.9894, norm:165.6602, tok/sec: 113068.20, flops:44.05, batch-reuse:1
@ 956 train 7.9104 , allloss: 18.7119, dt: 1148.75ms, fracRes: 0.0298, norm(attn): 0.4785, norm(output): 0.1113, norm(x): 0.1302, norm(y): 0.9898, norm:53.5648, tok/sec: 114099.64, flops:44.45, batch-reuse:1
@ 957 train 7.9985 , allloss: 21.5090, dt: 1149.29ms, fracRes: 0.0476, norm(attn): 0.4707, norm(output): 0.1172, norm(x): 0.1485, norm(y): 0.9897, norm:57.7002, tok/sec: 114046.43, flops:44.43, batch-reuse:1
@ 958 train 8.0647 , allloss: 27.6724, dt: 1177.07ms, fracRes: 0.0545, norm(attn): 0.4668, norm(output): 0.1172, norm(x): 0.1534, norm(y): 0.9894, norm:97.9622, tok/sec: 111354.86, flops:43.38, batch-reuse:1
@ 959 train 7.9296 , allloss: 18.5622, dt: 1178.56ms, fracRes: 0.0364, norm(attn): 0.4805, norm(output): 0.1235, norm(x): 0.1455, norm(y): 0.9895, norm:80.4313, tok/sec: 111213.66, flops:43.33, batch-reuse:1
@ 960 train 8.7676 , allloss: 16.2089, dt: 1174.48ms, fracRes: 0.0300, norm(attn): 0.4668, norm(output): 0.1328, norm(x): 0.1477, norm(y): 0.9895, norm:273.6870, tok/sec: 111599.92, flops:43.48, batch-reuse:1
@ 961 train 8.0132 , allloss: 22.1610, dt: 1142.90ms, fracRes: 0.0167, norm(attn): 0.5039, norm(output): 0.1250, norm(x): 0.1290, norm(y): 0.9886, norm:82.5355, tok/sec: 114683.53, flops:44.68, batch-reuse:1
@ 962 train 8.4903 , allloss: 28.2375, dt: 1152.95ms, fracRes: 0.0140, norm(attn): 0.5000, norm(output): 0.1270, norm(x): 0.1276, norm(y): 0.9884, norm:345.0097, tok/sec: 113684.14, flops:44.29, batch-reuse:1
@ 963 train 9.1094 , allloss: 14.5681, dt: 1142.57ms, fracRes: 0.0080, norm(attn): 0.5391, norm(output): 0.1455, norm(x): 0.1410, norm(y): 0.9888, norm:143.8533, tok/sec: 114716.58, flops:44.69, batch-reuse:1
@ 964 train 8.7584 , allloss: 14.6153, dt: 1157.80ms, fracRes: 0.0103, norm(attn): 0.5664, norm(output): 0.1475, norm(x): 0.1431, norm(y): 0.9886, norm:129.1604, tok/sec: 113207.72, flops:44.11, batch-reuse:1
@ 965 train 8.2018 , allloss: 22.7866, dt: 1163.46ms, fracRes: 0.0731, norm(attn): 0.5469, norm(output): 0.1436, norm(x): 0.1760, norm(y): 0.9881, norm:115.4375, tok/sec: 112656.89, flops:43.89, batch-reuse:1
@ 966 train 8.4030 , allloss: 25.1548, dt: 1182.50ms, fracRes: 0.0849, norm(attn): 0.5508, norm(output): 0.1455, norm(x): 0.1826, norm(y): 0.9879, norm:115.7192, tok/sec: 110843.54, flops:43.18, batch-reuse:1
@ 967 train 8.5522 , allloss: 19.7646, dt: 1163.92ms, fracRes: 0.0655, norm(attn): 0.5781, norm(output): 0.1260, norm(x): 0.1608, norm(y): 0.9879, norm:99.3102, tok/sec: 112612.72, flops:43.87, batch-reuse:1
@ 968 train 8.8879 , allloss: 17.1184, dt: 1155.94ms, fracRes: 0.0312, norm(attn): 0.6289, norm(output): 0.1172, norm(x): 0.1311, norm(y): 0.9878, norm:115.4424, tok/sec: 113390.27, flops:44.18, batch-reuse:1
@ 969 train 9.4545 , allloss: 41.8638, dt: 1153.98ms, fracRes: 0.0098, norm(attn): 0.6523, norm(output): 0.3008, norm(x): 0.2597, norm(y): 0.9876, norm:198.9597, tok/sec: 113582.72, flops:44.25, batch-reuse:1
@ 970 train 9.4028 , allloss: 71.5472, dt: 1143.26ms, fracRes: 0.0085, norm(attn): 0.6641, norm(output): 0.4336, norm(x): 0.3862, norm(y): 0.9877, norm:193.2382, tok/sec: 114647.18, flops:44.67, batch-reuse:1
@ 971 train 9.4242 , allloss: 83.7366, dt: 1144.46ms, fracRes: 0.0080, norm(attn): 0.6367, norm(output): 0.3652, norm(x): 0.3370, norm(y): 0.9877, norm:145.3023, tok/sec: 114527.43, flops:44.62, batch-reuse:1
@ 972 train 9.3465 , allloss: 79.7283, dt: 1134.97ms, fracRes: 0.0071, norm(attn): 0.6172, norm(output): 0.2520, norm(x): 0.2432, norm(y): 0.9876, norm:205.3017, tok/sec: 115485.19, flops:44.99, batch-reuse:1
@ 973 train 8.7303 , allloss: 61.6696, dt: 1179.90ms, fracRes: 0.0081, norm(attn): 0.6289, norm(output): 0.2080, norm(x): 0.2007, norm(y): 0.9874, norm:184.1919, tok/sec: 111087.77, flops:43.28, batch-reuse:1
@ 974 train 8.8605 , allloss: 38.3187, dt: 1158.82ms, fracRes: 0.0134, norm(attn): 0.7148, norm(output): 0.1709, norm(x): 0.1607, norm(y): 0.9873, norm:110.8137, tok/sec: 113108.47, flops:44.07, batch-reuse:1
@ 975 train 8.3620 , allloss: 13.8802, dt: 1141.76ms, fracRes: 0.0317, norm(attn): 0.8281, norm(output): 0.0986, norm(x): 0.1172, norm(y): 0.9875, norm:89.9016, tok/sec: 114798.20, flops:44.73, batch-reuse:1
@ 976 train 7.7624 , allloss: 12.9028, dt: 1149.98ms, fracRes: 0.0417, norm(attn): 0.9883, norm(output): 0.0942, norm(x): 0.1211, norm(y): 0.9884, norm:47.6123, tok/sec: 113978.08, flops:44.41, batch-reuse:1
@ 977 train 7.7770 , allloss: 12.2660, dt: 1152.49ms, fracRes: 0.0338, norm(attn): 1.1094, norm(output): 0.0952, norm(x): 0.1153, norm(y): 0.9889, norm:66.6176, tok/sec: 113729.55, flops:44.31, batch-reuse:1
@ 978 train 8.0298 , allloss: 11.0099, dt: 1139.79ms, fracRes: 0.0044, norm(attn): 1.2500, norm(output): 0.1021, norm(x): 0.0997, norm(y): 0.9892, norm:46.4436, tok/sec: 114996.18, flops:44.80, batch-reuse:1
@ 979 train 8.1993 , allloss: 11.1841, dt: 1150.40ms, fracRes: 0.0048, norm(attn): 1.2969, norm(output): 0.1118, norm(x): 0.1092, norm(y): 0.9895, norm:52.9204, tok/sec: 113935.63, flops:44.39, batch-reuse:1
@ 980 train 7.9498 , allloss: 10.9933, dt: 1163.88ms, fracRes: 0.0048, norm(attn): 1.3203, norm(output): 0.1187, norm(x): 0.1155, norm(y): 0.9898, norm:42.5264, tok/sec: 112616.36, flops:43.88, batch-reuse:1
@ 981 train 7.7686 , allloss: 11.0348, dt: 1185.55ms, fracRes: 0.0045, norm(attn): 1.3359, norm(output): 0.1245, norm(x): 0.1195, norm(y): 0.9900, norm:30.5162, tok/sec: 110558.13, flops:43.07, batch-reuse:1
@ 982 train 7.7099 , allloss: 11.1457, dt: 1155.16ms, fracRes: 0.0072, norm(attn): 1.2969, norm(output): 0.1260, norm(x): 0.1239, norm(y): 0.9901, norm:56.5642, tok/sec: 113466.70, flops:44.21, batch-reuse:1
@ 983 train 7.8370 , allloss: 11.6167, dt: 1183.17ms, fracRes: 0.0142, norm(attn): 1.2656, norm(output): 0.1221, norm(x): 0.1250, norm(y): 0.9900, norm:137.1278, tok/sec: 110779.95, flops:43.16, batch-reuse:1
@ 984 train 7.8343 , allloss: 11.8201, dt: 1176.84ms, fracRes: 0.0216, norm(attn): 1.2578, norm(output): 0.1123, norm(x): 0.1214, norm(y): 0.9899, norm:176.0203, tok/sec: 111376.00, flops:43.39, batch-reuse:1
@ 985 train 7.8286 , allloss: 11.6112, dt: 1150.13ms, fracRes: 0.0188, norm(attn): 1.2031, norm(output): 0.1035, norm(x): 0.1109, norm(y): 0.9897, norm:158.2280, tok/sec: 113963.14, flops:44.40, batch-reuse:1
@ 986 train 7.8630 , allloss: 11.1194, dt: 1128.56ms, fracRes: 0.0093, norm(attn): 1.1719, norm(output): 0.0938, norm(x): 0.0951, norm(y): 0.9894, norm:96.0429, tok/sec: 116140.57, flops:45.25, batch-reuse:1
@ 987 train 7.7108 , allloss: 10.4958, dt: 1153.95ms, fracRes: 0.0036, norm(attn): 1.1328, norm(output): 0.0850, norm(x): 0.0833, norm(y): 0.9890, norm:34.0811, tok/sec: 113585.07, flops:44.25, batch-reuse:1
@ 988 train 8.0327 , allloss: 10.7484, dt: 1156.51ms, fracRes: 0.0043, norm(attn): 1.1328, norm(output): 0.0850, norm(x): 0.0835, norm(y): 0.9888, norm:46.5797, tok/sec: 113333.77, flops:44.15, batch-reuse:1
@ 989 train 8.1674 , allloss: 11.0175, dt: 1151.07ms, fracRes: 0.0053, norm(attn): 1.1250, norm(output): 0.0869, norm(x): 0.0872, norm(y): 0.9889, norm:45.8700, tok/sec: 113869.95, flops:44.36, batch-reuse:1
@ 990 train 7.8749 , allloss: 10.8212, dt: 1157.14ms, fracRes: 0.0061, norm(attn): 1.1250, norm(output): 0.0928, norm(x): 0.0918, norm(y): 0.9892, norm:40.8084, tok/sec: 113272.84, flops:44.13, batch-reuse:1
@ 991 train 7.8172 , allloss: 11.1111, dt: 1150.96ms, fracRes: 0.0071, norm(attn): 1.0938, norm(output): 0.1011, norm(x): 0.1011, norm(y): 0.9895, norm:47.2748, tok/sec: 113880.71, flops:44.37, batch-reuse:1
@ 992 train 7.8481 , allloss: 11.6078, dt: 1136.05ms, fracRes: 0.0119, norm(attn): 1.1094, norm(output): 0.1172, norm(x): 0.1191, norm(y): 0.9898, norm:33.0637, tok/sec: 115374.74, flops:44.95, batch-reuse:1
@ 993 train 7.7572 , allloss: 12.1453, dt: 1143.17ms, fracRes: 0.0204, norm(attn): 1.0859, norm(output): 0.1396, norm(x): 0.1446, norm(y): 0.9900, norm:22.6404, tok/sec: 114656.84, flops:44.67, batch-reuse:1
@ 994 train 7.8634 , allloss: 13.0253, dt: 1132.21ms, fracRes: 0.0285, norm(attn): 1.0859, norm(output): 0.1562, norm(x): 0.1660, norm(y): 0.9902, norm:48.0082, tok/sec: 115766.02, flops:45.10, batch-reuse:1
@ 995 train 7.8017 , allloss: 13.2178, dt: 1135.93ms, fracRes: 0.0303, norm(attn): 1.0938, norm(output): 0.1650, norm(x): 0.1737, norm(y): 0.9902, norm:64.1578, tok/sec: 115387.31, flops:44.95, batch-reuse:1
@ 996 train 7.7517 , allloss: 12.9254, dt: 1132.60ms, fracRes: 0.0246, norm(attn): 1.0781, norm(output): 0.1602, norm(x): 0.1670, norm(y): 0.9902, norm:56.8636, tok/sec: 115726.23, flops:45.09, batch-reuse:1
@ 997 train 7.6950 , allloss: 12.2782, dt: 1153.63ms, fracRes: 0.0155, norm(attn): 1.0625, norm(output): 0.1465, norm(x): 0.1490, norm(y): 0.9902, norm:40.3114, tok/sec: 113617.34, flops:44.27, batch-reuse:1
@ 998 train 7.8155 , allloss: 12.0085, dt: 1161.00ms, fracRes: 0.0073, norm(attn): 1.0156, norm(output): 0.1270, norm(x): 0.1247, norm(y): 0.9902, norm:36.9571, tok/sec: 112896.24, flops:43.98, batch-reuse:1
@ 999 train 7.6900 , allloss: 11.3533, dt: 1137.29ms, fracRes: 0.0038, norm(attn): 0.9609, norm(output): 0.1040, norm(x): 0.1015, norm(y): 0.9900, norm:36.3625, tok/sec: 115249.67, flops:44.90, batch-reuse:1
@ 1000 train 7.8765 , allloss: 11.6143, dt: 1124.03ms, fracRes: 0.0032, norm(attn): 0.8828, norm(output): 0.0869, norm(x): 0.0851, norm(y): 0.9897, norm:40.2834, tok/sec: 116608.83, flops:45.43, batch-reuse:1
@ 1001 train 8.2158 , allloss: 12.4211, dt: 1150.02ms, fracRes: 0.0045, norm(attn): 0.8125, norm(output): 0.0767, norm(x): 0.0759, norm(y): 0.9891, norm:87.0479, tok/sec: 113974.13, flops:44.40, batch-reuse:1
@ 1002 train 7.8797 , allloss: 13.4115, dt: 1143.30ms, fracRes: 0.0063, norm(attn): 0.7500, norm(output): 0.0723, norm(x): 0.0742, norm(y): 0.9892, norm:52.3672, tok/sec: 114643.24, flops:44.67, batch-reuse:1
@ 1003 train 7.8810 , allloss: 13.9649, dt: 1141.02ms, fracRes: 0.0090, norm(attn): 0.6875, norm(output): 0.0718, norm(x): 0.0756, norm(y): 0.9898, norm:57.5122, tok/sec: 114872.58, flops:44.75, batch-reuse:1
@ 1004 train 7.9532 , allloss: 15.1266, dt: 1149.30ms, fracRes: 0.0227, norm(attn): 0.6289, norm(output): 0.0815, norm(x): 0.0957, norm(y): 0.9902, norm:65.4991, tok/sec: 114045.32, flops:44.43, batch-reuse:1
@ 1005 train 8.3200 , allloss: 15.3057, dt: 1135.26ms, fracRes: 0.0340, norm(attn): 0.6406, norm(output): 0.0908, norm(x): 0.1135, norm(y): 0.9902, norm:83.1162, tok/sec: 115455.38, flops:44.98, batch-reuse:1
@ 1006 train 8.5213 , allloss: 15.2303, dt: 1140.48ms, fracRes: 0.0411, norm(attn): 0.6719, norm(output): 0.1045, norm(x): 0.1320, norm(y): 0.9903, norm:90.0832, tok/sec: 114926.80, flops:44.78, batch-reuse:1
@ 1007 train 8.6395 , allloss: 15.2005, dt: 1153.07ms, fracRes: 0.0528, norm(attn): 0.6914, norm(output): 0.1230, norm(x): 0.1558, norm(y): 0.9905, norm:105.6633, tok/sec: 113672.36, flops:44.29, batch-reuse:1
@ 1008 train 8.8035 , allloss: 15.3242, dt: 1180.69ms, fracRes: 0.0659, norm(attn): 0.6797, norm(output): 0.1436, norm(x): 0.1842, norm(y): 0.9905, norm:94.2741, tok/sec: 111013.32, flops:43.25, batch-reuse:1
@ 1009 train 8.9054 , allloss: 16.7548, dt: 1171.09ms, fracRes: 0.0985, norm(attn): 0.6562, norm(output): 0.1689, norm(x): 0.2279, norm(y): 0.9906, norm:67.1446, tok/sec: 111923.48, flops:43.61, batch-reuse:1
@ 1010 train 8.7912 , allloss: 17.8439, dt: 1179.73ms, fracRes: 0.1271, norm(attn): 0.6211, norm(output): 0.1895, norm(x): 0.2662, norm(y): 0.9907, norm:56.1310, tok/sec: 111103.06, flops:43.29, batch-reuse:1
@ 1011 train 8.5738 , allloss: 17.6250, dt: 1177.61ms, fracRes: 0.1449, norm(attn): 0.6250, norm(output): 0.2031, norm(x): 0.2900, norm(y): 0.9908, norm:82.0592, tok/sec: 111303.03, flops:43.36, batch-reuse:1
@ 1012 train 8.4796 , allloss: 17.6356, dt: 1166.61ms, fracRes: 0.1367, norm(attn): 0.6250, norm(output): 0.2129, norm(x): 0.2897, norm(y): 0.9908, norm:106.5322, tok/sec: 112352.75, flops:43.77, batch-reuse:1
@ 1013 train 8.2574 , allloss: 16.5085, dt: 1160.31ms, fracRes: 0.1116, norm(attn): 0.6133, norm(output): 0.2129, norm(x): 0.2728, norm(y): 0.9907, norm:92.2198, tok/sec: 112962.70, flops:44.01, batch-reuse:1
@ 1014 train 8.0651 , allloss: 14.9722, dt: 1164.80ms, fracRes: 0.0856, norm(attn): 0.6211, norm(output): 0.2080, norm(x): 0.2507, norm(y): 0.9905, norm:130.1094, tok/sec: 112527.55, flops:43.84, batch-reuse:1
@ 1015 train 7.9454 , allloss: 13.4355, dt: 1177.02ms, fracRes: 0.0397, norm(attn): 0.5938, norm(output): 0.1885, norm(x): 0.2042, norm(y): 0.9903, norm:71.1967, tok/sec: 111359.62, flops:43.39, batch-reuse:1
@ 1016 train 7.8459 , allloss: 12.5169, dt: 1156.75ms, fracRes: 0.0193, norm(attn): 0.5547, norm(output): 0.1660, norm(x): 0.1666, norm(y): 0.9899, norm:59.0671, tok/sec: 113310.83, flops:44.15, batch-reuse:1
@ 1017 train 7.7882 , allloss: 12.8475, dt: 1148.36ms, fracRes: 0.0117, norm(attn): 0.5039, norm(output): 0.1338, norm(x): 0.1330, norm(y): 0.9894, norm:43.5223, tok/sec: 114138.68, flops:44.47, batch-reuse:1
@ 1018 train 7.8534 , allloss: 18.1014, dt: 1141.49ms, fracRes: 0.0072, norm(attn): 0.5195, norm(output): 0.1104, norm(x): 0.1094, norm(y): 0.9884, norm:43.0016, tok/sec: 114825.51, flops:44.74, batch-reuse:1
@ 1019 train 7.9763 , allloss: 20.2444, dt: 1131.72ms, fracRes: 0.0058, norm(attn): 0.5742, norm(output): 0.1094, norm(x): 0.1067, norm(y): 0.9873, norm:48.4102, tok/sec: 115816.68, flops:45.12, batch-reuse:1
@ 1020 train 8.0669 , allloss: 17.6944, dt: 1149.60ms, fracRes: 0.0052, norm(attn): 0.5898, norm(output): 0.1074, norm(x): 0.1037, norm(y): 0.9868, norm:43.9228, tok/sec: 114015.45, flops:44.42, batch-reuse:1
@ 1021 train 7.8559 , allloss: 14.6611, dt: 1139.43ms, fracRes: 0.0051, norm(attn): 0.5898, norm(output): 0.1021, norm(x): 0.0999, norm(y): 0.9868, norm:35.9830, tok/sec: 115032.83, flops:44.82, batch-reuse:1
@ 1022 train 7.7466 , allloss: 13.1728, dt: 1136.07ms, fracRes: 0.0053, norm(attn): 0.5859, norm(output): 0.0957, norm(x): 0.0950, norm(y): 0.9869, norm:55.7970, tok/sec: 115373.17, flops:44.95, batch-reuse:1
@ 1023 train 7.9371 , allloss: 14.1903, dt: 1155.42ms, fracRes: 0.0070, norm(attn): 0.5234, norm(output): 0.0928, norm(x): 0.0925, norm(y): 0.9869, norm:105.3528, tok/sec: 113440.71, flops:44.20, batch-reuse:1
@ 1024 train 7.6773 , allloss: 12.8171, dt: 1151.71ms, fracRes: 0.0043, norm(attn): 0.6055, norm(output): 0.0938, norm(x): 0.0916, norm(y): 0.9866, norm:58.6257, tok/sec: 113806.38, flops:44.34, batch-reuse:1
@ 1025 train 7.9450 , allloss: 13.2199, dt: 1144.04ms, fracRes: 0.0045, norm(attn): 0.5977, norm(output): 0.0981, norm(x): 0.0959, norm(y): 0.9864, norm:75.8720, tok/sec: 114569.62, flops:44.64, batch-reuse:1
@ 1026 train 8.5615 , allloss: 14.3390, dt: 1154.62ms, fracRes: 0.0068, norm(attn): 0.5039, norm(output): 0.1030, norm(x): 0.1033, norm(y): 0.9868, norm:104.7468, tok/sec: 113519.91, flops:44.23, batch-reuse:1
@ 1027 train 9.2177 , allloss: 15.3448, dt: 1160.94ms, fracRes: 0.0098, norm(attn): 0.4453, norm(output): 0.1123, norm(x): 0.1142, norm(y): 0.9872, norm:112.4314, tok/sec: 112901.76, flops:43.99, batch-reuse:1
@ 1028 train 8.5180 , allloss: 14.7072, dt: 1135.15ms, fracRes: 0.0082, norm(attn): 0.5039, norm(output): 0.1177, norm(x): 0.1165, norm(y): 0.9873, norm:93.0773, tok/sec: 115467.10, flops:44.99, batch-reuse:1
@ 1029 train 8.3076 , allloss: 15.0958, dt: 1163.40ms, fracRes: 0.0072, norm(attn): 0.5391, norm(output): 0.1260, norm(x): 0.1233, norm(y): 0.9874, norm:78.2300, tok/sec: 112663.31, flops:43.89, batch-reuse:1
@ 1030 train 8.3260 , allloss: 16.2306, dt: 1146.27ms, fracRes: 0.0069, norm(attn): 0.4980, norm(output): 0.1387, norm(x): 0.1337, norm(y): 0.9877, norm:55.6304, tok/sec: 114346.22, flops:44.55, batch-reuse:1
@ 1031 train 8.3078 , allloss: 18.1532, dt: 1148.43ms, fracRes: 0.0063, norm(attn): 0.4180, norm(output): 0.1465, norm(x): 0.1402, norm(y): 0.9878, norm:48.1918, tok/sec: 114131.50, flops:44.47, batch-reuse:1
@ 1032 train 8.2205 , allloss: 20.6658, dt: 1174.27ms, fracRes: 0.0056, norm(attn): 0.3652, norm(output): 0.1426, norm(x): 0.1368, norm(y): 0.9878, norm:56.7297, tok/sec: 111619.63, flops:43.49, batch-reuse:1
@ 1033 train 7.9385 , allloss: 21.2529, dt: 1143.91ms, fracRes: 0.0054, norm(attn): 0.3906, norm(output): 0.1406, norm(x): 0.1337, norm(y): 0.9878, norm:42.7359, tok/sec: 114582.30, flops:44.64, batch-reuse:1
@ 1034 train 7.7793 , allloss: 22.0834, dt: 1139.79ms, fracRes: 0.0067, norm(attn): 0.4141, norm(output): 0.1387, norm(x): 0.1322, norm(y): 0.9878, norm:47.5182, tok/sec: 114996.90, flops:44.80, batch-reuse:1
@ 1035 train 7.7301 , allloss: 20.9826, dt: 1128.17ms, fracRes: 0.0060, norm(attn): 0.4258, norm(output): 0.1279, norm(x): 0.1238, norm(y): 0.9878, norm:55.5624, tok/sec: 116180.73, flops:45.26, batch-reuse:1
@ 1036 train 7.7960 , allloss: 20.1174, dt: 1157.07ms, fracRes: 0.0043, norm(attn): 0.4102, norm(output): 0.1177, norm(x): 0.1126, norm(y): 0.9876, norm:59.0626, tok/sec: 113278.89, flops:44.13, batch-reuse:1
@ 1037 train 8.4354 , allloss: 18.7163, dt: 1152.66ms, fracRes: 0.0037, norm(attn): 0.4082, norm(output): 0.1191, norm(x): 0.1144, norm(y): 0.9872, norm:177.0605, tok/sec: 113712.76, flops:44.30, batch-reuse:1
@ 1038 train 10.7773 , allloss: 26.0095, dt: 1139.66ms, fracRes: 0.0052, norm(attn): 0.4395, norm(output): 0.1021, norm(x): 0.1019, norm(y): 0.9878, norm:813.7171, tok/sec: 115010.11, flops:44.81, batch-reuse:1
@ 1039 train 7.7300 , allloss: 22.3197, dt: 1152.59ms, fracRes: 0.0073, norm(attn): 0.4941, norm(output): 0.1118, norm(x): 0.1118, norm(y): 0.9878, norm:47.0042, tok/sec: 113719.70, flops:44.31, batch-reuse:1
@ 1040 train 7.6484 , allloss: 27.4421, dt: 1167.21ms, fracRes: 0.0171, norm(attn): 0.5234, norm(output): 0.1318, norm(x): 0.1363, norm(y): 0.9870, norm:67.7001, tok/sec: 112295.28, flops:43.75, batch-reuse:1
@ 1041 train 8.6570 , allloss: 30.1930, dt: 1181.17ms, fracRes: 0.0216, norm(attn): 0.4824, norm(output): 0.1660, norm(x): 0.1693, norm(y): 0.9861, norm:212.8783, tok/sec: 110967.58, flops:43.23, batch-reuse:1
@ 1042 train 8.1630 , allloss: 27.2446, dt: 1186.86ms, fracRes: 0.0268, norm(attn): 0.4688, norm(output): 0.1543, norm(x): 0.1621, norm(y): 0.9866, norm:111.5605, tok/sec: 110435.49, flops:43.03, batch-reuse:1
@ 1043 train 7.8437 , allloss: 22.2267, dt: 1154.34ms, fracRes: 0.0236, norm(attn): 0.4766, norm(output): 0.1318, norm(x): 0.1418, norm(y): 0.9877, norm:71.4601, tok/sec: 113547.13, flops:44.24, batch-reuse:1
@ 1044 train 8.1356 , allloss: 20.1032, dt: 1148.89ms, fracRes: 0.0157, norm(attn): 0.4609, norm(output): 0.1377, norm(x): 0.1404, norm(y): 0.9877, norm:139.7280, tok/sec: 114086.10, flops:44.45, batch-reuse:1
@ 1045 train 7.9012 , allloss: 19.3648, dt: 1184.51ms, fracRes: 0.0199, norm(attn): 0.4727, norm(output): 0.1260, norm(x): 0.1335, norm(y): 0.9883, norm:66.2835, tok/sec: 110655.11, flops:43.11, batch-reuse:1
@ 1046 train 8.1076 , allloss: 19.1352, dt: 1171.01ms, fracRes: 0.0309, norm(attn): 0.4883, norm(output): 0.1211, norm(x): 0.1382, norm(y): 0.9885, norm:75.5201, tok/sec: 111930.68, flops:43.61, batch-reuse:1
@ 1047 train 8.0537 , allloss: 19.8712, dt: 1133.84ms, fracRes: 0.0211, norm(attn): 0.4883, norm(output): 0.1177, norm(x): 0.1278, norm(y): 0.9885, norm:84.2070, tok/sec: 115599.91, flops:45.04, batch-reuse:1
@ 1048 train 7.8147 , allloss: 21.0085, dt: 1160.90ms, fracRes: 0.0263, norm(attn): 0.4746, norm(output): 0.1152, norm(x): 0.1295, norm(y): 0.9886, norm:50.6674, tok/sec: 112905.28, flops:43.99, batch-reuse:1
@ 1049 train 7.9132 , allloss: 21.2823, dt: 1156.32ms, fracRes: 0.0258, norm(attn): 0.4727, norm(output): 0.1187, norm(x): 0.1320, norm(y): 0.9885, norm:100.6271, tok/sec: 113352.58, flops:44.16, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0393, 0.9609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.4648, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.3145, 0.1348, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0430, 0.2617, 0.0757, 0.3789, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0752, 0.1953, 0.1436, 0.3828, 0.1650, 0.0396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1035, 0.1079, 0.3164, 0.1289, 0.0854, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.0840, 0.2754, 0.0469, 0.0693, 0.1289, 0.0471, 0.2490, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1108, 0.0388, 0.3203, 0.1387, 0.0432, 0.1147, 0.0664, 0.1035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1270, 0.0417, 0.1865, 0.1113, 0.0796, 0.1348, 0.0361, 0.1475, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0243, 0.1836, 0.0165, 0.2988, 0.0962, 0.0471, 0.0371, 0.0107, 0.0884, 0.0128, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0591, 0.0977, 0.0752, 0.0737, 0.1055, 0.1187, 0.1514, 0.0574, 0.0640, 0.0442, 0.0613, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.0306, 0.0542, 0.0332, 0.0679, 0.2314, 0.1230, 0.0845, 0.0718, 0.0603, 0.0669, 0.0315, 0.0593, 0.0000, 0.0000],
        [0.0398, 0.0771, 0.0247, 0.2637, 0.0586, 0.0461, 0.0549, 0.0261, 0.0579, 0.0576, 0.1226, 0.0747, 0.0280, 0.0684, 0.0000],
        [0.0635, 0.0664, 0.0471, 0.0928, 0.1064, 0.0498, 0.0535, 0.0771, 0.0608, 0.0923, 0.0811, 0.0569, 0.0481, 0.0471, 0.0564]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0031,  0.0084,  ..., -0.0019, -0.0285, -0.0139],
        [-0.0321,  0.0082, -0.0149,  ...,  0.0022, -0.0208, -0.0165],
        [-0.0192,  0.0064,  0.0344,  ..., -0.0120, -0.0350,  0.0075],
        ...,
        [ 0.0393,  0.0153,  0.0257,  ..., -0.0186,  0.0177, -0.0186],
        [ 0.0215, -0.0141,  0.0128,  ..., -0.0027,  0.0100, -0.0088],
        [ 0.0375,  0.0066,  0.0228,  ..., -0.0551,  0.0327,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([-0.1514, -1.2422, -0.8008,  0.4453,  1.1562,  0.5508, -0.0535, -0.5391,  0.7422, -0.1006,  0.5391,  0.8984, -0.4961, -0.2305,  0.0359,  0.5352,  0.8516,  0.7227,  0.3984,  1.0938, -0.8984,  0.7656,  0.3730,  1.3516, -0.2695, -0.8984, -0.3672,  0.2207, -0.4219, -0.3359,  0.2314, -0.0088,
        -1.4219, -0.1206, -0.7578, -1.2734,  0.0273, -0.7188,  0.7383,  1.0469, -0.4883,  0.2852, -0.3223,  0.7773,  0.1309,  0.0544, -0.0459,  0.4316, -0.1279,  0.2061, -0.2031, -0.4512,  0.7773, -0.6602,  0.2021, -1.4062,  0.0728, -0.7031, -0.5820, -0.5781, -0.7500,  0.2773,  0.1157, -0.8320],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0144,  0.0059,  0.0184,  ...,  0.0035, -0.0180,  0.0135],
        [-0.0513, -0.0040, -0.0077,  ...,  0.0070,  0.0137, -0.0536],
        [ 0.0209, -0.0028,  0.0166,  ..., -0.0150,  0.0096, -0.0154],
        ...,
        [ 0.0028,  0.0026,  0.0152,  ...,  0.0139,  0.0122, -0.0016],
        [ 0.0244, -0.0393, -0.0061,  ...,  0.0299,  0.0259, -0.0256],
        [ 0.0224, -0.0051,  0.0142,  ...,  0.0284,  0.0104, -0.0216]], device='cuda:0', requires_grad=True)
Q: tensor([     0.6211,     -0.3105,     -0.1270,     -0.8555,     -0.2051,      0.9766,      0.5938,     -0.1826,      0.1040,     -0.0010,     -1.5625,     -0.0161,      0.9922,     -0.0854,     -0.9258,      0.1387,      0.2871,     -0.3770,     -0.7500,      0.5391,      0.0044,     -0.0732,
            -0.5039,      0.6172,     -0.5195,      0.5000,     -0.3906,     -0.4277,     -0.2383,     -0.0210,      0.4648,     -1.0625,      0.3105,      0.2119,      0.5586,      0.5820,      0.1138,     -0.3047,      0.4863,      0.7109,      1.0625,      1.0703,     -0.6562,      0.7148,
             0.0649,      0.8633,     -0.2422,     -0.7578,     -0.3105,     -0.0014,      0.4004,     -0.2432,     -0.2656,      0.7773,      0.0415,      0.9297,      0.6641,      0.0430,     -0.1885,     -0.3730,     -0.0106,     -0.1138,     -0.6133,     -0.9375], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.2031,  0.4453,  1.6016,  1.6172,  0.0825,  0.5586, -0.6406,  1.3672, -0.0537,  1.5625,  1.1484, -0.3457,  1.1797,  0.3594],
        [ 0.0000,  0.8984,  0.6055, -0.5352,  0.5586,  1.8359,  0.5234, -0.4551,  0.4844, -0.0043,  0.7070, -0.6016, -0.5586,  0.5938,  0.1338],
        [ 0.0000,  0.2451, -0.6055,  0.2100,  0.2520,  0.0325,  0.0752, -0.0334,  0.1816, -0.3359,  0.7656,  0.0942, -0.4668, -0.0110,  0.3535],
        [ 0.0000,  1.8125,  0.5664,  2.1875,  1.7188,  0.2139,  0.1943, -0.3613,  1.0469, -0.1523,  1.6172,  1.0625, -0.2949,  0.7148,  0.5352],
        [ 0.0000,  0.9531,  0.6484,  1.6250,  0.7852, -0.6406,  0.4492,  0.0233,  0.6953,  0.1465,  0.3887,  1.1328,  0.0938,  0.5078,  0.3906],
        [ 0.0000, -0.1885, -0.1475,  0.9297,  0.0288, -0.3809,  0.0586, -0.3809,  0.5039, -0.3340,  0.3770,  0.4277, -0.2852,  0.4355,  0.3730],
        [ 0.0000, -0.1699,  1.0156, -0.7539, -0.3633,  0.2578, -0.7500,  0.9180, -0.7109, -0.0840, -1.0625, -0.3711,  0.2969, -0.5781, -0.4512],
        [ 0.0000,  0.5430, -0.5039,  1.6016,  0.7695, -0.3965,  0.5781,  0.0302,  0.4766,  0.2598,  0.7305,  0.4199, -0.6914,  0.3496,  0.8711],
        [ 0.0000,  0.4277, -0.6836,  0.8086,  0.2949, -0.0408,  0.4863, -0.8320,  0.5781, -0.4551,  0.5898,  0.3574, -0.2031,  0.1699,  0.6094],
        [ 0.0000,  2.0156, -0.3867,  2.5156,  1.3750,  0.6602,  0.4199, -0.8203,  1.2891, -0.6445,  2.0312,  0.9531, -0.4102,  1.1719,  1.3594],
        [ 0.0000, -0.4414,  0.0586, -0.2051, -0.2236,  0.1367,  0.2539,  0.4980, -0.4746, -0.3672, -0.7344, -0.4062,  0.3809, -0.3340,  0.0388],
        [ 0.0000, -1.0234, -0.4570, -0.9453, -0.2354,  0.9961,  0.3652, -0.0152, -0.1738, -0.3516, -0.2451, -1.0000, -0.3672, -0.0476,  0.0356],
        [ 0.0000,  0.6602, -0.4766,  1.8906,  0.3887,  0.1484,  0.3242, -0.4180,  0.3770,  0.3730,  1.1250,  0.6328, -0.3516,  0.5391,  0.5000],
        [ 0.0000,  0.0471, -0.2969,  0.3789,  0.5156, -0.2412, -0.1738,  0.1973, -0.0422,  0.3730,  0.2412, -0.1104, -0.2773, -0.2988, -0.1191]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0066],
        [0.4537],
        [0.0821],
        [0.0068],
        [0.0117],
        [0.0227],
        [0.1925],
        [0.0101],
        [0.0485],
        [0.0037],
        [0.1133],
        [0.1076],
        [0.0085],
        [0.0315]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8203, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.6406, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.2695, 0.1553, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.2354, 0.3145, 0.2217, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.2227, 0.2422, 0.1855, 0.1025, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.1875, 0.1963, 0.1807, 0.0820, 0.0771, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.2695, 0.1016, 0.0588, 0.1060, 0.0996, 0.0903, 0.1855, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1064, 0.1138, 0.1167, 0.0688, 0.0603, 0.1318, 0.2471, 0.0654, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1118, 0.0703, 0.0398, 0.1523, 0.0752, 0.0742, 0.1396, 0.0967, 0.0864, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0698, 0.1553, 0.0903, 0.0513, 0.0439, 0.0928, 0.2676, 0.0435, 0.0879, 0.0239, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0747, 0.0618, 0.0884, 0.0791, 0.0791, 0.0947, 0.1348, 0.0850, 0.0825, 0.0732, 0.0708, 0.0000, 0.0000, 0.0000],
        [0.0601, 0.0977, 0.0062, 0.0525, 0.0918, 0.0977, 0.1123, 0.0227, 0.1436, 0.1040, 0.1309, 0.0311, 0.0493, 0.0000, 0.0000],
        [0.0471, 0.0674, 0.1011, 0.0669, 0.0342, 0.0288, 0.0596, 0.1572, 0.0315, 0.0613, 0.0164, 0.0918, 0.1885, 0.0483, 0.0000],
        [0.0645, 0.0354, 0.0645, 0.0635, 0.0420, 0.0371, 0.0728, 0.1553, 0.0378, 0.0698, 0.0209, 0.0801, 0.1670, 0.0508, 0.0391]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0031,  0.0084,  ..., -0.0019, -0.0285, -0.0139],
        [-0.0321,  0.0082, -0.0149,  ...,  0.0022, -0.0208, -0.0165],
        [-0.0192,  0.0064,  0.0344,  ..., -0.0120, -0.0350,  0.0075],
        ...,
        [ 0.0393,  0.0153,  0.0257,  ..., -0.0186,  0.0177, -0.0186],
        [ 0.0215, -0.0141,  0.0128,  ..., -0.0027,  0.0100, -0.0088],
        [ 0.0375,  0.0066,  0.0228,  ..., -0.0551,  0.0327,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([-0.6719, -1.0703,  0.4766,  0.9570,  0.5078, -0.8047, -0.3789, -0.8008, -0.0659, -0.2432, -1.4297, -0.7344,  0.0635, -0.1924, -0.7031,  0.0383,  0.8867, -0.0579, -0.0104, -0.9102,  0.4121, -1.1562,  0.4668,  0.3691, -0.3926, -1.3203, -0.5625, -0.4492, -0.0469, -0.1367,  0.7148,  0.8164,
        -0.5742, -0.9180, -0.8398,  0.5469,  0.2305,  0.7148,  0.5977, -0.5078, -0.4707, -0.6016, -0.4727, -0.7617, -0.7188, -0.7695, -0.2637,  1.6797,  0.1226,  1.0625,  0.1973,  1.0078,  0.1406, -0.4922, -0.2949, -0.6602, -0.8359,  0.4355,  0.4102, -1.1641, -0.7578, -0.0243,  1.6250,  0.4805],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0144,  0.0059,  0.0184,  ...,  0.0035, -0.0180,  0.0135],
        [-0.0513, -0.0040, -0.0077,  ...,  0.0070,  0.0137, -0.0536],
        [ 0.0209, -0.0028,  0.0166,  ..., -0.0150,  0.0096, -0.0154],
        ...,
        [ 0.0028,  0.0026,  0.0152,  ...,  0.0139,  0.0122, -0.0016],
        [ 0.0244, -0.0393, -0.0061,  ...,  0.0299,  0.0259, -0.0256],
        [ 0.0224, -0.0051,  0.0142,  ...,  0.0284,  0.0104, -0.0216]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7344,  0.2012,  0.9570, -0.5273, -0.1279,  0.9062,  0.2578, -0.5703, -0.6875,  1.2266, -0.9336, -0.0349,  1.0547, -0.1289, -0.4922, -0.2295, -1.4141, -0.5156,  0.2656,  1.0391,  0.2969, -0.9102, -0.6641,  1.7266, -0.2520,  1.1719,  0.1196, -0.4492,  0.2617,  1.3516,  0.3320,  0.9414,
         0.1221,  0.4941,  0.0723,  0.7305, -0.3047,  0.1943, -0.9297,  0.6914,  0.1260,  0.4492, -1.4844, -0.4004, -0.6016,  0.5547, -0.7461,  0.0625, -0.5234, -0.6172,  0.7344,  0.4883,  0.3086,  0.5156,  1.0234,  1.4844, -0.0708,  1.1172, -0.6992,  0.5820, -0.3105, -0.6289, -1.4375, -0.0469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.5156, -1.5469,  0.1963, -0.5156, -0.5547, -0.0150, -0.3633, -0.3672,  0.1367, -1.2812, -0.2246,  0.3750, -0.3301, -0.6367],
        [ 0.0000,  1.4062,  0.2344, -0.6484, -0.0188, -0.0747, -0.4062, -0.1270,  0.3027, -0.1001,  0.6484, -0.2441, -0.2500,  0.4102,  0.0366],
        [ 0.0000,  0.0942, -0.4590,  0.3008, -0.1797, -0.2930,  0.2637,  0.4121, -0.0684,  0.3730, -0.7070,  0.4512,  1.0859,  0.2480, -0.1426],
        [ 0.0000,  0.5430,  0.8359,  0.4863, -0.3984, -0.5078,  0.1562,  1.1094, -0.4316,  0.2617, -1.0312,  1.0234,  1.6953, -0.0339, -0.6602],
        [ 0.0000,  0.3691,  0.4531,  0.1836, -0.4082, -0.5078,  0.1484,  0.9414, -0.4062,  0.2344, -0.9961,  0.7305,  1.4766, -0.0366, -0.4766],
        [ 0.0000,  0.2539,  0.2988,  0.2197, -0.5703, -0.6367, -0.0996,  0.6406, -0.4961,  0.1187, -1.0859,  0.6406,  1.4219, -0.1138, -0.7109],
        [ 0.0000,  1.1328,  0.1572, -0.3867,  0.2021,  0.1396,  0.0413,  0.7617,  0.4785,  0.0610,  0.6328, -0.0398,  0.2598,  0.5273,  0.2832],
        [ 0.0000,  0.1621,  0.2275,  0.2539, -0.2715, -0.4043,  0.3750,  1.0078, -0.3242,  0.3086, -1.0312,  0.6016,  1.4219,  0.0559, -0.3828],
        [ 0.0000, -0.4629, -1.0312,  0.3105, -0.3984, -0.4141,  0.2178, -0.1445, -0.2559,  0.3145, -1.0312,  0.1973,  0.8984, -0.0371, -0.3379],
        [ 0.0000, -0.0413,  0.7539,  0.2129, -0.3516, -0.5078,  0.2412,  1.3047, -0.5195,  0.1846, -1.1172,  0.6328,  1.3750, -0.1650, -0.4902],
        [ 0.0000, -0.0135, -0.2031,  0.1582,  0.0476,  0.0447,  0.2275,  0.5820,  0.1152,  0.0908, -0.0317, -0.0635,  0.5586,  0.2412,  0.2207],
        [ 0.0000,  0.4824, -2.2812, -0.1367,  0.4219,  0.4863,  0.6250, -0.9766,  0.8711,  0.5508,  0.7734, -0.6562, -0.1963,  0.8711,  0.7070],
        [ 0.0000,  0.3613,  0.7617,  0.3535, -0.3203, -0.4883,  0.2373,  1.2031, -0.4023,  0.2637, -1.0625,  0.6680,  1.3906,  0.0287, -0.5078],
        [ 0.0000, -0.5938,  0.0051, -0.0142, -0.4277, -0.5547,  0.1211,  0.8828, -0.5312,  0.0801, -1.1250,  0.2178,  0.9492, -0.2354, -0.4980]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5679],
        [0.2851],
        [0.3010],
        [0.2552],
        [0.2295],
        [0.1812],
        [0.0838],
        [0.1316],
        [0.1115],
        [0.1291],
        [0.0748],
        [0.0631],
        [0.0689],
        [0.0920]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7695, 0.2324, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.6016, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.2285, 0.2188, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.1484, 0.5586, 0.1455, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1592, 0.4473, 0.1445, 0.0674, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1484, 0.2969, 0.1572, 0.0688, 0.0659, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1338, 0.0396, 0.1387, 0.1250, 0.1270, 0.1777, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0820, 0.3066, 0.0825, 0.0398, 0.0361, 0.0840, 0.2656, 0.0315, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1167, 0.0630, 0.1357, 0.1143, 0.0620, 0.0586, 0.1162, 0.1865, 0.0613, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0618, 0.0659, 0.3340, 0.0693, 0.0347, 0.0312, 0.0723, 0.2402, 0.0267, 0.0437, 0.0198, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.0649, 0.1582, 0.0942, 0.0532, 0.0503, 0.0825, 0.1660, 0.0510, 0.0659, 0.0383, 0.0840, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.0493, 0.0090, 0.0835, 0.0698, 0.0737, 0.1108, 0.0491, 0.1035, 0.1113, 0.0659, 0.0728, 0.1289, 0.0000, 0.0000],
        [0.0542, 0.0613, 0.2168, 0.0601, 0.0303, 0.0269, 0.0557, 0.1738, 0.0248, 0.0386, 0.0182, 0.0532, 0.1465, 0.0400, 0.0000],
        [0.0562, 0.0403, 0.1895, 0.0598, 0.0356, 0.0320, 0.0698, 0.1621, 0.0295, 0.0449, 0.0215, 0.0635, 0.1172, 0.0496, 0.0289]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0031,  0.0084,  ..., -0.0019, -0.0285, -0.0139],
        [-0.0321,  0.0082, -0.0149,  ...,  0.0022, -0.0208, -0.0165],
        [-0.0192,  0.0064,  0.0344,  ..., -0.0120, -0.0350,  0.0075],
        ...,
        [ 0.0393,  0.0153,  0.0257,  ..., -0.0186,  0.0177, -0.0186],
        [ 0.0215, -0.0141,  0.0128,  ..., -0.0027,  0.0100, -0.0088],
        [ 0.0375,  0.0066,  0.0228,  ..., -0.0551,  0.0327,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([-0.4805, -0.8086,  0.5742,  0.7656,  0.6133, -1.0781, -0.5469, -0.6562,  0.3398,  0.0430, -1.5547, -1.2109,  0.8125,  0.1040, -1.0391, -0.4258,  1.0234, -0.0732, -0.1836, -1.7656,  0.6445, -0.8438,  0.7695,  0.1396, -0.0059, -1.0781, -0.6562, -0.2061, -0.2676,  0.2471,  0.7539,  0.9805,
        -0.6992, -0.8125, -0.4199,  1.0625,  0.1001,  1.3438,  0.4863, -0.8164, -0.2773, -0.5273, -0.1084, -1.1641, -0.4512, -0.9297, -0.2217,  1.8203,  0.0674,  1.2266,  0.1270,  1.4766,  0.4766, -0.1484, -0.0432, -0.5859, -0.5938,  0.4805,  0.3633, -1.3516, -0.3789,  0.3262,  1.8516,  0.5781],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0144,  0.0059,  0.0184,  ...,  0.0035, -0.0180,  0.0135],
        [-0.0513, -0.0040, -0.0077,  ...,  0.0070,  0.0137, -0.0536],
        [ 0.0209, -0.0028,  0.0166,  ..., -0.0150,  0.0096, -0.0154],
        ...,
        [ 0.0028,  0.0026,  0.0152,  ...,  0.0139,  0.0122, -0.0016],
        [ 0.0244, -0.0393, -0.0061,  ...,  0.0299,  0.0259, -0.0256],
        [ 0.0224, -0.0051,  0.0142,  ...,  0.0284,  0.0104, -0.0216]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2637,  0.4219,  0.7852, -0.3262, -0.5430,  0.5508,  0.2168, -0.6992, -0.2354,  1.2578, -0.8398,  0.1494,  0.6953, -0.0017, -0.4668, -0.3594, -1.3828, -0.5469,  0.8672,  1.3828,  0.1953, -0.8320, -0.7930,  1.7344, -0.2471,  1.1094, -0.2578, -0.3555, -0.1572,  1.0156,  0.9492,  0.9453,
         0.3008,  0.3633,  0.2295,  0.6680, -0.2871,  0.0986, -1.2500,  0.3730, -0.4238,  0.3984, -1.6016, -0.5977, -0.5000,  0.5547, -0.8359,  0.0588, -0.7227, -1.2266,  0.2266,  0.3535, -0.0889,  0.3672,  1.5156,  1.6875, -0.4453,  1.1094, -0.5234,  0.3574, -0.0942, -0.6289, -1.3281,  0.2158],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.1953,     -1.2031,      0.2305,     -0.4531,     -0.4453,      0.2451,     -0.1270,     -0.2695,     -0.0339,     -0.9023,     -0.1436,      0.4707,     -0.0143,     -0.5312],
        [     0.0000,      0.7109,     -1.0703,     -0.3496,      0.2148,      0.2129,     -0.1367,     -0.5000,      0.5938,      0.4551,      0.6836,     -0.1572,     -0.1455,      0.4199,      0.5156],
        [     0.0000,     -0.0250,     -0.0674,      0.3105,     -0.2051,     -0.2598,      0.3984,      0.6914,     -0.1543,      0.1602,     -0.5625,      0.1670,      1.0234,      0.2236,     -0.2305],
        [     0.0000,      0.4434,      1.7656,      0.4238,     -0.5977,     -0.6641,      0.1865,      1.4453,     -0.8750,     -0.2695,     -1.2109,      0.2871,      1.5234,     -0.3105,     -1.1406],
        [     0.0000,      0.2891,      1.3281,      0.1934,     -0.5703,     -0.6328,      0.1670,      1.2500,     -0.7500,     -0.2236,     -1.0781,      0.1748,      1.2734,     -0.2295,     -0.8711],
        [     0.0000,      0.1084,      0.8047,      0.1680,     -0.6602,     -0.7031,     -0.0359,      0.8320,     -0.7383,     -0.2617,     -1.0938,     -0.0066,      1.1328,     -0.3086,     -0.9375],
        [     0.0000,      0.0547,     -1.1562,      0.0913,     -0.0123,      0.0018,      0.3418,      0.0496,      0.3008,      0.4180,     -0.0457,      0.1387,      0.6406,      0.4160,      0.0942],
        [     0.0000,      0.1484,      1.4688,      0.1562,     -0.5742,     -0.6680,      0.1738,      1.3281,     -0.8125,     -0.3359,     -1.1562,      0.0952,      1.1641,     -0.2734,     -0.8984],
        [     0.0000,     -0.6172,      0.1543,     -0.0184,     -0.6328,     -0.6875,     -0.0030,      0.4707,     -0.6406,     -0.3066,     -1.0469,     -0.1523,      0.5156,     -0.2598,     -0.6289],
        [     0.0000,      0.0620,      1.6875,      0.1172,     -0.5781,     -0.6797,      0.1533,      1.3594,     -0.8359,     -0.3496,     -1.1406,      0.1328,      1.0625,     -0.2910,     -0.8867],
        [     0.0000,     -0.3379,      0.5469,      0.0315,     -0.5391,     -0.5977,     -0.1001,      0.5938,     -0.5820,     -0.3262,     -0.8672,     -0.0835,      0.5586,     -0.2695,     -0.5898],
        [     0.0000,     -0.3887,     -2.0938,      0.1367,     -0.0442,      0.0137,      0.4180,     -0.3926,      0.3496,      0.4219,     -0.0996,     -0.0039,      0.5664,      0.4082,      0.1387],
        [     0.0000,      0.1191,      1.3828,      0.1025,     -0.5859,     -0.7031,      0.0234,      1.1641,     -0.7852,     -0.3457,     -1.0938,     -0.0214,      0.9922,     -0.3047,     -0.8711],
        [     0.0000,     -0.3301,      1.2109,      0.0625,     -0.4531,     -0.5625,      0.2178,      1.0625,     -0.6406,     -0.2246,     -0.9609,      0.1221,      0.7383,     -0.1216,     -0.6602]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5522],
        [0.2415],
        [0.3059],
        [0.2542],
        [0.2261],
        [0.1733],
        [0.1423],
        [0.1549],
        [0.1311],
        [0.1243],
        [0.0906],
        [0.0644],
        [0.1005],
        [0.0906]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.4141, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4414, 0.2617, 0.2969, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3613, 0.1807, 0.2832, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1875, 0.4141, 0.2500, 0.0309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.1729, 0.4004, 0.2432, 0.0317, 0.0286, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.1436, 0.3496, 0.1914, 0.0474, 0.0420, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.1270, 0.2422, 0.1226, 0.0732, 0.0713, 0.0425, 0.0757, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0654, 0.1436, 0.4590, 0.1846, 0.0069, 0.0063, 0.0089, 0.1128, 0.0115, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.1377, 0.4492, 0.1846, 0.0073, 0.0067, 0.0093, 0.1138, 0.0124, 0.0122, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.1367, 0.4648, 0.1816, 0.0057, 0.0053, 0.0076, 0.1089, 0.0098, 0.0096, 0.0096, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.1318, 0.4238, 0.1816, 0.0079, 0.0073, 0.0101, 0.1152, 0.0134, 0.0132, 0.0132, 0.0130, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.0781, 0.1387, 0.0708, 0.0491, 0.0476, 0.0275, 0.0439, 0.0771, 0.0889, 0.0864, 0.0981, 0.0442, 0.0000, 0.0000],
        [0.0535, 0.1143, 0.4082, 0.1582, 0.0049, 0.0045, 0.0063, 0.0938, 0.0084, 0.0083, 0.0083, 0.0082, 0.1138, 0.0082, 0.0000],
        [0.0481, 0.1182, 0.4082, 0.1582, 0.0043, 0.0041, 0.0060, 0.0942, 0.0074, 0.0073, 0.0073, 0.0072, 0.1147, 0.0072, 0.0070]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0031,  0.0084,  ..., -0.0019, -0.0285, -0.0139],
        [-0.0321,  0.0082, -0.0149,  ...,  0.0022, -0.0208, -0.0165],
        [-0.0192,  0.0064,  0.0344,  ..., -0.0120, -0.0350,  0.0075],
        ...,
        [ 0.0393,  0.0153,  0.0257,  ..., -0.0186,  0.0177, -0.0186],
        [ 0.0215, -0.0141,  0.0128,  ..., -0.0027,  0.0100, -0.0088],
        [ 0.0375,  0.0066,  0.0228,  ..., -0.0551,  0.0327,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6758, -0.5859,  0.5508,  0.4590,  0.2773, -1.2500, -0.2734, -0.3750,  0.4004,  0.2852, -1.7422, -0.7578,  0.6016,  0.9453, -1.2734, -0.6289,  0.1416,  0.5000,  0.0349, -1.3281, -0.4277,  0.2168,  0.1982, -0.4609,  0.2461, -0.7891, -0.1465,  1.1641, -0.1475,  0.3809,  0.6719,  0.2832,
        -0.7969, -0.2373,  0.2520,  0.5859, -0.3926,  0.7227,  0.9453, -0.9414, -0.2031, -0.6836,  0.0356, -0.9570, -0.3320, -1.3594,  0.0859,  1.1172, -0.5781,  0.4902, -0.2559,  1.6172,  0.0977,  0.2852,  0.2773, -0.4688, -0.3691, -0.6211,  0.8164, -1.6641,  0.1680,  0.9648,  1.4453,  0.8906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0144,  0.0059,  0.0184,  ...,  0.0035, -0.0180,  0.0135],
        [-0.0513, -0.0040, -0.0077,  ...,  0.0070,  0.0137, -0.0536],
        [ 0.0209, -0.0028,  0.0166,  ..., -0.0150,  0.0096, -0.0154],
        ...,
        [ 0.0028,  0.0026,  0.0152,  ...,  0.0139,  0.0122, -0.0016],
        [ 0.0244, -0.0393, -0.0061,  ...,  0.0299,  0.0259, -0.0256],
        [ 0.0224, -0.0051,  0.0142,  ...,  0.0284,  0.0104, -0.0216]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0664,  1.2500, -0.4102, -0.2734, -0.7461,  1.0859,  0.2930, -0.5742, -0.4238,  0.8672, -0.5625, -0.1040,  0.1436, -0.1108,  0.0786,  0.4883, -0.2676, -0.9609,  0.9141,  1.3516, -0.3555, -1.3516, -0.8242,  1.6016, -0.8398,  0.6094, -0.7891, -0.0781, -0.2832,  0.2891,  0.4707,  0.3633,
         0.7500, -0.5781,  0.2754,  0.1895, -0.0500, -0.3242, -1.3828, -0.0537, -1.2500, -0.3633, -0.9766, -0.0150, -0.5430,  1.3594, -0.4512, -0.8555, -0.0771, -1.5000, -0.4531, -1.4141, -0.3867, -0.2070,  1.1797,  1.7344, -0.0430,  0.2988,  0.2910,  0.1406, -1.0000, -1.0469, -1.2344,  0.3730],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.3477,  0.3008, -0.0884, -0.8438, -0.8477, -1.1094, -0.3828, -0.4316, -0.3477, -0.3535, -0.2949, -0.3574, -0.2891, -0.3320],
        [ 0.0000, -0.5195, -0.3945, -0.6172, -0.2598, -0.2100, -0.6328, -0.8477, -0.1533, -0.0461, -0.0564,  0.0256, -0.8867,  0.0393, -0.0222],
        [ 0.0000, -0.6953, -0.2422, -0.7383, -0.8438, -0.8477, -1.3359, -1.1250, -0.5195, -0.3828, -0.4180, -0.2891, -1.1328, -0.3145, -0.4141],
        [ 0.0000,  0.4551,  1.2500,  0.7422, -1.3438, -1.4531, -1.1797,  0.5078, -0.8633, -0.8984, -0.8945, -0.9219,  0.6328, -0.9453, -0.9414],
        [ 0.0000,  0.3438,  1.1797,  0.6797, -1.3516, -1.4609, -1.2266,  0.4375, -0.8359, -0.8594, -0.8594, -0.8789,  0.5625, -0.8984, -0.9023],
        [ 0.0000, -0.2676,  0.6250,  0.0219, -1.3750, -1.4922, -1.5859, -0.3164, -0.7539, -0.7031, -0.7344, -0.6680, -0.2266, -0.7227, -0.7812],
        [ 0.0000, -0.6641, -0.0150, -0.6953, -1.2109, -1.2422, -1.7578, -1.1797, -0.7305, -0.5898, -0.6211, -0.4922, -1.1641, -0.5156, -0.6250],
        [ 0.0000,  0.7891,  1.9531,  1.0391, -2.2500, -2.3281, -2.0000,  0.5469, -1.7422, -1.7578, -1.7578, -1.7734,  0.7305, -1.7812, -1.8047],
        [ 0.0000,  0.7031,  1.8906,  0.9961, -2.2344, -2.3125, -1.9922,  0.5156, -1.7031, -1.7188, -1.7188, -1.7344,  0.6992, -1.7344, -1.7578],
        [ 0.0000,  0.8125,  2.0312,  1.1016, -2.3594, -2.4219, -2.0781,  0.5898, -1.8281, -1.8359, -1.8359, -1.8516,  0.7812, -1.8516, -1.8828],
        [ 0.0000,  0.6602,  1.8281,  0.9766, -2.1562, -2.2344, -1.9141,  0.5234, -1.6250, -1.6406, -1.6406, -1.6641,  0.6992, -1.6641, -1.6875],
        [ 0.0000, -0.6484, -0.0767, -0.7422, -1.1094, -1.1406, -1.6953, -1.2266, -0.6562, -0.5195, -0.5469, -0.4219, -1.2188, -0.4414, -0.5430],
        [ 0.0000,  0.7617,  2.0312,  1.0859, -2.4062, -2.4688, -2.1406,  0.5664, -1.8516, -1.8594, -1.8594, -1.8750,  0.7578, -1.8750, -1.9062],
        [ 0.0000,  0.8945,  2.1406,  1.1875, -2.4062, -2.4688, -2.0938,  0.6719, -1.8750, -1.8828, -1.8906, -1.9062,  0.8672, -1.8984, -1.9297]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5661],
        [0.3616],
        [0.3477],
        [0.0638],
        [0.0600],
        [0.0826],
        [0.2042],
        [0.0458],
        [0.0434],
        [0.0400],
        [0.0376],
        [0.1276],
        [0.0347],
        [0.0314]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5977, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.2539, 0.3027, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3633, 0.1748, 0.2852, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.1875, 0.4297, 0.2490, 0.0278, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1777, 0.4141, 0.2461, 0.0289, 0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1514, 0.3535, 0.2148, 0.0510, 0.0469, 0.0339, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.1138, 0.2236, 0.1162, 0.0928, 0.0957, 0.0537, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.1387, 0.4707, 0.1914, 0.0072, 0.0066, 0.0057, 0.1055, 0.0098, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1338, 0.4629, 0.1914, 0.0075, 0.0069, 0.0059, 0.1060, 0.0103, 0.0102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0603, 0.1328, 0.4688, 0.1895, 0.0065, 0.0061, 0.0052, 0.1040, 0.0090, 0.0090, 0.0089, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0649, 0.1299, 0.4473, 0.1885, 0.0078, 0.0072, 0.0061, 0.1060, 0.0107, 0.0106, 0.0105, 0.0106, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.0708, 0.1328, 0.0693, 0.0598, 0.0618, 0.0347, 0.0405, 0.0767, 0.0874, 0.0854, 0.0957, 0.0405, 0.0000, 0.0000],
        [0.0537, 0.1143, 0.4141, 0.1670, 0.0057, 0.0053, 0.0045, 0.0913, 0.0080, 0.0079, 0.0079, 0.0079, 0.1040, 0.0077, 0.0000],
        [0.0500, 0.1172, 0.4102, 0.1670, 0.0054, 0.0050, 0.0044, 0.0918, 0.0075, 0.0074, 0.0074, 0.0074, 0.1050, 0.0072, 0.0071]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0060, -0.0031,  0.0084,  ..., -0.0019, -0.0285, -0.0139],
        [-0.0321,  0.0082, -0.0149,  ...,  0.0022, -0.0208, -0.0165],
        [-0.0192,  0.0064,  0.0344,  ..., -0.0120, -0.0350,  0.0075],
        ...,
        [ 0.0393,  0.0153,  0.0257,  ..., -0.0186,  0.0177, -0.0186],
        [ 0.0215, -0.0141,  0.0128,  ..., -0.0027,  0.0100, -0.0088],
        [ 0.0375,  0.0066,  0.0228,  ..., -0.0551,  0.0327,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([ 0.7422, -0.5898,  0.4629,  0.4434,  0.2969, -1.2578, -0.2617, -0.4062,  0.4062,  0.2773, -1.6875, -0.7227,  0.5469,  0.9297, -1.2656, -0.6328,  0.1245,  0.4863,  0.0354, -1.3125, -0.4082,  0.2559,  0.2119, -0.4883,  0.2236, -0.7695, -0.1436,  1.1797, -0.1445,  0.3379,  0.6836,  0.2715,
        -0.7695, -0.2480,  0.2266,  0.5469, -0.4141,  0.6875,  0.9219, -0.8945, -0.1875, -0.6953,  0.0684, -0.8945, -0.3105, -1.3359,  0.1069,  1.0781, -0.6172,  0.4785, -0.2314,  1.5859,  0.0991,  0.2676,  0.2598, -0.4688, -0.3359, -0.6797,  0.8516, -1.6328,  0.2041,  0.9805,  1.4219,  0.8594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0144,  0.0059,  0.0184,  ...,  0.0035, -0.0180,  0.0135],
        [-0.0513, -0.0040, -0.0077,  ...,  0.0070,  0.0137, -0.0536],
        [ 0.0209, -0.0028,  0.0166,  ..., -0.0150,  0.0096, -0.0154],
        ...,
        [ 0.0028,  0.0026,  0.0152,  ...,  0.0139,  0.0122, -0.0016],
        [ 0.0244, -0.0393, -0.0061,  ...,  0.0299,  0.0259, -0.0256],
        [ 0.0224, -0.0051,  0.0142,  ...,  0.0284,  0.0104, -0.0216]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0669,  1.2734, -0.4512, -0.2471, -0.7461,  1.0547,  0.2930, -0.5508, -0.4316,  0.8867, -0.5703, -0.0898,  0.1328, -0.0889,  0.0718,  0.5430, -0.2617, -0.9492,  0.9219,  1.3516, -0.4043, -1.3750, -0.8477,  1.6328, -0.8477,  0.6211, -0.7461, -0.0547, -0.2812,  0.2617,  0.4512,  0.3203,
         0.7109, -0.6211,  0.2812,  0.1943, -0.0361, -0.3555, -1.3750, -0.0535, -1.2734, -0.3594, -0.9492, -0.0110, -0.5664,  1.3594, -0.4570, -0.9141, -0.1162, -1.4922, -0.4688, -1.4531, -0.3906, -0.1758,  1.1953,  1.7422, -0.0581,  0.2832,  0.2852,  0.1328, -1.0156, -1.0391, -1.2734,  0.3496],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.3945,      0.2432,     -0.1396,     -0.6406,     -0.6094,     -0.9922,     -0.4941,     -0.4004,     -0.3262,     -0.3340,     -0.2773,     -0.4805,     -0.2910,     -0.3203],
        [     0.0000,     -0.5625,     -0.3867,     -0.6211,     -0.2236,     -0.1426,     -0.4238,     -0.8867,     -0.1133,     -0.0107,     -0.0216,      0.0540,     -0.9141,      0.0603,     -0.0019],
        [     0.0000,     -0.7305,     -0.2393,     -0.7305,     -0.6797,     -0.6250,     -1.0859,     -1.1641,     -0.4980,     -0.3711,     -0.3984,     -0.2871,     -1.1719,     -0.3145,     -0.3867],
        [     0.0000,      0.5703,      1.3984,      0.8516,     -1.3438,     -1.4375,     -1.5547,      0.5234,     -1.1172,     -1.1484,     -1.1484,     -1.1641,      0.6094,     -1.2031,     -1.1719],
        [     0.0000,      0.5078,      1.3516,      0.8359,     -1.3047,     -1.3984,     -1.5312,      0.5117,     -1.0625,     -1.0938,     -1.1016,     -1.1094,      0.5977,     -1.1484,     -1.1250],
        [     0.0000,      0.0245,      0.8750,      0.3789,     -1.0625,     -1.1484,     -1.4688,      0.0537,     -0.8086,     -0.8086,     -0.8203,     -0.7969,      0.1172,     -0.8555,     -0.8359],
        [     0.0000,     -0.7344,     -0.0603,     -0.7148,     -0.9414,     -0.9102,     -1.4844,     -1.2578,     -0.6875,     -0.5586,     -0.5820,     -0.4668,     -1.2500,     -0.5078,     -0.5742],
        [     0.0000,      0.7812,      2.0000,      1.1016,     -2.1875,     -2.2656,     -2.4219,      0.5078,     -1.8672,     -1.8750,     -1.8828,     -1.8828,      0.6367,     -1.9141,     -1.9141],
        [     0.0000,      0.7188,      1.9609,      1.0781,     -2.1719,     -2.2344,     -2.4062,      0.4863,     -1.8438,     -1.8516,     -1.8594,     -1.8594,      0.6133,     -1.8906,     -1.8906],
        [     0.0000,      0.7930,      2.0469,      1.1484,     -2.2188,     -2.2969,     -2.4531,      0.5469,     -1.8984,     -1.8984,     -1.9141,     -1.9062,      0.6758,     -1.9375,     -1.9375],
        [     0.0000,      0.6914,      1.9297,      1.0625,     -2.1250,     -2.2031,     -2.3750,      0.4902,     -1.8047,     -1.8125,     -1.8203,     -1.8203,      0.6172,     -1.8516,     -1.8516],
        [     0.0000,     -0.7148,     -0.0874,     -0.7344,     -0.8867,     -0.8516,     -1.4297,     -1.2734,     -0.6328,     -0.5039,     -0.5273,     -0.4141,     -1.2734,     -0.4492,     -0.5156],
        [     0.0000,      0.7539,      2.0469,      1.1406,     -2.2500,     -2.3125,     -2.4844,      0.5273,     -1.9062,     -1.9141,     -1.9219,     -1.9141,      0.6602,     -1.9453,     -1.9453],
        [     0.0000,      0.8516,      2.0938,      1.2031,     -2.2344,     -2.3125,     -2.4375,      0.6055,     -1.8984,     -1.9062,     -1.9141,     -1.9141,      0.7383,     -1.9453,     -1.9453]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5763],
        [0.3721],
        [0.3553],
        [0.0624],
        [0.0551],
        [0.0634],
        [0.2051],
        [0.0483],
        [0.0460],
        [0.0420],
        [0.0401],
        [0.1444],
        [0.0362],
        [0.0322]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(
:0.0005 of:0.0017.:0.0027.:0.0023.:0.0035 The:0.0003.:0.0033.:0.0021)
.
------
		( of:0.0017.:0.0027.:0.0023.:0.0035 The:0.0003.:0.0033.:0.0021.:0.0035)
...............
@ 1050 train 7.8143 , allloss: 19.9399, dt: 1551.35ms, fracRes: 0.0213, norm(attn): 0.4805, norm(output): 0.1182, norm(x): 0.1285, norm(y): 0.9889, norm:55.5177, tok/sec: 84489.10, flops:32.92, batch-reuse:1
@ 1051 train 7.8268 , allloss: 19.7743, dt: 1159.46ms, fracRes: 0.0247, norm(attn): 0.4844, norm(output): 0.1235, norm(x): 0.1362, norm(y): 0.9889, norm:65.8295, tok/sec: 113045.26, flops:44.04, batch-reuse:1
@ 1052 train 8.4794 , allloss: 19.4966, dt: 1152.65ms, fracRes: 0.0188, norm(attn): 0.4688, norm(output): 0.1406, norm(x): 0.1484, norm(y): 0.9885, norm:161.6865, tok/sec: 113713.37, flops:44.30, batch-reuse:1
@ 1053 train 7.9779 , allloss: 20.0047, dt: 1124.39ms, fracRes: 0.0177, norm(attn): 0.4922, norm(output): 0.1299, norm(x): 0.1380, norm(y): 0.9885, norm:84.9809, tok/sec: 116571.66, flops:45.42, batch-reuse:1
@ 1054 train 8.2162 , allloss: 20.5267, dt: 1139.65ms, fracRes: 0.0235, norm(attn): 0.4805, norm(output): 0.1328, norm(x): 0.1470, norm(y): 0.9884, norm:110.6322, tok/sec: 115010.55, flops:44.81, batch-reuse:1
@ 1055 train 8.0839 , allloss: 20.7761, dt: 1149.00ms, fracRes: 0.0439, norm(attn): 0.4590, norm(output): 0.1426, norm(x): 0.1710, norm(y): 0.9885, norm:94.4750, tok/sec: 114075.28, flops:44.44, batch-reuse:1
@ 1056 train 8.3950 , allloss: 21.2746, dt: 1155.61ms, fracRes: 0.0655, norm(attn): 0.4355, norm(output): 0.1592, norm(x): 0.2007, norm(y): 0.9886, norm:93.6234, tok/sec: 113422.50, flops:44.19, batch-reuse:1
@ 1057 train 8.8033 , allloss: 22.4641, dt: 1146.56ms, fracRes: 0.0709, norm(attn): 0.4238, norm(output): 0.1777, norm(x): 0.2203, norm(y): 0.9886, norm:101.3100, tok/sec: 114317.95, flops:44.54, batch-reuse:1
@ 1058 train 9.2361 , allloss: 24.2327, dt: 1144.21ms, fracRes: 0.0733, norm(attn): 0.4199, norm(output): 0.1973, norm(x): 0.2378, norm(y): 0.9886, norm:105.7935, tok/sec: 114552.15, flops:44.63, batch-reuse:1
@ 1059 train 9.7846 , allloss: 26.5762, dt: 1156.61ms, fracRes: 0.0767, norm(attn): 0.4141, norm(output): 0.2188, norm(x): 0.2605, norm(y): 0.9885, norm:128.9095, tok/sec: 113324.66, flops:44.15, batch-reuse:1
@ 1060 train 10.3010 , allloss: 28.2748, dt: 1167.08ms, fracRes: 0.0911, norm(attn): 0.4062, norm(output): 0.2617, norm(x): 0.3051, norm(y): 0.9885, norm:160.9565, tok/sec: 112307.49, flops:43.75, batch-reuse:1
@ 1061 train 10.6118 , allloss: 28.2346, dt: 1152.13ms, fracRes: 0.0962, norm(attn): 0.4082, norm(output): 0.3320, norm(x): 0.3627, norm(y): 0.9885, norm:170.4313, tok/sec: 113765.28, flops:44.32, batch-reuse:1
@ 1062 train 10.8364 , allloss: 28.7942, dt: 1140.09ms, fracRes: 0.0952, norm(attn): 0.4375, norm(output): 0.4297, norm(x): 0.4411, norm(y): 0.9884, norm:93.4726, tok/sec: 114965.91, flops:44.79, batch-reuse:1
@ 1063 train 10.8621 , allloss: 30.3823, dt: 1124.12ms, fracRes: 0.0919, norm(attn): 0.4902, norm(output): 0.5117, norm(x): 0.5018, norm(y): 0.9883, norm:107.2701, tok/sec: 116599.35, flops:45.43, batch-reuse:1
@ 1064 train 10.7727 , allloss: 30.9808, dt: 1129.73ms, fracRes: 0.0941, norm(attn): 0.5508, norm(output): 0.5586, norm(x): 0.5432, norm(y): 0.9883, norm:100.6891, tok/sec: 116020.69, flops:45.20, batch-reuse:1
@ 1065 train 10.6472 , allloss: 31.5025, dt: 1131.82ms, fracRes: 0.0923, norm(attn): 0.6094, norm(output): 0.5781, norm(x): 0.5618, norm(y): 0.9882, norm:86.8440, tok/sec: 115805.96, flops:45.12, batch-reuse:1
@ 1066 train 10.5206 , allloss: 31.9971, dt: 1149.07ms, fracRes: 0.0872, norm(attn): 0.6719, norm(output): 0.5898, norm(x): 0.5694, norm(y): 0.9881, norm:92.8034, tok/sec: 114068.23, flops:44.44, batch-reuse:1
@ 1067 train 10.4602 , allloss: 33.5610, dt: 1139.98ms, fracRes: 0.0727, norm(attn): 0.7266, norm(output): 0.6172, norm(x): 0.5834, norm(y): 0.9881, norm:99.8310, tok/sec: 114977.78, flops:44.80, batch-reuse:1
@ 1068 train 10.4536 , allloss: 34.1713, dt: 1128.84ms, fracRes: 0.0715, norm(attn): 0.8086, norm(output): 0.6758, norm(x): 0.6282, norm(y): 0.9880, norm:81.8520, tok/sec: 116112.36, flops:45.24, batch-reuse:1
@ 1069 train 10.3829 , allloss: 36.3894, dt: 1133.41ms, fracRes: 0.0629, norm(attn): 0.8750, norm(output): 0.7344, norm(x): 0.6807, norm(y): 0.9880, norm:72.1647, tok/sec: 115643.65, flops:45.05, batch-reuse:1
@ 1070 train 10.2400 , allloss: 38.7914, dt: 1154.32ms, fracRes: 0.0590, norm(attn): 0.9375, norm(output): 0.8125, norm(x): 0.7498, norm(y): 0.9880, norm:67.6090, tok/sec: 113548.63, flops:44.24, batch-reuse:1
@ 1071 train 9.9930 , allloss: 40.9604, dt: 1142.81ms, fracRes: 0.0532, norm(attn): 0.9766, norm(output): 0.8906, norm(x): 0.8124, norm(y): 0.9881, norm:99.0233, tok/sec: 114692.98, flops:44.68, batch-reuse:1
@ 1072 train 9.7289 , allloss: 42.2171, dt: 1136.95ms, fracRes: 0.0497, norm(attn): 0.9961, norm(output): 0.9336, norm(x): 0.8487, norm(y): 0.9883, norm:130.1673, tok/sec: 115284.28, flops:44.91, batch-reuse:1
@ 1073 train 9.4040 , allloss: 42.0323, dt: 1144.38ms, fracRes: 0.0482, norm(attn): 0.9961, norm(output): 0.9336, norm(x): 0.8491, norm(y): 0.9884, norm:171.3191, tok/sec: 114535.54, flops:44.62, batch-reuse:1
@ 1074 train 9.0985 , allloss: 40.7537, dt: 1130.49ms, fracRes: 0.0455, norm(attn): 0.9727, norm(output): 0.8906, norm(x): 0.8180, norm(y): 0.9885, norm:180.7998, tok/sec: 115942.76, flops:45.17, batch-reuse:1
@ 1075 train 8.7908 , allloss: 38.4033, dt: 1123.42ms, fracRes: 0.0421, norm(attn): 0.9102, norm(output): 0.8281, norm(x): 0.7583, norm(y): 0.9886, norm:210.1467, tok/sec: 116671.86, flops:45.46, batch-reuse:1
@ 1076 train 8.5351 , allloss: 35.8878, dt: 1146.60ms, fracRes: 0.0409, norm(attn): 0.8281, norm(output): 0.7344, norm(x): 0.6731, norm(y): 0.9887, norm:184.7592, tok/sec: 114313.36, flops:44.54, batch-reuse:1
@ 1077 train 8.4130 , allloss: 37.3628, dt: 1147.95ms, fracRes: 0.0482, norm(attn): 0.7422, norm(output): 0.6328, norm(x): 0.5870, norm(y): 0.9889, norm:201.4402, tok/sec: 114178.70, flops:44.48, batch-reuse:1
@ 1078 train 8.4125 , allloss: 35.9639, dt: 1157.57ms, fracRes: 0.0499, norm(attn): 0.6328, norm(output): 0.5234, norm(x): 0.4914, norm(y): 0.9891, norm:182.7888, tok/sec: 113230.41, flops:44.11, batch-reuse:1
@ 1079 train 7.8722 , allloss: 27.2170, dt: 1123.15ms, fracRes: 0.0786, norm(attn): 0.5820, norm(output): 0.4375, norm(x): 0.4368, norm(y): 0.9895, norm:181.6311, tok/sec: 116699.87, flops:45.47, batch-reuse:1
@ 1080 train 7.7611 , allloss: 24.8887, dt: 1126.87ms, fracRes: 0.1089, norm(attn): 0.5117, norm(output): 0.3516, norm(x): 0.3790, norm(y): 0.9899, norm:140.2533, tok/sec: 116315.16, flops:45.32, batch-reuse:1
@ 1081 train 7.7672 , allloss: 25.0133, dt: 1119.56ms, fracRes: 0.1490, norm(attn): 0.4512, norm(output): 0.2695, norm(x): 0.3420, norm(y): 0.9905, norm:70.9511, tok/sec: 117074.07, flops:45.61, batch-reuse:1
@ 1082 train 7.9381 , allloss: 24.4615, dt: 1140.07ms, fracRes: 0.1415, norm(attn): 0.3906, norm(output): 0.2188, norm(x): 0.2993, norm(y): 0.9909, norm:52.9601, tok/sec: 114968.17, flops:44.79, batch-reuse:1
@ 1083 train 7.7316 , allloss: 24.0542, dt: 1132.03ms, fracRes: 0.1775, norm(attn): 0.3848, norm(output): 0.1865, norm(x): 0.2995, norm(y): 0.9911, norm:45.3607, tok/sec: 115784.65, flops:45.11, batch-reuse:1
@ 1084 train 7.9974 , allloss: 23.3099, dt: 1147.91ms, fracRes: 0.1528, norm(attn): 0.3867, norm(output): 0.1680, norm(x): 0.2657, norm(y): 0.9908, norm:48.7601, tok/sec: 114183.01, flops:44.49, batch-reuse:1
@ 1085 train 8.8372 , allloss: 24.0318, dt: 1142.52ms, fracRes: 0.1351, norm(attn): 0.3965, norm(output): 0.1592, norm(x): 0.2475, norm(y): 0.9903, norm:60.1480, tok/sec: 114721.58, flops:44.70, batch-reuse:1
@ 1086 train 8.7204 , allloss: 23.4450, dt: 1141.85ms, fracRes: 0.1953, norm(attn): 0.4004, norm(output): 0.1543, norm(x): 0.2906, norm(y): 0.9904, norm:54.9790, tok/sec: 114789.11, flops:44.72, batch-reuse:1
@ 1087 train 8.5120 , allloss: 22.2145, dt: 1133.06ms, fracRes: 0.2089, norm(attn): 0.4043, norm(output): 0.1562, norm(x): 0.3026, norm(y): 0.9903, norm:55.0009, tok/sec: 115679.33, flops:45.07, batch-reuse:1
@ 1088 train 8.4673 , allloss: 21.6143, dt: 1132.07ms, fracRes: 0.2203, norm(attn): 0.4102, norm(output): 0.1650, norm(x): 0.3173, norm(y): 0.9902, norm:52.9338, tok/sec: 115780.72, flops:45.11, batch-reuse:1
@ 1089 train 8.4281 , allloss: 20.8535, dt: 1141.93ms, fracRes: 0.2265, norm(attn): 0.4297, norm(output): 0.1787, norm(x): 0.3313, norm(y): 0.9900, norm:50.0263, tok/sec: 114781.11, flops:44.72, batch-reuse:1
@ 1090 train 8.4488 , allloss: 20.1762, dt: 1119.50ms, fracRes: 0.2150, norm(attn): 0.4355, norm(output): 0.1924, norm(x): 0.3333, norm(y): 0.9898, norm:73.4989, tok/sec: 117080.47, flops:45.61, batch-reuse:1
@ 1091 train 8.5021 , allloss: 20.2804, dt: 1150.21ms, fracRes: 0.2166, norm(attn): 0.4336, norm(output): 0.2021, norm(x): 0.3384, norm(y): 0.9895, norm:141.2913, tok/sec: 113954.76, flops:44.40, batch-reuse:1
@ 1092 train 8.6329 , allloss: 19.4695, dt: 1154.92ms, fracRes: 0.1454, norm(attn): 0.4414, norm(output): 0.2051, norm(x): 0.2907, norm(y): 0.9890, norm:122.6451, tok/sec: 113490.50, flops:44.22, batch-reuse:1
@ 1093 train 8.1789 , allloss: 19.1760, dt: 1174.87ms, fracRes: 0.1063, norm(attn): 0.4492, norm(output): 0.1963, norm(x): 0.2562, norm(y): 0.9887, norm:84.1469, tok/sec: 111563.46, flops:43.47, batch-reuse:1
@ 1094 train 7.7017 , allloss: 19.2808, dt: 1134.74ms, fracRes: 0.1009, norm(attn): 0.4414, norm(output): 0.1836, norm(x): 0.2432, norm(y): 0.9887, norm:34.9277, tok/sec: 115508.10, flops:45.00, batch-reuse:1
@ 1095 train 7.7023 , allloss: 20.8237, dt: 1124.22ms, fracRes: 0.1231, norm(attn): 0.4121, norm(output): 0.1729, norm(x): 0.2485, norm(y): 0.9886, norm:60.0084, tok/sec: 116589.71, flops:45.42, batch-reuse:1
@ 1096 train 7.7415 , allloss: 19.8543, dt: 1145.00ms, fracRes: 0.1050, norm(attn): 0.4199, norm(output): 0.1689, norm(x): 0.2332, norm(y): 0.9882, norm:46.7536, tok/sec: 114473.27, flops:44.60, batch-reuse:1
@ 1097 train 7.7008 , allloss: 18.2567, dt: 1161.94ms, fracRes: 0.0685, norm(attn): 0.4375, norm(output): 0.1680, norm(x): 0.2059, norm(y): 0.9877, norm:35.6306, tok/sec: 112804.00, flops:43.95, batch-reuse:1
@ 1098 train 7.6892 , allloss: 16.4696, dt: 1153.73ms, fracRes: 0.0519, norm(attn): 0.4590, norm(output): 0.1592, norm(x): 0.1871, norm(y): 0.9871, norm:40.2309, tok/sec: 113607.13, flops:44.26, batch-reuse:1
@ 1099 train 7.7592 , allloss: 14.6226, dt: 1168.19ms, fracRes: 0.0524, norm(attn): 0.4688, norm(output): 0.1504, norm(x): 0.1795, norm(y): 0.9867, norm:56.0185, tok/sec: 112201.06, flops:43.71, batch-reuse:1
@ 1100 train 7.6756 , allloss: 14.2566, dt: 1148.44ms, fracRes: 0.0959, norm(attn): 0.5117, norm(output): 0.1348, norm(x): 0.1980, norm(y): 0.9864, norm:114.6667, tok/sec: 114130.63, flops:44.47, batch-reuse:1
@ 1101 train 7.7317 , allloss: 13.9809, dt: 1142.25ms, fracRes: 0.1148, norm(attn): 0.5820, norm(output): 0.1182, norm(x): 0.1992, norm(y): 0.9859, norm:144.8437, tok/sec: 114748.93, flops:44.71, batch-reuse:1
@ 1102 train 7.6947 , allloss: 13.4235, dt: 1141.12ms, fracRes: 0.0927, norm(attn): 0.6602, norm(output): 0.1074, norm(x): 0.1735, norm(y): 0.9853, norm:113.4617, tok/sec: 114862.09, flops:44.75, batch-reuse:1
@ 1103 train 7.7815 , allloss: 14.0062, dt: 1160.63ms, fracRes: 0.0624, norm(attn): 0.6992, norm(output): 0.1118, norm(x): 0.1544, norm(y): 0.9851, norm:43.7912, tok/sec: 112931.86, flops:44.00, batch-reuse:1
@ 1104 train 8.0138 , allloss: 16.2235, dt: 1161.91ms, fracRes: 0.0489, norm(attn): 0.6797, norm(output): 0.1455, norm(x): 0.1711, norm(y): 0.9854, norm:43.7122, tok/sec: 112807.42, flops:43.95, batch-reuse:1
@ 1105 train 7.8427 , allloss: 17.6279, dt: 1158.61ms, fracRes: 0.0269, norm(attn): 0.6445, norm(output): 0.1660, norm(x): 0.1728, norm(y): 0.9856, norm:95.4902, tok/sec: 113129.09, flops:44.08, batch-reuse:1
@ 1106 train 7.8202 , allloss: 19.7058, dt: 1160.65ms, fracRes: 0.0153, norm(attn): 0.6367, norm(output): 0.1758, norm(x): 0.1747, norm(y): 0.9857, norm:61.0393, tok/sec: 112929.92, flops:44.00, batch-reuse:1
@ 1107 train 8.0009 , allloss: 23.2273, dt: 1159.48ms, fracRes: 0.0132, norm(attn): 0.6250, norm(output): 0.1865, norm(x): 0.1793, norm(y): 0.9857, norm:75.6135, tok/sec: 113043.93, flops:44.04, batch-reuse:1
@ 1108 train 7.9663 , allloss: 26.5508, dt: 1134.17ms, fracRes: 0.0132, norm(attn): 0.6328, norm(output): 0.1895, norm(x): 0.1840, norm(y): 0.9858, norm:106.6994, tok/sec: 115565.98, flops:45.02, batch-reuse:1
@ 1109 train 8.0736 , allloss: 34.3665, dt: 1143.71ms, fracRes: 0.0117, norm(attn): 0.6523, norm(output): 0.1914, norm(x): 0.1839, norm(y): 0.9858, norm:102.8373, tok/sec: 114602.77, flops:44.65, batch-reuse:1
@ 1110 train 8.1621 , allloss: 41.0452, dt: 1169.41ms, fracRes: 0.0097, norm(attn): 0.6680, norm(output): 0.1826, norm(x): 0.1747, norm(y): 0.9857, norm:92.5742, tok/sec: 112083.83, flops:43.67, batch-reuse:1
@ 1111 train 8.2120 , allloss: 40.8156, dt: 1151.88ms, fracRes: 0.0086, norm(attn): 0.6953, norm(output): 0.1582, norm(x): 0.1531, norm(y): 0.9855, norm:106.1907, tok/sec: 113789.32, flops:44.33, batch-reuse:1
@ 1112 train 8.2978 , allloss: 30.3249, dt: 1164.71ms, fracRes: 0.0088, norm(attn): 0.7031, norm(output): 0.1328, norm(x): 0.1273, norm(y): 0.9850, norm:118.8354, tok/sec: 112535.79, flops:43.84, batch-reuse:1
@ 1113 train 7.9787 , allloss: 35.0422, dt: 1168.55ms, fracRes: 0.0098, norm(attn): 0.6797, norm(output): 0.1406, norm(x): 0.1351, norm(y): 0.9851, norm:78.7292, tok/sec: 112165.97, flops:43.70, batch-reuse:1
@ 1114 train 7.9128 , allloss: 27.6245, dt: 1164.42ms, fracRes: 0.0121, norm(attn): 0.6914, norm(output): 0.1260, norm(x): 0.1268, norm(y): 0.9851, norm:58.0915, tok/sec: 112563.98, flops:43.85, batch-reuse:1
@ 1115 train 7.9543 , allloss: 21.8354, dt: 1171.15ms, fracRes: 0.0190, norm(attn): 0.7070, norm(output): 0.1279, norm(x): 0.1325, norm(y): 0.9852, norm:66.6290, tok/sec: 111917.44, flops:43.60, batch-reuse:1
@ 1116 train 8.2993 , allloss: 20.6748, dt: 1167.87ms, fracRes: 0.0221, norm(attn): 0.7422, norm(output): 0.1211, norm(x): 0.1277, norm(y): 0.9849, norm:106.2151, tok/sec: 112232.05, flops:43.73, batch-reuse:1
@ 1117 train 8.7310 , allloss: 19.4640, dt: 1132.39ms, fracRes: 0.0189, norm(attn): 0.7930, norm(output): 0.1040, norm(x): 0.1113, norm(y): 0.9845, norm:165.6359, tok/sec: 115747.86, flops:45.10, batch-reuse:1
@ 1118 train 8.6915 , allloss: 19.1905, dt: 1164.56ms, fracRes: 0.0122, norm(attn): 0.7695, norm(output): 0.0938, norm(x): 0.0977, norm(y): 0.9839, norm:459.8018, tok/sec: 112551.05, flops:43.85, batch-reuse:1
@ 1119 train 13.8989 , allloss: 95.0537, dt: 1158.46ms, fracRes: 0.0106, norm(attn): 0.7617, norm(output): 0.3184, norm(x): 0.2720, norm(y): 0.9848, norm:580.4068, tok/sec: 113143.25, flops:44.08, batch-reuse:1
@ 1120 train 12.0798 , allloss: 97.1741, dt: 1135.85ms, fracRes: 0.0109, norm(attn): 0.8516, norm(output): 0.2520, norm(x): 0.2436, norm(y): 0.9849, norm:532.3957, tok/sec: 115395.35, flops:44.96, batch-reuse:1
@ 1121 train 10.0901 , allloss: 101.7995, dt: 1135.40ms, fracRes: 0.0158, norm(attn): 0.9766, norm(output): 0.3145, norm(x): 0.2969, norm(y): 0.9850, norm:337.0067, tok/sec: 115441.76, flops:44.98, batch-reuse:1
@ 1122 train 13.0069 , allloss: 73.9257, dt: 1160.15ms, fracRes: 0.0260, norm(attn): 1.1953, norm(output): 0.1982, norm(x): 0.1766, norm(y): 0.9842, norm:256.8765, tok/sec: 112978.95, flops:44.02, batch-reuse:1
@ 1123 train 9.1098 , allloss: 29.2630, dt: 1182.99ms, fracRes: 0.0489, norm(attn): 1.4531, norm(output): 0.1187, norm(x): 0.1404, norm(y): 0.9845, norm:210.6684, tok/sec: 110796.85, flops:43.17, batch-reuse:1
@ 1124 train 7.8791 , allloss: 12.7189, dt: 1169.27ms, fracRes: 0.0517, norm(attn): 1.5781, norm(output): 0.1104, norm(x): 0.1443, norm(y): 0.9847, norm:141.6284, tok/sec: 112097.04, flops:43.67, batch-reuse:1
@ 1125 train 7.8284 , allloss: 12.1459, dt: 1177.86ms, fracRes: 0.0428, norm(attn): 1.5547, norm(output): 0.1177, norm(x): 0.1429, norm(y): 0.9847, norm:85.7961, tok/sec: 111279.96, flops:43.35, batch-reuse:1
@ 1126 train 7.7242 , allloss: 12.0125, dt: 1172.07ms, fracRes: 0.0472, norm(attn): 1.5000, norm(output): 0.1167, norm(x): 0.1453, norm(y): 0.9847, norm:61.5743, tok/sec: 111829.68, flops:43.57, batch-reuse:1
@ 1127 train 7.7423 , allloss: 11.7384, dt: 1133.95ms, fracRes: 0.0385, norm(attn): 1.3828, norm(output): 0.1089, norm(x): 0.1314, norm(y): 0.9847, norm:62.5026, tok/sec: 115589.14, flops:45.03, batch-reuse:1
@ 1128 train 7.7762 , allloss: 11.4719, dt: 1145.86ms, fracRes: 0.0307, norm(attn): 1.2656, norm(output): 0.0962, norm(x): 0.1153, norm(y): 0.9845, norm:100.6582, tok/sec: 114387.93, flops:44.57, batch-reuse:1
@ 1129 train 7.7746 , allloss: 11.2263, dt: 1153.34ms, fracRes: 0.0225, norm(attn): 1.1250, norm(output): 0.0835, norm(x): 0.0963, norm(y): 0.9843, norm:114.9020, tok/sec: 113645.98, flops:44.28, batch-reuse:1
@ 1130 train 7.7441 , allloss: 11.4482, dt: 1168.10ms, fracRes: 0.0223, norm(attn): 0.9492, norm(output): 0.0684, norm(x): 0.0821, norm(y): 0.9840, norm:97.9133, tok/sec: 112209.51, flops:43.72, batch-reuse:1
@ 1131 train 7.7894 , allloss: 13.8080, dt: 1162.36ms, fracRes: 0.0373, norm(attn): 0.7891, norm(output): 0.0552, norm(x): 0.0816, norm(y): 0.9839, norm:93.4727, tok/sec: 112763.32, flops:43.93, batch-reuse:1
@ 1132 train 7.9034 , allloss: 19.2812, dt: 1175.81ms, fracRes: 0.0496, norm(attn): 0.6719, norm(output): 0.0640, norm(x): 0.0957, norm(y): 0.9831, norm:118.6871, tok/sec: 111474.14, flops:43.43, batch-reuse:1
@ 1133 train 7.9808 , allloss: 21.8888, dt: 1134.62ms, fracRes: 0.0372, norm(attn): 0.6328, norm(output): 0.0645, norm(x): 0.0873, norm(y): 0.9830, norm:130.9888, tok/sec: 115520.23, flops:45.01, batch-reuse:1
@ 1134 train 7.7877 , allloss: 17.5257, dt: 1162.43ms, fracRes: 0.0333, norm(attn): 0.6875, norm(output): 0.0474, norm(x): 0.0710, norm(y): 0.9831, norm:96.5053, tok/sec: 112756.92, flops:43.93, batch-reuse:1
@ 1135 train 7.9904 , allloss: 16.6042, dt: 1144.29ms, fracRes: 0.0126, norm(attn): 0.6836, norm(output): 0.0505, norm(x): 0.0585, norm(y): 0.9831, norm:100.0357, tok/sec: 114543.92, flops:44.63, batch-reuse:1
@ 1136 train 7.9578 , allloss: 17.9827, dt: 1157.31ms, fracRes: 0.0229, norm(attn): 0.6836, norm(output): 0.0476, norm(x): 0.0631, norm(y): 0.9833, norm:113.9366, tok/sec: 113256.23, flops:44.12, batch-reuse:1
@ 1137 train 7.7906 , allloss: 18.4100, dt: 1159.48ms, fracRes: 0.0158, norm(attn): 0.6836, norm(output): 0.0505, norm(x): 0.0605, norm(y): 0.9830, norm:68.3807, tok/sec: 113044.23, flops:44.04, batch-reuse:1
@ 1138 train 7.9016 , allloss: 18.1746, dt: 1155.33ms, fracRes: 0.0111, norm(attn): 0.6406, norm(output): 0.0535, norm(x): 0.0601, norm(y): 0.9833, norm:54.9956, tok/sec: 113450.17, flops:44.20, batch-reuse:1
@ 1139 train 7.9367 , allloss: 14.6082, dt: 1177.95ms, fracRes: 0.0056, norm(attn): 0.6211, norm(output): 0.0557, norm(x): 0.0585, norm(y): 0.9838, norm:89.8041, tok/sec: 111271.29, flops:43.35, batch-reuse:1
@ 1140 train 8.0083 , allloss: 15.4843, dt: 1135.23ms, fracRes: 0.0118, norm(attn): 0.6094, norm(output): 0.0503, norm(x): 0.0576, norm(y): 0.9836, norm:87.8520, tok/sec: 115458.20, flops:44.98, batch-reuse:1
@ 1141 train 8.5902 , allloss: 21.0292, dt: 1157.83ms, fracRes: 0.0042, norm(attn): 0.5625, norm(output): 0.0579, norm(x): 0.0598, norm(y): 0.9834, norm:416.8137, tok/sec: 113205.29, flops:44.10, batch-reuse:1
@ 1142 train 9.6378 , allloss: 13.9741, dt: 1146.61ms, fracRes: 0.0038, norm(attn): 0.6641, norm(output): 0.0630, norm(x): 0.0645, norm(y): 0.9843, norm:206.8131, tok/sec: 114312.34, flops:44.54, batch-reuse:1
@ 1143 train 9.4544 , allloss: 13.1741, dt: 1148.47ms, fracRes: 0.0029, norm(attn): 0.7578, norm(output): 0.0664, norm(x): 0.0658, norm(y): 0.9842, norm:246.2549, tok/sec: 114127.95, flops:44.46, batch-reuse:1
@ 1144 train 8.1649 , allloss: 14.3972, dt: 1161.84ms, fracRes: 0.0034, norm(attn): 0.6562, norm(output): 0.0659, norm(x): 0.0664, norm(y): 0.9845, norm:97.3072, tok/sec: 112813.95, flops:43.95, batch-reuse:1
@ 1145 train 9.2211 , allloss: 70.2775, dt: 1154.61ms, fracRes: 0.0040, norm(attn): 0.6367, norm(output): 0.1108, norm(x): 0.0681, norm(y): 0.9846, norm:595.2578, tok/sec: 113520.36, flops:44.23, batch-reuse:1
@ 1146 train 8.3964 , allloss: 55.6915, dt: 1144.45ms, fracRes: 0.0049, norm(attn): 0.6016, norm(output): 0.0962, norm(x): 0.0862, norm(y): 0.9845, norm:487.5813, tok/sec: 114528.60, flops:44.62, batch-reuse:1
@ 1147 train 10.2382 , allloss: 81.1735, dt: 1170.10ms, fracRes: 0.0057, norm(attn): 0.5508, norm(output): 0.1138, norm(x): 0.1029, norm(y): 0.9848, norm:309.6875, tok/sec: 112017.64, flops:43.64, batch-reuse:1
@ 1148 train 10.0645 , allloss: 84.4364, dt: 1180.33ms, fracRes: 0.0067, norm(attn): 0.5430, norm(output): 0.1094, norm(x): 0.1064, norm(y): 0.9849, norm:372.0663, tok/sec: 111046.57, flops:43.26, batch-reuse:1
@ 1149 train 9.4702 , allloss: 82.5054, dt: 1135.35ms, fracRes: 0.0072, norm(attn): 0.5312, norm(output): 0.1162, norm(x): 0.1107, norm(y): 0.9850, norm:351.2841, tok/sec: 115446.73, flops:44.98, batch-reuse:1
@ 1150 train 8.7385 , allloss: 68.4471, dt: 1144.87ms, fracRes: 0.0089, norm(attn): 0.5547, norm(output): 0.1035, norm(x): 0.1015, norm(y): 0.9856, norm:308.5989, tok/sec: 114486.86, flops:44.60, batch-reuse:1
@ 1151 train 8.5605 , allloss: 68.4359, dt: 1142.93ms, fracRes: 0.0101, norm(attn): 0.6289, norm(output): 0.1113, norm(x): 0.1116, norm(y): 0.9854, norm:376.2305, tok/sec: 114680.71, flops:44.68, batch-reuse:1
@ 1152 train 9.1025 , allloss: 49.5658, dt: 1136.99ms, fracRes: 0.0095, norm(attn): 0.7500, norm(output): 0.1060, norm(x): 0.1048, norm(y): 0.9857, norm:202.3239, tok/sec: 115280.08, flops:44.91, batch-reuse:1
@ 1153 train 8.3147 , allloss: 35.6963, dt: 1134.36ms, fracRes: 0.0110, norm(attn): 0.7578, norm(output): 0.1011, norm(x): 0.1025, norm(y): 0.9859, norm:115.5138, tok/sec: 115547.01, flops:45.02, batch-reuse:1
@ 1154 train 8.2615 , allloss: 44.5685, dt: 1148.33ms, fracRes: 0.0184, norm(attn): 0.6875, norm(output): 0.1309, norm(x): 0.1233, norm(y): 0.9859, norm:84.2306, tok/sec: 114141.12, flops:44.47, batch-reuse:1
@ 1155 train 8.3145 , allloss: 45.5744, dt: 1136.26ms, fracRes: 0.0234, norm(attn): 0.6484, norm(output): 0.1602, norm(x): 0.1459, norm(y): 0.9859, norm:117.6807, tok/sec: 115353.61, flops:44.94, batch-reuse:1
@ 1156 train 7.9509 , allloss: 18.1149, dt: 1159.68ms, fracRes: 0.0263, norm(attn): 0.6602, norm(output): 0.1030, norm(x): 0.1153, norm(y): 0.9859, norm:40.6156, tok/sec: 113024.46, flops:44.03, batch-reuse:1
@ 1157 train 7.8037 , allloss: 14.5214, dt: 1156.84ms, fracRes: 0.0258, norm(attn): 0.7305, norm(output): 0.0972, norm(x): 0.1111, norm(y): 0.9857, norm:45.8279, tok/sec: 113301.84, flops:44.14, batch-reuse:1
@ 1158 train 7.8376 , allloss: 13.7972, dt: 1153.82ms, fracRes: 0.0202, norm(attn): 0.8438, norm(output): 0.0913, norm(x): 0.1005, norm(y): 0.9851, norm:72.0439, tok/sec: 113598.35, flops:44.26, batch-reuse:1
@ 1159 train 8.2111 , allloss: 13.0625, dt: 1150.09ms, fracRes: 0.0068, norm(attn): 1.0781, norm(output): 0.0879, norm(x): 0.0882, norm(y): 0.9845, norm:81.1944, tok/sec: 113966.78, flops:44.40, batch-reuse:1
@ 1160 train 8.5291 , allloss: 12.8527, dt: 1175.82ms, fracRes: 0.0037, norm(attn): 1.2422, norm(output): 0.0913, norm(x): 0.0884, norm(y): 0.9842, norm:81.5527, tok/sec: 111473.20, flops:43.43, batch-reuse:1
@ 1161 train 8.0964 , allloss: 12.3177, dt: 1158.91ms, fracRes: 0.0039, norm(attn): 1.1328, norm(output): 0.0859, norm(x): 0.0831, norm(y): 0.9838, norm:84.7176, tok/sec: 113099.58, flops:44.06, batch-reuse:1
@ 1162 train 7.6869 , allloss: 12.2749, dt: 1135.97ms, fracRes: 0.0056, norm(attn): 0.8828, norm(output): 0.0830, norm(x): 0.0820, norm(y): 0.9836, norm:81.9157, tok/sec: 115383.66, flops:44.95, batch-reuse:1
@ 1163 train 7.7859 , allloss: 12.3154, dt: 1159.51ms, fracRes: 0.0043, norm(attn): 0.8164, norm(output): 0.0854, norm(x): 0.0830, norm(y): 0.9835, norm:62.2721, tok/sec: 113040.82, flops:44.04, batch-reuse:1
@ 1164 train 7.7299 , allloss: 12.1541, dt: 1162.72ms, fracRes: 0.0030, norm(attn): 0.8125, norm(output): 0.0874, norm(x): 0.0849, norm(y): 0.9836, norm:50.4995, tok/sec: 112729.10, flops:43.92, batch-reuse:1
@ 1165 train 7.8683 , allloss: 12.1917, dt: 1175.04ms, fracRes: 0.0022, norm(attn): 0.8438, norm(output): 0.0903, norm(x): 0.0853, norm(y): 0.9837, norm:42.1892, tok/sec: 111546.73, flops:43.46, batch-reuse:1
@ 1166 train 7.8388 , allloss: 12.1420, dt: 1183.39ms, fracRes: 0.0024, norm(attn): 0.8594, norm(output): 0.0874, norm(x): 0.0844, norm(y): 0.9840, norm:33.2711, tok/sec: 110759.75, flops:43.15, batch-reuse:1
@ 1167 train 7.7056 , allloss: 12.0029, dt: 1176.51ms, fracRes: 0.0026, norm(attn): 0.8398, norm(output): 0.0854, norm(x): 0.0815, norm(y): 0.9843, norm:20.5333, tok/sec: 111407.39, flops:43.40, batch-reuse:1
@ 1168 train 7.6615 , allloss: 12.0458, dt: 1182.30ms, fracRes: 0.0033, norm(attn): 0.7969, norm(output): 0.0796, norm(x): 0.0776, norm(y): 0.9847, norm:26.8805, tok/sec: 110861.76, flops:43.19, batch-reuse:1
@ 1169 train 7.7569 , allloss: 12.9023, dt: 1179.16ms, fracRes: 0.0048, norm(attn): 0.7383, norm(output): 0.0752, norm(x): 0.0752, norm(y): 0.9849, norm:35.9759, tok/sec: 111156.79, flops:43.31, batch-reuse:1
@ 1170 train 7.7367 , allloss: 14.1148, dt: 1178.15ms, fracRes: 0.0067, norm(attn): 0.6797, norm(output): 0.0737, norm(x): 0.0751, norm(y): 0.9850, norm:51.2365, tok/sec: 111252.03, flops:43.34, batch-reuse:1
@ 1171 train 7.5736 , allloss: 12.9511, dt: 1152.53ms, fracRes: 0.0069, norm(attn): 0.7070, norm(output): 0.0708, norm(x): 0.0730, norm(y): 0.9851, norm:26.1575, tok/sec: 113725.18, flops:44.31, batch-reuse:1
@ 1172 train 7.8201 , allloss: 12.9105, dt: 1152.14ms, fracRes: 0.0058, norm(attn): 0.7500, norm(output): 0.0684, norm(x): 0.0689, norm(y): 0.9849, norm:42.5203, tok/sec: 113763.47, flops:44.32, batch-reuse:1
@ 1173 train 7.7398 , allloss: 12.2513, dt: 1159.57ms, fracRes: 0.0065, norm(attn): 0.8125, norm(output): 0.0664, norm(x): 0.0674, norm(y): 0.9846, norm:34.0312, tok/sec: 113034.89, flops:44.04, batch-reuse:1
@ 1174 train 7.6673 , allloss: 12.2163, dt: 1176.54ms, fracRes: 0.0068, norm(attn): 0.8750, norm(output): 0.0625, norm(x): 0.0643, norm(y): 0.9847, norm:34.9557, tok/sec: 111404.73, flops:43.40, batch-reuse:1
@ 1175 train 7.8326 , allloss: 12.5296, dt: 1162.53ms, fracRes: 0.0059, norm(attn): 0.8828, norm(output): 0.0596, norm(x): 0.0609, norm(y): 0.9847, norm:74.9910, tok/sec: 112746.74, flops:43.93, batch-reuse:1
@ 1176 train 7.8594 , allloss: 12.0678, dt: 1163.12ms, fracRes: 0.0058, norm(attn): 0.9414, norm(output): 0.0593, norm(x): 0.0610, norm(y): 0.9847, norm:50.0842, tok/sec: 112689.77, flops:43.90, batch-reuse:1
@ 1177 train 8.1036 , allloss: 12.0272, dt: 1160.44ms, fracRes: 0.0060, norm(attn): 1.1016, norm(output): 0.0635, norm(x): 0.0653, norm(y): 0.9851, norm:78.3164, tok/sec: 112950.12, flops:44.01, batch-reuse:1
@ 1178 train 8.0125 , allloss: 11.9318, dt: 1158.71ms, fracRes: 0.0073, norm(attn): 1.1094, norm(output): 0.0713, norm(x): 0.0728, norm(y): 0.9855, norm:48.1086, tok/sec: 113118.95, flops:44.07, batch-reuse:1
@ 1179 train 7.8058 , allloss: 12.0628, dt: 1157.86ms, fracRes: 0.0099, norm(attn): 1.0781, norm(output): 0.0781, norm(x): 0.0811, norm(y): 0.9858, norm:39.5487, tok/sec: 113202.40, flops:44.10, batch-reuse:1
@ 1180 train 7.7720 , allloss: 12.0984, dt: 1197.29ms, fracRes: 0.0118, norm(attn): 1.1094, norm(output): 0.0864, norm(x): 0.0905, norm(y): 0.9862, norm:48.3774, tok/sec: 109474.21, flops:42.65, batch-reuse:1
@ 1181 train 7.7221 , allloss: 12.1792, dt: 1144.79ms, fracRes: 0.0104, norm(attn): 1.1719, norm(output): 0.0952, norm(x): 0.0979, norm(y): 0.9865, norm:64.4395, tok/sec: 114494.65, flops:44.61, batch-reuse:1
@ 1182 train 7.9192 , allloss: 12.2819, dt: 1149.22ms, fracRes: 0.0082, norm(attn): 1.4297, norm(output): 0.1113, norm(x): 0.1106, norm(y): 0.9865, norm:141.5140, tok/sec: 114052.56, flops:44.43, batch-reuse:1
@ 1183 train 8.0346 , allloss: 11.7440, dt: 1141.30ms, fracRes: 0.0043, norm(attn): 1.7812, norm(output): 0.1348, norm(x): 0.1285, norm(y): 0.9863, norm:158.8439, tok/sec: 114844.60, flops:44.74, batch-reuse:1
@ 1184 train 8.0748 , allloss: 11.5092, dt: 1130.73ms, fracRes: 0.0034, norm(attn): 2.0156, norm(output): 0.1562, norm(x): 0.1461, norm(y): 0.9861, norm:124.6253, tok/sec: 115917.70, flops:45.16, batch-reuse:1
@ 1185 train 8.0863 , allloss: 11.7350, dt: 1153.04ms, fracRes: 0.0036, norm(attn): 2.1562, norm(output): 0.1719, norm(x): 0.1613, norm(y): 0.9859, norm:87.7685, tok/sec: 113675.56, flops:44.29, batch-reuse:1
@ 1186 train 7.9419 , allloss: 11.8216, dt: 1163.20ms, fracRes: 0.0039, norm(attn): 2.2344, norm(output): 0.1787, norm(x): 0.1688, norm(y): 0.9857, norm:98.0145, tok/sec: 112682.61, flops:43.90, batch-reuse:1
@ 1187 train 7.8278 , allloss: 11.9550, dt: 1137.96ms, fracRes: 0.0035, norm(attn): 2.2344, norm(output): 0.1807, norm(x): 0.1680, norm(y): 0.9856, norm:94.1913, tok/sec: 115181.99, flops:44.87, batch-reuse:1
@ 1188 train 7.6468 , allloss: 11.6620, dt: 1161.48ms, fracRes: 0.0040, norm(attn): 2.2656, norm(output): 0.1729, norm(x): 0.1615, norm(y): 0.9856, norm:92.4548, tok/sec: 112848.67, flops:43.97, batch-reuse:1
@ 1189 train 7.7014 , allloss: 11.5601, dt: 1174.18ms, fracRes: 0.0044, norm(attn): 2.2344, norm(output): 0.1602, norm(x): 0.1508, norm(y): 0.9856, norm:89.9460, tok/sec: 111628.52, flops:43.49, batch-reuse:1
@ 1190 train 7.9177 , allloss: 11.6649, dt: 1189.21ms, fracRes: 0.0038, norm(attn): 2.1875, norm(output): 0.1445, norm(x): 0.1375, norm(y): 0.9856, norm:83.7669, tok/sec: 110217.38, flops:42.94, batch-reuse:1
@ 1191 train 7.8769 , allloss: 11.2042, dt: 1141.05ms, fracRes: 0.0026, norm(attn): 2.1250, norm(output): 0.1289, norm(x): 0.1208, norm(y): 0.9856, norm:75.0886, tok/sec: 114869.24, flops:44.75, batch-reuse:1
@ 1192 train 7.7302 , allloss: 10.5476, dt: 1138.09ms, fracRes: 0.0026, norm(attn): 2.1094, norm(output): 0.1118, norm(x): 0.1057, norm(y): 0.9856, norm:72.3340, tok/sec: 115168.26, flops:44.87, batch-reuse:1
@ 1193 train 7.7330 , allloss: 10.1336, dt: 1161.23ms, fracRes: 0.0026, norm(attn): 2.0312, norm(output): 0.0952, norm(x): 0.0906, norm(y): 0.9855, norm:65.0634, tok/sec: 112873.11, flops:43.98, batch-reuse:1
@ 1194 train 7.7734 , allloss: 10.0426, dt: 1161.26ms, fracRes: 0.0027, norm(attn): 1.8438, norm(output): 0.0786, norm(x): 0.0760, norm(y): 0.9854, norm:39.7881, tok/sec: 112870.40, flops:43.97, batch-reuse:1
@ 1195 train 7.7629 , allloss: 10.3275, dt: 1186.00ms, fracRes: 0.0048, norm(attn): 1.5547, norm(output): 0.0674, norm(x): 0.0671, norm(y): 0.9852, norm:55.7662, tok/sec: 110515.77, flops:43.06, batch-reuse:1
@ 1196 train 7.9094 , allloss: 11.0209, dt: 1179.78ms, fracRes: 0.0061, norm(attn): 1.4141, norm(output): 0.0591, norm(x): 0.0609, norm(y): 0.9852, norm:56.9450, tok/sec: 111098.70, flops:43.28, batch-reuse:1
@ 1197 train 7.7645 , allloss: 11.7257, dt: 1139.40ms, fracRes: 0.0050, norm(attn): 1.3828, norm(output): 0.0525, norm(x): 0.0540, norm(y): 0.9851, norm:26.1526, tok/sec: 115035.89, flops:44.82, batch-reuse:1
@ 1198 train 7.8230 , allloss: 12.7828, dt: 1179.06ms, fracRes: 0.0036, norm(attn): 1.3828, norm(output): 0.0464, norm(x): 0.0475, norm(y): 0.9847, norm:51.4404, tok/sec: 111166.88, flops:43.31, batch-reuse:1
@ 1199 train 7.8166 , allloss: 12.8479, dt: 1179.40ms, fracRes: 0.0030, norm(attn): 1.3438, norm(output): 0.0430, norm(x): 0.0437, norm(y): 0.9843, norm:49.5768, tok/sec: 111134.66, flops:43.30, batch-reuse:1
@ 1200 train 7.7897 , allloss: 12.6728, dt: 1180.67ms, fracRes: 0.0029, norm(attn): 1.2188, norm(output): 0.0437, norm(x): 0.0443, norm(y): 0.9843, norm:39.2484, tok/sec: 111015.06, flops:43.25, batch-reuse:1
@ 1201 train 7.7602 , allloss: 11.6843, dt: 1188.69ms, fracRes: 0.0030, norm(attn): 1.1328, norm(output): 0.0435, norm(x): 0.0444, norm(y): 0.9844, norm:28.5863, tok/sec: 110265.46, flops:42.96, batch-reuse:1
@ 1202 train 7.8100 , allloss: 11.0326, dt: 1155.87ms, fracRes: 0.0029, norm(attn): 1.0234, norm(output): 0.0430, norm(x): 0.0439, norm(y): 0.9845, norm:42.2289, tok/sec: 113396.72, flops:44.18, batch-reuse:1
@ 1203 train 7.8998 , allloss: 11.2060, dt: 1151.70ms, fracRes: 0.0028, norm(attn): 0.8984, norm(output): 0.0410, norm(x): 0.0420, norm(y): 0.9840, norm:46.0019, tok/sec: 113807.51, flops:44.34, batch-reuse:1
@ 1204 train 7.9939 , allloss: 30.8872, dt: 1143.52ms, fracRes: 0.0041, norm(attn): 0.5195, norm(output): 0.1030, norm(x): 0.0928, norm(y): 0.9836, norm:147.2003, tok/sec: 114621.60, flops:44.66, batch-reuse:1
@ 1205 train 9.3416 , allloss: 58.7683, dt: 1174.11ms, fracRes: 0.0035, norm(attn): 0.4648, norm(output): 0.1089, norm(x): 0.1035, norm(y): 0.9832, norm:395.7729, tok/sec: 111635.00, flops:43.49, batch-reuse:1
@ 1206 train 8.6336 , allloss: 67.0026, dt: 1186.68ms, fracRes: 0.0040, norm(attn): 0.4531, norm(output): 0.1250, norm(x): 0.1183, norm(y): 0.9834, norm:755.5970, tok/sec: 110452.60, flops:43.03, batch-reuse:1
@ 1207 train 8.0976 , allloss: 66.6538, dt: 1141.73ms, fracRes: 0.0060, norm(attn): 0.6328, norm(output): 0.1226, norm(x): 0.1180, norm(y): 0.9830, norm:261.6127, tok/sec: 114801.02, flops:44.73, batch-reuse:1
@ 1208 train 8.8672 , allloss: 14.8697, dt: 1151.86ms, fracRes: 0.0023, norm(attn): 0.9375, norm(output): 0.0339, norm(x): 0.0342, norm(y): 0.9809, norm:2450.6956, tok/sec: 113791.89, flops:44.33, batch-reuse:1
@ 1209 train 7.7150 , allloss: 10.3981, dt: 1184.63ms, fracRes: 0.0016, norm(attn): 1.2500, norm(output): 0.0295, norm(x): 0.0312, norm(y): 0.9804, norm:30.1452, tok/sec: 110644.06, flops:43.11, batch-reuse:1
@ 1210 train 7.7987 , allloss: 10.4833, dt: 1171.57ms, fracRes: 0.0014, norm(attn): 1.3203, norm(output): 0.0317, norm(x): 0.0327, norm(y): 0.9808, norm:46.7556, tok/sec: 111877.58, flops:43.59, batch-reuse:1
@ 1211 train 7.7796 , allloss: 10.3513, dt: 1149.71ms, fracRes: 0.0014, norm(attn): 1.3906, norm(output): 0.0327, norm(x): 0.0334, norm(y): 0.9811, norm:23.5493, tok/sec: 114004.79, flops:44.42, batch-reuse:1
@ 1212 train 7.8273 , allloss: 10.2121, dt: 1173.45ms, fracRes: 0.0013, norm(attn): 1.4922, norm(output): 0.0312, norm(x): 0.0322, norm(y): 0.9809, norm:37.4800, tok/sec: 111697.51, flops:43.52, batch-reuse:1
@ 1213 train 7.7587 , allloss: 10.0328, dt: 1172.34ms, fracRes: 0.0012, norm(attn): 1.5469, norm(output): 0.0306, norm(x): 0.0315, norm(y): 0.9802, norm:37.1873, tok/sec: 111803.27, flops:43.56, batch-reuse:1
@ 1214 train 7.7276 , allloss: 10.0162, dt: 1159.60ms, fracRes: 0.0014, norm(attn): 1.6484, norm(output): 0.0295, norm(x): 0.0304, norm(y): 0.9790, norm:15.7826, tok/sec: 113032.08, flops:44.04, batch-reuse:1
@ 1215 train 7.7895 , allloss: 9.9049, dt: 1157.56ms, fracRes: 0.0022, norm(attn): 1.7500, norm(output): 0.0275, norm(x): 0.0290, norm(y): 0.9773, norm:46.0716, tok/sec: 113230.94, flops:44.11, batch-reuse:1
@ 1216 train 7.7422 , allloss: 9.7260, dt: 1135.02ms, fracRes: 0.0028, norm(attn): 1.8828, norm(output): 0.0262, norm(x): 0.0281, norm(y): 0.9756, norm:34.6525, tok/sec: 115479.59, flops:44.99, batch-reuse:1
@ 1217 train 7.6928 , allloss: 9.7430, dt: 1151.36ms, fracRes: 0.0025, norm(attn): 1.9766, norm(output): 0.0214, norm(x): 0.0236, norm(y): 0.9725, norm:17.1499, tok/sec: 113840.57, flops:44.35, batch-reuse:1
@ 1218 train 8.0042 , allloss: 11.7474, dt: 1143.85ms, fracRes: 0.0034, norm(attn): 1.8125, norm(output): 0.0498, norm(x): 0.0477, norm(y): 0.9734, norm:480.3079, tok/sec: 114588.63, flops:44.64, batch-reuse:1
@ 1219 train 7.8182 , allloss: 10.1577, dt: 1135.66ms, fracRes: 0.0024, norm(attn): 1.7500, norm(output): 0.0214, norm(x): 0.0238, norm(y): 0.9742, norm:64.3620, tok/sec: 115414.40, flops:44.97, batch-reuse:1
@ 1220 train 7.6932 , allloss: 10.0680, dt: 1155.83ms, fracRes: 0.0025, norm(attn): 1.7422, norm(output): 0.0203, norm(x): 0.0230, norm(y): 0.9738, norm:17.4332, tok/sec: 113400.72, flops:44.18, batch-reuse:1
@ 1221 train 7.6611 , allloss: 10.0427, dt: 1149.97ms, fracRes: 0.0027, norm(attn): 1.7422, norm(output): 0.0200, norm(x): 0.0230, norm(y): 0.9745, norm:43.8667, tok/sec: 113978.24, flops:44.41, batch-reuse:1
@ 1222 train 7.8456 , allloss: 10.0206, dt: 1129.40ms, fracRes: 0.0034, norm(attn): 1.6250, norm(output): 0.0222, norm(x): 0.0256, norm(y): 0.9775, norm:58.9301, tok/sec: 116054.27, flops:45.21, batch-reuse:1
@ 1223 train 7.9555 , allloss: 10.2864, dt: 1138.73ms, fracRes: 0.0056, norm(attn): 1.4922, norm(output): 0.0249, norm(x): 0.0299, norm(y): 0.9804, norm:68.7394, tok/sec: 115103.83, flops:44.84, batch-reuse:1
@ 1224 train 7.7170 , allloss: 10.0889, dt: 1136.17ms, fracRes: 0.0063, norm(attn): 1.4297, norm(output): 0.0259, norm(x): 0.0316, norm(y): 0.9812, norm:53.6669, tok/sec: 115362.86, flops:44.95, batch-reuse:1
@ 1225 train 7.7576 , allloss: 9.8971, dt: 1128.49ms, fracRes: 0.0063, norm(attn): 1.3750, norm(output): 0.0272, norm(x): 0.0327, norm(y): 0.9818, norm:41.0611, tok/sec: 116148.55, flops:45.25, batch-reuse:1
@ 1226 train 7.7345 , allloss: 9.7523, dt: 1137.31ms, fracRes: 0.0060, norm(attn): 1.3750, norm(output): 0.0276, norm(x): 0.0326, norm(y): 0.9817, norm:31.8287, tok/sec: 115247.26, flops:44.90, batch-reuse:1
@ 1227 train 7.8111 , allloss: 9.6442, dt: 1149.08ms, fracRes: 0.0065, norm(attn): 1.4609, norm(output): 0.0255, norm(x): 0.0312, norm(y): 0.9808, norm:60.4055, tok/sec: 114067.16, flops:44.44, batch-reuse:1
@ 1228 train 7.7563 , allloss: 9.3972, dt: 1173.02ms, fracRes: 0.0048, norm(attn): 1.4922, norm(output): 0.0234, norm(x): 0.0281, norm(y): 0.9792, norm:48.2444, tok/sec: 111739.30, flops:43.53, batch-reuse:1
@ 1229 train 7.7214 , allloss: 9.3097, dt: 1168.09ms, fracRes: 0.0031, norm(attn): 1.4609, norm(output): 0.0225, norm(x): 0.0257, norm(y): 0.9776, norm:25.7579, tok/sec: 112210.91, flops:43.72, batch-reuse:1
@ 1230 train 7.6616 , allloss: 9.1801, dt: 1133.10ms, fracRes: 0.0027, norm(attn): 1.4922, norm(output): 0.0208, norm(x): 0.0238, norm(y): 0.9757, norm:13.1306, tok/sec: 115675.84, flops:45.07, batch-reuse:1
@ 1231 train 7.7527 , allloss: 9.3851, dt: 1147.72ms, fracRes: 0.0030, norm(attn): 1.5000, norm(output): 0.0183, norm(x): 0.0219, norm(y): 0.9725, norm:46.1916, tok/sec: 114202.35, flops:44.49, batch-reuse:1
@ 1232 train 7.6907 , allloss: 9.6424, dt: 1146.38ms, fracRes: 0.0026, norm(attn): 1.5312, norm(output): 0.0175, norm(x): 0.0205, norm(y): 0.9701, norm:36.9250, tok/sec: 114335.19, flops:44.54, batch-reuse:1
@ 1233 train 7.6653 , allloss: 9.2462, dt: 1159.84ms, fracRes: 0.0027, norm(attn): 1.5859, norm(output): 0.0168, norm(x): 0.0201, norm(y): 0.9692, norm:14.2206, tok/sec: 113008.49, flops:44.03, batch-reuse:1
@ 1234 train 7.7039 , allloss: 8.9708, dt: 1148.45ms, fracRes: 0.0031, norm(attn): 1.7188, norm(output): 0.0165, norm(x): 0.0203, norm(y): 0.9693, norm:22.3888, tok/sec: 114129.42, flops:44.46, batch-reuse:1
@ 1235 train 7.7162 , allloss: 8.9467, dt: 1174.22ms, fracRes: 0.0040, norm(attn): 1.8984, norm(output): 0.0166, norm(x): 0.0212, norm(y): 0.9709, norm:33.1539, tok/sec: 111624.34, flops:43.49, batch-reuse:1
@ 1236 train 7.8562 , allloss: 9.1323, dt: 1205.74ms, fracRes: 0.0056, norm(attn): 2.1562, norm(output): 0.0182, norm(x): 0.0240, norm(y): 0.9748, norm:70.9227, tok/sec: 108706.43, flops:42.35, batch-reuse:1
@ 1237 train 7.9557 , allloss: 9.2652, dt: 1196.15ms, fracRes: 0.0077, norm(attn): 2.1875, norm(output): 0.0222, norm(x): 0.0295, norm(y): 0.9802, norm:83.6074, tok/sec: 109578.38, flops:42.69, batch-reuse:1
@ 1238 train 7.6929 , allloss: 9.1492, dt: 1192.63ms, fracRes: 0.0108, norm(attn): 2.1094, norm(output): 0.0245, norm(x): 0.0340, norm(y): 0.9816, norm:32.9397, tok/sec: 109901.49, flops:42.82, batch-reuse:1
@ 1239 train 7.7338 , allloss: 9.3535, dt: 1146.36ms, fracRes: 0.0137, norm(attn): 1.9922, norm(output): 0.0258, norm(x): 0.0379, norm(y): 0.9827, norm:53.1704, tok/sec: 114337.78, flops:44.55, batch-reuse:1
@ 1240 train 7.6955 , allloss: 9.7035, dt: 1159.51ms, fracRes: 0.0232, norm(attn): 1.9844, norm(output): 0.0266, norm(x): 0.0464, norm(y): 0.9839, norm:58.1084, tok/sec: 113041.12, flops:44.04, batch-reuse:1
@ 1241 train 7.6858 , allloss: 10.0027, dt: 1179.82ms, fracRes: 0.0329, norm(attn): 1.9688, norm(output): 0.0259, norm(x): 0.0537, norm(y): 0.9848, norm:80.9397, tok/sec: 111095.33, flops:43.28, batch-reuse:1
@ 1242 train 7.7114 , allloss: 9.7931, dt: 1173.58ms, fracRes: 0.0250, norm(attn): 1.8828, norm(output): 0.0248, norm(x): 0.0456, norm(y): 0.9837, norm:77.2544, tok/sec: 111685.57, flops:43.51, batch-reuse:1
@ 1243 train 7.7375 , allloss: 9.7577, dt: 1135.77ms, fracRes: 0.0249, norm(attn): 1.7891, norm(output): 0.0217, norm(x): 0.0432, norm(y): 0.9829, norm:69.3815, tok/sec: 115403.32, flops:44.96, batch-reuse:1
@ 1244 train 7.8027 , allloss: 9.5292, dt: 1154.66ms, fracRes: 0.0150, norm(attn): 1.6484, norm(output): 0.0190, norm(x): 0.0325, norm(y): 0.9805, norm:86.7813, tok/sec: 113516.11, flops:44.23, batch-reuse:1
@ 1245 train 7.6930 , allloss: 9.4233, dt: 1157.96ms, fracRes: 0.0065, norm(attn): 1.6875, norm(output): 0.0172, norm(x): 0.0238, norm(y): 0.9757, norm:62.2580, tok/sec: 113192.61, flops:44.10, batch-reuse:1
@ 1246 train 7.7222 , allloss: 10.4494, dt: 1155.88ms, fracRes: 0.0043, norm(attn): 1.5000, norm(output): 0.0179, norm(x): 0.0225, norm(y): 0.9749, norm:48.5749, tok/sec: 113396.28, flops:44.18, batch-reuse:1
@ 1247 train 7.6417 , allloss: 9.4635, dt: 1145.01ms, fracRes: 0.0068, norm(attn): 1.5938, norm(output): 0.0162, norm(x): 0.0230, norm(y): 0.9743, norm:46.1870, tok/sec: 114472.63, flops:44.60, batch-reuse:1
@ 1248 train 7.7430 , allloss: 9.3844, dt: 1134.29ms, fracRes: 0.0048, norm(attn): 1.5781, norm(output): 0.0170, norm(x): 0.0220, norm(y): 0.9735, norm:82.5370, tok/sec: 115553.96, flops:45.02, batch-reuse:1
@ 1249 train 7.6133 , allloss: 9.0320, dt: 1137.69ms, fracRes: 0.0030, norm(attn): 1.5625, norm(output): 0.0195, norm(x): 0.0230, norm(y): 0.9755, norm:19.2007, tok/sec: 115209.24, flops:44.89, batch-reuse:1
@ 1250 train 7.7352 , allloss: 9.0947, dt: 1149.92ms, fracRes: 0.0027, norm(attn): 1.4688, norm(output): 0.0217, norm(x): 0.0248, norm(y): 0.9775, norm:20.1049, tok/sec: 113983.96, flops:44.41, batch-reuse:1
@ 1251 train 7.6571 , allloss: 9.0119, dt: 1152.82ms, fracRes: 0.0032, norm(attn): 1.3828, norm(output): 0.0236, norm(x): 0.0267, norm(y): 0.9788, norm:19.6725, tok/sec: 113696.93, flops:44.30, batch-reuse:1
@ 1252 train 7.8470 , allloss: 9.3194, dt: 1177.27ms, fracRes: 0.0038, norm(attn): 1.3359, norm(output): 0.0240, norm(x): 0.0279, norm(y): 0.9794, norm:21.5129, tok/sec: 111335.94, flops:43.38, batch-reuse:1
@ 1253 train 7.7378 , allloss: 9.2530, dt: 1157.59ms, fracRes: 0.0045, norm(attn): 1.2891, norm(output): 0.0234, norm(x): 0.0276, norm(y): 0.9792, norm:22.6952, tok/sec: 113228.42, flops:44.11, batch-reuse:1
@ 1254 train 7.6926 , allloss: 9.2637, dt: 1161.61ms, fracRes: 0.0048, norm(attn): 1.2500, norm(output): 0.0222, norm(x): 0.0269, norm(y): 0.9788, norm:13.0911, tok/sec: 112836.11, flops:43.96, batch-reuse:1
@ 1255 train 7.7412 , allloss: 9.3573, dt: 1156.26ms, fracRes: 0.0049, norm(attn): 1.2422, norm(output): 0.0205, norm(x): 0.0254, norm(y): 0.9777, norm:26.4952, tok/sec: 113358.26, flops:44.16, batch-reuse:1
@ 1256 train 7.6773 , allloss: 9.1309, dt: 1183.89ms, fracRes: 0.0064, norm(attn): 1.3672, norm(output): 0.0179, norm(x): 0.0245, norm(y): 0.9760, norm:21.2967, tok/sec: 110713.27, flops:43.13, batch-reuse:1
@ 1257 train 7.6980 , allloss: 9.5773, dt: 1176.84ms, fracRes: 0.0084, norm(attn): 1.4688, norm(output): 0.0166, norm(x): 0.0249, norm(y): 0.9753, norm:17.3138, tok/sec: 111376.45, flops:43.39, batch-reuse:1
@ 1258 train 7.7004 , allloss: 9.5251, dt: 1186.70ms, fracRes: 0.0085, norm(attn): 1.5469, norm(output): 0.0160, norm(x): 0.0245, norm(y): 0.9741, norm:39.2029, tok/sec: 110450.71, flops:43.03, batch-reuse:1
@ 1259 train 7.6676 , allloss: 9.6514, dt: 1153.13ms, fracRes: 0.0075, norm(attn): 1.6016, norm(output): 0.0161, norm(x): 0.0238, norm(y): 0.9723, norm:16.4413, tok/sec: 113666.51, flops:44.28, batch-reuse:1
@ 1260 train 7.6402 , allloss: 9.9370, dt: 1154.37ms, fracRes: 0.0092, norm(attn): 1.6172, norm(output): 0.0166, norm(x): 0.0257, norm(y): 0.9719, norm:23.6152, tok/sec: 113544.06, flops:44.24, batch-reuse:1
@ 1261 train 7.6918 , allloss: 10.2931, dt: 1162.20ms, fracRes: 0.0113, norm(attn): 1.5312, norm(output): 0.0179, norm(x): 0.0289, norm(y): 0.9739, norm:32.4805, tok/sec: 112779.61, flops:43.94, batch-reuse:1
@ 1262 train 7.7689 , allloss: 12.4822, dt: 1147.10ms, fracRes: 0.0096, norm(attn): 1.2969, norm(output): 0.0249, norm(x): 0.0339, norm(y): 0.9761, norm:1406.0695, tok/sec: 114263.39, flops:44.52, batch-reuse:1
@ 1263 train 7.6336 , allloss: 9.2869, dt: 1161.75ms, fracRes: 0.0064, norm(attn): 1.7188, norm(output): 0.0176, norm(x): 0.0242, norm(y): 0.9738, norm:23.8270, tok/sec: 112823.14, flops:43.96, batch-reuse:1
@ 1264 train 7.8069 , allloss: 9.4611, dt: 1137.34ms, fracRes: 0.0071, norm(attn): 1.7422, norm(output): 0.0194, norm(x): 0.0262, norm(y): 0.9760, norm:21.1666, tok/sec: 115244.12, flops:44.90, batch-reuse:1
@ 1265 train 7.6360 , allloss: 9.2611, dt: 1133.93ms, fracRes: 0.0082, norm(attn): 1.7500, norm(output): 0.0214, norm(x): 0.0288, norm(y): 0.9782, norm:31.7484, tok/sec: 115591.03, flops:45.03, batch-reuse:1
@ 1266 train 7.6741 , allloss: 9.4578, dt: 1146.51ms, fracRes: 0.0090, norm(attn): 1.7500, norm(output): 0.0229, norm(x): 0.0310, norm(y): 0.9794, norm:54.6350, tok/sec: 114322.92, flops:44.54, batch-reuse:1
@ 1267 train 7.6871 , allloss: 9.4851, dt: 1156.11ms, fracRes: 0.0060, norm(attn): 1.6406, norm(output): 0.0237, norm(x): 0.0292, norm(y): 0.9791, norm:55.4634, tok/sec: 113373.52, flops:44.17, batch-reuse:1
@ 1268 train 7.7665 , allloss: 9.8006, dt: 1162.08ms, fracRes: 0.0042, norm(attn): 1.3984, norm(output): 0.0231, norm(x): 0.0271, norm(y): 0.9775, norm:39.0014, tok/sec: 112791.20, flops:43.94, batch-reuse:1
@ 1269 train 7.7281 , allloss: 10.3585, dt: 1157.57ms, fracRes: 0.0035, norm(attn): 1.3828, norm(output): 0.0221, norm(x): 0.0258, norm(y): 0.9766, norm:27.0832, tok/sec: 113230.69, flops:44.11, batch-reuse:1
@ 1270 train 7.7354 , allloss: 10.0336, dt: 1154.21ms, fracRes: 0.0031, norm(attn): 1.5156, norm(output): 0.0233, norm(x): 0.0264, norm(y): 0.9775, norm:38.6716, tok/sec: 113560.29, flops:44.24, batch-reuse:1
@ 1271 train 7.6559 , allloss: 9.6691, dt: 1175.61ms, fracRes: 0.0035, norm(attn): 1.5703, norm(output): 0.0237, norm(x): 0.0274, norm(y): 0.9784, norm:28.9935, tok/sec: 111492.68, flops:43.44, batch-reuse:1
@ 1272 train 7.7535 , allloss: 9.6268, dt: 1177.93ms, fracRes: 0.0043, norm(attn): 1.6172, norm(output): 0.0234, norm(x): 0.0277, norm(y): 0.9789, norm:52.2936, tok/sec: 111273.33, flops:43.35, batch-reuse:1
@ 1273 train 7.7516 , allloss: 9.4883, dt: 1128.15ms, fracRes: 0.0033, norm(attn): 1.6484, norm(output): 0.0251, norm(x): 0.0282, norm(y): 0.9791, norm:34.7984, tok/sec: 116182.67, flops:45.26, batch-reuse:1
@ 1274 train 7.7557 , allloss: 9.4283, dt: 1130.01ms, fracRes: 0.0026, norm(attn): 1.7188, norm(output): 0.0294, norm(x): 0.0315, norm(y): 0.9805, norm:20.1251, tok/sec: 115991.86, flops:45.19, batch-reuse:1
@ 1275 train 7.7767 , allloss: 9.5323, dt: 1143.62ms, fracRes: 0.0028, norm(attn): 1.7344, norm(output): 0.0342, norm(x): 0.0363, norm(y): 0.9819, norm:22.4162, tok/sec: 114611.52, flops:44.65, batch-reuse:1
@ 1276 train 7.6466 , allloss: 9.3774, dt: 1141.49ms, fracRes: 0.0034, norm(attn): 1.7500, norm(output): 0.0391, norm(x): 0.0407, norm(y): 0.9830, norm:28.1588, tok/sec: 114825.70, flops:44.74, batch-reuse:1
@ 1277 train 7.6341 , allloss: 9.3085, dt: 1139.56ms, fracRes: 0.0041, norm(attn): 1.7812, norm(output): 0.0427, norm(x): 0.0449, norm(y): 0.9840, norm:32.0199, tok/sec: 115019.88, flops:44.81, batch-reuse:1
@ 1278 train 7.6809 , allloss: 9.4185, dt: 1160.90ms, fracRes: 0.0062, norm(attn): 1.8281, norm(output): 0.0449, norm(x): 0.0490, norm(y): 0.9847, norm:45.7603, tok/sec: 112905.38, flops:43.99, batch-reuse:1
@ 1279 train 7.7920 , allloss: 9.9054, dt: 1150.05ms, fracRes: 0.0126, norm(attn): 1.7812, norm(output): 0.0452, norm(x): 0.0543, norm(y): 0.9853, norm:86.8051, tok/sec: 113971.11, flops:44.40, batch-reuse:1
@ 1280 train 7.6624 , allloss: 10.2140, dt: 1151.35ms, fracRes: 0.0221, norm(attn): 1.7500, norm(output): 0.0430, norm(x): 0.0594, norm(y): 0.9856, norm:113.7236, tok/sec: 113841.54, flops:44.35, batch-reuse:1
@ 1281 train 7.6570 , allloss: 10.2896, dt: 1131.51ms, fracRes: 0.0228, norm(attn): 1.6953, norm(output): 0.0386, norm(x): 0.0560, norm(y): 0.9854, norm:93.4025, tok/sec: 115838.08, flops:45.13, batch-reuse:1
@ 1282 train 7.6557 , allloss: 10.2021, dt: 1123.71ms, fracRes: 0.0181, norm(attn): 1.6641, norm(output): 0.0337, norm(x): 0.0477, norm(y): 0.9846, norm:83.7994, tok/sec: 116642.30, flops:45.44, batch-reuse:1
@ 1283 train 7.7059 , allloss: 9.9965, dt: 1171.08ms, fracRes: 0.0133, norm(attn): 1.6328, norm(output): 0.0286, norm(x): 0.0395, norm(y): 0.9834, norm:69.6424, tok/sec: 111924.07, flops:43.61, batch-reuse:1
@ 1284 train 7.7435 , allloss: 10.2098, dt: 1175.52ms, fracRes: 0.0122, norm(attn): 1.5859, norm(output): 0.0239, norm(x): 0.0345, norm(y): 0.9815, norm:101.2300, tok/sec: 111500.87, flops:43.44, batch-reuse:1
@ 1285 train 7.7757 , allloss: 10.0583, dt: 1178.81ms, fracRes: 0.0052, norm(attn): 1.5938, norm(output): 0.0250, norm(x): 0.0298, norm(y): 0.9809, norm:91.6833, tok/sec: 111189.88, flops:43.32, batch-reuse:1
@ 1286 train 7.7715 , allloss: 9.9749, dt: 1187.21ms, fracRes: 0.0048, norm(attn): 1.5000, norm(output): 0.0261, norm(x): 0.0305, norm(y): 0.9803, norm:19.1303, tok/sec: 110403.40, flops:43.01, batch-reuse:1
@ 1287 train 7.7076 , allloss: 9.8229, dt: 1135.12ms, fracRes: 0.0045, norm(attn): 1.4219, norm(output): 0.0264, norm(x): 0.0307, norm(y): 0.9800, norm:28.6596, tok/sec: 115469.37, flops:44.99, batch-reuse:1
@ 1288 train 7.7458 , allloss: 9.8317, dt: 1135.24ms, fracRes: 0.0044, norm(attn): 1.3828, norm(output): 0.0281, norm(x): 0.0320, norm(y): 0.9804, norm:18.3950, tok/sec: 115457.32, flops:44.98, batch-reuse:1
@ 1289 train 7.6418 , allloss: 9.6000, dt: 1157.16ms, fracRes: 0.0040, norm(attn): 1.3359, norm(output): 0.0299, norm(x): 0.0334, norm(y): 0.9811, norm:17.7483, tok/sec: 113270.84, flops:44.13, batch-reuse:1
@ 1290 train 7.6104 , allloss: 9.5679, dt: 1134.36ms, fracRes: 0.0034, norm(attn): 1.3359, norm(output): 0.0302, norm(x): 0.0330, norm(y): 0.9810, norm:17.6278, tok/sec: 115547.45, flops:45.02, batch-reuse:1
@ 1291 train 7.6557 , allloss: 9.6491, dt: 1145.61ms, fracRes: 0.0026, norm(attn): 1.3828, norm(output): 0.0302, norm(x): 0.0322, norm(y): 0.9807, norm:19.2673, tok/sec: 114412.45, flops:44.58, batch-reuse:1
@ 1292 train 7.7041 , allloss: 9.8159, dt: 1139.22ms, fracRes: 0.0021, norm(attn): 1.4453, norm(output): 0.0297, norm(x): 0.0315, norm(y): 0.9801, norm:21.3191, tok/sec: 115054.16, flops:44.83, batch-reuse:1
@ 1293 train 7.6535 , allloss: 9.4712, dt: 1135.92ms, fracRes: 0.0016, norm(attn): 1.6250, norm(output): 0.0317, norm(x): 0.0328, norm(y): 0.9806, norm:22.1209, tok/sec: 115388.86, flops:44.96, batch-reuse:1
@ 1294 train 7.5892 , allloss: 9.1715, dt: 1140.70ms, fracRes: 0.0014, norm(attn): 1.7031, norm(output): 0.0352, norm(x): 0.0359, norm(y): 0.9817, norm:24.5888, tok/sec: 114904.75, flops:44.77, batch-reuse:1
@ 1295 train 7.7035 , allloss: 9.2502, dt: 1158.93ms, fracRes: 0.0013, norm(attn): 1.6797, norm(output): 0.0425, norm(x): 0.0419, norm(y): 0.9827, norm:24.1907, tok/sec: 113097.30, flops:44.06, batch-reuse:1
@ 1296 train 7.6795 , allloss: 9.3017, dt: 1154.75ms, fracRes: 0.0013, norm(attn): 1.6562, norm(output): 0.0498, norm(x): 0.0489, norm(y): 0.9833, norm:24.8123, tok/sec: 113506.50, flops:44.22, batch-reuse:1
@ 1297 train 7.6854 , allloss: 9.2688, dt: 1167.37ms, fracRes: 0.0013, norm(attn): 1.6875, norm(output): 0.0571, norm(x): 0.0558, norm(y): 0.9837, norm:24.5459, tok/sec: 112279.62, flops:43.74, batch-reuse:1
@ 1298 train 7.7952 , allloss: 9.5389, dt: 1149.99ms, fracRes: 0.0014, norm(attn): 1.7500, norm(output): 0.0640, norm(x): 0.0624, norm(y): 0.9840, norm:21.8940, tok/sec: 113976.90, flops:44.41, batch-reuse:1
@ 1299 train 7.7841 , allloss: 9.5994, dt: 1183.48ms, fracRes: 0.0016, norm(attn): 1.8438, norm(output): 0.0703, norm(x): 0.0676, norm(y): 0.9841, norm:21.1996, tok/sec: 110751.41, flops:43.15, batch-reuse:1
@ 1300 train 7.7326 , allloss: 9.5760, dt: 1192.74ms, fracRes: 0.0016, norm(attn): 1.8906, norm(output): 0.0723, norm(x): 0.0701, norm(y): 0.9843, norm:18.3779, tok/sec: 109891.12, flops:42.81, batch-reuse:1
@ 1301 train 7.7450 , allloss: 9.6772, dt: 1187.13ms, fracRes: 0.0016, norm(attn): 1.9922, norm(output): 0.0723, norm(x): 0.0703, norm(y): 0.9845, norm:19.8056, tok/sec: 110410.80, flops:43.02, batch-reuse:1
@ 1302 train 7.7556 , allloss: 9.6839, dt: 1183.58ms, fracRes: 0.0019, norm(attn): 2.0156, norm(output): 0.0703, norm(x): 0.0674, norm(y): 0.9846, norm:16.2077, tok/sec: 110742.02, flops:43.15, batch-reuse:1
@ 1303 train 7.8196 , allloss: 9.9503, dt: 1160.34ms, fracRes: 0.0024, norm(attn): 2.0000, norm(output): 0.0649, norm(x): 0.0632, norm(y): 0.9845, norm:16.9443, tok/sec: 112960.13, flops:44.01, batch-reuse:1
@ 1304 train 7.7576 , allloss: 9.8186, dt: 1161.90ms, fracRes: 0.0027, norm(attn): 1.9766, norm(output): 0.0566, norm(x): 0.0563, norm(y): 0.9842, norm:24.5442, tok/sec: 112807.93, flops:43.95, batch-reuse:1
@ 1305 train 7.7709 , allloss: 9.8909, dt: 1152.95ms, fracRes: 0.0027, norm(attn): 1.8828, norm(output): 0.0518, norm(x): 0.0525, norm(y): 0.9838, norm:29.9610, tok/sec: 113683.88, flops:44.29, batch-reuse:1
@ 1306 train 7.7746 , allloss: 9.9155, dt: 1173.18ms, fracRes: 0.0029, norm(attn): 1.8672, norm(output): 0.0515, norm(x): 0.0525, norm(y): 0.9836, norm:19.5870, tok/sec: 111724.11, flops:43.53, batch-reuse:1
@ 1307 train 7.7490 , allloss: 9.8308, dt: 1151.75ms, fracRes: 0.0033, norm(attn): 1.7734, norm(output): 0.0513, norm(x): 0.0527, norm(y): 0.9833, norm:18.0132, tok/sec: 113802.16, flops:44.34, batch-reuse:1
@ 1308 train 7.7511 , allloss: 9.8916, dt: 1141.94ms, fracRes: 0.0041, norm(attn): 1.6328, norm(output): 0.0508, norm(x): 0.0521, norm(y): 0.9829, norm:26.9862, tok/sec: 114779.86, flops:44.72, batch-reuse:1
@ 1309 train 7.7396 , allloss: 9.8379, dt: 1151.43ms, fracRes: 0.0044, norm(attn): 1.5391, norm(output): 0.0471, norm(x): 0.0496, norm(y): 0.9825, norm:30.7120, tok/sec: 113834.51, flops:44.35, batch-reuse:1
@ 1310 train 7.7284 , allloss: 9.9166, dt: 1168.61ms, fracRes: 0.0053, norm(attn): 1.4297, norm(output): 0.0430, norm(x): 0.0467, norm(y): 0.9822, norm:22.7136, tok/sec: 112160.98, flops:43.70, batch-reuse:1
@ 1311 train 7.8714 , allloss: 10.2736, dt: 1148.43ms, fracRes: 0.0093, norm(attn): 1.2656, norm(output): 0.0388, norm(x): 0.0463, norm(y): 0.9821, norm:38.3360, tok/sec: 114131.38, flops:44.47, batch-reuse:1
@ 1312 train 7.8009 , allloss: 10.5111, dt: 1163.15ms, fracRes: 0.0132, norm(attn): 1.1328, norm(output): 0.0386, norm(x): 0.0487, norm(y): 0.9821, norm:48.5461, tok/sec: 112687.02, flops:43.90, batch-reuse:1
@ 1313 train 8.0410 , allloss: 12.0564, dt: 1184.33ms, fracRes: 0.0302, norm(attn): 1.1016, norm(output): 0.0408, norm(x): 0.0641, norm(y): 0.9832, norm:167.9231, tok/sec: 110672.30, flops:43.12, batch-reuse:1
@ 1314 train 7.8675 , allloss: 12.1753, dt: 1172.28ms, fracRes: 0.0196, norm(attn): 1.0625, norm(output): 0.0410, norm(x): 0.0558, norm(y): 0.9827, norm:127.4442, tok/sec: 111809.34, flops:43.56, batch-reuse:1
@ 1315 train 7.9089 , allloss: 12.9778, dt: 1153.57ms, fracRes: 0.0074, norm(attn): 1.0703, norm(output): 0.0405, norm(x): 0.0456, norm(y): 0.9817, norm:83.5266, tok/sec: 113622.70, flops:44.27, batch-reuse:1
@ 1316 train 7.7920 , allloss: 12.1331, dt: 1178.51ms, fracRes: 0.0058, norm(attn): 1.1094, norm(output): 0.0403, norm(x): 0.0443, norm(y): 0.9817, norm:39.3539, tok/sec: 111218.81, flops:43.33, batch-reuse:1
@ 1317 train 7.9741 , allloss: 11.6766, dt: 1179.07ms, fracRes: 0.0044, norm(attn): 1.1172, norm(output): 0.0400, norm(x): 0.0431, norm(y): 0.9817, norm:62.5128, tok/sec: 111165.58, flops:43.31, batch-reuse:1
@ 1318 train 7.7129 , allloss: 10.1492, dt: 1171.25ms, fracRes: 0.0036, norm(attn): 1.2109, norm(output): 0.0398, norm(x): 0.0424, norm(y): 0.9818, norm:34.2220, tok/sec: 111907.85, flops:43.60, batch-reuse:1
@ 1319 train 7.7880 , allloss: 9.7327, dt: 1160.55ms, fracRes: 0.0039, norm(attn): 1.3828, norm(output): 0.0427, norm(x): 0.0445, norm(y): 0.9821, norm:20.2050, tok/sec: 112939.33, flops:44.00, batch-reuse:1
@ 1320 train 7.7649 , allloss: 9.4091, dt: 1186.75ms, fracRes: 0.0047, norm(attn): 1.6094, norm(output): 0.0454, norm(x): 0.0479, norm(y): 0.9826, norm:23.6139, tok/sec: 110445.83, flops:43.03, batch-reuse:1
@ 1321 train 7.7611 , allloss: 9.4474, dt: 1159.22ms, fracRes: 0.0070, norm(attn): 1.7500, norm(output): 0.0471, norm(x): 0.0519, norm(y): 0.9830, norm:22.4410, tok/sec: 113068.74, flops:44.05, batch-reuse:1
@ 1322 train 7.7292 , allloss: 9.6148, dt: 1159.94ms, fracRes: 0.0115, norm(attn): 1.8672, norm(output): 0.0498, norm(x): 0.0572, norm(y): 0.9833, norm:24.9702, tok/sec: 112998.90, flops:44.02, batch-reuse:1
@ 1323 train 7.7843 , allloss: 9.9820, dt: 1162.74ms, fracRes: 0.0165, norm(attn): 1.9062, norm(output): 0.0508, norm(x): 0.0629, norm(y): 0.9836, norm:31.7822, tok/sec: 112727.02, flops:43.92, batch-reuse:1
@ 1324 train 7.7998 , allloss: 10.5241, dt: 1156.96ms, fracRes: 0.0312, norm(attn): 1.9922, norm(output): 0.0535, norm(x): 0.0770, norm(y): 0.9842, norm:68.7855, tok/sec: 113290.00, flops:44.14, batch-reuse:1
@ 1325 train 7.7054 , allloss: 10.8045, dt: 1180.41ms, fracRes: 0.0509, norm(attn): 2.0156, norm(output): 0.0549, norm(x): 0.0947, norm(y): 0.9846, norm:86.2635, tok/sec: 111039.84, flops:43.26, batch-reuse:1
@ 1326 train 7.6344 , allloss: 10.9221, dt: 1170.26ms, fracRes: 0.0576, norm(attn): 2.0938, norm(output): 0.0552, norm(x): 0.1008, norm(y): 0.9848, norm:107.5200, tok/sec: 112002.33, flops:43.64, batch-reuse:1
@ 1327 train 7.7704 , allloss: 11.1568, dt: 1151.98ms, fracRes: 0.0570, norm(attn): 2.0781, norm(output): 0.0549, norm(x): 0.0992, norm(y): 0.9848, norm:107.6676, tok/sec: 113779.76, flops:44.33, batch-reuse:1
@ 1328 train 7.7180 , allloss: 10.9462, dt: 1165.62ms, fracRes: 0.0556, norm(attn): 2.0312, norm(output): 0.0513, norm(x): 0.0950, norm(y): 0.9847, norm:98.0580, tok/sec: 112448.05, flops:43.81, batch-reuse:1
@ 1329 train 7.6985 , allloss: 10.8957, dt: 1178.01ms, fracRes: 0.0525, norm(attn): 2.0000, norm(output): 0.0464, norm(x): 0.0874, norm(y): 0.9846, norm:107.0322, tok/sec: 111265.88, flops:43.35, batch-reuse:1
@ 1330 train 7.7853 , allloss: 11.0928, dt: 1172.50ms, fracRes: 0.0509, norm(attn): 1.9219, norm(output): 0.0391, norm(x): 0.0796, norm(y): 0.9843, norm:99.6250, tok/sec: 111788.16, flops:43.55, batch-reuse:1
@ 1331 train 7.7685 , allloss: 10.9942, dt: 1140.30ms, fracRes: 0.0445, norm(attn): 1.8516, norm(output): 0.0303, norm(x): 0.0669, norm(y): 0.9837, norm:98.0143, tok/sec: 114944.73, flops:44.78, batch-reuse:1
@ 1332 train 7.7555 , allloss: 10.7743, dt: 1154.74ms, fracRes: 0.0247, norm(attn): 1.6562, norm(output): 0.0234, norm(x): 0.0436, norm(y): 0.9812, norm:123.0850, tok/sec: 113507.58, flops:44.22, batch-reuse:1
@ 1333 train 7.8567 , allloss: 11.5592, dt: 1175.69ms, fracRes: 0.0054, norm(attn): 1.3750, norm(output): 0.0209, norm(x): 0.0261, norm(y): 0.9749, norm:130.8177, tok/sec: 111485.29, flops:43.43, batch-reuse:1
@ 1334 train 8.0958 , allloss: 13.7776, dt: 1142.01ms, fracRes: 0.0046, norm(attn): 1.1250, norm(output): 0.0240, norm(x): 0.0280, norm(y): 0.9771, norm:249.1677, tok/sec: 114772.96, flops:44.72, batch-reuse:1
@ 1335 train 7.8468 , allloss: 11.6913, dt: 1126.19ms, fracRes: 0.0078, norm(attn): 1.2031, norm(output): 0.0232, norm(x): 0.0299, norm(y): 0.9785, norm:66.9366, tok/sec: 116385.09, flops:45.34, batch-reuse:1
@ 1336 train 8.0091 , allloss: 10.9485, dt: 1158.42ms, fracRes: 0.0079, norm(attn): 1.1406, norm(output): 0.0255, norm(x): 0.0322, norm(y): 0.9790, norm:64.5754, tok/sec: 113147.68, flops:44.08, batch-reuse:1
@ 1337 train 7.9268 , allloss: 10.6637, dt: 1130.94ms, fracRes: 0.0058, norm(attn): 1.1250, norm(output): 0.0259, norm(x): 0.0311, norm(y): 0.9788, norm:56.2462, tok/sec: 115896.91, flops:45.15, batch-reuse:1
@ 1338 train 7.7754 , allloss: 10.4497, dt: 1150.85ms, fracRes: 0.0039, norm(attn): 1.1328, norm(output): 0.0250, norm(x): 0.0287, norm(y): 0.9781, norm:19.1111, tok/sec: 113891.87, flops:44.37, batch-reuse:1
@ 1339 train 7.9037 , allloss: 10.7650, dt: 1169.33ms, fracRes: 0.0032, norm(attn): 1.1484, norm(output): 0.0243, norm(x): 0.0275, norm(y): 0.9771, norm:46.6387, tok/sec: 112091.35, flops:43.67, batch-reuse:1
@ 1340 train 7.7959 , allloss: 9.8705, dt: 1189.17ms, fracRes: 0.0025, norm(attn): 1.1328, norm(output): 0.0253, norm(x): 0.0278, norm(y): 0.9772, norm:40.8279, tok/sec: 110221.14, flops:42.94, batch-reuse:1
@ 1341 train 7.7418 , allloss: 9.8981, dt: 1177.24ms, fracRes: 0.0027, norm(attn): 1.1250, norm(output): 0.0258, norm(x): 0.0286, norm(y): 0.9776, norm:25.8936, tok/sec: 111338.01, flops:43.38, batch-reuse:1
@ 1342 train 7.9252 , allloss: 10.9315, dt: 1172.95ms, fracRes: 0.0027, norm(attn): 1.1250, norm(output): 0.0258, norm(x): 0.0286, norm(y): 0.9779, norm:46.2978, tok/sec: 111745.39, flops:43.54, batch-reuse:1
@ 1343 train 7.6904 , allloss: 10.6667, dt: 1166.09ms, fracRes: 0.0024, norm(attn): 1.1172, norm(output): 0.0273, norm(x): 0.0295, norm(y): 0.9788, norm:18.9516, tok/sec: 112403.45, flops:43.79, batch-reuse:1
@ 1344 train 7.7474 , allloss: 10.6718, dt: 1142.40ms, fracRes: 0.0024, norm(attn): 1.1094, norm(output): 0.0294, norm(x): 0.0314, norm(y): 0.9794, norm:20.7483, tok/sec: 114733.41, flops:44.70, batch-reuse:1
@ 1345 train 7.6637 , allloss: 10.6713, dt: 1129.23ms, fracRes: 0.0025, norm(attn): 1.1094, norm(output): 0.0304, norm(x): 0.0323, norm(y): 0.9800, norm:20.0717, tok/sec: 116072.08, flops:45.22, batch-reuse:1
@ 1346 train 7.7635 , allloss: 10.8773, dt: 1141.91ms, fracRes: 0.0027, norm(attn): 1.1172, norm(output): 0.0308, norm(x): 0.0329, norm(y): 0.9806, norm:17.6188, tok/sec: 114783.60, flops:44.72, batch-reuse:1
@ 1347 train 7.6926 , allloss: 10.4917, dt: 1123.10ms, fracRes: 0.0028, norm(attn): 1.1328, norm(output): 0.0308, norm(x): 0.0329, norm(y): 0.9807, norm:18.4068, tok/sec: 116705.15, flops:45.47, batch-reuse:1
@ 1348 train 7.7503 , allloss: 10.1576, dt: 1155.47ms, fracRes: 0.0030, norm(attn): 1.1562, norm(output): 0.0306, norm(x): 0.0332, norm(y): 0.9805, norm:14.4860, tok/sec: 113436.48, flops:44.19, batch-reuse:1
@ 1349 train 7.7184 , allloss: 9.8781, dt: 1179.16ms, fracRes: 0.0026, norm(attn): 1.2031, norm(output): 0.0310, norm(x): 0.0330, norm(y): 0.9804, norm:13.5901, tok/sec: 111157.40, flops:43.31, batch-reuse:1
@ 1350 train 7.7149 , allloss: 10.0225, dt: 1180.84ms, fracRes: 0.0026, norm(attn): 1.1719, norm(output): 0.0330, norm(x): 0.0348, norm(y): 0.9808, norm:16.3607, tok/sec: 110998.93, flops:43.25, batch-reuse:1
@ 1351 train 8.2713 , allloss: 20.9092, dt: 1188.06ms, fracRes: 0.0037, norm(attn): 0.6406, norm(output): 0.0564, norm(x): 0.0570, norm(y): 0.9815, norm:347.0466, tok/sec: 110324.26, flops:42.98, batch-reuse:1
@ 1352 train 7.8483 , allloss: 18.1994, dt: 1184.20ms, fracRes: 0.0039, norm(attn): 0.7891, norm(output): 0.0471, norm(x): 0.0487, norm(y): 0.9813, norm:41.8895, tok/sec: 110684.34, flops:43.12, batch-reuse:1
@ 1353 train 7.7612 , allloss: 11.5517, dt: 1161.63ms, fracRes: 0.0033, norm(attn): 1.0938, norm(output): 0.0388, norm(x): 0.0404, norm(y): 0.9816, norm:23.7085, tok/sec: 112834.33, flops:43.96, batch-reuse:1
@ 1354 train 7.7607 , allloss: 10.7537, dt: 1161.15ms, fracRes: 0.0038, norm(attn): 1.1875, norm(output): 0.0383, norm(x): 0.0405, norm(y): 0.9818, norm:37.1893, tok/sec: 112880.92, flops:43.98, batch-reuse:1
@ 1355 train 7.6481 , allloss: 10.6060, dt: 1177.23ms, fracRes: 0.0046, norm(attn): 1.1406, norm(output): 0.0388, norm(x): 0.0417, norm(y): 0.9819, norm:45.5161, tok/sec: 111339.16, flops:43.38, batch-reuse:1
@ 1356 train 7.8170 , allloss: 12.9018, dt: 1162.83ms, fracRes: 0.0069, norm(attn): 0.9648, norm(output): 0.0413, norm(x): 0.0458, norm(y): 0.9815, norm:53.6468, tok/sec: 112717.82, flops:43.91, batch-reuse:1
@ 1357 train 8.7734 , allloss: 61.0751, dt: 1142.81ms, fracRes: 0.0094, norm(attn): 0.6133, norm(output): 0.1177, norm(x): 0.1197, norm(y): 0.9806, norm:664.1924, tok/sec: 114692.74, flops:44.68, batch-reuse:1
@ 1358 train 9.7137 , allloss: 111.6921, dt: 1154.70ms, fracRes: 0.0053, norm(attn): 0.4902, norm(output): 0.2148, norm(x): 0.2070, norm(y): 0.9811, norm:331.2407, tok/sec: 113511.73, flops:44.22, batch-reuse:1
@ 1359 train 8.9898 , allloss: 133.2082, dt: 1143.45ms, fracRes: 0.0050, norm(attn): 0.5117, norm(output): 0.2412, norm(x): 0.2397, norm(y): 0.9813, norm:357.6353, tok/sec: 114628.41, flops:44.66, batch-reuse:1
@ 1360 train 9.7837 , allloss: 130.3071, dt: 1153.67ms, fracRes: 0.0080, norm(attn): 0.6172, norm(output): 0.2812, norm(x): 0.2482, norm(y): 0.9813, norm:352.1583, tok/sec: 113612.91, flops:44.26, batch-reuse:1
@ 1361 train 9.5827 , allloss: 122.4902, dt: 1157.38ms, fracRes: 0.0089, norm(attn): 0.6055, norm(output): 0.2695, norm(x): 0.2399, norm(y): 0.9816, norm:314.6340, tok/sec: 113248.51, flops:44.12, batch-reuse:1
@ 1362 train 8.4560 , allloss: 128.3247, dt: 1179.35ms, fracRes: 0.0063, norm(attn): 0.5273, norm(output): 0.2324, norm(x): 0.2252, norm(y): 0.9816, norm:297.8525, tok/sec: 111138.93, flops:43.30, batch-reuse:1
@ 1363 train 10.4959 , allloss: 87.2042, dt: 1126.34ms, fracRes: 0.0053, norm(attn): 0.5234, norm(output): 0.1367, norm(x): 0.1360, norm(y): 0.9810, norm:651.2991, tok/sec: 116369.94, flops:45.34, batch-reuse:1
@ 1364 train 10.1894 , allloss: 64.0839, dt: 1153.83ms, fracRes: 0.0066, norm(attn): 0.4863, norm(output): 0.1221, norm(x): 0.1136, norm(y): 0.9809, norm:622.2212, tok/sec: 113596.87, flops:44.26, batch-reuse:1
@ 1365 train 9.9078 , allloss: 28.4661, dt: 1179.08ms, fracRes: 0.0365, norm(attn): 0.6250, norm(output): 0.0640, norm(x): 0.0857, norm(y): 0.9812, norm:539.7903, tok/sec: 111164.34, flops:43.31, batch-reuse:1
@ 1366 train 9.5275 , allloss: 21.0482, dt: 1175.89ms, fracRes: 0.0465, norm(attn): 0.7266, norm(output): 0.0540, norm(x): 0.0866, norm(y): 0.9813, norm:255.6656, tok/sec: 111466.30, flops:43.43, batch-reuse:1
@ 1367 train 8.6439 , allloss: 16.3012, dt: 1165.69ms, fracRes: 0.0546, norm(attn): 0.8008, norm(output): 0.0498, norm(x): 0.0909, norm(y): 0.9812, norm:214.7276, tok/sec: 112441.95, flops:43.81, batch-reuse:1
@ 1368 train 7.9238 , allloss: 13.9821, dt: 1179.87ms, fracRes: 0.0532, norm(attn): 0.8281, norm(output): 0.0466, norm(x): 0.0877, norm(y): 0.9819, norm:77.1882, tok/sec: 111090.37, flops:43.28, batch-reuse:1
@ 1369 train 7.7691 , allloss: 12.2682, dt: 1177.54ms, fracRes: 0.0454, norm(attn): 0.8984, norm(output): 0.0427, norm(x): 0.0777, norm(y): 0.9821, norm:107.9330, tok/sec: 111309.88, flops:43.37, batch-reuse:1
@ 1370 train 7.7593 , allloss: 11.2988, dt: 1151.67ms, fracRes: 0.0297, norm(attn): 1.0000, norm(output): 0.0388, norm(x): 0.0615, norm(y): 0.9817, norm:94.9571, tok/sec: 113810.64, flops:44.34, batch-reuse:1
@ 1371 train 7.7489 , allloss: 11.1590, dt: 1144.53ms, fracRes: 0.0193, norm(attn): 1.0469, norm(output): 0.0347, norm(x): 0.0493, norm(y): 0.9810, norm:79.2640, tok/sec: 114520.46, flops:44.62, batch-reuse:1
@ 1372 train 7.7537 , allloss: 11.2030, dt: 1146.98ms, fracRes: 0.0105, norm(attn): 1.0625, norm(output): 0.0310, norm(x): 0.0389, norm(y): 0.9799, norm:47.0931, tok/sec: 114275.89, flops:44.52, batch-reuse:1
@ 1373 train 7.7965 , allloss: 10.5605, dt: 1159.68ms, fracRes: 0.0067, norm(attn): 1.1094, norm(output): 0.0278, norm(x): 0.0340, norm(y): 0.9787, norm:83.7974, tok/sec: 113024.67, flops:44.03, batch-reuse:1
@ 1374 train 7.8121 , allloss: 11.3024, dt: 1184.00ms, fracRes: 0.0044, norm(attn): 1.0781, norm(output): 0.0278, norm(x): 0.0321, norm(y): 0.9786, norm:97.0712, tok/sec: 110702.90, flops:43.13, batch-reuse:1
@ 1375 train 7.7192 , allloss: 10.9054, dt: 1173.64ms, fracRes: 0.0049, norm(attn): 1.1094, norm(output): 0.0325, norm(x): 0.0365, norm(y): 0.9800, norm:46.8140, tok/sec: 111680.08, flops:43.51, batch-reuse:1
@ 1376 train 7.7257 , allloss: 10.7500, dt: 1144.36ms, fracRes: 0.0072, norm(attn): 1.0547, norm(output): 0.0376, norm(x): 0.0424, norm(y): 0.9809, norm:71.4386, tok/sec: 114537.42, flops:44.62, batch-reuse:1
@ 1377 train 7.7393 , allloss: 11.0854, dt: 1161.51ms, fracRes: 0.0071, norm(attn): 0.9453, norm(output): 0.0403, norm(x): 0.0450, norm(y): 0.9813, norm:52.8582, tok/sec: 112846.65, flops:43.97, batch-reuse:1
@ 1378 train 7.9137 , allloss: 11.9727, dt: 1145.87ms, fracRes: 0.0062, norm(attn): 0.8750, norm(output): 0.0427, norm(x): 0.0464, norm(y): 0.9814, norm:34.2468, tok/sec: 114386.55, flops:44.56, batch-reuse:1
@ 1379 train 8.2366 , allloss: 12.4901, dt: 1150.16ms, fracRes: 0.0102, norm(attn): 0.8867, norm(output): 0.0439, norm(x): 0.0513, norm(y): 0.9813, norm:132.8679, tok/sec: 113959.72, flops:44.40, batch-reuse:1
@ 1380 train 7.9018 , allloss: 15.9458, dt: 1146.46ms, fracRes: 0.0053, norm(attn): 0.7500, norm(output): 0.0476, norm(x): 0.0509, norm(y): 0.9819, norm:85.6626, tok/sec: 114327.17, flops:44.54, batch-reuse:1
@ 1381 train 7.7254 , allloss: 12.0513, dt: 1145.56ms, fracRes: 0.0057, norm(attn): 0.7344, norm(output): 0.0508, norm(x): 0.0532, norm(y): 0.9818, norm:36.2541, tok/sec: 114417.54, flops:44.58, batch-reuse:1
@ 1382 train 8.0240 , allloss: 12.4915, dt: 1161.20ms, fracRes: 0.0133, norm(attn): 0.8047, norm(output): 0.0503, norm(x): 0.0594, norm(y): 0.9811, norm:78.7207, tok/sec: 112876.31, flops:43.98, batch-reuse:1
@ 1383 train 8.1072 , allloss: 15.4645, dt: 1149.10ms, fracRes: 0.0120, norm(attn): 0.7305, norm(output): 0.0559, norm(x): 0.0602, norm(y): 0.9812, norm:85.4164, tok/sec: 114065.13, flops:44.44, batch-reuse:1
@ 1384 train 8.1670 , allloss: 12.7916, dt: 1159.90ms, fracRes: 0.0142, norm(attn): 0.8203, norm(output): 0.0510, norm(x): 0.0608, norm(y): 0.9805, norm:82.9339, tok/sec: 113003.08, flops:44.03, batch-reuse:1
@ 1385 train 7.9760 , allloss: 14.6394, dt: 1157.08ms, fracRes: 0.0090, norm(attn): 0.7500, norm(output): 0.0525, norm(x): 0.0580, norm(y): 0.9807, norm:47.7759, tok/sec: 113277.82, flops:44.13, batch-reuse:1
@ 1386 train 7.7863 , allloss: 12.7257, dt: 1148.24ms, fracRes: 0.0104, norm(attn): 0.7383, norm(output): 0.0515, norm(x): 0.0584, norm(y): 0.9806, norm:29.2632, tok/sec: 114150.34, flops:44.47, batch-reuse:1
@ 1387 train 7.9156 , allloss: 12.7692, dt: 1152.61ms, fracRes: 0.0182, norm(attn): 0.7734, norm(output): 0.0493, norm(x): 0.0632, norm(y): 0.9802, norm:46.9545, tok/sec: 113717.49, flops:44.30, batch-reuse:1
@ 1388 train 7.8608 , allloss: 13.8535, dt: 1155.63ms, fracRes: 0.0144, norm(attn): 0.7344, norm(output): 0.0500, norm(x): 0.0604, norm(y): 0.9803, norm:27.2885, tok/sec: 113420.54, flops:44.19, batch-reuse:1
@ 1389 train 7.7371 , allloss: 12.5143, dt: 1175.25ms, fracRes: 0.0096, norm(attn): 0.7266, norm(output): 0.0491, norm(x): 0.0555, norm(y): 0.9802, norm:19.7767, tok/sec: 111526.63, flops:43.45, batch-reuse:1
@ 1390 train 7.9803 , allloss: 12.5448, dt: 1184.11ms, fracRes: 0.0083, norm(attn): 0.7031, norm(output): 0.0503, norm(x): 0.0550, norm(y): 0.9800, norm:20.7588, tok/sec: 110691.96, flops:43.13, batch-reuse:1
@ 1391 train 7.9051 , allloss: 12.2685, dt: 1185.90ms, fracRes: 0.0113, norm(attn): 0.6953, norm(output): 0.0498, norm(x): 0.0572, norm(y): 0.9799, norm:33.8251, tok/sec: 110525.65, flops:43.06, batch-reuse:1
@ 1392 train 7.8079 , allloss: 13.1494, dt: 1181.32ms, fracRes: 0.0073, norm(attn): 0.6641, norm(output): 0.0503, norm(x): 0.0532, norm(y): 0.9798, norm:61.9910, tok/sec: 110953.45, flops:43.23, batch-reuse:1
@ 1393 train 7.7147 , allloss: 12.0747, dt: 1165.99ms, fracRes: 0.0052, norm(attn): 0.7500, norm(output): 0.0413, norm(x): 0.0448, norm(y): 0.9793, norm:22.9453, tok/sec: 112412.92, flops:43.80, batch-reuse:1
@ 1394 train 7.7089 , allloss: 12.0570, dt: 1158.07ms, fracRes: 0.0049, norm(attn): 0.7422, norm(output): 0.0405, norm(x): 0.0437, norm(y): 0.9794, norm:23.3105, tok/sec: 113181.45, flops:44.10, batch-reuse:1
@ 1395 train 7.8166 , allloss: 11.9152, dt: 1179.00ms, fracRes: 0.0056, norm(attn): 0.7578, norm(output): 0.0417, norm(x): 0.0452, norm(y): 0.9795, norm:33.4617, tok/sec: 111172.21, flops:43.31, batch-reuse:1
@ 1396 train 7.7632 , allloss: 11.9435, dt: 1178.41ms, fracRes: 0.0062, norm(attn): 0.7656, norm(output): 0.0422, norm(x): 0.0462, norm(y): 0.9799, norm:27.9897, tok/sec: 111227.39, flops:43.33, batch-reuse:1
@ 1397 train 7.7858 , allloss: 12.0153, dt: 1161.16ms, fracRes: 0.0060, norm(attn): 0.8008, norm(output): 0.0403, norm(x): 0.0445, norm(y): 0.9802, norm:27.8489, tok/sec: 112879.92, flops:43.98, batch-reuse:1
@ 1398 train 7.8338 , allloss: 12.3611, dt: 1156.81ms, fracRes: 0.0060, norm(attn): 0.8594, norm(output): 0.0422, norm(x): 0.0450, norm(y): 0.9802, norm:41.4461, tok/sec: 113304.41, flops:44.14, batch-reuse:1
@ 1399 train 8.0131 , allloss: 11.1796, dt: 1142.12ms, fracRes: 0.0045, norm(attn): 1.0000, norm(output): 0.0388, norm(x): 0.0417, norm(y): 0.9801, norm:209.8916, tok/sec: 114762.30, flops:44.71, batch-reuse:1
@ 1400 train 7.7888 , allloss: 11.7582, dt: 1146.55ms, fracRes: 0.0052, norm(attn): 0.9258, norm(output): 0.0381, norm(x): 0.0416, norm(y): 0.9807, norm:32.3496, tok/sec: 114318.54, flops:44.54, batch-reuse:1
@ 1401 train 7.7761 , allloss: 12.8001, dt: 1133.01ms, fracRes: 0.0056, norm(attn): 0.9062, norm(output): 0.0391, norm(x): 0.0433, norm(y): 0.9807, norm:34.9907, tok/sec: 115685.19, flops:45.07, batch-reuse:1
@ 1402 train 8.0423 , allloss: 13.3099, dt: 1142.72ms, fracRes: 0.0089, norm(attn): 0.9180, norm(output): 0.0408, norm(x): 0.0479, norm(y): 0.9807, norm:251.1964, tok/sec: 114701.96, flops:44.69, batch-reuse:1
@ 1403 train 7.7759 , allloss: 13.0268, dt: 1138.89ms, fracRes: 0.0080, norm(attn): 0.8750, norm(output): 0.0396, norm(x): 0.0463, norm(y): 0.9812, norm:33.1719, tok/sec: 115087.62, flops:44.84, batch-reuse:1
@ 1404 train 7.8747 , allloss: 13.9920, dt: 1139.54ms, fracRes: 0.0095, norm(attn): 0.8516, norm(output): 0.0432, norm(x): 0.0508, norm(y): 0.9815, norm:134.0479, tok/sec: 115021.88, flops:44.81, batch-reuse:1
@ 1405 train 7.9174 , allloss: 13.0915, dt: 1144.67ms, fracRes: 0.0122, norm(attn): 0.9453, norm(output): 0.0420, norm(x): 0.0520, norm(y): 0.9815, norm:52.3583, tok/sec: 114506.10, flops:44.61, batch-reuse:1
@ 1406 train 7.8715 , allloss: 13.1934, dt: 1156.10ms, fracRes: 0.0171, norm(attn): 1.0156, norm(output): 0.0430, norm(x): 0.0576, norm(y): 0.9817, norm:64.1010, tok/sec: 113374.37, flops:44.17, batch-reuse:1
@ 1407 train 7.7542 , allloss: 12.9937, dt: 1176.88ms, fracRes: 0.0139, norm(attn): 0.9922, norm(output): 0.0425, norm(x): 0.0543, norm(y): 0.9818, norm:41.9573, tok/sec: 111372.32, flops:43.39, batch-reuse:1
@ 1408 train 7.7746 , allloss: 13.2045, dt: 1142.13ms, fracRes: 0.0172, norm(attn): 0.9922, norm(output): 0.0454, norm(x): 0.0597, norm(y): 0.9820, norm:39.2997, tok/sec: 114761.19, flops:44.71, batch-reuse:1
@ 1409 train 7.8484 , allloss: 13.3669, dt: 1175.39ms, fracRes: 0.0212, norm(attn): 0.9648, norm(output): 0.0476, norm(x): 0.0659, norm(y): 0.9823, norm:68.2455, tok/sec: 111513.44, flops:43.45, batch-reuse:1
@ 1410 train 7.7057 , allloss: 13.3681, dt: 1180.23ms, fracRes: 0.0199, norm(attn): 0.9141, norm(output): 0.0500, norm(x): 0.0661, norm(y): 0.9824, norm:46.1523, tok/sec: 111056.55, flops:43.27, batch-reuse:1
@ 1411 train 7.7309 , allloss: 13.5610, dt: 1182.52ms, fracRes: 0.0210, norm(attn): 0.8672, norm(output): 0.0518, norm(x): 0.0685, norm(y): 0.9827, norm:43.2434, tok/sec: 110840.86, flops:43.18, batch-reuse:1
@ 1412 train 7.8869 , allloss: 14.1268, dt: 1172.55ms, fracRes: 0.0264, norm(attn): 0.8320, norm(output): 0.0554, norm(x): 0.0755, norm(y): 0.9827, norm:48.3370, tok/sec: 111784.04, flops:43.55, batch-reuse:1
@ 1413 train 7.7968 , allloss: 13.4791, dt: 1157.61ms, fracRes: 0.0247, norm(attn): 0.8164, norm(output): 0.0559, norm(x): 0.0737, norm(y): 0.9827, norm:56.2988, tok/sec: 113226.18, flops:44.11, batch-reuse:1
@ 1414 train 7.9010 , allloss: 15.3743, dt: 1139.84ms, fracRes: 0.0143, norm(attn): 0.8242, norm(output): 0.0557, norm(x): 0.0651, norm(y): 0.9822, norm:132.0250, tok/sec: 114991.40, flops:44.80, batch-reuse:1
@ 1415 train 7.7331 , allloss: 12.7375, dt: 1168.11ms, fracRes: 0.0099, norm(attn): 0.8828, norm(output): 0.0532, norm(x): 0.0598, norm(y): 0.9818, norm:62.0698, tok/sec: 112208.37, flops:43.72, batch-reuse:1
@ 1416 train 9.7839 , allloss: 14.6681, dt: 1175.36ms, fracRes: 0.0068, norm(attn): 1.0078, norm(output): 0.0605, norm(x): 0.0642, norm(y): 0.9806, norm:262.4040, tok/sec: 111516.00, flops:43.45, batch-reuse:1
@ 1417 train 9.2414 , allloss: 13.4579, dt: 1178.17ms, fracRes: 0.0062, norm(attn): 1.0000, norm(output): 0.0586, norm(x): 0.0619, norm(y): 0.9806, norm:251.0323, tok/sec: 111250.30, flops:43.34, batch-reuse:1
@ 1418 train 7.9011 , allloss: 13.4317, dt: 1160.16ms, fracRes: 0.0065, norm(attn): 0.9297, norm(output): 0.0569, norm(x): 0.0605, norm(y): 0.9811, norm:50.5897, tok/sec: 112977.19, flops:44.02, batch-reuse:1
@ 1419 train 7.7565 , allloss: 16.0481, dt: 1155.65ms, fracRes: 0.0082, norm(attn): 0.8125, norm(output): 0.0579, norm(x): 0.0626, norm(y): 0.9818, norm:39.1562, tok/sec: 113418.83, flops:44.19, batch-reuse:1
@ 1420 train 7.8848 , allloss: 21.0156, dt: 1187.62ms, fracRes: 0.0082, norm(attn): 0.7617, norm(output): 0.0796, norm(x): 0.0810, norm(y): 0.9818, norm:763.8407, tok/sec: 110365.56, flops:43.00, batch-reuse:1
@ 1421 train 7.9537 , allloss: 15.3614, dt: 1166.28ms, fracRes: 0.0074, norm(attn): 0.7969, norm(output): 0.0679, norm(x): 0.0708, norm(y): 0.9813, norm:71.7471, tok/sec: 112384.40, flops:43.78, batch-reuse:1
@ 1422 train 7.7176 , allloss: 13.1924, dt: 1163.21ms, fracRes: 0.0066, norm(attn): 0.8828, norm(output): 0.0620, norm(x): 0.0651, norm(y): 0.9810, norm:47.9034, tok/sec: 112681.73, flops:43.90, batch-reuse:1
@ 1423 train 7.9741 , allloss: 12.9726, dt: 1134.05ms, fracRes: 0.0070, norm(attn): 1.0469, norm(output): 0.0659, norm(x): 0.0699, norm(y): 0.9805, norm:79.2123, tok/sec: 115578.47, flops:45.03, batch-reuse:1
@ 1424 train 9.1857 , allloss: 13.9013, dt: 1140.82ms, fracRes: 0.0083, norm(attn): 1.1328, norm(output): 0.0728, norm(x): 0.0769, norm(y): 0.9803, norm:237.2135, tok/sec: 114893.15, flops:44.76, batch-reuse:1
@ 1425 train 9.0307 , allloss: 13.6559, dt: 1149.78ms, fracRes: 0.0082, norm(attn): 1.0938, norm(output): 0.0737, norm(x): 0.0778, norm(y): 0.9803, norm:170.5988, tok/sec: 113997.01, flops:44.41, batch-reuse:1
@ 1426 train 8.1349 , allloss: 13.2376, dt: 1158.54ms, fracRes: 0.0077, norm(attn): 1.0078, norm(output): 0.0737, norm(x): 0.0773, norm(y): 0.9805, norm:82.3327, tok/sec: 113135.36, flops:44.08, batch-reuse:1
@ 1427 train 7.7652 , allloss: 13.5710, dt: 1158.79ms, fracRes: 0.0078, norm(attn): 0.9336, norm(output): 0.0737, norm(x): 0.0782, norm(y): 0.9808, norm:46.3504, tok/sec: 113111.13, flops:44.07, batch-reuse:1
@ 1428 train 7.7437 , allloss: 13.6072, dt: 1146.10ms, fracRes: 0.0098, norm(attn): 0.8906, norm(output): 0.0796, norm(x): 0.0845, norm(y): 0.9809, norm:48.6909, tok/sec: 114363.87, flops:44.56, batch-reuse:1
@ 1429 train 8.1251 , allloss: 14.3115, dt: 1124.60ms, fracRes: 0.0133, norm(attn): 0.8711, norm(output): 0.0889, norm(x): 0.0953, norm(y): 0.9808, norm:55.7875, tok/sec: 116550.01, flops:45.41, batch-reuse:1
@ 1430 train 8.5494 , allloss: 14.8681, dt: 1137.14ms, fracRes: 0.0210, norm(attn): 0.8828, norm(output): 0.0967, norm(x): 0.1078, norm(y): 0.9808, norm:60.7228, tok/sec: 115264.39, flops:44.91, batch-reuse:1
@ 1431 train 8.7170 , allloss: 14.4580, dt: 1174.88ms, fracRes: 0.0289, norm(attn): 0.9336, norm(output): 0.1011, norm(x): 0.1168, norm(y): 0.9810, norm:59.4678, tok/sec: 111561.71, flops:43.46, batch-reuse:1
@ 1432 train 8.6767 , allloss: 14.3274, dt: 1181.92ms, fracRes: 0.0297, norm(attn): 0.9844, norm(output): 0.1016, norm(x): 0.1176, norm(y): 0.9812, norm:89.8656, tok/sec: 110897.90, flops:43.21, batch-reuse:1
@ 1433 train 8.5842 , allloss: 14.3305, dt: 1172.74ms, fracRes: 0.0203, norm(attn): 1.0156, norm(output): 0.0977, norm(x): 0.1072, norm(y): 0.9814, norm:97.0475, tok/sec: 111765.20, flops:43.54, batch-reuse:1
@ 1434 train 8.2417 , allloss: 14.4599, dt: 1140.67ms, fracRes: 0.0125, norm(attn): 1.0391, norm(output): 0.0908, norm(x): 0.0952, norm(y): 0.9814, norm:76.4984, tok/sec: 114907.66, flops:44.77, batch-reuse:1
@ 1435 train 8.0060 , allloss: 17.5457, dt: 1157.47ms, fracRes: 0.0085, norm(attn): 1.0000, norm(output): 0.0801, norm(x): 0.0824, norm(y): 0.9810, norm:468.6306, tok/sec: 113239.97, flops:44.12, batch-reuse:1
@ 1436 train 7.7856 , allloss: 14.4405, dt: 1183.38ms, fracRes: 0.0089, norm(attn): 1.0938, norm(output): 0.0776, norm(x): 0.0795, norm(y): 0.9819, norm:75.4539, tok/sec: 110761.16, flops:43.15, batch-reuse:1
@ 1437 train 8.5015 , allloss: 14.3746, dt: 1152.11ms, fracRes: 0.0058, norm(attn): 1.3125, norm(output): 0.0776, norm(x): 0.0789, norm(y): 0.9814, norm:517.7803, tok/sec: 113766.93, flops:44.32, batch-reuse:1
@ 1438 train 8.6227 , allloss: 14.4664, dt: 1136.91ms, fracRes: 0.0050, norm(attn): 1.3516, norm(output): 0.0776, norm(x): 0.0779, norm(y): 0.9814, norm:611.2447, tok/sec: 115288.39, flops:44.92, batch-reuse:1
@ 1439 train 7.8367 , allloss: 14.9432, dt: 1137.51ms, fracRes: 0.0055, norm(attn): 1.1953, norm(output): 0.0713, norm(x): 0.0726, norm(y): 0.9818, norm:68.3276, tok/sec: 115227.38, flops:44.89, batch-reuse:1
@ 1440 train 8.0910 , allloss: 16.3439, dt: 1134.30ms, fracRes: 0.0042, norm(attn): 1.1562, norm(output): 0.0703, norm(x): 0.0713, norm(y): 0.9815, norm:179.6051, tok/sec: 115553.25, flops:45.02, batch-reuse:1
@ 1441 train 7.8696 , allloss: 14.8129, dt: 1138.14ms, fracRes: 0.0042, norm(attn): 1.2109, norm(output): 0.0718, norm(x): 0.0722, norm(y): 0.9817, norm:72.7841, tok/sec: 115163.46, flops:44.87, batch-reuse:1
@ 1442 train 7.8494 , allloss: 15.0761, dt: 1155.69ms, fracRes: 0.0042, norm(attn): 1.2344, norm(output): 0.0747, norm(x): 0.0750, norm(y): 0.9818, norm:69.0238, tok/sec: 113414.29, flops:44.19, batch-reuse:1
@ 1443 train 8.0895 , allloss: 14.1496, dt: 1186.08ms, fracRes: 0.0027, norm(attn): 1.3281, norm(output): 0.0781, norm(x): 0.0780, norm(y): 0.9815, norm:327.5735, tok/sec: 110508.66, flops:43.05, batch-reuse:1
@ 1444 train 7.7618 , allloss: 14.3388, dt: 1188.95ms, fracRes: 0.0034, norm(attn): 1.2344, norm(output): 0.0771, norm(x): 0.0766, norm(y): 0.9816, norm:79.0495, tok/sec: 110242.00, flops:42.95, batch-reuse:1
@ 1445 train 7.7756 , allloss: 14.6364, dt: 1157.65ms, fracRes: 0.0036, norm(attn): 1.1328, norm(output): 0.0767, norm(x): 0.0760, norm(y): 0.9817, norm:73.1407, tok/sec: 113222.90, flops:44.11, batch-reuse:1
@ 1446 train 8.2250 , allloss: 14.7040, dt: 1136.65ms, fracRes: 0.0023, norm(attn): 1.1094, norm(output): 0.0796, norm(x): 0.0792, norm(y): 0.9813, norm:195.4843, tok/sec: 115314.39, flops:44.93, batch-reuse:1
@ 1447 train 8.0260 , allloss: 15.4643, dt: 1155.83ms, fracRes: 0.0024, norm(attn): 0.9844, norm(output): 0.0791, norm(x): 0.0790, norm(y): 0.9812, norm:99.2820, tok/sec: 113400.72, flops:44.18, batch-reuse:1
@ 1448 train 8.0716 , allloss: 30.2978, dt: 1150.55ms, fracRes: 0.0075, norm(attn): 0.8633, norm(output): 0.2109, norm(x): 0.1694, norm(y): 0.9812, norm:353.6893, tok/sec: 113920.92, flops:44.38, batch-reuse:1
@ 1449 train 7.7865 , allloss: 16.0933, dt: 1158.71ms, fracRes: 0.0040, norm(attn): 0.8477, norm(output): 0.0869, norm(x): 0.0850, norm(y): 0.9813, norm:62.2769, tok/sec: 113118.88, flops:44.07, batch-reuse:1
@ 1450 train 8.4042 , allloss: 15.8347, dt: 1157.56ms, fracRes: 0.0026, norm(attn): 0.8750, norm(output): 0.0928, norm(x): 0.0896, norm(y): 0.9811, norm:137.9629, tok/sec: 113231.76, flops:44.12, batch-reuse:1
@ 1451 train 8.4669 , allloss: 15.8993, dt: 1151.29ms, fracRes: 0.0028, norm(attn): 0.8789, norm(output): 0.0952, norm(x): 0.0933, norm(y): 0.9812, norm:137.3833, tok/sec: 113848.00, flops:44.36, batch-reuse:1
@ 1452 train 7.8298 , allloss: 15.6123, dt: 1147.55ms, fracRes: 0.0037, norm(attn): 0.8281, norm(output): 0.0942, norm(x): 0.0933, norm(y): 0.9815, norm:88.4779, tok/sec: 114219.10, flops:44.50, batch-reuse:1
@ 1453 train 7.6988 , allloss: 16.0349, dt: 1152.02ms, fracRes: 0.0053, norm(attn): 0.8125, norm(output): 0.0967, norm(x): 0.0962, norm(y): 0.9818, norm:134.7987, tok/sec: 113775.92, flops:44.33, batch-reuse:1
@ 1454 train 7.7683 , allloss: 15.7358, dt: 1177.22ms, fracRes: 0.0062, norm(attn): 0.8203, norm(output): 0.1011, norm(x): 0.0999, norm(y): 0.9820, norm:63.7789, tok/sec: 111340.60, flops:43.38, batch-reuse:1
@ 1455 train 8.1109 , allloss: 15.3659, dt: 1180.20ms, fracRes: 0.0057, norm(attn): 0.8711, norm(output): 0.1060, norm(x): 0.1045, norm(y): 0.9820, norm:79.7336, tok/sec: 111059.38, flops:43.27, batch-reuse:1
@ 1456 train 8.5530 , allloss: 17.0184, dt: 1172.26ms, fracRes: 0.0070, norm(attn): 0.8594, norm(output): 0.1206, norm(x): 0.1168, norm(y): 0.9821, norm:97.0361, tok/sec: 111811.39, flops:43.56, batch-reuse:1
@ 1457 train 9.1379 , allloss: 110.2862, dt: 1168.99ms, fracRes: 0.0347, norm(attn): 0.8828, norm(output): 0.6172, norm(x): 0.3753, norm(y): 0.9826, norm:1004.7425, tok/sec: 112123.72, flops:43.68, batch-reuse:1
@ 1458 train 9.2933 , allloss: 126.7975, dt: 1153.37ms, fracRes: 0.0471, norm(attn): 0.9609, norm(output): 0.8555, norm(x): 0.5297, norm(y): 0.9827, norm:1242.0642, tok/sec: 113642.33, flops:44.28, batch-reuse:1
@ 1459 train 9.2468 , allloss: 102.1338, dt: 1138.77ms, fracRes: 0.0580, norm(attn): 0.9375, norm(output): 0.6562, norm(x): 0.4132, norm(y): 0.9828, norm:1025.3431, tok/sec: 115099.23, flops:44.84, batch-reuse:1
@ 1460 train 8.9472 , allloss: 59.7296, dt: 1148.60ms, fracRes: 0.0595, norm(attn): 0.8711, norm(output): 0.2910, norm(x): 0.2073, norm(y): 0.9828, norm:533.4922, tok/sec: 114114.30, flops:44.46, batch-reuse:1
@ 1461 train 9.9777 , allloss: 17.4712, dt: 1158.61ms, fracRes: 0.0098, norm(attn): 1.0312, norm(output): 0.1250, norm(x): 0.1247, norm(y): 0.9825, norm:293.9552, tok/sec: 113128.93, flops:44.08, batch-reuse:1
@ 1462 train 9.2913 , allloss: 20.0997, dt: 1175.95ms, fracRes: 0.0151, norm(attn): 0.9492, norm(output): 0.1240, norm(x): 0.1251, norm(y): 0.9827, norm:210.9448, tok/sec: 111460.13, flops:43.42, batch-reuse:1
@ 1463 train 7.9561 , allloss: 35.5226, dt: 1161.79ms, fracRes: 0.1119, norm(attn): 0.7500, norm(output): 0.1641, norm(x): 0.1976, norm(y): 0.9830, norm:163.7518, tok/sec: 112818.88, flops:43.95, batch-reuse:1
@ 1464 train 7.8692 , allloss: 38.7308, dt: 1139.50ms, fracRes: 0.1340, norm(attn): 0.6875, norm(output): 0.1582, norm(x): 0.2190, norm(y): 0.9829, norm:134.1346, tok/sec: 115025.92, flops:44.81, batch-reuse:1
@ 1465 train 7.7821 , allloss: 36.1145, dt: 1154.08ms, fracRes: 0.1281, norm(attn): 0.6875, norm(output): 0.1406, norm(x): 0.1999, norm(y): 0.9828, norm:148.9848, tok/sec: 113573.05, flops:44.25, batch-reuse:1
@ 1466 train 7.7929 , allloss: 27.8045, dt: 1157.58ms, fracRes: 0.0767, norm(attn): 0.7422, norm(output): 0.1172, norm(x): 0.1518, norm(y): 0.9829, norm:155.6732, tok/sec: 113229.52, flops:44.11, batch-reuse:1
@ 1467 train 8.6664 , allloss: 17.1709, dt: 1185.45ms, fracRes: 0.0029, norm(attn): 0.9492, norm(output): 0.1260, norm(x): 0.1229, norm(y): 0.9819, norm:288.4069, tok/sec: 110567.64, flops:43.08, batch-reuse:1
@ 1468 train 8.2190 , allloss: 17.4361, dt: 1144.33ms, fracRes: 0.0024, norm(attn): 0.9297, norm(output): 0.1250, norm(x): 0.1223, norm(y): 0.9818, norm:291.8983, tok/sec: 114540.86, flops:44.63, batch-reuse:1
@ 1469 train 11.1985 , allloss: 32.8053, dt: 1157.80ms, fracRes: 0.0049, norm(attn): 0.9844, norm(output): 0.1270, norm(x): 0.1196, norm(y): 0.9817, norm:295.3190, tok/sec: 113207.51, flops:44.11, batch-reuse:1
@ 1470 train 8.0514 , allloss: 24.5205, dt: 1186.76ms, fracRes: 0.0421, norm(attn): 0.8086, norm(output): 0.1094, norm(x): 0.1315, norm(y): 0.9824, norm:176.5607, tok/sec: 110445.52, flops:43.03, batch-reuse:1
@ 1471 train 8.0959 , allloss: 28.0704, dt: 1177.80ms, fracRes: 0.0554, norm(attn): 0.8867, norm(output): 0.1309, norm(x): 0.1506, norm(y): 0.9818, norm:157.6415, tok/sec: 111285.90, flops:43.36, batch-reuse:1
@ 1472 train 10.6319 , allloss: 20.6483, dt: 1183.94ms, fracRes: 0.0013, norm(attn): 1.1953, norm(output): 0.1729, norm(x): 0.1650, norm(y): 0.9808, norm:560.7133, tok/sec: 110708.56, flops:43.13, batch-reuse:1
@ 1473 train 11.0888 , allloss: 20.6804, dt: 1181.50ms, fracRes: 0.0013, norm(attn): 1.2422, norm(output): 0.1875, norm(x): 0.1756, norm(y): 0.9807, norm:282.2227, tok/sec: 110937.37, flops:43.22, batch-reuse:1
@ 1474 train 10.5434 , allloss: 21.1558, dt: 1133.47ms, fracRes: 0.0012, norm(attn): 1.1172, norm(output): 0.1885, norm(x): 0.1783, norm(y): 0.9806, norm:263.9265, tok/sec: 115638.20, flops:45.05, batch-reuse:1
@ 1475 train 9.9494 , allloss: 20.9997, dt: 1136.99ms, fracRes: 0.0011, norm(attn): 0.9766, norm(output): 0.1875, norm(x): 0.1773, norm(y): 0.9807, norm:186.2166, tok/sec: 115279.45, flops:44.91, batch-reuse:1
@ 1476 train 10.0981 , allloss: 25.1808, dt: 1142.43ms, fracRes: 0.0014, norm(attn): 0.8906, norm(output): 0.1895, norm(x): 0.1796, norm(y): 0.9808, norm:361.7224, tok/sec: 114731.30, flops:44.70, batch-reuse:1
@ 1477 train 9.8730 , allloss: 21.0587, dt: 1153.13ms, fracRes: 0.0010, norm(attn): 0.9414, norm(output): 0.2197, norm(x): 0.2061, norm(y): 0.9805, norm:172.5495, tok/sec: 113666.32, flops:44.28, batch-reuse:1
@ 1478 train 10.1880 , allloss: 21.2407, dt: 1155.31ms, fracRes: 0.0010, norm(attn): 1.0078, norm(output): 0.2539, norm(x): 0.2375, norm(y): 0.9802, norm:183.7316, tok/sec: 113451.41, flops:44.20, batch-reuse:1
@ 1479 train 10.6397 , allloss: 21.6503, dt: 1145.83ms, fracRes: 0.0010, norm(attn): 1.1172, norm(output): 0.2930, norm(x): 0.2711, norm(y): 0.9801, norm:192.9398, tok/sec: 114390.81, flops:44.57, batch-reuse:1
@ 1480 train 10.9114 , allloss: 22.0427, dt: 1131.87ms, fracRes: 0.0010, norm(attn): 1.2266, norm(output): 0.3379, norm(x): 0.3105, norm(y): 0.9800, norm:185.0718, tok/sec: 115801.16, flops:45.12, batch-reuse:1
@ 1481 train 10.9926 , allloss: 22.8647, dt: 1143.48ms, fracRes: 0.0011, norm(attn): 1.3750, norm(output): 0.3867, norm(x): 0.3578, norm(y): 0.9799, norm:150.6583, tok/sec: 114625.98, flops:44.66, batch-reuse:1
@ 1482 train 10.9345 , allloss: 24.0978, dt: 1187.13ms, fracRes: 0.0012, norm(attn): 1.5000, norm(output): 0.4434, norm(x): 0.4120, norm(y): 0.9799, norm:103.5250, tok/sec: 110410.49, flops:43.02, batch-reuse:1
@ 1483 train 10.8000 , allloss: 25.5473, dt: 1194.38ms, fracRes: 0.0014, norm(attn): 1.7031, norm(output): 0.5078, norm(x): 0.4737, norm(y): 0.9799, norm:70.6468, tok/sec: 109740.77, flops:42.76, batch-reuse:1
@ 1484 train 10.5910 , allloss: 27.4445, dt: 1143.52ms, fracRes: 0.0018, norm(attn): 1.8594, norm(output): 0.5820, norm(x): 0.5282, norm(y): 0.9800, norm:104.0323, tok/sec: 114621.13, flops:44.66, batch-reuse:1
@ 1485 train 10.3344 , allloss: 29.0495, dt: 1158.29ms, fracRes: 0.0025, norm(attn): 1.9922, norm(output): 0.6211, norm(x): 0.5634, norm(y): 0.9801, norm:136.3865, tok/sec: 113160.37, flops:44.09, batch-reuse:1
@ 1486 train 10.0554 , allloss: 30.2751, dt: 1163.29ms, fracRes: 0.0038, norm(attn): 2.0781, norm(output): 0.6328, norm(x): 0.5786, norm(y): 0.9802, norm:154.9284, tok/sec: 112673.93, flops:43.90, batch-reuse:1
@ 1487 train 9.7847 , allloss: 31.3936, dt: 1178.04ms, fracRes: 0.0058, norm(attn): 2.1250, norm(output): 0.6289, norm(x): 0.5737, norm(y): 0.9802, norm:164.6424, tok/sec: 111263.07, flops:43.35, batch-reuse:1
@ 1488 train 9.5469 , allloss: 33.4146, dt: 1137.44ms, fracRes: 0.0095, norm(attn): 2.1250, norm(output): 0.5977, norm(x): 0.5474, norm(y): 0.9803, norm:176.5257, tok/sec: 115233.97, flops:44.90, batch-reuse:1
@ 1489 train 9.3883 , allloss: 35.1040, dt: 1161.59ms, fracRes: 0.0154, norm(attn): 2.0938, norm(output): 0.5625, norm(x): 0.5077, norm(y): 0.9804, norm:181.4305, tok/sec: 112838.20, flops:43.96, batch-reuse:1
@ 1490 train 9.1765 , allloss: 36.7748, dt: 1175.88ms, fracRes: 0.0295, norm(attn): 2.0469, norm(output): 0.5000, norm(x): 0.4657, norm(y): 0.9805, norm:402.6225, tok/sec: 111466.87, flops:43.43, batch-reuse:1
@ 1491 train 9.0143 , allloss: 30.5025, dt: 1158.29ms, fracRes: 0.0801, norm(attn): 2.0312, norm(output): 0.4492, norm(x): 0.4438, norm(y): 0.9807, norm:245.6701, tok/sec: 113159.76, flops:44.09, batch-reuse:1
@ 1492 train 8.8182 , allloss: 29.3158, dt: 1163.98ms, fracRes: 0.1888, norm(attn): 1.8438, norm(output): 0.3594, norm(x): 0.4300, norm(y): 0.9810, norm:239.3857, tok/sec: 112607.14, flops:43.87, batch-reuse:1
@ 1493 train 8.5391 , allloss: 29.7285, dt: 1142.70ms, fracRes: 0.3352, norm(attn): 1.4922, norm(output): 0.2559, norm(x): 0.4493, norm(y): 0.9817, norm:167.5034, tok/sec: 114703.46, flops:44.69, batch-reuse:1
@ 1494 train 8.2661 , allloss: 28.9405, dt: 1163.03ms, fracRes: 0.4303, norm(attn): 1.2578, norm(output): 0.2012, norm(x): 0.4821, norm(y): 0.9825, norm:88.5147, tok/sec: 112698.94, flops:43.91, batch-reuse:1
@ 1495 train 8.0973 , allloss: 27.2247, dt: 1154.12ms, fracRes: 0.4657, norm(attn): 1.2031, norm(output): 0.1729, norm(x): 0.4950, norm(y): 0.9830, norm:69.5793, tok/sec: 113568.78, flops:44.25, batch-reuse:1
@ 1496 train 8.0491 , allloss: 26.5322, dt: 1180.44ms, fracRes: 0.4695, norm(attn): 1.2109, norm(output): 0.1582, norm(x): 0.4923, norm(y): 0.9833, norm:66.4054, tok/sec: 111036.79, flops:43.26, batch-reuse:1
@ 1497 train 7.8417 , allloss: 26.1921, dt: 1159.68ms, fracRes: 0.4738, norm(attn): 1.1953, norm(output): 0.1396, norm(x): 0.4877, norm(y): 0.9834, norm:61.9666, tok/sec: 113024.34, flops:44.03, batch-reuse:1
@ 1498 train 7.8754 , allloss: 25.8268, dt: 1125.19ms, fracRes: 0.4549, norm(attn): 1.2422, norm(output): 0.1309, norm(x): 0.4688, norm(y): 0.9833, norm:71.6518, tok/sec: 116488.40, flops:45.38, batch-reuse:1
@ 1499 train 7.9927 , allloss: 25.2567, dt: 1158.16ms, fracRes: 0.4297, norm(attn): 1.3281, norm(output): 0.1211, norm(x): 0.4443, norm(y): 0.9830, norm:80.6137, tok/sec: 113172.53, flops:44.09, batch-reuse:1
@ 1500 train 7.8666 , allloss: 23.6135, dt: 1157.13ms, fracRes: 0.3908, norm(attn): 1.4062, norm(output): 0.1118, norm(x): 0.4106, norm(y): 0.9825, norm:80.3800, tok/sec: 113273.15, flops:44.13, batch-reuse:1
@ 1501 train 7.6866 , allloss: 21.2508, dt: 1144.12ms, fracRes: 0.3309, norm(attn): 1.5703, norm(output): 0.1094, norm(x): 0.3617, norm(y): 0.9819, norm:89.7042, tok/sec: 114561.87, flops:44.63, batch-reuse:1
@ 1502 train 7.7826 , allloss: 19.3931, dt: 1151.41ms, fracRes: 0.2701, norm(attn): 1.6875, norm(output): 0.1104, norm(x): 0.3142, norm(y): 0.9812, norm:98.8659, tok/sec: 113836.19, flops:44.35, batch-reuse:1
@ 1503 train 7.7672 , allloss: 17.7190, dt: 1159.47ms, fracRes: 0.2140, norm(attn): 1.7578, norm(output): 0.1104, norm(x): 0.2697, norm(y): 0.9803, norm:86.8273, tok/sec: 113044.86, flops:44.04, batch-reuse:1
@ 1504 train 7.7672 , allloss: 16.6373, dt: 1160.01ms, fracRes: 0.1781, norm(attn): 1.7422, norm(output): 0.1094, norm(x): 0.2408, norm(y): 0.9795, norm:77.1785, tok/sec: 112992.26, flops:44.02, batch-reuse:1
@ 1505 train 7.7468 , allloss: 16.0798, dt: 1157.29ms, fracRes: 0.1683, norm(attn): 1.6797, norm(output): 0.1084, norm(x): 0.2317, norm(y): 0.9790, norm:73.0215, tok/sec: 113258.14, flops:44.13, batch-reuse:1
@ 1506 train 7.8037 , allloss: 15.9298, dt: 1157.15ms, fracRes: 0.1628, norm(attn): 1.6484, norm(output): 0.1055, norm(x): 0.2247, norm(y): 0.9789, norm:103.3749, tok/sec: 113271.65, flops:44.13, batch-reuse:1
@ 1507 train 7.8356 , allloss: 15.5317, dt: 1141.74ms, fracRes: 0.1461, norm(attn): 1.6719, norm(output): 0.1001, norm(x): 0.2069, norm(y): 0.9788, norm:118.8593, tok/sec: 114800.64, flops:44.73, batch-reuse:1
@ 1508 train 7.7648 , allloss: 14.3529, dt: 1129.60ms, fracRes: 0.1085, norm(attn): 1.7031, norm(output): 0.0933, norm(x): 0.1720, norm(y): 0.9788, norm:93.5044, tok/sec: 116034.04, flops:45.21, batch-reuse:1
@ 1509 train 7.7616 , allloss: 13.0074, dt: 1136.52ms, fracRes: 0.0603, norm(attn): 1.7812, norm(output): 0.0859, norm(x): 0.1286, norm(y): 0.9790, norm:89.7530, tok/sec: 115327.52, flops:44.93, batch-reuse:1
@ 1510 train 7.8476 , allloss: 12.6033, dt: 1133.84ms, fracRes: 0.0263, norm(attn): 1.8594, norm(output): 0.0791, norm(x): 0.0958, norm(y): 0.9794, norm:97.5536, tok/sec: 115600.20, flops:45.04, batch-reuse:1
@ 1511 train 7.8697 , allloss: 13.2893, dt: 1145.30ms, fracRes: 0.0059, norm(attn): 1.8516, norm(output): 0.0708, norm(x): 0.0718, norm(y): 0.9798, norm:70.4220, tok/sec: 114443.62, flops:44.59, batch-reuse:1
@ 1512 train 7.8514 , allloss: 15.1394, dt: 1133.97ms, fracRes: 0.0050, norm(attn): 1.7500, norm(output): 0.0615, norm(x): 0.0620, norm(y): 0.9804, norm:61.4323, tok/sec: 115586.88, flops:45.03, batch-reuse:1
@ 1513 train 7.8014 , allloss: 16.9788, dt: 1123.02ms, fracRes: 0.0113, norm(attn): 1.5156, norm(output): 0.0510, norm(x): 0.0569, norm(y): 0.9806, norm:68.5931, tok/sec: 116713.77, flops:45.47, batch-reuse:1
@ 1514 train 7.9728 , allloss: 22.3140, dt: 1129.89ms, fracRes: 0.0151, norm(attn): 1.1719, norm(output): 0.0457, norm(x): 0.0540, norm(y): 0.9792, norm:193.5598, tok/sec: 116004.61, flops:45.20, batch-reuse:1
@ 1515 train 7.7777 , allloss: 15.7288, dt: 1160.04ms, fracRes: 0.0383, norm(attn): 1.3750, norm(output): 0.0369, norm(x): 0.0642, norm(y): 0.9818, norm:125.8600, tok/sec: 112989.19, flops:44.02, batch-reuse:1
@ 1516 train 7.6905 , allloss: 15.9241, dt: 1169.74ms, fracRes: 0.0641, norm(attn): 1.4062, norm(output): 0.0322, norm(x): 0.0804, norm(y): 0.9828, norm:156.6512, tok/sec: 112052.32, flops:43.66, batch-reuse:1
@ 1517 train 7.8270 , allloss: 15.4997, dt: 1165.87ms, fracRes: 0.0561, norm(attn): 1.5156, norm(output): 0.0299, norm(x): 0.0726, norm(y): 0.9827, norm:129.8527, tok/sec: 112423.77, flops:43.80, batch-reuse:1
@ 1518 train 7.8543 , allloss: 13.1405, dt: 1186.13ms, fracRes: 0.0196, norm(attn): 1.7344, norm(output): 0.0286, norm(x): 0.0434, norm(y): 0.9809, norm:105.4667, tok/sec: 110504.15, flops:43.05, batch-reuse:1
@ 1519 train 7.8426 , allloss: 11.2834, dt: 1160.17ms, fracRes: 0.0025, norm(attn): 2.0156, norm(output): 0.0270, norm(x): 0.0297, norm(y): 0.9788, norm:70.5985, tok/sec: 112976.21, flops:44.02, batch-reuse:1
@ 1520 train 7.9072 , allloss: 10.8752, dt: 1157.36ms, fracRes: 0.0014, norm(attn): 2.1250, norm(output): 0.0280, norm(x): 0.0298, norm(y): 0.9783, norm:147.6543, tok/sec: 113250.84, flops:44.12, batch-reuse:1
@ 1521 train 7.7771 , allloss: 10.8242, dt: 1171.57ms, fracRes: 0.0038, norm(attn): 2.3906, norm(output): 0.0297, norm(x): 0.0331, norm(y): 0.9797, norm:53.3912, tok/sec: 111877.20, flops:43.59, batch-reuse:1
@ 1522 train 7.8171 , allloss: 10.8483, dt: 1167.36ms, fracRes: 0.0096, norm(attn): 2.3594, norm(output): 0.0337, norm(x): 0.0411, norm(y): 0.9800, norm:57.8130, tok/sec: 112280.40, flops:43.74, batch-reuse:1
@ 1523 train 7.7892 , allloss: 10.6828, dt: 1148.15ms, fracRes: 0.0090, norm(attn): 2.3125, norm(output): 0.0359, norm(x): 0.0428, norm(y): 0.9793, norm:70.7606, tok/sec: 114159.33, flops:44.48, batch-reuse:1
@ 1524 train 7.7030 , allloss: 10.3340, dt: 1158.52ms, fracRes: 0.0072, norm(attn): 2.3125, norm(output): 0.0354, norm(x): 0.0408, norm(y): 0.9785, norm:51.0812, tok/sec: 113137.76, flops:44.08, batch-reuse:1
@ 1525 train 7.7150 , allloss: 10.1290, dt: 1466.46ms, fracRes: 0.0038, norm(attn): 2.3281, norm(output): 0.0332, norm(x): 0.0360, norm(y): 0.9774, norm:38.1888, tok/sec: 89380.03, flops:34.82, batch-reuse:1
@ 1526 train 7.7815 , allloss: 10.2142, dt: 1173.42ms, fracRes: 0.0024, norm(attn): 2.2656, norm(output): 0.0297, norm(x): 0.0318, norm(y): 0.9757, norm:25.2326, tok/sec: 111700.39, flops:43.52, batch-reuse:1
@ 1527 train 7.7222 , allloss: 10.1604, dt: 1138.56ms, fracRes: 0.0021, norm(attn): 2.1562, norm(output): 0.0256, norm(x): 0.0279, norm(y): 0.9729, norm:38.7602, tok/sec: 115121.28, flops:44.85, batch-reuse:1
@ 1528 train 7.8130 , allloss: 10.5110, dt: 1153.71ms, fracRes: 0.0025, norm(attn): 2.0781, norm(output): 0.0237, norm(x): 0.0264, norm(y): 0.9710, norm:28.2277, tok/sec: 113609.57, flops:44.26, batch-reuse:1
@ 1529 train 7.7295 , allloss: 10.3516, dt: 1147.63ms, fracRes: 0.0017, norm(attn): 2.0938, norm(output): 0.0222, norm(x): 0.0245, norm(y): 0.9699, norm:29.5652, tok/sec: 114211.17, flops:44.50, batch-reuse:1
@ 1530 train 7.8264 , allloss: 10.5555, dt: 1164.70ms, fracRes: 0.0017, norm(attn): 2.0156, norm(output): 0.0203, norm(x): 0.0228, norm(y): 0.9668, norm:45.0100, tok/sec: 112537.29, flops:43.84, batch-reuse:1
@ 1531 train 7.7712 , allloss: 10.3905, dt: 1174.40ms, fracRes: 0.0023, norm(attn): 1.8672, norm(output): 0.0205, norm(x): 0.0235, norm(y): 0.9668, norm:57.2460, tok/sec: 111607.39, flops:43.48, batch-reuse:1
@ 1532 train 7.7734 , allloss: 10.3201, dt: 1139.39ms, fracRes: 0.0021, norm(attn): 1.7969, norm(output): 0.0212, norm(x): 0.0239, norm(y): 0.9673, norm:38.8693, tok/sec: 115037.31, flops:44.82, batch-reuse:1
@ 1533 train 7.7489 , allloss: 10.3550, dt: 1173.32ms, fracRes: 0.0020, norm(attn): 1.8828, norm(output): 0.0197, norm(x): 0.0223, norm(y): 0.9651, norm:33.7910, tok/sec: 111710.45, flops:43.52, batch-reuse:1
@ 1534 train 7.8072 , allloss: 10.0802, dt: 1141.87ms, fracRes: 0.0018, norm(attn): 1.8516, norm(output): 0.0206, norm(x): 0.0230, norm(y): 0.9660, norm:28.2190, tok/sec: 114786.74, flops:44.72, batch-reuse:1
@ 1535 train 7.7777 , allloss: 10.1852, dt: 1126.96ms, fracRes: 0.0017, norm(attn): 1.7812, norm(output): 0.0225, norm(x): 0.0246, norm(y): 0.9673, norm:17.8743, tok/sec: 116306.28, flops:45.31, batch-reuse:1
@ 1536 train 7.6203 , allloss: 10.1812, dt: 1145.75ms, fracRes: 0.0016, norm(attn): 1.7188, norm(output): 0.0250, norm(x): 0.0267, norm(y): 0.9689, norm:13.5993, tok/sec: 114398.21, flops:44.57, batch-reuse:1
@ 1537 train 7.6710 , allloss: 10.2369, dt: 1139.43ms, fracRes: 0.0017, norm(attn): 1.6562, norm(output): 0.0267, norm(x): 0.0283, norm(y): 0.9699, norm:17.6194, tok/sec: 115032.66, flops:44.82, batch-reuse:1
@ 1538 train 7.7711 , allloss: 10.3256, dt: 1144.14ms, fracRes: 0.0015, norm(attn): 1.6250, norm(output): 0.0282, norm(x): 0.0296, norm(y): 0.9715, norm:35.4548, tok/sec: 114559.17, flops:44.63, batch-reuse:1
@ 1539 train 7.7354 , allloss: 10.4938, dt: 1134.37ms, fracRes: 0.0015, norm(attn): 1.5703, norm(output): 0.0305, norm(x): 0.0316, norm(y): 0.9719, norm:30.7513, tok/sec: 115545.60, flops:45.02, batch-reuse:1
@ 1540 train 7.7124 , allloss: 10.6429, dt: 1147.39ms, fracRes: 0.0016, norm(attn): 1.5547, norm(output): 0.0310, norm(x): 0.0319, norm(y): 0.9726, norm:37.5428, tok/sec: 114235.19, flops:44.51, batch-reuse:1
@ 1541 train 7.7753 , allloss: 11.0367, dt: 1180.15ms, fracRes: 0.0021, norm(attn): 1.5000, norm(output): 0.0293, norm(x): 0.0312, norm(y): 0.9733, norm:36.3706, tok/sec: 111063.98, flops:43.27, batch-reuse:1
@ 1542 train 7.7645 , allloss: 11.4971, dt: 1143.49ms, fracRes: 0.0024, norm(attn): 1.2969, norm(output): 0.0330, norm(x): 0.0347, norm(y): 0.9736, norm:30.3368, tok/sec: 114624.57, flops:44.66, batch-reuse:1
@ 1543 train 8.0244 , allloss: 13.5777, dt: 1144.76ms, fracRes: 0.0024, norm(attn): 1.1719, norm(output): 0.0386, norm(x): 0.0397, norm(y): 0.9743, norm:34.0766, tok/sec: 114497.28, flops:44.61, batch-reuse:1
@ 1544 train 7.9160 , allloss: 14.4135, dt: 1149.05ms, fracRes: 0.0030, norm(attn): 1.1719, norm(output): 0.0396, norm(x): 0.0411, norm(y): 0.9747, norm:68.9073, tok/sec: 114069.96, flops:44.44, batch-reuse:1
@ 1545 train 7.9350 , allloss: 16.6278, dt: 1149.34ms, fracRes: 0.0035, norm(attn): 1.0938, norm(output): 0.0405, norm(x): 0.0426, norm(y): 0.9753, norm:79.7683, tok/sec: 114040.87, flops:44.43, batch-reuse:1
@ 1546 train 7.8928 , allloss: 12.1915, dt: 1187.66ms, fracRes: 0.0037, norm(attn): 1.1016, norm(output): 0.0381, norm(x): 0.0405, norm(y): 0.9760, norm:30.6074, tok/sec: 110361.75, flops:43.00, batch-reuse:1
@ 1547 train 7.7951 , allloss: 11.6368, dt: 1135.57ms, fracRes: 0.0051, norm(attn): 1.1406, norm(output): 0.0352, norm(x): 0.0389, norm(y): 0.9765, norm:29.3369, tok/sec: 115424.35, flops:44.97, batch-reuse:1
@ 1548 train 7.8428 , allloss: 12.4135, dt: 1146.37ms, fracRes: 0.0040, norm(attn): 1.0781, norm(output): 0.0347, norm(x): 0.0378, norm(y): 0.9762, norm:19.4053, tok/sec: 114336.90, flops:44.55, batch-reuse:1
@ 1549 train 7.7744 , allloss: 11.8487, dt: 1154.51ms, fracRes: 0.0038, norm(attn): 1.0625, norm(output): 0.0332, norm(x): 0.0365, norm(y): 0.9758, norm:14.0470, tok/sec: 113530.88, flops:44.23, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0162,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8867,     0.1060,     0.0057,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4102,     0.2061,     0.1104,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0175,     0.0457,     0.7969,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0102,     0.0342,     0.8711,     0.0845,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0104,     0.0530,     0.0654,     0.5859,     0.2285,     0.0267,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6641,     0.0168,     0.0048,     0.0006,     0.0049,     0.1982,     0.0576,     0.0513,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0153,     0.0222,     0.8672,     0.0879,     0.0008,     0.0016,     0.0047,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0640,     0.0996,     0.0371,     0.3398,     0.1377,     0.0515,     0.1040,     0.0427,     0.0859,     0.0366,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0069,     0.0108,     0.9141,     0.0635,     0.0012,     0.0005,     0.0007,     0.0018,     0.0002,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1299,     0.0649,     0.0806,     0.0371,     0.0408,     0.1416,     0.1011,     0.1279,     0.0708,     0.0713,     0.0527,     0.0806,     0.0000,     0.0000,     0.0000],
        [    0.2695,     0.0164,     0.0074,     0.0012,     0.0069,     0.2285,     0.0908,     0.0311,     0.0801,     0.0562,     0.0903,     0.0486,     0.0723,     0.0000,     0.0000],
        [    0.0001,     0.0128,     0.0289,     0.8906,     0.0530,     0.0016,     0.0012,     0.0020,     0.0019,     0.0017,     0.0016,     0.0007,     0.0004,     0.0047,     0.0000],
        [    0.0165,     0.0613,     0.2256,     0.1963,     0.1201,     0.0457,     0.0219,     0.0630,     0.0461,     0.0522,     0.0240,     0.0184,     0.0253,     0.0562,     0.0266]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0090,  0.0112,  ..., -0.0022, -0.0348, -0.0220],
        [-0.0308,  0.0034, -0.0110,  ..., -0.0083, -0.0140, -0.0113],
        [-0.0135,  0.0053,  0.0364,  ..., -0.0117, -0.0393,  0.0042],
        ...,
        [ 0.0345,  0.0175,  0.0285,  ..., -0.0127,  0.0195, -0.0233],
        [ 0.0164, -0.0154,  0.0170,  ..., -0.0068,  0.0148,  0.0036],
        [ 0.0339,  0.0156,  0.0131,  ..., -0.0571,  0.0423, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-0.5117, -0.6758, -0.9727,  0.9180,  1.5234,  0.1328,  0.3086, -0.9258,  0.6367, -0.1001, -0.2197,  0.3906, -0.2168, -0.0903, -0.5977,  0.9648,  0.4023,  0.6250,  0.7227,  0.6445, -1.5781,  0.4160, -0.1318,  1.6797, -0.3438, -1.7344, -0.1680,  0.4473, -0.4590, -0.7852,  0.4199, -0.4336,
        -1.4766, -0.7305, -0.8984, -1.0391,  0.5195, -0.8945,  0.9414,  0.7344, -0.8594,  0.7383, -1.0469,  0.5781, -0.4121,  0.3145, -0.2383,  0.0903, -0.7109,  0.0151, -0.7266, -0.9023,  1.3984, -0.5352,  0.3535, -1.1641,  0.4102, -0.5391,  0.2070, -0.9414, -1.0469,  0.6172, -0.0315, -0.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0155,  0.0055,  0.0129,  ...,  0.0054, -0.0118,  0.0171],
        [-0.0527,  0.0007, -0.0069,  ...,  0.0053,  0.0172, -0.0545],
        [ 0.0195, -0.0013,  0.0161,  ..., -0.0110,  0.0082, -0.0099],
        ...,
        [ 0.0112,  0.0072,  0.0216,  ...,  0.0106,  0.0084,  0.0069],
        [ 0.0227, -0.0423, -0.0012,  ...,  0.0299,  0.0172, -0.0216],
        [ 0.0283,  0.0065,  0.0136,  ...,  0.0279,  0.0214, -0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.8945,  0.5117, -0.5469, -0.3164, -0.5547,  1.1172,  0.8047, -0.0967, -0.0737, -0.6523, -1.9766,  0.2480,  0.3770, -0.1416, -1.1406, -0.1709,  0.4062, -0.5195, -0.4648,  1.0234,  0.2812, -0.6562, -0.5625,  0.7578, -1.1719,  0.1455, -0.8828, -0.7148, -0.4707,  0.0649,  1.0703, -1.0859,
         1.0781, -0.0894, -0.1230, -0.0147,  0.2354, -0.9727,  0.1455,  0.8438,  0.4375,  0.6016, -0.4492,  1.3828,  0.4629,  0.9102, -0.1719, -0.6875, -0.4023, -0.4160,  0.3789, -1.1172, -0.4863,  0.2344, -0.1924,  1.3438,  0.9453, -0.2158,  0.1196, -0.0820, -0.9414, -0.4551, -0.9453, -0.5000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.0938,  2.0312,  5.4688,  4.7188,  0.8828,  1.6094,  1.3984,  2.0156,  1.0234,  2.0312,  1.9531,  0.2930,  1.9375,  1.8906],
        [ 0.0000, -2.1250, -5.0625, -5.5312, -3.1719, -0.1484, -1.2734, -3.1094, -0.9727, -2.0000, -0.1934, -1.0078, -2.1250, -1.8906, -1.6641],
        [ 0.0000, -0.6836, -1.3125, -0.4023, -0.2168, -0.0466, -0.4707, -0.4590,  0.1348, -0.6211,  0.6211, -0.2354, -0.8984, -0.0703,  0.1387],
        [ 0.0000,  4.3438,  5.2812,  8.1250,  6.4062,  3.0938,  1.6719,  1.9688,  3.3281,  1.7422,  2.8125,  1.7891,  0.5391,  3.7656,  2.6875],
        [ 0.0000,  4.9688,  6.1875,  9.4375,  7.0938,  1.6875,  3.0000,  3.7344,  2.7656,  2.2031,  1.9531,  2.6562,  1.5234,  3.1719,  3.0312],
        [ 0.0000,  1.6250,  1.8359,  4.0312,  3.0938,  0.9414,  1.1094,  0.8594,  1.5625,  0.6836,  1.4453,  0.8242,  0.1289,  1.9062,  1.5938],
        [ 0.0000, -3.6719, -4.9375, -7.0000, -4.9062, -1.2109, -2.4531, -2.5625, -2.3125, -2.2031, -1.9688, -1.4219, -1.3594, -2.9375, -2.4688],
        [ 0.0000,  4.7500,  5.1250,  8.8125,  6.5000,  1.7500,  2.5156,  3.5781,  2.4688,  2.2500,  2.0625,  1.8672,  0.8281,  2.8906,  3.1250],
        [ 0.0000,  0.4434, -0.5469,  1.6719,  0.7695, -0.2197,  0.4883, -0.4043,  0.2949, -0.5586,  0.4355,  0.4570, -0.2119,  0.0110,  0.7734],
        [ 0.0000,  5.0000,  5.4375,  9.8750,  7.2188,  3.2812,  2.2969,  2.6719,  3.6406,  1.6328,  3.1719,  2.1719,  0.8242,  4.1562,  3.8750],
        [ 0.0000, -0.6914, -0.4805, -1.2578, -1.1641,  0.0894, -0.2520, -0.0139, -0.6055, -0.6016, -0.8984, -0.4766,  0.1914, -0.6016, -0.3496],
        [ 0.0000, -2.7969, -3.5938, -5.3750, -3.6562, -0.1650, -1.0859, -2.1562, -1.2188, -1.5703, -1.0938, -1.7188, -1.3125, -1.5078, -1.5312],
        [ 0.0000,  4.6250,  5.4375,  8.8750,  6.0312,  2.5625,  2.2969,  2.7812,  2.7188,  2.6094,  2.5625,  1.7422,  1.0469,  3.6250,  2.7812],
        [ 0.0000,  1.3125,  2.6250,  2.4844,  1.9922,  1.0234,  0.2832,  1.3438,  1.0312,  1.1562,  0.3828,  0.1138,  0.4316,  1.2266,  0.4844]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0034],
        [0.3386],
        [0.1042],
        [0.0026],
        [0.0016],
        [0.0142],
        [0.2358],
        [0.0023],
        [0.0405],
        [0.0011],
        [0.1205],
        [0.1192],
        [0.0015],
        [0.0243]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4609,     0.5391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4297,     0.5664,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1748,     0.3672,     0.1055,     0.3516,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.0035,     0.2207,     0.7695,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.0031,     0.2012,     0.7891,     0.0005,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0020,     0.1475,     0.8477,     0.0004,     0.0003,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1021,     0.1084,     0.0025,     0.0006,     0.2949,     0.3281,     0.1533,     0.0093,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0120,     0.0099,     0.2812,     0.6055,     0.0021,     0.0019,     0.0042,     0.0806,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.0112,     0.0649,     0.8711,     0.0023,     0.0020,     0.0042,     0.0271,     0.0025,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0129,     0.0108,     0.2793,     0.5898,     0.0022,     0.0021,     0.0045,     0.0762,     0.0025,     0.0177,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0405,     0.0289,     0.3008,     0.2246,     0.0222,     0.0211,     0.0288,     0.2109,     0.0212,     0.0376,     0.0209,     0.0413,     0.0000,     0.0000,     0.0000],
        [    0.0742,     0.0645,     0.0874,     0.0586,     0.0742,     0.0732,     0.0933,     0.1001,     0.0767,     0.0806,     0.0757,     0.0564,     0.0850,     0.0000,     0.0000],
        [    0.0146,     0.0125,     0.2812,     0.5508,     0.0027,     0.0026,     0.0056,     0.0713,     0.0030,     0.0216,     0.0030,     0.0125,     0.0151,     0.0028,     0.0000],
        [    0.0026,     0.0036,     0.2891,     0.6445,     0.0011,     0.0010,     0.0023,     0.0339,     0.0010,     0.0097,     0.0010,     0.0031,     0.0043,     0.0009,     0.0022]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0090,  0.0112,  ..., -0.0022, -0.0348, -0.0220],
        [-0.0308,  0.0034, -0.0110,  ..., -0.0083, -0.0140, -0.0113],
        [-0.0135,  0.0053,  0.0364,  ..., -0.0117, -0.0393,  0.0042],
        ...,
        [ 0.0345,  0.0175,  0.0285,  ..., -0.0127,  0.0195, -0.0233],
        [ 0.0164, -0.0154,  0.0170,  ..., -0.0068,  0.0148,  0.0036],
        [ 0.0339,  0.0156,  0.0131,  ..., -0.0571,  0.0423, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-0.0291, -0.3789, -1.5391,  1.0156,  1.0625,  0.5234, -0.9414, -0.9531,  0.1235, -0.5586,  0.1074, -0.0557, -0.4902, -0.3867, -0.1416,  0.7031,  1.1484,  0.5586,  0.1523,  0.6836,  0.2100,  0.3672,  1.0234,  0.5156, -0.4531, -0.2715, -0.9766,  0.1377, -0.5430, -0.2139, -0.0052, -0.3672,
         0.1816,  0.7773, -1.2188, -1.2891, -0.1357, -1.0703,  0.7305,  0.5469, -0.5117,  0.1680,  0.5430,  1.4141,  0.2812,  0.3203,  0.1982, -0.1865, -0.5586,  0.3945,  0.2197, -0.8359,  0.6875, -0.5156, -0.6523, -0.7422,  0.2578, -0.7734, -0.0330, -0.3984, -0.9531,  0.7852,  0.3965, -0.7266],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0155,  0.0055,  0.0129,  ...,  0.0054, -0.0118,  0.0171],
        [-0.0527,  0.0007, -0.0069,  ...,  0.0053,  0.0172, -0.0545],
        [ 0.0195, -0.0013,  0.0161,  ..., -0.0110,  0.0082, -0.0099],
        ...,
        [ 0.0112,  0.0072,  0.0216,  ...,  0.0106,  0.0084,  0.0069],
        [ 0.0227, -0.0423, -0.0012,  ...,  0.0299,  0.0172, -0.0216],
        [ 0.0283,  0.0065,  0.0136,  ...,  0.0279,  0.0214, -0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1504,  0.6641, -0.8438,  0.2393, -0.1157,  0.5195,  1.8906, -0.6523, -0.6641,  0.0089, -1.2656,  0.3965,  0.7109, -0.0542, -1.5078,  1.7109, -1.4141, -0.4668,  0.3086, -0.3789, -0.3691, -0.9375, -0.8672,  0.3320, -0.0801,  1.0781, -0.0444, -0.0108,  0.3613, -0.9062,  0.4629, -1.1172,
         0.1719, -0.4238, -0.1758, -0.0488,  0.3945, -1.3672, -0.1650,  1.3828, -0.8281,  0.8945, -0.9727,  0.4551, -0.5273,  1.5078, -1.5938, -1.4922, -1.0078, -0.6328, -0.0302, -1.2188,  1.6328,  1.7188,  1.0078,  1.0391, -0.1729,  0.6250,  0.0327, -0.0605,  0.1572, -0.4961, -1.4922,  0.9727],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1572,     -0.5156,     -1.9766,     -0.6250,     -0.3867,     -0.3633,     -1.6953,     -0.4766,     -0.0811,     -0.3066,     -0.2129,      0.3164,     -0.4395,     -0.8242],
        [     0.0000,      0.2793,     -5.0625,     -5.0938,      1.1797,      1.2734,      0.5938,     -3.4531,      1.2734,     -0.8672,      1.1875,     -0.2578,     -1.2734,      1.2734,      0.0172],
        [     0.0000,      0.7422,     -0.5039,      0.6992,      0.5859,      0.6445,      0.5742,     -0.3164,      0.6445,      0.2969,      0.7695,      0.3477,     -0.3770,      0.6133,      0.7695],
        [     0.0000,     -0.1465,      4.0000,      5.2500,     -1.9141,     -2.0469,     -1.1406,      2.6094,     -1.8047,      0.3145,     -1.8594,     -0.0483,     -0.1299,     -1.9297,     -1.1016],
        [     0.0000,     -0.2314,      3.9375,      5.3125,     -2.0625,     -2.2188,     -1.2734,      2.7969,     -1.9297,      0.1709,     -2.0000,     -0.1016,     -0.2012,     -2.0625,     -1.2109],
        [     0.0000,     -0.0154,      4.2812,      6.0000,     -1.7422,     -1.8672,     -0.9062,      2.5000,     -1.6641,      0.5742,     -1.7031,     -0.0048,     -0.0630,     -1.7891,     -0.7461],
        [     0.0000,      0.0608,     -3.7031,     -5.0625,      1.0625,      1.1641,      0.4062,     -2.3906,      1.1172,     -0.5547,      1.1328,     -0.1436,      0.0199,      1.2500,      0.0128],
        [     0.0000,     -0.1885,      3.1562,      3.9219,     -1.7578,     -1.8359,     -1.0469,      1.9062,     -1.6484,      0.2871,     -1.6719,     -0.0952,     -0.0757,     -1.7344,     -1.0625],
        [     0.0000,      0.5234,      2.2812,      4.8750,     -1.0703,     -1.2188,     -0.4648,      1.4062,     -0.9805,     -0.0498,     -0.9570,      0.2539,     -0.4004,     -1.0938,     -0.2109],
        [     0.0000,     -0.1758,      3.0781,      3.8281,     -1.7734,     -1.8281,     -1.0547,      1.7734,     -1.6562,      0.3184,     -1.6641,     -0.0544,      0.0393,     -1.7344,     -1.0625],
        [     0.0000,     -0.3359,      2.0156,      1.7109,     -0.5977,     -0.6484,     -0.3418,      1.6484,     -0.6445,     -0.0767,     -0.6602,      0.0175,      0.9062,     -0.6523,     -0.2432],
        [     0.0000,     -0.1387,      0.1670,     -0.2354,      0.0040,     -0.0116,      0.2314,      0.3027,      0.0337,      0.0835,      0.0222,     -0.2754,      0.1338,      0.1328,      0.1475],
        [     0.0000,     -0.1641,      2.9531,      3.6250,     -1.6875,     -1.7344,     -0.9688,      1.5781,     -1.5859,      0.3887,     -1.6016,     -0.1572,      0.0277,     -1.6562,     -1.0078],
        [     0.0000,      0.3418,      4.7188,      5.5312,     -0.8594,     -0.9805,     -0.1055,      2.5781,     -0.9648,      1.3281,     -0.9219,      0.1836,      0.5156,     -1.0000,     -0.1387]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4583],
        [0.3092],
        [0.1076],
        [0.0846],
        [0.0802],
        [0.0520],
        [0.2238],
        [0.0677],
        [0.0394],
        [0.0600],
        [0.1073],
        [0.1179],
        [0.0481],
        [0.0223]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4609,     0.5391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3945,     0.6016,     0.0038,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0728,     0.1465,     0.1748,     0.6055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0108,     0.0090,     0.4844,     0.4941,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0100,     0.0079,     0.4648,     0.5156,     0.0015,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0083,     0.0079,     0.4336,     0.5430,     0.0017,     0.0016,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1030,     0.1211,     0.0135,     0.0051,     0.2617,     0.2773,     0.1895,     0.0289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0206,     0.0171,     0.4902,     0.3711,     0.0041,     0.0039,     0.0072,     0.0815,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.0039,     0.1953,     0.7656,     0.0007,     0.0006,     0.0013,     0.0265,     0.0007,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0272,     0.0228,     0.4668,     0.3555,     0.0056,     0.0055,     0.0097,     0.0811,     0.0061,     0.0140,     0.0063,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0119,     0.0082,     0.4707,     0.3047,     0.0039,     0.0035,     0.0059,     0.1709,     0.0036,     0.0078,     0.0035,     0.0052,     0.0000,     0.0000,     0.0000],
        [    0.0295,     0.0240,     0.3516,     0.2578,     0.0165,     0.0145,     0.0255,     0.1846,     0.0162,     0.0265,     0.0160,     0.0142,     0.0216,     0.0000,     0.0000],
        [    0.0359,     0.0306,     0.4453,     0.3047,     0.0084,     0.0083,     0.0145,     0.0791,     0.0091,     0.0205,     0.0095,     0.0101,     0.0139,     0.0097,     0.0000],
        [    0.0154,     0.0197,     0.5430,     0.2754,     0.0066,     0.0066,     0.0131,     0.0486,     0.0062,     0.0233,     0.0068,     0.0077,     0.0132,     0.0065,     0.0095]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0090,  0.0112,  ..., -0.0022, -0.0348, -0.0220],
        [-0.0308,  0.0034, -0.0110,  ..., -0.0083, -0.0140, -0.0113],
        [-0.0135,  0.0053,  0.0364,  ..., -0.0117, -0.0393,  0.0042],
        ...,
        [ 0.0345,  0.0175,  0.0285,  ..., -0.0127,  0.0195, -0.0233],
        [ 0.0164, -0.0154,  0.0170,  ..., -0.0068,  0.0148,  0.0036],
        [ 0.0339,  0.0156,  0.0131,  ..., -0.0571,  0.0423, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-0.0571, -0.1309, -1.2500,  0.6406,  0.6914,  0.8789, -1.3281, -0.6602, -0.2314, -0.8633,  0.4297, -0.5586, -0.0903, -0.3125,  0.0129,  0.7578,  1.1406,  0.0913,  0.1357,  0.4004,  0.8164,  0.2539,  1.2188, -0.0903, -0.0674,  0.4297, -1.1328,  0.0225, -0.5430,  0.0972,  0.0034, -0.3672,
         0.7305,  1.3984, -0.9023, -0.6758, -0.2178, -0.5781,  0.3730,  0.4512, -0.3203, -0.2285,  0.6797,  1.3516,  0.4609,  0.2393,  0.2139, -0.0977, -0.1807,  0.3066,  0.3848, -0.4727,  0.4336, -0.3633, -0.8359, -0.4219,  0.1963, -0.6719,  0.1787, -0.2559, -0.4492,  0.3691,  0.2373, -0.5508],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0155,  0.0055,  0.0129,  ...,  0.0054, -0.0118,  0.0171],
        [-0.0527,  0.0007, -0.0069,  ...,  0.0053,  0.0172, -0.0545],
        [ 0.0195, -0.0013,  0.0161,  ..., -0.0110,  0.0082, -0.0099],
        ...,
        [ 0.0112,  0.0072,  0.0216,  ...,  0.0106,  0.0084,  0.0069],
        [ 0.0227, -0.0423, -0.0012,  ...,  0.0299,  0.0172, -0.0216],
        [ 0.0283,  0.0065,  0.0136,  ...,  0.0279,  0.0214, -0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4277,  0.4395, -0.5117,  0.0996, -0.3516,  0.3672,  1.3125, -0.4121, -1.0156,  0.0216, -0.4609,  0.8984,  0.4043, -0.2871, -1.0547,  2.0469, -1.6875, -0.2246,  0.5898, -0.4180,  0.0332, -0.8164, -0.6875, -0.1416, -0.0134,  1.5000,  0.1357, -0.2520,  0.8320, -0.6094,  0.0312, -0.4805,
         0.1445,  0.0864, -0.2070, -0.2197,  0.4844, -1.1562, -0.3828,  1.2891, -1.0234,  0.3496, -0.8477,  0.0219, -0.4434,  1.5000, -1.4219, -0.9805, -0.6758, -0.5742,  0.4473, -0.8398,  1.7266,  1.8359,  1.0859,  0.6836, -0.9844,  0.8477, -0.2539,  0.3945,  0.3047, -0.6523, -1.1172,  0.7344],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1562, -0.0640, -1.2266, -0.5391, -0.3340, -0.3359, -1.4766, -0.4023, -0.0437, -0.2734, -0.1035,  0.2480, -0.3652, -0.3340],
        [ 0.0000,  0.4219, -4.6250, -4.0938,  1.1641,  1.2500,  0.5938, -3.0469,  1.2969, -0.3223,  1.2656,  0.6094, -0.2158,  1.3203,  0.5547],
        [ 0.0000,  0.7031,  0.8789,  2.1250,  0.2021,  0.2256,  0.3223,  0.5195,  0.2061,  0.4102,  0.2617,  0.2197, -0.3828,  0.1279,  0.3867],
        [ 0.0000, -0.1768,  3.8125,  3.8281, -1.7891, -1.8984, -1.2109,  1.8828, -1.7344, -0.9297, -1.7344, -1.6797, -1.5703, -1.6953, -1.3906],
        [ 0.0000, -0.2344,  3.8438,  3.9375, -1.9141, -2.0469, -1.3281,  2.0781, -1.8438, -1.0938, -1.8516, -1.7969, -1.7109, -1.7969, -1.4844],
        [ 0.0000, -0.0454,  3.9531,  4.1875, -1.5625, -1.6406, -0.9023,  1.6953, -1.5391, -0.4766, -1.5312, -1.4688, -1.2578, -1.5234, -1.1094],
        [ 0.0000,  0.1611, -2.0312, -3.0000,  0.9258,  0.9922,  0.6055, -1.2734,  0.9648,  0.3457,  1.0156,  0.8594,  1.2188,  1.0703,  0.6914],
        [ 0.0000, -0.1855,  3.1719,  2.8906, -1.6094, -1.6719, -1.0547,  1.3750, -1.5469, -0.7070, -1.5234, -1.4141, -1.1953, -1.4922, -1.1953],
        [ 0.0000,  0.3691,  4.2812,  5.6250, -1.3906, -1.5703, -0.7422,  2.2656, -1.4062, -0.7656, -1.3984, -1.3281, -1.6641, -1.4062, -0.9297],
        [ 0.0000, -0.1748,  2.8438,  2.5625, -1.5781, -1.6016, -1.0391,  1.0938, -1.4922, -0.6680, -1.4531, -1.3047, -1.0703, -1.4375, -1.1484],
        [ 0.0000, -0.3672,  3.6719,  3.2500, -1.1094, -1.2266, -0.6992,  2.6719, -1.1875, -0.4277, -1.2266, -0.8164,  0.0583, -1.1875, -0.9141],
        [ 0.0000, -0.2041,  2.4844,  2.1719, -0.5820, -0.7070, -0.1436,  1.8359, -0.5938, -0.1084, -0.6133, -0.7344, -0.3105, -0.4922, -0.2910],
        [ 0.0000, -0.1543,  2.5156,  2.1406, -1.4531, -1.4609, -0.9062,  0.7891, -1.3750, -0.5547, -1.3281, -1.2656, -0.9453, -1.3047, -1.0391],
        [ 0.0000,  0.2393,  3.5625,  2.8906, -0.8594, -0.8516, -0.1680,  1.1484, -0.9102,  0.4141, -0.8203, -0.6953, -0.1592, -0.8633, -0.4805]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4557],
        [0.3061],
        [0.0800],
        [0.0956],
        [0.0875],
        [0.0554],
        [0.2075],
        [0.0678],
        [0.0346],
        [0.0609],
        [0.0861],
        [0.0897],
        [0.0500],
        [0.0322]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.4824,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4551,     0.5039,     0.0400,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0212,     0.0598,     0.8945,     0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0854,     0.1211,     0.6133,     0.0649,     0.1147,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0415,     0.0767,     0.7227,     0.0330,     0.0688,     0.0569,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1396,     0.1108,     0.1572,     0.1953,     0.1260,     0.1748,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.0139,     0.9180,     0.0066,     0.0139,     0.0106,     0.0300,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0144,     0.9102,     0.0070,     0.0120,     0.0104,     0.0225,     0.0032,     0.0162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0054,     0.9727,     0.0014,     0.0040,     0.0027,     0.0106,     0.0003,     0.0020,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0098,     0.0234,     0.7539,     0.0157,     0.0215,     0.0210,     0.0339,     0.0101,     0.0430,     0.0275,     0.0391,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0068,     0.9570,     0.0016,     0.0056,     0.0035,     0.0184,     0.0003,     0.0020,     0.0007,     0.0022,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0093,     0.9453,     0.0015,     0.0071,     0.0039,     0.0277,     0.0002,     0.0014,     0.0005,     0.0018,     0.0002,     0.0001,     0.0000,     0.0000],
        [    0.0063,     0.0181,     0.8203,     0.0095,     0.0166,     0.0145,     0.0315,     0.0043,     0.0212,     0.0116,     0.0206,     0.0074,     0.0041,     0.0136,     0.0000],
        [    0.0041,     0.0146,     0.8867,     0.0052,     0.0131,     0.0096,     0.0325,     0.0015,     0.0082,     0.0038,     0.0089,     0.0021,     0.0011,     0.0048,     0.0028]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0090,  0.0112,  ..., -0.0022, -0.0348, -0.0220],
        [-0.0308,  0.0034, -0.0110,  ..., -0.0083, -0.0140, -0.0113],
        [-0.0135,  0.0053,  0.0364,  ..., -0.0117, -0.0393,  0.0042],
        ...,
        [ 0.0345,  0.0175,  0.0285,  ..., -0.0127,  0.0195, -0.0233],
        [ 0.0164, -0.0154,  0.0170,  ..., -0.0068,  0.0148,  0.0036],
        [ 0.0339,  0.0156,  0.0131,  ..., -0.0571,  0.0423, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-0.0430,  0.3125, -0.7891,  0.3125,  0.3789,  1.1016, -0.7734,  0.0864, -0.4863, -1.0938,  0.7812, -0.3203, -0.5039, -0.5898,  0.6133,  1.0312,  1.4297, -0.0278,  0.1270,  0.4707,  1.3125, -0.1045,  1.7109, -0.2812, -0.6914, -0.2559, -0.5195, -0.1836, -0.0569,  0.4180, -0.4473, -0.5859,
         1.4297,  1.0078, -1.0078, -1.3594, -0.3203, -0.1147, -0.3262,  0.6367,  0.4375, -0.6133,  1.2656,  1.2578,  0.7578,  0.4219,  0.4922, -0.1826, -0.4199, -0.0786,  1.4141, -0.5938,  0.1621, -0.2539, -1.4844, -1.0547,  0.0957, -1.0078,  0.1543,  0.7383, -0.7109, -0.5547,  0.2236,  0.0053],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0155,  0.0055,  0.0129,  ...,  0.0054, -0.0118,  0.0171],
        [-0.0527,  0.0007, -0.0069,  ...,  0.0053,  0.0172, -0.0545],
        [ 0.0195, -0.0013,  0.0161,  ..., -0.0110,  0.0082, -0.0099],
        ...,
        [ 0.0112,  0.0072,  0.0216,  ...,  0.0106,  0.0084,  0.0069],
        [ 0.0227, -0.0423, -0.0012,  ...,  0.0299,  0.0172, -0.0216],
        [ 0.0283,  0.0065,  0.0136,  ...,  0.0279,  0.0214, -0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8438,  1.1953, -1.2109,  1.4141, -0.5078,  0.4805,  1.2578, -0.7930, -1.2031, -0.5586, -1.1250,  0.0815, -0.2520, -0.0439, -1.8750,  1.8906, -1.8516,  0.2695,  1.3359, -0.1221, -0.4922, -1.5859, -1.4141,  1.1172, -0.9766, -0.3926,  0.5391, -0.8867,  0.1455, -1.3047,  0.1689, -1.3516,
         0.5430, -0.7969, -1.5000, -0.1416,  0.8047, -1.5781, -0.3398,  1.5078, -1.6641,  0.0684, -0.6719, -0.0182, -0.6875,  2.2031, -1.3516, -0.8086, -1.8516, -1.4688,  0.1299, -1.0469,  1.7891,  0.7617,  0.9492,  1.5234, -0.7031,  1.0312,  0.7188,  0.3379, -1.2266, -0.4004, -1.6641,  1.5469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0708,  1.2344, -0.1338,  0.0859,  0.1406,  0.3945, -0.3203,  0.5547,  0.2969,  0.6406,  0.2930,  0.1436,  0.5586,  0.2002],
        [ 0.0000,  0.1040, -2.4375,  0.1475,  0.0359,  0.1387, -0.4355,  0.3184, -0.1377,  0.1045, -0.1064,  0.5430,  0.8711,  0.1289,  0.3789],
        [ 0.0000,  1.0391,  3.7344,  0.1191,  0.8867,  0.6523,  1.6016, -0.8320,  0.4980, -0.0579,  0.5742, -0.4121, -0.8945,  0.1572, -0.2139],
        [ 0.0000,  0.3457,  1.9688, -0.2773,  0.2949,  0.1846,  0.8672, -0.7422,  0.2383, -0.1416,  0.3477, -0.1973, -0.4727,  0.1465, -0.1680],
        [ 0.0000,  0.6172,  2.8594, -0.2266,  0.5078,  0.3164,  1.2344, -0.9180,  0.2451, -0.2715,  0.3711, -0.4688, -0.8516,  0.0449, -0.3398],
        [ 0.0000, -0.2305,  0.1167,  0.3340, -0.1040,  0.2236, -0.3633,  0.9570,  1.3906,  1.6406,  1.2031,  2.0312,  1.9375,  1.5781,  1.6250],
        [ 0.0000,  0.9570,  5.1562,  0.2109,  0.9570,  0.6914,  1.7266, -0.6250,  0.6094, -0.0552,  0.6406, -0.5898, -1.1641,  0.1494, -0.2480],
        [ 0.0000,  1.2422,  5.3750,  0.5273,  1.0625,  0.9180,  1.6875, -0.2734,  1.3594,  0.7969,  1.2891,  0.3086, -0.3477,  0.8711,  0.4414],
        [ 0.0000,  1.8359,  7.0312,  0.5039,  1.5391,  1.1328,  2.5156, -1.0859,  0.8359,  0.0654,  0.8242, -0.7266, -1.5156,  0.0986, -0.3848],
        [ 0.0000,  0.8750,  4.3438,  0.4785,  0.7891,  0.7656,  1.2422,  0.0298,  1.4766,  1.0312,  1.3828,  0.7148,  0.1631,  1.1250,  0.7461],
        [ 0.0000,  1.6641,  6.6250,  0.1943,  1.4766,  0.9922,  2.6562, -1.5703,  0.4258, -0.5625,  0.5547, -1.3906, -2.1406, -0.2852, -0.9023],
        [ 0.0000,  1.6484,  6.2812, -0.1836,  1.3906,  0.7812,  2.7500, -2.1562, -0.2275, -1.3125,  0.0212, -2.2031, -2.9062, -0.9414, -1.6016],
        [ 0.0000,  1.0547,  4.8750,  0.4102,  0.9688,  0.8320,  1.6094, -0.3867,  1.2188,  0.6133,  1.1875,  0.1592, -0.4336,  0.7734,  0.3145],
        [ 0.0000,  1.2812,  5.3750,  0.2520,  1.1719,  0.8594,  2.0781, -1.0234,  0.7109, -0.0703,  0.7852, -0.6680, -1.2969,  0.1738, -0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2842],
        [0.2180],
        [0.0531],
        [0.0754],
        [0.0529],
        [0.0962],
        [0.0432],
        [0.0231],
        [0.0162],
        [0.0200],
        [0.0166],
        [0.0156],
        [0.0159],
        [0.0143]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5195,     0.4824,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4551,     0.4902,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0217,     0.0684,     0.8867,     0.0239,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0859,     0.1270,     0.5938,     0.0703,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0342,     0.0757,     0.7383,     0.0294,     0.0688,     0.0518,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1406,     0.1025,     0.1621,     0.2080,     0.1167,     0.1865,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.0146,     0.9219,     0.0047,     0.0147,     0.0093,     0.0297,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.0150,     0.9219,     0.0049,     0.0133,     0.0095,     0.0237,     0.0022,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.0095,     0.9531,     0.0020,     0.0079,     0.0045,     0.0175,     0.0005,     0.0019,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.0225,     0.8398,     0.0093,     0.0215,     0.0168,     0.0361,     0.0055,     0.0162,     0.0105,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.0120,     0.9336,     0.0022,     0.0107,     0.0054,     0.0295,     0.0004,     0.0015,     0.0009,     0.0015,     0.0005,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0140,     0.9219,     0.0018,     0.0118,     0.0051,     0.0388,     0.0002,     0.0009,     0.0005,     0.0009,     0.0002,     0.0001,     0.0000,     0.0000],
        [    0.0056,     0.0219,     0.8516,     0.0070,     0.0211,     0.0140,     0.0432,     0.0027,     0.0084,     0.0052,     0.0079,     0.0033,     0.0022,     0.0047,     0.0000],
        [    0.0047,     0.0209,     0.8711,     0.0052,     0.0198,     0.0114,     0.0476,     0.0014,     0.0047,     0.0029,     0.0046,     0.0017,     0.0011,     0.0026,     0.0021]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0034, -0.0090,  0.0112,  ..., -0.0022, -0.0348, -0.0220],
        [-0.0308,  0.0034, -0.0110,  ..., -0.0083, -0.0140, -0.0113],
        [-0.0135,  0.0053,  0.0364,  ..., -0.0117, -0.0393,  0.0042],
        ...,
        [ 0.0345,  0.0175,  0.0285,  ..., -0.0127,  0.0195, -0.0233],
        [ 0.0164, -0.0154,  0.0170,  ..., -0.0068,  0.0148,  0.0036],
        [ 0.0339,  0.0156,  0.0131,  ..., -0.0571,  0.0423, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0530,  0.2383, -0.7656,  0.3262,  0.3906,  1.0938, -0.7578,  0.0559, -0.3711, -1.0703,  0.7930, -0.2793, -0.5469, -0.6562,  0.6328,  0.9648,  1.4453, -0.0327,  0.0425,  0.4434,  1.3438,  0.0201,  1.7188, -0.3301, -0.6328, -0.2949, -0.5703, -0.1426,  0.0079,  0.5078, -0.5508, -0.6289,
         1.4141,  1.0547, -0.9883, -1.4062, -0.3770, -0.1318, -0.3594,  0.6445,  0.4707, -0.6055,  1.3203,  1.2656,  0.7695,  0.4473,  0.5039, -0.2168, -0.3516, -0.0364,  1.4141, -0.5586,  0.1465, -0.2852, -1.4609, -1.1562,  0.1309, -1.0312,  0.0972,  0.7188, -0.6406, -0.4785,  0.2793,  0.0583],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0155,  0.0055,  0.0129,  ...,  0.0054, -0.0118,  0.0171],
        [-0.0527,  0.0007, -0.0069,  ...,  0.0053,  0.0172, -0.0545],
        [ 0.0195, -0.0013,  0.0161,  ..., -0.0110,  0.0082, -0.0099],
        ...,
        [ 0.0112,  0.0072,  0.0216,  ...,  0.0106,  0.0084,  0.0069],
        [ 0.0227, -0.0423, -0.0012,  ...,  0.0299,  0.0172, -0.0216],
        [ 0.0283,  0.0065,  0.0136,  ...,  0.0279,  0.0214, -0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.8516,      1.2031,     -1.1797,      1.5234,     -0.4570,      0.4023,      1.4062,     -0.8242,     -1.1797,     -0.5586,     -1.2891,     -0.0004,     -0.1484,      0.0952,     -2.0156,      1.8438,     -1.8359,      0.2412,      1.4219,     -0.2139,     -0.6328,     -1.5469,
            -1.5469,      1.1406,     -0.8633,     -0.4453,      0.5391,     -0.8164,      0.1357,     -1.4219,      0.1562,     -1.4531,      0.6406,     -0.8555,     -1.5078,     -0.0723,      0.7539,     -1.6328,     -0.2832,      1.5156,     -1.8047,      0.1377,     -0.7031,     -0.1064,
            -0.6836,      2.2969,     -1.4062,     -0.9414,     -1.8594,     -1.5312,     -0.0669,     -1.0312,      1.8984,      0.7812,      0.9766,      1.4922,     -0.6523,      1.0000,      0.7930,      0.2197,     -1.1562,     -0.3340,     -1.7344,      1.6484], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0718,      1.2031,     -0.1099,      0.1436,      0.1895,      0.4199,      0.0076,      0.5117,      0.3164,      0.5703,      0.3125,      0.2314,      0.4043,      0.1709],
        [     0.0000,      0.0762,     -2.1250,      0.2041,     -0.0408,      0.1040,     -0.4434,      0.4355,      0.0500,      0.2412,      0.1562,      0.5859,      0.8203,      0.4238,      0.5430],
        [     0.0000,      1.1484,      3.7031,      0.0996,      1.0312,      0.6836,      1.6484,     -0.6250,      0.2451,     -0.0889,      0.2227,     -0.3711,     -0.7188,     -0.1396,     -0.2754],
        [     0.0000,      0.3926,      1.9297,     -0.2012,      0.3652,      0.2275,      0.8398,     -0.3262,      0.2559,      0.0138,      0.2852,     -0.0079,     -0.1846,      0.0967,     -0.0603],
        [     0.0000,      0.7930,      3.0781,     -0.1504,      0.7031,      0.4121,      1.3438,     -0.6406,      0.1377,     -0.1973,      0.1553,     -0.3809,     -0.6680,     -0.1631,     -0.3340],
        [     0.0000,     -0.3145,      0.1416,      0.3965,     -0.1855,      0.2871,     -0.5156,      1.6797,      1.8672,      1.8516,      1.7031,      2.2344,      2.2656,      1.8672,      1.7812],
        [     0.0000,      1.4062,      5.5312,      0.2559,      1.4062,      0.9531,      2.1094,     -0.7227,      0.3555,     -0.1128,      0.2617,     -0.6445,     -1.1094,     -0.2773,     -0.4590],
        [     0.0000,      1.5703,      5.6875,      0.4609,      1.4453,      1.1094,      2.0312,     -0.3340,      0.8711,      0.4160,      0.7070,     -0.0591,     -0.5273,      0.1777,     -0.0138],
        [     0.0000,      1.9531,      6.5625,      0.4180,      1.7734,      1.2031,      2.5781,     -0.9922,      0.3496,     -0.1226,      0.1953,     -0.7227,     -1.2578,     -0.4121,     -0.5508],
        [     0.0000,      1.2500,      4.8750,      0.3711,      1.2031,      0.9531,      1.7188,     -0.1650,      0.9258,      0.4844,      0.7891,      0.1074,     -0.2988,      0.3262,      0.1167],
        [     0.0000,      1.8359,      6.1875,      0.1187,      1.7266,      1.0312,      2.7344,     -1.5859,     -0.2236,     -0.7617,     -0.2559,     -1.4219,     -1.9688,     -0.9258,     -1.1094],
        [     0.0000,      1.8828,      6.0625,     -0.1621,      1.7109,      0.8594,      2.8906,     -2.2188,     -0.8672,     -1.4062,     -0.8164,     -2.1406,     -2.7031,     -1.5312,     -1.7031],
        [     0.0000,      1.3516,      5.0000,      0.2051,      1.3203,      0.9102,      2.0312,     -0.7500,      0.3984,     -0.0742,      0.3340,     -0.5312,     -0.9648,     -0.1934,     -0.4023],
        [     0.0000,      1.4922,      5.2188,      0.1025,      1.4375,      0.8906,      2.3125,     -1.2031,     -0.0034,     -0.4902,     -0.0233,     -1.0078,     -1.4766,     -0.5938,     -0.7969]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2682],
        [0.2011],
        [0.0511],
        [0.0729],
        [0.0471],
        [0.0930],
        [0.0333],
        [0.0216],
        [0.0159],
        [0.0189],
        [0.0157],
        [0.0141],
        [0.0154],
        [0.0143]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0820.:0.0850.:0.0947.:0.0613.:0.0972.:0.1001.:0.0603.:0.0684)
.
------
		(.:0.0850.:0.0947.:0.0613.:0.0972.:0.1001.:0.0603.:0.0684.:0.0718)
...............
@ 1550 train 7.7357 , allloss: 12.4024, dt: 1571.29ms, fracRes: 0.0045, norm(attn): 1.0000, norm(output): 0.0342, norm(x): 0.0377, norm(y): 0.9756, norm:18.1876, tok/sec: 83417.04, flops:32.50, batch-reuse:1
@ 1551 train 7.8099 , allloss: 14.3627, dt: 1157.78ms, fracRes: 0.0047, norm(attn): 1.0000, norm(output): 0.0354, norm(x): 0.0392, norm(y): 0.9759, norm:69.6127, tok/sec: 113210.14, flops:44.11, batch-reuse:1
@ 1552 train 7.7989 , allloss: 16.0367, dt: 1177.86ms, fracRes: 0.0058, norm(attn): 1.0234, norm(output): 0.0369, norm(x): 0.0412, norm(y): 0.9762, norm:135.1588, tok/sec: 111280.16, flops:43.35, batch-reuse:1
@ 1553 train 7.8144 , allloss: 14.1789, dt: 1187.64ms, fracRes: 0.0066, norm(attn): 1.1016, norm(output): 0.0339, norm(x): 0.0393, norm(y): 0.9764, norm:45.1081, tok/sec: 110363.70, flops:43.00, batch-reuse:1
@ 1554 train 7.7388 , allloss: 13.4292, dt: 1147.38ms, fracRes: 0.0082, norm(attn): 1.1172, norm(output): 0.0349, norm(x): 0.0416, norm(y): 0.9771, norm:21.9566, tok/sec: 114235.45, flops:44.51, batch-reuse:1
@ 1555 train 7.8163 , allloss: 12.4571, dt: 1168.41ms, fracRes: 0.0124, norm(attn): 1.1250, norm(output): 0.0361, norm(x): 0.0466, norm(y): 0.9781, norm:37.8122, tok/sec: 112180.00, flops:43.71, batch-reuse:1
@ 1556 train 7.9136 , allloss: 10.9668, dt: 1134.42ms, fracRes: 0.0186, norm(attn): 1.2891, norm(output): 0.0386, norm(x): 0.0539, norm(y): 0.9790, norm:84.5575, tok/sec: 115540.87, flops:45.01, batch-reuse:1
@ 1557 train 7.7950 , allloss: 11.1248, dt: 1176.88ms, fracRes: 0.0230, norm(attn): 1.2344, norm(output): 0.0398, norm(x): 0.0590, norm(y): 0.9793, norm:35.5065, tok/sec: 111372.30, flops:43.39, batch-reuse:1
@ 1558 train 7.6770 , allloss: 11.2749, dt: 1178.38ms, fracRes: 0.0260, norm(attn): 1.2344, norm(output): 0.0410, norm(x): 0.0622, norm(y): 0.9796, norm:24.6082, tok/sec: 111230.85, flops:43.34, batch-reuse:1
@ 1559 train 7.7250 , allloss: 12.2021, dt: 1155.44ms, fracRes: 0.0243, norm(attn): 1.1562, norm(output): 0.0425, norm(x): 0.0616, norm(y): 0.9801, norm:30.8356, tok/sec: 113438.86, flops:44.20, batch-reuse:1
@ 1560 train 7.7264 , allloss: 12.3929, dt: 1145.26ms, fracRes: 0.0216, norm(attn): 1.1172, norm(output): 0.0425, norm(x): 0.0597, norm(y): 0.9805, norm:30.6337, tok/sec: 114447.60, flops:44.59, batch-reuse:1
@ 1561 train 7.7702 , allloss: 12.9517, dt: 1161.79ms, fracRes: 0.0181, norm(attn): 1.0391, norm(output): 0.0430, norm(x): 0.0575, norm(y): 0.9807, norm:36.0039, tok/sec: 112818.77, flops:43.95, batch-reuse:1
@ 1562 train 7.7870 , allloss: 16.6436, dt: 1180.00ms, fracRes: 0.0152, norm(attn): 0.9375, norm(output): 0.0466, norm(x): 0.0584, norm(y): 0.9807, norm:50.2167, tok/sec: 111077.76, flops:43.28, batch-reuse:1
@ 1563 train 8.3663 , allloss: 29.7294, dt: 1158.22ms, fracRes: 0.0190, norm(attn): 0.8398, norm(output): 0.0752, norm(x): 0.0860, norm(y): 0.9806, norm:748.3278, tok/sec: 113166.77, flops:44.09, batch-reuse:1
@ 1564 train 8.2677 , allloss: 13.9918, dt: 1150.08ms, fracRes: 0.0251, norm(attn): 0.8828, norm(output): 0.0518, norm(x): 0.0700, norm(y): 0.9810, norm:55.0214, tok/sec: 113967.75, flops:44.40, batch-reuse:1
@ 1565 train 7.8175 , allloss: 12.1237, dt: 1147.13ms, fracRes: 0.0281, norm(attn): 0.9844, norm(output): 0.0454, norm(x): 0.0672, norm(y): 0.9811, norm:38.1487, tok/sec: 114260.90, flops:44.52, batch-reuse:1
@ 1566 train 7.8686 , allloss: 11.9555, dt: 1169.49ms, fracRes: 0.0295, norm(attn): 1.0391, norm(output): 0.0417, norm(x): 0.0652, norm(y): 0.9807, norm:49.8177, tok/sec: 112076.17, flops:43.66, batch-reuse:1
@ 1567 train 7.8382 , allloss: 13.0906, dt: 1186.49ms, fracRes: 0.0343, norm(attn): 1.1250, norm(output): 0.0391, norm(x): 0.0657, norm(y): 0.9802, norm:370.9580, tok/sec: 110470.64, flops:43.04, batch-reuse:1
@ 1568 train 7.9544 , allloss: 17.5353, dt: 1179.26ms, fracRes: 0.0364, norm(attn): 1.1953, norm(output): 0.0491, norm(x): 0.0694, norm(y): 0.9796, norm:29486.1133, tok/sec: 111147.94, flops:43.30, batch-reuse:1
@ 1569 train 7.7018 , allloss: 13.4342, dt: 1154.65ms, fracRes: 0.0416, norm(attn): 1.2891, norm(output): 0.0452, norm(x): 0.0730, norm(y): 0.9793, norm:260.9347, tok/sec: 113516.58, flops:44.23, batch-reuse:1
@ 1570 train 8.1605 , allloss: 25.5652, dt: 1161.02ms, fracRes: 0.0401, norm(attn): 1.3359, norm(output): 0.1582, norm(x): 0.1379, norm(y): 0.9786, norm:397.0795, tok/sec: 112894.04, flops:43.98, batch-reuse:1
@ 1571 train 7.8926 , allloss: 16.2705, dt: 1189.95ms, fracRes: 0.0340, norm(attn): 1.4219, norm(output): 0.0840, norm(x): 0.0891, norm(y): 0.9782, norm:1858.2112, tok/sec: 110148.99, flops:42.91, batch-reuse:1
@ 1572 train 7.7835 , allloss: 11.1861, dt: 1189.97ms, fracRes: 0.0292, norm(attn): 1.5000, norm(output): 0.0303, norm(x): 0.0548, norm(y): 0.9784, norm:43.7895, tok/sec: 110147.40, flops:42.91, batch-reuse:1
@ 1573 train 7.7730 , allloss: 11.4879, dt: 1183.57ms, fracRes: 0.0332, norm(attn): 1.4453, norm(output): 0.0294, norm(x): 0.0568, norm(y): 0.9781, norm:35.8548, tok/sec: 110743.31, flops:43.15, batch-reuse:1
@ 1574 train 7.7338 , allloss: 12.2811, dt: 1174.03ms, fracRes: 0.0429, norm(attn): 1.2734, norm(output): 0.0293, norm(x): 0.0628, norm(y): 0.9774, norm:74.4866, tok/sec: 111642.96, flops:43.50, batch-reuse:1
@ 1575 train 8.0644 , allloss: 27.5831, dt: 1162.53ms, fracRes: 0.0357, norm(attn): 1.3438, norm(output): 0.0532, norm(x): 0.0785, norm(y): 0.9777, norm:6422.7305, tok/sec: 112746.97, flops:43.93, batch-reuse:1
@ 1576 train 8.0576 , allloss: 20.0526, dt: 1165.79ms, fracRes: 0.0323, norm(attn): 1.3984, norm(output): 0.0391, norm(x): 0.0633, norm(y): 0.9772, norm:278.0336, tok/sec: 112432.07, flops:43.80, batch-reuse:1
@ 1577 train 7.6137 , allloss: 10.6194, dt: 1190.30ms, fracRes: 0.0130, norm(attn): 1.6172, norm(output): 0.0262, norm(x): 0.0366, norm(y): 0.9761, norm:57.4353, tok/sec: 110116.84, flops:42.90, batch-reuse:1
@ 1578 train 7.8475 , allloss: 10.0835, dt: 1172.00ms, fracRes: 0.0085, norm(attn): 1.9219, norm(output): 0.0286, norm(x): 0.0359, norm(y): 0.9773, norm:77.9135, tok/sec: 111836.30, flops:43.57, batch-reuse:1
@ 1579 train 7.6719 , allloss: 9.7332, dt: 1144.29ms, fracRes: 0.0070, norm(attn): 1.9062, norm(output): 0.0283, norm(x): 0.0345, norm(y): 0.9768, norm:61.1518, tok/sec: 114544.42, flops:44.63, batch-reuse:1
@ 1580 train 7.6870 , allloss: 9.9725, dt: 1143.02ms, fracRes: 0.0051, norm(attn): 1.7344, norm(output): 0.0276, norm(x): 0.0323, norm(y): 0.9755, norm:63.0203, tok/sec: 114671.95, flops:44.68, batch-reuse:1
@ 1581 train 7.7491 , allloss: 10.5481, dt: 1135.57ms, fracRes: 0.0066, norm(attn): 1.6797, norm(output): 0.0294, norm(x): 0.0349, norm(y): 0.9760, norm:71.0251, tok/sec: 115423.85, flops:44.97, batch-reuse:1
@ 1582 train 7.7106 , allloss: 11.7401, dt: 1157.62ms, fracRes: 0.0091, norm(attn): 1.5703, norm(output): 0.0422, norm(x): 0.0427, norm(y): 0.9767, norm:77.6310, tok/sec: 113225.58, flops:44.11, batch-reuse:1
@ 1583 train 7.6572 , allloss: 11.0443, dt: 1156.08ms, fracRes: 0.0098, norm(attn): 1.4844, norm(output): 0.0327, norm(x): 0.0396, norm(y): 0.9773, norm:83.1650, tok/sec: 113376.66, flops:44.17, batch-reuse:1
@ 1584 train 7.6221 , allloss: 11.8927, dt: 1150.46ms, fracRes: 0.0084, norm(attn): 1.3906, norm(output): 0.0366, norm(x): 0.0413, norm(y): 0.9776, norm:1276.0721, tok/sec: 113929.65, flops:44.39, batch-reuse:1
@ 1585 train 7.7357 , allloss: 11.1805, dt: 1130.97ms, fracRes: 0.0064, norm(attn): 1.4062, norm(output): 0.0393, norm(x): 0.0435, norm(y): 0.9785, norm:57.4893, tok/sec: 115893.53, flops:45.15, batch-reuse:1
@ 1586 train 7.6977 , allloss: 11.1940, dt: 1152.02ms, fracRes: 0.0058, norm(attn): 1.3828, norm(output): 0.0427, norm(x): 0.0467, norm(y): 0.9791, norm:51.3653, tok/sec: 113775.80, flops:44.33, batch-reuse:1
@ 1587 train 7.7610 , allloss: 10.9726, dt: 1155.32ms, fracRes: 0.0061, norm(attn): 1.3828, norm(output): 0.0476, norm(x): 0.0519, norm(y): 0.9798, norm:67.6635, tok/sec: 113450.33, flops:44.20, batch-reuse:1
@ 1588 train 7.7925 , allloss: 12.8593, dt: 1143.41ms, fracRes: 0.0086, norm(attn): 1.3438, norm(output): 0.0669, norm(x): 0.0646, norm(y): 0.9803, norm:85.2171, tok/sec: 114632.91, flops:44.66, batch-reuse:1
@ 1589 train 7.9132 , allloss: 15.2288, dt: 1166.14ms, fracRes: 0.0137, norm(attn): 1.3438, norm(output): 0.1113, norm(x): 0.0929, norm(y): 0.9809, norm:107.8796, tok/sec: 112398.37, flops:43.79, batch-reuse:1
@ 1590 train 7.9657 , allloss: 15.7081, dt: 1154.83ms, fracRes: 0.0158, norm(attn): 1.2969, norm(output): 0.1172, norm(x): 0.1007, norm(y): 0.9811, norm:4766.9380, tok/sec: 113499.43, flops:44.22, batch-reuse:1
@ 1591 train 8.2328 , allloss: 11.7072, dt: 1129.30ms, fracRes: 0.0120, norm(attn): 1.3672, norm(output): 0.0757, norm(x): 0.0813, norm(y): 0.9818, norm:154.1872, tok/sec: 116065.20, flops:45.22, batch-reuse:1
@ 1592 train 8.4546 , allloss: 11.9854, dt: 1151.24ms, fracRes: 0.0127, norm(attn): 1.3906, norm(output): 0.0820, norm(x): 0.0887, norm(y): 0.9823, norm:171.4638, tok/sec: 113852.52, flops:44.36, batch-reuse:1
@ 1593 train 8.3542 , allloss: 12.5272, dt: 1143.10ms, fracRes: 0.0161, norm(attn): 1.3750, norm(output): 0.0889, norm(x): 0.0977, norm(y): 0.9825, norm:158.7947, tok/sec: 114663.73, flops:44.67, batch-reuse:1
@ 1594 train 7.9204 , allloss: 13.3529, dt: 1143.68ms, fracRes: 0.0210, norm(attn): 1.2734, norm(output): 0.0918, norm(x): 0.1050, norm(y): 0.9823, norm:105.4862, tok/sec: 114605.50, flops:44.65, batch-reuse:1
@ 1595 train 7.8852 , allloss: 16.1057, dt: 1141.41ms, fracRes: 0.0251, norm(attn): 1.1953, norm(output): 0.0952, norm(x): 0.1120, norm(y): 0.9822, norm:73.0919, tok/sec: 114833.78, flops:44.74, batch-reuse:1
@ 1596 train 7.7911 , allloss: 17.5616, dt: 1154.63ms, fracRes: 0.0305, norm(attn): 1.1562, norm(output): 0.1006, norm(x): 0.1194, norm(y): 0.9823, norm:73.2973, tok/sec: 113518.20, flops:44.23, batch-reuse:1
@ 1597 train 7.7629 , allloss: 16.4221, dt: 1143.55ms, fracRes: 0.0374, norm(attn): 1.1484, norm(output): 0.1074, norm(x): 0.1324, norm(y): 0.9827, norm:81.4759, tok/sec: 114618.97, flops:44.66, batch-reuse:1
@ 1598 train 7.8573 , allloss: 15.5881, dt: 1158.75ms, fracRes: 0.0460, norm(attn): 1.1797, norm(output): 0.1143, norm(x): 0.1458, norm(y): 0.9831, norm:68.6670, tok/sec: 113115.01, flops:44.07, batch-reuse:1
@ 1599 train 8.2268 , allloss: 15.1722, dt: 1135.31ms, fracRes: 0.0599, norm(attn): 1.2656, norm(output): 0.1226, norm(x): 0.1629, norm(y): 0.9836, norm:101.4559, tok/sec: 115450.27, flops:44.98, batch-reuse:1
@ 1600 train 8.3341 , allloss: 14.6087, dt: 1149.96ms, fracRes: 0.0680, norm(attn): 1.2422, norm(output): 0.1260, norm(x): 0.1713, norm(y): 0.9838, norm:168.2591, tok/sec: 113979.59, flops:44.41, batch-reuse:1
@ 1601 train 8.3629 , allloss: 14.7324, dt: 1168.70ms, fracRes: 0.0697, norm(attn): 1.2500, norm(output): 0.1328, norm(x): 0.1763, norm(y): 0.9838, norm:165.0007, tok/sec: 112151.67, flops:43.69, batch-reuse:1
@ 1602 train 8.1502 , allloss: 14.9131, dt: 1166.41ms, fracRes: 0.0701, norm(attn): 1.1797, norm(output): 0.1348, norm(x): 0.1789, norm(y): 0.9835, norm:95.4950, tok/sec: 112372.27, flops:43.78, batch-reuse:1
@ 1603 train 7.9830 , allloss: 14.8244, dt: 1147.10ms, fracRes: 0.0694, norm(attn): 1.1328, norm(output): 0.1328, norm(x): 0.1776, norm(y): 0.9834, norm:70.9222, tok/sec: 114263.99, flops:44.52, batch-reuse:1
@ 1604 train 7.8948 , allloss: 14.8887, dt: 1165.02ms, fracRes: 0.0681, norm(attn): 1.1172, norm(output): 0.1309, norm(x): 0.1741, norm(y): 0.9834, norm:75.2805, tok/sec: 112506.39, flops:43.83, batch-reuse:1
@ 1605 train 7.7537 , allloss: 14.9981, dt: 1178.48ms, fracRes: 0.0671, norm(attn): 1.1172, norm(output): 0.1240, norm(x): 0.1688, norm(y): 0.9834, norm:94.3656, tok/sec: 111221.40, flops:43.33, batch-reuse:1
@ 1606 train 7.7623 , allloss: 17.5612, dt: 1179.69ms, fracRes: 0.0586, norm(attn): 1.1172, norm(output): 0.1191, norm(x): 0.1617, norm(y): 0.9831, norm:117.7191, tok/sec: 111107.48, flops:43.29, batch-reuse:1
@ 1607 train 7.9187 , allloss: 18.1465, dt: 1197.71ms, fracRes: 0.0628, norm(attn): 1.1328, norm(output): 0.1221, norm(x): 0.1668, norm(y): 0.9829, norm:130.5303, tok/sec: 109435.50, flops:42.64, batch-reuse:1
@ 1608 train 8.6323 , allloss: 18.2435, dt: 1170.59ms, fracRes: 0.0731, norm(attn): 1.2031, norm(output): 0.1289, norm(x): 0.1789, norm(y): 0.9829, norm:320.9901, tok/sec: 111970.94, flops:43.62, batch-reuse:1
@ 1609 train 8.9111 , allloss: 19.6508, dt: 1160.44ms, fracRes: 0.0831, norm(attn): 1.2422, norm(output): 0.1328, norm(x): 0.1895, norm(y): 0.9828, norm:412.5205, tok/sec: 112950.70, flops:44.01, batch-reuse:1
@ 1610 train 8.6096 , allloss: 23.5929, dt: 1154.55ms, fracRes: 0.0903, norm(attn): 1.2188, norm(output): 0.1348, norm(x): 0.1961, norm(y): 0.9827, norm:195.9879, tok/sec: 113526.47, flops:44.23, batch-reuse:1
@ 1611 train 8.2289 , allloss: 26.1396, dt: 1133.52ms, fracRes: 0.0890, norm(attn): 1.1953, norm(output): 0.1367, norm(x): 0.1967, norm(y): 0.9826, norm:273.2991, tok/sec: 115632.93, flops:45.05, batch-reuse:1
@ 1612 train 9.2159 , allloss: 19.3292, dt: 1142.91ms, fracRes: 0.0893, norm(attn): 1.2500, norm(output): 0.1406, norm(x): 0.1990, norm(y): 0.9822, norm:816.3118, tok/sec: 114683.01, flops:44.68, batch-reuse:1
@ 1613 train 9.5671 , allloss: 18.0761, dt: 1138.44ms, fracRes: 0.0855, norm(attn): 1.2734, norm(output): 0.1416, norm(x): 0.1968, norm(y): 0.9820, norm:746.1746, tok/sec: 115133.43, flops:44.86, batch-reuse:1
@ 1614 train 8.2181 , allloss: 19.3281, dt: 1147.76ms, fracRes: 0.0804, norm(attn): 1.2188, norm(output): 0.1445, norm(x): 0.1948, norm(y): 0.9817, norm:432.1504, tok/sec: 114197.81, flops:44.49, batch-reuse:1
@ 1615 train 8.1955 , allloss: 25.8183, dt: 1154.08ms, fracRes: 0.0886, norm(attn): 1.1328, norm(output): 0.1357, norm(x): 0.1893, norm(y): 0.9822, norm:227.0429, tok/sec: 113572.28, flops:44.25, batch-reuse:1
@ 1616 train 7.9972 , allloss: 20.1815, dt: 1170.00ms, fracRes: 0.0752, norm(attn): 1.1250, norm(output): 0.1543, norm(x): 0.1959, norm(y): 0.9815, norm:112.2473, tok/sec: 112027.78, flops:43.65, batch-reuse:1
@ 1617 train 8.5985 , allloss: 24.3663, dt: 1159.88ms, fracRes: 0.0737, norm(attn): 1.1406, norm(output): 0.1514, norm(x): 0.1920, norm(y): 0.9813, norm:183.1514, tok/sec: 113004.34, flops:44.03, batch-reuse:1
@ 1618 train 8.8681 , allloss: 24.4242, dt: 1147.10ms, fracRes: 0.0708, norm(attn): 1.1953, norm(output): 0.1533, norm(x): 0.1910, norm(y): 0.9809, norm:181.7678, tok/sec: 114263.61, flops:44.52, batch-reuse:1
@ 1619 train 8.6379 , allloss: 17.8638, dt: 1141.47ms, fracRes: 0.0704, norm(attn): 1.1953, norm(output): 0.1562, norm(x): 0.1955, norm(y): 0.9804, norm:101.8266, tok/sec: 114827.83, flops:44.74, batch-reuse:1
@ 1620 train 8.4919 , allloss: 17.6946, dt: 1156.43ms, fracRes: 0.0702, norm(attn): 1.2188, norm(output): 0.1465, norm(x): 0.1874, norm(y): 0.9802, norm:107.2159, tok/sec: 113341.81, flops:44.16, batch-reuse:1
@ 1621 train 8.1965 , allloss: 26.9211, dt: 1159.33ms, fracRes: 0.0661, norm(attn): 1.2266, norm(output): 0.1465, norm(x): 0.1858, norm(y): 0.9804, norm:126.8997, tok/sec: 113058.72, flops:44.05, batch-reuse:1
@ 1622 train 11.0673 , allloss: 82.5605, dt: 1164.45ms, fracRes: 0.0298, norm(attn): 1.2812, norm(output): 0.1748, norm(x): 0.1733, norm(y): 0.9801, norm:1143.1392, tok/sec: 112560.86, flops:43.85, batch-reuse:1
@ 1623 train 10.5078 , allloss: 368.8889, dt: 1184.86ms, fracRes: 0.0351, norm(attn): 1.4219, norm(output): 1.8516, norm(x): 1.4280, norm(y): 0.9812, norm:824.1090, tok/sec: 110622.35, flops:43.10, batch-reuse:1
@ 1624 train 10.3315 , allloss: 228.3624, dt: 1182.38ms, fracRes: 0.0346, norm(attn): 1.4922, norm(output): 2.1562, norm(x): 1.7487, norm(y): 0.9813, norm:757.1049, tok/sec: 110853.91, flops:43.19, batch-reuse:1
@ 1625 train 10.1239 , allloss: 203.1202, dt: 1144.67ms, fracRes: 0.0316, norm(attn): 1.4922, norm(output): 2.2969, norm(x): 1.9004, norm(y): 0.9815, norm:964.6782, tok/sec: 114505.98, flops:44.61, batch-reuse:1
@ 1626 train 9.8201 , allloss: 183.3250, dt: 1182.07ms, fracRes: 0.0296, norm(attn): 1.4844, norm(output): 1.9766, norm(x): 1.6903, norm(y): 0.9816, norm:979.3490, tok/sec: 110883.05, flops:43.20, batch-reuse:1
@ 1627 train 9.3863 , allloss: 164.6461, dt: 1179.82ms, fracRes: 0.0239, norm(attn): 1.3984, norm(output): 1.4531, norm(x): 1.2739, norm(y): 0.9820, norm:806.0576, tok/sec: 111095.09, flops:43.28, batch-reuse:1
@ 1628 train 9.1959 , allloss: 212.4160, dt: 1144.91ms, fracRes: 0.0219, norm(attn): 1.3750, norm(output): 0.8164, norm(x): 0.7820, norm(y): 0.9823, norm:5513.5586, tok/sec: 114482.23, flops:44.60, batch-reuse:1
