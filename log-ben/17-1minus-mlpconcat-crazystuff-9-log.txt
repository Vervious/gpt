Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.00015
Experiment name: 17-1minus-mlpconcat-crazystuff-9
MLPSCALE: 4
Experiment description: 
```
Transformer, max LR 0.00015 n_layer 12
Setting:
==machine code======
class BenExecute(nn.Module):

    def __init__(self, config):
        super().__init__()
        self.mlp = MLPConcat(config)
        # self.ln_2 = nn.LayerNorm(config.n_embd, elementwise_affine=ELEMENTWISEAFFINE)

    
    def forward(self, program, attn):
        return self.mlp(program, attn)
==machine modules======
        self.compiler = BenCompilerNoOp(config)
        self.execute = BenExecute(config)
==block logic======
        y = self.ln_1(x)
        attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
        program = self.compiler(y)
        machineOutput = self.execute(program, attn)
        newx = xWeights * x + (1 - xWeights) * machineOutput
==loss computation======
                x, metadata = block(x,print_weights=print_weights,step=i)
                _x_total = x
                _in = x.detach()
                _x, _ = block(_in,print_weights=False) # Do again... lol
                _xtraloss = _xtraloss + (1 - F.cosine_similarity(_x, _in, dim=-1).mean())
========
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
ATTENTION_SINK=True
IDENTITY_LOSS=True
```
![caption](img/17-1minus-mlpconcat-crazystuff-9.jpg)

Warmup steps: 1000
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 50, with 66,048 parameters
@ 0 train 10.9892 , allloss: 21.6262, dt: 2918.53ms, fracRes: 0.0062, norm(attn): 0.0317, norm(output): 0.0728, norm(x): 0.0688, norm(y): 0.9993, norm:20.6540, tok/sec: 44910.35, flops:47.13, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4473, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3066, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.2158, 0.2793, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.1299, 0.2402, 0.1904, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1758, 0.1514, 0.2041, 0.1621, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.2021, 0.1484, 0.1328, 0.1416, 0.1396, 0.0811, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.1279, 0.1221, 0.1118, 0.1494, 0.1172, 0.0859, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1475, 0.1201, 0.0830, 0.0840, 0.1113, 0.1157, 0.1338, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.0933, 0.1060, 0.0991, 0.1152, 0.1157, 0.0923, 0.1099, 0.1289, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0962, 0.0762, 0.0952, 0.0530, 0.0747, 0.0864, 0.1074, 0.1377, 0.1226, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0752, 0.0918, 0.0815, 0.0786, 0.0640, 0.0732, 0.1016, 0.0635, 0.1211, 0.0581, 0.1206, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0718, 0.0427, 0.0869, 0.1084, 0.0591, 0.0498, 0.1021, 0.1138, 0.0410, 0.0884, 0.0581, 0.1079, 0.0000, 0.0000],
        [0.0718, 0.1118, 0.0781, 0.0762, 0.0474, 0.0625, 0.0801, 0.1118, 0.0698, 0.0669, 0.0366, 0.0684, 0.0483, 0.0703, 0.0000],
        [0.0552, 0.0388, 0.1050, 0.0640, 0.0825, 0.0713, 0.0928, 0.0557, 0.0618, 0.0542, 0.0454, 0.0532, 0.0664, 0.0718, 0.0820]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[    -0.0029,     -0.0284,      0.0286,  ...,      0.0216,      0.0075,      0.0283],
        [     0.0164,      0.0035,     -0.0062,  ...,     -0.0074,      0.0186,      0.0130],
        [    -0.0340,      0.0008,      0.0090,  ...,     -0.0101,     -0.0095,      0.0079],
        ...,
        [    -0.0358,      0.0042,     -0.0448,  ...,      0.0148,     -0.0025,     -0.0190],
        [     0.0001,     -0.0149,     -0.0062,  ...,      0.0365,     -0.0148,      0.0260],
        [    -0.0191,      0.0016,     -0.0058,  ...,      0.0079,     -0.0034,      0.0187]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3965,  1.2266, -0.9492, -0.0420, -0.5547, -0.3281, -0.4121, -0.9258, -0.5781, -0.1416,  0.0349, -0.0645, -0.1504, -0.4023, -0.9258,  0.7656,  0.1504,  0.6562, -0.6914, -0.5938, -0.0203, -0.0981, -0.6211,  0.4004,  0.0342, -0.2021,  0.1631, -0.2451, -0.8711,  1.3203,  0.1865, -0.6523,
        -0.5000,  0.7305, -0.2354, -0.8047, -0.0121,  0.5078, -0.3848, -0.3984, -1.0781, -0.1279, -0.4141,  0.2715, -0.7148,  0.8711, -0.0479,  0.2695,  0.7266, -0.5586, -0.5156,  0.2480, -0.6719,  1.2109, -0.6523, -0.0835,  0.1689,  0.5039,  0.6016,  0.0238, -0.0156,  0.2002,  0.0383, -0.0444],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0078, -0.0028,  0.0018,  ...,  0.0238,  0.0138,  0.0172],
        [ 0.0277, -0.0324, -0.0031,  ..., -0.0110,  0.0318,  0.0163],
        [-0.0137,  0.0289,  0.0304,  ...,  0.0137,  0.0123, -0.0237],
        ...,
        [ 0.0219,  0.0113,  0.0237,  ..., -0.0066,  0.0121, -0.0107],
        [ 0.0097, -0.0239, -0.0136,  ...,  0.0179, -0.0299, -0.0173],
        [ 0.0300, -0.0093,  0.0094,  ..., -0.0192, -0.0409,  0.0012]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2275, -0.1816, -0.0605, -0.1377, -0.0204,  0.1245, -0.5078, -0.1357, -0.4375, -0.5352,  0.1426, -0.4316,  0.2461, -0.1875,  0.0061, -0.7109, -1.0078,  0.0938,  0.7734, -0.8086,  0.0623,  0.0869, -0.4023,  0.2891, -1.3750, -0.4551,  0.8867,  0.6797, -0.2812,  0.2910,  0.3184,  0.2441,
        -0.5352,  0.6719, -0.1318, -0.8633, -0.0491,  0.4648, -0.3789,  0.0962,  0.0825, -0.4570, -0.1060,  0.1206, -0.3262,  0.0449, -0.0215, -0.8594, -0.1416,  0.0549, -0.2285,  0.7227,  0.0051,  0.3242,  0.3203, -0.4961, -0.2969,  0.6211, -0.2148,  0.9453,  0.5117, -0.5742,  0.1729,  0.6523],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2109, -0.0342,  0.0879, -0.3379,  0.2256,  0.0659, -0.2090, -0.2168, -0.0713, -0.6602,  0.0898,  0.0923,  0.2227,  0.3086],
        [ 0.0000, -0.0752,  0.0962, -0.0806,  0.2754,  0.0591, -0.2324,  0.0559, -0.1143,  0.1504, -0.0454, -0.0115,  0.2812,  0.2402, -0.7734],
        [ 0.0000,  0.2422,  0.5039,  0.6797, -0.2871,  0.1040,  0.5547,  0.5625, -0.1035,  0.4023, -0.1641, -0.0591,  0.1143,  0.4941,  0.3496],
        [ 0.0000, -0.3379,  0.2754,  0.0396,  0.3398, -0.0299,  0.2773, -0.6758,  0.0742,  0.0117,  0.2070,  0.0747,  0.0327,  0.5391, -0.0723],
        [ 0.0000,  0.1416, -0.0120,  0.2871,  0.0588,  0.0106,  0.1016,  0.2773,  0.0347, -0.0679, -0.1709,  0.8516, -0.2520,  0.0820, -0.0261],
        [ 0.0000,  0.2559, -0.0530, -0.1650, -0.1016, -0.1138, -0.6562, -0.1025, -0.3184, -0.1758,  0.0452,  0.2734, -0.1318, -0.3652,  0.1216],
        [ 0.0000,  0.0654,  0.0201, -0.0645,  0.2207, -0.0179, -0.3262,  0.3340, -0.3809,  0.4531,  0.1187, -0.2832,  0.1396, -0.1709, -0.0747],
        [ 0.0000,  0.0996, -0.1084, -0.4746, -0.4648, -0.1816, -0.1455, -0.0015, -0.6211,  0.2383, -0.5547,  0.2461,  0.1221,  0.0447, -0.7109],
        [ 0.0000,  0.0679,  0.1914,  0.1289,  0.2773,  0.2812,  0.0576,  0.2305,  0.3887, -0.5195, -0.3418, -0.0452, -0.1973, -0.1133,  0.4766],
        [ 0.0000,  0.1504, -0.0859,  0.1416, -0.4453, -0.1030,  0.0452,  0.2598,  0.5039,  0.3926, -0.1904, -0.7070, -0.4121,  0.0049,  0.0043],
        [ 0.0000,  0.0649,  0.2637,  0.1426,  0.1108, -0.0981,  0.0405,  0.3652, -0.1094,  0.5391, -0.1924,  0.5352,  0.3770,  0.2451, -0.1436],
        [ 0.0000,  0.0251, -0.4980,  0.2109,  0.4336, -0.1709, -0.3418,  0.3730,  0.4824, -0.5391,  0.2285, -0.1895,  0.4277, -0.2832,  0.1465],
        [ 0.0000,  0.4453,  0.0898,  0.0654, -0.4121, -0.1318,  0.1118,  0.4473, -0.0271, -0.0693, -0.6719, -0.0479, -0.3906, -0.0197,  0.2295],
        [ 0.0000, -0.3535,  0.6406,  0.1514,  0.4023,  0.2578,  0.5195,  0.0104,  0.1133, -0.0171, -0.1934, -0.0354,  0.1885,  0.2637,  0.3945]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4989],
        [0.3304],
        [0.2389],
        [0.2014],
        [0.1590],
        [0.1373],
        [0.1238],
        [0.1045],
        [0.0957],
        [0.0852],
        [0.0820],
        [0.0719],
        [0.0657],
        [0.0653]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.2812, 0.3477, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.2383, 0.2930, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.2266, 0.1904, 0.1611, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1631, 0.2178, 0.1079, 0.1758, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1089, 0.2148, 0.1436, 0.0830, 0.1514, 0.1592, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.1162, 0.1611, 0.1299, 0.1089, 0.1216, 0.1030, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.0742, 0.2168, 0.0796, 0.1455, 0.1240, 0.0737, 0.1118, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1309, 0.0679, 0.2061, 0.0869, 0.0679, 0.0520, 0.1069, 0.1235, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0894, 0.1436, 0.0811, 0.1211, 0.1030, 0.0869, 0.0601, 0.0791, 0.0796, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0933, 0.1328, 0.0654, 0.0674, 0.0840, 0.0889, 0.0703, 0.0640, 0.0947, 0.0767, 0.0859, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0845, 0.0981, 0.0562, 0.0952, 0.0967, 0.0664, 0.0669, 0.1011, 0.0581, 0.0442, 0.0908, 0.0757, 0.0000, 0.0000],
        [0.0552, 0.0564, 0.1270, 0.0569, 0.0835, 0.1206, 0.0552, 0.0801, 0.0583, 0.0366, 0.0449, 0.0474, 0.0938, 0.0845, 0.0000],
        [0.0552, 0.0618, 0.0669, 0.0615, 0.0903, 0.1011, 0.0864, 0.0693, 0.0615, 0.0283, 0.0552, 0.0635, 0.0732, 0.0698, 0.0559]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0186, -0.0030,  0.0235,  ..., -0.0089, -0.0195, -0.0088],
        [ 0.0132,  0.0330,  0.0011,  ...,  0.0136,  0.0102,  0.0265],
        [-0.0338,  0.0208,  0.0052,  ..., -0.0037, -0.0155, -0.0062],
        ...,
        [ 0.0074, -0.0288, -0.0181,  ..., -0.0113,  0.0171, -0.0055],
        [-0.0418, -0.0373,  0.0271,  ...,  0.0377, -0.0196,  0.0013],
        [ 0.0289,  0.0027,  0.0299,  ...,  0.0490,  0.0017,  0.0606]], device='cuda:0', requires_grad=True)
K: tensor([     0.5938,     -0.3906,     -0.4180,      0.2598,      0.4160,     -0.5820,     -1.1953,     -0.4199,      0.4219,      0.6562,      0.3828,     -0.5156,     -0.3477,     -0.6133,      0.9492,     -0.3203,      0.0498,     -0.2373,     -1.1641,     -0.0454,     -0.5625,     -0.4766,
             1.1953,     -0.1406,     -0.2715,      1.2109,     -0.1406,     -0.0732,     -0.4922,      0.1709,     -0.4766,      0.2041,      0.7305,      0.0065,     -0.5820,     -0.2354,      0.7891,      0.0001,     -0.1963,      0.6094,     -0.8828,     -0.5703,     -0.1885,     -1.4062,
             0.5508,      0.0596,     -0.1187,      0.7148,      0.4219,     -0.4609,     -0.0282,      0.7031,      0.4531,      0.3457,      0.5703,      0.2070,     -0.2207,      0.2832,     -1.5078,     -0.6680,      0.2090,      0.2412,      0.0153,      0.4180], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0043,  0.0358,  0.0198,  ...,  0.0166, -0.0050,  0.0296],
        [ 0.0032, -0.0289,  0.0083,  ...,  0.0444, -0.0027,  0.0090],
        [ 0.0015,  0.0012, -0.0015,  ...,  0.0032, -0.0241,  0.0108],
        ...,
        [-0.0246, -0.0008,  0.0553,  ...,  0.0105,  0.0165,  0.0032],
        [ 0.0171, -0.0073, -0.0202,  ..., -0.0234, -0.0160,  0.0298],
        [ 0.0367,  0.0115, -0.0017,  ..., -0.0018,  0.0080, -0.0235]], device='cuda:0', requires_grad=True)
Q: tensor([-0.4707, -1.2266,  0.6602, -0.4668,  0.7461, -0.2324, -0.0525,  0.3945,  0.2832, -1.1016,  0.2061,  0.3711, -0.1465, -0.1533, -0.6914, -0.0933, -0.2949,  0.0952,  0.0967,  0.5820,  0.2031, -0.2637,  0.4082,  0.1104, -0.5234,  0.8633, -0.2109, -0.4375, -0.2617, -0.0374,  0.2158, -0.2080,
        -0.0811, -0.3047, -0.3965,  0.1260,  0.0337,  1.0547, -0.6094, -0.5781, -0.3477, -0.0518, -0.6328,  0.6094, -0.3789,  0.9180,  0.6094, -0.5156, -0.0869, -0.3691,  0.6797, -0.3828, -0.0204,  0.2393, -0.0403, -0.2500,  0.3633, -0.3164, -0.2139, -0.4258,  0.7188, -1.2188,  0.5781,  1.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.1230, -0.0090, -0.2090,  0.1260, -0.2500,  0.2178, -0.7695, -0.1465,  0.2041,  0.1367,  0.2236, -0.2734,  0.2715,  0.1689],
        [ 0.0000, -0.2793, -0.0654,  0.1133, -0.4238,  0.1406, -0.1152,  0.0732, -0.1865, -0.2471, -0.5820,  0.0991, -0.1250, -0.2891,  0.0024],
        [ 0.0000,  0.0464,  0.2578,  0.0588, -0.1377,  0.2188,  0.1270,  0.2539, -0.3184, -0.1377, -0.3438, -0.0510,  0.0806,  0.0173,  0.1699],
        [ 0.0000,  0.1436, -0.0310, -0.1953,  0.1436, -0.0264, -0.3770,  0.2305, -0.2344, -0.1187, -0.2275,  0.2490,  0.2559, -0.1050,  0.0461],
        [ 0.0000, -0.0065,  0.2852, -0.4180,  0.0708,  0.0518, -0.5156, -0.1001, -0.1836, -0.1934,  0.2539,  0.0703,  0.4355,  0.1621,  0.2969],
        [ 0.0000,  0.6797,  0.2773, -0.2734,  0.3320,  0.3809,  0.2461, -0.0442, -0.2490,  0.3379,  0.0461, -0.0889, -0.3613,  0.0830,  0.2559],
        [ 0.0000, -0.1689,  0.1602, -0.0593, -0.2314, -0.1230, -0.2871, -0.1167,  0.3320, -0.1147, -0.2637, -0.3262,  0.0240,  0.3809, -0.4727],
        [ 0.0000, -0.0942,  0.9766, -0.0223,  0.5781,  0.4180, -0.1016,  0.3164,  0.1309, -0.4375, -0.2324, -0.3633,  0.0625,  0.1011, -0.0444],
        [ 0.0000,  0.4473, -0.2070,  0.9023,  0.0410, -0.2090, -0.4746,  0.2480,  0.3926, -0.1060, -0.0811,  0.7422, -0.4570,  0.5195, -0.2949],
        [ 0.0000,  0.1260,  0.6055,  0.0299,  0.4297,  0.2695,  0.1006, -0.2676,  0.0045,  0.0098, -0.0170,  0.1670, -0.0635,  0.4766,  0.2578],
        [ 0.0000,  0.1992,  0.5547, -0.1523, -0.1226,  0.0977,  0.1514, -0.0850, -0.1797,  0.2178,  0.0055,  0.1157,  0.1650,  0.0025, -0.3848],
        [ 0.0000,  0.2500,  0.3984, -0.1602,  0.3691,  0.3848,  0.0069,  0.0190,  0.4277, -0.1230, -0.3965,  0.3203,  0.1416,  0.4473,  0.0942],
        [ 0.0000,  0.0208,  0.8281,  0.0277,  0.4102,  0.7812, -0.0030,  0.3691,  0.0544, -0.4121, -0.2070, -0.1572,  0.5273,  0.4258, -0.0281],
        [ 0.0000,  0.1138,  0.1943,  0.1108,  0.4922,  0.6094,  0.4492,  0.2324,  0.1104, -0.6641,  0.0028,  0.1406,  0.2832,  0.2383,  0.0151]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5179],
        [0.3457],
        [0.2392],
        [0.1965],
        [0.1675],
        [0.1407],
        [0.1160],
        [0.1095],
        [0.0924],
        [0.0896],
        [0.0799],
        [0.0751],
        [0.0667],
        [0.0641]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5312, 0.4707, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.2617, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2324, 0.1436, 0.2754, 0.3496, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.2256, 0.2695, 0.1240, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.2246, 0.1885, 0.1270, 0.1914, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1289, 0.1289, 0.1128, 0.1377, 0.1133, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.1543, 0.1206, 0.1011, 0.1099, 0.1025, 0.1562, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1001, 0.1138, 0.0889, 0.0967, 0.1689, 0.1187, 0.0996, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.1416, 0.1108, 0.1201, 0.0947, 0.0796, 0.1006, 0.0942, 0.0791, 0.0737, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1133, 0.1055, 0.0947, 0.0742, 0.0654, 0.1064, 0.0986, 0.0991, 0.0835, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0542, 0.0598, 0.0933, 0.0649, 0.0952, 0.1196, 0.0850, 0.0718, 0.0776, 0.0830, 0.1147, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0840, 0.1118, 0.0559, 0.1226, 0.0569, 0.0562, 0.0645, 0.0850, 0.0796, 0.0574, 0.0776, 0.0620, 0.0000, 0.0000],
        [0.0649, 0.0474, 0.0562, 0.0640, 0.0723, 0.1074, 0.0776, 0.0454, 0.0830, 0.0972, 0.0762, 0.0500, 0.0718, 0.0874, 0.0000],
        [0.0649, 0.0518, 0.0596, 0.0615, 0.0508, 0.1494, 0.0981, 0.0542, 0.0571, 0.0349, 0.0796, 0.0889, 0.0461, 0.0522, 0.0500]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0105,  0.0243,  0.0018,  ...,  0.0139, -0.0065,  0.0299],
        [-0.0262,  0.0106,  0.0008,  ..., -0.0167,  0.0186,  0.0077],
        [ 0.0069, -0.0144, -0.0053,  ..., -0.0187,  0.0155,  0.0010],
        ...,
        [ 0.0109,  0.0100, -0.0278,  ..., -0.0023, -0.0055, -0.0068],
        [-0.0057,  0.0256, -0.0307,  ..., -0.0002,  0.0128,  0.0076],
        [ 0.0064, -0.0163,  0.0228,  ..., -0.0322, -0.0271, -0.0126]], device='cuda:0', requires_grad=True)
K: tensor([ 1.0625,  0.1992, -1.0703,  0.6445, -0.3535, -0.6758, -0.4004, -0.1816,  0.0405,  0.9531,  0.2490,  0.2695,  0.3574, -0.7539,  0.0898, -0.5156, -0.0854,  0.2891, -0.2119,  0.0601,  0.4980, -0.4062, -0.3535, -0.3105, -0.2471,  0.0618, -0.4336,  0.6016, -0.8672,  0.8672, -0.2100, -0.2988,
         0.6328, -0.2617, -0.4121,  0.0986, -0.6953,  0.6094,  0.2314,  0.3301, -0.5547,  0.6484, -0.4395, -0.6875, -0.5430,  0.1680, -0.4570, -0.0562,  0.7188,  0.8633, -0.2246, -0.1641,  0.6289, -0.5742,  0.3203, -0.0608,  0.1060,  0.3574,  1.1797, -0.9961, -0.5625,  0.2168,  0.2754,  0.9062],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0061, -0.0253,  0.0265,  ..., -0.0128, -0.0184,  0.0124],
        [-0.0236, -0.0236,  0.0291,  ...,  0.0272, -0.0024, -0.0095],
        [-0.0371, -0.0142, -0.0162,  ..., -0.0344, -0.0514, -0.0375],
        ...,
        [-0.0314, -0.0050,  0.0435,  ...,  0.0256, -0.0273, -0.0307],
        [ 0.0201,  0.0097, -0.0068,  ..., -0.0440, -0.0159,  0.0233],
        [ 0.0276,  0.0063,  0.0054,  ..., -0.0291, -0.0011,  0.0207]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0422,  0.4453,  0.5195, -0.4219, -0.4629,  0.1318,  1.0078,  0.3145,  0.1260,  1.3359,  0.6523,  0.5078,  0.3398, -0.2559,  0.5391, -0.1895, -0.5273,  0.5039,  0.8320, -0.0145, -0.3574, -0.0791, -0.1553, -0.5508,  0.4277,  1.2734, -0.2656, -0.9688,  0.9023,  0.8594,  0.4062,  0.0503,
         0.1074,  1.1641, -0.1206, -0.1543,  0.5234, -0.9688, -1.5000,  0.2539, -0.7227,  0.5234, -0.3340, -0.6680, -0.9727, -0.4473,  0.1182,  0.8906,  0.0286,  0.0284,  0.3086, -0.1055, -1.3281,  0.0889, -0.4629,  0.1025, -0.7812, -0.3867,  0.1074,  0.8125,  1.1094,  0.3516, -0.2139, -0.2441],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.1182,      0.1514,      0.0161,     -0.1270,     -0.1553,      0.0339,     -0.2852,      0.0208,     -0.2969,     -0.0854,      0.4473,      0.0381,     -0.3203,      0.1328],
        [     0.0000,     -0.3086,      0.0791,     -0.0918,     -0.4082,      0.1099,      0.4551,     -0.2539,      0.0150,     -0.0933,     -0.2754,     -0.4297,     -0.1631,      0.2754,     -0.4805],
        [     0.0000,     -0.4844,      0.1689,      0.4062,     -0.1240,      0.1455,      0.3672,     -0.1953,      0.4922,      0.0078,      0.0591,      0.6719,      0.3945,      0.0820,     -0.3379],
        [     0.0000,     -0.0085,      0.1689,     -0.6055,     -0.4004,      0.2520,      0.4023,      0.3672,     -0.3496,     -0.5742,      0.2988,     -0.2734,     -0.0464,     -0.1079,     -0.1357],
        [     0.0000,      0.5391,      0.3594,     -0.0376,      0.3730,      0.0491,      0.2363,      0.4062,      0.0005,     -0.1147,      0.3496,      0.4238,      0.6953,     -0.0718,      0.0209],
        [     0.0000,     -0.3516,     -0.3555,     -0.4883,     -0.2871,     -0.4844,      0.0603,     -0.7305,      0.0242,     -0.3984,     -0.3613,     -0.0850,     -0.2207,     -0.2041,     -0.3672],
        [     0.0000,      0.1797,     -0.0698,     -0.2451,     -0.1631,     -0.2324,      0.1904,     -0.0294,      0.1396,     -0.4883,     -0.2227,     -0.7227,     -0.1592,     -0.1572,     -0.1699],
        [     0.0000,     -0.0623,      0.0659,     -0.1826,     -0.0967,      0.4590,      0.1050,     -0.0674,     -0.0041,      0.4785,     -0.0762,     -0.2236,      0.3633,     -0.1875,     -0.5430],
        [     0.0000,      0.2969,      0.0510,      0.1299,     -0.1060,     -0.2852,     -0.0483,     -0.1118,     -0.2852,     -0.3613,     -0.0325,     -0.2246,      0.1875,      0.0620,     -0.1377],
        [     0.0000,      0.1826,      0.1104,      0.0004,     -0.2441,     -0.3711,      0.1172,      0.0432,      0.0459,     -0.1211,     -0.3711,      0.0859,     -0.4102,     -0.1309,     -0.3164],
        [     0.0000,     -0.4004,     -0.3027,      0.1406,     -0.2158,      0.1631,      0.3926,      0.0493,     -0.1182,     -0.0403,      0.0288,      0.3477,     -0.0425,     -0.0757,     -0.0713],
        [     0.0000,     -0.0289,      0.2578,     -0.4375,      0.3457,     -0.4199,     -0.4336,     -0.2930,     -0.0209,     -0.0840,     -0.4102,     -0.1079,     -0.3320,     -0.3711,      0.1445],
        [     0.0000,     -0.3145,     -0.1436,     -0.0127,      0.1074,      0.5039,      0.1816,     -0.3555,      0.2471,      0.4043,      0.1660,     -0.2559,      0.1006,      0.3027,     -0.4395],
        [     0.0000,     -0.2285,     -0.0874,     -0.0576,     -0.2471,      0.8320,      0.4121,     -0.1846,     -0.1328,     -0.6250,      0.2041,      0.3125,     -0.3438,     -0.2197,     -0.2598]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5482],
        [0.3366],
        [0.2533],
        [0.1951],
        [0.1595],
        [0.1403],
        [0.1254],
        [0.1090],
        [0.0976],
        [0.0918],
        [0.0833],
        [0.0749],
        [0.0719],
        [0.0677]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4297, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3594, 0.3828, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.3203, 0.2930, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1699, 0.3086, 0.1846, 0.1089, 0.2275, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1787, 0.1680, 0.1895, 0.1123, 0.2266, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.1904, 0.1377, 0.1089, 0.1680, 0.1348, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1133, 0.2334, 0.0981, 0.0569, 0.1299, 0.1182, 0.0830, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.1177, 0.1250, 0.0693, 0.1387, 0.1250, 0.0938, 0.1172, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1494, 0.0889, 0.0986, 0.0898, 0.1167, 0.0762, 0.0747, 0.1172, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1201, 0.1089, 0.0535, 0.1309, 0.0664, 0.0913, 0.0972, 0.1138, 0.0713, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.1338, 0.0771, 0.0630, 0.1143, 0.0737, 0.0791, 0.0859, 0.0884, 0.0659, 0.0605, 0.0776, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0608, 0.0708, 0.0620, 0.1045, 0.1069, 0.0679, 0.0869, 0.0708, 0.0581, 0.0786, 0.0962, 0.0608, 0.0000, 0.0000],
        [0.0579, 0.0659, 0.0752, 0.0510, 0.0757, 0.0986, 0.0552, 0.1108, 0.0645, 0.0605, 0.0630, 0.0820, 0.0698, 0.0703, 0.0000],
        [0.0693, 0.0825, 0.0635, 0.0598, 0.0806, 0.0815, 0.0500, 0.0747, 0.0703, 0.0603, 0.0508, 0.0581, 0.0698, 0.0645, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0160,  0.0198,  0.0211,  ...,  0.0035,  0.0203, -0.0245],
        [ 0.0048, -0.0441,  0.0284,  ...,  0.0186,  0.0057,  0.0398],
        [ 0.0210,  0.0102, -0.0450,  ..., -0.0083, -0.0158,  0.0256],
        ...,
        [-0.0095,  0.0005, -0.0063,  ..., -0.0171, -0.0280,  0.0183],
        [-0.0037,  0.0210, -0.0247,  ..., -0.0369,  0.0204,  0.0031],
        [-0.0143, -0.0043, -0.0165,  ..., -0.0326,  0.0075,  0.0115]], device='cuda:0', requires_grad=True)
K: tensor([-0.8750,  0.1992,  0.4121, -0.7852, -0.6328, -0.3535, -0.5078, -1.1250,  0.5898,  0.0664,  0.0320,  0.0830, -0.2773,  0.0557,  0.7930,  0.2559, -0.1055, -0.7773, -0.2754,  1.0156,  0.2871, -0.7773,  0.2871, -0.2852,  1.1875,  1.0078,  0.7930,  0.1387, -0.6172, -0.7656, -0.0664, -0.5000,
        -0.0693, -1.1094,  0.5977, -0.8984, -0.4785, -1.2031,  0.8633,  0.4473,  0.4082,  0.0188,  0.4434, -0.3145, -0.3438,  0.0378,  0.5234, -0.8867,  0.6602, -0.9062, -0.1982,  0.3457, -0.3047, -0.0972,  0.7461,  0.9219, -0.1992,  0.2891, -0.2490,  0.5078, -0.0162, -0.2441, -0.0070, -0.4805],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0075, -0.0145, -0.0376,  ...,  0.0264,  0.0166, -0.0161],
        [-0.0331, -0.0534,  0.0075,  ..., -0.0247, -0.0323, -0.0714],
        [ 0.0232,  0.0032, -0.0155,  ...,  0.0181,  0.0137,  0.0219],
        ...,
        [-0.0098,  0.0129, -0.0078,  ...,  0.0043,  0.0091,  0.0054],
        [ 0.0262,  0.0138, -0.0156,  ..., -0.0125, -0.0047,  0.0090],
        [-0.0090,  0.0391,  0.0004,  ..., -0.0037,  0.0047,  0.0143]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0186,  0.2021, -0.9336, -0.4590,  0.3281, -0.0198,  0.3359, -0.1855, -0.3027,  0.1084,  0.5391, -0.8984, -0.5234,  0.1270,  0.0957,  0.1279,  1.0625,  0.2754, -0.7773,  0.5391, -0.0708,  0.3926,  0.5781,  0.8867,  0.7773, -0.0576, -0.7578, -0.0986,  0.5586, -1.0859, -0.8359,  0.8242,
        -0.4980,  0.2500, -0.3477, -0.8203,  0.2559,  0.5039, -0.6367,  0.6328, -0.3633, -0.1328, -1.2344, -0.0167,  0.8320,  0.5430, -0.5508, -0.1445, -0.3320,  0.7969, -0.2910,  1.2266, -0.2617,  0.0515,  0.8242, -0.1001,  0.7461,  0.3281, -0.9648, -0.2520, -0.6523, -1.0312,  0.5078, -1.0312],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2832,     -0.1777,     -0.1914,      0.1953,      0.2324,      0.1338,      0.1855,     -0.2734,     -0.2988,     -0.1807,     -0.2578,     -0.1138,      0.0315,     -0.2480],
        [     0.0000,      0.0640,     -0.3262,     -0.2793,      0.1514,     -0.1118,     -0.2832,      0.1226,     -0.1729,     -0.0520,     -0.1895,     -0.0175,     -0.2539,     -0.2119,     -0.4258],
        [     0.0000,      0.2812,      0.1904,     -0.4980,      0.3672,      0.4375,      0.0728,      0.1914,      0.0179,     -0.1309,     -0.0236,      0.3457,     -0.1748,     -0.1660,     -0.3086],
        [     0.0000,      0.6016,      0.0859,     -0.4414,      0.2949,      0.1807,      0.0361,      0.5312,      0.0150,      0.0645,     -0.1807,      0.3438,      0.0295,      0.0540,     -0.1738],
        [     0.0000,     -0.0649,      0.0603,     -0.4648,      0.2363,     -0.3594,     -0.2402,      0.1602,     -0.3086,     -0.4219,     -0.4844,     -0.3906,     -0.3125,     -0.0830,     -0.1953],
        [     0.0000,      0.5000,      0.1758,     -0.0625,      0.3711,      0.1523,      0.2236,      0.2832,      0.4453,      0.1221,     -0.1914,      0.1875,      0.1338,      0.0493,      0.2969],
        [     0.0000,      0.7227,     -0.1426,     -0.6875,      0.1338,      0.0430,     -0.3125,      0.3906,     -0.1172,     -0.0879,     -0.5625,     -0.0547,     -0.1865,     -0.0840,     -0.0479],
        [     0.0000,      0.1719,      0.2363,     -0.3516,      0.3359,      0.2373,     -0.0564,      0.1689,      0.1436,     -0.1846,     -0.1973,      0.1279,     -0.0732,     -0.0253,     -0.2871],
        [     0.0000,      0.4668,     -0.0557,      0.0513,     -0.0439,      0.2168,     -0.2100,     -0.2305,      0.2227,      0.0005,     -0.2236,     -0.1089,     -0.0996,     -0.2812,     -0.0981],
        [     0.0000,      0.3652,      0.2676,     -0.4453,      0.4512,     -0.2256,      0.0894,      0.1543,      0.3105,     -0.1602,     -0.2754,     -0.0669,     -0.2314,     -0.0474,     -0.1475],
        [     0.0000,      0.5039,     -0.0442,     -0.2520,      0.3438,     -0.0913,     -0.0209,      0.0591,      0.0913,     -0.2061,     -0.2891,     -0.0422,     -0.0991,     -0.2168,     -0.1582],
        [     0.0000,     -0.2188,     -0.0693,     -0.2012,      0.3223,      0.3457,     -0.1079,      0.1357,     -0.0684,     -0.2656,      0.0400,      0.2402,     -0.2217,      0.0107,     -0.2852],
        [     0.0000,      0.1309,      0.2578,     -0.1260,      0.2656,      0.5352,     -0.0481,      0.6484,      0.1050,      0.0469,      0.0859,      0.3496,      0.1865,      0.1934,      0.0028],
        [     0.0000,      0.1709,     -0.0918,     -0.1523,      0.1465,      0.1562,     -0.3281,      0.0703,      0.0109,     -0.1426,     -0.3164,     -0.1797,      0.0013,     -0.0786,     -0.0757]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5107],
        [0.3255],
        [0.2520],
        [0.2112],
        [0.1696],
        [0.1285],
        [0.1250],
        [0.1089],
        [0.0987],
        [0.0972],
        [0.0825],
        [0.0732],
        [0.0687],
        [0.0660]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3887, 0.3594, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2354, 0.3516, 0.1992, 0.2139, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.2100, 0.1904, 0.1387, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.1426, 0.1543, 0.1216, 0.1777, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1602, 0.1138, 0.1069, 0.1729, 0.1416, 0.1689, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.1069, 0.0913, 0.1069, 0.1572, 0.1787, 0.1099, 0.1221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.1069, 0.0928, 0.1011, 0.1045, 0.1621, 0.0903, 0.1011, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.0908, 0.0986, 0.0654, 0.1475, 0.1216, 0.0796, 0.1089, 0.1011, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0811, 0.0703, 0.0737, 0.1279, 0.0869, 0.0815, 0.0923, 0.0977, 0.0845, 0.1094, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.1152, 0.0447, 0.0549, 0.0879, 0.0947, 0.0684, 0.1064, 0.0815, 0.0898, 0.1040, 0.0752, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.0608, 0.0693, 0.0518, 0.1055, 0.0703, 0.0703, 0.0688, 0.0840, 0.0762, 0.0825, 0.0771, 0.1099, 0.0000, 0.0000],
        [0.0608, 0.0608, 0.0649, 0.0771, 0.0806, 0.0718, 0.0557, 0.0737, 0.1011, 0.0620, 0.0659, 0.0649, 0.0752, 0.0859, 0.0000],
        [0.0615, 0.0532, 0.0752, 0.0535, 0.0688, 0.0947, 0.0625, 0.0742, 0.0557, 0.0542, 0.0510, 0.0820, 0.0552, 0.0762, 0.0820]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0131,  0.0206, -0.0016,  ..., -0.0212,  0.0027, -0.0492],
        [ 0.0214,  0.0076,  0.0567,  ..., -0.0435, -0.0244, -0.0041],
        [-0.0034, -0.0012, -0.0032,  ...,  0.0486,  0.0100, -0.0281],
        ...,
        [ 0.0004, -0.0135, -0.0059,  ..., -0.0416, -0.0243,  0.0060],
        [ 0.0137,  0.0216,  0.0199,  ...,  0.0114, -0.0138,  0.0126],
        [-0.0111,  0.0174, -0.0350,  ..., -0.0146, -0.0174,  0.0076]], device='cuda:0', requires_grad=True)
K: tensor([-0.0835, -0.2061,  0.1094,  0.1172, -0.2217, -0.4102, -0.7891, -0.3125, -1.0547, -0.0889, -0.1582, -0.5430, -0.3848,  0.1768, -0.0918, -0.5742, -0.3750, -0.4688, -0.1484, -0.3379, -0.2539, -0.4629,  0.2490, -0.4355,  0.4082, -0.1348, -0.0762, -0.2871,  0.5117, -0.3652,  0.6562,  0.2793,
        -0.1309, -0.8789,  0.3105,  0.2871, -0.5586,  0.3477,  0.4199, -0.1108,  0.4277,  0.8750,  0.2393, -0.4551,  0.1562,  0.1016,  0.6016,  0.4648, -0.4395, -0.7695, -0.1982, -0.7617, -0.8125,  0.3281,  0.0884, -0.1387, -0.2500,  0.0203, -0.3652, -0.5234,  0.7461, -0.5977,  1.4453, -0.5508],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0087,  0.0365, -0.0166,  ...,  0.0009,  0.0093,  0.0174],
        [ 0.0040, -0.0088,  0.0322,  ..., -0.0090, -0.0144,  0.0029],
        [-0.0149,  0.0285, -0.0198,  ...,  0.0152,  0.0186,  0.0055],
        ...,
        [ 0.0200,  0.0377, -0.0110,  ..., -0.0040,  0.0142, -0.0129],
        [-0.0081,  0.0011,  0.0010,  ...,  0.0343, -0.0266,  0.0294],
        [ 0.0141, -0.0074, -0.0118,  ...,  0.0002, -0.0010, -0.0205]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9688, -0.2930, -0.3535,  0.0918,  1.0781, -1.1484, -0.8438, -0.9336,  0.0166,  0.4727,  0.9844, -0.7305,  0.7695, -0.6680,  0.2100,  1.0078,  0.3398, -0.0304,  0.1035,  0.9609, -0.5781, -1.1406,  0.0854,  0.1523,  0.9375, -0.6094, -0.1201, -0.3184,  0.1289, -0.2578,  0.0898, -0.4473,
        -0.5391, -0.3398,  0.5664,  0.0645, -0.2832,  0.7227, -0.2656, -0.5625, -0.3789, -0.2305,  0.2617,  0.0664,  0.6914, -1.0234,  0.2119,  0.5039,  0.4863,  0.5273,  0.8906, -0.1650, -0.3145, -0.1592,  0.5430,  0.8594, -0.2852, -0.0134, -0.4023,  0.7500,  0.1797,  0.0972,  0.4062, -0.4004],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.2656,  0.2266,  0.8594,  0.1484,  0.5273,  0.0591,  0.0869,  0.3594,  0.0107,  0.0635,  0.6523,  0.2598,  0.3789,  0.3398],
        [ 0.0000, -0.0776, -0.4434, -0.4121, -0.2041,  0.0894, -0.2578, -0.4551, -0.0479, -0.0383, -0.2002, -0.3086, -0.2949, -0.1904,  0.3574],
        [ 0.0000,  0.4004, -0.1689, -0.0957,  0.4531,  0.4844,  0.1924,  0.4531,  0.1738,  0.3105,  0.4746,  0.4941,  0.2139,  0.1504,  0.5820],
        [ 0.0000, -0.1270, -0.2227, -0.5352, -0.0640,  0.1357, -0.6445,  0.1494, -0.1143,  0.0352, -0.0674, -0.2539,  0.1021, -0.1826,  0.2061],
        [ 0.0000, -0.1455, -0.0669, -0.3047,  0.0752,  0.3711, -0.3184, -0.1055, -0.1094, -0.0593, -0.0977, -0.0267,  0.0282, -0.1338,  0.3418],
        [ 0.0000,  0.1650, -0.1758, -0.2373,  0.2451,  0.0415,  0.2197,  0.1260, -0.1826, -0.2480,  0.1157,  0.2832,  0.0845, -0.0752,  0.2119],
        [ 0.0000, -0.1777, -0.3398, -0.1807,  0.2031,  0.3340, -0.1514, -0.0481,  0.3008, -0.0513, -0.1113,  0.1484,  0.1035,  0.0079,  0.5156],
        [ 0.0000,  0.0908, -0.0513,  0.0347,  0.0679,  0.5039, -0.0811,  0.0342,  0.3867, -0.1216,  0.3398,  0.1260, -0.0791,  0.2334,  0.5820],
        [ 0.0000, -0.0732,  0.0121, -0.3984,  0.4121,  0.2188, -0.2021,  0.1099,  0.0376, -0.0898,  0.0024,  0.2402, -0.0152,  0.4102,  0.4219],
        [ 0.0000, -0.1543, -0.2930, -0.2490,  0.3008, -0.0850, -0.1455, -0.0217,  0.0347, -0.1133,  0.1465, -0.0087, -0.3633,  0.2070,  0.0845],
        [ 0.0000,  0.3965, -0.5469, -0.3457,  0.1240,  0.2021, -0.1289,  0.3164,  0.0530,  0.1475,  0.2930, -0.0292, -0.0757, -0.4883,  0.2754],
        [ 0.0000, -0.1934, -0.0593, -0.3535,  0.3555, -0.0500, -0.0500, -0.0698,  0.1279,  0.0315,  0.1128,  0.0437,  0.3965,  0.1211,  0.3613],
        [ 0.0000, -0.0016,  0.0630,  0.2373,  0.2832,  0.1660, -0.0874,  0.1943,  0.5117,  0.0216,  0.0791,  0.0630,  0.2158,  0.3438,  0.2656],
        [ 0.0000, -0.1455,  0.2021, -0.1387,  0.1108,  0.4297,  0.0133,  0.1836, -0.1006, -0.1260, -0.1885,  0.2852, -0.1094,  0.2158,  0.2852]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4582],
        [0.3109],
        [0.2393],
        [0.1965],
        [0.1547],
        [0.1364],
        [0.1243],
        [0.1066],
        [0.0986],
        [0.0814],
        [0.0804],
        [0.0710],
        [0.0658],
        [0.0619]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(�:0.0001 purchasing:0.0003 hal:0.0002 Olympia:0.0002�:0.0002 supportive:0.0002 ..:0.0002 range:0.0002)
 range
------
		( purchasing:0.0003 hal:0.0002 Olympia:0.0002�:0.0002 supportive:0.0002 ..:0.0002 range:0.0002 dependencies:0.0002)
 dependencies Perfect authent deficitsird critically belief organisations cartoons archaeussian bins Book Lisphazard
@ 1 train 10.9868 , allloss: 21.6188, dt: 7155.58ms, fracRes: 0.0062, norm(attn): 0.0317, norm(output): 0.0728, norm(x): 0.0688, norm(y): 0.9993, norm:21.2616, tok/sec: 18317.45, flops:19.22, batch-reuse:1
@ 2 train 10.9624 , allloss: 21.5824, dt: 1238.80ms, fracRes: 0.0062, norm(attn): 0.0315, norm(output): 0.0728, norm(x): 0.0688, norm(y): 0.9993, norm:21.1284, tok/sec: 105805.27, flops:111.04, batch-reuse:1
@ 3 train 10.9422 , allloss: 21.5453, dt: 1236.42ms, fracRes: 0.0062, norm(attn): 0.0325, norm(output): 0.0732, norm(x): 0.0689, norm(y): 0.9993, norm:20.9467, tok/sec: 106008.92, flops:111.26, batch-reuse:1
@ 4 train 10.9071 , allloss: 21.4856, dt: 1253.38ms, fracRes: 0.0062, norm(attn): 0.0327, norm(output): 0.0732, norm(x): 0.0690, norm(y): 0.9993, norm:20.7109, tok/sec: 104574.49, flops:109.75, batch-reuse:1
@ 5 train 10.8778 , allloss: 21.4258, dt: 1256.30ms, fracRes: 0.0062, norm(attn): 0.0330, norm(output): 0.0732, norm(x): 0.0691, norm(y): 0.9993, norm:20.2659, tok/sec: 104331.89, flops:109.50, batch-reuse:1
@ 6 train 10.8352 , allloss: 21.3463, dt: 1262.98ms, fracRes: 0.0062, norm(attn): 0.0332, norm(output): 0.0732, norm(x): 0.0692, norm(y): 0.9993, norm:21.1934, tok/sec: 103780.26, flops:108.92, batch-reuse:1
@ 7 train 10.7857 , allloss: 21.2537, dt: 1272.69ms, fracRes: 0.0062, norm(attn): 0.0334, norm(output): 0.0742, norm(x): 0.0695, norm(y): 0.9993, norm:20.9270, tok/sec: 102988.04, flops:108.09, batch-reuse:1
@ 8 train 10.7354 , allloss: 21.1505, dt: 1270.92ms, fracRes: 0.0062, norm(attn): 0.0347, norm(output): 0.0742, norm(x): 0.0698, norm(y): 0.9993, norm:20.7613, tok/sec: 103131.78, flops:108.24, batch-reuse:1
@ 9 train 10.6769 , allloss: 21.0361, dt: 1265.22ms, fracRes: 0.0062, norm(attn): 0.0352, norm(output): 0.0752, norm(x): 0.0702, norm(y): 0.9993, norm:21.3776, tok/sec: 103596.04, flops:108.73, batch-reuse:1
@ 10 train 10.6215 , allloss: 20.9166, dt: 1255.72ms, fracRes: 0.0062, norm(attn): 0.0356, norm(output): 0.0752, norm(x): 0.0706, norm(y): 0.9993, norm:21.4940, tok/sec: 104380.08, flops:109.55, batch-reuse:1
@ 11 train 10.5848 , allloss: 20.8080, dt: 1256.41ms, fracRes: 0.0062, norm(attn): 0.0371, norm(output): 0.0771, norm(x): 0.0712, norm(y): 0.9993, norm:21.6270, tok/sec: 104322.68, flops:109.49, batch-reuse:1
@ 12 train 10.5087 , allloss: 20.6564, dt: 1268.19ms, fracRes: 0.0063, norm(attn): 0.0386, norm(output): 0.0771, norm(x): 0.0718, norm(y): 0.9993, norm:22.2093, tok/sec: 103353.90, flops:108.47, batch-reuse:1
@ 13 train 10.4622 , allloss: 20.5277, dt: 1271.76ms, fracRes: 0.0063, norm(attn): 0.0391, norm(output): 0.0776, norm(x): 0.0725, norm(y): 0.9993, norm:22.6073, tok/sec: 103063.39, flops:108.17, batch-reuse:1
@ 14 train 10.4077 , allloss: 20.3826, dt: 1301.67ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.0781, norm(x): 0.0732, norm(y): 0.9994, norm:22.8632, tok/sec: 100695.02, flops:105.68, batch-reuse:1
@ 15 train 10.3585 , allloss: 20.2329, dt: 1291.49ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.0786, norm(x): 0.0739, norm(y): 0.9994, norm:23.1254, tok/sec: 101488.75, flops:106.51, batch-reuse:1
@ 16 train 10.3195 , allloss: 20.0832, dt: 1270.06ms, fracRes: 0.0063, norm(attn): 0.0425, norm(output): 0.0791, norm(x): 0.0747, norm(y): 0.9994, norm:23.2604, tok/sec: 103201.34, flops:108.31, batch-reuse:1
@ 17 train 10.2765 , allloss: 19.9203, dt: 1270.59ms, fracRes: 0.0063, norm(attn): 0.0427, norm(output): 0.0806, norm(x): 0.0754, norm(y): 0.9994, norm:23.5973, tok/sec: 103158.37, flops:108.27, batch-reuse:1
@ 18 train 10.2416 , allloss: 19.7508, dt: 1271.29ms, fracRes: 0.0063, norm(attn): 0.0432, norm(output): 0.0811, norm(x): 0.0762, norm(y): 0.9994, norm:23.5682, tok/sec: 103101.74, flops:108.21, batch-reuse:1
@ 19 train 10.1782 , allloss: 19.5409, dt: 1278.39ms, fracRes: 0.0063, norm(attn): 0.0437, norm(output): 0.0811, norm(x): 0.0770, norm(y): 0.9994, norm:23.8236, tok/sec: 102529.01, flops:107.61, batch-reuse:1
@ 20 train 10.1435 , allloss: 19.3456, dt: 1285.83ms, fracRes: 0.0063, norm(attn): 0.0454, norm(output): 0.0830, norm(x): 0.0778, norm(y): 0.9995, norm:23.8600, tok/sec: 101935.64, flops:106.98, batch-reuse:1
@ 21 train 10.0986 , allloss: 19.1257, dt: 1261.19ms, fracRes: 0.0064, norm(attn): 0.0457, norm(output): 0.0835, norm(x): 0.0786, norm(y): 0.9995, norm:24.0077, tok/sec: 103926.88, flops:109.07, batch-reuse:1
@ 22 train 10.0752 , allloss: 18.9122, dt: 1274.25ms, fracRes: 0.0064, norm(attn): 0.0464, norm(output): 0.0854, norm(x): 0.0794, norm(y): 0.9995, norm:23.8953, tok/sec: 102862.27, flops:107.96, batch-reuse:1
@ 23 train 10.0548 , allloss: 18.6869, dt: 1262.74ms, fracRes: 0.0064, norm(attn): 0.0466, norm(output): 0.0854, norm(x): 0.0802, norm(y): 0.9995, norm:23.7639, tok/sec: 103799.27, flops:108.94, batch-reuse:1
@ 24 train 10.0440 , allloss: 18.4630, dt: 1295.03ms, fracRes: 0.0064, norm(attn): 0.0469, norm(output): 0.0859, norm(x): 0.0810, norm(y): 0.9995, norm:23.6430, tok/sec: 101211.58, flops:106.22, batch-reuse:1
@ 25 train 9.9504 , allloss: 18.1418, dt: 1305.03ms, fracRes: 0.0064, norm(attn): 0.0471, norm(output): 0.0864, norm(x): 0.0818, norm(y): 0.9995, norm:23.5545, tok/sec: 100435.81, flops:105.41, batch-reuse:1
@ 26 train 9.9596 , allloss: 17.9168, dt: 1302.13ms, fracRes: 0.0064, norm(attn): 0.0474, norm(output): 0.0864, norm(x): 0.0826, norm(y): 0.9995, norm:23.1545, tok/sec: 100659.86, flops:105.64, batch-reuse:1
@ 27 train 9.9379 , allloss: 17.6542, dt: 1254.17ms, fracRes: 0.0064, norm(attn): 0.0483, norm(output): 0.0884, norm(x): 0.0834, norm(y): 0.9996, norm:22.8386, tok/sec: 104508.82, flops:109.68, batch-reuse:1
@ 28 train 9.9133 , allloss: 17.3818, dt: 1285.95ms, fracRes: 0.0064, norm(attn): 0.0493, norm(output): 0.0884, norm(x): 0.0841, norm(y): 0.9996, norm:22.5635, tok/sec: 101925.90, flops:106.97, batch-reuse:1
@ 29 train 9.8955 , allloss: 17.1117, dt: 1284.88ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.0908, norm(x): 0.0848, norm(y): 0.9996, norm:22.1525, tok/sec: 102011.01, flops:107.06, batch-reuse:1
@ 30 train 9.8501 , allloss: 16.8077, dt: 1300.25ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.0913, norm(x): 0.0855, norm(y): 0.9996, norm:21.7647, tok/sec: 100805.52, flops:105.80, batch-reuse:1
@ 31 train 9.8607 , allloss: 16.5550, dt: 1299.95ms, fracRes: 0.0064, norm(attn): 0.0503, norm(output): 0.0913, norm(x): 0.0862, norm(y): 0.9996, norm:21.2695, tok/sec: 100828.76, flops:105.82, batch-reuse:1
@ 32 train 9.8214 , allloss: 16.2471, dt: 1310.46ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0928, norm(x): 0.0869, norm(y): 0.9996, norm:20.8448, tok/sec: 100019.76, flops:104.97, batch-reuse:1
@ 33 train 9.7753 , allloss: 15.9303, dt: 1305.31ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0933, norm(x): 0.0875, norm(y): 0.9996, norm:20.3218, tok/sec: 100414.11, flops:105.39, batch-reuse:1
@ 34 train 9.7889 , allloss: 15.6721, dt: 1297.99ms, fracRes: 0.0064, norm(attn): 0.0505, norm(output): 0.0933, norm(x): 0.0881, norm(y): 0.9996, norm:19.7053, tok/sec: 100980.85, flops:105.98, batch-reuse:1
@ 35 train 9.7814 , allloss: 15.3919, dt: 1285.31ms, fracRes: 0.0063, norm(attn): 0.0508, norm(output): 0.0938, norm(x): 0.0887, norm(y): 0.9997, norm:19.3271, tok/sec: 101977.26, flops:107.03, batch-reuse:1
@ 36 train 9.7648 , allloss: 15.1041, dt: 1280.60ms, fracRes: 0.0063, norm(attn): 0.0508, norm(output): 0.0938, norm(x): 0.0893, norm(y): 0.9997, norm:18.6076, tok/sec: 102351.77, flops:107.42, batch-reuse:1
@ 37 train 9.7552 , allloss: 14.8268, dt: 1287.93ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0938, norm(x): 0.0899, norm(y): 0.9997, norm:17.8996, tok/sec: 101769.56, flops:106.81, batch-reuse:1
@ 38 train 9.7402 , allloss: 14.5509, dt: 1313.08ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0904, norm(y): 0.9997, norm:17.4570, tok/sec: 99819.97, flops:104.76, batch-reuse:1
@ 39 train 9.7464 , allloss: 14.3001, dt: 1312.57ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0909, norm(y): 0.9997, norm:16.5692, tok/sec: 99859.25, flops:104.80, batch-reuse:1
@ 40 train 9.6997 , allloss: 14.0049, dt: 1292.30ms, fracRes: 0.0063, norm(attn): 0.0513, norm(output): 0.0962, norm(x): 0.0913, norm(y): 0.9997, norm:15.9458, tok/sec: 101425.14, flops:106.45, batch-reuse:1
@ 41 train 9.6880 , allloss: 13.7528, dt: 1303.63ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0917, norm(y): 0.9997, norm:15.2697, tok/sec: 100544.04, flops:105.52, batch-reuse:1
@ 42 train 9.6891 , allloss: 13.5229, dt: 1311.42ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0920, norm(y): 0.9997, norm:14.6212, tok/sec: 99946.59, flops:104.90, batch-reuse:1
@ 43 train 9.7031 , allloss: 13.3130, dt: 1319.47ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0922, norm(y): 0.9997, norm:13.9305, tok/sec: 99336.57, flops:104.26, batch-reuse:1
@ 44 train 9.7097 , allloss: 13.1075, dt: 1295.79ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0924, norm(y): 0.9997, norm:13.1966, tok/sec: 101152.01, flops:106.16, batch-reuse:1
@ 45 train 9.6849 , allloss: 12.8871, dt: 1307.60ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0925, norm(y): 0.9997, norm:12.5258, tok/sec: 100238.35, flops:105.20, batch-reuse:1
@ 46 train 9.6621 , allloss: 12.6840, dt: 1293.49ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0967, norm(x): 0.0925, norm(y): 0.9997, norm:11.8533, tok/sec: 101332.19, flops:106.35, batch-reuse:1
@ 47 train 9.6328 , allloss: 12.4946, dt: 1302.68ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0923, norm(y): 0.9997, norm:11.2602, tok/sec: 100617.22, flops:105.60, batch-reuse:1
@ 48 train 9.6288 , allloss: 12.3573, dt: 1323.01ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0920, norm(y): 0.9997, norm:10.5955, tok/sec: 99071.29, flops:103.98, batch-reuse:1
@ 49 train 9.6416 , allloss: 12.2564, dt: 1322.71ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0962, norm(x): 0.0915, norm(y): 0.9997, norm:9.9777, tok/sec: 99093.22, flops:104.00, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4531, 0.5469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.3047, 0.3652, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.2148, 0.2812, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1299, 0.2402, 0.1895, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.1768, 0.1514, 0.2031, 0.1621, 0.1543, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.2021, 0.1484, 0.1328, 0.1406, 0.1387, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1279, 0.1226, 0.1133, 0.1504, 0.1172, 0.0869, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1475, 0.1191, 0.0830, 0.0840, 0.1113, 0.1162, 0.1338, 0.0718, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0874, 0.0938, 0.1055, 0.0986, 0.1152, 0.1157, 0.0923, 0.1104, 0.1289, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.0962, 0.0762, 0.0952, 0.0530, 0.0747, 0.0864, 0.1074, 0.1377, 0.1226, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0708, 0.0747, 0.0923, 0.0811, 0.0786, 0.0640, 0.0732, 0.1021, 0.0635, 0.1216, 0.0581, 0.1201, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.0723, 0.0427, 0.0869, 0.1084, 0.0591, 0.0498, 0.1016, 0.1143, 0.0410, 0.0884, 0.0579, 0.1074, 0.0000, 0.0000],
        [0.0713, 0.1118, 0.0781, 0.0762, 0.0479, 0.0630, 0.0806, 0.1118, 0.0693, 0.0669, 0.0366, 0.0684, 0.0483, 0.0703, 0.0000],
        [0.0552, 0.0391, 0.1050, 0.0645, 0.0825, 0.0713, 0.0928, 0.0557, 0.0618, 0.0542, 0.0457, 0.0532, 0.0664, 0.0718, 0.0815]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0027, -0.0282,  0.0287,  ...,  0.0218,  0.0074,  0.0281],
        [ 0.0165,  0.0037, -0.0061,  ..., -0.0073,  0.0185,  0.0130],
        [-0.0342,  0.0006,  0.0088,  ..., -0.0103, -0.0093,  0.0081],
        ...,
        [-0.0360,  0.0040, -0.0450,  ...,  0.0147, -0.0023, -0.0188],
        [ 0.0003, -0.0147, -0.0061,  ...,  0.0367, -0.0150,  0.0258],
        [-0.0193,  0.0014, -0.0060,  ...,  0.0077, -0.0032,  0.0189]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3984,  1.2344, -0.9453, -0.0459, -0.5508, -0.3242, -0.4160, -0.9258, -0.5781, -0.1416,  0.0344, -0.0579, -0.1484, -0.4004, -0.9180,  0.7695,  0.1494,  0.6562, -0.6953, -0.5938, -0.0186, -0.1006, -0.6211,  0.3984,  0.0361, -0.2021,  0.1621, -0.2451, -0.8789,  1.3281,  0.1895, -0.6445,
        -0.4961,  0.7305, -0.2324, -0.8125, -0.0072,  0.5078, -0.3867, -0.4043, -1.0781, -0.1221, -0.4082,  0.2715, -0.7227,  0.8672, -0.0510,  0.2715,  0.7188, -0.5664, -0.5117,  0.2490, -0.6758,  1.2031, -0.6445, -0.0791,  0.1738,  0.5078,  0.6055,  0.0234, -0.0189,  0.2080,  0.0378, -0.0391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0080, -0.0030,  0.0017,  ...,  0.0236,  0.0140,  0.0174],
        [ 0.0279, -0.0323, -0.0030,  ..., -0.0109,  0.0316,  0.0162],
        [-0.0136,  0.0289,  0.0306,  ...,  0.0138,  0.0124, -0.0237],
        ...,
        [ 0.0221,  0.0115,  0.0238,  ..., -0.0064,  0.0119, -0.0109],
        [ 0.0095, -0.0241, -0.0138,  ...,  0.0177, -0.0297, -0.0171],
        [ 0.0302, -0.0091,  0.0096,  ..., -0.0190, -0.0411,  0.0010]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2295, -0.1797, -0.0593, -0.1328, -0.0234,  0.1270, -0.5039, -0.1318, -0.4395, -0.5352,  0.1406, -0.4336,  0.2480, -0.1826,  0.0072, -0.7148, -1.0078,  0.1021,  0.7734, -0.8125,  0.0623,  0.0879, -0.4023,  0.2949, -1.3672, -0.4551,  0.8867,  0.6875, -0.2773,  0.2910,  0.3164,  0.2480,
        -0.5273,  0.6719, -0.1250, -0.8594, -0.0540,  0.4688, -0.3770,  0.0947,  0.0840, -0.4590, -0.1069,  0.1221, -0.3262,  0.0405, -0.0259, -0.8594, -0.1377,  0.0566, -0.2275,  0.7227,  0.0051,  0.3203,  0.3262, -0.4941, -0.3027,  0.6172, -0.2109,  0.9492,  0.5117, -0.5703,  0.1748,  0.6445],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.1904,     -0.0308,      0.0864,     -0.3438,      0.2236,      0.0532,     -0.2061,     -0.2031,     -0.0649,     -0.6484,      0.0889,      0.0923,      0.2256,      0.3027],
        [     0.0000,     -0.0825,      0.0981,     -0.0771,      0.2676,      0.0552,     -0.2344,      0.0540,     -0.1128,      0.1553,     -0.0410,     -0.0074,      0.2832,      0.2324,     -0.7773],
        [     0.0000,      0.2275,      0.4961,      0.6641,     -0.3047,      0.0962,      0.5391,      0.5703,     -0.0991,      0.4023,     -0.1631,     -0.0610,      0.1152,      0.4863,      0.3398],
        [     0.0000,     -0.3457,      0.2695,      0.0278,      0.3320,     -0.0332,      0.2695,     -0.6719,      0.0757,      0.0149,      0.2090,      0.0767,      0.0386,      0.5352,     -0.0815],
        [     0.0000,      0.1475,     -0.0118,      0.2852,      0.0601,      0.0107,      0.1060,      0.2754,      0.0400,     -0.0649,     -0.1709,      0.8516,     -0.2500,      0.0869,     -0.0287],
        [     0.0000,      0.2598,     -0.0481,     -0.1602,     -0.1040,     -0.1187,     -0.6602,     -0.1055,     -0.3203,     -0.1699,      0.0498,      0.2793,     -0.1318,     -0.3711,      0.1182],
        [     0.0000,      0.0771,      0.0320,     -0.0447,      0.2363,     -0.0136,     -0.3086,      0.3203,     -0.3867,      0.4609,      0.1182,     -0.2852,      0.1406,     -0.1699,     -0.0669],
        [     0.0000,      0.0996,     -0.1128,     -0.4746,     -0.4629,     -0.1807,     -0.1406,     -0.0000,     -0.6250,      0.2363,     -0.5508,      0.2441,      0.1201,      0.0474,     -0.7109],
        [     0.0000,      0.0684,      0.1895,      0.1226,      0.2793,      0.2812,      0.0562,      0.2324,      0.3887,     -0.5195,     -0.3379,     -0.0461,     -0.1992,     -0.1138,      0.4707],
        [     0.0000,      0.1484,     -0.0874,      0.1396,     -0.4492,     -0.1055,      0.0405,      0.2617,      0.5039,      0.3906,     -0.1924,     -0.7031,     -0.4121,      0.0039,     -0.0020],
        [     0.0000,      0.0583,      0.2676,      0.1377,      0.1060,     -0.1011,      0.0393,      0.3672,     -0.1089,      0.5430,     -0.1973,      0.5312,      0.3809,      0.2422,     -0.1465],
        [     0.0000,      0.0298,     -0.4961,      0.2158,      0.4355,     -0.1709,     -0.3418,      0.3711,      0.4863,     -0.5352,      0.2305,     -0.1904,      0.4258,     -0.2793,      0.1514],
        [     0.0000,      0.4453,      0.0884,      0.0654,     -0.4023,     -0.1279,      0.1182,      0.4473,     -0.0273,     -0.0688,     -0.6680,     -0.0474,     -0.3926,     -0.0150,      0.2275],
        [     0.0000,     -0.3477,      0.6445,      0.1533,      0.4004,      0.2578,      0.5195,      0.0085,      0.1123,     -0.0175,     -0.1904,     -0.0332,      0.1855,      0.2617,      0.3906]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5033],
        [0.3317],
        [0.2389],
        [0.2019],
        [0.1587],
        [0.1374],
        [0.1236],
        [0.1046],
        [0.0957],
        [0.0852],
        [0.0819],
        [0.0719],
        [0.0655],
        [0.0652]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.4766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.2852, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2119, 0.2393, 0.3086, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.2109, 0.2109, 0.1650, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1475, 0.1602, 0.2178, 0.1182, 0.1895, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.1934, 0.1611, 0.0947, 0.1670, 0.1533, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1162, 0.1621, 0.1250, 0.1157, 0.1201, 0.1021, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0811, 0.1992, 0.0854, 0.1416, 0.1187, 0.0781, 0.1094, 0.1016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.1260, 0.0854, 0.1719, 0.0996, 0.0762, 0.0605, 0.1040, 0.1230, 0.0776, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0879, 0.1406, 0.0806, 0.1206, 0.0986, 0.0840, 0.0654, 0.0894, 0.0767, 0.0752, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0894, 0.1309, 0.0674, 0.0791, 0.0835, 0.0840, 0.0732, 0.0718, 0.0874, 0.0732, 0.0840, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.0825, 0.1030, 0.0603, 0.0967, 0.0908, 0.0664, 0.0703, 0.0962, 0.0576, 0.0500, 0.0879, 0.0742, 0.0000, 0.0000],
        [0.0547, 0.0596, 0.1211, 0.0615, 0.0854, 0.1069, 0.0576, 0.0762, 0.0645, 0.0400, 0.0496, 0.0537, 0.0854, 0.0845, 0.0000],
        [0.0505, 0.0635, 0.0742, 0.0625, 0.0928, 0.0913, 0.0796, 0.0688, 0.0674, 0.0325, 0.0554, 0.0659, 0.0693, 0.0708, 0.0552]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0186, -0.0029,  0.0233,  ..., -0.0087, -0.0196, -0.0089],
        [ 0.0130,  0.0328,  0.0013,  ...,  0.0134,  0.0104,  0.0267],
        [-0.0337,  0.0210,  0.0051,  ..., -0.0035, -0.0157, -0.0064],
        ...,
        [ 0.0075, -0.0286, -0.0183,  ..., -0.0111,  0.0169, -0.0057],
        [-0.0419, -0.0375,  0.0272,  ...,  0.0376, -0.0194,  0.0015],
        [ 0.0291,  0.0029,  0.0298,  ...,  0.0492,  0.0015,  0.0604]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6250, -0.4043, -0.4824,  0.0042,  0.2754, -0.7461, -1.0703, -0.2910,  0.3711,  0.3984,  0.5078, -0.3770, -0.3867, -0.5352,  0.7539, -0.6289,  0.4062, -0.2490, -1.2656,  0.4316, -0.6836, -0.3203,  1.1250, -0.4668, -0.4746,  1.0547, -0.4395, -0.0850, -0.3555, -0.0684, -0.2637,  0.3027,
         0.7891, -0.1348, -0.3730, -0.2158,  0.8086, -0.3555, -0.3613,  0.4004, -0.8789, -0.9258, -0.4727, -1.3203,  0.5586,  0.2207, -0.1650,  0.6797,  0.1553, -0.3242, -0.2793,  0.7930,  0.2598,  0.3984,  0.6836,  0.1270, -0.2832, -0.0801, -1.3984, -0.9727,  0.1562,  0.2266,  0.2148,  0.4414],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0045,  0.0356,  0.0199,  ...,  0.0165, -0.0048,  0.0298],
        [ 0.0034, -0.0287,  0.0082,  ...,  0.0445, -0.0029,  0.0088],
        [ 0.0013,  0.0010, -0.0013,  ...,  0.0030, -0.0239,  0.0109],
        ...,
        [-0.0248, -0.0010,  0.0554,  ...,  0.0103,  0.0167,  0.0034],
        [ 0.0170, -0.0075, -0.0201,  ..., -0.0235, -0.0159,  0.0300],
        [ 0.0368,  0.0116, -0.0018,  ..., -0.0017,  0.0079, -0.0236]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6289, -1.3906,  0.6953, -0.4648,  0.3242, -0.1309, -0.1475,  0.2559,  0.2891, -1.1328,  0.1396,  0.2080,  0.0408,  0.0237, -0.9062, -0.1680, -0.3516,  0.1543, -0.0879,  0.5391,  0.3223, -0.1631,  0.4414,  0.1543, -0.3477,  0.7383, -0.3984, -0.7617, -0.1182, -0.0894,  0.1118, -0.2559,
         0.1089, -0.3652, -0.1768,  0.0728, -0.0781,  1.0703, -0.8086, -0.7383, -0.5078,  0.1060, -0.4570,  0.6445, -0.3730,  0.7500,  0.8750, -0.4004,  0.1084, -0.3242,  0.6094, -0.3613, -0.1611,  0.1182, -0.0211, -0.3672,  0.3574, -0.1377, -0.3691, -0.5703,  0.9062, -1.3203,  0.5195,  1.1094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.0918,  0.0933, -0.1699,  0.1914, -0.2090,  0.1152, -0.6133, -0.0571,  0.0923,  0.0184,  0.1826, -0.2598,  0.2471,  0.0554],
        [ 0.0000, -0.1992,  0.0505,  0.0713, -0.2129,  0.1162, -0.1143,  0.0806, -0.0898, -0.2334, -0.4609,  0.0981, -0.1196, -0.1738, -0.0654],
        [ 0.0000,  0.1187,  0.3770,  0.1201,  0.1089,  0.2344,  0.1445,  0.2793, -0.0996, -0.0913, -0.2432,  0.0708,  0.1240,  0.1484,  0.1445],
        [ 0.0000,  0.2080,  0.2061, -0.0408,  0.3438,  0.0835, -0.1934,  0.2500, -0.0090, -0.0344, -0.0981,  0.3320,  0.2598,  0.0728,  0.1050],
        [ 0.0000,  0.0859,  0.3906, -0.2207,  0.2500,  0.1270, -0.3320,  0.0177, -0.0050, -0.1426,  0.2354,  0.1553,  0.3984,  0.2354,  0.2559],
        [ 0.0000,  0.7188,  0.5352,  0.0065,  0.5703,  0.4902,  0.3730,  0.1318,  0.0659,  0.3770,  0.1621,  0.1406, -0.1221,  0.3086,  0.3477],
        [ 0.0000, -0.1328,  0.2031, -0.0559, -0.1348, -0.0962, -0.2598, -0.0515,  0.2793, -0.1465, -0.2236, -0.2480,  0.0094,  0.2988, -0.4258],
        [ 0.0000, -0.0500,  0.8516,  0.0079,  0.5078,  0.3340, -0.0859,  0.2539,  0.1797, -0.3730, -0.1992, -0.2227,  0.0244,  0.1455, -0.0781],
        [ 0.0000,  0.5117,  0.1191,  0.8203,  0.2734,  0.0068, -0.2227,  0.3203,  0.4863,  0.0261,  0.0747,  0.7617, -0.2217,  0.5781, -0.1221],
        [ 0.0000,  0.0874,  0.5547, -0.0031,  0.4004,  0.2002,  0.0374, -0.2070,  0.1040, -0.0544, -0.0698,  0.1455, -0.0422,  0.4297,  0.1079],
        [ 0.0000,  0.1514,  0.5312, -0.1309,  0.0267,  0.0820,  0.0889, -0.0500, -0.0649,  0.1270, -0.0491,  0.0879,  0.0879,  0.0742, -0.3691],
        [ 0.0000,  0.2559,  0.4785, -0.0603,  0.4121,  0.3477,  0.0344,  0.0962,  0.4102, -0.1035, -0.2480,  0.3164,  0.1455,  0.4238,  0.0581],
        [ 0.0000,  0.0854,  0.7969,  0.1172,  0.4473,  0.6719,  0.0518,  0.3320,  0.1650, -0.3105, -0.0957, -0.0175,  0.4453,  0.4336, -0.0095],
        [ 0.0000,  0.2285,  0.3848,  0.2158,  0.6055,  0.5938,  0.4570,  0.3105,  0.2832, -0.4434,  0.0938,  0.2617,  0.3184,  0.3379,  0.0894]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5088],
        [0.3346],
        [0.2345],
        [0.1974],
        [0.1694],
        [0.1392],
        [0.1150],
        [0.1100],
        [0.0907],
        [0.0893],
        [0.0800],
        [0.0752],
        [0.0676],
        [0.0638]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.2832, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.2236, 0.3145, 0.2656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1807, 0.2363, 0.2539, 0.1338, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.2109, 0.1943, 0.1260, 0.2139, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.1279, 0.1426, 0.1035, 0.1504, 0.1016, 0.1865, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1206, 0.1465, 0.1270, 0.1001, 0.1216, 0.0938, 0.1641, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1138, 0.1182, 0.0869, 0.1216, 0.1196, 0.1377, 0.1025, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.1338, 0.1177, 0.1060, 0.1104, 0.0811, 0.1211, 0.0986, 0.0854, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1172, 0.1069, 0.0786, 0.0918, 0.0645, 0.1138, 0.0981, 0.1016, 0.0674, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0664, 0.0708, 0.0811, 0.0811, 0.0903, 0.0806, 0.1328, 0.0869, 0.0752, 0.0581, 0.0752, 0.1016, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0820, 0.1045, 0.0605, 0.1143, 0.0605, 0.0786, 0.0713, 0.0840, 0.0649, 0.0598, 0.0796, 0.0608, 0.0000, 0.0000],
        [0.0698, 0.0654, 0.0684, 0.0596, 0.0850, 0.0776, 0.0898, 0.0608, 0.0801, 0.0698, 0.0703, 0.0603, 0.0688, 0.0742, 0.0000],
        [0.0615, 0.0640, 0.0723, 0.0586, 0.0684, 0.0898, 0.1143, 0.0588, 0.0620, 0.0366, 0.0732, 0.0806, 0.0522, 0.0520, 0.0559]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0104,      0.0244,      0.0018,  ...,      0.0139,     -0.0065,      0.0299],
        [    -0.0261,      0.0104,      0.0006,  ...,     -0.0166,      0.0188,      0.0079],
        [     0.0071,     -0.0145,     -0.0055,  ...,     -0.0185,      0.0157,      0.0012],
        ...,
        [     0.0109,      0.0100,     -0.0277,  ...,     -0.0024,     -0.0055,     -0.0069],
        [    -0.0055,      0.0254,     -0.0309,  ...,      0.0000,      0.0130,      0.0078],
        [     0.0065,     -0.0164,      0.0226,  ...,     -0.0321,     -0.0269,     -0.0124]], device='cuda:0', requires_grad=True)
K: tensor([ 0.6406,  0.0238, -0.7969,  0.6133, -0.0796, -0.6328,  0.2422, -0.0160,  0.4043,  0.5391, -0.1133,  0.1621,  0.0894, -0.8008, -0.3828, -1.1328,  0.0493, -0.2441, -0.3535, -0.1904,  0.6836,  0.0064,  0.0664,  0.0137,  0.0216,  0.2852, -0.2100,  0.8320, -0.6953,  0.4277, -0.6367, -0.2812,
         1.0859, -0.2539, -0.8359,  0.0623, -0.7148,  0.1826, -0.1963,  0.0190, -0.5859,  0.5742, -0.3262, -0.5781, -0.7852,  0.6562, -0.8359, -0.1035,  0.4492,  0.7930,  0.1924, -0.4180,  0.5547, -0.3672,  0.2637, -0.2812,  0.0962,  0.4961,  1.2031, -0.7383, -0.0187,  0.9375, -0.0771,  1.0469],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0059, -0.0253,  0.0263,  ..., -0.0126, -0.0182,  0.0126],
        [-0.0238, -0.0235,  0.0293,  ...,  0.0271, -0.0026, -0.0097],
        [-0.0373, -0.0142, -0.0160,  ..., -0.0346, -0.0516, -0.0377],
        ...,
        [-0.0316, -0.0049,  0.0437,  ...,  0.0254, -0.0275, -0.0309],
        [ 0.0203,  0.0096, -0.0070,  ..., -0.0438, -0.0157,  0.0235],
        [ 0.0277,  0.0064,  0.0054,  ..., -0.0290, -0.0010,  0.0208]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2256,  0.4531,  0.1611, -0.0620, -0.6406, -0.2637,  0.8594, -0.1084, -0.1602,  0.8438,  0.8867, -0.0105, -0.0150,  0.3047,  0.3633,  0.1465, -0.3535,  0.4453,  1.3828, -0.4512, -0.2432,  0.1426, -0.0058, -0.3828,  0.2598,  1.2812, -0.2041, -0.5078,  0.2227,  0.2520,  0.3887, -0.2197,
         0.2305,  1.1328, -0.2139, -0.2031,  1.0078, -1.5000, -1.3906, -0.1387, -0.5938,  0.8047, -0.3848, -0.2637, -0.8555, -0.6797, -0.0908,  0.5820,  0.3867, -0.4688,  0.2129,  0.0635, -1.0234,  0.0693, -0.2188, -0.0591, -0.7344, -0.5156,  0.5195,  0.4609,  1.1172,  0.6992, -0.1729, -0.4785],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.0933,  0.1914, -0.0645,  0.0767, -0.1338,  0.2734, -0.1484,  0.0679, -0.3613, -0.2021,  0.2871, -0.0562, -0.2432,  0.0623],
        [ 0.0000, -0.1650,  0.1328, -0.2363, -0.0908, -0.1040,  0.4219, -0.1318,  0.0280, -0.3047, -0.2871, -0.2832, -0.2793,  0.0874, -0.3047],
        [ 0.0000,  0.1270,  0.4688,  0.3027,  0.3633,  0.1836,  0.6680,  0.1377,  0.5195, -0.0640,  0.0947,  0.5352,  0.3867,  0.1953,  0.0327],
        [ 0.0000,  0.2695,  0.3398, -0.3008,  0.0762,  0.2002,  0.6836,  0.4121,  0.0176, -0.4121,  0.2793,  0.0337,  0.1426, -0.0334,  0.0579],
        [ 0.0000,  0.6445,  0.5625,  0.1309,  0.6602,  0.2520,  0.5898,  0.5312,  0.3262,  0.0119,  0.3789,  0.5547,  0.6055,  0.1108,  0.3203],
        [ 0.0000, -0.3848, -0.2773, -0.5938, -0.2188, -0.6172, -0.0049, -0.5312, -0.1660, -0.6641, -0.4805, -0.2930, -0.4316, -0.4375, -0.3672],
        [ 0.0000,  0.1914,  0.0522, -0.1875,  0.0080, -0.2500,  0.3086,  0.0415,  0.0991, -0.4844, -0.1602, -0.4121, -0.1357, -0.2041, -0.1074],
        [ 0.0000,  0.1631,  0.1982, -0.1094,  0.2266,  0.2129,  0.3555,  0.0579,  0.0596,  0.1050,  0.0038, -0.0928,  0.1650, -0.1758, -0.2471],
        [ 0.0000,  0.4805,  0.3496,  0.2432,  0.2852, -0.0258,  0.3789,  0.1729,  0.0278, -0.2676,  0.1807,  0.1807,  0.2656,  0.0713,  0.1436],
        [ 0.0000,  0.2402,  0.1494, -0.1602, -0.0048, -0.3594,  0.2119,  0.0640,  0.1001, -0.3145, -0.2949,  0.0684, -0.2051, -0.1689, -0.1816],
        [ 0.0000,  0.0674,  0.2051,  0.2041,  0.3105,  0.1973,  0.6953,  0.2715,  0.1289, -0.1299,  0.1250,  0.4258,  0.1699,  0.0630,  0.1719],
        [ 0.0000,  0.0417,  0.2871, -0.2617,  0.3750, -0.2617, -0.0020, -0.0952,  0.0679, -0.1924, -0.2734,  0.0089, -0.2578, -0.2637,  0.1182],
        [ 0.0000, -0.0674, -0.0186, -0.1572,  0.1934,  0.1064,  0.2520, -0.1396,  0.1396,  0.0011,  0.0047, -0.1475, -0.0116,  0.0605, -0.3047],
        [ 0.0000,  0.0337,  0.1572, -0.0491,  0.1060,  0.3770,  0.6172, -0.0461,  0.0059, -0.5195,  0.1689,  0.2656, -0.1660, -0.1680, -0.0957]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5534],
        [0.3455],
        [0.2560],
        [0.1991],
        [0.1619],
        [0.1431],
        [0.1255],
        [0.1141],
        [0.1018],
        [0.0918],
        [0.0814],
        [0.0776],
        [0.0757],
        [0.0695]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.5391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.3789, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2559, 0.2852, 0.2158, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.2295, 0.1777, 0.2012, 0.1875, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1885, 0.1484, 0.1660, 0.1553, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1484, 0.1631, 0.1299, 0.1406, 0.1309, 0.1436, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1396, 0.1113, 0.1230, 0.1152, 0.1250, 0.1260, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.1230, 0.0991, 0.1108, 0.1035, 0.1128, 0.1133, 0.1157, 0.1084, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.1138, 0.0884, 0.0996, 0.0928, 0.1016, 0.1011, 0.1025, 0.0967, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.1025, 0.0815, 0.0908, 0.0845, 0.0918, 0.0933, 0.0938, 0.0879, 0.0903, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0918, 0.0747, 0.0825, 0.0776, 0.0845, 0.0850, 0.0859, 0.0806, 0.0825, 0.0820, 0.0869, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.0869, 0.0688, 0.0762, 0.0713, 0.0776, 0.0781, 0.0786, 0.0742, 0.0757, 0.0747, 0.0801, 0.0771, 0.0000, 0.0000],
        [0.0713, 0.0771, 0.0635, 0.0708, 0.0659, 0.0723, 0.0732, 0.0742, 0.0698, 0.0713, 0.0703, 0.0747, 0.0723, 0.0742, 0.0000],
        [0.0684, 0.0718, 0.0586, 0.0654, 0.0618, 0.0674, 0.0674, 0.0688, 0.0645, 0.0664, 0.0659, 0.0698, 0.0674, 0.0693, 0.0679]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0159,  0.0197,  0.0212,  ...,  0.0035,  0.0201, -0.0243],
        [ 0.0046, -0.0440,  0.0283,  ...,  0.0185,  0.0059,  0.0397],
        [ 0.0212,  0.0102, -0.0449,  ..., -0.0083, -0.0160,  0.0258],
        ...,
        [-0.0097,  0.0005, -0.0064,  ..., -0.0171, -0.0279,  0.0182],
        [-0.0036,  0.0210, -0.0247,  ..., -0.0368,  0.0203,  0.0032],
        [-0.0142, -0.0043, -0.0164,  ..., -0.0328,  0.0074,  0.0116]], device='cuda:0', requires_grad=True)
K: tensor([-0.0035, -0.1699, -0.2910,  0.1128,  0.0654, -0.5039, -0.9883, -0.0947, -0.4336, -1.1250, -0.5508,  0.7344, -0.2773,  0.7188,  0.4199, -0.0217, -0.0840, -0.2139,  0.2969,  1.0234,  0.1992, -0.3984, -0.1699, -0.3594, -0.3340, -1.0000,  0.6055,  0.4766,  0.1089, -0.3945, -0.0796, -0.2695,
        -0.5195, -0.6719,  0.2061, -0.6328, -1.1875,  0.2559,  0.1768,  0.5625, -0.4414,  0.1504, -0.5117, -0.4746, -0.6914, -0.2891, -0.2461, -0.9688,  0.2275, -0.4082,  0.4473,  0.3594, -0.1367, -0.1816,  0.3691,  0.5898, -1.0156,  0.1475, -1.0000,  0.3008,  0.3418, -0.4883,  0.5391, -0.1650],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0077, -0.0146, -0.0375,  ...,  0.0264,  0.0164, -0.0159],
        [-0.0333, -0.0533,  0.0074,  ..., -0.0247, -0.0322, -0.0715],
        [ 0.0232,  0.0032, -0.0155,  ...,  0.0182,  0.0136,  0.0220],
        ...,
        [-0.0099,  0.0129, -0.0079,  ...,  0.0042,  0.0093,  0.0052],
        [ 0.0260,  0.0138, -0.0157,  ..., -0.0125, -0.0045,  0.0089],
        [-0.0092,  0.0392,  0.0004,  ..., -0.0036,  0.0048,  0.0141]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2188,  0.6562, -0.0684, -0.1533, -0.2139, -0.0488,  0.0806,  0.4238,  0.2324,  0.3945,  0.5898, -0.4160, -0.2031, -0.5586, -0.1748, -0.1543,  0.2305, -0.4648, -0.8672, -0.4121, -0.7656, -0.6602,  0.2266,  0.1523,  0.7930, -0.6523,  0.4062, -0.4902, -0.4297,  0.7344,  0.1211,  0.8438,
        -0.5117, -0.1982, -0.7109,  0.1982,  0.9180,  0.7539, -0.3691,  1.2578, -0.2422, -0.5547, -1.4375, -0.0459, -0.0544, -0.4570,  0.0967,  0.3984, -0.0654,  0.7500,  0.5781,  0.8867,  0.5039,  0.7305,  1.3750, -0.0767, -0.7461, -0.0041, -0.1221,  0.3770, -0.1826, -1.1406,  0.1006, -0.0830],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.1514, -0.1016,  0.0850,  0.0183,  0.0859,  0.1147,  0.0913,  0.0259,  0.0515,  0.0596,  0.0972,  0.0918,  0.1099,  0.0527],
        [ 0.0000,  0.1035, -0.1934, -0.0752, -0.1523, -0.0762, -0.0811, -0.0708, -0.1396, -0.1138, -0.1196, -0.0596, -0.0962, -0.0752, -0.1021],
        [ 0.0000,  0.1055, -0.1699, -0.0532, -0.1309, -0.0525, -0.0500, -0.0400, -0.1157, -0.0894, -0.0942, -0.0383, -0.0669, -0.0471, -0.0718],
        [ 0.0000,  0.1143, -0.1426, -0.0150, -0.0874, -0.0035,  0.0070,  0.0125, -0.0549, -0.0186, -0.0310,  0.0294, -0.0092,  0.0170, -0.0089],
        [ 0.0000,  0.0776, -0.1621, -0.0508, -0.1138, -0.0352, -0.0271, -0.0220, -0.0786, -0.0547, -0.0688, -0.0056, -0.0378, -0.0110, -0.0359],
        [ 0.0000,  0.0894, -0.1406, -0.0542, -0.1289, -0.0391, -0.0364, -0.0229, -0.0864, -0.0674, -0.0825, -0.0233, -0.0505, -0.0311, -0.0459],
        [ 0.0000,  0.0605, -0.1670, -0.0664, -0.1338, -0.0518, -0.0400, -0.0330, -0.0942, -0.0718, -0.0845, -0.0217, -0.0549, -0.0322, -0.0498],
        [ 0.0000,  0.0796, -0.1367, -0.0256, -0.0923, -0.0061, -0.0030,  0.0167, -0.0479, -0.0256, -0.0388,  0.0281, -0.0062,  0.0143, -0.0011],
        [ 0.0000,  0.0898, -0.1611, -0.0427, -0.1138, -0.0249, -0.0270, -0.0117, -0.0713, -0.0466, -0.0625,  0.0126, -0.0310, -0.0081, -0.0184],
        [ 0.0000,  0.0889, -0.1377, -0.0352, -0.1084, -0.0199, -0.0065, -0.0036, -0.0635, -0.0371, -0.0488,  0.0132, -0.0261,  0.0008, -0.0141],
        [ 0.0000,  0.0728, -0.1299, -0.0292, -0.0903, -0.0094, -0.0028,  0.0077, -0.0535, -0.0289, -0.0374,  0.0220, -0.0091,  0.0161, -0.0052],
        [ 0.0000,  0.0659, -0.1689, -0.0674, -0.1338, -0.0466, -0.0420, -0.0332, -0.0908, -0.0684, -0.0850, -0.0160, -0.0510, -0.0265, -0.0442],
        [ 0.0000,  0.0742, -0.1216, -0.0093, -0.0815,  0.0096,  0.0251,  0.0366, -0.0239, -0.0042, -0.0145,  0.0437,  0.0108,  0.0378,  0.0183],
        [ 0.0000,  0.0481, -0.1553, -0.0444, -0.1001, -0.0179, -0.0113,  0.0048, -0.0564, -0.0299, -0.0396,  0.0209, -0.0159,  0.0117, -0.0099]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4714],
        [0.3114],
        [0.2279],
        [0.1869],
        [0.1538],
        [0.1298],
        [0.1141],
        [0.1014],
        [0.0907],
        [0.0832],
        [0.0747],
        [0.0705],
        [0.0641],
        [0.0607]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.5898, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2256, 0.3535, 0.4199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.2520, 0.2930, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1260, 0.1895, 0.2178, 0.2207, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1025, 0.1543, 0.1777, 0.1748, 0.1943, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.1357, 0.1504, 0.1455, 0.1631, 0.1641, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1152, 0.1289, 0.1260, 0.1387, 0.1406, 0.1318, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0669, 0.1016, 0.1128, 0.1108, 0.1221, 0.1235, 0.1157, 0.1250, 0.1216, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.0908, 0.1011, 0.0986, 0.1089, 0.1104, 0.1030, 0.1113, 0.1079, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0571, 0.0830, 0.0913, 0.0884, 0.0981, 0.0991, 0.0933, 0.1001, 0.0972, 0.0952, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0518, 0.0747, 0.0830, 0.0806, 0.0889, 0.0903, 0.0845, 0.0913, 0.0884, 0.0859, 0.0874, 0.0933, 0.0000, 0.0000, 0.0000],
        [0.0479, 0.0698, 0.0762, 0.0742, 0.0811, 0.0830, 0.0776, 0.0835, 0.0806, 0.0786, 0.0801, 0.0854, 0.0815, 0.0000, 0.0000],
        [0.0442, 0.0640, 0.0708, 0.0684, 0.0752, 0.0762, 0.0713, 0.0771, 0.0747, 0.0732, 0.0747, 0.0791, 0.0757, 0.0752, 0.0000],
        [0.0403, 0.0588, 0.0659, 0.0640, 0.0703, 0.0713, 0.0664, 0.0718, 0.0693, 0.0674, 0.0688, 0.0732, 0.0703, 0.0693, 0.0723]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0129,  0.0207, -0.0017,  ..., -0.0214,  0.0026, -0.0491],
        [ 0.0215,  0.0077,  0.0566,  ..., -0.0437, -0.0246, -0.0040],
        [-0.0036, -0.0012, -0.0030,  ...,  0.0487,  0.0101, -0.0283],
        ...,
        [ 0.0006, -0.0134, -0.0060,  ..., -0.0417, -0.0244,  0.0061],
        [ 0.0135,  0.0215,  0.0200,  ...,  0.0116, -0.0136,  0.0124],
        [-0.0109,  0.0174, -0.0351,  ..., -0.0148, -0.0175,  0.0078]], device='cuda:0', requires_grad=True)
K: tensor([    -0.4883,     -0.3535,     -0.4277,      0.0903,      0.0566,      0.7344,     -1.0625,      0.2891,     -1.3594,     -0.3203,      0.0762,      0.5664,     -0.1943,      0.0053,     -0.0693,     -0.0449,     -0.0289,      0.5000,     -0.8320,     -0.3008,     -0.1196,     -0.7383,
            -0.3828,     -0.2656,      0.2461,     -1.0938,     -0.5391,     -1.0000,      0.2227,      1.0234,      0.1660,      0.5742,      0.2188,      0.3145,     -1.2500,     -0.0012,      0.2109,      0.1143,      0.2871,      1.3516,     -1.0547,     -0.1250,      0.1235,     -1.7500,
            -0.0952,      0.0337,      0.8086,      0.3320,     -0.1582,      0.2832,     -0.3887,      0.3164,     -0.0210,     -0.7656,      1.8672,      1.2812,      0.3320,     -0.3848,     -0.3008,     -0.4609,      0.6016,     -0.2314,     -0.0688,     -0.4375], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[     0.0088,      0.0366,     -0.0167,  ...,      0.0007,      0.0091,      0.0176],
        [     0.0039,     -0.0089,      0.0323,  ...,     -0.0089,     -0.0143,      0.0028],
        [    -0.0148,      0.0285,     -0.0199,  ...,      0.0150,      0.0184,      0.0057],
        ...,
        [     0.0198,      0.0376,     -0.0109,  ...,     -0.0038,      0.0144,     -0.0131],
        [    -0.0080,      0.0012,      0.0008,  ...,      0.0341,     -0.0268,      0.0295],
        [     0.0143,     -0.0073,     -0.0120,  ...,      0.0000,     -0.0011,     -0.0204]], device='cuda:0', requires_grad=True)
Q: tensor([ 1.0469,  0.1436,  0.5195,  0.9961,  0.0552, -0.8281, -0.4258, -0.7422, -0.8984,  0.1748,  0.4551, -0.4395, -0.1729,  0.0019, -0.7031, -0.5195,  0.0088,  0.9336, -0.4199, -0.3477, -0.5469,  0.0669,  0.3203,  0.4766, -0.3828,  0.5742, -0.4121, -0.3164, -0.8945,  0.2617, -1.3047,  0.4453,
        -0.6133,  0.0757, -0.2324,  0.2393,  1.4375,  0.0664, -0.9258,  0.9062, -0.6133,  0.0693,  0.0496,  0.0542, -0.0317, -1.4766,  0.2676,  1.0312, -0.6562, -0.2520,  0.6211, -0.0938, -1.0234,  0.0688,  0.7266,  0.0874, -0.2969, -0.0047, -0.4746,  0.2148,  0.2148, -0.6211,  0.1523, -0.3555],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3711, 0.5078, 0.5703, 0.6758, 0.6836, 0.6523, 0.7109, 0.7070, 0.7109, 0.6797, 0.7500, 0.7070, 0.7383, 0.7539],
        [0.0000, 0.4512, 0.6250, 0.6445, 0.7617, 0.7617, 0.7109, 0.7891, 0.7695, 0.7539, 0.7539, 0.8242, 0.7734, 0.7852, 0.8125],
        [0.0000, 0.4531, 0.6055, 0.6016, 0.7188, 0.7188, 0.6680, 0.7461, 0.7227, 0.7031, 0.7070, 0.7695, 0.7227, 0.7344, 0.7539],
        [0.0000, 0.4082, 0.5508, 0.5586, 0.6680, 0.6719, 0.6172, 0.6953, 0.6680, 0.6562, 0.6602, 0.7188, 0.6719, 0.6797, 0.7070],
        [0.0000, 0.4141, 0.5508, 0.5352, 0.6406, 0.6484, 0.5820, 0.6641, 0.6289, 0.6094, 0.6211, 0.6836, 0.6406, 0.6328, 0.6719],
        [0.0000, 0.4219, 0.5273, 0.4980, 0.6055, 0.6133, 0.5469, 0.6211, 0.5938, 0.5742, 0.5898, 0.6484, 0.6016, 0.5977, 0.6367],
        [0.0000, 0.4062, 0.5195, 0.4941, 0.5938, 0.6055, 0.5430, 0.6172, 0.5859, 0.5625, 0.5820, 0.6406, 0.5977, 0.5898, 0.6289],
        [0.0000, 0.4180, 0.5234, 0.5039, 0.6016, 0.6133, 0.5508, 0.6250, 0.5938, 0.5742, 0.5898, 0.6523, 0.6055, 0.6016, 0.6406],
        [0.0000, 0.3828, 0.4902, 0.4668, 0.5664, 0.5781, 0.5117, 0.5859, 0.5547, 0.5352, 0.5508, 0.6133, 0.5703, 0.5586, 0.6016],
        [0.0000, 0.3750, 0.4648, 0.4355, 0.5430, 0.5469, 0.4902, 0.5586, 0.5273, 0.5117, 0.5273, 0.5820, 0.5430, 0.5312, 0.5703],
        [0.0000, 0.3652, 0.4746, 0.4434, 0.5391, 0.5586, 0.4883, 0.5703, 0.5352, 0.5078, 0.5234, 0.5859, 0.5430, 0.5352, 0.5781],
        [0.0000, 0.3809, 0.4648, 0.4375, 0.5312, 0.5508, 0.4824, 0.5547, 0.5234, 0.4980, 0.5156, 0.5781, 0.5352, 0.5234, 0.5664],
        [0.0000, 0.3691, 0.4688, 0.4375, 0.5312, 0.5469, 0.4805, 0.5547, 0.5273, 0.5078, 0.5234, 0.5820, 0.5391, 0.5312, 0.5703],
        [0.0000, 0.3789, 0.4941, 0.4668, 0.5547, 0.5703, 0.4980, 0.5781, 0.5430, 0.5156, 0.5391, 0.5977, 0.5547, 0.5430, 0.5859]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4456],
        [0.2858],
        [0.2069],
        [0.1635],
        [0.1358],
        [0.1151],
        [0.1005],
        [0.0894],
        [0.0800],
        [0.0725],
        [0.0674],
        [0.0618],
        [0.0571],
        [0.0535]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0098.:0.0098.:0.0092 the:0.0095.:0.0098.:0.0095.:0.0098.:0.0098)
.
------
		(.:0.0098.:0.0092 the:0.0095.:0.0098.:0.0095.:0.0098.:0.0098
:0.0132)

.
.
.
.
.
.
.

@ 50 train 9.5998 , allloss: 12.1357, dt: 1722.76ms, fracRes: 0.0063, norm(attn): 0.0518, norm(output): 0.0947, norm(x): 0.0909, norm(y): 0.9997, norm:9.5878, tok/sec: 76082.57, flops:79.85, batch-reuse:1
@ 51 train 9.6374 , allloss: 12.1154, dt: 1306.65ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0902, norm(y): 0.9997, norm:9.0912, tok/sec: 100311.80, flops:105.28, batch-reuse:1
@ 52 train 9.5688 , allloss: 12.0230, dt: 1289.98ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0895, norm(y): 0.9997, norm:8.7099, tok/sec: 101607.63, flops:106.64, batch-reuse:1
@ 53 train 9.5858 , allloss: 12.0072, dt: 1282.66ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0942, norm(x): 0.0888, norm(y): 0.9997, norm:8.3101, tok/sec: 102187.26, flops:107.25, batch-reuse:1
@ 54 train 9.5780 , allloss: 11.9459, dt: 1279.59ms, fracRes: 0.0063, norm(attn): 0.0510, norm(output): 0.0933, norm(x): 0.0881, norm(y): 0.9997, norm:7.8264, tok/sec: 102432.86, flops:107.51, batch-reuse:1
@ 55 train 9.6092 , allloss: 11.9520, dt: 1283.81ms, fracRes: 0.0063, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0875, norm(y): 0.9997, norm:7.5518, tok/sec: 102095.79, flops:107.15, batch-reuse:1
@ 56 train 9.5141 , allloss: 11.8502, dt: 1296.28ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0933, norm(x): 0.0872, norm(y): 0.9997, norm:7.2216, tok/sec: 101114.00, flops:106.12, batch-reuse:1
@ 57 train 9.4964 , allloss: 11.8297, dt: 1319.84ms, fracRes: 0.0062, norm(attn): 0.0508, norm(output): 0.0928, norm(x): 0.0867, norm(y): 0.9997, norm:7.2161, tok/sec: 99309.28, flops:104.23, batch-reuse:1
@ 58 train 9.5216 , allloss: 11.8372, dt: 1298.33ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0913, norm(x): 0.0859, norm(y): 0.9997, norm:6.5242, tok/sec: 100953.96, flops:105.95, batch-reuse:1
@ 59 train 9.4444 , allloss: 11.7688, dt: 1281.38ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0913, norm(x): 0.0855, norm(y): 0.9996, norm:7.5189, tok/sec: 102289.32, flops:107.35, batch-reuse:1
@ 60 train 9.4586 , allloss: 11.8279, dt: 1277.83ms, fracRes: 0.0062, norm(attn): 0.0500, norm(output): 0.0918, norm(x): 0.0858, norm(y): 0.9997, norm:7.4876, tok/sec: 102573.52, flops:107.65, batch-reuse:1
@ 61 train 9.4611 , allloss: 11.7984, dt: 1285.05ms, fracRes: 0.0062, norm(attn): 0.0503, norm(output): 0.0913, norm(x): 0.0857, norm(y): 0.9997, norm:6.6638, tok/sec: 101997.22, flops:107.05, batch-reuse:1
@ 62 train 9.4851 , allloss: 11.8069, dt: 1297.75ms, fracRes: 0.0062, norm(attn): 0.0500, norm(output): 0.0913, norm(x): 0.0852, norm(y): 0.9996, norm:8.4326, tok/sec: 100999.27, flops:106.00, batch-reuse:1
@ 63 train 9.4852 , allloss: 11.9821, dt: 1305.81ms, fracRes: 0.0063, norm(attn): 0.0493, norm(output): 0.0908, norm(x): 0.0847, norm(y): 0.9996, norm:17.2075, tok/sec: 100375.85, flops:105.35, batch-reuse:1
@ 64 train 9.4455 , allloss: 11.8266, dt: 1314.36ms, fracRes: 0.0062, norm(attn): 0.0496, norm(output): 0.0913, norm(x): 0.0853, norm(y): 0.9996, norm:9.5518, tok/sec: 99723.12, flops:104.66, batch-reuse:1
@ 65 train 9.4413 , allloss: 11.7259, dt: 1324.05ms, fracRes: 0.0062, norm(attn): 0.0496, norm(output): 0.0933, norm(x): 0.0864, norm(y): 0.9997, norm:7.3626, tok/sec: 98993.57, flops:103.90, batch-reuse:1
@ 66 train 9.4244 , allloss: 11.6486, dt: 1287.25ms, fracRes: 0.0062, norm(attn): 0.0503, norm(output): 0.0938, norm(x): 0.0876, norm(y): 0.9997, norm:5.8772, tok/sec: 101823.41, flops:106.87, batch-reuse:1
@ 67 train 9.3552 , allloss: 11.6009, dt: 1302.71ms, fracRes: 0.0062, norm(attn): 0.0505, norm(output): 0.0942, norm(x): 0.0883, norm(y): 0.9997, norm:7.3118, tok/sec: 100614.83, flops:105.60, batch-reuse:1
@ 68 train 9.3982 , allloss: 11.7197, dt: 1297.84ms, fracRes: 0.0061, norm(attn): 0.0498, norm(output): 0.0942, norm(x): 0.0881, norm(y): 0.9997, norm:6.7014, tok/sec: 100992.56, flops:105.99, batch-reuse:1
@ 69 train 9.3469 , allloss: 11.8123, dt: 1284.33ms, fracRes: 0.0061, norm(attn): 0.0483, norm(output): 0.0933, norm(x): 0.0871, norm(y): 0.9997, norm:5.5465, tok/sec: 102055.06, flops:107.11, batch-reuse:1
@ 70 train 9.3361 , allloss: 12.0802, dt: 1336.69ms, fracRes: 0.0061, norm(attn): 0.0471, norm(output): 0.0928, norm(x): 0.0855, norm(y): 0.9996, norm:8.0791, tok/sec: 98057.16, flops:102.91, batch-reuse:1
@ 71 train 9.3219 , allloss: 12.2156, dt: 1325.96ms, fracRes: 0.0061, norm(attn): 0.0466, norm(output): 0.0918, norm(x): 0.0849, norm(y): 0.9996, norm:6.1185, tok/sec: 98850.28, flops:103.75, batch-reuse:1
@ 72 train 9.3176 , allloss: 12.2066, dt: 1313.18ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0913, norm(x): 0.0853, norm(y): 0.9996, norm:7.7013, tok/sec: 99812.92, flops:104.76, batch-reuse:1
@ 73 train 9.3102 , allloss: 12.0614, dt: 1319.87ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0933, norm(x): 0.0860, norm(y): 0.9996, norm:6.4153, tok/sec: 99307.02, flops:104.22, batch-reuse:1
@ 74 train 9.2956 , allloss: 11.9558, dt: 1313.23ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.0938, norm(x): 0.0865, norm(y): 0.9996, norm:5.7880, tok/sec: 99808.92, flops:104.75, batch-reuse:1
@ 75 train 9.5633 , allloss: 12.0267, dt: 1301.40ms, fracRes: 0.0061, norm(attn): 0.0479, norm(output): 0.0942, norm(x): 0.0875, norm(y): 0.9997, norm:7.5227, tok/sec: 100716.05, flops:105.70, batch-reuse:1
@ 76 train 9.2744 , allloss: 11.6913, dt: 1287.63ms, fracRes: 0.0061, norm(attn): 0.0479, norm(output): 0.0947, norm(x): 0.0886, norm(y): 0.9997, norm:5.3380, tok/sec: 101792.97, flops:106.83, batch-reuse:1
@ 77 train 9.5117 , allloss: 11.8858, dt: 1288.34ms, fracRes: 0.0061, norm(attn): 0.0486, norm(output): 0.0947, norm(x): 0.0888, norm(y): 0.9997, norm:7.9377, tok/sec: 101736.98, flops:106.77, batch-reuse:1
@ 78 train 9.3413 , allloss: 11.8788, dt: 1287.78ms, fracRes: 0.0061, norm(attn): 0.0474, norm(output): 0.0947, norm(x): 0.0879, norm(y): 0.9997, norm:6.0300, tok/sec: 101781.64, flops:106.82, batch-reuse:1
@ 79 train 9.1945 , allloss: 12.0206, dt: 1308.53ms, fracRes: 0.0061, norm(attn): 0.0457, norm(output): 0.0938, norm(x): 0.0864, norm(y): 0.9996, norm:5.5771, tok/sec: 100167.54, flops:105.13, batch-reuse:1
@ 80 train 9.1965 , allloss: 12.0789, dt: 1316.43ms, fracRes: 0.0061, norm(attn): 0.0454, norm(output): 0.0938, norm(x): 0.0861, norm(y): 0.9996, norm:6.4526, tok/sec: 99566.30, flops:104.50, batch-reuse:1
@ 81 train 9.1952 , allloss: 11.8696, dt: 1319.43ms, fracRes: 0.0061, norm(attn): 0.0464, norm(output): 0.0942, norm(x): 0.0874, norm(y): 0.9996, norm:4.5152, tok/sec: 99339.88, flops:104.26, batch-reuse:1
@ 82 train 9.1298 , allloss: 11.6331, dt: 1324.82ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0952, norm(x): 0.0888, norm(y): 0.9997, norm:4.5061, tok/sec: 98935.47, flops:103.83, batch-reuse:1
@ 83 train 9.1339 , allloss: 11.5854, dt: 1282.87ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.0967, norm(x): 0.0891, norm(y): 0.9997, norm:4.4548, tok/sec: 102171.27, flops:107.23, batch-reuse:1
@ 84 train 9.1310 , allloss: 11.6522, dt: 1299.56ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0952, norm(x): 0.0884, norm(y): 0.9997, norm:4.0814, tok/sec: 100858.93, flops:105.85, batch-reuse:1
@ 85 train 9.0850 , allloss: 11.6375, dt: 1288.72ms, fracRes: 0.0060, norm(attn): 0.0461, norm(output): 0.0952, norm(x): 0.0882, norm(y): 0.9997, norm:4.9259, tok/sec: 101707.34, flops:106.74, batch-reuse:1
@ 86 train 9.0423 , allloss: 11.4377, dt: 1298.76ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0967, norm(x): 0.0895, norm(y): 0.9997, norm:3.7984, tok/sec: 100921.25, flops:105.92, batch-reuse:1
@ 87 train 9.0498 , allloss: 11.3792, dt: 1287.38ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.0986, norm(x): 0.0901, norm(y): 0.9997, norm:4.2223, tok/sec: 101812.91, flops:106.85, batch-reuse:1
@ 88 train 9.0420 , allloss: 11.4324, dt: 1314.09ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0967, norm(x): 0.0894, norm(y): 0.9997, norm:3.4700, tok/sec: 99743.51, flops:104.68, batch-reuse:1
@ 89 train 8.9965 , allloss: 11.4766, dt: 1330.83ms, fracRes: 0.0060, norm(attn): 0.0459, norm(output): 0.0957, norm(x): 0.0885, norm(y): 0.9997, norm:4.3221, tok/sec: 98488.68, flops:103.37, batch-reuse:1
@ 90 train 9.0171 , allloss: 11.3496, dt: 1318.15ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0977, norm(x): 0.0892, norm(y): 0.9997, norm:3.8287, tok/sec: 99436.40, flops:104.36, batch-reuse:1
@ 91 train 9.0198 , allloss: 11.3247, dt: 1333.17ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.0991, norm(x): 0.0899, norm(y): 0.9997, norm:3.5476, tok/sec: 98315.82, flops:103.18, batch-reuse:1
@ 92 train 8.9189 , allloss: 11.1521, dt: 1336.02ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.0996, norm(x): 0.0905, norm(y): 0.9997, norm:3.7008, tok/sec: 98106.44, flops:102.96, batch-reuse:1
@ 93 train 8.9510 , allloss: 11.1990, dt: 1333.13ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.0991, norm(x): 0.0900, norm(y): 0.9997, norm:3.3953, tok/sec: 98319.13, flops:103.19, batch-reuse:1
@ 94 train 9.0622 , allloss: 11.2265, dt: 1333.89ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0991, norm(x): 0.0899, norm(y): 0.9997, norm:4.8061, tok/sec: 98263.29, flops:103.13, batch-reuse:1
@ 95 train 8.9196 , allloss: 11.0732, dt: 1331.61ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0991, norm(x): 0.0901, norm(y): 0.9997, norm:5.0407, tok/sec: 98430.93, flops:103.31, batch-reuse:1
@ 96 train 8.8332 , allloss: 10.9880, dt: 1309.85ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0991, norm(x): 0.0902, norm(y): 0.9997, norm:3.7696, tok/sec: 100066.51, flops:105.02, batch-reuse:1
@ 97 train 8.8855 , allloss: 11.0226, dt: 1299.24ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.0996, norm(x): 0.0901, norm(y): 0.9997, norm:5.4839, tok/sec: 100883.55, flops:105.88, batch-reuse:1
@ 98 train 8.8890 , allloss: 10.9194, dt: 1301.79ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.1006, norm(x): 0.0911, norm(y): 0.9997, norm:4.0393, tok/sec: 100685.68, flops:105.67, batch-reuse:1
@ 99 train 8.8446 , allloss: 10.8269, dt: 1317.08ms, fracRes: 0.0060, norm(attn): 0.0471, norm(output): 0.1016, norm(x): 0.0919, norm(y): 0.9997, norm:5.5032, tok/sec: 99516.91, flops:104.44, batch-reuse:1
@ 100 train 8.8070 , allloss: 10.8265, dt: 1334.55ms, fracRes: 0.0060, norm(attn): 0.0469, norm(output): 0.1011, norm(x): 0.0918, norm(y): 0.9997, norm:4.1288, tok/sec: 98214.68, flops:103.08, batch-reuse:1
@ 101 train 8.7384 , allloss: 10.8367, dt: 1280.99ms, fracRes: 0.0060, norm(attn): 0.0461, norm(output): 0.1006, norm(x): 0.0908, norm(y): 0.9997, norm:4.3288, tok/sec: 102321.16, flops:107.39, batch-reuse:1
@ 102 train 8.7810 , allloss: 10.8473, dt: 1311.37ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.1006, norm(x): 0.0910, norm(y): 0.9997, norm:5.0109, tok/sec: 99950.59, flops:104.90, batch-reuse:1
@ 103 train 8.7901 , allloss: 10.7654, dt: 1330.07ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.1016, norm(x): 0.0921, norm(y): 0.9997, norm:3.3358, tok/sec: 98545.24, flops:103.43, batch-reuse:1
@ 104 train 8.8111 , allloss: 10.8124, dt: 1322.17ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.1016, norm(x): 0.0918, norm(y): 0.9997, norm:3.9534, tok/sec: 99134.12, flops:104.04, batch-reuse:1
@ 105 train 8.7558 , allloss: 10.8179, dt: 1317.70ms, fracRes: 0.0060, norm(attn): 0.0457, norm(output): 0.1011, norm(x): 0.0911, norm(y): 0.9997, norm:3.0390, tok/sec: 99470.58, flops:104.40, batch-reuse:1
@ 106 train 8.7160 , allloss: 10.7693, dt: 1296.62ms, fracRes: 0.0060, norm(attn): 0.0461, norm(output): 0.1011, norm(x): 0.0914, norm(y): 0.9997, norm:5.0103, tok/sec: 101087.21, flops:106.09, batch-reuse:1
@ 107 train 8.6904 , allloss: 10.6084, dt: 1301.47ms, fracRes: 0.0060, norm(attn): 0.0466, norm(output): 0.1021, norm(x): 0.0928, norm(y): 0.9997, norm:3.0992, tok/sec: 100710.75, flops:105.70, batch-reuse:1
@ 108 train 8.6779 , allloss: 10.5939, dt: 1329.89ms, fracRes: 0.0060, norm(attn): 0.0464, norm(output): 0.1021, norm(x): 0.0928, norm(y): 0.9997, norm:3.5796, tok/sec: 98558.28, flops:103.44, batch-reuse:1
@ 109 train 8.6398 , allloss: 10.5938, dt: 1287.93ms, fracRes: 0.0060, norm(attn): 0.0459, norm(output): 0.1016, norm(x): 0.0921, norm(y): 0.9997, norm:2.9525, tok/sec: 101769.43, flops:106.81, batch-reuse:1
@ 110 train 8.6839 , allloss: 10.6484, dt: 1314.68ms, fracRes: 0.0060, norm(attn): 0.0459, norm(output): 0.1016, norm(x): 0.0920, norm(y): 0.9997, norm:5.0459, tok/sec: 99698.89, flops:104.64, batch-reuse:1
@ 111 train 8.6510 , allloss: 10.5516, dt: 1312.15ms, fracRes: 0.0060, norm(attn): 0.0464, norm(output): 0.1025, norm(x): 0.0931, norm(y): 0.9997, norm:2.9816, tok/sec: 99891.11, flops:104.84, batch-reuse:1
@ 112 train 8.6450 , allloss: 10.5566, dt: 1323.70ms, fracRes: 0.0060, norm(attn): 0.0461, norm(output): 0.1021, norm(x): 0.0928, norm(y): 0.9997, norm:3.1382, tok/sec: 99019.31, flops:103.92, batch-reuse:1
@ 113 train 8.6059 , allloss: 10.6268, dt: 1309.41ms, fracRes: 0.0060, norm(attn): 0.0442, norm(output): 0.1016, norm(x): 0.0914, norm(y): 0.9997, norm:2.9383, tok/sec: 100099.91, flops:105.06, batch-reuse:1
@ 114 train 8.6094 , allloss: 10.5872, dt: 1296.01ms, fracRes: 0.0060, norm(attn): 0.0449, norm(output): 0.1021, norm(x): 0.0917, norm(y): 0.9997, norm:2.7127, tok/sec: 101135.24, flops:106.14, batch-reuse:1
@ 115 train 8.5720 , allloss: 10.4458, dt: 1307.63ms, fracRes: 0.0060, norm(attn): 0.0459, norm(output): 0.1021, norm(x): 0.0931, norm(y): 0.9997, norm:2.6038, tok/sec: 100236.01, flops:105.20, batch-reuse:1
@ 116 train 8.5619 , allloss: 10.4129, dt: 1310.74ms, fracRes: 0.0060, norm(attn): 0.0464, norm(output): 0.1030, norm(x): 0.0932, norm(y): 0.9997, norm:2.6306, tok/sec: 99998.17, flops:104.95, batch-reuse:1
@ 117 train 8.5318 , allloss: 10.4539, dt: 1331.41ms, fracRes: 0.0061, norm(attn): 0.0452, norm(output): 0.1021, norm(x): 0.0922, norm(y): 0.9997, norm:3.6571, tok/sec: 98445.96, flops:103.32, batch-reuse:1
@ 118 train 8.5124 , allloss: 10.4434, dt: 1333.24ms, fracRes: 0.0060, norm(attn): 0.0442, norm(output): 0.1021, norm(x): 0.0919, norm(y): 0.9997, norm:3.0673, tok/sec: 98310.97, flops:103.18, batch-reuse:1
@ 119 train 8.4871 , allloss: 10.4099, dt: 1342.82ms, fracRes: 0.0061, norm(attn): 0.0437, norm(output): 0.1021, norm(x): 0.0919, norm(y): 0.9997, norm:2.7037, tok/sec: 97609.55, flops:102.44, batch-reuse:1
@ 120 train 8.6003 , allloss: 10.4219, dt: 1301.27ms, fracRes: 0.0061, norm(attn): 0.0454, norm(output): 0.1021, norm(x): 0.0927, norm(y): 0.9997, norm:2.8309, tok/sec: 100726.49, flops:105.71, batch-reuse:1
@ 121 train 8.6159 , allloss: 10.3945, dt: 1326.73ms, fracRes: 0.0061, norm(attn): 0.0459, norm(output): 0.1030, norm(x): 0.0932, norm(y): 0.9997, norm:3.0502, tok/sec: 98793.50, flops:103.69, batch-reuse:1
@ 122 train 8.5844 , allloss: 10.4333, dt: 1305.03ms, fracRes: 0.0061, norm(attn): 0.0449, norm(output): 0.1021, norm(x): 0.0919, norm(y): 0.9997, norm:2.7284, tok/sec: 100436.07, flops:105.41, batch-reuse:1
@ 123 train 8.4996 , allloss: 10.4462, dt: 1319.28ms, fracRes: 0.0061, norm(attn): 0.0432, norm(output): 0.1011, norm(x): 0.0903, norm(y): 0.9997, norm:8.5481, tok/sec: 99351.24, flops:104.27, batch-reuse:1
@ 124 train 8.4979 , allloss: 10.3772, dt: 1327.26ms, fracRes: 0.0061, norm(attn): 0.0432, norm(output): 0.1021, norm(x): 0.0911, norm(y): 0.9997, norm:3.0353, tok/sec: 98754.00, flops:103.64, batch-reuse:1
@ 125 train 8.5122 , allloss: 10.2090, dt: 1312.59ms, fracRes: 0.0061, norm(attn): 0.0459, norm(output): 0.1035, norm(x): 0.0935, norm(y): 0.9997, norm:5.4606, tok/sec: 99857.29, flops:104.80, batch-reuse:1
@ 126 train 8.4823 , allloss: 10.0813, dt: 1347.55ms, fracRes: 0.0061, norm(attn): 0.0469, norm(output): 0.1074, norm(x): 0.0946, norm(y): 0.9997, norm:3.5438, tok/sec: 97266.85, flops:102.08, batch-reuse:1
@ 127 train 8.4400 , allloss: 10.1075, dt: 1324.63ms, fracRes: 0.0061, norm(attn): 0.0454, norm(output): 0.1035, norm(x): 0.0931, norm(y): 0.9997, norm:7.0365, tok/sec: 98949.66, flops:103.85, batch-reuse:1
@ 128 train 8.3897 , allloss: 10.1118, dt: 1299.12ms, fracRes: 0.0061, norm(attn): 0.0435, norm(output): 0.1025, norm(x): 0.0925, norm(y): 0.9997, norm:4.0811, tok/sec: 100892.84, flops:105.89, batch-reuse:1
@ 129 train 8.5111 , allloss: 10.2257, dt: 1319.82ms, fracRes: 0.0061, norm(attn): 0.0442, norm(output): 0.1035, norm(x): 0.0930, norm(y): 0.9997, norm:4.7587, tok/sec: 99310.45, flops:104.23, batch-reuse:1
@ 130 train 8.4194 , allloss: 10.1508, dt: 1298.29ms, fracRes: 0.0061, norm(attn): 0.0437, norm(output): 0.1035, norm(x): 0.0933, norm(y): 0.9997, norm:4.4838, tok/sec: 100957.15, flops:105.96, batch-reuse:1
@ 131 train 8.4313 , allloss: 10.2044, dt: 1296.45ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.0928, norm(y): 0.9997, norm:2.5069, tok/sec: 101100.76, flops:106.11, batch-reuse:1
@ 132 train 8.4069 , allloss: 10.2132, dt: 1301.53ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1030, norm(x): 0.0925, norm(y): 0.9997, norm:5.6107, tok/sec: 100706.43, flops:105.69, batch-reuse:1
@ 133 train 8.3739 , allloss: 10.1138, dt: 1304.12ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1035, norm(x): 0.0935, norm(y): 0.9997, norm:2.3764, tok/sec: 100505.88, flops:105.48, batch-reuse:1
@ 134 train 8.3776 , allloss: 10.0488, dt: 1312.87ms, fracRes: 0.0062, norm(attn): 0.0432, norm(output): 0.1074, norm(x): 0.0945, norm(y): 0.9997, norm:3.2917, tok/sec: 99836.58, flops:104.78, batch-reuse:1
@ 135 train 8.3185 , allloss: 10.0457, dt: 1315.97ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1055, norm(x): 0.0939, norm(y): 0.9997, norm:2.9324, tok/sec: 99600.73, flops:104.53, batch-reuse:1
@ 136 train 8.3286 , allloss: 10.0760, dt: 1314.66ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1040, norm(x): 0.0933, norm(y): 0.9997, norm:4.0179, tok/sec: 99700.13, flops:104.64, batch-reuse:1
@ 137 train 8.2451 , allloss: 9.9623, dt: 1315.19ms, fracRes: 0.0062, norm(attn): 0.0427, norm(output): 0.1064, norm(x): 0.0939, norm(y): 0.9997, norm:2.7742, tok/sec: 99660.35, flops:104.60, batch-reuse:1
@ 138 train 8.2196 , allloss: 9.8821, dt: 1321.97ms, fracRes: 0.0062, norm(attn): 0.0430, norm(output): 0.1074, norm(x): 0.0946, norm(y): 0.9997, norm:3.5591, tok/sec: 99149.21, flops:104.06, batch-reuse:1
@ 139 train 8.1641 , allloss: 9.8420, dt: 1299.09ms, fracRes: 0.0062, norm(attn): 0.0420, norm(output): 0.1074, norm(x): 0.0940, norm(y): 0.9997, norm:3.1150, tok/sec: 100895.56, flops:105.89, batch-reuse:1
@ 140 train 8.2170 , allloss: 9.9889, dt: 1354.11ms, fracRes: 0.0062, norm(attn): 0.0405, norm(output): 0.1035, norm(x): 0.0929, norm(y): 0.9997, norm:4.2218, tok/sec: 96795.83, flops:101.59, batch-reuse:1
@ 141 train 8.2037 , allloss: 9.8865, dt: 1341.29ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1064, norm(x): 0.0940, norm(y): 0.9997, norm:2.8810, tok/sec: 97720.89, flops:102.56, batch-reuse:1
@ 142 train 8.2645 , allloss: 9.8300, dt: 1300.61ms, fracRes: 0.0063, norm(attn): 0.0430, norm(output): 0.1089, norm(x): 0.0957, norm(y): 0.9997, norm:2.9648, tok/sec: 100777.66, flops:105.77, batch-reuse:1
@ 143 train 8.2245 , allloss: 9.8194, dt: 1326.16ms, fracRes: 0.0063, norm(attn): 0.0425, norm(output): 0.1074, norm(x): 0.0950, norm(y): 0.9997, norm:3.0097, tok/sec: 98836.08, flops:103.73, batch-reuse:1
@ 144 train 8.1494 , allloss: 9.8217, dt: 1331.82ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1064, norm(x): 0.0935, norm(y): 0.9997, norm:2.9212, tok/sec: 98415.54, flops:103.29, batch-reuse:1
@ 145 train 8.1575 , allloss: 9.8141, dt: 1313.40ms, fracRes: 0.0062, norm(attn): 0.0415, norm(output): 0.1074, norm(x): 0.0939, norm(y): 0.9997, norm:2.6618, tok/sec: 99795.95, flops:104.74, batch-reuse:1
@ 146 train 8.2407 , allloss: 9.8219, dt: 1298.32ms, fracRes: 0.0063, norm(attn): 0.0425, norm(output): 0.1074, norm(x): 0.0945, norm(y): 0.9997, norm:2.5027, tok/sec: 100955.26, flops:105.95, batch-reuse:1
@ 147 train 8.1481 , allloss: 9.7212, dt: 1318.24ms, fracRes: 0.0063, norm(attn): 0.0420, norm(output): 0.1074, norm(x): 0.0942, norm(y): 0.9997, norm:2.3987, tok/sec: 99429.80, flops:104.35, batch-reuse:1
@ 148 train 8.1230 , allloss: 9.7343, dt: 1326.67ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1040, norm(x): 0.0931, norm(y): 0.9997, norm:4.0169, tok/sec: 98797.60, flops:103.69, batch-reuse:1
@ 149 train 8.0268 , allloss: 9.6049, dt: 1305.14ms, fracRes: 0.0063, norm(attn): 0.0408, norm(output): 0.1050, norm(x): 0.0935, norm(y): 0.9997, norm:2.3546, tok/sec: 100427.89, flops:105.40, batch-reuse:1
@ 150 train 8.1687 , allloss: 9.6839, dt: 1278.25ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1074, norm(x): 0.0941, norm(y): 0.9998, norm:2.3516, tok/sec: 102540.33, flops:107.62, batch-reuse:1
@ 151 train 8.0114 , allloss: 9.5348, dt: 1331.37ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1040, norm(x): 0.0934, norm(y): 0.9998, norm:2.4604, tok/sec: 98448.85, flops:103.32, batch-reuse:1
@ 152 train 8.0201 , allloss: 9.5493, dt: 1307.77ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1035, norm(x): 0.0926, norm(y): 0.9997, norm:3.9572, tok/sec: 100225.56, flops:105.19, batch-reuse:1
@ 153 train 7.9755 , allloss: 9.4275, dt: 1296.84ms, fracRes: 0.0063, norm(attn): 0.0413, norm(output): 0.1064, norm(x): 0.0938, norm(y): 0.9998, norm:2.7182, tok/sec: 101070.19, flops:106.08, batch-reuse:1
@ 154 train 8.0466 , allloss: 9.4734, dt: 1304.50ms, fracRes: 0.0063, norm(attn): 0.0420, norm(output): 0.1074, norm(x): 0.0941, norm(y): 0.9998, norm:2.6049, tok/sec: 100476.75, flops:105.45, batch-reuse:1
@ 155 train 8.0907 , allloss: 9.5056, dt: 1317.56ms, fracRes: 0.0063, norm(attn): 0.0420, norm(output): 0.1064, norm(x): 0.0939, norm(y): 0.9998, norm:2.4346, tok/sec: 99480.97, flops:104.41, batch-reuse:1
@ 156 train 7.9829 , allloss: 9.4943, dt: 1328.45ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1035, norm(x): 0.0923, norm(y): 0.9998, norm:3.6684, tok/sec: 98665.35, flops:103.55, batch-reuse:1
@ 157 train 8.0434 , allloss: 9.4404, dt: 1325.16ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1064, norm(x): 0.0942, norm(y): 0.9998, norm:3.7490, tok/sec: 98909.98, flops:103.81, batch-reuse:1
@ 158 train 8.0090 , allloss: 9.3170, dt: 1320.78ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1089, norm(x): 0.0957, norm(y): 0.9998, norm:2.9155, tok/sec: 99238.18, flops:104.15, batch-reuse:1
@ 159 train 8.0319 , allloss: 9.3805, dt: 1291.86ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1074, norm(x): 0.0946, norm(y): 0.9998, norm:2.4775, tok/sec: 101460.18, flops:106.48, batch-reuse:1
@ 160 train 7.9586 , allloss: 9.3407, dt: 1302.63ms, fracRes: 0.0063, norm(attn): 0.0398, norm(output): 0.1074, norm(x): 0.0938, norm(y): 0.9998, norm:2.4218, tok/sec: 100621.35, flops:105.60, batch-reuse:1
@ 161 train 7.9409 , allloss: 9.2514, dt: 1325.09ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1074, norm(x): 0.0948, norm(y): 0.9998, norm:2.8006, tok/sec: 98915.76, flops:103.81, batch-reuse:1
@ 162 train 7.9857 , allloss: 9.3036, dt: 1304.21ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1074, norm(x): 0.0942, norm(y): 0.9998, norm:2.4407, tok/sec: 100499.03, flops:105.48, batch-reuse:1
@ 163 train 7.9382 , allloss: 9.2921, dt: 1312.47ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1064, norm(x): 0.0934, norm(y): 0.9998, norm:4.9342, tok/sec: 99866.56, flops:104.81, batch-reuse:1
@ 164 train 7.8503 , allloss: 9.1250, dt: 1344.31ms, fracRes: 0.0063, norm(attn): 0.0403, norm(output): 0.1079, norm(x): 0.0949, norm(y): 0.9998, norm:3.3181, tok/sec: 97501.13, flops:102.33, batch-reuse:1
@ 165 train 7.9150 , allloss: 9.1377, dt: 1309.27ms, fracRes: 0.0064, norm(attn): 0.0405, norm(output): 0.1089, norm(x): 0.0960, norm(y): 0.9998, norm:2.4537, tok/sec: 100110.63, flops:105.07, batch-reuse:1
@ 166 train 7.8575 , allloss: 9.1138, dt: 1346.64ms, fracRes: 0.0063, norm(attn): 0.0396, norm(output): 0.1084, norm(x): 0.0951, norm(y): 0.9998, norm:3.8315, tok/sec: 97332.61, flops:102.15, batch-reuse:1
@ 167 train 7.8465 , allloss: 9.1177, dt: 1341.60ms, fracRes: 0.0063, norm(attn): 0.0393, norm(output): 0.1079, norm(x): 0.0952, norm(y): 0.9998, norm:3.0220, tok/sec: 97698.50, flops:102.54, batch-reuse:1
@ 168 train 7.7914 , allloss: 9.0420, dt: 1329.34ms, fracRes: 0.0064, norm(attn): 0.0396, norm(output): 0.1089, norm(x): 0.0954, norm(y): 0.9998, norm:2.6417, tok/sec: 98599.13, flops:103.48, batch-reuse:1
@ 169 train 7.8165 , allloss: 9.0591, dt: 1341.87ms, fracRes: 0.0064, norm(attn): 0.0391, norm(output): 0.1079, norm(x): 0.0951, norm(y): 0.9998, norm:2.7128, tok/sec: 97678.68, flops:102.52, batch-reuse:1
@ 170 train 7.7680 , allloss: 8.9978, dt: 1290.07ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1084, norm(x): 0.0952, norm(y): 0.9998, norm:2.3700, tok/sec: 101600.53, flops:106.63, batch-reuse:1
@ 171 train 7.7573 , allloss: 8.9514, dt: 1311.81ms, fracRes: 0.0064, norm(attn): 0.0391, norm(output): 0.1089, norm(x): 0.0959, norm(y): 0.9999, norm:2.6454, tok/sec: 99917.27, flops:104.87, batch-reuse:1
@ 172 train 7.7836 , allloss: 8.9462, dt: 1318.27ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1084, norm(x): 0.0956, norm(y): 0.9999, norm:5.3448, tok/sec: 99427.12, flops:104.35, batch-reuse:1
@ 173 train 7.7357 , allloss: 8.8788, dt: 1290.02ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1089, norm(x): 0.0961, norm(y): 0.9999, norm:3.2743, tok/sec: 101604.95, flops:106.64, batch-reuse:1
@ 174 train 7.8561 , allloss: 8.9978, dt: 1303.13ms, fracRes: 0.0065, norm(attn): 0.0393, norm(output): 0.1089, norm(x): 0.0959, norm(y): 0.9999, norm:2.2653, tok/sec: 100582.52, flops:105.56, batch-reuse:1
@ 175 train 7.8656 , allloss: 8.9687, dt: 1318.36ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1094, norm(x): 0.0968, norm(y): 0.9999, norm:4.2840, tok/sec: 99420.84, flops:104.34, batch-reuse:1
@ 176 train 7.7651 , allloss: 8.8415, dt: 1290.91ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1099, norm(x): 0.0975, norm(y): 0.9999, norm:3.2111, tok/sec: 101534.58, flops:106.56, batch-reuse:1
@ 177 train 7.7242 , allloss: 8.8558, dt: 1297.07ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.1089, norm(x): 0.0959, norm(y): 0.9999, norm:3.9367, tok/sec: 101052.74, flops:106.06, batch-reuse:1
@ 178 train 7.7657 , allloss: 8.8716, dt: 1324.65ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.1094, norm(x): 0.0963, norm(y): 0.9999, norm:3.7566, tok/sec: 98948.75, flops:103.85, batch-reuse:1
@ 179 train 7.6484 , allloss: 8.6980, dt: 1338.36ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.1099, norm(x): 0.0969, norm(y): 0.9999, norm:2.9761, tok/sec: 97935.15, flops:102.78, batch-reuse:1
@ 180 train 7.7529 , allloss: 8.7982, dt: 1309.91ms, fracRes: 0.0065, norm(attn): 0.0388, norm(output): 0.1094, norm(x): 0.0969, norm(y): 0.9999, norm:2.1555, tok/sec: 100061.49, flops:105.02, batch-reuse:1
@ 181 train 7.6912 , allloss: 8.7540, dt: 1301.43ms, fracRes: 0.0066, norm(attn): 0.0381, norm(output): 0.1094, norm(x): 0.0964, norm(y): 0.9999, norm:2.2679, tok/sec: 100714.09, flops:105.70, batch-reuse:1
@ 182 train 7.6995 , allloss: 8.6845, dt: 1324.77ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1099, norm(x): 0.0975, norm(y): 0.9999, norm:3.0800, tok/sec: 98939.28, flops:103.84, batch-reuse:1
@ 183 train 7.6513 , allloss: 8.5893, dt: 1346.95ms, fracRes: 0.0066, norm(attn): 0.0396, norm(output): 0.1104, norm(x): 0.0985, norm(y): 1.0000, norm:3.4976, tok/sec: 97310.32, flops:102.13, batch-reuse:1
@ 184 train 7.5305 , allloss: 8.4972, dt: 1300.68ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1099, norm(x): 0.0972, norm(y): 1.0000, norm:2.3060, tok/sec: 100772.09, flops:105.76, batch-reuse:1
@ 185 train 7.5574 , allloss: 8.4873, dt: 1309.80ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1099, norm(x): 0.0978, norm(y): 1.0000, norm:2.6035, tok/sec: 100070.45, flops:105.03, batch-reuse:1
@ 186 train 7.7122 , allloss: 8.6015, dt: 1311.97ms, fracRes: 0.0066, norm(attn): 0.0398, norm(output): 0.1123, norm(x): 0.0990, norm(y): 1.0000, norm:3.6549, tok/sec: 99904.72, flops:104.85, batch-reuse:1
@ 187 train 7.7971 , allloss: 8.6809, dt: 1290.19ms, fracRes: 0.0066, norm(attn): 0.0391, norm(output): 0.1104, norm(x): 0.0985, norm(y): 1.0000, norm:2.3447, tok/sec: 101590.86, flops:106.62, batch-reuse:1
@ 188 train 7.6384 , allloss: 8.5549, dt: 1293.54ms, fracRes: 0.0066, norm(attn): 0.0388, norm(output): 0.1099, norm(x): 0.0974, norm(y): 1.0000, norm:2.7657, tok/sec: 101328.01, flops:106.35, batch-reuse:1
@ 189 train 7.7333 , allloss: 8.5996, dt: 1292.72ms, fracRes: 0.0066, norm(attn): 0.0398, norm(output): 0.1113, norm(x): 0.0988, norm(y): 1.0000, norm:3.7543, tok/sec: 101392.80, flops:106.41, batch-reuse:1
@ 190 train 7.6932 , allloss: 8.4977, dt: 1295.73ms, fracRes: 0.0067, norm(attn): 0.0396, norm(output): 0.1152, norm(x): 0.0998, norm(y): 1.0000, norm:3.1657, tok/sec: 101157.09, flops:106.17, batch-reuse:1
@ 191 train 7.6353 , allloss: 8.4598, dt: 1319.88ms, fracRes: 0.0067, norm(attn): 0.0391, norm(output): 0.1138, norm(x): 0.0998, norm(y): 1.0000, norm:1.8454, tok/sec: 99306.21, flops:104.22, batch-reuse:1
@ 192 train 7.6869 , allloss: 8.5500, dt: 1347.07ms, fracRes: 0.0066, norm(attn): 0.0381, norm(output): 0.1113, norm(x): 0.0990, norm(y): 1.0000, norm:4.9285, tok/sec: 97301.74, flops:102.12, batch-reuse:1
@ 193 train 7.6190 , allloss: 8.4773, dt: 1324.43ms, fracRes: 0.0067, norm(attn): 0.0378, norm(output): 0.1113, norm(x): 0.0989, norm(y): 1.0000, norm:2.2295, tok/sec: 98964.70, flops:103.87, batch-reuse:1
@ 194 train 7.7061 , allloss: 8.4868, dt: 1310.36ms, fracRes: 0.0068, norm(attn): 0.0396, norm(output): 0.1157, norm(x): 0.1003, norm(y): 1.0001, norm:3.9017, tok/sec: 100027.68, flops:104.98, batch-reuse:1
@ 195 train 7.6642 , allloss: 8.4327, dt: 1298.98ms, fracRes: 0.0068, norm(attn): 0.0396, norm(output): 0.1167, norm(x): 0.1013, norm(y): 1.0001, norm:3.0176, tok/sec: 100904.06, flops:105.90, batch-reuse:1
@ 196 train 7.5890 , allloss: 8.4329, dt: 1310.28ms, fracRes: 0.0067, norm(attn): 0.0371, norm(output): 0.1143, norm(x): 0.0996, norm(y): 1.0000, norm:2.7263, tok/sec: 100033.96, flops:104.99, batch-reuse:1
@ 197 train 7.5669 , allloss: 8.4299, dt: 1323.65ms, fracRes: 0.0067, norm(attn): 0.0361, norm(output): 0.1113, norm(x): 0.0990, norm(y): 1.0000, norm:3.4899, tok/sec: 99022.91, flops:103.93, batch-reuse:1
@ 198 train 7.5176 , allloss: 8.3061, dt: 1321.38ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1157, norm(x): 0.1009, norm(y): 1.0001, norm:2.0196, tok/sec: 99193.01, flops:104.10, batch-reuse:1
@ 199 train 7.5962 , allloss: 8.3499, dt: 1343.16ms, fracRes: 0.0068, norm(attn): 0.0386, norm(output): 0.1167, norm(x): 0.1013, norm(y): 1.0001, norm:1.9932, tok/sec: 97584.86, flops:102.42, batch-reuse:1
@ 200 train 7.5875 , allloss: 8.3584, dt: 1353.95ms, fracRes: 0.0068, norm(attn): 0.0381, norm(output): 0.1167, norm(x): 0.1009, norm(y): 1.0001, norm:1.6677, tok/sec: 96806.91, flops:101.60, batch-reuse:1
@ 201 train 7.5700 , allloss: 8.3927, dt: 1350.32ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1157, norm(x): 0.1001, norm(y): 1.0001, norm:3.1130, tok/sec: 97067.56, flops:101.87, batch-reuse:1
@ 202 train 7.5989 , allloss: 8.3927, dt: 1318.95ms, fracRes: 0.0067, norm(attn): 0.0376, norm(output): 0.1157, norm(x): 0.1003, norm(y): 1.0001, norm:2.3189, tok/sec: 99376.26, flops:104.30, batch-reuse:1
@ 203 train 7.5806 , allloss: 8.3374, dt: 1341.19ms, fracRes: 0.0067, norm(attn): 0.0376, norm(output): 0.1167, norm(x): 0.1011, norm(y): 1.0001, norm:1.9268, tok/sec: 97728.18, flops:102.57, batch-reuse:1
@ 204 train 7.5505 , allloss: 8.2791, dt: 1291.99ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1167, norm(x): 0.1015, norm(y): 1.0001, norm:2.3459, tok/sec: 101449.44, flops:106.47, batch-reuse:1
@ 205 train 7.5435 , allloss: 8.2631, dt: 1312.14ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1162, norm(x): 0.1002, norm(y): 1.0001, norm:5.5659, tok/sec: 99891.80, flops:104.84, batch-reuse:1
@ 206 train 7.5552 , allloss: 8.2621, dt: 1319.66ms, fracRes: 0.0068, norm(attn): 0.0381, norm(output): 0.1162, norm(x): 0.1010, norm(y): 1.0001, norm:1.8595, tok/sec: 99322.61, flops:104.24, batch-reuse:1
@ 207 train 7.4627 , allloss: 8.1797, dt: 1317.83ms, fracRes: 0.0067, norm(attn): 0.0376, norm(output): 0.1167, norm(x): 0.1013, norm(y): 1.0002, norm:3.9615, tok/sec: 99460.29, flops:104.39, batch-reuse:1
@ 208 train 7.5222 , allloss: 8.2437, dt: 1292.42ms, fracRes: 0.0067, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1012, norm(y): 1.0002, norm:2.4886, tok/sec: 101415.58, flops:106.44, batch-reuse:1
@ 209 train 7.5345 , allloss: 8.2441, dt: 1308.91ms, fracRes: 0.0068, norm(attn): 0.0371, norm(output): 0.1167, norm(x): 0.1013, norm(y): 1.0002, norm:2.7502, tok/sec: 100138.20, flops:105.10, batch-reuse:1
@ 210 train 7.4927 , allloss: 8.1941, dt: 1316.42ms, fracRes: 0.0068, norm(attn): 0.0374, norm(output): 0.1167, norm(x): 0.1019, norm(y): 1.0002, norm:2.0394, tok/sec: 99566.89, flops:104.50, batch-reuse:1
@ 211 train 7.4344 , allloss: 8.1404, dt: 1322.40ms, fracRes: 0.0067, norm(attn): 0.0366, norm(output): 0.1167, norm(x): 0.1018, norm(y): 1.0002, norm:3.1299, tok/sec: 99117.07, flops:104.03, batch-reuse:1
@ 212 train 7.5041 , allloss: 8.1833, dt: 1341.40ms, fracRes: 0.0067, norm(attn): 0.0364, norm(output): 0.1167, norm(x): 0.1017, norm(y): 1.0002, norm:1.8798, tok/sec: 97712.57, flops:102.55, batch-reuse:1
@ 213 train 7.3968 , allloss: 8.0635, dt: 1291.49ms, fracRes: 0.0067, norm(attn): 0.0361, norm(output): 0.1172, norm(x): 0.1017, norm(y): 1.0002, norm:1.6697, tok/sec: 101489.08, flops:106.51, batch-reuse:1
@ 214 train 7.4382 , allloss: 8.1042, dt: 1297.90ms, fracRes: 0.0067, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1014, norm(y): 1.0002, norm:2.2496, tok/sec: 100987.68, flops:105.99, batch-reuse:1
@ 215 train 7.3597 , allloss: 8.0033, dt: 1297.45ms, fracRes: 0.0067, norm(attn): 0.0366, norm(output): 0.1167, norm(x): 0.1012, norm(y): 1.0002, norm:2.8036, tok/sec: 101022.71, flops:106.03, batch-reuse:1
@ 216 train 7.3823 , allloss: 8.0056, dt: 1307.55ms, fracRes: 0.0068, norm(attn): 0.0371, norm(output): 0.1167, norm(x): 0.1021, norm(y): 1.0002, norm:1.5906, tok/sec: 100242.62, flops:105.21, batch-reuse:1
@ 217 train 7.4422 , allloss: 8.1241, dt: 1309.12ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1167, norm(x): 0.1005, norm(y): 1.0002, norm:3.5469, tok/sec: 100122.57, flops:105.08, batch-reuse:1
@ 218 train 7.4152 , allloss: 8.0475, dt: 1336.28ms, fracRes: 0.0067, norm(attn): 0.0361, norm(output): 0.1167, norm(x): 0.1016, norm(y): 1.0003, norm:1.6035, tok/sec: 98087.10, flops:102.94, batch-reuse:1
@ 219 train 7.5099 , allloss: 8.0990, dt: 1304.18ms, fracRes: 0.0067, norm(attn): 0.0371, norm(output): 0.1172, norm(x): 0.1017, norm(y): 1.0003, norm:2.5486, tok/sec: 100501.32, flops:105.48, batch-reuse:1
@ 220 train 7.4460 , allloss: 8.0160, dt: 1288.71ms, fracRes: 0.0068, norm(attn): 0.0376, norm(output): 0.1172, norm(x): 0.1023, norm(y): 1.0003, norm:2.0437, tok/sec: 101708.05, flops:106.74, batch-reuse:1
@ 221 train 7.4558 , allloss: 8.0538, dt: 1302.96ms, fracRes: 0.0067, norm(attn): 0.0369, norm(output): 0.1167, norm(x): 0.1016, norm(y): 1.0003, norm:2.4409, tok/sec: 100595.41, flops:105.58, batch-reuse:1
@ 222 train 7.3837 , allloss: 7.9754, dt: 1301.13ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1167, norm(x): 0.1018, norm(y): 1.0003, norm:2.5394, tok/sec: 100736.79, flops:105.73, batch-reuse:1
@ 223 train 7.4154 , allloss: 7.9530, dt: 1331.55ms, fracRes: 0.0067, norm(attn): 0.0371, norm(output): 0.1182, norm(x): 0.1037, norm(y): 1.0003, norm:2.7076, tok/sec: 98435.40, flops:103.31, batch-reuse:1
@ 224 train 7.3310 , allloss: 7.8802, dt: 1344.24ms, fracRes: 0.0067, norm(attn): 0.0361, norm(output): 0.1172, norm(x): 0.1029, norm(y): 1.0003, norm:2.2449, tok/sec: 97506.63, flops:102.34, batch-reuse:1
@ 225 train 7.3545 , allloss: 7.9133, dt: 1343.08ms, fracRes: 0.0067, norm(attn): 0.0354, norm(output): 0.1172, norm(x): 0.1024, norm(y): 1.0003, norm:1.7035, tok/sec: 97590.45, flops:102.42, batch-reuse:1
@ 226 train 7.4077 , allloss: 7.9758, dt: 1341.07ms, fracRes: 0.0068, norm(attn): 0.0356, norm(output): 0.1172, norm(x): 0.1019, norm(y): 1.0003, norm:2.3035, tok/sec: 97736.78, flops:102.58, batch-reuse:1
@ 227 train 7.3885 , allloss: 7.9449, dt: 1336.82ms, fracRes: 0.0068, norm(attn): 0.0354, norm(output): 0.1172, norm(x): 0.1023, norm(y): 1.0003, norm:2.6113, tok/sec: 98047.75, flops:102.90, batch-reuse:1
@ 228 train 7.3644 , allloss: 7.9083, dt: 1320.38ms, fracRes: 0.0068, norm(attn): 0.0359, norm(output): 0.1177, norm(x): 0.1033, norm(y): 1.0004, norm:2.6011, tok/sec: 99268.72, flops:104.18, batch-reuse:1
@ 229 train 7.4016 , allloss: 7.9418, dt: 1311.29ms, fracRes: 0.0068, norm(attn): 0.0356, norm(output): 0.1172, norm(x): 0.1027, norm(y): 1.0004, norm:1.8285, tok/sec: 99956.64, flops:104.91, batch-reuse:1
@ 230 train 7.3768 , allloss: 7.8834, dt: 1349.40ms, fracRes: 0.0068, norm(attn): 0.0359, norm(output): 0.1177, norm(x): 0.1033, norm(y): 1.0004, norm:1.3782, tok/sec: 97133.49, flops:101.94, batch-reuse:1
@ 231 train 7.2971 , allloss: 7.8218, dt: 1347.56ms, fracRes: 0.0068, norm(attn): 0.0354, norm(output): 0.1177, norm(x): 0.1029, norm(y): 1.0004, norm:3.0372, tok/sec: 97266.04, flops:102.08, batch-reuse:1
@ 232 train 7.2790 , allloss: 7.7885, dt: 1330.23ms, fracRes: 0.0068, norm(attn): 0.0352, norm(output): 0.1177, norm(x): 0.1028, norm(y): 1.0004, norm:2.4847, tok/sec: 98533.55, flops:103.41, batch-reuse:1
@ 233 train 7.3347 , allloss: 7.8165, dt: 1343.77ms, fracRes: 0.0069, norm(attn): 0.0354, norm(output): 0.1187, norm(x): 0.1036, norm(y): 1.0004, norm:1.4939, tok/sec: 97540.76, flops:102.37, batch-reuse:1
@ 234 train 7.1731 , allloss: 7.6941, dt: 1341.26ms, fracRes: 0.0068, norm(attn): 0.0347, norm(output): 0.1172, norm(x): 0.1032, norm(y): 1.0004, norm:2.8201, tok/sec: 97723.35, flops:102.56, batch-reuse:1
@ 235 train 7.3107 , allloss: 7.8091, dt: 1318.17ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1177, norm(x): 0.1029, norm(y): 1.0004, norm:1.6649, tok/sec: 99434.73, flops:104.36, batch-reuse:1
@ 236 train 7.1898 , allloss: 7.6741, dt: 1331.49ms, fracRes: 0.0069, norm(attn): 0.0342, norm(output): 0.1172, norm(x): 0.1027, norm(y): 1.0004, norm:2.7558, tok/sec: 98440.34, flops:103.31, batch-reuse:1
@ 237 train 7.2903 , allloss: 7.7556, dt: 1291.41ms, fracRes: 0.0069, norm(attn): 0.0352, norm(output): 0.1187, norm(x): 0.1034, norm(y): 1.0005, norm:2.0704, tok/sec: 101494.99, flops:106.52, batch-reuse:1
@ 238 train 7.2476 , allloss: 7.7395, dt: 1296.38ms, fracRes: 0.0069, norm(attn): 0.0344, norm(output): 0.1172, norm(x): 0.1023, norm(y): 1.0005, norm:1.6830, tok/sec: 101106.38, flops:106.11, batch-reuse:1
@ 239 train 7.2523 , allloss: 7.6913, dt: 1318.35ms, fracRes: 0.0070, norm(attn): 0.0349, norm(output): 0.1177, norm(x): 0.1035, norm(y): 1.0005, norm:3.2484, tok/sec: 99421.31, flops:104.34, batch-reuse:1
@ 240 train 7.3225 , allloss: 7.7312, dt: 1293.62ms, fracRes: 0.0070, norm(attn): 0.0356, norm(output): 0.1201, norm(x): 0.1051, norm(y): 1.0005, norm:1.3588, tok/sec: 101322.12, flops:106.34, batch-reuse:1
@ 241 train 7.2757 , allloss: 7.7112, dt: 1304.58ms, fracRes: 0.0069, norm(attn): 0.0347, norm(output): 0.1187, norm(x): 0.1044, norm(y): 1.0005, norm:2.6385, tok/sec: 100470.78, flops:105.45, batch-reuse:1
@ 242 train 7.2851 , allloss: 7.7420, dt: 1287.18ms, fracRes: 0.0069, norm(attn): 0.0334, norm(output): 0.1177, norm(x): 0.1031, norm(y): 1.0005, norm:1.9229, tok/sec: 101828.83, flops:106.87, batch-reuse:1
@ 243 train 7.1177 , allloss: 7.5418, dt: 1315.95ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1177, norm(x): 0.1037, norm(y): 1.0005, norm:1.6799, tok/sec: 99602.90, flops:104.54, batch-reuse:1
@ 244 train 7.3179 , allloss: 7.7032, dt: 1355.50ms, fracRes: 0.0070, norm(attn): 0.0354, norm(output): 0.1191, norm(x): 0.1046, norm(y): 1.0005, norm:1.4668, tok/sec: 96696.10, flops:101.48, batch-reuse:1
@ 245 train 7.1402 , allloss: 7.5641, dt: 1345.11ms, fracRes: 0.0069, norm(attn): 0.0330, norm(output): 0.1177, norm(x): 0.1031, norm(y): 1.0005, norm:1.5000, tok/sec: 97443.47, flops:102.27, batch-reuse:1
@ 246 train 7.3564 , allloss: 7.7518, dt: 1311.92ms, fracRes: 0.0069, norm(attn): 0.0342, norm(output): 0.1177, norm(x): 0.1037, norm(y): 1.0006, norm:1.9896, tok/sec: 99908.79, flops:104.86, batch-reuse:1
@ 247 train 7.2500 , allloss: 7.6358, dt: 1291.95ms, fracRes: 0.0069, norm(attn): 0.0349, norm(output): 0.1191, norm(x): 0.1043, norm(y): 1.0006, norm:2.4790, tok/sec: 101453.20, flops:106.48, batch-reuse:1
@ 248 train 7.1834 , allloss: 7.5499, dt: 1308.35ms, fracRes: 0.0069, norm(attn): 0.0347, norm(output): 0.1191, norm(x): 0.1044, norm(y): 1.0006, norm:1.3235, tok/sec: 100181.52, flops:105.14, batch-reuse:1
@ 249 train 7.1437 , allloss: 7.5265, dt: 1286.16ms, fracRes: 0.0069, norm(attn): 0.0334, norm(output): 0.1177, norm(x): 0.1032, norm(y): 1.0006, norm:2.2299, tok/sec: 101909.16, flops:106.96, batch-reuse:1
@ 250 train 7.1962 , allloss: 7.5733, dt: 1309.51ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1177, norm(x): 0.1036, norm(y): 1.0006, norm:2.7218, tok/sec: 100092.31, flops:105.05, batch-reuse:1
@ 251 train 7.1062 , allloss: 7.4490, dt: 1291.46ms, fracRes: 0.0070, norm(attn): 0.0342, norm(output): 0.1191, norm(x): 0.1048, norm(y): 1.0006, norm:1.7011, tok/sec: 101491.22, flops:106.52, batch-reuse:1
@ 252 train 7.2864 , allloss: 7.6160, dt: 1319.81ms, fracRes: 0.0070, norm(attn): 0.0352, norm(output): 0.1191, norm(x): 0.1048, norm(y): 1.0006, norm:3.5052, tok/sec: 99311.41, flops:104.23, batch-reuse:1
@ 253 train 7.1180 , allloss: 7.4672, dt: 1311.10ms, fracRes: 0.0069, norm(attn): 0.0334, norm(output): 0.1191, norm(x): 0.1051, norm(y): 1.0006, norm:1.7652, tok/sec: 99970.74, flops:104.92, batch-reuse:1
@ 254 train 7.0707 , allloss: 7.4216, dt: 1290.99ms, fracRes: 0.0069, norm(attn): 0.0332, norm(output): 0.1191, norm(x): 0.1052, norm(y): 1.0007, norm:2.4217, tok/sec: 101528.63, flops:106.56, batch-reuse:1
@ 255 train 7.0965 , allloss: 7.4427, dt: 1295.00ms, fracRes: 0.0069, norm(attn): 0.0330, norm(output): 0.1182, norm(x): 0.1044, norm(y): 1.0007, norm:1.5523, tok/sec: 101213.67, flops:106.23, batch-reuse:1
@ 256 train 7.1259 , allloss: 7.4606, dt: 1311.85ms, fracRes: 0.0069, norm(attn): 0.0332, norm(output): 0.1182, norm(x): 0.1040, norm(y): 1.0007, norm:2.1523, tok/sec: 99913.93, flops:104.86, batch-reuse:1
@ 257 train 7.1677 , allloss: 7.4724, dt: 1333.53ms, fracRes: 0.0069, norm(attn): 0.0347, norm(output): 0.1191, norm(x): 0.1051, norm(y): 1.0007, norm:1.5896, tok/sec: 98289.72, flops:103.16, batch-reuse:1
@ 258 train 7.1043 , allloss: 7.4165, dt: 1329.38ms, fracRes: 0.0069, norm(attn): 0.0337, norm(output): 0.1201, norm(x): 0.1052, norm(y): 1.0007, norm:1.9437, tok/sec: 98595.98, flops:103.48, batch-reuse:1
@ 259 train 7.0982 , allloss: 7.4296, dt: 1291.24ms, fracRes: 0.0070, norm(attn): 0.0325, norm(output): 0.1191, norm(x): 0.1050, norm(y): 1.0007, norm:1.5554, tok/sec: 101508.76, flops:106.54, batch-reuse:1
@ 260 train 7.1971 , allloss: 7.5202, dt: 1292.64ms, fracRes: 0.0070, norm(attn): 0.0334, norm(output): 0.1196, norm(x): 0.1051, norm(y): 1.0007, norm:1.8259, tok/sec: 101399.06, flops:106.42, batch-reuse:1
@ 261 train 7.1184 , allloss: 7.4090, dt: 1317.55ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1187, norm(x): 0.1054, norm(y): 1.0007, norm:1.4691, tok/sec: 99481.98, flops:104.41, batch-reuse:1
@ 262 train 7.1775 , allloss: 7.4414, dt: 1272.43ms, fracRes: 0.0069, norm(attn): 0.0344, norm(output): 0.1221, norm(x): 0.1059, norm(y): 1.0008, norm:2.5287, tok/sec: 103009.09, flops:108.11, batch-reuse:1
@ 263 train 7.1237 , allloss: 7.3996, dt: 1314.12ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1196, norm(x): 0.1058, norm(y): 1.0008, norm:1.9066, tok/sec: 99741.10, flops:104.68, batch-reuse:1
@ 264 train 7.0965 , allloss: 7.3935, dt: 1343.52ms, fracRes: 0.0069, norm(attn): 0.0327, norm(output): 0.1187, norm(x): 0.1047, norm(y): 1.0008, norm:2.0413, tok/sec: 97558.83, flops:102.39, batch-reuse:1
@ 265 train 7.0955 , allloss: 7.3688, dt: 1303.63ms, fracRes: 0.0069, norm(attn): 0.0330, norm(output): 0.1187, norm(x): 0.1049, norm(y): 1.0008, norm:2.4595, tok/sec: 100544.11, flops:105.52, batch-reuse:1
@ 266 train 7.0756 , allloss: 7.3316, dt: 1302.30ms, fracRes: 0.0070, norm(attn): 0.0342, norm(output): 0.1206, norm(x): 0.1060, norm(y): 1.0008, norm:1.8736, tok/sec: 100646.51, flops:105.63, batch-reuse:1
@ 267 train 7.0541 , allloss: 7.3021, dt: 1334.57ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1230, norm(x): 0.1063, norm(y): 1.0008, norm:1.3986, tok/sec: 98213.00, flops:103.08, batch-reuse:1
@ 268 train 7.1506 , allloss: 7.4107, dt: 1303.49ms, fracRes: 0.0069, norm(attn): 0.0344, norm(output): 0.1191, norm(x): 0.1053, norm(y): 1.0008, norm:3.6784, tok/sec: 100554.82, flops:105.53, batch-reuse:1
@ 269 train 7.0738 , allloss: 7.3317, dt: 1322.86ms, fracRes: 0.0069, norm(attn): 0.0337, norm(output): 0.1201, norm(x): 0.1058, norm(y): 1.0008, norm:1.4866, tok/sec: 99082.09, flops:103.99, batch-reuse:1
@ 270 train 7.1705 , allloss: 7.3960, dt: 1310.47ms, fracRes: 0.0070, norm(attn): 0.0344, norm(output): 0.1240, norm(x): 0.1074, norm(y): 1.0009, norm:2.5213, tok/sec: 100019.29, flops:104.97, batch-reuse:1
@ 271 train 7.0365 , allloss: 7.2611, dt: 1279.65ms, fracRes: 0.0070, norm(attn): 0.0359, norm(output): 0.1235, norm(x): 0.1075, norm(y): 1.0009, norm:2.0593, tok/sec: 102428.01, flops:107.50, batch-reuse:1
@ 272 train 7.0535 , allloss: 7.3040, dt: 1317.20ms, fracRes: 0.0069, norm(attn): 0.0342, norm(output): 0.1221, norm(x): 0.1062, norm(y): 1.0009, norm:1.6403, tok/sec: 99507.96, flops:104.44, batch-reuse:1
@ 273 train 7.2117 , allloss: 7.4873, dt: 1349.84ms, fracRes: 0.0069, norm(attn): 0.0342, norm(output): 0.1191, norm(x): 0.1058, norm(y): 1.0009, norm:3.3192, tok/sec: 97101.99, flops:101.91, batch-reuse:1
@ 274 train 7.0527 , allloss: 7.3127, dt: 1306.20ms, fracRes: 0.0069, norm(attn): 0.0332, norm(output): 0.1221, norm(x): 0.1064, norm(y): 1.0009, norm:1.8649, tok/sec: 100346.30, flops:105.32, batch-reuse:1
@ 275 train 7.0542 , allloss: 7.2871, dt: 1314.72ms, fracRes: 0.0069, norm(attn): 0.0359, norm(output): 0.1230, norm(x): 0.1076, norm(y): 1.0009, norm:3.7654, tok/sec: 99696.12, flops:104.63, batch-reuse:1
@ 276 train 7.0398 , allloss: 7.2536, dt: 1345.16ms, fracRes: 0.0070, norm(attn): 0.0344, norm(output): 0.1245, norm(x): 0.1086, norm(y): 1.0009, norm:1.9731, tok/sec: 97439.59, flops:102.26, batch-reuse:1
@ 277 train 6.9141 , allloss: 7.1406, dt: 1325.04ms, fracRes: 0.0069, norm(attn): 0.0349, norm(output): 0.1245, norm(x): 0.1080, norm(y): 1.0009, norm:1.8791, tok/sec: 98919.47, flops:103.82, batch-reuse:1
@ 278 train 7.0200 , allloss: 7.2624, dt: 1346.11ms, fracRes: 0.0069, norm(attn): 0.0339, norm(output): 0.1230, norm(x): 0.1074, norm(y): 1.0009, norm:1.6057, tok/sec: 97371.30, flops:102.19, batch-reuse:1
@ 279 train 6.9589 , allloss: 7.1985, dt: 1336.90ms, fracRes: 0.0069, norm(attn): 0.0327, norm(output): 0.1230, norm(x): 0.1072, norm(y): 1.0009, norm:2.2496, tok/sec: 98041.91, flops:102.90, batch-reuse:1
@ 280 train 7.0924 , allloss: 7.3053, dt: 1350.23ms, fracRes: 0.0070, norm(attn): 0.0354, norm(output): 0.1235, norm(x): 0.1080, norm(y): 1.0010, norm:2.3125, tok/sec: 97073.97, flops:101.88, batch-reuse:1
@ 281 train 6.9663 , allloss: 7.1710, dt: 1343.41ms, fracRes: 0.0069, norm(attn): 0.0349, norm(output): 0.1245, norm(x): 0.1088, norm(y): 1.0010, norm:1.9504, tok/sec: 97566.64, flops:102.40, batch-reuse:1
@ 282 train 6.9315 , allloss: 7.1449, dt: 1337.39ms, fracRes: 0.0069, norm(attn): 0.0332, norm(output): 0.1230, norm(x): 0.1079, norm(y): 1.0010, norm:1.8835, tok/sec: 98005.86, flops:102.86, batch-reuse:1
@ 283 train 6.8898 , allloss: 7.1062, dt: 1347.14ms, fracRes: 0.0068, norm(attn): 0.0339, norm(output): 0.1235, norm(x): 0.1081, norm(y): 1.0010, norm:2.3388, tok/sec: 97296.52, flops:102.11, batch-reuse:1
@ 284 train 6.9919 , allloss: 7.2050, dt: 1331.25ms, fracRes: 0.0069, norm(attn): 0.0344, norm(output): 0.1245, norm(x): 0.1086, norm(y): 1.0010, norm:1.5469, tok/sec: 98457.97, flops:103.33, batch-reuse:1
@ 285 train 7.0179 , allloss: 7.2292, dt: 1304.84ms, fracRes: 0.0068, norm(attn): 0.0352, norm(output): 0.1240, norm(x): 0.1085, norm(y): 1.0010, norm:4.9334, tok/sec: 100450.64, flops:105.42, batch-reuse:1
@ 286 train 7.0113 , allloss: 7.2143, dt: 1295.74ms, fracRes: 0.0068, norm(attn): 0.0354, norm(output): 0.1245, norm(x): 0.1092, norm(y): 1.0010, norm:2.4934, tok/sec: 101156.37, flops:106.17, batch-reuse:1
@ 287 train 7.0189 , allloss: 7.2092, dt: 1293.75ms, fracRes: 0.0068, norm(attn): 0.0342, norm(output): 0.1250, norm(x): 0.1103, norm(y): 1.0010, norm:2.4460, tok/sec: 101311.86, flops:106.33, batch-reuse:1
@ 288 train 7.0328 , allloss: 7.2190, dt: 1313.30ms, fracRes: 0.0069, norm(attn): 0.0356, norm(output): 0.1250, norm(x): 0.1107, norm(y): 1.0011, norm:2.5319, tok/sec: 99803.48, flops:104.75, batch-reuse:1
@ 289 train 6.9864 , allloss: 7.1857, dt: 1331.12ms, fracRes: 0.0069, norm(attn): 0.0342, norm(output): 0.1250, norm(x): 0.1102, norm(y): 1.0011, norm:1.4943, tok/sec: 98467.21, flops:103.34, batch-reuse:1
@ 290 train 6.9723 , allloss: 7.2122, dt: 1295.96ms, fracRes: 0.0068, norm(attn): 0.0332, norm(output): 0.1240, norm(x): 0.1087, norm(y): 1.0010, norm:3.0180, tok/sec: 101139.15, flops:106.15, batch-reuse:1
@ 291 train 6.8653 , allloss: 7.1063, dt: 1295.71ms, fracRes: 0.0068, norm(attn): 0.0325, norm(output): 0.1245, norm(x): 0.1090, norm(y): 1.0011, norm:2.2100, tok/sec: 101158.15, flops:106.17, batch-reuse:1
@ 292 train 6.9091 , allloss: 7.1188, dt: 1321.26ms, fracRes: 0.0068, norm(attn): 0.0344, norm(output): 0.1250, norm(x): 0.1101, norm(y): 1.0011, norm:2.0147, tok/sec: 99202.22, flops:104.11, batch-reuse:1
@ 293 train 6.9778 , allloss: 7.1699, dt: 1313.81ms, fracRes: 0.0068, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1112, norm(y): 1.0011, norm:2.1147, tok/sec: 99764.82, flops:104.71, batch-reuse:1
@ 294 train 6.9291 , allloss: 7.1199, dt: 1325.60ms, fracRes: 0.0068, norm(attn): 0.0349, norm(output): 0.1260, norm(x): 0.1112, norm(y): 1.0011, norm:1.4102, tok/sec: 98877.39, flops:103.77, batch-reuse:1
@ 295 train 6.9627 , allloss: 7.1768, dt: 1318.72ms, fracRes: 0.0067, norm(attn): 0.0332, norm(output): 0.1245, norm(x): 0.1098, norm(y): 1.0011, norm:2.0585, tok/sec: 99393.20, flops:104.32, batch-reuse:1
@ 296 train 6.8293 , allloss: 7.0589, dt: 1308.03ms, fracRes: 0.0067, norm(attn): 0.0332, norm(output): 0.1245, norm(x): 0.1097, norm(y): 1.0011, norm:1.9643, tok/sec: 100205.77, flops:105.17, batch-reuse:1
@ 297 train 6.8038 , allloss: 6.9989, dt: 1339.05ms, fracRes: 0.0067, norm(attn): 0.0342, norm(output): 0.1250, norm(x): 0.1106, norm(y): 1.0011, norm:1.6989, tok/sec: 97884.30, flops:102.73, batch-reuse:1
@ 298 train 6.9327 , allloss: 7.1151, dt: 1343.18ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1260, norm(x): 0.1113, norm(y): 1.0012, norm:1.6646, tok/sec: 97583.20, flops:102.42, batch-reuse:1
@ 299 train 6.9080 , allloss: 7.1004, dt: 1312.16ms, fracRes: 0.0067, norm(attn): 0.0356, norm(output): 0.1250, norm(x): 0.1114, norm(y): 1.0012, norm:1.4930, tok/sec: 99890.58, flops:104.84, batch-reuse:1
@ 300 train 6.8767 , allloss: 7.0818, dt: 1339.66ms, fracRes: 0.0067, norm(attn): 0.0349, norm(output): 0.1250, norm(x): 0.1104, norm(y): 1.0012, norm:2.4087, tok/sec: 97839.41, flops:102.68, batch-reuse:1
@ 301 train 7.0659 , allloss: 7.2689, dt: 1329.82ms, fracRes: 0.0067, norm(attn): 0.0374, norm(output): 0.1250, norm(x): 0.1110, norm(y): 1.0012, norm:1.9026, tok/sec: 98564.04, flops:103.44, batch-reuse:1
@ 302 train 6.8646 , allloss: 7.0534, dt: 1300.70ms, fracRes: 0.0065, norm(attn): 0.0347, norm(output): 0.1250, norm(x): 0.1111, norm(y): 1.0012, norm:1.8749, tok/sec: 100770.38, flops:105.76, batch-reuse:1
@ 303 train 6.8850 , allloss: 7.0549, dt: 1312.75ms, fracRes: 0.0066, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1116, norm(y): 1.0012, norm:1.7894, tok/sec: 99845.30, flops:104.79, batch-reuse:1
@ 304 train 6.8621 , allloss: 7.0424, dt: 1310.34ms, fracRes: 0.0067, norm(attn): 0.0381, norm(output): 0.1260, norm(x): 0.1121, norm(y): 1.0012, norm:2.6000, tok/sec: 100029.24, flops:104.98, batch-reuse:1
@ 305 train 6.7798 , allloss: 6.9712, dt: 1299.11ms, fracRes: 0.0066, norm(attn): 0.0344, norm(output): 0.1260, norm(x): 0.1114, norm(y): 1.0012, norm:1.6247, tok/sec: 100893.84, flops:105.89, batch-reuse:1
@ 306 train 6.7987 , allloss: 6.9819, dt: 1324.45ms, fracRes: 0.0066, norm(attn): 0.0349, norm(output): 0.1250, norm(x): 0.1108, norm(y): 1.0012, norm:3.0095, tok/sec: 98963.15, flops:103.86, batch-reuse:1
@ 307 train 6.9889 , allloss: 7.1690, dt: 1337.14ms, fracRes: 0.0067, norm(attn): 0.0369, norm(output): 0.1250, norm(x): 0.1112, norm(y): 1.0013, norm:1.8280, tok/sec: 98024.22, flops:102.88, batch-reuse:1
@ 308 train 6.8435 , allloss: 7.0207, dt: 1319.60ms, fracRes: 0.0066, norm(attn): 0.0356, norm(output): 0.1260, norm(x): 0.1118, norm(y): 1.0013, norm:3.5855, tok/sec: 99327.40, flops:104.25, batch-reuse:1
@ 309 train 6.8795 , allloss: 7.0608, dt: 1296.27ms, fracRes: 0.0066, norm(attn): 0.0354, norm(output): 0.1260, norm(x): 0.1118, norm(y): 1.0013, norm:2.2231, tok/sec: 101114.97, flops:106.12, batch-reuse:1
@ 310 train 6.9422 , allloss: 7.1179, dt: 1319.15ms, fracRes: 0.0066, norm(attn): 0.0359, norm(output): 0.1260, norm(x): 0.1120, norm(y): 1.0013, norm:2.3438, tok/sec: 99361.04, flops:104.28, batch-reuse:1
@ 311 train 6.9311 , allloss: 7.0926, dt: 1306.90ms, fracRes: 0.0066, norm(attn): 0.0364, norm(output): 0.1260, norm(x): 0.1126, norm(y): 1.0013, norm:1.6463, tok/sec: 100292.53, flops:105.26, batch-reuse:1
@ 312 train 7.0173 , allloss: 7.1836, dt: 1311.15ms, fracRes: 0.0067, norm(attn): 0.0408, norm(output): 0.1260, norm(x): 0.1130, norm(y): 1.0013, norm:1.7939, tok/sec: 99967.25, flops:104.92, batch-reuse:1
@ 313 train 6.7936 , allloss: 6.9664, dt: 1289.02ms, fracRes: 0.0066, norm(attn): 0.0344, norm(output): 0.1260, norm(x): 0.1121, norm(y): 1.0013, norm:1.9976, tok/sec: 101683.56, flops:106.72, batch-reuse:1
@ 314 train 6.8178 , allloss: 6.9743, dt: 1304.30ms, fracRes: 0.0067, norm(attn): 0.0352, norm(output): 0.1260, norm(x): 0.1123, norm(y): 1.0013, norm:2.5469, tok/sec: 100492.58, flops:105.47, batch-reuse:1
@ 315 train 6.8463 , allloss: 6.9962, dt: 1289.88ms, fracRes: 0.0068, norm(attn): 0.0371, norm(output): 0.1260, norm(x): 0.1133, norm(y): 1.0013, norm:1.7514, tok/sec: 101615.90, flops:106.65, batch-reuse:1
@ 316 train 6.8547 , allloss: 7.0067, dt: 1291.83ms, fracRes: 0.0067, norm(attn): 0.0378, norm(output): 0.1270, norm(x): 0.1132, norm(y): 1.0013, norm:1.8430, tok/sec: 101462.26, flops:106.49, batch-reuse:1
@ 317 train 6.8826 , allloss: 7.0349, dt: 1314.57ms, fracRes: 0.0066, norm(attn): 0.0376, norm(output): 0.1260, norm(x): 0.1128, norm(y): 1.0014, norm:1.9152, tok/sec: 99707.28, flops:104.64, batch-reuse:1
@ 318 train 6.7636 , allloss: 6.9048, dt: 1323.87ms, fracRes: 0.0065, norm(attn): 0.0361, norm(output): 0.1270, norm(x): 0.1131, norm(y): 1.0014, norm:1.6463, tok/sec: 99006.58, flops:103.91, batch-reuse:1
@ 319 train 6.7110 , allloss: 6.8509, dt: 1299.55ms, fracRes: 0.0066, norm(attn): 0.0361, norm(output): 0.1270, norm(x): 0.1137, norm(y): 1.0014, norm:1.6381, tok/sec: 100859.21, flops:105.85, batch-reuse:1
@ 320 train 6.7980 , allloss: 6.9319, dt: 1293.03ms, fracRes: 0.0066, norm(attn): 0.0371, norm(output): 0.1270, norm(x): 0.1136, norm(y): 1.0014, norm:1.3509, tok/sec: 101367.80, flops:106.39, batch-reuse:1
@ 321 train 6.8414 , allloss: 6.9777, dt: 1326.25ms, fracRes: 0.0066, norm(attn): 0.0369, norm(output): 0.1260, norm(x): 0.1128, norm(y): 1.0014, norm:1.5632, tok/sec: 98829.22, flops:103.72, batch-reuse:1
@ 322 train 6.7414 , allloss: 6.8699, dt: 1317.85ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1260, norm(x): 0.1136, norm(y): 1.0014, norm:2.4058, tok/sec: 99458.81, flops:104.38, batch-reuse:1
@ 323 train 6.8300 , allloss: 6.9581, dt: 1289.10ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1270, norm(x): 0.1136, norm(y): 1.0014, norm:1.6451, tok/sec: 101676.86, flops:106.71, batch-reuse:1
@ 324 train 6.7367 , allloss: 6.8656, dt: 1288.17ms, fracRes: 0.0065, norm(attn): 0.0369, norm(output): 0.1270, norm(x): 0.1139, norm(y): 1.0014, norm:1.5237, tok/sec: 101750.22, flops:106.79, batch-reuse:1
@ 325 train 6.7789 , allloss: 6.9037, dt: 1299.64ms, fracRes: 0.0066, norm(attn): 0.0378, norm(output): 0.1270, norm(x): 0.1143, norm(y): 1.0015, norm:1.2696, tok/sec: 100852.68, flops:105.85, batch-reuse:1
@ 326 train 6.8500 , allloss: 6.9708, dt: 1317.75ms, fracRes: 0.0065, norm(attn): 0.0383, norm(output): 0.1279, norm(x): 0.1140, norm(y): 1.0015, norm:2.9286, tok/sec: 99466.41, flops:104.39, batch-reuse:1
@ 327 train 6.8932 , allloss: 7.0022, dt: 1326.71ms, fracRes: 0.0065, norm(attn): 0.0400, norm(output): 0.1279, norm(x): 0.1144, norm(y): 1.0015, norm:1.5863, tok/sec: 98794.75, flops:103.69, batch-reuse:1
@ 328 train 6.7661 , allloss: 6.8829, dt: 1310.33ms, fracRes: 0.0065, norm(attn): 0.0376, norm(output): 0.1289, norm(x): 0.1143, norm(y): 1.0015, norm:1.3241, tok/sec: 100029.88, flops:104.98, batch-reuse:1
@ 329 train 6.7896 , allloss: 6.9147, dt: 1319.99ms, fracRes: 0.0066, norm(attn): 0.0366, norm(output): 0.1279, norm(x): 0.1140, norm(y): 1.0015, norm:2.5483, tok/sec: 99297.91, flops:104.22, batch-reuse:1
@ 330 train 6.7547 , allloss: 6.8756, dt: 1302.48ms, fracRes: 0.0066, norm(attn): 0.0359, norm(output): 0.1270, norm(x): 0.1145, norm(y): 1.0015, norm:1.6064, tok/sec: 100632.77, flops:105.62, batch-reuse:1
@ 331 train 6.7042 , allloss: 6.8103, dt: 1303.57ms, fracRes: 0.0064, norm(attn): 0.0381, norm(output): 0.1309, norm(x): 0.1153, norm(y): 1.0015, norm:2.7986, tok/sec: 100548.66, flops:105.53, batch-reuse:1
@ 332 train 6.7068 , allloss: 6.8082, dt: 1305.77ms, fracRes: 0.0064, norm(attn): 0.0388, norm(output): 0.1309, norm(x): 0.1153, norm(y): 1.0015, norm:1.7368, tok/sec: 100378.89, flops:105.35, batch-reuse:1
@ 333 train 6.7631 , allloss: 6.8626, dt: 1289.11ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.1299, norm(x): 0.1150, norm(y): 1.0016, norm:2.3682, tok/sec: 101676.15, flops:106.71, batch-reuse:1
@ 334 train 6.6920 , allloss: 6.7923, dt: 1300.18ms, fracRes: 0.0064, norm(attn): 0.0364, norm(output): 0.1299, norm(x): 0.1151, norm(y): 1.0016, norm:1.4530, tok/sec: 100810.96, flops:105.80, batch-reuse:1
@ 335 train 6.6723 , allloss: 6.7758, dt: 1318.62ms, fracRes: 0.0064, norm(attn): 0.0369, norm(output): 0.1309, norm(x): 0.1155, norm(y): 1.0016, norm:2.0852, tok/sec: 99400.60, flops:104.32, batch-reuse:1
@ 336 train 6.7180 , allloss: 6.8170, dt: 1327.85ms, fracRes: 0.0064, norm(attn): 0.0366, norm(output): 0.1309, norm(x): 0.1157, norm(y): 1.0016, norm:1.4923, tok/sec: 98709.62, flops:103.60, batch-reuse:1
@ 337 train 6.7101 , allloss: 6.8045, dt: 1318.81ms, fracRes: 0.0064, norm(attn): 0.0383, norm(output): 0.1309, norm(x): 0.1161, norm(y): 1.0016, norm:1.6173, tok/sec: 99386.68, flops:104.31, batch-reuse:1
@ 338 train 6.6729 , allloss: 6.7693, dt: 1334.01ms, fracRes: 0.0064, norm(attn): 0.0366, norm(output): 0.1309, norm(x): 0.1157, norm(y): 1.0016, norm:1.2800, tok/sec: 98254.04, flops:103.12, batch-reuse:1
@ 339 train 6.7660 , allloss: 6.8620, dt: 1298.01ms, fracRes: 0.0064, norm(attn): 0.0369, norm(output): 0.1318, norm(x): 0.1158, norm(y): 1.0016, norm:1.7006, tok/sec: 100979.57, flops:105.98, batch-reuse:1
@ 340 train 6.7637 , allloss: 6.8527, dt: 1296.29ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.1309, norm(x): 0.1157, norm(y): 1.0016, norm:1.8396, tok/sec: 101112.89, flops:106.12, batch-reuse:1
@ 341 train 6.6812 , allloss: 6.7652, dt: 1308.01ms, fracRes: 0.0063, norm(attn): 0.0381, norm(output): 0.1318, norm(x): 0.1161, norm(y): 1.0016, norm:1.4623, tok/sec: 100206.87, flops:105.17, batch-reuse:1
@ 342 train 6.6043 , allloss: 6.6947, dt: 1287.59ms, fracRes: 0.0063, norm(attn): 0.0356, norm(output): 0.1309, norm(x): 0.1158, norm(y): 1.0016, norm:2.4185, tok/sec: 101796.23, flops:106.84, batch-reuse:1
@ 343 train 6.6701 , allloss: 6.7546, dt: 1334.24ms, fracRes: 0.0063, norm(attn): 0.0366, norm(output): 0.1318, norm(x): 0.1160, norm(y): 1.0016, norm:1.8539, tok/sec: 98237.54, flops:103.10, batch-reuse:1
@ 344 train 6.6439 , allloss: 6.7255, dt: 1301.03ms, fracRes: 0.0063, norm(attn): 0.0376, norm(output): 0.1318, norm(x): 0.1167, norm(y): 1.0017, norm:2.9150, tok/sec: 100744.60, flops:105.73, batch-reuse:1
@ 345 train 6.6327 , allloss: 6.7154, dt: 1296.65ms, fracRes: 0.0063, norm(attn): 0.0393, norm(output): 0.1318, norm(x): 0.1171, norm(y): 1.0017, norm:1.6227, tok/sec: 101084.83, flops:106.09, batch-reuse:1
@ 346 train 6.7242 , allloss: 6.8124, dt: 1299.32ms, fracRes: 0.0064, norm(attn): 0.0391, norm(output): 0.1318, norm(x): 0.1172, norm(y): 1.0017, norm:2.0371, tok/sec: 100877.03, flops:105.87, batch-reuse:1
@ 347 train 6.7072 , allloss: 6.7973, dt: 1328.55ms, fracRes: 0.0064, norm(attn): 0.0405, norm(output): 0.1328, norm(x): 0.1171, norm(y): 1.0017, norm:2.0191, tok/sec: 98658.23, flops:103.54, batch-reuse:1
@ 348 train 6.6596 , allloss: 6.7416, dt: 1310.21ms, fracRes: 0.0063, norm(attn): 0.0383, norm(output): 0.1309, norm(x): 0.1167, norm(y): 1.0017, norm:1.9820, tok/sec: 100039.04, flops:104.99, batch-reuse:1
@ 349 train 6.6957 , allloss: 6.7758, dt: 1352.54ms, fracRes: 0.0063, norm(attn): 0.0381, norm(output): 0.1318, norm(x): 0.1170, norm(y): 1.0017, norm:2.0412, tok/sec: 96908.09, flops:101.71, batch-reuse:1
@ 350 train 6.7248 , allloss: 6.8009, dt: 1344.06ms, fracRes: 0.0064, norm(attn): 0.0398, norm(output): 0.1328, norm(x): 0.1175, norm(y): 1.0017, norm:1.4733, tok/sec: 97519.36, flops:102.35, batch-reuse:1
@ 351 train 6.7159 , allloss: 6.7977, dt: 1340.08ms, fracRes: 0.0064, norm(attn): 0.0422, norm(output): 0.1328, norm(x): 0.1179, norm(y): 1.0017, norm:1.7963, tok/sec: 97809.14, flops:102.65, batch-reuse:1
@ 352 train 6.7460 , allloss: 6.8260, dt: 1314.50ms, fracRes: 0.0064, norm(attn): 0.0400, norm(output): 0.1328, norm(x): 0.1173, norm(y): 1.0017, norm:1.7814, tok/sec: 99712.25, flops:104.65, batch-reuse:1
@ 353 train 6.6936 , allloss: 6.7692, dt: 1320.09ms, fracRes: 0.0063, norm(attn): 0.0405, norm(output): 0.1328, norm(x): 0.1177, norm(y): 1.0018, norm:1.5080, tok/sec: 99290.16, flops:104.21, batch-reuse:1
@ 354 train 6.6321 , allloss: 6.7067, dt: 1298.61ms, fracRes: 0.0064, norm(attn): 0.0386, norm(output): 0.1328, norm(x): 0.1179, norm(y): 1.0018, norm:1.4710, tok/sec: 100932.30, flops:105.93, batch-reuse:1
@ 355 train 6.6225 , allloss: 6.6953, dt: 1292.46ms, fracRes: 0.0064, norm(attn): 0.0420, norm(output): 0.1328, norm(x): 0.1181, norm(y): 1.0018, norm:1.8851, tok/sec: 101412.66, flops:106.43, batch-reuse:1
@ 356 train 6.7417 , allloss: 6.8144, dt: 1287.40ms, fracRes: 0.0064, norm(attn): 0.0437, norm(output): 0.1328, norm(x): 0.1183, norm(y): 1.0018, norm:2.3299, tok/sec: 101811.40, flops:106.85, batch-reuse:1
@ 357 train 6.7064 , allloss: 6.7806, dt: 1311.40ms, fracRes: 0.0064, norm(attn): 0.0413, norm(output): 0.1328, norm(x): 0.1176, norm(y): 1.0018, norm:1.7899, tok/sec: 99948.06, flops:104.90, batch-reuse:1
@ 358 train 6.6140 , allloss: 6.6864, dt: 1295.74ms, fracRes: 0.0064, norm(attn): 0.0378, norm(output): 0.1328, norm(x): 0.1180, norm(y): 1.0018, norm:1.6373, tok/sec: 101155.83, flops:106.16, batch-reuse:1
@ 359 train 6.8723 , allloss: 6.9443, dt: 1294.24ms, fracRes: 0.0065, norm(attn): 0.0496, norm(output): 0.1328, norm(x): 0.1191, norm(y): 1.0018, norm:2.6790, tok/sec: 101273.24, flops:106.29, batch-reuse:1
@ 360 train 6.6956 , allloss: 6.7584, dt: 1313.12ms, fracRes: 0.0064, norm(attn): 0.0413, norm(output): 0.1328, norm(x): 0.1187, norm(y): 1.0018, norm:1.8969, tok/sec: 99817.02, flops:104.76, batch-reuse:1
@ 361 train 6.7261 , allloss: 6.7842, dt: 1295.61ms, fracRes: 0.0063, norm(attn): 0.0439, norm(output): 0.1328, norm(x): 0.1180, norm(y): 1.0019, norm:4.1702, tok/sec: 101166.34, flops:106.18, batch-reuse:1
@ 362 train 6.6058 , allloss: 6.6681, dt: 1316.10ms, fracRes: 0.0063, norm(attn): 0.0410, norm(output): 0.1328, norm(x): 0.1183, norm(y): 1.0019, norm:2.8049, tok/sec: 99591.50, flops:104.52, batch-reuse:1
@ 363 train 6.6317 , allloss: 6.6976, dt: 1325.58ms, fracRes: 0.0064, norm(attn): 0.0417, norm(output): 0.1328, norm(x): 0.1192, norm(y): 1.0019, norm:1.8329, tok/sec: 98878.62, flops:103.77, batch-reuse:1
@ 364 train 6.6872 , allloss: 6.7664, dt: 1309.12ms, fracRes: 0.0065, norm(attn): 0.0376, norm(output): 0.1338, norm(x): 0.1194, norm(y): 1.0018, norm:3.7123, tok/sec: 100122.37, flops:105.08, batch-reuse:1
@ 365 train 6.6724 , allloss: 6.7508, dt: 1296.24ms, fracRes: 0.0065, norm(attn): 0.0391, norm(output): 0.1338, norm(x): 0.1197, norm(y): 1.0019, norm:2.3483, tok/sec: 101116.87, flops:106.12, batch-reuse:1
@ 366 train 6.7134 , allloss: 6.7794, dt: 1318.97ms, fracRes: 0.0064, norm(attn): 0.0393, norm(output): 0.1338, norm(x): 0.1200, norm(y): 1.0019, norm:2.0989, tok/sec: 99374.37, flops:104.30, batch-reuse:1
@ 367 train 6.6040 , allloss: 6.6681, dt: 1280.71ms, fracRes: 0.0063, norm(attn): 0.0378, norm(output): 0.1338, norm(x): 0.1200, norm(y): 1.0019, norm:1.9003, tok/sec: 102342.87, flops:107.41, batch-reuse:1
@ 368 train 6.7180 , allloss: 6.7764, dt: 1317.85ms, fracRes: 0.0063, norm(attn): 0.0393, norm(output): 0.1338, norm(x): 0.1202, norm(y): 1.0019, norm:1.4943, tok/sec: 99458.65, flops:104.38, batch-reuse:1
@ 369 train 6.6475 , allloss: 6.7095, dt: 1315.14ms, fracRes: 0.0063, norm(attn): 0.0374, norm(output): 0.1338, norm(x): 0.1204, norm(y): 1.0019, norm:1.5411, tok/sec: 99664.08, flops:104.60, batch-reuse:1
@ 370 train 6.7592 , allloss: 6.8199, dt: 1286.21ms, fracRes: 0.0063, norm(attn): 0.0388, norm(output): 0.1348, norm(x): 0.1206, norm(y): 1.0019, norm:1.8288, tok/sec: 101905.57, flops:106.95, batch-reuse:1
@ 371 train 6.6845 , allloss: 6.7478, dt: 1297.38ms, fracRes: 0.0063, norm(attn): 0.0376, norm(output): 0.1348, norm(x): 0.1207, norm(y): 1.0019, norm:1.6195, tok/sec: 101027.93, flops:106.03, batch-reuse:1
@ 372 train 6.7664 , allloss: 6.8318, dt: 1317.97ms, fracRes: 0.0063, norm(attn): 0.0381, norm(output): 0.1348, norm(x): 0.1207, norm(y): 1.0019, norm:1.6116, tok/sec: 99449.76, flops:104.37, batch-reuse:1
@ 373 train 6.7632 , allloss: 6.8280, dt: 1294.66ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1357, norm(x): 0.1211, norm(y): 1.0019, norm:1.6555, tok/sec: 101240.29, flops:106.25, batch-reuse:1
@ 374 train 6.7438 , allloss: 6.8072, dt: 1316.18ms, fracRes: 0.0063, norm(attn): 0.0417, norm(output): 0.1357, norm(x): 0.1218, norm(y): 1.0020, norm:1.2117, tok/sec: 99585.13, flops:104.52, batch-reuse:1
@ 375 train 6.8184 , allloss: 6.8793, dt: 1316.42ms, fracRes: 0.0063, norm(attn): 0.0444, norm(output): 0.1367, norm(x): 0.1219, norm(y): 1.0020, norm:1.2950, tok/sec: 99567.31, flops:104.50, batch-reuse:1
@ 376 train 6.8875 , allloss: 6.9525, dt: 1279.80ms, fracRes: 0.0063, norm(attn): 0.0425, norm(output): 0.1357, norm(x): 0.1213, norm(y): 1.0020, norm:2.0913, tok/sec: 102415.66, flops:107.49, batch-reuse:1
@ 377 train 6.7548 , allloss: 6.8104, dt: 1312.26ms, fracRes: 0.0063, norm(attn): 0.0422, norm(output): 0.1367, norm(x): 0.1218, norm(y): 1.0020, norm:1.6474, tok/sec: 99882.83, flops:104.83, batch-reuse:1
@ 378 train 6.6897 , allloss: 6.7410, dt: 1321.69ms, fracRes: 0.0063, norm(attn): 0.0415, norm(output): 0.1387, norm(x): 0.1222, norm(y): 1.0020, norm:1.4827, tok/sec: 99169.78, flops:104.08, batch-reuse:1
@ 379 train 6.7915 , allloss: 6.8431, dt: 1290.12ms, fracRes: 0.0064, norm(attn): 0.0420, norm(output): 0.1387, norm(x): 0.1222, norm(y): 1.0020, norm:1.4296, tok/sec: 101596.85, flops:106.63, batch-reuse:1
@ 380 train 6.8528 , allloss: 6.8994, dt: 1337.03ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1396, norm(x): 0.1231, norm(y): 1.0020, norm:1.1036, tok/sec: 98032.30, flops:102.89, batch-reuse:1
@ 381 train 6.7719 , allloss: 6.8172, dt: 1342.39ms, fracRes: 0.0065, norm(attn): 0.0442, norm(output): 0.1387, norm(x): 0.1231, norm(y): 1.0020, norm:1.3719, tok/sec: 97640.72, flops:102.48, batch-reuse:1
@ 382 train 6.7210 , allloss: 6.7688, dt: 1347.52ms, fracRes: 0.0065, norm(attn): 0.0415, norm(output): 0.1387, norm(x): 0.1226, norm(y): 1.0021, norm:1.5043, tok/sec: 97269.31, flops:102.09, batch-reuse:1
@ 383 train 6.7213 , allloss: 6.7722, dt: 1341.66ms, fracRes: 0.0065, norm(attn): 0.0427, norm(output): 0.1387, norm(x): 0.1225, norm(y): 1.0021, norm:2.1335, tok/sec: 97693.83, flops:102.53, batch-reuse:1
@ 384 train 6.7196 , allloss: 6.7685, dt: 1330.04ms, fracRes: 0.0066, norm(attn): 0.0439, norm(output): 0.1387, norm(x): 0.1225, norm(y): 1.0021, norm:1.2747, tok/sec: 98547.24, flops:103.43, batch-reuse:1
@ 385 train 6.6812 , allloss: 6.7286, dt: 1303.29ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1387, norm(x): 0.1229, norm(y): 1.0021, norm:2.4343, tok/sec: 100570.29, flops:105.55, batch-reuse:1
@ 386 train 6.7769 , allloss: 6.8230, dt: 1314.94ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1396, norm(x): 0.1235, norm(y): 1.0021, norm:1.5909, tok/sec: 99678.91, flops:104.61, batch-reuse:1
@ 387 train 6.7192 , allloss: 6.7625, dt: 1333.56ms, fracRes: 0.0066, norm(attn): 0.0432, norm(output): 0.1396, norm(x): 0.1237, norm(y): 1.0021, norm:1.8763, tok/sec: 98287.47, flops:103.15, batch-reuse:1
@ 388 train 6.6204 , allloss: 6.6653, dt: 1324.37ms, fracRes: 0.0066, norm(attn): 0.0400, norm(output): 0.1396, norm(x): 0.1234, norm(y): 1.0021, norm:1.3888, tok/sec: 98969.51, flops:103.87, batch-reuse:1
@ 389 train 6.7014 , allloss: 6.7438, dt: 1334.64ms, fracRes: 0.0065, norm(attn): 0.0405, norm(output): 0.1387, norm(x): 0.1233, norm(y): 1.0021, norm:2.0118, tok/sec: 98207.75, flops:103.07, batch-reuse:1
@ 390 train 6.7416 , allloss: 6.7827, dt: 1332.56ms, fracRes: 0.0066, norm(attn): 0.0442, norm(output): 0.1396, norm(x): 0.1241, norm(y): 1.0021, norm:1.3545, tok/sec: 98361.06, flops:103.23, batch-reuse:1
@ 391 train 6.6635 , allloss: 6.7070, dt: 1323.10ms, fracRes: 0.0065, norm(attn): 0.0435, norm(output): 0.1396, norm(x): 0.1242, norm(y): 1.0021, norm:1.1979, tok/sec: 99064.01, flops:103.97, batch-reuse:1
@ 392 train 6.7772 , allloss: 6.8211, dt: 1331.58ms, fracRes: 0.0065, norm(attn): 0.0439, norm(output): 0.1396, norm(x): 0.1242, norm(y): 1.0021, norm:2.0583, tok/sec: 98433.23, flops:103.31, batch-reuse:1
@ 393 train 6.7020 , allloss: 6.7467, dt: 1298.11ms, fracRes: 0.0065, norm(attn): 0.0435, norm(output): 0.1396, norm(x): 0.1241, norm(y): 1.0021, norm:1.8843, tok/sec: 100971.19, flops:105.97, batch-reuse:1
@ 394 train 6.6807 , allloss: 6.7243, dt: 1315.46ms, fracRes: 0.0065, norm(attn): 0.0432, norm(output): 0.1396, norm(x): 0.1247, norm(y): 1.0022, norm:1.4615, tok/sec: 99639.56, flops:104.57, batch-reuse:1
@ 395 train 6.7912 , allloss: 6.8313, dt: 1333.60ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1406, norm(x): 0.1254, norm(y): 1.0022, norm:2.1558, tok/sec: 98284.59, flops:103.15, batch-reuse:1
@ 396 train 6.6110 , allloss: 6.6494, dt: 1342.78ms, fracRes: 0.0065, norm(attn): 0.0449, norm(output): 0.1406, norm(x): 0.1256, norm(y): 1.0022, norm:2.1880, tok/sec: 97612.60, flops:102.45, batch-reuse:1
@ 397 train 6.7164 , allloss: 6.7541, dt: 1345.76ms, fracRes: 0.0064, norm(attn): 0.0449, norm(output): 0.1396, norm(x): 0.1251, norm(y): 1.0022, norm:1.2442, tok/sec: 97396.62, flops:102.22, batch-reuse:1
@ 398 train 6.7100 , allloss: 6.7479, dt: 1317.65ms, fracRes: 0.0063, norm(attn): 0.0449, norm(output): 0.1396, norm(x): 0.1248, norm(y): 1.0022, norm:1.2508, tok/sec: 99474.08, flops:104.40, batch-reuse:1
@ 399 train 6.6909 , allloss: 6.7283, dt: 1279.15ms, fracRes: 0.0063, norm(attn): 0.0417, norm(output): 0.1396, norm(x): 0.1250, norm(y): 1.0022, norm:1.3011, tok/sec: 102467.68, flops:107.54, batch-reuse:1
@ 400 train 6.7337 , allloss: 6.7675, dt: 1317.87ms, fracRes: 0.0064, norm(attn): 0.0437, norm(output): 0.1406, norm(x): 0.1252, norm(y): 1.0022, norm:1.4945, tok/sec: 99457.68, flops:104.38, batch-reuse:1
@ 401 train 6.7584 , allloss: 6.7894, dt: 1334.79ms, fracRes: 0.0064, norm(attn): 0.0491, norm(output): 0.1406, norm(x): 0.1260, norm(y): 1.0022, norm:2.0009, tok/sec: 98196.60, flops:103.06, batch-reuse:1
@ 402 train 6.7086 , allloss: 6.7414, dt: 1308.65ms, fracRes: 0.0063, norm(attn): 0.0437, norm(output): 0.1406, norm(x): 0.1255, norm(y): 1.0022, norm:1.5919, tok/sec: 100158.34, flops:105.12, batch-reuse:1
@ 403 train 6.7350 , allloss: 6.7701, dt: 1326.58ms, fracRes: 0.0063, norm(attn): 0.0457, norm(output): 0.1406, norm(x): 0.1258, norm(y): 1.0022, norm:1.4750, tok/sec: 98804.73, flops:103.70, batch-reuse:1
@ 404 train 6.6457 , allloss: 6.6840, dt: 1351.70ms, fracRes: 0.0063, norm(attn): 0.0439, norm(output): 0.1406, norm(x): 0.1258, norm(y): 1.0022, norm:1.7037, tok/sec: 96967.98, flops:101.77, batch-reuse:1
@ 405 train 6.6673 , allloss: 6.7025, dt: 1350.59ms, fracRes: 0.0064, norm(attn): 0.0439, norm(output): 0.1406, norm(x): 0.1260, norm(y): 1.0022, norm:1.3792, tok/sec: 97047.99, flops:101.85, batch-reuse:1
@ 406 train 6.6674 , allloss: 6.7016, dt: 1327.68ms, fracRes: 0.0064, norm(attn): 0.0435, norm(output): 0.1406, norm(x): 0.1263, norm(y): 1.0023, norm:2.0812, tok/sec: 98722.29, flops:103.61, batch-reuse:1
@ 407 train 6.6501 , allloss: 6.6842, dt: 1323.34ms, fracRes: 0.0064, norm(attn): 0.0454, norm(output): 0.1406, norm(x): 0.1267, norm(y): 1.0023, norm:1.6619, tok/sec: 99046.36, flops:103.95, batch-reuse:1
@ 408 train 6.6704 , allloss: 6.7017, dt: 1294.83ms, fracRes: 0.0064, norm(attn): 0.0447, norm(output): 0.1416, norm(x): 0.1267, norm(y): 1.0023, norm:1.2030, tok/sec: 101227.50, flops:106.24, batch-reuse:1
@ 409 train 6.5875 , allloss: 6.6224, dt: 1303.72ms, fracRes: 0.0063, norm(attn): 0.0432, norm(output): 0.1406, norm(x): 0.1263, norm(y): 1.0023, norm:1.4592, tok/sec: 100537.05, flops:105.52, batch-reuse:1
@ 410 train 6.6439 , allloss: 6.6790, dt: 1333.50ms, fracRes: 0.0063, norm(attn): 0.0425, norm(output): 0.1416, norm(x): 0.1264, norm(y): 1.0023, norm:1.4865, tok/sec: 98291.44, flops:103.16, batch-reuse:1
@ 411 train 6.6489 , allloss: 6.6805, dt: 1318.69ms, fracRes: 0.0064, norm(attn): 0.0447, norm(output): 0.1416, norm(x): 0.1268, norm(y): 1.0023, norm:1.7603, tok/sec: 99395.73, flops:104.32, batch-reuse:1
@ 412 train 6.6529 , allloss: 6.6873, dt: 1329.26ms, fracRes: 0.0064, norm(attn): 0.0439, norm(output): 0.1406, norm(x): 0.1265, norm(y): 1.0023, norm:1.6136, tok/sec: 98605.30, flops:103.49, batch-reuse:1
@ 413 train 6.3195 , allloss: 6.3567, dt: 1326.65ms, fracRes: 0.0064, norm(attn): 0.0444, norm(output): 0.1406, norm(x): 0.1265, norm(y): 1.0023, norm:2.4309, tok/sec: 98799.06, flops:103.69, batch-reuse:1
@ 414 train 6.6222 , allloss: 6.6500, dt: 1324.33ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1269, norm(y): 1.0023, norm:1.8796, tok/sec: 98972.36, flops:103.87, batch-reuse:1
@ 415 train 6.5625 , allloss: 6.5914, dt: 1320.18ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1273, norm(y): 1.0023, norm:1.5695, tok/sec: 99283.11, flops:104.20, batch-reuse:1
@ 416 train 6.7004 , allloss: 6.7303, dt: 1349.79ms, fracRes: 0.0064, norm(attn): 0.0457, norm(output): 0.1416, norm(x): 0.1270, norm(y): 1.0023, norm:1.6946, tok/sec: 97105.35, flops:101.91, batch-reuse:1
@ 417 train 6.5782 , allloss: 6.6075, dt: 1312.07ms, fracRes: 0.0063, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1271, norm(y): 1.0023, norm:1.5308, tok/sec: 99896.83, flops:104.84, batch-reuse:1
@ 418 train 6.6615 , allloss: 6.6884, dt: 1313.10ms, fracRes: 0.0063, norm(attn): 0.0481, norm(output): 0.1416, norm(x): 0.1272, norm(y): 1.0024, norm:1.3711, tok/sec: 99819.09, flops:104.76, batch-reuse:1
@ 419 train 6.5964 , allloss: 6.6256, dt: 1303.53ms, fracRes: 0.0063, norm(attn): 0.0449, norm(output): 0.1416, norm(x): 0.1273, norm(y): 1.0024, norm:1.4828, tok/sec: 100551.45, flops:105.53, batch-reuse:1
@ 420 train 6.5588 , allloss: 6.5893, dt: 1296.21ms, fracRes: 0.0063, norm(attn): 0.0447, norm(output): 0.1416, norm(x): 0.1274, norm(y): 1.0024, norm:1.4595, tok/sec: 101119.19, flops:106.13, batch-reuse:1
@ 421 train 6.7147 , allloss: 6.7451, dt: 1322.07ms, fracRes: 0.0063, norm(attn): 0.0469, norm(output): 0.1416, norm(x): 0.1277, norm(y): 1.0024, norm:1.3191, tok/sec: 99141.83, flops:104.05, batch-reuse:1
@ 422 train 6.6268 , allloss: 6.6588, dt: 1310.50ms, fracRes: 0.0063, norm(attn): 0.0435, norm(output): 0.1416, norm(x): 0.1270, norm(y): 1.0024, norm:1.5982, tok/sec: 100016.43, flops:104.97, batch-reuse:1
@ 423 train 6.6559 , allloss: 6.6841, dt: 1293.01ms, fracRes: 0.0064, norm(attn): 0.0469, norm(output): 0.1416, norm(x): 0.1274, norm(y): 1.0024, norm:1.2736, tok/sec: 101369.90, flops:106.39, batch-reuse:1
@ 424 train 6.6087 , allloss: 6.6400, dt: 1314.70ms, fracRes: 0.0064, norm(attn): 0.0432, norm(output): 0.1416, norm(x): 0.1272, norm(y): 1.0024, norm:1.8240, tok/sec: 99697.40, flops:104.63, batch-reuse:1
@ 425 train 6.6891 , allloss: 6.7187, dt: 1277.64ms, fracRes: 0.0064, norm(attn): 0.0439, norm(output): 0.1416, norm(x): 0.1273, norm(y): 1.0024, norm:1.8949, tok/sec: 102589.12, flops:107.67, batch-reuse:1
@ 426 train 6.5301 , allloss: 6.5587, dt: 1314.58ms, fracRes: 0.0064, norm(attn): 0.0439, norm(output): 0.1416, norm(x): 0.1274, norm(y): 1.0024, norm:2.0402, tok/sec: 99706.08, flops:104.64, batch-reuse:1
@ 427 train 6.6016 , allloss: 6.6296, dt: 1346.21ms, fracRes: 0.0064, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1276, norm(y): 1.0024, norm:1.8603, tok/sec: 97363.81, flops:102.19, batch-reuse:1
@ 428 train 6.5310 , allloss: 6.5568, dt: 1306.52ms, fracRes: 0.0064, norm(attn): 0.0461, norm(output): 0.1416, norm(x): 0.1278, norm(y): 1.0024, norm:1.1725, tok/sec: 100321.28, flops:105.29, batch-reuse:1
@ 429 train 6.4896 , allloss: 6.5134, dt: 1315.33ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1285, norm(y): 1.0024, norm:1.7114, tok/sec: 99649.30, flops:104.58, batch-reuse:1
@ 430 train 6.5849 , allloss: 6.6123, dt: 1318.70ms, fracRes: 0.0066, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1284, norm(y): 1.0024, norm:1.8877, tok/sec: 99394.87, flops:104.32, batch-reuse:1
@ 431 train 6.5561 , allloss: 6.5824, dt: 1285.86ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1416, norm(x): 0.1286, norm(y): 1.0024, norm:1.5984, tok/sec: 101933.67, flops:106.98, batch-reuse:1
@ 432 train 6.6128 , allloss: 6.6335, dt: 1297.29ms, fracRes: 0.0065, norm(attn): 0.0481, norm(output): 0.1416, norm(x): 0.1288, norm(y): 1.0025, norm:1.3478, tok/sec: 101035.38, flops:106.04, batch-reuse:1
@ 433 train 6.6138 , allloss: 6.6360, dt: 1310.66ms, fracRes: 0.0065, norm(attn): 0.0459, norm(output): 0.1416, norm(x): 0.1286, norm(y): 1.0025, norm:1.1259, tok/sec: 100004.33, flops:104.96, batch-reuse:1
@ 434 train 6.6350 , allloss: 6.6550, dt: 1289.44ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1416, norm(x): 0.1290, norm(y): 1.0025, norm:1.5704, tok/sec: 101650.64, flops:106.68, batch-reuse:1
@ 435 train 6.5564 , allloss: 6.5779, dt: 1322.80ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1426, norm(x): 0.1293, norm(y): 1.0025, norm:2.0033, tok/sec: 99086.43, flops:103.99, batch-reuse:1
@ 436 train 6.6923 , allloss: 6.7137, dt: 1319.40ms, fracRes: 0.0067, norm(attn): 0.0491, norm(output): 0.1426, norm(x): 0.1291, norm(y): 1.0025, norm:1.2339, tok/sec: 99342.08, flops:104.26, batch-reuse:1
@ 437 train 6.5865 , allloss: 6.6055, dt: 1293.56ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1426, norm(x): 0.1290, norm(y): 1.0025, norm:1.4794, tok/sec: 101326.89, flops:106.34, batch-reuse:1
@ 438 train 6.6746 , allloss: 6.6947, dt: 1306.54ms, fracRes: 0.0067, norm(attn): 0.0544, norm(output): 0.1426, norm(x): 0.1291, norm(y): 1.0025, norm:1.5917, tok/sec: 100319.78, flops:105.29, batch-reuse:1
@ 439 train 6.5062 , allloss: 6.5254, dt: 1297.84ms, fracRes: 0.0066, norm(attn): 0.0459, norm(output): 0.1426, norm(x): 0.1292, norm(y): 1.0025, norm:2.3495, tok/sec: 100992.45, flops:105.99, batch-reuse:1
@ 440 train 6.4688 , allloss: 6.4886, dt: 1281.64ms, fracRes: 0.0066, norm(attn): 0.0483, norm(output): 0.1426, norm(x): 0.1296, norm(y): 1.0025, norm:1.4004, tok/sec: 102268.98, flops:107.33, batch-reuse:1
@ 441 train 6.5511 , allloss: 6.5704, dt: 1324.82ms, fracRes: 0.0066, norm(attn): 0.0479, norm(output): 0.1426, norm(x): 0.1296, norm(y): 1.0025, norm:1.9542, tok/sec: 98935.43, flops:103.83, batch-reuse:1
@ 442 train 6.6288 , allloss: 6.6486, dt: 1345.23ms, fracRes: 0.0066, norm(attn): 0.0513, norm(output): 0.1455, norm(x): 0.1300, norm(y): 1.0025, norm:2.2022, tok/sec: 97434.49, flops:102.26, batch-reuse:1
@ 443 train 6.6307 , allloss: 6.6512, dt: 1347.61ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1455, norm(x): 0.1302, norm(y): 1.0025, norm:1.7637, tok/sec: 97262.70, flops:102.08, batch-reuse:1
@ 444 train 6.6062 , allloss: 6.6269, dt: 1302.76ms, fracRes: 0.0067, norm(attn): 0.0491, norm(output): 0.1436, norm(x): 0.1299, norm(y): 1.0026, norm:1.3780, tok/sec: 100610.87, flops:105.59, batch-reuse:1
@ 445 train 6.5013 , allloss: 6.5200, dt: 1291.82ms, fracRes: 0.0068, norm(attn): 0.0483, norm(output): 0.1436, norm(x): 0.1298, norm(y): 1.0026, norm:1.4809, tok/sec: 101463.03, flops:106.49, batch-reuse:1
@ 446 train 6.5220 , allloss: 6.5437, dt: 1331.78ms, fracRes: 0.0066, norm(attn): 0.0503, norm(output): 0.1445, norm(x): 0.1301, norm(y): 1.0026, norm:1.4289, tok/sec: 98418.89, flops:103.29, batch-reuse:1
@ 447 train 6.5457 , allloss: 6.5761, dt: 1321.75ms, fracRes: 0.0065, norm(attn): 0.0464, norm(output): 0.1426, norm(x): 0.1298, norm(y): 1.0026, norm:1.4055, tok/sec: 99165.18, flops:104.08, batch-reuse:1
@ 448 train 6.5179 , allloss: 6.5398, dt: 1298.41ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1445, norm(x): 0.1300, norm(y): 1.0026, norm:1.2351, tok/sec: 100948.40, flops:105.95, batch-reuse:1
@ 449 train 6.4681 , allloss: 6.4873, dt: 1329.99ms, fracRes: 0.0065, norm(attn): 0.0471, norm(output): 0.1436, norm(x): 0.1303, norm(y): 1.0026, norm:1.2494, tok/sec: 98550.82, flops:103.43, batch-reuse:1
@ 450 train 6.5398 , allloss: 6.5591, dt: 1331.97ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.1455, norm(x): 0.1304, norm(y): 1.0026, norm:1.4286, tok/sec: 98404.76, flops:103.28, batch-reuse:1
@ 451 train 6.5442 , allloss: 6.5612, dt: 1300.16ms, fracRes: 0.0064, norm(attn): 0.0481, norm(output): 0.1455, norm(x): 0.1310, norm(y): 1.0026, norm:1.7584, tok/sec: 100812.10, flops:105.80, batch-reuse:1
@ 452 train 6.5564 , allloss: 6.5731, dt: 1348.70ms, fracRes: 0.0065, norm(attn): 0.0481, norm(output): 0.1465, norm(x): 0.1311, norm(y): 1.0026, norm:1.3922, tok/sec: 97183.81, flops:102.00, batch-reuse:1
@ 453 train 6.5519 , allloss: 6.5684, dt: 1306.51ms, fracRes: 0.0065, norm(attn): 0.0464, norm(output): 0.1455, norm(x): 0.1308, norm(y): 1.0026, norm:1.4417, tok/sec: 100322.09, flops:105.29, batch-reuse:1
@ 454 train 6.5333 , allloss: 6.5497, dt: 1305.31ms, fracRes: 0.0064, norm(attn): 0.0474, norm(output): 0.1455, norm(x): 0.1309, norm(y): 1.0026, norm:1.3475, tok/sec: 100414.26, flops:105.39, batch-reuse:1
@ 455 train 6.6156 , allloss: 6.6315, dt: 1316.26ms, fracRes: 0.0064, norm(attn): 0.0491, norm(output): 0.1455, norm(x): 0.1312, norm(y): 1.0026, norm:1.2763, tok/sec: 99579.46, flops:104.51, batch-reuse:1
@ 456 train 6.5435 , allloss: 6.5621, dt: 1323.64ms, fracRes: 0.0064, norm(attn): 0.0474, norm(output): 0.1465, norm(x): 0.1314, norm(y): 1.0026, norm:1.4128, tok/sec: 99023.75, flops:103.93, batch-reuse:1
@ 457 train 6.6370 , allloss: 6.6534, dt: 1323.70ms, fracRes: 0.0064, norm(attn): 0.0496, norm(output): 0.1484, norm(x): 0.1317, norm(y): 1.0026, norm:1.1867, tok/sec: 99019.67, flops:103.92, batch-reuse:1
@ 458 train 6.6115 , allloss: 6.6273, dt: 1340.29ms, fracRes: 0.0064, norm(attn): 0.0527, norm(output): 0.1475, norm(x): 0.1322, norm(y): 1.0026, norm:1.3942, tok/sec: 97793.41, flops:102.64, batch-reuse:1
@ 459 train 6.5137 , allloss: 6.5312, dt: 1299.79ms, fracRes: 0.0065, norm(attn): 0.0466, norm(output): 0.1465, norm(x): 0.1316, norm(y): 1.0026, norm:1.4368, tok/sec: 100840.89, flops:105.83, batch-reuse:1
@ 460 train 6.5051 , allloss: 6.5215, dt: 1314.43ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.1465, norm(x): 0.1319, norm(y): 1.0027, norm:1.5892, tok/sec: 99717.57, flops:104.66, batch-reuse:1
@ 461 train 6.5317 , allloss: 6.5458, dt: 1325.35ms, fracRes: 0.0066, norm(attn): 0.0496, norm(output): 0.1465, norm(x): 0.1322, norm(y): 1.0027, norm:1.9887, tok/sec: 98896.33, flops:103.79, batch-reuse:1
@ 462 train 6.5853 , allloss: 6.5998, dt: 1306.54ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1465, norm(x): 0.1322, norm(y): 1.0027, norm:1.3561, tok/sec: 100319.93, flops:105.29, batch-reuse:1
@ 463 train 6.5728 , allloss: 6.5874, dt: 1309.19ms, fracRes: 0.0066, norm(attn): 0.0508, norm(output): 0.1465, norm(x): 0.1320, norm(y): 1.0027, norm:1.7156, tok/sec: 100116.86, flops:105.07, batch-reuse:1
@ 464 train 6.5000 , allloss: 6.5146, dt: 1328.88ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1465, norm(x): 0.1320, norm(y): 1.0027, norm:2.8414, tok/sec: 98633.50, flops:103.52, batch-reuse:1
@ 465 train 6.4532 , allloss: 6.4679, dt: 1297.50ms, fracRes: 0.0066, norm(attn): 0.0505, norm(output): 0.1465, norm(x): 0.1322, norm(y): 1.0027, norm:1.5106, tok/sec: 101018.82, flops:106.02, batch-reuse:1
@ 466 train 6.5637 , allloss: 6.5808, dt: 1312.86ms, fracRes: 0.0066, norm(attn): 0.0518, norm(output): 0.1465, norm(x): 0.1327, norm(y): 1.0027, norm:3.3838, tok/sec: 99836.80, flops:104.78, batch-reuse:1
@ 467 train 6.4603 , allloss: 6.4774, dt: 1317.87ms, fracRes: 0.0066, norm(attn): 0.0474, norm(output): 0.1475, norm(x): 0.1329, norm(y): 1.0027, norm:1.9095, tok/sec: 99457.57, flops:104.38, batch-reuse:1
@ 468 train 6.4254 , allloss: 6.4415, dt: 1323.83ms, fracRes: 0.0065, norm(attn): 0.0498, norm(output): 0.1494, norm(x): 0.1335, norm(y): 1.0027, norm:2.5547, tok/sec: 99009.91, flops:103.91, batch-reuse:1
@ 469 train 6.4192 , allloss: 6.4331, dt: 1314.62ms, fracRes: 0.0066, norm(attn): 0.0510, norm(output): 0.1504, norm(x): 0.1335, norm(y): 1.0027, norm:1.9918, tok/sec: 99703.55, flops:104.64, batch-reuse:1
@ 470 train 6.5094 , allloss: 6.5227, dt: 1337.06ms, fracRes: 0.0066, norm(attn): 0.0500, norm(output): 0.1484, norm(x): 0.1333, norm(y): 1.0027, norm:2.0538, tok/sec: 98029.69, flops:102.88, batch-reuse:1
@ 471 train 6.3654 , allloss: 6.3790, dt: 1340.01ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1484, norm(x): 0.1334, norm(y): 1.0027, norm:1.9194, tok/sec: 97814.55, flops:102.66, batch-reuse:1
@ 472 train 6.5163 , allloss: 6.5320, dt: 1336.05ms, fracRes: 0.0065, norm(attn): 0.0479, norm(output): 0.1484, norm(x): 0.1336, norm(y): 1.0027, norm:2.1758, tok/sec: 98103.81, flops:102.96, batch-reuse:1
@ 473 train 6.4723 , allloss: 6.4888, dt: 1328.19ms, fracRes: 0.0065, norm(attn): 0.0476, norm(output): 0.1494, norm(x): 0.1339, norm(y): 1.0027, norm:1.5122, tok/sec: 98684.79, flops:103.57, batch-reuse:1
@ 474 train 6.3852 , allloss: 6.4006, dt: 1297.61ms, fracRes: 0.0066, norm(attn): 0.0491, norm(output): 0.1504, norm(x): 0.1344, norm(y): 1.0027, norm:1.8952, tok/sec: 101010.69, flops:106.01, batch-reuse:1
@ 475 train 6.4019 , allloss: 6.4161, dt: 1294.68ms, fracRes: 0.0066, norm(attn): 0.0496, norm(output): 0.1504, norm(x): 0.1345, norm(y): 1.0027, norm:1.3839, tok/sec: 101239.06, flops:106.25, batch-reuse:1
@ 476 train 6.4248 , allloss: 6.4400, dt: 1329.81ms, fracRes: 0.0065, norm(attn): 0.0488, norm(output): 0.1504, norm(x): 0.1345, norm(y): 1.0027, norm:2.1838, tok/sec: 98564.52, flops:103.45, batch-reuse:1
@ 477 train 6.5041 , allloss: 6.5197, dt: 1342.14ms, fracRes: 0.0066, norm(attn): 0.0469, norm(output): 0.1504, norm(x): 0.1345, norm(y): 1.0027, norm:1.7643, tok/sec: 97659.26, flops:102.50, batch-reuse:1
@ 478 train 6.4436 , allloss: 6.4618, dt: 1315.76ms, fracRes: 0.0066, norm(attn): 0.0488, norm(output): 0.1504, norm(x): 0.1347, norm(y): 1.0028, norm:1.6360, tok/sec: 99617.12, flops:104.55, batch-reuse:1
@ 479 train 6.5688 , allloss: 6.5832, dt: 1306.76ms, fracRes: 0.0067, norm(attn): 0.0503, norm(output): 0.1504, norm(x): 0.1350, norm(y): 1.0028, norm:1.6993, tok/sec: 100302.70, flops:105.27, batch-reuse:1
@ 480 train 6.3681 , allloss: 6.3829, dt: 1349.56ms, fracRes: 0.0066, norm(attn): 0.0476, norm(output): 0.1504, norm(x): 0.1351, norm(y): 1.0028, norm:1.4258, tok/sec: 97121.95, flops:101.93, batch-reuse:1
@ 481 train 6.4761 , allloss: 6.4905, dt: 1350.94ms, fracRes: 0.0067, norm(attn): 0.0491, norm(output): 0.1504, norm(x): 0.1348, norm(y): 1.0028, norm:2.0357, tok/sec: 97022.83, flops:101.83, batch-reuse:1
@ 482 train 6.4415 , allloss: 6.4571, dt: 1310.11ms, fracRes: 0.0067, norm(attn): 0.0469, norm(output): 0.1504, norm(x): 0.1346, norm(y): 1.0028, norm:2.1399, tok/sec: 100046.39, flops:105.00, batch-reuse:1
@ 483 train 6.5068 , allloss: 6.5203, dt: 1316.88ms, fracRes: 0.0067, norm(attn): 0.0500, norm(output): 0.1504, norm(x): 0.1349, norm(y): 1.0028, norm:1.3786, tok/sec: 99532.03, flops:104.46, batch-reuse:1
@ 484 train 6.3970 , allloss: 6.4102, dt: 1360.03ms, fracRes: 0.0068, norm(attn): 0.0508, norm(output): 0.1504, norm(x): 0.1352, norm(y): 1.0028, norm:1.6787, tok/sec: 96374.21, flops:101.15, batch-reuse:1
@ 485 train 6.3233 , allloss: 6.3366, dt: 1357.73ms, fracRes: 0.0068, norm(attn): 0.0510, norm(output): 0.1504, norm(x): 0.1354, norm(y): 1.0028, norm:1.5862, tok/sec: 96537.54, flops:101.32, batch-reuse:1
@ 486 train 6.5189 , allloss: 6.5305, dt: 1286.13ms, fracRes: 0.0067, norm(attn): 0.0496, norm(output): 0.1504, norm(x): 0.1355, norm(y): 1.0028, norm:1.5576, tok/sec: 101912.28, flops:106.96, batch-reuse:1
@ 487 train 6.4528 , allloss: 6.4657, dt: 1317.22ms, fracRes: 0.0067, norm(attn): 0.0525, norm(output): 0.1514, norm(x): 0.1356, norm(y): 1.0028, norm:1.2352, tok/sec: 99506.47, flops:104.43, batch-reuse:1
@ 488 train 6.3305 , allloss: 6.3441, dt: 1342.34ms, fracRes: 0.0068, norm(attn): 0.0527, norm(output): 0.1504, norm(x): 0.1357, norm(y): 1.0028, norm:1.6562, tok/sec: 97644.62, flops:102.48, batch-reuse:1
@ 489 train 6.4062 , allloss: 6.4192, dt: 1341.40ms, fracRes: 0.0068, norm(attn): 0.0493, norm(output): 0.1504, norm(x): 0.1356, norm(y): 1.0028, norm:1.4236, tok/sec: 97712.88, flops:102.55, batch-reuse:1
@ 490 train 6.4423 , allloss: 6.4553, dt: 1298.48ms, fracRes: 0.0067, norm(attn): 0.0513, norm(output): 0.1514, norm(x): 0.1357, norm(y): 1.0028, norm:1.2693, tok/sec: 100942.53, flops:105.94, batch-reuse:1
@ 491 train 6.5046 , allloss: 6.5168, dt: 1297.95ms, fracRes: 0.0068, norm(attn): 0.0530, norm(output): 0.1514, norm(x): 0.1359, norm(y): 1.0029, norm:1.3569, tok/sec: 100983.78, flops:105.98, batch-reuse:1
@ 492 train 6.5029 , allloss: 6.5159, dt: 1322.58ms, fracRes: 0.0067, norm(attn): 0.0505, norm(output): 0.1514, norm(x): 0.1357, norm(y): 1.0029, norm:1.5402, tok/sec: 99103.03, flops:104.01, batch-reuse:1
@ 493 train 6.4503 , allloss: 6.4636, dt: 1296.34ms, fracRes: 0.0067, norm(attn): 0.0483, norm(output): 0.1504, norm(x): 0.1356, norm(y): 1.0029, norm:1.2362, tok/sec: 101108.96, flops:106.12, batch-reuse:1
@ 494 train 6.4187 , allloss: 6.4290, dt: 1353.49ms, fracRes: 0.0067, norm(attn): 0.0493, norm(output): 0.1514, norm(x): 0.1363, norm(y): 1.0029, norm:1.4128, tok/sec: 96839.76, flops:101.64, batch-reuse:1
@ 495 train 6.3136 , allloss: 6.3247, dt: 1306.58ms, fracRes: 0.0068, norm(attn): 0.0493, norm(output): 0.1504, norm(x): 0.1362, norm(y): 1.0029, norm:1.0860, tok/sec: 100317.16, flops:105.28, batch-reuse:1
@ 496 train 6.4403 , allloss: 6.4520, dt: 1297.59ms, fracRes: 0.0069, norm(attn): 0.0488, norm(output): 0.1504, norm(x): 0.1357, norm(y): 1.0029, norm:2.0724, tok/sec: 101011.74, flops:106.01, batch-reuse:1
@ 497 train 6.3242 , allloss: 6.3364, dt: 1292.02ms, fracRes: 0.0068, norm(attn): 0.0474, norm(output): 0.1504, norm(x): 0.1359, norm(y): 1.0029, norm:1.6734, tok/sec: 101447.32, flops:106.47, batch-reuse:1
@ 498 train 6.4876 , allloss: 6.4984, dt: 1282.97ms, fracRes: 0.0069, norm(attn): 0.0527, norm(output): 0.1514, norm(x): 0.1360, norm(y): 1.0029, norm:1.9269, tok/sec: 102162.95, flops:107.22, batch-reuse:1
@ 499 train 6.5145 , allloss: 6.5249, dt: 1308.25ms, fracRes: 0.0070, norm(attn): 0.0542, norm(output): 0.1514, norm(x): 0.1362, norm(y): 1.0029, norm:1.5023, tok/sec: 100188.97, flops:105.15, batch-reuse:1
@ 500 train 6.3982 , allloss: 6.4099, dt: 1296.06ms, fracRes: 0.0070, norm(attn): 0.0530, norm(output): 0.1514, norm(x): 0.1364, norm(y): 1.0029, norm:1.3926, tok/sec: 101130.93, flops:106.14, batch-reuse:1
@ 501 train 6.4322 , allloss: 6.4445, dt: 1321.86ms, fracRes: 0.0068, norm(attn): 0.0513, norm(output): 0.1514, norm(x): 0.1366, norm(y): 1.0029, norm:1.3155, tok/sec: 99157.12, flops:104.07, batch-reuse:1
@ 502 train 6.4521 , allloss: 6.4627, dt: 1323.82ms, fracRes: 0.0068, norm(attn): 0.0537, norm(output): 0.1514, norm(x): 0.1367, norm(y): 1.0029, norm:1.3261, tok/sec: 99010.52, flops:103.91, batch-reuse:1
@ 503 train 6.4199 , allloss: 6.4299, dt: 1310.66ms, fracRes: 0.0068, norm(attn): 0.0527, norm(output): 0.1523, norm(x): 0.1369, norm(y): 1.0029, norm:1.1054, tok/sec: 100004.73, flops:104.96, batch-reuse:1
@ 504 train 6.4738 , allloss: 6.4838, dt: 1294.54ms, fracRes: 0.0068, norm(attn): 0.0557, norm(output): 0.1533, norm(x): 0.1370, norm(y): 1.0029, norm:1.7660, tok/sec: 101249.98, flops:106.26, batch-reuse:1
@ 505 train 6.3790 , allloss: 6.3892, dt: 1332.35ms, fracRes: 0.0068, norm(attn): 0.0537, norm(output): 0.1514, norm(x): 0.1369, norm(y): 1.0029, norm:1.2870, tok/sec: 98376.31, flops:103.25, batch-reuse:1
@ 506 train 6.4053 , allloss: 6.4147, dt: 1309.75ms, fracRes: 0.0068, norm(attn): 0.0510, norm(output): 0.1514, norm(x): 0.1369, norm(y): 1.0029, norm:1.6681, tok/sec: 100073.82, flops:105.03, batch-reuse:1
@ 507 train 6.4184 , allloss: 6.4287, dt: 1296.17ms, fracRes: 0.0069, norm(attn): 0.0562, norm(output): 0.1533, norm(x): 0.1372, norm(y): 1.0030, norm:1.5259, tok/sec: 101122.22, flops:106.13, batch-reuse:1
@ 508 train 6.3329 , allloss: 6.3454, dt: 1309.90ms, fracRes: 0.0068, norm(attn): 0.0537, norm(output): 0.1543, norm(x): 0.1374, norm(y): 1.0030, norm:1.1141, tok/sec: 100062.76, flops:105.02, batch-reuse:1
@ 509 train 6.4020 , allloss: 6.4142, dt: 1280.51ms, fracRes: 0.0069, norm(attn): 0.0522, norm(output): 0.1543, norm(x): 0.1375, norm(y): 1.0030, norm:1.2312, tok/sec: 102359.20, flops:107.43, batch-reuse:1
@ 510 train 6.3441 , allloss: 6.3555, dt: 1294.82ms, fracRes: 0.0068, norm(attn): 0.0522, norm(output): 0.1543, norm(x): 0.1378, norm(y): 1.0030, norm:1.5024, tok/sec: 101228.06, flops:106.24, batch-reuse:1
@ 511 train 6.4378 , allloss: 6.4486, dt: 1295.57ms, fracRes: 0.0070, norm(attn): 0.0530, norm(output): 0.1543, norm(x): 0.1374, norm(y): 1.0030, norm:1.3342, tok/sec: 101169.08, flops:106.18, batch-reuse:1
@ 512 train 6.3691 , allloss: 6.3818, dt: 1293.12ms, fracRes: 0.0070, norm(attn): 0.0525, norm(output): 0.1543, norm(x): 0.1375, norm(y): 1.0030, norm:1.4341, tok/sec: 101361.09, flops:106.38, batch-reuse:1
@ 513 train 6.3645 , allloss: 6.3764, dt: 1302.53ms, fracRes: 0.0069, norm(attn): 0.0522, norm(output): 0.1543, norm(x): 0.1375, norm(y): 1.0030, norm:1.2329, tok/sec: 100628.48, flops:105.61, batch-reuse:1
@ 514 train 6.3242 , allloss: 6.3365, dt: 1318.64ms, fracRes: 0.0070, norm(attn): 0.0549, norm(output): 0.1543, norm(x): 0.1375, norm(y): 1.0030, norm:1.6900, tok/sec: 99399.06, flops:104.32, batch-reuse:1
@ 515 train 6.3180 , allloss: 6.3292, dt: 1333.77ms, fracRes: 0.0069, norm(attn): 0.0547, norm(output): 0.1543, norm(x): 0.1377, norm(y): 1.0030, norm:2.1894, tok/sec: 98271.81, flops:103.14, batch-reuse:1
@ 516 train 6.3148 , allloss: 6.3241, dt: 1340.53ms, fracRes: 0.0069, norm(attn): 0.0557, norm(output): 0.1533, norm(x): 0.1376, norm(y): 1.0030, norm:1.6928, tok/sec: 97776.08, flops:102.62, batch-reuse:1
@ 517 train 6.3074 , allloss: 6.3170, dt: 1338.71ms, fracRes: 0.0070, norm(attn): 0.0571, norm(output): 0.1543, norm(x): 0.1376, norm(y): 1.0030, norm:2.0237, tok/sec: 97909.54, flops:102.76, batch-reuse:1
@ 518 train 6.4041 , allloss: 6.4170, dt: 1301.40ms, fracRes: 0.0070, norm(attn): 0.0522, norm(output): 0.1543, norm(x): 0.1377, norm(y): 1.0030, norm:1.9175, tok/sec: 100716.25, flops:105.70, batch-reuse:1
@ 519 train 6.3312 , allloss: 6.3436, dt: 1297.95ms, fracRes: 0.0068, norm(attn): 0.0510, norm(output): 0.1543, norm(x): 0.1379, norm(y): 1.0030, norm:2.1255, tok/sec: 100983.52, flops:105.98, batch-reuse:1
@ 520 train 6.4105 , allloss: 6.4226, dt: 1306.09ms, fracRes: 0.0069, norm(attn): 0.0518, norm(output): 0.1543, norm(x): 0.1381, norm(y): 1.0030, norm:1.8511, tok/sec: 100354.67, flops:105.32, batch-reuse:1
@ 521 train 6.4604 , allloss: 6.4725, dt: 1291.19ms, fracRes: 0.0070, norm(attn): 0.0557, norm(output): 0.1553, norm(x): 0.1385, norm(y): 1.0030, norm:1.4246, tok/sec: 101512.81, flops:106.54, batch-reuse:1
@ 522 train 6.3129 , allloss: 6.3229, dt: 1301.02ms, fracRes: 0.0069, norm(attn): 0.0542, norm(output): 0.1553, norm(x): 0.1387, norm(y): 1.0030, norm:2.0014, tok/sec: 100745.83, flops:105.73, batch-reuse:1
@ 523 train 6.4110 , allloss: 6.4210, dt: 1320.79ms, fracRes: 0.0069, norm(attn): 0.0554, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0030, norm:1.4109, tok/sec: 99237.57, flops:104.15, batch-reuse:1
@ 524 train 6.3169 , allloss: 6.3265, dt: 1291.23ms, fracRes: 0.0067, norm(attn): 0.0552, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0030, norm:1.2577, tok/sec: 101509.79, flops:106.54, batch-reuse:1
@ 525 train 6.3532 , allloss: 6.3623, dt: 1318.45ms, fracRes: 0.0068, norm(attn): 0.0549, norm(output): 0.1553, norm(x): 0.1389, norm(y): 1.0030, norm:1.3357, tok/sec: 99413.71, flops:104.34, batch-reuse:1
@ 526 train 6.3570 , allloss: 6.3667, dt: 1345.57ms, fracRes: 0.0068, norm(attn): 0.0535, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0030, norm:1.2348, tok/sec: 97410.19, flops:102.23, batch-reuse:1
@ 527 train 6.3713 , allloss: 6.3813, dt: 1333.85ms, fracRes: 0.0069, norm(attn): 0.0569, norm(output): 0.1553, norm(x): 0.1388, norm(y): 1.0031, norm:1.5008, tok/sec: 98265.79, flops:103.13, batch-reuse:1
@ 528 train 6.3287 , allloss: 6.3362, dt: 1348.11ms, fracRes: 0.0069, norm(attn): 0.0544, norm(output): 0.1553, norm(x): 0.1387, norm(y): 1.0031, norm:1.3626, tok/sec: 97226.73, flops:102.04, batch-reuse:1
@ 529 train 6.2955 , allloss: 6.3036, dt: 1298.48ms, fracRes: 0.0068, norm(attn): 0.0537, norm(output): 0.1533, norm(x): 0.1386, norm(y): 1.0031, norm:1.3882, tok/sec: 100942.36, flops:105.94, batch-reuse:1
@ 530 train 6.3909 , allloss: 6.3984, dt: 1332.66ms, fracRes: 0.0068, norm(attn): 0.0562, norm(output): 0.1553, norm(x): 0.1387, norm(y): 1.0031, norm:1.2169, tok/sec: 98353.64, flops:103.22, batch-reuse:1
@ 531 train 6.4394 , allloss: 6.4483, dt: 1283.95ms, fracRes: 0.0067, norm(attn): 0.0581, norm(output): 0.1553, norm(x): 0.1391, norm(y): 1.0031, norm:1.5808, tok/sec: 102084.60, flops:107.14, batch-reuse:1
@ 532 train 6.2441 , allloss: 6.2557, dt: 1291.31ms, fracRes: 0.0068, norm(attn): 0.0571, norm(output): 0.1553, norm(x): 0.1396, norm(y): 1.0031, norm:1.7079, tok/sec: 101503.42, flops:106.53, batch-reuse:1
@ 533 train 6.3181 , allloss: 6.3286, dt: 1291.78ms, fracRes: 0.0068, norm(attn): 0.0559, norm(output): 0.1553, norm(x): 0.1396, norm(y): 1.0031, norm:1.3829, tok/sec: 101466.46, flops:106.49, batch-reuse:1
@ 534 train 6.2350 , allloss: 6.2432, dt: 1292.61ms, fracRes: 0.0067, norm(attn): 0.0557, norm(output): 0.1562, norm(x): 0.1398, norm(y): 1.0031, norm:1.7195, tok/sec: 101401.38, flops:106.42, batch-reuse:1
@ 535 train 6.3484 , allloss: 6.3553, dt: 1315.74ms, fracRes: 0.0068, norm(attn): 0.0557, norm(output): 0.1562, norm(x): 0.1395, norm(y): 1.0031, norm:1.7534, tok/sec: 99618.37, flops:104.55, batch-reuse:1
@ 536 train 6.3295 , allloss: 6.3410, dt: 1307.25ms, fracRes: 0.0068, norm(attn): 0.0532, norm(output): 0.1553, norm(x): 0.1392, norm(y): 1.0031, norm:2.0374, tok/sec: 100265.62, flops:105.23, batch-reuse:1
@ 537 train 6.2925 , allloss: 6.3052, dt: 1315.69ms, fracRes: 0.0069, norm(attn): 0.0566, norm(output): 0.1553, norm(x): 0.1393, norm(y): 1.0031, norm:1.5601, tok/sec: 99622.52, flops:104.56, batch-reuse:1
@ 538 train 6.2641 , allloss: 6.2733, dt: 1330.42ms, fracRes: 0.0069, norm(attn): 0.0574, norm(output): 0.1553, norm(x): 0.1398, norm(y): 1.0032, norm:1.9269, tok/sec: 98519.55, flops:103.40, batch-reuse:1
@ 539 train 6.3061 , allloss: 6.3141, dt: 1332.11ms, fracRes: 0.0069, norm(attn): 0.0593, norm(output): 0.1562, norm(x): 0.1406, norm(y): 1.0031, norm:1.8908, tok/sec: 98393.95, flops:103.27, batch-reuse:1
@ 540 train 6.3557 , allloss: 6.3625, dt: 1337.12ms, fracRes: 0.0070, norm(attn): 0.0583, norm(output): 0.1562, norm(x): 0.1403, norm(y): 1.0032, norm:1.3876, tok/sec: 98025.55, flops:102.88, batch-reuse:1
@ 541 train 6.2962 , allloss: 6.3034, dt: 1287.20ms, fracRes: 0.0071, norm(attn): 0.0574, norm(output): 0.1562, norm(x): 0.1401, norm(y): 1.0032, norm:1.5521, tok/sec: 101827.51, flops:106.87, batch-reuse:1
@ 542 train 6.3549 , allloss: 6.3626, dt: 1341.13ms, fracRes: 0.0070, norm(attn): 0.0576, norm(output): 0.1562, norm(x): 0.1400, norm(y): 1.0032, norm:1.5939, tok/sec: 97732.58, flops:102.57, batch-reuse:1
@ 543 train 6.4496 , allloss: 6.4576, dt: 1356.30ms, fracRes: 0.0069, norm(attn): 0.0588, norm(output): 0.1562, norm(x): 0.1403, norm(y): 1.0032, norm:2.1882, tok/sec: 96639.11, flops:101.42, batch-reuse:1
@ 544 train 6.3198 , allloss: 6.3272, dt: 1313.17ms, fracRes: 0.0072, norm(attn): 0.0571, norm(output): 0.1562, norm(x): 0.1406, norm(y): 1.0032, norm:1.5669, tok/sec: 99813.09, flops:104.76, batch-reuse:1
@ 545 train 6.3196 , allloss: 6.3263, dt: 1304.64ms, fracRes: 0.0073, norm(attn): 0.0574, norm(output): 0.1562, norm(x): 0.1410, norm(y): 1.0032, norm:1.1525, tok/sec: 100465.71, flops:105.44, batch-reuse:1
@ 546 train 6.2775 , allloss: 6.2844, dt: 1288.00ms, fracRes: 0.0072, norm(attn): 0.0564, norm(output): 0.1562, norm(x): 0.1412, norm(y): 1.0032, norm:2.1579, tok/sec: 101764.29, flops:106.80, batch-reuse:1
@ 547 train 6.4151 , allloss: 6.4215, dt: 1320.14ms, fracRes: 0.0075, norm(attn): 0.0603, norm(output): 0.1562, norm(x): 0.1414, norm(y): 1.0032, norm:2.0472, tok/sec: 99286.63, flops:104.20, batch-reuse:1
@ 548 train 6.4071 , allloss: 6.4131, dt: 1310.25ms, fracRes: 0.0075, norm(attn): 0.0596, norm(output): 0.1572, norm(x): 0.1418, norm(y): 1.0032, norm:1.2583, tok/sec: 100035.87, flops:104.99, batch-reuse:1
@ 549 train 6.3443 , allloss: 6.3509, dt: 1332.65ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 0.1562, norm(x): 0.1421, norm(y): 1.0032, norm:1.9834, tok/sec: 98354.32, flops:103.22, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4258, 0.5742, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3184, 0.2988, 0.3828, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.1963, 0.3320, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2734, 0.1543, 0.2773, 0.1475, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1582, 0.1328, 0.1504, 0.2295, 0.1846, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2471, 0.2373, 0.1533, 0.0806, 0.0771, 0.1680, 0.0361, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.1187, 0.1055, 0.1807, 0.2070, 0.0776, 0.2051, 0.0408, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0986, 0.1436, 0.0938, 0.0879, 0.1318, 0.1147, 0.2295, 0.0679, 0.0322, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.1079, 0.1079, 0.0996, 0.1357, 0.1240, 0.1074, 0.0869, 0.1055, 0.0420, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.0649, 0.0591, 0.0444, 0.0332, 0.0737, 0.0400, 0.1484, 0.2471, 0.1436, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.0630, 0.1021, 0.0703, 0.0396, 0.0552, 0.0352, 0.1611, 0.0830, 0.1611, 0.0593, 0.0913, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.0684, 0.0447, 0.1177, 0.1455, 0.0559, 0.0732, 0.0723, 0.0688, 0.0361, 0.0820, 0.0801, 0.0908, 0.0000, 0.0000],
        [0.0513, 0.1138, 0.0581, 0.0767, 0.1113, 0.0703, 0.2236, 0.0425, 0.0248, 0.0288, 0.0309, 0.1035, 0.0337, 0.0308, 0.0000],
        [0.0566, 0.0432, 0.1108, 0.0552, 0.0679, 0.0737, 0.0884, 0.0591, 0.0625, 0.0579, 0.0518, 0.0525, 0.0640, 0.0737, 0.0825]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0070, -0.0255,  0.0435,  ...,  0.0148,  0.0165,  0.0178],
        [ 0.0272,  0.0065,  0.0094,  ..., -0.0134,  0.0274,  0.0019],
        [-0.0427, -0.0025, -0.0031,  ..., -0.0043, -0.0167,  0.0164],
        ...,
        [-0.0440,  0.0002, -0.0575,  ...,  0.0203, -0.0104, -0.0104],
        [ 0.0089, -0.0099,  0.0060,  ...,  0.0335, -0.0092,  0.0164],
        [-0.0278, -0.0040, -0.0200,  ...,  0.0132, -0.0126,  0.0288]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2852,  1.1250, -0.9570,  0.0361, -0.4883, -0.3848, -0.4512, -0.7852, -0.5547, -0.0596, -0.0069,  0.0471, -0.0282, -0.5664, -0.9062,  0.7695,  0.0513,  0.9023, -0.5742, -0.5781,  0.0195, -0.2617, -0.6562,  0.4375, -0.1016, -0.0145,  0.2158, -0.4609, -1.0547,  1.3984,  0.3574, -0.4805,
        -0.1162,  0.5312,  0.0068, -1.0625,  0.0674,  0.5859, -0.5000, -0.1895, -0.9648, -0.0576, -0.2773,  0.3203, -1.0234,  1.0391,  0.0679,  0.3438,  0.6055, -0.6484, -0.4121,  0.3633, -0.6094,  1.3281, -0.5391,  0.0576,  0.2754,  0.6211,  0.5156,  0.1523,  0.1455,  0.3281, -0.1182,  0.0640],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0165, -0.0060, -0.0136,  ...,  0.0278,  0.0069,  0.0286],
        [ 0.0171, -0.0369, -0.0175,  ..., -0.0039,  0.0235,  0.0282],
        [-0.0043,  0.0323,  0.0440,  ...,  0.0086,  0.0193, -0.0348],
        ...,
        [ 0.0304,  0.0159,  0.0378,  ..., -0.0098,  0.0187, -0.0214],
        [ 0.0009, -0.0280, -0.0281,  ...,  0.0230, -0.0349, -0.0071],
        [ 0.0391, -0.0049,  0.0242,  ..., -0.0225, -0.0353, -0.0098]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3516, -0.0214,  0.1289, -0.2021, -0.2158,  0.2773, -0.3359, -0.1826, -0.4648, -0.7148,  0.2012, -0.6172,  0.2119, -0.0435,  0.1660, -0.5977, -0.9180,  0.0908,  0.6602, -1.0234,  0.0698,  0.2891, -0.3320,  0.3164, -1.2266, -0.5078,  0.8320,  0.9727, -0.1318,  0.2256,  0.2041,  0.2812,
        -0.6641,  0.7148, -0.0684, -0.7656, -0.1406,  0.4199, -0.2178, -0.0273, -0.0137, -0.4863, -0.3223,  0.1680, -0.2363, -0.2314, -0.1826, -1.0938, -0.0962, -0.0820, -0.2832,  0.6914, -0.1128,  0.3438,  0.3105, -0.6641, -0.4121,  0.4316,  0.0918,  1.1719,  0.4102, -0.6914,  0.2256,  0.5508],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2988,     -0.2988,     -0.0889,     -0.5469,      0.3320,      0.0102,     -0.1152,     -0.1953,     -0.2617,     -0.5859,      0.0796,      0.0908,      0.2109,      0.1973],
        [     0.0000,     -0.0669,      0.1816,     -0.1040,      0.1406,      0.0148,     -0.2119,      0.0654,     -0.1416,      0.2031,     -0.1021,      0.1206,      0.2637,      0.1455,     -0.6562],
        [     0.0000,     -0.2236,      0.3008,     -0.0825,     -1.5469,     -0.3730,     -1.0078,      1.3516,      0.8477,      0.7383,     -0.2617,     -1.0938,      0.0264,      1.1875,      0.0004],
        [     0.0000,     -0.5742,      0.0095,     -0.6211,     -0.6250,     -0.2969,     -0.8203,     -0.0029,      0.8555,      0.3281,      0.0659,     -0.7500,      0.0483,      1.1094,     -0.6055],
        [     0.0000,      0.0903,     -0.0869,      0.0381,      0.4629,      0.2432,      0.3027,      0.0312,      0.2520,     -0.1328,      0.0415,      0.6680,     -0.4160,      0.3359,     -0.1406],
        [     0.0000,     -0.0381,     -0.4746,     -1.1172,     -1.1641,     -0.3848,     -1.9219,      0.6758,      0.7031,      0.2090,     -0.1650,     -0.8203,     -0.3125,      0.5742,     -0.3496],
        [     0.0000,      0.6133,      0.4941,      1.0391,      1.1719,      0.1914,      1.1641,     -0.4531,     -1.6016,      0.1123,      0.2031,      1.0469,      0.1738,     -1.3203,      0.5938],
        [     0.0000,      0.3750,     -0.0535,     -0.1196,      0.2871,      0.1504,      0.8398,     -0.3750,     -1.1250,     -0.2383,     -0.4199,      0.8242,      0.0447,     -0.4414,     -0.5625],
        [     0.0000,      0.2695,      0.2734,      0.1904,      0.5039,      0.4102,      0.2695,      0.0569,      0.2520,     -0.6719,     -0.1787,      0.1807,     -0.1221,     -0.1436,      0.4434],
        [     0.0000,     -0.1855,     -0.2793,     -0.5664,     -0.8555,     -0.0596,     -0.6719,      0.6445,      1.1562,      0.6094,     -0.1338,     -1.3438,     -0.4648,      0.6680,     -0.3887],
        [     0.0000,     -0.2207,      0.2598,     -0.1108,     -0.6875,     -0.3574,     -0.8086,      0.7148,      0.0544,      0.7148,     -0.2852,      0.1455,      0.4629,      0.2500,     -0.2119],
        [     0.0000,      0.0659,     -0.3574,      0.6094,      0.8242,     -0.1328,      0.1357,      0.1191,      0.0752,     -0.5742,      0.2461,      0.2236,      0.3496,     -0.5977,      0.3477],
        [     0.0000,      0.7969,      0.1245,      0.3984,      0.7734,      0.3105,      1.4688,     -0.1904,     -0.7266,     -0.5781,     -0.5078,      0.7031,     -0.4180,     -0.5117,      0.3867],
        [     0.0000,     -0.2715,      0.6719,     -0.0234,      0.1836,      0.2656,      0.4453,      0.0417,      0.1006,      0.0223,     -0.0869,     -0.0771,      0.1250,      0.2617,      0.3789]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4427],
        [0.3506],
        [0.3025],
        [0.2684],
        [0.1442],
        [0.2052],
        [0.0826],
        [0.0812],
        [0.0860],
        [0.0857],
        [0.0924],
        [0.0658],
        [0.0467],
        [0.0682]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4277, 0.5703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.2930, 0.3301, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2207, 0.2490, 0.3008, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.2520, 0.2021, 0.1846, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.2266, 0.1152, 0.1270, 0.1680, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.2090, 0.2383, 0.0708, 0.1709, 0.2148, 0.0233, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.0703, 0.0830, 0.1016, 0.0461, 0.0544, 0.3672, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1279, 0.1069, 0.1445, 0.0981, 0.1035, 0.1689, 0.0659, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0913, 0.1270, 0.0635, 0.1426, 0.0762, 0.0903, 0.0752, 0.1670, 0.0776, 0.0894, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0884, 0.1074, 0.1040, 0.0728, 0.1045, 0.0884, 0.0747, 0.0752, 0.0869, 0.1206, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0854, 0.1074, 0.0688, 0.0908, 0.0781, 0.0762, 0.0698, 0.1016, 0.0786, 0.0972, 0.0598, 0.0000, 0.0000, 0.0000],
        [0.0688, 0.0879, 0.0894, 0.0469, 0.0820, 0.0811, 0.0732, 0.1099, 0.0898, 0.0505, 0.0564, 0.0996, 0.0649, 0.0000, 0.0000],
        [0.0791, 0.1113, 0.0693, 0.0977, 0.0649, 0.0923, 0.1099, 0.0413, 0.0505, 0.0366, 0.0659, 0.0515, 0.0732, 0.0564, 0.0000],
        [0.0698, 0.0972, 0.0732, 0.0850, 0.0732, 0.0854, 0.0598, 0.0669, 0.0613, 0.0444, 0.0381, 0.0603, 0.0659, 0.0486, 0.0703]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0053, -0.0084,  0.0249,  ..., -0.0008, -0.0238, -0.0115],
        [ 0.0008,  0.0368,  0.0006,  ...,  0.0052,  0.0159,  0.0300],
        [-0.0214,  0.0165,  0.0066,  ...,  0.0053, -0.0212, -0.0096],
        ...,
        [ 0.0195, -0.0328, -0.0178,  ..., -0.0032,  0.0118, -0.0088],
        [-0.0537, -0.0334,  0.0275,  ...,  0.0308, -0.0143,  0.0039],
        [ 0.0415, -0.0020,  0.0314,  ...,  0.0569, -0.0032,  0.0595]], device='cuda:0', requires_grad=True)
K: tensor([ 0.2041, -0.2305, -0.2100,  0.1060,  0.2637, -0.6797, -1.1016, -0.0171,  0.3789,  1.3281,  0.6094, -0.5859, -0.5078, -0.7227,  0.5625, -0.2031,  0.4688, -0.5859, -0.5430, -0.2012, -0.2832, -0.6094,  1.0938, -0.6992, -0.2773,  0.3867, -0.4141,  0.1387, -0.8828,  0.0957, -0.1592,  1.1094,
         0.4141,  0.3301, -0.2637, -0.1021,  0.8164,  0.2578, -0.0840,  0.1641, -0.7070, -0.6250, -0.2656, -1.0781,  0.5391, -0.4336, -0.2891,  0.5703,  0.0669, -0.7930, -0.5156,  0.1099,  0.0737,  0.4180,  0.8516, -0.3672, -0.1953, -0.0830, -1.9531, -0.4961,  1.2188,  0.5391,  0.2344, -0.3574],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0154,  0.0399,  0.0172,  ...,  0.0062,  0.0024,  0.0325],
        [ 0.0137, -0.0329,  0.0103,  ...,  0.0535, -0.0102,  0.0068],
        [-0.0094,  0.0051, -0.0030,  ..., -0.0067, -0.0168,  0.0138],
        ...,
        [-0.0360,  0.0036,  0.0517,  ...,  0.0015,  0.0231,  0.0073],
        [ 0.0278, -0.0122, -0.0166,  ..., -0.0139, -0.0216,  0.0257],
        [ 0.0256,  0.0166, -0.0060,  ..., -0.0105,  0.0138, -0.0199]], device='cuda:0', requires_grad=True)
Q: tensor([-1.0703, -0.4707,  1.2344, -0.7891,  0.1709, -0.1216, -0.4668,  0.1738,  0.3789, -0.7695,  0.2617,  0.6172, -0.5742, -0.0166, -0.3809, -0.7305, -0.3652, -0.0286,  0.2402,  0.4746,  0.3848,  0.2715,  0.7891, -0.1279, -0.4668,  1.1875, -0.7617,  0.0500, -0.7266, -0.5586, -0.3789, -0.3457,
         0.4609,  0.0771, -0.6133,  0.3594,  0.5898,  0.3887, -0.6992, -0.9531, -0.4473,  0.2451, -0.5352,  1.0391, -0.4785,  0.8281,  0.2988, -0.1650,  0.4434, -0.4883,  0.1992, -0.0491,  0.0889,  0.0330,  0.2773,  0.0535,  0.4277, -0.1279, -0.3086, -0.1245,  0.0258, -1.1484, -0.1650,  1.2891],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2871,      0.1846,      0.1523,      0.7891,      0.3145,     -0.5156,      0.2891,      0.0210,      0.5117,      0.4941,     -0.1074,      0.1543,      0.4414,      0.5234],
        [     0.0000,     -0.2539,     -0.1357,     -0.1602,     -0.0036,     -0.1504,     -0.3418,      0.6133,     -0.1152,     -0.0562,     -0.2793,     -0.2383,      0.0830,     -0.4180,     -0.2314],
        [     0.0000,      0.1196,      0.3066,      0.0398,      0.4473,      0.0903,     -0.4062,      0.8789,     -0.0027,      0.0486,     -0.0042,     -0.0742,      0.3203,      0.3379,      0.3516],
        [     0.0000,      0.3047,      0.0869,     -0.0067,     -0.0498,      0.0383,     -0.3477,     -0.5273,     -0.5234,     -0.0143,     -0.0090,      0.0564,     -0.1670,     -0.4180,      0.2002],
        [     0.0000,      0.0376,     -0.6367,     -0.5469,     -0.2637,     -0.4102,      0.2051,     -0.6328,     -0.6016,     -0.7773,      0.2344,     -0.5352,     -0.4902,     -0.3477,     -0.1748],
        [     0.0000,      1.0312,      1.1641,     -0.0488,      0.8320,      1.0625,     -1.1562,      0.6719,      0.8281,      0.6836,      0.1494,      0.0099,      0.0312,      0.9922,      0.3965],
        [     0.0000,     -0.6367,     -0.4707,     -0.2695,     -1.0547,     -0.8945,      1.0156,      0.0825,     -0.8711,     -0.8281,     -0.4668,     -0.3438,     -0.0258,     -0.8594,     -0.5898],
        [     0.0000,      0.0669,     -0.1143,      0.1855,     -0.1982,     -0.1455,      0.3457,     -0.6016,     -0.6367,     -0.6094,     -0.3047,     -0.5039,     -0.2832,     -0.6055,     -0.1279],
        [     0.0000,      0.3262,     -0.3633,      0.4453,     -0.1816,     -0.0139,     -0.1934,      0.6016,     -0.1660,     -0.0206,      0.1084,      0.5664,     -0.2217,      0.1445,     -0.2793],
        [     0.0000,      0.1982,      0.1660,     -0.1914,      0.1699,      0.0022,     -0.1689,     -0.1631,     -0.0179,      0.3125,     -0.1348,     -0.4121,     -0.0908,      0.2715,      0.0002],
        [     0.0000,     -0.0095,      0.2197,     -0.2285,      0.0525,     -0.1016,     -0.1279,     -0.2100,      0.1621,     -0.0962,      0.1162,     -0.3672,     -0.2520,      0.1797,     -0.1719],
        [     0.0000,      0.2412,      0.2578,     -0.3867,      0.1758,      0.1611,      0.0615,      0.4668,      0.2656,     -0.3105,     -0.2012,      0.3652,     -0.0569,      0.2988,      0.2256],
        [     0.0000,      0.3398,     -0.1348,      0.2109,     -0.1953,      0.1533,      0.3301,     -0.6484,     -0.4492,     -0.7695,     -0.1836,     -0.4277,     -0.0767,     -0.3398,     -0.3008],
        [     0.0000,      0.3301,      0.0508,      0.1973,      0.0481,      0.2041,     -0.1553,     -0.0396,     -0.1279,     -0.4492,     -0.6055,     -0.1436,     -0.0532,     -0.3613,      0.0099]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4027],
        [0.2885],
        [0.2193],
        [0.1965],
        [0.2008],
        [0.1116],
        [0.1299],
        [0.1293],
        [0.0931],
        [0.0825],
        [0.0849],
        [0.0792],
        [0.0854],
        [0.0715]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5508, 0.4492, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4297, 0.2383, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.1445, 0.2197, 0.2930, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.2559, 0.1357, 0.2109, 0.2383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.2031, 0.2002, 0.2158, 0.1924, 0.0603, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1543, 0.1250, 0.1309, 0.1885, 0.1069, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.0889, 0.1060, 0.1445, 0.1484, 0.1641, 0.1484, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.0879, 0.0723, 0.0952, 0.1270, 0.1631, 0.0923, 0.1045, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.0913, 0.0737, 0.0713, 0.1523, 0.1211, 0.1504, 0.1069, 0.1099, 0.0466, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.1670, 0.1230, 0.0894, 0.1069, 0.0359, 0.0544, 0.1328, 0.0796, 0.0786, 0.0566, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0464, 0.0938, 0.0811, 0.0679, 0.0786, 0.0645, 0.0659, 0.0559, 0.0957, 0.1270, 0.1367, 0.0000, 0.0000, 0.0000],
        [0.0737, 0.1128, 0.0698, 0.0776, 0.0898, 0.0649, 0.0474, 0.0635, 0.1250, 0.0369, 0.0928, 0.0544, 0.0923, 0.0000, 0.0000],
        [0.0811, 0.0547, 0.0415, 0.0630, 0.0728, 0.0684, 0.0728, 0.0674, 0.0603, 0.1045, 0.1064, 0.0986, 0.0508, 0.0574, 0.0000],
        [0.0618, 0.0388, 0.0535, 0.0547, 0.0547, 0.0840, 0.0645, 0.0259, 0.0586, 0.0525, 0.1533, 0.1299, 0.0503, 0.0693, 0.0496]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0062,  0.0257,  0.0022,  ...,  0.0089, -0.0178,  0.0235],
        [-0.0218,  0.0087,  0.0002,  ..., -0.0105,  0.0303,  0.0139],
        [ 0.0110, -0.0163, -0.0063,  ..., -0.0125,  0.0268,  0.0074],
        ...,
        [ 0.0131,  0.0068, -0.0280,  ...,  0.0050,  0.0039, -0.0034],
        [-0.0025,  0.0224, -0.0293,  ...,  0.0068,  0.0228,  0.0113],
        [ 0.0037, -0.0145,  0.0212,  ..., -0.0378, -0.0363, -0.0159]], device='cuda:0', requires_grad=True)
K: tensor([ 1.3047, -0.5039, -0.5195,  0.9375, -0.8555, -0.8867, -0.1855, -0.6641, -0.1602,  0.5781, -0.0845, -0.1328,  0.2812, -0.3184, -0.1064, -0.2373, -0.4434,  0.8047,  0.1328, -0.4629, -0.8633, -0.1611, -0.3965, -0.5938,  0.0255, -0.2949,  0.8594,  0.6211,  0.0143,  0.2695, -0.4316,  0.1621,
         0.7070,  0.0820,  0.3887,  0.0928, -0.2656,  0.0771,  0.6719,  0.3242,  0.4863,  0.2715,  0.7422, -0.7461, -0.2158,  0.0187, -0.1289, -0.6914,  0.4883,  0.5664, -0.2002, -0.2988, -0.7656, -0.2910,  0.4336, -0.0065, -0.9062, -0.3145,  0.8203, -1.0703, -0.3984, -0.6914,  1.2734,  0.2852],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0007, -0.0307,  0.0259,  ..., -0.0018, -0.0072,  0.0215],
        [-0.0292, -0.0172,  0.0282,  ...,  0.0154, -0.0142, -0.0183],
        [-0.0433, -0.0086, -0.0160,  ..., -0.0460, -0.0627, -0.0461],
        ...,
        [-0.0356,  0.0004,  0.0425,  ...,  0.0121, -0.0383, -0.0371],
        [ 0.0160,  0.0139, -0.0075,  ..., -0.0548, -0.0256,  0.0174],
        [ 0.0338,  0.0015,  0.0044,  ..., -0.0162,  0.0111,  0.0288]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3945, -0.5703,  0.5742, -0.3223,  0.3535,  0.3594,  0.1885,  0.1875, -0.2910, -0.6367,  0.2480,  1.0469,  0.0845, -0.2227, -0.1562, -0.0205, -1.0000,  0.6133,  0.3750, -0.1670,  0.4668,  0.2793, -0.9180, -0.6211,  0.2988,  0.3418, -0.2852, -0.2559,  0.9648,  0.3281,  0.7539,  0.2178,
         0.2539,  0.5039,  0.2480, -0.2441,  0.2910,  0.4453, -0.4688,  0.4219, -0.1108,  0.0708, -0.7148, -0.9141, -0.4238,  0.5430,  0.9727,  0.1216,  1.0391, -0.2471,  0.9297,  0.4355, -0.3652, -0.1016, -0.0439,  0.7266,  0.2031, -1.4609, -0.8438,  0.8633,  1.1953, -0.8828,  0.3711, -0.5156],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2070, -0.0645, -0.1270, -0.3867,  0.0464, -0.7695, -0.3418,  0.0781,  0.0623,  0.1562,  0.1338, -0.0566,  0.2949, -0.0128],
        [ 0.0000, -0.5898, -0.2637, -0.3242, -0.6836,  0.4570, -0.4375, -0.5312, -0.2383, -0.4551, -0.1162,  0.3789, -0.0306,  0.2109, -0.5508],
        [ 0.0000, -0.8633, -0.4453, -0.1592, -0.1699,  0.5117, -0.7617, -0.9023, -0.1089,  0.2207,  0.6289,  0.5820,  0.2422,  0.4082, -0.3574],
        [ 0.0000,  0.4629, -0.1699,  0.2754,  0.3965, -0.1699,  0.0630,  0.1089, -0.0369,  0.0962,  0.0439,  0.0203, -0.0520, -0.2256,  0.1924],
        [ 0.0000,  0.4590,  0.4434,  0.5195,  0.4062, -0.7578,  0.8242,  1.1484, -0.1758, -0.0762,  0.0613, -0.5430, -0.3398, -0.4766,  0.4355],
        [ 0.0000,  0.3262,  0.1177,  0.1631,  0.5234, -0.0386,  0.4980, -0.1079,  0.1299, -0.2480,  0.2100,  0.4219, -0.2949, -0.0364,  0.2393],
        [ 0.0000, -0.4316, -0.2559,  0.0571,  0.0840,  0.1816,  0.0820, -0.7695,  0.4102, -0.7461,  0.1455,  0.5625,  0.3066,  0.5352,  0.0488],
        [ 0.0000, -0.5742, -0.7734, -0.4961, -0.2119,  0.0388, -0.5273, -0.4043, -0.4277,  0.5703,  0.4199,  0.1318, -0.2812, -0.4863, -0.4492],
        [ 0.0000,  0.1758, -0.0415, -0.0728,  0.6836,  0.4570,  0.6719,  0.3320,  0.3613, -0.4980,  0.8086, -0.4277,  0.1807,  0.5469,  0.4297],
        [ 0.0000,  0.7891,  0.4863,  0.1641,  0.3477, -0.7461, -0.3301,  0.5625,  0.0481,  0.0383, -0.2930, -0.5898, -0.3203, -0.0938, -0.4492],
        [ 0.0000, -0.6211,  0.0850, -0.0591, -0.2383, -0.0918, -0.2891, -0.2656, -0.4316,  0.1060,  0.3887,  0.4648,  0.0498, -0.0298, -0.2344],
        [ 0.0000,  0.4277, -0.0540,  0.0518,  0.2031, -0.1260, -0.4395, -0.1455,  0.5312, -0.6914,  0.2305, -0.2988,  0.2266,  0.3457,  0.0605],
        [ 0.0000, -0.3984, -0.6719, -0.2578, -0.1099, -0.1758, -0.1094, -0.1846, -0.2988,  0.2520,  0.2715,  0.1943, -0.4688, -0.3457, -0.0369],
        [ 0.0000, -0.4629, -0.1426, -0.1191, -0.1196,  0.3066,  0.0400, -0.8711, -0.0520, -0.1602,  0.9102,  0.7422, -0.2031,  0.1157, -0.2217]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5311],
        [0.4329],
        [0.3397],
        [0.1990],
        [0.1158],
        [0.1382],
        [0.1364],
        [0.1143],
        [0.0974],
        [0.0698],
        [0.0771],
        [0.0639],
        [0.0679],
        [0.0696]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6406, 0.3574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4434, 0.1895, 0.3672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.1187, 0.2295, 0.2949, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2539, 0.0845, 0.1108, 0.3340, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0933, 0.1172, 0.0952, 0.0918, 0.3848, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1963, 0.0737, 0.1328, 0.0913, 0.1973, 0.2363, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1118, 0.0918, 0.1226, 0.1138, 0.2168, 0.0742, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1157, 0.0820, 0.0840, 0.1494, 0.0801, 0.2129, 0.0684, 0.0962, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0894, 0.0806, 0.0581, 0.1289, 0.0898, 0.1206, 0.0815, 0.1396, 0.0923, 0.1196, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.0503, 0.0645, 0.0654, 0.0869, 0.2012, 0.0325, 0.0864, 0.1709, 0.0840, 0.0381, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0684, 0.0554, 0.0466, 0.0991, 0.0703, 0.1396, 0.0547, 0.0854, 0.0776, 0.1826, 0.0532, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.0454, 0.0265, 0.0579, 0.0388, 0.1660, 0.0393, 0.0942, 0.0562, 0.1221, 0.0791, 0.0791, 0.0972, 0.0000, 0.0000],
        [0.0762, 0.0505, 0.0505, 0.0923, 0.0488, 0.1445, 0.0427, 0.0618, 0.0698, 0.0554, 0.0508, 0.1226, 0.0713, 0.0630, 0.0000],
        [0.0889, 0.0364, 0.0645, 0.0474, 0.0840, 0.1011, 0.0791, 0.0361, 0.0977, 0.0366, 0.0342, 0.0688, 0.0417, 0.0967, 0.0869]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0148,  0.0234,  0.0266,  ...,  0.0070,  0.0332, -0.0372],
        [ 0.0050, -0.0456,  0.0256,  ...,  0.0148, -0.0059,  0.0511],
        [ 0.0221,  0.0139, -0.0409,  ..., -0.0090, -0.0165,  0.0250],
        ...,
        [-0.0105, -0.0032, -0.0106,  ..., -0.0226, -0.0406,  0.0293],
        [-0.0049,  0.0201, -0.0273,  ..., -0.0413,  0.0073,  0.0134],
        [-0.0158, -0.0060, -0.0195,  ..., -0.0383, -0.0068,  0.0216]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0023, -0.5430, -0.5273,  0.3594, -0.0996, -0.5469, -0.6289, -0.5273, -0.9141, -0.6133,  0.2295,  0.4434, -0.3730, -1.1016, -0.3535, -0.3555, -0.5586, -0.3672,  0.2441,  0.3047,  0.7930, -0.3809,  0.2383,  0.0571,  1.6172,  1.5859, -0.8633, -1.1875,  0.6758, -0.0942,  0.5938,  0.7344,
         0.3828,  1.0078, -1.4844,  0.8828, -0.0287, -0.2266, -0.1924, -1.0703,  1.4453, -0.4648, -0.3145, -0.3262,  1.3750,  0.7070,  0.4453,  0.3145,  1.0391,  0.3066,  0.3262, -0.3008,  0.2158,  0.2988,  0.4316,  1.1719, -0.2246, -0.0718,  0.1807,  0.6289,  0.2891, -1.2969,  0.7734,  1.3516],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0072, -0.0190, -0.0411,  ...,  0.0268,  0.0022, -0.0081],
        [-0.0342, -0.0495,  0.0116,  ..., -0.0238, -0.0190, -0.0789],
        [ 0.0243,  0.0009, -0.0164,  ...,  0.0233,  0.0091,  0.0253],
        ...,
        [-0.0112,  0.0168, -0.0045,  ...,  0.0036,  0.0173, -0.0006],
        [ 0.0243,  0.0168, -0.0121,  ..., -0.0139,  0.0048,  0.0017],
        [-0.0109,  0.0429,  0.0035,  ..., -0.0059,  0.0128,  0.0075]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4062, -0.3535, -0.5391,  0.1826, -0.1357, -0.1904,  0.2871, -0.2988, -0.5391,  0.3750, -0.2793,  0.4102, -0.4336, -0.5703, -0.8438,  0.5469, -0.2754,  0.1338, -0.3848, -0.2129,  0.1221,  0.0195, -0.4727,  0.0894,  0.3652, -0.5938, -0.1167,  0.4355,  0.3105, -0.1973, -0.9336,  0.5078,
         1.0547,  0.1543,  0.4219,  0.4805, -0.2812, -0.7578,  0.5547, -0.1582,  0.4414, -0.8828, -0.5859,  0.0469, -0.4414, -0.5664, -0.6445,  0.5430, -0.7695,  0.1621,  0.4707,  0.8125, -0.1387,  1.8906, -0.7344, -0.0403,  1.7734,  0.2578,  0.2402, -0.4668, -0.7344,  0.1079,  0.0781, -0.2891],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.5859,      0.2930,     -0.1475,     -0.2637,      0.2363,     -0.7539,     -0.6836,      0.0479,     -0.7461,     -0.4414,      0.3164,     -0.7305,     -0.0791,     -0.4570],
        [     0.0000,     -0.8516,     -0.1914,     -0.4258,     -0.2363,      0.2285,      0.0566,     -0.2949,     -0.0737,     -0.1973,      0.1582,      0.1064,     -0.2559,     -0.1069,      0.0177],
        [     0.0000,     -1.1016,     -0.4453,     -0.1914,     -0.2051,      0.3633,     -0.4746,      0.2715,     -0.4473,      0.1523,     -0.0199,      0.1699,      0.5938,     -0.4414,     -0.4180],
        [     0.0000,     -1.1016,     -0.8320,      0.2734,     -0.1689,      0.4551,     -1.0156,      0.3164,     -0.5859,     -0.1289,     -0.8945,      0.3184,      0.6562,     -0.6641,     -1.1875],
        [     0.0000,     -0.8555,     -0.6250,     -0.8320,     -0.8672,      0.5664,     -1.1797,     -0.5469,     -0.1196,     -0.7344,     -1.2734,     -0.1914,     -0.3730,     -0.1748,     -1.1484],
        [     0.0000,     -0.9844,     -0.3945,     -0.7695,      0.0006,      0.1836,     -1.0000,     -1.3828,      0.2695,     -1.1797,     -1.5703,     -0.1846,     -1.2891,      0.1865,     -0.3789],
        [     0.0000,     -0.3828,     -0.5820,     -0.2930,     -0.3652,      0.2773,     -0.7930,     -0.4434,     -0.3086,      0.1680,      0.4922,      0.0669,     -0.3047,     -0.3770,     -0.6680],
        [     0.0000,     -0.3438,     -0.3223,      0.2559,     -0.3691,      0.6055,     -0.5273,     -0.1836,     -0.0354,     -0.3145,     -0.3242,      0.5039,     -0.0106,     -0.1357,     -0.4277],
        [     0.0000,     -0.1050,     -0.4316,      0.3672,      0.0044,      0.2988,     -0.0903,      0.4453,      0.0302,      0.2930,      0.6523,      0.6914,      0.8945,      0.0312,     -0.4355],
        [     0.0000,     -0.8672,     -0.6172,     -0.6055,     -0.3164,      0.5195,     -1.2969,     -0.3242,      0.3555,     -0.3516,     -1.1484,     -0.3516,     -0.2314,      0.3105,     -1.6875],
        [     0.0000,      0.0165,     -0.1924,     -0.3652,      0.3906,      0.0422,      0.7305,     -0.2061,      0.2422,      0.1436,      1.0000,     -0.2314,      0.1953,      0.2988,      0.7617],
        [     0.0000,     -0.7695,     -1.3047,     -0.5234,     -0.9219,      0.5273,     -0.9141,     -0.0369,     -0.5547,      0.2197,     -0.2158,     -0.2119,     -0.0051,     -0.5781,     -1.4453],
        [     0.0000,     -0.4102,     -0.4082,      0.1924,     -0.4453,      0.6367,     -0.5781,     -0.2080,     -0.0854,     -0.3184,     -0.4043,      0.4766,     -0.0654,     -0.1904,     -0.5117],
        [     0.0000,     -0.8945,     -0.3242,     -0.6289,     -0.0562,      0.1279,     -0.1187,     -0.9023,      0.0942,     -0.8867,     -0.9609,     -0.2598,     -0.7539,      0.0815,     -0.0264]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5685],
        [0.3916],
        [0.3296],
        [0.2404],
        [0.2170],
        [0.2290],
        [0.1541],
        [0.1169],
        [0.1008],
        [0.1525],
        [0.0863],
        [0.1144],
        [0.0794],
        [0.1154]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4746, 0.2168, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.2773, 0.1953, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1582, 0.2383, 0.0938, 0.1982, 0.3105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1108, 0.2148, 0.1484, 0.1060, 0.1377, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0850, 0.0452, 0.0449, 0.1040, 0.1279, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0347, 0.1699, 0.0869, 0.0537, 0.0684, 0.0464, 0.0962, 0.4434, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0786, 0.1123, 0.0640, 0.0483, 0.0664, 0.1631, 0.2617, 0.1260, 0.0801, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0908, 0.1001, 0.0688, 0.0737, 0.1299, 0.0830, 0.2539, 0.1260, 0.0620, 0.0115, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0540, 0.0815, 0.0292, 0.0325, 0.0776, 0.0610, 0.4727, 0.0835, 0.0322, 0.0101, 0.0654, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.0471, 0.0576, 0.1045, 0.1045, 0.0952, 0.0554, 0.0869, 0.1211, 0.0247, 0.1250, 0.0635, 0.0000, 0.0000, 0.0000],
        [0.0320, 0.1270, 0.0552, 0.0500, 0.0762, 0.0564, 0.1069, 0.2305, 0.0532, 0.0104, 0.1040, 0.0128, 0.0854, 0.0000, 0.0000],
        [0.0635, 0.0874, 0.0510, 0.0378, 0.0518, 0.1377, 0.1875, 0.0972, 0.0640, 0.0332, 0.0549, 0.0295, 0.0461, 0.0586, 0.0000],
        [0.0542, 0.0359, 0.0311, 0.0408, 0.0693, 0.0981, 0.3047, 0.0598, 0.0364, 0.0222, 0.0420, 0.0172, 0.0376, 0.0354, 0.1157]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0139,  0.0234, -0.0022,  ..., -0.0236,  0.0034, -0.0487],
        [ 0.0235,  0.0085,  0.0546,  ..., -0.0483, -0.0274, -0.0004],
        [-0.0058, -0.0016, -0.0005,  ...,  0.0515,  0.0119, -0.0303],
        ...,
        [ 0.0033, -0.0133, -0.0092,  ..., -0.0461, -0.0265,  0.0107],
        [ 0.0097,  0.0213,  0.0232,  ...,  0.0168, -0.0117,  0.0080],
        [-0.0150,  0.0196, -0.0323,  ..., -0.0096, -0.0147,  0.0064]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4258, -0.0347,  0.3145,  0.2490,  1.1328, -0.5078,  0.0605, -0.0216, -0.7344,  0.1533,  0.7461,  1.0156, -0.5156,  0.8477, -0.4609, -0.0417, -0.0339,  0.3496, -1.0703, -0.4629, -0.9414, -0.5391,  0.7930,  1.1016, -0.9414,  1.1094, -0.6172, -0.2236, -0.4062,  0.4766,  0.3730,  0.1328,
        -0.3438,  0.4805, -0.6328,  1.1250,  0.8203,  0.7070,  0.3887, -0.0801, -1.0781, -0.2295,  0.4453, -0.2129, -0.2324, -0.4492,  0.2080,  0.6016, -0.3613,  0.2520, -1.4844, -0.5312,  0.9648, -0.7891, -0.0041,  1.2891,  0.0141,  1.0938,  0.4219, -0.2676,  0.1738, -0.3477,  0.0493,  0.0620],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0071,  0.0351, -0.0173,  ...,  0.0011,  0.0062,  0.0176],
        [ 0.0003, -0.0062,  0.0332,  ..., -0.0063, -0.0106, -0.0010],
        [-0.0109,  0.0250, -0.0213,  ...,  0.0115,  0.0131,  0.0113],
        ...,
        [ 0.0146,  0.0409, -0.0100,  ..., -0.0008,  0.0177, -0.0149],
        [-0.0023, -0.0017,  0.0001,  ...,  0.0310, -0.0297,  0.0304],
        [ 0.0216, -0.0078, -0.0132,  ..., -0.0049, -0.0038, -0.0204]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.9141,  0.4238,  0.1455, -0.6484,  0.4238, -0.1660,  0.1196, -0.1846,  0.1982, -1.5781,  0.2852, -0.0623,  0.0164,  0.7109, -0.2119, -1.7188, -0.3242, -0.5234,  0.1006, -0.4629, -0.1855,  0.3770,  0.3164, -0.4688, -0.0923, -0.1846, -1.1562,  0.1445, -0.2324,  0.0635,  0.5156, -1.1406,
         0.0830,  0.1416, -0.6484,  0.5781, -0.0801,  0.8789, -1.0859,  1.5703, -0.7539,  0.3145,  0.2559,  0.3203,  0.6211,  0.4199, -0.0126,  0.8711,  0.2148, -0.4512, -0.4668, -0.2383,  0.8359, -0.3281,  1.1250,  0.5195, -0.1338, -0.0420, -0.4316, -0.2090, -0.0884, -0.1016,  1.1406, -0.1621],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.5039,  0.0085, -0.3438,  0.0527,  0.0062,  0.9258,  0.1807, -0.7070, -0.7461,  0.0117, -0.4844, -0.4902, -0.7148,  0.8711],
        [ 0.0000, -0.7812, -0.4277, -0.4180, -0.1074,  0.2178,  0.4922, -0.5977, -0.8008, -1.4141, -0.2695, -1.0469, -1.0469, -0.8008,  0.4004],
        [ 0.0000,  0.0471, -0.3027, -0.0063,  0.5234,  0.0126,  0.5508,  0.5117,  0.0048, -0.8594,  0.2119, -0.7734, -0.1104,  0.0498,  0.4199],
        [ 0.0000,  0.4102, -0.5234,  0.2266,  0.6758,  0.6484,  1.5625,  0.9805, -0.3301, -0.6094, -0.0136, -0.8008, -0.1514, -0.3223,  0.9805],
        [ 0.0000,  0.6602,  0.2930, -0.0486,  0.2188,  0.9297,  0.9453,  1.0234,  0.4023, -0.3262,  0.7070, -0.4902,  0.5156,  0.2617,  0.6992],
        [ 0.0000,  0.1079, -0.5195, -0.5273,  0.3125,  0.5234,  1.9141,  0.3926, -0.0149, -0.8867, -0.0292, -1.1641, -0.5586, -0.0874,  1.0312],
        [ 0.0000,  1.5938,  0.9219,  0.4414,  0.6836,  0.2949,  1.0234,  2.5469,  0.6328, -0.1992,  0.7852, -0.7070,  1.3125,  0.5820,  1.1094],
        [ 0.0000,  0.3574, -0.2070, -0.4863, -0.1719,  0.7266,  1.2031,  0.4688,  0.0168, -0.6328, -0.1279, -0.7773, -0.3379, -0.0684,  0.6094],
        [ 0.0000,  0.0957, -0.2754, -0.2100,  0.3574, -0.0952,  1.0234,  0.3281, -0.3828, -2.0625, -0.0271, -1.0469, -0.5938, -0.3809,  0.9141],
        [ 0.0000,  0.4141, -0.6133, -0.5117,  0.3613,  0.1211,  2.1719,  0.4355, -0.5195, -1.6797,  0.1943, -1.1875, -0.7188, -0.5781,  1.3906],
        [ 0.0000, -0.8828, -0.6836, -0.0859, -0.0879, -0.1816, -0.7227, -0.2734,  0.0603, -1.5312,  0.0957, -0.5820, -0.3613,  0.1533, -0.5938],
        [ 0.0000,  1.3750,  0.5469,  0.4492,  0.8672,  0.5664,  1.2031,  1.9766,  0.5078, -1.1250,  1.1797, -0.9141,  0.9805,  0.4121,  1.3750],
        [ 0.0000,  0.3262, -0.2168, -0.5156, -0.2021,  0.7734,  1.0859,  0.4277,  0.0105, -0.6484, -0.1406, -0.7617, -0.3125, -0.0762,  0.5234],
        [ 0.0000, -0.4121, -0.5547, -0.2812,  0.2490,  0.5938,  1.7266,  0.0977, -0.3984, -0.8906, -0.2520, -1.1484, -0.3672, -0.4277,  0.7578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4749],
        [0.3623],
        [0.2139],
        [0.2023],
        [0.1016],
        [0.0817],
        [0.0647],
        [0.0932],
        [0.0764],
        [0.0652],
        [0.0870],
        [0.0475],
        [0.0727],
        [0.0565]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( of:0.3984 a:0.0527.:0.0938 and:0.1582ate:0.0052.:0.2012 a:0.0413
:0.1494)


------
		( a:0.0527.:0.0938 and:0.1582ate:0.0052.:0.2012 a:0.0413
:0.1494The:0.0618)
The first.
The most of the same.
The most of the
@ 550 train 6.3426 , allloss: 6.3519, dt: 1723.71ms, fracRes: 0.0075, norm(attn): 0.0601, norm(output): 0.1572, norm(x): 0.1419, norm(y): 1.0032, norm:2.0073, tok/sec: 76040.53, flops:79.81, batch-reuse:1
@ 551 train 6.3526 , allloss: 6.3612, dt: 1304.25ms, fracRes: 0.0075, norm(attn): 0.0596, norm(output): 0.1562, norm(x): 0.1416, norm(y): 1.0032, norm:1.4433, tok/sec: 100496.40, flops:105.47, batch-reuse:1
@ 552 train 6.2359 , allloss: 6.2425, dt: 1310.41ms, fracRes: 0.0073, norm(attn): 0.0576, norm(output): 0.1572, norm(x): 0.1419, norm(y): 1.0032, norm:2.5790, tok/sec: 100023.56, flops:104.98, batch-reuse:1
@ 553 train 6.3620 , allloss: 6.3688, dt: 1325.75ms, fracRes: 0.0074, norm(attn): 0.0601, norm(output): 0.1572, norm(x): 0.1421, norm(y): 1.0032, norm:1.5437, tok/sec: 98866.61, flops:103.76, batch-reuse:1
@ 554 train 6.3176 , allloss: 6.3250, dt: 1318.67ms, fracRes: 0.0075, norm(attn): 0.0620, norm(output): 0.1572, norm(x): 0.1424, norm(y): 1.0032, norm:2.2711, tok/sec: 99396.85, flops:104.32, batch-reuse:1
@ 555 train 6.3010 , allloss: 6.3087, dt: 1317.86ms, fracRes: 0.0073, norm(attn): 0.0596, norm(output): 0.1572, norm(x): 0.1427, norm(y): 1.0032, norm:1.6377, tok/sec: 99458.40, flops:104.38, batch-reuse:1
@ 556 train 6.2317 , allloss: 6.2388, dt: 1291.84ms, fracRes: 0.0075, norm(attn): 0.0605, norm(output): 0.1572, norm(x): 0.1431, norm(y): 1.0032, norm:1.3662, tok/sec: 101461.59, flops:106.49, batch-reuse:1
@ 557 train 6.3251 , allloss: 6.3317, dt: 1297.51ms, fracRes: 0.0074, norm(attn): 0.0618, norm(output): 0.1572, norm(x): 0.1429, norm(y): 1.0032, norm:1.6519, tok/sec: 101018.46, flops:106.02, batch-reuse:1
@ 558 train 6.4537 , allloss: 6.4602, dt: 1300.98ms, fracRes: 0.0075, norm(attn): 0.0596, norm(output): 0.1572, norm(x): 0.1425, norm(y): 1.0032, norm:1.3712, tok/sec: 100748.42, flops:105.74, batch-reuse:1
@ 559 train 6.5753 , allloss: 6.5813, dt: 1307.55ms, fracRes: 0.0074, norm(attn): 0.0630, norm(output): 0.1572, norm(x): 0.1430, norm(y): 1.0032, norm:1.7911, tok/sec: 100242.72, flops:105.21, batch-reuse:1
@ 560 train 6.4891 , allloss: 6.4993, dt: 1318.81ms, fracRes: 0.0076, norm(attn): 0.0625, norm(output): 0.1572, norm(x): 0.1433, norm(y): 1.0033, norm:1.7835, tok/sec: 99386.28, flops:104.31, batch-reuse:1
@ 561 train 6.5556 , allloss: 6.5622, dt: 1313.56ms, fracRes: 0.0076, norm(attn): 0.0640, norm(output): 0.1582, norm(x): 0.1435, norm(y): 1.0033, norm:1.3592, tok/sec: 99783.77, flops:104.72, batch-reuse:1
@ 562 train 6.4573 , allloss: 6.4642, dt: 1322.31ms, fracRes: 0.0076, norm(attn): 0.0593, norm(output): 0.1582, norm(x): 0.1434, norm(y): 1.0033, norm:2.0387, tok/sec: 99123.76, flops:104.03, batch-reuse:1
@ 563 train 6.5632 , allloss: 6.5697, dt: 1308.95ms, fracRes: 0.0076, norm(attn): 0.0591, norm(output): 0.1572, norm(x): 0.1433, norm(y): 1.0033, norm:1.5301, tok/sec: 100135.12, flops:105.09, batch-reuse:1
@ 564 train 6.3903 , allloss: 6.3965, dt: 1302.02ms, fracRes: 0.0076, norm(attn): 0.0640, norm(output): 0.1572, norm(x): 0.1436, norm(y): 1.0033, norm:1.6323, tok/sec: 100667.98, flops:105.65, batch-reuse:1
@ 565 train 6.2693 , allloss: 6.2749, dt: 1315.42ms, fracRes: 0.0075, norm(attn): 0.0620, norm(output): 0.1582, norm(x): 0.1441, norm(y): 1.0033, norm:1.9611, tok/sec: 99642.69, flops:104.58, batch-reuse:1
@ 566 train 6.4725 , allloss: 6.4780, dt: 1299.91ms, fracRes: 0.0074, norm(attn): 0.0623, norm(output): 0.1592, norm(x): 0.1442, norm(y): 1.0033, norm:1.6352, tok/sec: 100831.61, flops:105.82, batch-reuse:1
@ 567 train 6.4829 , allloss: 6.4891, dt: 1307.51ms, fracRes: 0.0073, norm(attn): 0.0601, norm(output): 0.1592, norm(x): 0.1441, norm(y): 1.0033, norm:1.4019, tok/sec: 100245.15, flops:105.21, batch-reuse:1
@ 568 train 6.5253 , allloss: 6.5315, dt: 1307.55ms, fracRes: 0.0073, norm(attn): 0.0654, norm(output): 0.1582, norm(x): 0.1443, norm(y): 1.0033, norm:1.5022, tok/sec: 100242.09, flops:105.21, batch-reuse:1
@ 569 train 6.4639 , allloss: 6.4704, dt: 1307.33ms, fracRes: 0.0072, norm(attn): 0.0659, norm(output): 0.1592, norm(x): 0.1444, norm(y): 1.0033, norm:1.5132, tok/sec: 100259.22, flops:105.22, batch-reuse:1
@ 570 train 6.4353 , allloss: 6.4428, dt: 1314.30ms, fracRes: 0.0069, norm(attn): 0.0613, norm(output): 0.1592, norm(x): 0.1446, norm(y): 1.0033, norm:1.7026, tok/sec: 99727.50, flops:104.67, batch-reuse:1
@ 571 train 6.4042 , allloss: 6.4162, dt: 1331.92ms, fracRes: 0.0069, norm(attn): 0.0601, norm(output): 0.1592, norm(x): 0.1447, norm(y): 1.0033, norm:1.6473, tok/sec: 98408.04, flops:103.28, batch-reuse:1
@ 572 train 6.3646 , allloss: 6.3712, dt: 1332.24ms, fracRes: 0.0070, norm(attn): 0.0625, norm(output): 0.1602, norm(x): 0.1453, norm(y): 1.0033, norm:0.9596, tok/sec: 98384.72, flops:103.26, batch-reuse:1
@ 573 train 6.4044 , allloss: 6.4093, dt: 1336.69ms, fracRes: 0.0071, norm(attn): 0.0645, norm(output): 0.1602, norm(x): 0.1454, norm(y): 1.0033, norm:1.2385, tok/sec: 98057.27, flops:102.91, batch-reuse:1
@ 574 train 6.4132 , allloss: 6.4181, dt: 1315.44ms, fracRes: 0.0072, norm(attn): 0.0645, norm(output): 0.1592, norm(x): 0.1453, norm(y): 1.0033, norm:1.4229, tok/sec: 99641.28, flops:104.58, batch-reuse:1
@ 575 train 6.3817 , allloss: 6.3871, dt: 1298.53ms, fracRes: 0.0070, norm(attn): 0.0625, norm(output): 0.1611, norm(x): 0.1462, norm(y): 1.0033, norm:2.1525, tok/sec: 100938.56, flops:105.94, batch-reuse:1
@ 576 train 6.3353 , allloss: 6.3401, dt: 1310.10ms, fracRes: 0.0073, norm(attn): 0.0649, norm(output): 0.1611, norm(x): 0.1464, norm(y): 1.0033, norm:1.2021, tok/sec: 100047.41, flops:105.00, batch-reuse:1
@ 577 train 6.4565 , allloss: 6.4619, dt: 1312.73ms, fracRes: 0.0073, norm(attn): 0.0684, norm(output): 0.1621, norm(x): 0.1464, norm(y): 1.0034, norm:2.1052, tok/sec: 99846.68, flops:104.79, batch-reuse:1
@ 578 train 6.3970 , allloss: 6.4026, dt: 1339.57ms, fracRes: 0.0073, norm(attn): 0.0659, norm(output): 0.1621, norm(x): 0.1463, norm(y): 1.0034, norm:1.7891, tok/sec: 97846.01, flops:102.69, batch-reuse:1
@ 579 train 6.3970 , allloss: 6.4023, dt: 1317.02ms, fracRes: 0.0071, norm(attn): 0.0623, norm(output): 0.1621, norm(x): 0.1464, norm(y): 1.0033, norm:1.4948, tok/sec: 99521.72, flops:104.45, batch-reuse:1
@ 580 train 6.4629 , allloss: 6.4678, dt: 1313.02ms, fracRes: 0.0071, norm(attn): 0.0630, norm(output): 0.1611, norm(x): 0.1461, norm(y): 1.0033, norm:1.8936, tok/sec: 99825.10, flops:104.77, batch-reuse:1
@ 581 train 6.3810 , allloss: 6.3856, dt: 1329.02ms, fracRes: 0.0072, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1465, norm(y): 1.0033, norm:1.3966, tok/sec: 98623.10, flops:103.51, batch-reuse:1
@ 582 train 6.3923 , allloss: 6.3970, dt: 1353.40ms, fracRes: 0.0073, norm(attn): 0.0649, norm(output): 0.1621, norm(x): 0.1468, norm(y): 1.0034, norm:1.4334, tok/sec: 96846.46, flops:101.64, batch-reuse:1
@ 583 train 6.3380 , allloss: 6.3454, dt: 1360.77ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1468, norm(y): 1.0034, norm:1.5923, tok/sec: 96322.22, flops:101.09, batch-reuse:1
@ 584 train 6.4295 , allloss: 6.4380, dt: 1312.80ms, fracRes: 0.0074, norm(attn): 0.0645, norm(output): 0.1611, norm(x): 0.1466, norm(y): 1.0034, norm:1.3175, tok/sec: 99841.66, flops:104.79, batch-reuse:1
@ 585 train 6.3718 , allloss: 6.3767, dt: 1315.48ms, fracRes: 0.0075, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1465, norm(y): 1.0034, norm:1.3636, tok/sec: 99638.01, flops:104.57, batch-reuse:1
@ 586 train 6.4061 , allloss: 6.4105, dt: 1318.06ms, fracRes: 0.0078, norm(attn): 0.0649, norm(output): 0.1621, norm(x): 0.1467, norm(y): 1.0034, norm:1.4369, tok/sec: 99443.13, flops:104.37, batch-reuse:1
@ 587 train 6.4099 , allloss: 6.4166, dt: 1311.86ms, fracRes: 0.0075, norm(attn): 0.0623, norm(output): 0.1621, norm(x): 0.1468, norm(y): 1.0034, norm:1.2977, tok/sec: 99913.09, flops:104.86, batch-reuse:1
@ 588 train 6.4225 , allloss: 6.4286, dt: 1331.39ms, fracRes: 0.0074, norm(attn): 0.0620, norm(output): 0.1621, norm(x): 0.1472, norm(y): 1.0034, norm:1.3028, tok/sec: 98447.78, flops:103.32, batch-reuse:1
@ 589 train 6.4208 , allloss: 6.4293, dt: 1308.76ms, fracRes: 0.0074, norm(attn): 0.0635, norm(output): 0.1621, norm(x): 0.1472, norm(y): 1.0034, norm:1.1106, tok/sec: 100149.82, flops:105.11, batch-reuse:1
@ 590 train 6.4097 , allloss: 6.4145, dt: 1318.98ms, fracRes: 0.0075, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1474, norm(y): 1.0034, norm:1.1975, tok/sec: 99373.76, flops:104.29, batch-reuse:1
@ 591 train 6.3519 , allloss: 6.3563, dt: 1332.71ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 0.1621, norm(x): 0.1476, norm(y): 1.0034, norm:1.0047, tok/sec: 98350.15, flops:103.22, batch-reuse:1
@ 592 train 6.3664 , allloss: 6.3711, dt: 1299.01ms, fracRes: 0.0076, norm(attn): 0.0659, norm(output): 0.1621, norm(x): 0.1478, norm(y): 1.0034, norm:1.2585, tok/sec: 100901.53, flops:105.90, batch-reuse:1
@ 593 train 6.3612 , allloss: 6.3671, dt: 1322.52ms, fracRes: 0.0077, norm(attn): 0.0630, norm(output): 0.1621, norm(x): 0.1477, norm(y): 1.0034, norm:1.3452, tok/sec: 99107.80, flops:104.02, batch-reuse:1
@ 594 train 6.5561 , allloss: 6.5603, dt: 1323.85ms, fracRes: 0.0078, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1478, norm(y): 1.0034, norm:1.4737, tok/sec: 99008.10, flops:103.91, batch-reuse:1
@ 595 train 6.3282 , allloss: 6.3321, dt: 1332.91ms, fracRes: 0.0078, norm(attn): 0.0645, norm(output): 0.1621, norm(x): 0.1479, norm(y): 1.0034, norm:1.3126, tok/sec: 98335.48, flops:103.20, batch-reuse:1
@ 596 train 6.3521 , allloss: 6.3568, dt: 1287.67ms, fracRes: 0.0079, norm(attn): 0.0688, norm(output): 0.1621, norm(x): 0.1476, norm(y): 1.0034, norm:1.6303, tok/sec: 101789.93, flops:106.83, batch-reuse:1
@ 597 train 6.3390 , allloss: 6.3434, dt: 1295.16ms, fracRes: 0.0079, norm(attn): 0.0674, norm(output): 0.1621, norm(x): 0.1475, norm(y): 1.0035, norm:1.2380, tok/sec: 101201.45, flops:106.21, batch-reuse:1
@ 598 train 6.4317 , allloss: 6.4365, dt: 1309.81ms, fracRes: 0.0081, norm(attn): 0.0693, norm(output): 0.1621, norm(x): 0.1479, norm(y): 1.0035, norm:1.4789, tok/sec: 100069.39, flops:105.02, batch-reuse:1
@ 599 train 6.4224 , allloss: 6.4272, dt: 1315.20ms, fracRes: 0.0081, norm(attn): 0.0703, norm(output): 0.1621, norm(x): 0.1482, norm(y): 1.0035, norm:1.3681, tok/sec: 99659.51, flops:104.59, batch-reuse:1
@ 600 train 6.3538 , allloss: 6.3579, dt: 1315.40ms, fracRes: 0.0081, norm(attn): 0.0669, norm(output): 0.1621, norm(x): 0.1483, norm(y): 1.0035, norm:1.5710, tok/sec: 99644.51, flops:104.58, batch-reuse:1
@ 601 train 6.4342 , allloss: 6.4378, dt: 1312.65ms, fracRes: 0.0083, norm(attn): 0.0698, norm(output): 0.1621, norm(x): 0.1482, norm(y): 1.0035, norm:1.5927, tok/sec: 99852.84, flops:104.80, batch-reuse:1
@ 602 train 6.4122 , allloss: 6.4151, dt: 1289.64ms, fracRes: 0.0082, norm(attn): 0.0698, norm(output): 0.1631, norm(x): 0.1484, norm(y): 1.0035, norm:1.7683, tok/sec: 101634.31, flops:106.67, batch-reuse:1
@ 603 train 6.3513 , allloss: 6.3547, dt: 1311.45ms, fracRes: 0.0079, norm(attn): 0.0693, norm(output): 0.1621, norm(x): 0.1487, norm(y): 1.0035, norm:1.1332, tok/sec: 99944.15, flops:104.89, batch-reuse:1
@ 604 train 6.2700 , allloss: 6.2746, dt: 1295.08ms, fracRes: 0.0079, norm(attn): 0.0654, norm(output): 0.1621, norm(x): 0.1488, norm(y): 1.0035, norm:1.5509, tok/sec: 101207.28, flops:106.22, batch-reuse:1
@ 605 train 6.2952 , allloss: 6.2995, dt: 1313.00ms, fracRes: 0.0080, norm(attn): 0.0703, norm(output): 0.1660, norm(x): 0.1492, norm(y): 1.0035, norm:1.1995, tok/sec: 99826.37, flops:104.77, batch-reuse:1
@ 606 train 6.3271 , allloss: 6.3311, dt: 1300.29ms, fracRes: 0.0079, norm(attn): 0.0679, norm(output): 0.1660, norm(x): 0.1497, norm(y): 1.0035, norm:1.5478, tok/sec: 100802.36, flops:105.79, batch-reuse:1
@ 607 train 6.3110 , allloss: 6.3151, dt: 1306.98ms, fracRes: 0.0081, norm(attn): 0.0669, norm(output): 0.1660, norm(x): 0.1494, norm(y): 1.0035, norm:1.3298, tok/sec: 100285.98, flops:105.25, batch-reuse:1
@ 608 train 6.2290 , allloss: 6.2330, dt: 1303.34ms, fracRes: 0.0080, norm(attn): 0.0659, norm(output): 0.1660, norm(x): 0.1495, norm(y): 1.0035, norm:1.2843, tok/sec: 100566.54, flops:105.55, batch-reuse:1
@ 609 train 6.3007 , allloss: 6.3048, dt: 1301.01ms, fracRes: 0.0079, norm(attn): 0.0669, norm(output): 0.1660, norm(x): 0.1494, norm(y): 1.0035, norm:1.3633, tok/sec: 100746.07, flops:105.73, batch-reuse:1
@ 610 train 6.4516 , allloss: 6.4555, dt: 1309.62ms, fracRes: 0.0081, norm(attn): 0.0698, norm(output): 0.1660, norm(x): 0.1493, norm(y): 1.0035, norm:1.2082, tok/sec: 100084.24, flops:105.04, batch-reuse:1
@ 611 train 6.3494 , allloss: 6.3526, dt: 1326.48ms, fracRes: 0.0083, norm(attn): 0.0693, norm(output): 0.1650, norm(x): 0.1492, norm(y): 1.0035, norm:1.4789, tok/sec: 98811.60, flops:103.70, batch-reuse:1
@ 612 train 6.3901 , allloss: 6.3932, dt: 1299.58ms, fracRes: 0.0082, norm(attn): 0.0728, norm(output): 0.1660, norm(x): 0.1491, norm(y): 1.0035, norm:1.8655, tok/sec: 100857.45, flops:105.85, batch-reuse:1
@ 613 train 6.4447 , allloss: 6.4518, dt: 1324.63ms, fracRes: 0.0078, norm(attn): 0.0703, norm(output): 0.1660, norm(x): 0.1490, norm(y): 1.0035, norm:1.4002, tok/sec: 98949.95, flops:103.85, batch-reuse:1
@ 614 train 6.3690 , allloss: 6.3734, dt: 1311.92ms, fracRes: 0.0080, norm(attn): 0.0693, norm(output): 0.1650, norm(x): 0.1495, norm(y): 1.0035, norm:1.0063, tok/sec: 99908.81, flops:104.86, batch-reuse:1
@ 615 train 6.3717 , allloss: 6.3766, dt: 1307.37ms, fracRes: 0.0082, norm(attn): 0.0698, norm(output): 0.1621, norm(x): 0.1499, norm(y): 1.0035, norm:1.4081, tok/sec: 100256.30, flops:105.22, batch-reuse:1
@ 616 train 6.3865 , allloss: 6.3903, dt: 1290.48ms, fracRes: 0.0085, norm(attn): 0.0713, norm(output): 0.1660, norm(x): 0.1499, norm(y): 1.0035, norm:1.1160, tok/sec: 101568.59, flops:106.60, batch-reuse:1
@ 617 train 6.1832 , allloss: 6.1866, dt: 1303.96ms, fracRes: 0.0086, norm(attn): 0.0718, norm(output): 0.1660, norm(x): 0.1499, norm(y): 1.0036, norm:1.2809, tok/sec: 100518.38, flops:105.50, batch-reuse:1
@ 618 train 6.3416 , allloss: 6.3450, dt: 1299.39ms, fracRes: 0.0089, norm(attn): 0.0713, norm(output): 0.1660, norm(x): 0.1498, norm(y): 1.0036, norm:1.7042, tok/sec: 100871.90, flops:105.87, batch-reuse:1
@ 619 train 6.2895 , allloss: 6.2926, dt: 1311.78ms, fracRes: 0.0092, norm(attn): 0.0742, norm(output): 0.1670, norm(x): 0.1500, norm(y): 1.0036, norm:1.3807, tok/sec: 99919.45, flops:104.87, batch-reuse:1
@ 620 train 6.3079 , allloss: 6.3115, dt: 1337.56ms, fracRes: 0.0088, norm(attn): 0.0723, norm(output): 0.1660, norm(x): 0.1499, norm(y): 1.0036, norm:1.5619, tok/sec: 97993.51, flops:102.85, batch-reuse:1
@ 621 train 6.3004 , allloss: 6.3040, dt: 1316.03ms, fracRes: 0.0088, norm(attn): 0.0713, norm(output): 0.1660, norm(x): 0.1506, norm(y): 1.0036, norm:1.2732, tok/sec: 99596.85, flops:104.53, batch-reuse:1
@ 622 train 6.2381 , allloss: 6.2421, dt: 1358.06ms, fracRes: 0.0094, norm(attn): 0.0713, norm(output): 0.1660, norm(x): 0.1503, norm(y): 1.0036, norm:1.1281, tok/sec: 96513.95, flops:101.29, batch-reuse:1
@ 623 train 6.2450 , allloss: 6.2482, dt: 1343.44ms, fracRes: 0.0091, norm(attn): 0.0728, norm(output): 0.1660, norm(x): 0.1505, norm(y): 1.0036, norm:1.2489, tok/sec: 97564.27, flops:102.40, batch-reuse:1
@ 624 train 6.3456 , allloss: 6.3484, dt: 1311.94ms, fracRes: 0.0093, norm(attn): 0.0723, norm(output): 0.1660, norm(x): 0.1507, norm(y): 1.0036, norm:1.1639, tok/sec: 99906.78, flops:104.85, batch-reuse:1
@ 625 train 6.3916 , allloss: 6.3947, dt: 1321.34ms, fracRes: 0.0095, norm(attn): 0.0728, norm(output): 0.1670, norm(x): 0.1508, norm(y): 1.0036, norm:1.2914, tok/sec: 99196.48, flops:104.11, batch-reuse:1
@ 626 train 6.3074 , allloss: 6.3101, dt: 1322.87ms, fracRes: 0.0096, norm(attn): 0.0684, norm(output): 0.1660, norm(x): 0.1507, norm(y): 1.0036, norm:1.1084, tok/sec: 99081.36, flops:103.99, batch-reuse:1
@ 627 train 6.2875 , allloss: 6.2905, dt: 1295.47ms, fracRes: 0.0096, norm(attn): 0.0752, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0036, norm:1.4481, tok/sec: 101177.09, flops:106.19, batch-reuse:1
@ 628 train 6.3403 , allloss: 6.3435, dt: 1311.60ms, fracRes: 0.0095, norm(attn): 0.0737, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0036, norm:1.1030, tok/sec: 99932.96, flops:104.88, batch-reuse:1
@ 629 train 6.3708 , allloss: 6.3760, dt: 1342.25ms, fracRes: 0.0104, norm(attn): 0.0801, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0037, norm:1.6019, tok/sec: 97650.95, flops:102.49, batch-reuse:1
@ 630 train 6.4746 , allloss: 6.4783, dt: 1331.31ms, fracRes: 0.0101, norm(attn): 0.0781, norm(output): 0.1670, norm(x): 0.1512, norm(y): 1.0036, norm:1.9749, tok/sec: 98453.67, flops:103.33, batch-reuse:1
@ 631 train 6.3836 , allloss: 6.3867, dt: 1303.49ms, fracRes: 0.0100, norm(attn): 0.0732, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0036, norm:1.2923, tok/sec: 100554.45, flops:105.53, batch-reuse:1
@ 632 train 6.5186 , allloss: 6.5247, dt: 1278.40ms, fracRes: 0.0108, norm(attn): 0.0742, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0037, norm:1.3579, tok/sec: 102528.45, flops:107.61, batch-reuse:1
@ 633 train 6.4379 , allloss: 6.4412, dt: 1307.17ms, fracRes: 0.0125, norm(attn): 0.0752, norm(output): 0.1660, norm(x): 0.1506, norm(y): 1.0037, norm:1.8014, tok/sec: 100271.79, flops:105.24, batch-reuse:1
@ 634 train 6.2696 , allloss: 6.2723, dt: 1308.10ms, fracRes: 0.0131, norm(attn): 0.0742, norm(output): 0.1670, norm(x): 0.1510, norm(y): 1.0037, norm:2.0069, tok/sec: 100200.02, flops:105.16, batch-reuse:1
@ 635 train 6.3774 , allloss: 6.3809, dt: 1290.84ms, fracRes: 0.0117, norm(attn): 0.0737, norm(output): 0.1670, norm(x): 0.1515, norm(y): 1.0036, norm:1.6018, tok/sec: 101539.71, flops:106.57, batch-reuse:1
@ 636 train 6.4066 , allloss: 6.4104, dt: 1283.18ms, fracRes: 0.0115, norm(attn): 0.0752, norm(output): 0.1670, norm(x): 0.1515, norm(y): 1.0036, norm:1.3012, tok/sec: 102146.04, flops:107.20, batch-reuse:1
@ 637 train 6.2481 , allloss: 6.2513, dt: 1296.38ms, fracRes: 0.0108, norm(attn): 0.0752, norm(output): 0.1670, norm(x): 0.1518, norm(y): 1.0037, norm:1.2001, tok/sec: 101106.01, flops:106.11, batch-reuse:1
@ 638 train 6.2398 , allloss: 6.2432, dt: 1307.15ms, fracRes: 0.0108, norm(attn): 0.0742, norm(output): 0.1680, norm(x): 0.1518, norm(y): 1.0037, norm:1.3277, tok/sec: 100273.03, flops:105.24, batch-reuse:1
@ 639 train 6.3307 , allloss: 6.3334, dt: 1310.40ms, fracRes: 0.0107, norm(attn): 0.0757, norm(output): 0.1689, norm(x): 0.1520, norm(y): 1.0037, norm:1.3531, tok/sec: 100024.31, flops:104.98, batch-reuse:1
@ 640 train 6.2544 , allloss: 6.2579, dt: 1306.67ms, fracRes: 0.0113, norm(attn): 0.0781, norm(output): 0.1680, norm(x): 0.1519, norm(y): 1.0037, norm:1.6425, tok/sec: 100309.79, flops:105.28, batch-reuse:1
@ 641 train 6.2866 , allloss: 6.2899, dt: 1349.27ms, fracRes: 0.0120, norm(attn): 0.0801, norm(output): 0.1689, norm(x): 0.1517, norm(y): 1.0037, norm:1.6980, tok/sec: 97142.89, flops:101.95, batch-reuse:1
@ 642 train 6.2086 , allloss: 6.2113, dt: 1314.76ms, fracRes: 0.0112, norm(attn): 0.0723, norm(output): 0.1689, norm(x): 0.1517, norm(y): 1.0037, norm:1.6452, tok/sec: 99692.99, flops:104.63, batch-reuse:1
@ 643 train 6.2360 , allloss: 6.2391, dt: 1323.75ms, fracRes: 0.0107, norm(attn): 0.0732, norm(output): 0.1670, norm(x): 0.1520, norm(y): 1.0037, norm:1.1610, tok/sec: 99015.87, flops:103.92, batch-reuse:1
@ 644 train 6.4380 , allloss: 6.4411, dt: 1295.10ms, fracRes: 0.0114, norm(attn): 0.0776, norm(output): 0.1699, norm(x): 0.1519, norm(y): 1.0037, norm:2.1534, tok/sec: 101205.92, flops:106.22, batch-reuse:1
@ 645 train 6.3609 , allloss: 6.3636, dt: 1318.74ms, fracRes: 0.0109, norm(attn): 0.0791, norm(output): 0.1689, norm(x): 0.1522, norm(y): 1.0037, norm:1.4406, tok/sec: 99391.64, flops:104.31, batch-reuse:1
@ 646 train 6.2637 , allloss: 6.2664, dt: 1339.71ms, fracRes: 0.0115, norm(attn): 0.0747, norm(output): 0.1689, norm(x): 0.1524, norm(y): 1.0037, norm:1.6636, tok/sec: 97836.36, flops:102.68, batch-reuse:1
@ 647 train 6.3226 , allloss: 6.3260, dt: 1323.97ms, fracRes: 0.0121, norm(attn): 0.0742, norm(output): 0.1680, norm(x): 0.1526, norm(y): 1.0037, norm:1.8451, tok/sec: 98999.25, flops:103.90, batch-reuse:1
@ 648 train 6.2024 , allloss: 6.2066, dt: 1330.80ms, fracRes: 0.0109, norm(attn): 0.0786, norm(output): 0.1689, norm(x): 0.1528, norm(y): 1.0037, norm:1.3586, tok/sec: 98491.36, flops:103.37, batch-reuse:1
@ 649 train 6.3047 , allloss: 6.3105, dt: 1334.15ms, fracRes: 0.0108, norm(attn): 0.0762, norm(output): 0.1699, norm(x): 0.1529, norm(y): 1.0037, norm:1.1661, tok/sec: 98243.49, flops:103.11, batch-reuse:1
@ 650 train 6.1752 , allloss: 6.1784, dt: 1299.93ms, fracRes: 0.0110, norm(attn): 0.0732, norm(output): 0.1689, norm(x): 0.1531, norm(y): 1.0037, norm:1.0126, tok/sec: 100830.06, flops:105.82, batch-reuse:1
@ 651 train 6.2627 , allloss: 6.2654, dt: 1303.46ms, fracRes: 0.0124, norm(attn): 0.0757, norm(output): 0.1699, norm(x): 0.1531, norm(y): 1.0037, norm:1.2007, tok/sec: 100556.73, flops:105.54, batch-reuse:1
@ 652 train 6.1601 , allloss: 6.1626, dt: 1302.81ms, fracRes: 0.0119, norm(attn): 0.0742, norm(output): 0.1709, norm(x): 0.1537, norm(y): 1.0037, norm:1.4582, tok/sec: 100606.77, flops:105.59, batch-reuse:1
@ 653 train 6.1711 , allloss: 6.1738, dt: 1300.27ms, fracRes: 0.0117, norm(attn): 0.0767, norm(output): 0.1709, norm(x): 0.1537, norm(y): 1.0037, norm:1.7520, tok/sec: 100803.32, flops:105.79, batch-reuse:1
@ 654 train 6.2170 , allloss: 6.2209, dt: 1311.24ms, fracRes: 0.0123, norm(attn): 0.0767, norm(output): 0.1709, norm(x): 0.1531, norm(y): 1.0037, norm:1.1623, tok/sec: 99960.16, flops:104.91, batch-reuse:1
@ 655 train 6.2453 , allloss: 6.2489, dt: 1287.94ms, fracRes: 0.0118, norm(attn): 0.0791, norm(output): 0.1709, norm(x): 0.1537, norm(y): 1.0037, norm:1.4546, tok/sec: 101768.71, flops:106.81, batch-reuse:1
@ 656 train 6.1642 , allloss: 6.1677, dt: 1315.75ms, fracRes: 0.0120, norm(attn): 0.0806, norm(output): 0.1709, norm(x): 0.1535, norm(y): 1.0037, norm:1.6891, tok/sec: 99617.37, flops:104.55, batch-reuse:1
@ 657 train 6.1884 , allloss: 6.1918, dt: 1343.39ms, fracRes: 0.0118, norm(attn): 0.0771, norm(output): 0.1699, norm(x): 0.1532, norm(y): 1.0037, norm:1.1207, tok/sec: 97568.18, flops:102.40, batch-reuse:1
@ 658 train 6.2898 , allloss: 6.2925, dt: 1288.84ms, fracRes: 0.0112, norm(attn): 0.0801, norm(output): 0.1709, norm(x): 0.1542, norm(y): 1.0037, norm:1.7330, tok/sec: 101697.98, flops:106.73, batch-reuse:1
@ 659 train 6.2573 , allloss: 6.2598, dt: 1302.21ms, fracRes: 0.0121, norm(attn): 0.0811, norm(output): 0.1709, norm(x): 0.1541, norm(y): 1.0038, norm:1.2942, tok/sec: 100653.52, flops:105.64, batch-reuse:1
@ 660 train 6.2763 , allloss: 6.2793, dt: 1284.53ms, fracRes: 0.0135, norm(attn): 0.0835, norm(output): 0.1709, norm(x): 0.1538, norm(y): 1.0038, norm:1.4480, tok/sec: 102039.11, flops:107.09, batch-reuse:1
@ 661 train 6.2281 , allloss: 6.2315, dt: 1302.42ms, fracRes: 0.0129, norm(attn): 0.0825, norm(output): 0.1709, norm(x): 0.1539, norm(y): 1.0038, norm:1.2052, tok/sec: 100637.60, flops:105.62, batch-reuse:1
@ 662 train 6.2826 , allloss: 6.2868, dt: 1318.33ms, fracRes: 0.0125, norm(attn): 0.0786, norm(output): 0.1709, norm(x): 0.1539, norm(y): 1.0038, norm:1.2122, tok/sec: 99422.41, flops:104.35, batch-reuse:1
@ 663 train 6.2489 , allloss: 6.2520, dt: 1315.30ms, fracRes: 0.0117, norm(attn): 0.0825, norm(output): 0.1709, norm(x): 0.1545, norm(y): 1.0037, norm:1.4118, tok/sec: 99651.48, flops:104.59, batch-reuse:1
@ 664 train 6.1928 , allloss: 6.1956, dt: 1290.77ms, fracRes: 0.0135, norm(attn): 0.0791, norm(output): 0.1709, norm(x): 0.1538, norm(y): 1.0038, norm:1.5060, tok/sec: 101545.81, flops:106.57, batch-reuse:1
@ 665 train 6.2347 , allloss: 6.2373, dt: 1312.89ms, fracRes: 0.0157, norm(attn): 0.0786, norm(output): 0.1709, norm(x): 0.1537, norm(y): 1.0038, norm:1.9816, tok/sec: 99834.71, flops:104.78, batch-reuse:1
@ 666 train 6.0359 , allloss: 6.0399, dt: 1328.27ms, fracRes: 0.0163, norm(attn): 0.0820, norm(output): 0.1709, norm(x): 0.1543, norm(y): 1.0038, norm:1.8205, tok/sec: 98678.45, flops:103.56, batch-reuse:1
@ 667 train 6.0021 , allloss: 6.0058, dt: 1307.44ms, fracRes: 0.0140, norm(attn): 0.0806, norm(output): 0.1719, norm(x): 0.1549, norm(y): 1.0038, norm:1.2974, tok/sec: 100250.67, flops:105.21, batch-reuse:1
@ 668 train 6.2572 , allloss: 6.2602, dt: 1320.18ms, fracRes: 0.0130, norm(attn): 0.0811, norm(output): 0.1709, norm(x): 0.1550, norm(y): 1.0038, norm:1.7134, tok/sec: 99283.74, flops:104.20, batch-reuse:1
@ 669 train 6.1918 , allloss: 6.1952, dt: 1345.22ms, fracRes: 0.0126, norm(attn): 0.0801, norm(output): 0.1709, norm(x): 0.1554, norm(y): 1.0038, norm:1.1718, tok/sec: 97435.70, flops:102.26, batch-reuse:1
@ 670 train 6.2910 , allloss: 6.2950, dt: 1310.41ms, fracRes: 0.0136, norm(attn): 0.0806, norm(output): 0.1709, norm(x): 0.1550, norm(y): 1.0038, norm:1.5379, tok/sec: 100023.55, flops:104.98, batch-reuse:1
@ 671 train 6.1806 , allloss: 6.1846, dt: 1301.34ms, fracRes: 0.0180, norm(attn): 0.0786, norm(output): 0.1709, norm(x): 0.1545, norm(y): 1.0039, norm:1.8799, tok/sec: 100720.62, flops:105.71, batch-reuse:1
@ 672 train 6.2131 , allloss: 6.2151, dt: 1281.60ms, fracRes: 0.0131, norm(attn): 0.0820, norm(output): 0.1709, norm(x): 0.1553, norm(y): 1.0039, norm:1.6577, tok/sec: 102272.18, flops:107.34, batch-reuse:1
@ 673 train 6.2585 , allloss: 6.2626, dt: 1330.35ms, fracRes: 0.0103, norm(attn): 0.0840, norm(output): 0.1719, norm(x): 0.1559, norm(y): 1.0038, norm:2.1219, tok/sec: 98524.26, flops:103.40, batch-reuse:1
@ 674 train 6.2334 , allloss: 6.2360, dt: 1347.90ms, fracRes: 0.0098, norm(attn): 0.0835, norm(output): 0.1719, norm(x): 0.1561, norm(y): 1.0038, norm:1.1217, tok/sec: 97241.76, flops:102.06, batch-reuse:1
@ 675 train 6.1215 , allloss: 6.1264, dt: 1303.32ms, fracRes: 0.0097, norm(attn): 0.0806, norm(output): 0.1709, norm(x): 0.1563, norm(y): 1.0038, norm:1.7691, tok/sec: 100567.93, flops:105.55, batch-reuse:1
@ 676 train 6.1869 , allloss: 6.1915, dt: 1318.93ms, fracRes: 0.0098, norm(attn): 0.0786, norm(output): 0.1719, norm(x): 0.1564, norm(y): 1.0038, norm:1.4384, tok/sec: 99377.35, flops:104.30, batch-reuse:1
@ 677 train 6.3445 , allloss: 6.3487, dt: 1336.23ms, fracRes: 0.0101, norm(attn): 0.0845, norm(output): 0.1729, norm(x): 0.1570, norm(y): 1.0038, norm:2.2632, tok/sec: 98090.67, flops:102.95, batch-reuse:1
@ 678 train 6.1601 , allloss: 6.1650, dt: 1327.29ms, fracRes: 0.0097, norm(attn): 0.0806, norm(output): 0.1719, norm(x): 0.1569, norm(y): 1.0038, norm:1.5863, tok/sec: 98751.96, flops:103.64, batch-reuse:1
@ 679 train 6.2232 , allloss: 6.2291, dt: 1321.31ms, fracRes: 0.0097, norm(attn): 0.0825, norm(output): 0.1719, norm(x): 0.1571, norm(y): 1.0038, norm:1.9623, tok/sec: 99198.81, flops:104.11, batch-reuse:1
@ 680 train 6.1905 , allloss: 6.1961, dt: 1338.55ms, fracRes: 0.0105, norm(attn): 0.0781, norm(output): 0.1719, norm(x): 0.1571, norm(y): 1.0038, norm:1.4494, tok/sec: 97921.21, flops:102.77, batch-reuse:1
@ 681 train 6.2086 , allloss: 6.2112, dt: 1324.65ms, fracRes: 0.0109, norm(attn): 0.0801, norm(output): 0.1719, norm(x): 0.1573, norm(y): 1.0038, norm:1.4375, tok/sec: 98948.22, flops:103.85, batch-reuse:1
@ 682 train 6.2201 , allloss: 6.2225, dt: 1341.14ms, fracRes: 0.0116, norm(attn): 0.0811, norm(output): 0.1719, norm(x): 0.1573, norm(y): 1.0038, norm:1.3110, tok/sec: 97731.55, flops:102.57, batch-reuse:1
@ 683 train 6.1721 , allloss: 6.1757, dt: 1340.59ms, fracRes: 0.0126, norm(attn): 0.0825, norm(output): 0.1729, norm(x): 0.1571, norm(y): 1.0038, norm:1.2764, tok/sec: 97771.56, flops:102.61, batch-reuse:1
@ 684 train 6.1429 , allloss: 6.1465, dt: 1330.91ms, fracRes: 0.0125, norm(attn): 0.0830, norm(output): 0.1719, norm(x): 0.1571, norm(y): 1.0038, norm:1.1995, tok/sec: 98482.66, flops:103.36, batch-reuse:1
@ 685 train 6.2205 , allloss: 6.2238, dt: 1305.23ms, fracRes: 0.0147, norm(attn): 0.0835, norm(output): 0.1719, norm(x): 0.1570, norm(y): 1.0039, norm:1.1467, tok/sec: 100420.97, flops:105.39, batch-reuse:1
@ 686 train 6.2986 , allloss: 6.3041, dt: 1295.35ms, fracRes: 0.0168, norm(attn): 0.0864, norm(output): 0.1719, norm(x): 0.1566, norm(y): 1.0039, norm:1.1105, tok/sec: 101186.38, flops:106.20, batch-reuse:1
@ 687 train 6.2111 , allloss: 6.2147, dt: 1292.46ms, fracRes: 0.0173, norm(attn): 0.0830, norm(output): 0.1719, norm(x): 0.1565, norm(y): 1.0039, norm:1.3058, tok/sec: 101412.96, flops:106.43, batch-reuse:1
@ 688 train 6.2347 , allloss: 6.2375, dt: 1310.92ms, fracRes: 0.0209, norm(attn): 0.0840, norm(output): 0.1719, norm(x): 0.1557, norm(y): 1.0039, norm:1.5269, tok/sec: 99984.58, flops:104.94, batch-reuse:1
@ 689 train 6.2023 , allloss: 6.2050, dt: 1325.94ms, fracRes: 0.0155, norm(attn): 0.0840, norm(output): 0.1719, norm(x): 0.1569, norm(y): 1.0039, norm:1.4261, tok/sec: 98852.11, flops:103.75, batch-reuse:1
@ 690 train 6.1722 , allloss: 6.1745, dt: 1318.17ms, fracRes: 0.0135, norm(attn): 0.0869, norm(output): 0.1719, norm(x): 0.1576, norm(y): 1.0039, norm:1.3718, tok/sec: 99434.53, flops:104.36, batch-reuse:1
@ 691 train 6.1748 , allloss: 6.1781, dt: 1350.63ms, fracRes: 0.0133, norm(attn): 0.0864, norm(output): 0.1729, norm(x): 0.1581, norm(y): 1.0039, norm:1.2474, tok/sec: 97045.06, flops:101.85, batch-reuse:1
@ 692 train 6.1536 , allloss: 6.1576, dt: 1314.37ms, fracRes: 0.0125, norm(attn): 0.0869, norm(output): 0.1729, norm(x): 0.1583, norm(y): 1.0039, norm:1.4237, tok/sec: 99722.51, flops:104.66, batch-reuse:1
@ 693 train 6.1923 , allloss: 6.1961, dt: 1318.61ms, fracRes: 0.0123, norm(attn): 0.0874, norm(output): 0.1729, norm(x): 0.1581, norm(y): 1.0039, norm:1.1676, tok/sec: 99401.95, flops:104.32, batch-reuse:1
@ 694 train 6.0953 , allloss: 6.0985, dt: 1342.93ms, fracRes: 0.0131, norm(attn): 0.0884, norm(output): 0.1729, norm(x): 0.1580, norm(y): 1.0039, norm:1.3784, tok/sec: 97601.72, flops:102.43, batch-reuse:1
@ 695 train 6.1782 , allloss: 6.1814, dt: 1310.23ms, fracRes: 0.0141, norm(attn): 0.0879, norm(output): 0.1729, norm(x): 0.1579, norm(y): 1.0040, norm:1.3289, tok/sec: 100037.32, flops:104.99, batch-reuse:1
@ 696 train 6.0483 , allloss: 6.0525, dt: 1335.60ms, fracRes: 0.0144, norm(attn): 0.0864, norm(output): 0.1729, norm(x): 0.1581, norm(y): 1.0040, norm:1.3272, tok/sec: 98136.86, flops:103.00, batch-reuse:1
@ 697 train 6.0736 , allloss: 6.0781, dt: 1297.45ms, fracRes: 0.0148, norm(attn): 0.0898, norm(output): 0.1729, norm(x): 0.1580, norm(y): 1.0039, norm:1.2087, tok/sec: 101022.58, flops:106.03, batch-reuse:1
@ 698 train 6.1926 , allloss: 6.1981, dt: 1302.82ms, fracRes: 0.0151, norm(attn): 0.0908, norm(output): 0.1729, norm(x): 0.1579, norm(y): 1.0040, norm:1.9606, tok/sec: 100606.08, flops:105.59, batch-reuse:1
@ 699 train 6.1929 , allloss: 6.1975, dt: 1322.12ms, fracRes: 0.0177, norm(attn): 0.0903, norm(output): 0.1729, norm(x): 0.1578, norm(y): 1.0040, norm:1.9992, tok/sec: 99137.88, flops:104.05, batch-reuse:1
@ 700 train 6.1487 , allloss: 6.1517, dt: 1296.18ms, fracRes: 0.0176, norm(attn): 0.0845, norm(output): 0.1729, norm(x): 0.1580, norm(y): 1.0040, norm:1.4324, tok/sec: 101121.59, flops:106.13, batch-reuse:1
@ 701 train 6.2281 , allloss: 6.2324, dt: 1288.93ms, fracRes: 0.0142, norm(attn): 0.0908, norm(output): 0.1738, norm(x): 0.1587, norm(y): 1.0039, norm:1.4448, tok/sec: 101690.23, flops:106.73, batch-reuse:1
@ 702 train 6.2308 , allloss: 6.2366, dt: 1302.28ms, fracRes: 0.0129, norm(attn): 0.0977, norm(output): 0.1738, norm(x): 0.1591, norm(y): 1.0039, norm:1.8986, tok/sec: 100648.32, flops:105.63, batch-reuse:1
@ 703 train 6.1764 , allloss: 6.1791, dt: 1318.42ms, fracRes: 0.0162, norm(attn): 0.0898, norm(output): 0.1729, norm(x): 0.1587, norm(y): 1.0039, norm:1.6275, tok/sec: 99415.95, flops:104.34, batch-reuse:1
@ 704 train 6.0921 , allloss: 6.0948, dt: 1300.66ms, fracRes: 0.0172, norm(attn): 0.0850, norm(output): 0.1729, norm(x): 0.1581, norm(y): 1.0040, norm:1.1985, tok/sec: 100773.57, flops:105.76, batch-reuse:1
@ 705 train 6.1519 , allloss: 6.1556, dt: 1299.88ms, fracRes: 0.0215, norm(attn): 0.0845, norm(output): 0.1729, norm(x): 0.1573, norm(y): 1.0040, norm:1.6018, tok/sec: 100833.79, flops:105.83, batch-reuse:1
@ 706 train 6.1324 , allloss: 6.1351, dt: 1313.38ms, fracRes: 0.0152, norm(attn): 0.0884, norm(output): 0.1729, norm(x): 0.1592, norm(y): 1.0040, norm:1.4999, tok/sec: 99797.51, flops:104.74, batch-reuse:1
@ 707 train 6.1498 , allloss: 6.1515, dt: 1317.39ms, fracRes: 0.0168, norm(attn): 0.0894, norm(output): 0.1729, norm(x): 0.1591, norm(y): 1.0040, norm:1.5290, tok/sec: 99493.41, flops:104.42, batch-reuse:1
@ 708 train 6.1508 , allloss: 6.1531, dt: 1341.98ms, fracRes: 0.0169, norm(attn): 0.0879, norm(output): 0.1738, norm(x): 0.1591, norm(y): 1.0040, norm:1.4276, tok/sec: 97670.76, flops:102.51, batch-reuse:1
@ 709 train 6.1391 , allloss: 6.1414, dt: 1322.29ms, fracRes: 0.0182, norm(attn): 0.0864, norm(output): 0.1738, norm(x): 0.1591, norm(y): 1.0040, norm:1.3887, tok/sec: 99124.70, flops:104.03, batch-reuse:1
@ 710 train 6.2138 , allloss: 6.2170, dt: 1349.52ms, fracRes: 0.0166, norm(attn): 0.0894, norm(output): 0.1748, norm(x): 0.1602, norm(y): 1.0040, norm:1.3911, tok/sec: 97124.82, flops:101.93, batch-reuse:1
@ 711 train 6.2042 , allloss: 6.2075, dt: 1304.97ms, fracRes: 0.0187, norm(attn): 0.0889, norm(output): 0.1738, norm(x): 0.1598, norm(y): 1.0040, norm:1.5763, tok/sec: 100440.62, flops:105.41, batch-reuse:1
@ 712 train 6.0958 , allloss: 6.0984, dt: 1291.52ms, fracRes: 0.0203, norm(attn): 0.0918, norm(output): 0.1729, norm(x): 0.1592, norm(y): 1.0040, norm:1.1195, tok/sec: 101486.91, flops:106.51, batch-reuse:1
@ 713 train 6.1657 , allloss: 6.1677, dt: 1317.52ms, fracRes: 0.0198, norm(attn): 0.0928, norm(output): 0.1738, norm(x): 0.1600, norm(y): 1.0040, norm:1.3235, tok/sec: 99483.67, flops:104.41, batch-reuse:1
@ 714 train 6.0472 , allloss: 6.0491, dt: 1336.22ms, fracRes: 0.0238, norm(attn): 0.0879, norm(output): 0.1738, norm(x): 0.1595, norm(y): 1.0040, norm:1.1615, tok/sec: 98091.37, flops:102.95, batch-reuse:1
@ 715 train 6.0858 , allloss: 6.0882, dt: 1292.39ms, fracRes: 0.0179, norm(attn): 0.0923, norm(output): 0.1748, norm(x): 0.1604, norm(y): 1.0040, norm:1.0983, tok/sec: 101418.50, flops:106.44, batch-reuse:1
@ 716 train 6.1211 , allloss: 6.1227, dt: 1308.46ms, fracRes: 0.0202, norm(attn): 0.0908, norm(output): 0.1758, norm(x): 0.1602, norm(y): 1.0041, norm:1.4792, tok/sec: 100173.01, flops:105.13, batch-reuse:1
@ 717 train 5.9841 , allloss: 5.9865, dt: 1311.83ms, fracRes: 0.0186, norm(attn): 0.0947, norm(output): 0.1758, norm(x): 0.1608, norm(y): 1.0040, norm:2.0051, tok/sec: 99915.07, flops:104.86, batch-reuse:1
@ 718 train 6.1439 , allloss: 6.1463, dt: 1338.92ms, fracRes: 0.0189, norm(attn): 0.0928, norm(output): 0.1758, norm(x): 0.1604, norm(y): 1.0040, norm:1.3396, tok/sec: 97893.66, flops:102.74, batch-reuse:1
@ 719 train 6.0982 , allloss: 6.1007, dt: 1315.52ms, fracRes: 0.0213, norm(attn): 0.0918, norm(output): 0.1758, norm(x): 0.1604, norm(y): 1.0041, norm:1.7616, tok/sec: 99635.00, flops:104.57, batch-reuse:1
@ 720 train 6.0761 , allloss: 6.0786, dt: 1305.56ms, fracRes: 0.0209, norm(attn): 0.0894, norm(output): 0.1768, norm(x): 0.1607, norm(y): 1.0041, norm:1.7663, tok/sec: 100395.32, flops:105.37, batch-reuse:1
@ 721 train 6.0149 , allloss: 6.0214, dt: 1308.73ms, fracRes: 0.0155, norm(attn): 0.0938, norm(output): 0.1768, norm(x): 0.1613, norm(y): 1.0040, norm:1.1030, tok/sec: 100151.90, flops:105.11, batch-reuse:1
@ 722 train 6.0962 , allloss: 6.0995, dt: 1303.63ms, fracRes: 0.0206, norm(attn): 0.0894, norm(output): 0.1758, norm(x): 0.1599, norm(y): 1.0041, norm:1.3689, tok/sec: 100543.86, flops:105.52, batch-reuse:1
@ 723 train 6.1385 , allloss: 6.1404, dt: 1317.45ms, fracRes: 0.0223, norm(attn): 0.0913, norm(output): 0.1758, norm(x): 0.1604, norm(y): 1.0041, norm:1.2435, tok/sec: 99489.22, flops:104.42, batch-reuse:1
@ 724 train 6.1189 , allloss: 6.1207, dt: 1338.38ms, fracRes: 0.0184, norm(attn): 0.0938, norm(output): 0.1768, norm(x): 0.1613, norm(y): 1.0040, norm:1.2972, tok/sec: 97933.51, flops:102.78, batch-reuse:1
@ 725 train 6.1004 , allloss: 6.1028, dt: 1340.62ms, fracRes: 0.0184, norm(attn): 0.0952, norm(output): 0.1768, norm(x): 0.1609, norm(y): 1.0041, norm:1.5248, tok/sec: 97769.41, flops:102.61, batch-reuse:1
@ 726 train 6.1226 , allloss: 6.1261, dt: 1327.30ms, fracRes: 0.0191, norm(attn): 0.0967, norm(output): 0.1777, norm(x): 0.1608, norm(y): 1.0041, norm:1.9096, tok/sec: 98750.59, flops:103.64, batch-reuse:1
@ 727 train 6.1178 , allloss: 6.1201, dt: 1315.60ms, fracRes: 0.0203, norm(attn): 0.0947, norm(output): 0.1768, norm(x): 0.1609, norm(y): 1.0041, norm:1.6792, tok/sec: 99628.95, flops:104.56, batch-reuse:1
@ 728 train 6.1388 , allloss: 6.1410, dt: 1339.23ms, fracRes: 0.0165, norm(attn): 0.0957, norm(output): 0.1768, norm(x): 0.1619, norm(y): 1.0041, norm:1.5264, tok/sec: 97871.07, flops:102.72, batch-reuse:1
@ 729 train 6.0729 , allloss: 6.0759, dt: 1343.37ms, fracRes: 0.0171, norm(attn): 0.0962, norm(output): 0.1768, norm(x): 0.1621, norm(y): 1.0041, norm:1.3065, tok/sec: 97569.67, flops:102.40, batch-reuse:1
@ 730 train 6.0777 , allloss: 6.0831, dt: 1337.69ms, fracRes: 0.0166, norm(attn): 0.0981, norm(output): 0.1768, norm(x): 0.1623, norm(y): 1.0041, norm:1.2567, tok/sec: 97983.57, flops:102.84, batch-reuse:1
@ 731 train 6.1283 , allloss: 6.1302, dt: 1290.00ms, fracRes: 0.0213, norm(attn): 0.0903, norm(output): 0.1768, norm(x): 0.1620, norm(y): 1.0042, norm:1.4947, tok/sec: 101606.04, flops:106.64, batch-reuse:1
@ 732 train 6.0564 , allloss: 6.0579, dt: 1319.20ms, fracRes: 0.0193, norm(attn): 0.0928, norm(output): 0.1768, norm(x): 0.1625, norm(y): 1.0041, norm:1.4316, tok/sec: 99356.88, flops:104.28, batch-reuse:1
@ 733 train 6.1012 , allloss: 6.1032, dt: 1340.93ms, fracRes: 0.0173, norm(attn): 0.0977, norm(output): 0.1777, norm(x): 0.1625, norm(y): 1.0041, norm:1.2862, tok/sec: 97747.26, flops:102.59, batch-reuse:1
@ 734 train 6.1177 , allloss: 6.1205, dt: 1316.19ms, fracRes: 0.0163, norm(attn): 0.1001, norm(output): 0.1768, norm(x): 0.1627, norm(y): 1.0041, norm:1.5186, tok/sec: 99584.73, flops:104.52, batch-reuse:1
@ 735 train 6.1041 , allloss: 6.1067, dt: 1305.19ms, fracRes: 0.0181, norm(attn): 0.0986, norm(output): 0.1768, norm(x): 0.1624, norm(y): 1.0041, norm:1.2224, tok/sec: 100423.54, flops:105.40, batch-reuse:1
@ 736 train 6.1650 , allloss: 6.1671, dt: 1324.87ms, fracRes: 0.0190, norm(attn): 0.0972, norm(output): 0.1777, norm(x): 0.1624, norm(y): 1.0041, norm:1.5374, tok/sec: 98931.73, flops:103.83, batch-reuse:1
@ 737 train 6.0860 , allloss: 6.0884, dt: 1297.80ms, fracRes: 0.0232, norm(attn): 0.0962, norm(output): 0.1777, norm(x): 0.1623, norm(y): 1.0041, norm:1.5719, tok/sec: 100995.58, flops:106.00, batch-reuse:1
@ 738 train 6.1262 , allloss: 6.1333, dt: 1292.43ms, fracRes: 0.0244, norm(attn): 0.0947, norm(output): 0.1768, norm(x): 0.1624, norm(y): 1.0042, norm:1.2524, tok/sec: 101415.11, flops:106.44, batch-reuse:1
@ 739 train 6.1185 , allloss: 6.1206, dt: 1316.98ms, fracRes: 0.0158, norm(attn): 0.0991, norm(output): 0.1816, norm(x): 0.1637, norm(y): 1.0041, norm:1.6259, tok/sec: 99524.34, flops:104.45, batch-reuse:1
@ 740 train 6.0862 , allloss: 6.0930, dt: 1327.83ms, fracRes: 0.0130, norm(attn): 0.1055, norm(output): 0.1787, norm(x): 0.1644, norm(y): 1.0040, norm:1.5012, tok/sec: 98711.28, flops:103.60, batch-reuse:1
@ 741 train 6.1842 , allloss: 6.1862, dt: 1293.93ms, fracRes: 0.0148, norm(attn): 0.0938, norm(output): 0.1797, norm(x): 0.1637, norm(y): 1.0042, norm:1.4282, tok/sec: 101297.26, flops:106.31, batch-reuse:1
@ 742 train 6.2456 , allloss: 6.2484, dt: 1320.52ms, fracRes: 0.0158, norm(attn): 0.0952, norm(output): 0.1797, norm(x): 0.1638, norm(y): 1.0042, norm:1.5260, tok/sec: 99257.71, flops:104.17, batch-reuse:1
@ 743 train 6.2073 , allloss: 6.2094, dt: 1347.10ms, fracRes: 0.0162, norm(attn): 0.0957, norm(output): 0.1816, norm(x): 0.1642, norm(y): 1.0042, norm:1.9351, tok/sec: 97299.62, flops:102.12, batch-reuse:1
@ 744 train 6.2016 , allloss: 6.2039, dt: 1347.56ms, fracRes: 0.0160, norm(attn): 0.0957, norm(output): 0.1816, norm(x): 0.1640, norm(y): 1.0042, norm:1.6945, tok/sec: 97266.24, flops:102.08, batch-reuse:1
@ 745 train 6.1764 , allloss: 6.1782, dt: 1294.42ms, fracRes: 0.0190, norm(attn): 0.0967, norm(output): 0.1777, norm(x): 0.1634, norm(y): 1.0042, norm:1.1268, tok/sec: 101259.55, flops:106.27, batch-reuse:1
@ 746 train 6.2231 , allloss: 6.2246, dt: 1342.19ms, fracRes: 0.0199, norm(attn): 0.0967, norm(output): 0.1787, norm(x): 0.1637, norm(y): 1.0042, norm:1.6893, tok/sec: 97655.51, flops:102.49, batch-reuse:1
@ 747 train 6.1888 , allloss: 6.1900, dt: 1302.10ms, fracRes: 0.0230, norm(attn): 0.0981, norm(output): 0.1787, norm(x): 0.1630, norm(y): 1.0042, norm:1.2238, tok/sec: 100661.74, flops:105.65, batch-reuse:1
@ 748 train 6.2407 , allloss: 6.2424, dt: 1273.35ms, fracRes: 0.0260, norm(attn): 0.0977, norm(output): 0.1787, norm(x): 0.1626, norm(y): 1.0042, norm:2.1352, tok/sec: 102934.80, flops:108.03, batch-reuse:1
@ 749 train 6.3236 , allloss: 6.3259, dt: 1314.66ms, fracRes: 0.0163, norm(attn): 0.1025, norm(output): 0.1816, norm(x): 0.1649, norm(y): 1.0041, norm:1.4156, tok/sec: 99700.50, flops:104.64, batch-reuse:1
@ 750 train 6.2917 , allloss: 6.2928, dt: 1338.17ms, fracRes: 0.0176, norm(attn): 0.0957, norm(output): 0.1816, norm(x): 0.1648, norm(y): 1.0042, norm:1.8899, tok/sec: 97948.48, flops:102.80, batch-reuse:1
@ 751 train 6.2052 , allloss: 6.2068, dt: 1332.48ms, fracRes: 0.0171, norm(attn): 0.0967, norm(output): 0.1826, norm(x): 0.1658, norm(y): 1.0042, norm:1.5696, tok/sec: 98367.10, flops:103.24, batch-reuse:1
@ 752 train 6.1996 , allloss: 6.2017, dt: 1330.58ms, fracRes: 0.0164, norm(attn): 0.1021, norm(output): 0.1826, norm(x): 0.1660, norm(y): 1.0041, norm:1.8963, tok/sec: 98507.44, flops:103.39, batch-reuse:1
@ 753 train 6.2140 , allloss: 6.2167, dt: 1312.86ms, fracRes: 0.0147, norm(attn): 0.1035, norm(output): 0.1826, norm(x): 0.1659, norm(y): 1.0041, norm:1.5642, tok/sec: 99836.92, flops:104.78, batch-reuse:1
@ 754 train 6.1839 , allloss: 6.1871, dt: 1295.49ms, fracRes: 0.0150, norm(attn): 0.0991, norm(output): 0.1816, norm(x): 0.1660, norm(y): 1.0041, norm:1.6224, tok/sec: 101175.67, flops:106.19, batch-reuse:1
@ 755 train 6.2892 , allloss: 6.2920, dt: 1323.98ms, fracRes: 0.0147, norm(attn): 0.0972, norm(output): 0.1826, norm(x): 0.1657, norm(y): 1.0041, norm:1.2205, tok/sec: 98998.20, flops:103.90, batch-reuse:1
@ 756 train 6.1704 , allloss: 6.1724, dt: 1344.24ms, fracRes: 0.0176, norm(attn): 0.0928, norm(output): 0.1826, norm(x): 0.1655, norm(y): 1.0041, norm:1.4091, tok/sec: 97506.47, flops:102.33, batch-reuse:1
@ 757 train 6.2123 , allloss: 6.2163, dt: 1295.98ms, fracRes: 0.0183, norm(attn): 0.0933, norm(output): 0.1826, norm(x): 0.1659, norm(y): 1.0041, norm:1.5831, tok/sec: 101136.99, flops:106.15, batch-reuse:1
@ 758 train 6.1543 , allloss: 6.1575, dt: 1305.63ms, fracRes: 0.0219, norm(attn): 0.0972, norm(output): 0.1826, norm(x): 0.1652, norm(y): 1.0041, norm:1.8603, tok/sec: 100389.71, flops:105.36, batch-reuse:1
@ 759 train 6.2218 , allloss: 6.2247, dt: 1290.46ms, fracRes: 0.0175, norm(attn): 0.1025, norm(output): 0.1826, norm(x): 0.1663, norm(y): 1.0041, norm:1.3564, tok/sec: 101569.82, flops:106.60, batch-reuse:1
@ 760 train 6.2233 , allloss: 6.2257, dt: 1313.65ms, fracRes: 0.0150, norm(attn): 0.1079, norm(output): 0.1826, norm(x): 0.1670, norm(y): 1.0041, norm:1.4445, tok/sec: 99777.04, flops:104.72, batch-reuse:1
@ 761 train 6.2231 , allloss: 6.2270, dt: 1339.10ms, fracRes: 0.0173, norm(attn): 0.0991, norm(output): 0.1826, norm(x): 0.1661, norm(y): 1.0042, norm:1.4628, tok/sec: 97880.95, flops:102.73, batch-reuse:1
@ 762 train 6.1973 , allloss: 6.2028, dt: 1351.42ms, fracRes: 0.0132, norm(attn): 0.1011, norm(output): 0.1836, norm(x): 0.1672, norm(y): 1.0041, norm:1.2085, tok/sec: 96988.36, flops:101.79, batch-reuse:1
@ 763 train 6.2604 , allloss: 6.2643, dt: 1348.02ms, fracRes: 0.0136, norm(attn): 0.0981, norm(output): 0.1826, norm(x): 0.1667, norm(y): 1.0042, norm:1.8742, tok/sec: 97232.68, flops:102.05, batch-reuse:1
@ 764 train 6.2088 , allloss: 6.2154, dt: 1333.40ms, fracRes: 0.0126, norm(attn): 0.1001, norm(output): 0.1846, norm(x): 0.1673, norm(y): 1.0041, norm:1.2841, tok/sec: 98299.10, flops:103.17, batch-reuse:1
@ 765 train 6.2084 , allloss: 6.2120, dt: 1316.57ms, fracRes: 0.0122, norm(attn): 0.1025, norm(output): 0.1855, norm(x): 0.1685, norm(y): 1.0041, norm:1.4261, tok/sec: 99555.84, flops:104.49, batch-reuse:1
@ 766 train 6.1349 , allloss: 6.1373, dt: 1324.48ms, fracRes: 0.0142, norm(attn): 0.0957, norm(output): 0.1855, norm(x): 0.1682, norm(y): 1.0041, norm:2.0486, tok/sec: 98960.76, flops:103.86, batch-reuse:1
@ 767 train 6.2286 , allloss: 6.2307, dt: 1339.51ms, fracRes: 0.0155, norm(attn): 0.0947, norm(output): 0.1855, norm(x): 0.1676, norm(y): 1.0042, norm:1.4701, tok/sec: 97851.01, flops:102.70, batch-reuse:1
@ 768 train 6.2991 , allloss: 6.3010, dt: 1342.10ms, fracRes: 0.0169, norm(attn): 0.0967, norm(output): 0.1865, norm(x): 0.1677, norm(y): 1.0042, norm:1.0599, tok/sec: 97661.83, flops:102.50, batch-reuse:1
@ 769 train 6.1869 , allloss: 6.1881, dt: 1338.44ms, fracRes: 0.0157, norm(attn): 0.0967, norm(output): 0.1846, norm(x): 0.1681, norm(y): 1.0042, norm:2.4160, tok/sec: 97928.57, flops:102.78, batch-reuse:1
@ 770 train 6.1583 , allloss: 6.1609, dt: 1325.95ms, fracRes: 0.0139, norm(attn): 0.1055, norm(output): 0.1846, norm(x): 0.1691, norm(y): 1.0041, norm:1.6659, tok/sec: 98851.72, flops:103.75, batch-reuse:1
@ 771 train 6.1343 , allloss: 6.1390, dt: 1360.20ms, fracRes: 0.0141, norm(attn): 0.1084, norm(output): 0.1846, norm(x): 0.1690, norm(y): 1.0040, norm:1.3548, tok/sec: 96362.27, flops:101.13, batch-reuse:1
@ 772 train 6.1812 , allloss: 6.1839, dt: 1349.63ms, fracRes: 0.0169, norm(attn): 0.1016, norm(output): 0.1865, norm(x): 0.1683, norm(y): 1.0041, norm:1.4278, tok/sec: 97116.72, flops:101.93, batch-reuse:1
@ 773 train 6.2680 , allloss: 6.2703, dt: 1338.00ms, fracRes: 0.0220, norm(attn): 0.0991, norm(output): 0.1846, norm(x): 0.1675, norm(y): 1.0042, norm:2.1753, tok/sec: 97960.97, flops:102.81, batch-reuse:1
@ 774 train 6.1178 , allloss: 6.1276, dt: 1313.95ms, fracRes: 0.0176, norm(attn): 0.1035, norm(output): 0.1865, norm(x): 0.1693, norm(y): 1.0042, norm:1.6261, tok/sec: 99753.85, flops:104.69, batch-reuse:1
@ 775 train 6.2611 , allloss: 6.2653, dt: 1298.36ms, fracRes: 0.0142, norm(attn): 0.1021, norm(output): 0.1865, norm(x): 0.1694, norm(y): 1.0041, norm:1.4419, tok/sec: 100952.22, flops:105.95, batch-reuse:1
@ 776 train 6.0587 , allloss: 6.0609, dt: 1295.42ms, fracRes: 0.0141, norm(attn): 0.0972, norm(output): 0.1865, norm(x): 0.1696, norm(y): 1.0042, norm:1.3051, tok/sec: 101181.35, flops:106.19, batch-reuse:1
@ 777 train 6.1393 , allloss: 6.1416, dt: 1294.06ms, fracRes: 0.0127, norm(attn): 0.0996, norm(output): 0.1865, norm(x): 0.1698, norm(y): 1.0041, norm:1.5682, tok/sec: 101287.12, flops:106.30, batch-reuse:1
@ 778 train 6.1470 , allloss: 6.1482, dt: 1310.53ms, fracRes: 0.0140, norm(attn): 0.0977, norm(output): 0.1865, norm(x): 0.1696, norm(y): 1.0042, norm:1.5489, tok/sec: 100014.30, flops:104.97, batch-reuse:1
@ 779 train 6.1756 , allloss: 6.1771, dt: 1322.81ms, fracRes: 0.0151, norm(attn): 0.1006, norm(output): 0.1865, norm(x): 0.1696, norm(y): 1.0042, norm:1.1365, tok/sec: 99086.08, flops:103.99, batch-reuse:1
@ 780 train 6.1423 , allloss: 6.1443, dt: 1356.62ms, fracRes: 0.0167, norm(attn): 0.1040, norm(output): 0.1865, norm(x): 0.1697, norm(y): 1.0042, norm:1.2325, tok/sec: 96616.57, flops:101.40, batch-reuse:1
@ 781 train 6.1384 , allloss: 6.1402, dt: 1319.36ms, fracRes: 0.0176, norm(attn): 0.1025, norm(output): 0.1865, norm(x): 0.1696, norm(y): 1.0042, norm:1.3244, tok/sec: 99345.24, flops:104.26, batch-reuse:1
@ 782 train 6.1391 , allloss: 6.1419, dt: 1338.64ms, fracRes: 0.0269, norm(attn): 0.1030, norm(output): 0.1855, norm(x): 0.1680, norm(y): 1.0043, norm:1.5318, tok/sec: 97914.18, flops:102.76, batch-reuse:1
@ 783 train 6.0991 , allloss: 6.1018, dt: 1292.31ms, fracRes: 0.0185, norm(attn): 0.1055, norm(output): 0.1875, norm(x): 0.1700, norm(y): 1.0042, norm:1.0981, tok/sec: 101424.86, flops:106.45, batch-reuse:1
@ 784 train 6.1194 , allloss: 6.1208, dt: 1326.14ms, fracRes: 0.0184, norm(attn): 0.1016, norm(output): 0.1875, norm(x): 0.1702, norm(y): 1.0043, norm:1.5602, tok/sec: 98837.50, flops:103.73, batch-reuse:1
@ 785 train 6.1227 , allloss: 6.1241, dt: 1338.88ms, fracRes: 0.0173, norm(attn): 0.1006, norm(output): 0.1865, norm(x): 0.1704, norm(y): 1.0043, norm:1.7293, tok/sec: 97896.97, flops:102.74, batch-reuse:1
@ 786 train 6.0991 , allloss: 6.1034, dt: 1341.28ms, fracRes: 0.0131, norm(attn): 0.1113, norm(output): 0.1875, norm(x): 0.1717, norm(y): 1.0041, norm:1.7563, tok/sec: 97721.74, flops:102.56, batch-reuse:1
@ 787 train 6.1296 , allloss: 6.1335, dt: 1328.85ms, fracRes: 0.0130, norm(attn): 0.1035, norm(output): 0.1875, norm(x): 0.1709, norm(y): 1.0042, norm:1.3581, tok/sec: 98635.47, flops:103.52, batch-reuse:1
@ 788 train 6.1949 , allloss: 6.1964, dt: 1296.82ms, fracRes: 0.0132, norm(attn): 0.0986, norm(output): 0.1875, norm(x): 0.1714, norm(y): 1.0042, norm:1.5307, tok/sec: 101071.47, flops:106.08, batch-reuse:1
@ 789 train 6.0873 , allloss: 6.0892, dt: 1300.35ms, fracRes: 0.0148, norm(attn): 0.0962, norm(output): 0.1865, norm(x): 0.1712, norm(y): 1.0043, norm:1.3331, tok/sec: 100797.76, flops:105.79, batch-reuse:1
@ 790 train 6.0828 , allloss: 6.0851, dt: 1338.86ms, fracRes: 0.0158, norm(attn): 0.1016, norm(output): 0.1875, norm(x): 0.1707, norm(y): 1.0043, norm:1.4177, tok/sec: 97897.95, flops:102.75, batch-reuse:1
@ 791 train 6.2231 , allloss: 6.2265, dt: 1341.30ms, fracRes: 0.0166, norm(attn): 0.1118, norm(output): 0.1875, norm(x): 0.1711, norm(y): 1.0042, norm:1.2642, tok/sec: 97720.24, flops:102.56, batch-reuse:1
@ 792 train 6.1734 , allloss: 6.1748, dt: 1312.99ms, fracRes: 0.0205, norm(attn): 0.1050, norm(output): 0.1875, norm(x): 0.1709, norm(y): 1.0043, norm:1.5980, tok/sec: 99826.75, flops:104.77, batch-reuse:1
@ 793 train 6.1466 , allloss: 6.1486, dt: 1316.07ms, fracRes: 0.0228, norm(attn): 0.1074, norm(output): 0.1875, norm(x): 0.1703, norm(y): 1.0043, norm:1.1729, tok/sec: 99593.19, flops:104.52, batch-reuse:1
@ 794 train 6.2345 , allloss: 6.2367, dt: 1331.91ms, fracRes: 0.0177, norm(attn): 0.1143, norm(output): 0.1875, norm(x): 0.1717, norm(y): 1.0042, norm:1.6428, tok/sec: 98408.87, flops:103.28, batch-reuse:1
@ 795 train 6.0801 , allloss: 6.0834, dt: 1338.29ms, fracRes: 0.0141, norm(attn): 0.1113, norm(output): 0.1875, norm(x): 0.1724, norm(y): 1.0042, norm:2.0200, tok/sec: 97939.95, flops:102.79, batch-reuse:1
@ 796 train 6.0144 , allloss: 6.0160, dt: 1315.09ms, fracRes: 0.0147, norm(attn): 0.1021, norm(output): 0.1875, norm(x): 0.1720, norm(y): 1.0043, norm:1.3462, tok/sec: 99668.00, flops:104.60, batch-reuse:1
@ 797 train 6.1516 , allloss: 6.1529, dt: 1291.30ms, fracRes: 0.0142, norm(attn): 0.0986, norm(output): 0.1875, norm(x): 0.1723, norm(y): 1.0043, norm:1.4899, tok/sec: 101504.00, flops:106.53, batch-reuse:1
@ 798 train 6.1486 , allloss: 6.1513, dt: 1279.24ms, fracRes: 0.0139, norm(attn): 0.0986, norm(output): 0.1875, norm(x): 0.1727, norm(y): 1.0043, norm:1.3903, tok/sec: 102460.52, flops:107.53, batch-reuse:1
@ 799 train 6.1565 , allloss: 6.1589, dt: 1287.57ms, fracRes: 0.0143, norm(attn): 0.1035, norm(output): 0.1875, norm(x): 0.1730, norm(y): 1.0042, norm:1.5978, tok/sec: 101797.72, flops:106.84, batch-reuse:1
@ 800 train 6.0833 , allloss: 6.0858, dt: 1309.31ms, fracRes: 0.0180, norm(attn): 0.1055, norm(output): 0.1885, norm(x): 0.1725, norm(y): 1.0043, norm:1.5871, tok/sec: 100107.40, flops:105.06, batch-reuse:1
@ 801 train 6.0908 , allloss: 6.1001, dt: 1335.34ms, fracRes: 0.0233, norm(attn): 0.1055, norm(output): 0.1875, norm(x): 0.1714, norm(y): 1.0043, norm:1.1120, tok/sec: 98156.55, flops:103.02, batch-reuse:1
@ 802 train 6.1336 , allloss: 6.1383, dt: 1308.16ms, fracRes: 0.0247, norm(attn): 0.1040, norm(output): 0.1875, norm(x): 0.1715, norm(y): 1.0043, norm:1.4682, tok/sec: 100195.47, flops:105.16, batch-reuse:1
@ 803 train 6.1748 , allloss: 6.1776, dt: 1293.28ms, fracRes: 0.0237, norm(attn): 0.1045, norm(output): 0.1875, norm(x): 0.1717, norm(y): 1.0043, norm:1.6070, tok/sec: 101348.85, flops:106.37, batch-reuse:1
@ 804 train 6.0837 , allloss: 6.0861, dt: 1300.24ms, fracRes: 0.0242, norm(attn): 0.1045, norm(output): 0.1885, norm(x): 0.1719, norm(y): 1.0043, norm:1.5457, tok/sec: 100805.72, flops:105.80, batch-reuse:1
@ 805 train 6.1665 , allloss: 6.1680, dt: 1290.88ms, fracRes: 0.0204, norm(attn): 0.1074, norm(output): 0.1875, norm(x): 0.1723, norm(y): 1.0043, norm:1.5722, tok/sec: 101537.03, flops:106.57, batch-reuse:1
@ 806 train 6.0579 , allloss: 6.0595, dt: 1309.76ms, fracRes: 0.0194, norm(attn): 0.1104, norm(output): 0.1885, norm(x): 0.1727, norm(y): 1.0043, norm:1.7012, tok/sec: 100073.51, flops:105.03, batch-reuse:1
@ 807 train 6.0991 , allloss: 6.1003, dt: 1298.84ms, fracRes: 0.0214, norm(attn): 0.1084, norm(output): 0.1875, norm(x): 0.1729, norm(y): 1.0043, norm:1.3605, tok/sec: 100914.81, flops:105.91, batch-reuse:1
@ 808 train 6.0861 , allloss: 6.0873, dt: 1308.28ms, fracRes: 0.0233, norm(attn): 0.1055, norm(output): 0.1885, norm(x): 0.1728, norm(y): 1.0043, norm:1.1671, tok/sec: 100186.52, flops:105.15, batch-reuse:1
@ 809 train 6.0984 , allloss: 6.1001, dt: 1325.05ms, fracRes: 0.0195, norm(attn): 0.1074, norm(output): 0.1885, norm(x): 0.1734, norm(y): 1.0043, norm:1.5436, tok/sec: 98918.86, flops:103.82, batch-reuse:1
@ 810 train 6.1211 , allloss: 6.1236, dt: 1292.65ms, fracRes: 0.0199, norm(attn): 0.1094, norm(output): 0.1885, norm(x): 0.1732, norm(y): 1.0043, norm:1.0190, tok/sec: 101397.92, flops:106.42, batch-reuse:1
@ 811 train 6.1345 , allloss: 6.1369, dt: 1313.39ms, fracRes: 0.0242, norm(attn): 0.1113, norm(output): 0.1885, norm(x): 0.1724, norm(y): 1.0044, norm:1.8814, tok/sec: 99796.76, flops:104.74, batch-reuse:1
@ 812 train 5.9936 , allloss: 5.9971, dt: 1329.98ms, fracRes: 0.0259, norm(attn): 0.1099, norm(output): 0.1885, norm(x): 0.1722, norm(y): 1.0044, norm:1.6410, tok/sec: 98552.17, flops:103.43, batch-reuse:1
@ 813 train 6.1922 , allloss: 6.1944, dt: 1341.96ms, fracRes: 0.0216, norm(attn): 0.1113, norm(output): 0.1885, norm(x): 0.1730, norm(y): 1.0043, norm:1.3017, tok/sec: 97671.84, flops:102.51, batch-reuse:1
@ 814 train 6.1739 , allloss: 6.1766, dt: 1300.39ms, fracRes: 0.0232, norm(attn): 0.1089, norm(output): 0.1885, norm(x): 0.1730, norm(y): 1.0044, norm:1.7690, tok/sec: 100794.75, flops:105.79, batch-reuse:1
@ 815 train 6.0553 , allloss: 6.0571, dt: 1308.56ms, fracRes: 0.0211, norm(attn): 0.1094, norm(output): 0.1885, norm(x): 0.1741, norm(y): 1.0043, norm:1.8848, tok/sec: 100164.95, flops:105.12, batch-reuse:1
@ 816 train 6.1164 , allloss: 6.1187, dt: 1308.11ms, fracRes: 0.0280, norm(attn): 0.1060, norm(output): 0.1885, norm(x): 0.1723, norm(y): 1.0045, norm:1.9498, tok/sec: 100199.18, flops:105.16, batch-reuse:1
@ 817 train 6.0320 , allloss: 6.0341, dt: 1344.08ms, fracRes: 0.0249, norm(attn): 0.1074, norm(output): 0.1885, norm(x): 0.1732, norm(y): 1.0044, norm:1.6070, tok/sec: 97517.97, flops:102.35, batch-reuse:1
@ 818 train 6.0615 , allloss: 6.0630, dt: 1322.39ms, fracRes: 0.0206, norm(attn): 0.1104, norm(output): 0.1885, norm(x): 0.1743, norm(y): 1.0044, norm:1.4758, tok/sec: 99117.72, flops:104.03, batch-reuse:1
@ 819 train 6.1645 , allloss: 6.1668, dt: 1314.13ms, fracRes: 0.0231, norm(attn): 0.1099, norm(output): 0.1885, norm(x): 0.1733, norm(y): 1.0045, norm:1.8032, tok/sec: 99740.44, flops:104.68, batch-reuse:1
@ 820 train 6.2272 , allloss: 6.2289, dt: 1314.66ms, fracRes: 0.0228, norm(attn): 0.1108, norm(output): 0.1885, norm(x): 0.1736, norm(y): 1.0044, norm:1.7872, tok/sec: 99700.35, flops:104.64, batch-reuse:1
@ 821 train 6.1512 , allloss: 6.1546, dt: 1318.36ms, fracRes: 0.0223, norm(attn): 0.1123, norm(output): 0.1885, norm(x): 0.1743, norm(y): 1.0044, norm:1.7600, tok/sec: 99420.81, flops:104.34, batch-reuse:1
@ 822 train 6.1458 , allloss: 6.1491, dt: 1341.61ms, fracRes: 0.0189, norm(attn): 0.1143, norm(output): 0.1904, norm(x): 0.1753, norm(y): 1.0043, norm:1.6139, tok/sec: 97697.70, flops:102.54, batch-reuse:1
@ 823 train 6.0402 , allloss: 6.0444, dt: 1311.89ms, fracRes: 0.0186, norm(attn): 0.1108, norm(output): 0.1885, norm(x): 0.1749, norm(y): 1.0044, norm:1.6382, tok/sec: 99910.46, flops:104.86, batch-reuse:1
@ 824 train 6.1727 , allloss: 6.1852, dt: 1303.60ms, fracRes: 0.0200, norm(attn): 0.1104, norm(output): 0.1904, norm(x): 0.1746, norm(y): 1.0044, norm:1.6176, tok/sec: 100546.21, flops:105.53, batch-reuse:1
@ 825 train 6.0981 , allloss: 6.0989, dt: 1297.49ms, fracRes: 0.0239, norm(attn): 0.1064, norm(output): 0.1885, norm(x): 0.1742, norm(y): 1.0045, norm:1.5282, tok/sec: 101019.61, flops:106.02, batch-reuse:1
@ 826 train 6.0795 , allloss: 6.0809, dt: 1302.74ms, fracRes: 0.0216, norm(attn): 0.1118, norm(output): 0.1904, norm(x): 0.1754, norm(y): 1.0044, norm:1.6688, tok/sec: 100612.55, flops:105.59, batch-reuse:1
@ 827 train 6.1492 , allloss: 6.1509, dt: 1304.57ms, fracRes: 0.0235, norm(attn): 0.1128, norm(output): 0.1904, norm(x): 0.1752, norm(y): 1.0044, norm:1.7349, tok/sec: 100471.48, flops:105.45, batch-reuse:1
@ 828 train 6.0762 , allloss: 6.0791, dt: 1309.01ms, fracRes: 0.0245, norm(attn): 0.1113, norm(output): 0.1895, norm(x): 0.1750, norm(y): 1.0044, norm:1.5014, tok/sec: 100131.00, flops:105.09, batch-reuse:1
@ 829 train 6.1324 , allloss: 6.1382, dt: 1320.75ms, fracRes: 0.0291, norm(attn): 0.1094, norm(output): 0.1904, norm(x): 0.1740, norm(y): 1.0045, norm:2.3706, tok/sec: 99240.74, flops:104.16, batch-reuse:1
@ 830 train 6.1234 , allloss: 6.1265, dt: 1334.20ms, fracRes: 0.0239, norm(attn): 0.1055, norm(output): 0.1914, norm(x): 0.1754, norm(y): 1.0044, norm:1.6513, tok/sec: 98240.34, flops:103.11, batch-reuse:1
@ 831 train 6.1251 , allloss: 6.1269, dt: 1319.90ms, fracRes: 0.0195, norm(attn): 0.1104, norm(output): 0.1914, norm(x): 0.1768, norm(y): 1.0043, norm:1.1113, tok/sec: 99304.20, flops:104.22, batch-reuse:1
@ 832 train 6.1398 , allloss: 6.1412, dt: 1315.57ms, fracRes: 0.0199, norm(attn): 0.1074, norm(output): 0.1914, norm(x): 0.1768, norm(y): 1.0044, norm:1.5326, tok/sec: 99631.49, flops:104.57, batch-reuse:1
@ 833 train 6.0306 , allloss: 6.0316, dt: 1314.45ms, fracRes: 0.0202, norm(attn): 0.1099, norm(output): 0.1934, norm(x): 0.1771, norm(y): 1.0044, norm:1.8423, tok/sec: 99716.54, flops:104.65, batch-reuse:1
@ 834 train 6.0658 , allloss: 6.0668, dt: 1308.02ms, fracRes: 0.0217, norm(attn): 0.1104, norm(output): 0.1934, norm(x): 0.1770, norm(y): 1.0044, norm:1.7808, tok/sec: 100206.61, flops:105.17, batch-reuse:1
@ 835 train 5.9773 , allloss: 5.9781, dt: 1323.65ms, fracRes: 0.0249, norm(attn): 0.1050, norm(output): 0.1914, norm(x): 0.1760, norm(y): 1.0045, norm:1.2370, tok/sec: 99022.93, flops:103.93, batch-reuse:1
@ 836 train 6.0090 , allloss: 6.0103, dt: 1332.78ms, fracRes: 0.0223, norm(attn): 0.1099, norm(output): 0.1914, norm(x): 0.1760, norm(y): 1.0045, norm:1.4126, tok/sec: 98345.14, flops:103.22, batch-reuse:1
@ 837 train 6.0468 , allloss: 6.0493, dt: 1309.91ms, fracRes: 0.0204, norm(attn): 0.1172, norm(output): 0.1934, norm(x): 0.1770, norm(y): 1.0044, norm:1.9010, tok/sec: 100061.72, flops:105.02, batch-reuse:1
@ 838 train 6.0171 , allloss: 6.0199, dt: 1322.97ms, fracRes: 0.0211, norm(attn): 0.1104, norm(output): 0.1914, norm(x): 0.1770, norm(y): 1.0044, norm:1.3931, tok/sec: 99073.70, flops:103.98, batch-reuse:1
@ 839 train 5.8999 , allloss: 5.9019, dt: 1293.33ms, fracRes: 0.0263, norm(attn): 0.1055, norm(output): 0.1924, norm(x): 0.1762, norm(y): 1.0046, norm:1.7798, tok/sec: 101344.33, flops:106.36, batch-reuse:1
@ 840 train 6.0363 , allloss: 6.0380, dt: 1315.78ms, fracRes: 0.0238, norm(attn): 0.1104, norm(output): 0.1934, norm(x): 0.1771, norm(y): 1.0045, norm:2.2803, tok/sec: 99615.80, flops:104.55, batch-reuse:1
@ 841 train 5.9566 , allloss: 5.9586, dt: 1342.06ms, fracRes: 0.0239, norm(attn): 0.1143, norm(output): 0.1934, norm(x): 0.1771, norm(y): 1.0045, norm:1.4975, tok/sec: 97664.81, flops:102.50, batch-reuse:1
@ 842 train 6.0670 , allloss: 6.0680, dt: 1313.77ms, fracRes: 0.0293, norm(attn): 0.1089, norm(output): 0.1914, norm(x): 0.1755, norm(y): 1.0046, norm:1.5667, tok/sec: 99767.62, flops:104.71, batch-reuse:1
@ 843 train 6.0744 , allloss: 6.0758, dt: 1300.22ms, fracRes: 0.0226, norm(attn): 0.1104, norm(output): 0.1943, norm(x): 0.1773, norm(y): 1.0045, norm:1.4550, tok/sec: 100807.89, flops:105.80, batch-reuse:1
@ 844 train 6.1084 , allloss: 6.1100, dt: 1337.94ms, fracRes: 0.0169, norm(attn): 0.1172, norm(output): 0.1934, norm(x): 0.1788, norm(y): 1.0043, norm:1.7101, tok/sec: 97965.46, flops:102.82, batch-reuse:1
@ 845 train 6.0623 , allloss: 6.0636, dt: 1304.41ms, fracRes: 0.0199, norm(attn): 0.1113, norm(output): 0.1934, norm(x): 0.1779, norm(y): 1.0045, norm:1.3517, tok/sec: 100483.84, flops:105.46, batch-reuse:1
@ 846 train 6.0335 , allloss: 6.0349, dt: 1279.94ms, fracRes: 0.0180, norm(attn): 0.1094, norm(output): 0.1924, norm(x): 0.1781, norm(y): 1.0045, norm:1.2235, tok/sec: 102404.69, flops:107.48, batch-reuse:1
@ 847 train 6.0958 , allloss: 6.0979, dt: 1332.82ms, fracRes: 0.0171, norm(attn): 0.1152, norm(output): 0.1934, norm(x): 0.1779, norm(y): 1.0045, norm:1.3912, tok/sec: 98341.58, flops:103.21, batch-reuse:1
@ 848 train 6.0657 , allloss: 6.0675, dt: 1320.16ms, fracRes: 0.0206, norm(attn): 0.1128, norm(output): 0.1953, norm(x): 0.1777, norm(y): 1.0045, norm:1.5844, tok/sec: 99284.94, flops:104.20, batch-reuse:1
@ 849 train 6.0182 , allloss: 6.0208, dt: 1342.76ms, fracRes: 0.0228, norm(attn): 0.1113, norm(output): 0.1934, norm(x): 0.1777, norm(y): 1.0045, norm:1.2987, tok/sec: 97613.95, flops:102.45, batch-reuse:1
@ 850 train 5.9892 , allloss: 5.9911, dt: 1323.98ms, fracRes: 0.0241, norm(attn): 0.1138, norm(output): 0.1924, norm(x): 0.1778, norm(y): 1.0046, norm:1.3584, tok/sec: 98998.81, flops:103.90, batch-reuse:1
@ 851 train 6.2369 , allloss: 6.2379, dt: 1310.81ms, fracRes: 0.0245, norm(attn): 0.1167, norm(output): 0.1934, norm(x): 0.1777, norm(y): 1.0046, norm:1.6047, tok/sec: 99993.36, flops:104.94, batch-reuse:1
@ 852 train 6.0862 , allloss: 6.0887, dt: 1327.89ms, fracRes: 0.0229, norm(attn): 0.1177, norm(output): 0.1953, norm(x): 0.1786, norm(y): 1.0045, norm:1.3336, tok/sec: 98707.10, flops:103.59, batch-reuse:1
@ 853 train 6.0194 , allloss: 6.0217, dt: 1312.21ms, fracRes: 0.0270, norm(attn): 0.1118, norm(output): 0.1963, norm(x): 0.1778, norm(y): 1.0046, norm:1.2166, tok/sec: 99886.19, flops:104.83, batch-reuse:1
@ 854 train 6.0485 , allloss: 6.0502, dt: 1274.59ms, fracRes: 0.0263, norm(attn): 0.1123, norm(output): 0.1973, norm(x): 0.1782, norm(y): 1.0046, norm:1.4191, tok/sec: 102834.87, flops:107.93, batch-reuse:1
@ 855 train 6.0826 , allloss: 6.0841, dt: 1291.10ms, fracRes: 0.0233, norm(attn): 0.1152, norm(output): 0.1963, norm(x): 0.1791, norm(y): 1.0045, norm:1.9333, tok/sec: 101519.82, flops:106.55, batch-reuse:1
@ 856 train 6.0524 , allloss: 6.0536, dt: 1318.29ms, fracRes: 0.0270, norm(attn): 0.1118, norm(output): 0.1953, norm(x): 0.1785, norm(y): 1.0045, norm:1.1582, tok/sec: 99426.11, flops:104.35, batch-reuse:1
@ 857 train 6.0444 , allloss: 6.0462, dt: 1333.75ms, fracRes: 0.0267, norm(attn): 0.1172, norm(output): 0.1973, norm(x): 0.1793, norm(y): 1.0045, norm:1.7739, tok/sec: 98273.52, flops:103.14, batch-reuse:1
@ 858 train 6.1062 , allloss: 6.1088, dt: 1341.45ms, fracRes: 0.0364, norm(attn): 0.1094, norm(output): 0.1963, norm(x): 0.1771, norm(y): 1.0046, norm:1.5896, tok/sec: 97709.39, flops:102.55, batch-reuse:1
@ 859 train 6.0216 , allloss: 6.0233, dt: 1307.53ms, fracRes: 0.0284, norm(attn): 0.1128, norm(output): 0.1982, norm(x): 0.1789, norm(y): 1.0046, norm:1.4690, tok/sec: 100244.07, flops:105.21, batch-reuse:1
@ 860 train 6.0485 , allloss: 6.0498, dt: 1301.85ms, fracRes: 0.0235, norm(attn): 0.1162, norm(output): 0.1982, norm(x): 0.1798, norm(y): 1.0046, norm:1.2870, tok/sec: 100681.24, flops:105.67, batch-reuse:1
@ 861 train 6.0437 , allloss: 6.0448, dt: 1341.25ms, fracRes: 0.0272, norm(attn): 0.1108, norm(output): 0.1934, norm(x): 0.1790, norm(y): 1.0047, norm:1.4464, tok/sec: 97723.42, flops:102.56, batch-reuse:1
@ 862 train 6.1022 , allloss: 6.1035, dt: 1332.71ms, fracRes: 0.0223, norm(attn): 0.1152, norm(output): 0.1982, norm(x): 0.1806, norm(y): 1.0046, norm:1.9034, tok/sec: 98349.92, flops:103.22, batch-reuse:1
@ 863 train 6.0315 , allloss: 6.0339, dt: 1323.67ms, fracRes: 0.0210, norm(attn): 0.1172, norm(output): 0.1982, norm(x): 0.1807, norm(y): 1.0045, norm:1.2590, tok/sec: 99021.33, flops:103.92, batch-reuse:1
@ 864 train 6.0767 , allloss: 6.0786, dt: 1312.64ms, fracRes: 0.0203, norm(attn): 0.1143, norm(output): 0.1953, norm(x): 0.1799, norm(y): 1.0046, norm:1.8662, tok/sec: 99853.84, flops:104.80, batch-reuse:1
@ 865 train 5.9817 , allloss: 5.9826, dt: 1303.32ms, fracRes: 0.0204, norm(attn): 0.1094, norm(output): 0.1982, norm(x): 0.1806, norm(y): 1.0046, norm:1.4545, tok/sec: 100568.06, flops:105.55, batch-reuse:1
@ 866 train 5.9553 , allloss: 5.9571, dt: 1328.46ms, fracRes: 0.0208, norm(attn): 0.1118, norm(output): 0.1982, norm(x): 0.1810, norm(y): 1.0046, norm:1.4239, tok/sec: 98664.69, flops:103.55, batch-reuse:1
@ 867 train 6.0177 , allloss: 6.0205, dt: 1296.29ms, fracRes: 0.0212, norm(attn): 0.1201, norm(output): 0.1982, norm(x): 0.1815, norm(y): 1.0045, norm:1.3080, tok/sec: 101112.92, flops:106.12, batch-reuse:1
@ 868 train 5.9909 , allloss: 5.9925, dt: 1315.80ms, fracRes: 0.0252, norm(attn): 0.1138, norm(output): 0.1992, norm(x): 0.1804, norm(y): 1.0046, norm:0.9963, tok/sec: 99613.96, flops:104.55, batch-reuse:1
@ 869 train 6.0130 , allloss: 6.0144, dt: 1301.15ms, fracRes: 0.0235, norm(attn): 0.1177, norm(output): 0.1982, norm(x): 0.1812, norm(y): 1.0046, norm:1.3232, tok/sec: 100735.28, flops:105.72, batch-reuse:1
@ 870 train 6.0086 , allloss: 6.0101, dt: 1299.05ms, fracRes: 0.0279, norm(attn): 0.1113, norm(output): 0.1992, norm(x): 0.1796, norm(y): 1.0047, norm:1.5568, tok/sec: 100898.42, flops:105.89, batch-reuse:1
@ 871 train 6.0302 , allloss: 6.0315, dt: 1315.32ms, fracRes: 0.0276, norm(attn): 0.1108, norm(output): 0.1992, norm(x): 0.1801, norm(y): 1.0047, norm:1.8521, tok/sec: 99650.51, flops:104.59, batch-reuse:1
@ 872 train 5.9872 , allloss: 5.9895, dt: 1348.22ms, fracRes: 0.0191, norm(attn): 0.1177, norm(output): 0.1992, norm(x): 0.1823, norm(y): 1.0046, norm:1.5595, tok/sec: 97218.34, flops:102.03, batch-reuse:1
@ 873 train 6.0280 , allloss: 6.0297, dt: 1314.79ms, fracRes: 0.0200, norm(attn): 0.1167, norm(output): 0.1992, norm(x): 0.1817, norm(y): 1.0047, norm:1.7551, tok/sec: 99690.50, flops:104.63, batch-reuse:1
@ 874 train 5.9507 , allloss: 5.9524, dt: 1325.08ms, fracRes: 0.0208, norm(attn): 0.1123, norm(output): 0.1992, norm(x): 0.1824, norm(y): 1.0046, norm:1.5196, tok/sec: 98916.26, flops:103.81, batch-reuse:1
@ 875 train 5.9789 , allloss: 5.9806, dt: 1317.37ms, fracRes: 0.0231, norm(attn): 0.1133, norm(output): 0.1992, norm(x): 0.1815, norm(y): 1.0047, norm:1.0997, tok/sec: 99495.30, flops:104.42, batch-reuse:1
@ 876 train 5.9884 , allloss: 5.9895, dt: 1295.99ms, fracRes: 0.0218, norm(attn): 0.1172, norm(output): 0.1992, norm(x): 0.1822, norm(y): 1.0046, norm:1.5699, tok/sec: 101136.58, flops:106.14, batch-reuse:1
@ 877 train 6.0412 , allloss: 6.0435, dt: 1325.63ms, fracRes: 0.0226, norm(attn): 0.1240, norm(output): 0.1992, norm(x): 0.1833, norm(y): 1.0045, norm:2.6744, tok/sec: 98875.26, flops:103.77, batch-reuse:1
@ 878 train 5.9811 , allloss: 5.9822, dt: 1324.89ms, fracRes: 0.0300, norm(attn): 0.1162, norm(output): 0.1992, norm(x): 0.1814, norm(y): 1.0046, norm:1.1659, tok/sec: 98930.40, flops:103.83, batch-reuse:1
@ 879 train 5.9216 , allloss: 5.9225, dt: 1314.39ms, fracRes: 0.0256, norm(attn): 0.1157, norm(output): 0.2002, norm(x): 0.1822, norm(y): 1.0046, norm:1.4634, tok/sec: 99720.95, flops:104.66, batch-reuse:1
@ 880 train 6.0398 , allloss: 6.0409, dt: 1302.18ms, fracRes: 0.0291, norm(attn): 0.1128, norm(output): 0.1992, norm(x): 0.1812, norm(y): 1.0047, norm:1.8939, tok/sec: 100655.97, flops:105.64, batch-reuse:1
@ 881 train 5.9261 , allloss: 5.9284, dt: 1288.33ms, fracRes: 0.0251, norm(attn): 0.1133, norm(output): 0.2012, norm(x): 0.1822, norm(y): 1.0047, norm:1.4188, tok/sec: 101738.11, flops:106.78, batch-reuse:1
@ 882 train 5.9307 , allloss: 5.9332, dt: 1285.49ms, fracRes: 0.0252, norm(attn): 0.1182, norm(output): 0.2012, norm(x): 0.1824, norm(y): 1.0046, norm:1.5924, tok/sec: 101962.98, flops:107.01, batch-reuse:1
@ 883 train 5.9054 , allloss: 5.9085, dt: 1288.98ms, fracRes: 0.0234, norm(attn): 0.1196, norm(output): 0.2021, norm(x): 0.1838, norm(y): 1.0045, norm:1.6691, tok/sec: 101686.49, flops:106.72, batch-reuse:1
@ 884 train 5.9059 , allloss: 5.9079, dt: 1298.61ms, fracRes: 0.0288, norm(attn): 0.1128, norm(output): 0.2012, norm(x): 0.1827, norm(y): 1.0047, norm:1.5653, tok/sec: 100932.37, flops:105.93, batch-reuse:1
@ 885 train 5.9320 , allloss: 5.9331, dt: 1318.82ms, fracRes: 0.0257, norm(attn): 0.1167, norm(output): 0.2012, norm(x): 0.1828, norm(y): 1.0047, norm:1.2809, tok/sec: 99385.55, flops:104.31, batch-reuse:1
@ 886 train 5.9997 , allloss: 6.0009, dt: 1319.16ms, fracRes: 0.0200, norm(attn): 0.1201, norm(output): 0.2021, norm(x): 0.1847, norm(y): 1.0046, norm:1.4576, tok/sec: 99360.22, flops:104.28, batch-reuse:1
@ 887 train 5.9436 , allloss: 5.9453, dt: 1340.18ms, fracRes: 0.0212, norm(attn): 0.1113, norm(output): 0.2021, norm(x): 0.1841, norm(y): 1.0047, norm:1.2612, tok/sec: 97802.05, flops:102.65, batch-reuse:1
@ 888 train 5.9346 , allloss: 5.9378, dt: 1310.62ms, fracRes: 0.0213, norm(attn): 0.1157, norm(output): 0.2021, norm(x): 0.1842, norm(y): 1.0047, norm:1.3986, tok/sec: 100007.28, flops:104.96, batch-reuse:1
@ 889 train 5.9819 , allloss: 5.9839, dt: 1315.31ms, fracRes: 0.0223, norm(attn): 0.1182, norm(output): 0.2002, norm(x): 0.1838, norm(y): 1.0047, norm:1.2999, tok/sec: 99650.82, flops:104.59, batch-reuse:1
@ 890 train 6.0040 , allloss: 6.0058, dt: 1338.12ms, fracRes: 0.0233, norm(attn): 0.1211, norm(output): 0.2012, norm(x): 0.1841, norm(y): 1.0047, norm:1.5618, tok/sec: 97952.60, flops:102.80, batch-reuse:1
@ 891 train 5.9630 , allloss: 5.9642, dt: 1315.40ms, fracRes: 0.0243, norm(attn): 0.1211, norm(output): 0.2012, norm(x): 0.1845, norm(y): 1.0046, norm:1.6793, tok/sec: 99644.15, flops:104.58, batch-reuse:1
@ 892 train 5.9215 , allloss: 5.9232, dt: 1341.41ms, fracRes: 0.0249, norm(attn): 0.1201, norm(output): 0.2012, norm(x): 0.1839, norm(y): 1.0047, norm:1.8134, tok/sec: 97711.82, flops:102.55, batch-reuse:1
@ 893 train 5.8169 , allloss: 5.8181, dt: 1325.82ms, fracRes: 0.0244, norm(attn): 0.1172, norm(output): 0.2021, norm(x): 0.1846, norm(y): 1.0047, norm:1.1591, tok/sec: 98861.03, flops:103.76, batch-reuse:1
@ 894 train 5.9584 , allloss: 5.9590, dt: 1349.81ms, fracRes: 0.0256, norm(attn): 0.1167, norm(output): 0.2012, norm(x): 0.1849, norm(y): 1.0047, norm:1.2910, tok/sec: 97103.79, flops:101.91, batch-reuse:1
@ 895 train 5.9332 , allloss: 5.9343, dt: 1336.09ms, fracRes: 0.0212, norm(attn): 0.1206, norm(output): 0.2021, norm(x): 0.1858, norm(y): 1.0046, norm:1.4237, tok/sec: 98101.24, flops:102.96, batch-reuse:1
@ 896 train 5.8341 , allloss: 5.8356, dt: 1314.20ms, fracRes: 0.0235, norm(attn): 0.1147, norm(output): 0.2021, norm(x): 0.1847, norm(y): 1.0047, norm:1.1813, tok/sec: 99734.99, flops:104.67, batch-reuse:1
@ 897 train 5.9343 , allloss: 5.9356, dt: 1332.59ms, fracRes: 0.0241, norm(attn): 0.1147, norm(output): 0.2021, norm(x): 0.1844, norm(y): 1.0048, norm:1.0266, tok/sec: 98358.69, flops:103.23, batch-reuse:1
@ 898 train 5.9474 , allloss: 5.9485, dt: 1321.88ms, fracRes: 0.0222, norm(attn): 0.1187, norm(output): 0.2021, norm(x): 0.1854, norm(y): 1.0047, norm:1.4142, tok/sec: 99155.81, flops:104.07, batch-reuse:1
@ 899 train 5.9217 , allloss: 5.9224, dt: 1307.23ms, fracRes: 0.0258, norm(attn): 0.1201, norm(output): 0.2021, norm(x): 0.1845, norm(y): 1.0048, norm:1.5644, tok/sec: 100266.92, flops:105.23, batch-reuse:1
@ 900 train 5.9762 , allloss: 5.9776, dt: 1344.17ms, fracRes: 0.0295, norm(attn): 0.1182, norm(output): 0.2021, norm(x): 0.1844, norm(y): 1.0048, norm:1.4175, tok/sec: 97511.80, flops:102.34, batch-reuse:1
@ 901 train 5.9103 , allloss: 5.9119, dt: 1335.39ms, fracRes: 0.0278, norm(attn): 0.1221, norm(output): 0.2031, norm(x): 0.1855, norm(y): 1.0047, norm:1.6840, tok/sec: 98152.80, flops:103.01, batch-reuse:1
@ 902 train 5.8714 , allloss: 5.8730, dt: 1289.45ms, fracRes: 0.0316, norm(attn): 0.1162, norm(output): 0.2031, norm(x): 0.1844, norm(y): 1.0048, norm:1.5107, tok/sec: 101649.36, flops:106.68, batch-reuse:1
@ 903 train 5.8998 , allloss: 5.9029, dt: 1317.39ms, fracRes: 0.0205, norm(attn): 0.1240, norm(output): 0.2031, norm(x): 0.1870, norm(y): 1.0046, norm:1.9084, tok/sec: 99493.93, flops:104.42, batch-reuse:1
@ 904 train 5.8603 , allloss: 5.8623, dt: 1308.96ms, fracRes: 0.0210, norm(attn): 0.1172, norm(output): 0.2031, norm(x): 0.1870, norm(y): 1.0048, norm:1.5299, tok/sec: 100134.46, flops:105.09, batch-reuse:1
@ 905 train 5.9445 , allloss: 5.9455, dt: 1301.14ms, fracRes: 0.0208, norm(attn): 0.1167, norm(output): 0.2031, norm(x): 0.1864, norm(y): 1.0048, norm:1.6754, tok/sec: 100736.31, flops:105.72, batch-reuse:1
@ 906 train 5.9184 , allloss: 5.9203, dt: 1312.57ms, fracRes: 0.0222, norm(attn): 0.1162, norm(output): 0.2031, norm(x): 0.1865, norm(y): 1.0048, norm:1.7512, tok/sec: 99859.16, flops:104.80, batch-reuse:1
@ 907 train 5.7893 , allloss: 5.7911, dt: 1301.98ms, fracRes: 0.0213, norm(attn): 0.1191, norm(output): 0.2031, norm(x): 0.1873, norm(y): 1.0047, norm:1.9876, tok/sec: 100671.12, flops:105.66, batch-reuse:1
@ 908 train 5.9268 , allloss: 5.9292, dt: 1304.09ms, fracRes: 0.0223, norm(attn): 0.1201, norm(output): 0.2031, norm(x): 0.1871, norm(y): 1.0047, norm:1.5087, tok/sec: 100508.78, flops:105.49, batch-reuse:1
@ 909 train 6.1256 , allloss: 6.1269, dt: 1326.29ms, fracRes: 0.0232, norm(attn): 0.1230, norm(output): 0.2041, norm(x): 0.1872, norm(y): 1.0047, norm:1.6028, tok/sec: 98825.79, flops:103.72, batch-reuse:1
@ 910 train 5.9405 , allloss: 5.9417, dt: 1308.30ms, fracRes: 0.0273, norm(attn): 0.1191, norm(output): 0.2031, norm(x): 0.1863, norm(y): 1.0048, norm:1.6516, tok/sec: 100185.17, flops:105.15, batch-reuse:1
@ 911 train 6.0109 , allloss: 6.0157, dt: 1305.02ms, fracRes: 0.0292, norm(attn): 0.1206, norm(output): 0.2031, norm(x): 0.1860, norm(y): 1.0048, norm:2.0116, tok/sec: 100436.86, flops:105.41, batch-reuse:1
@ 912 train 5.9002 , allloss: 5.9012, dt: 1301.61ms, fracRes: 0.0312, norm(attn): 0.1201, norm(output): 0.2021, norm(x): 0.1861, norm(y): 1.0048, norm:2.0366, tok/sec: 100700.23, flops:105.69, batch-reuse:1
@ 913 train 5.8806 , allloss: 5.8828, dt: 1310.55ms, fracRes: 0.0271, norm(attn): 0.1260, norm(output): 0.2031, norm(x): 0.1869, norm(y): 1.0047, norm:1.8077, tok/sec: 100012.96, flops:104.97, batch-reuse:1
@ 914 train 5.9372 , allloss: 5.9396, dt: 1292.35ms, fracRes: 0.0343, norm(attn): 0.1187, norm(output): 0.2031, norm(x): 0.1857, norm(y): 1.0048, norm:1.5084, tok/sec: 101421.61, flops:106.44, batch-reuse:1
@ 915 train 5.9351 , allloss: 5.9368, dt: 1295.16ms, fracRes: 0.0346, norm(attn): 0.1177, norm(output): 0.2031, norm(x): 0.1859, norm(y): 1.0049, norm:1.4961, tok/sec: 101201.75, flops:106.21, batch-reuse:1
@ 916 train 5.8566 , allloss: 5.8590, dt: 1295.99ms, fracRes: 0.0256, norm(attn): 0.1240, norm(output): 0.2041, norm(x): 0.1883, norm(y): 1.0047, norm:1.5029, tok/sec: 101136.27, flops:106.14, batch-reuse:1
@ 917 train 5.8911 , allloss: 5.8928, dt: 1352.48ms, fracRes: 0.0266, norm(attn): 0.1221, norm(output): 0.2041, norm(x): 0.1876, norm(y): 1.0048, norm:1.2051, tok/sec: 96912.07, flops:101.71, batch-reuse:1
@ 918 train 5.9469 , allloss: 5.9487, dt: 1283.82ms, fracRes: 0.0261, norm(attn): 0.1216, norm(output): 0.2041, norm(x): 0.1882, norm(y): 1.0048, norm:1.8061, tok/sec: 102094.92, flops:107.15, batch-reuse:1
@ 919 train 5.8769 , allloss: 5.8780, dt: 1317.25ms, fracRes: 0.0310, norm(attn): 0.1196, norm(output): 0.2041, norm(x): 0.1876, norm(y): 1.0049, norm:1.5306, tok/sec: 99504.14, flops:104.43, batch-reuse:1
@ 920 train 5.9363 , allloss: 5.9373, dt: 1301.46ms, fracRes: 0.0267, norm(attn): 0.1211, norm(output): 0.2041, norm(x): 0.1886, norm(y): 1.0048, norm:1.6915, tok/sec: 100711.32, flops:105.70, batch-reuse:1
@ 921 train 5.9081 , allloss: 5.9103, dt: 1312.12ms, fracRes: 0.0239, norm(attn): 0.1260, norm(output): 0.2041, norm(x): 0.1898, norm(y): 1.0047, norm:1.6956, tok/sec: 99893.56, flops:104.84, batch-reuse:1
@ 922 train 5.9203 , allloss: 5.9229, dt: 1308.00ms, fracRes: 0.0278, norm(attn): 0.1211, norm(output): 0.2051, norm(x): 0.1890, norm(y): 1.0048, norm:1.3554, tok/sec: 100208.18, flops:105.17, batch-reuse:1
@ 923 train 5.8931 , allloss: 5.8951, dt: 1291.98ms, fracRes: 0.0302, norm(attn): 0.1187, norm(output): 0.2041, norm(x): 0.1885, norm(y): 1.0049, norm:1.5447, tok/sec: 101450.26, flops:106.47, batch-reuse:1
@ 924 train 5.8708 , allloss: 5.8716, dt: 1307.21ms, fracRes: 0.0262, norm(attn): 0.1206, norm(output): 0.2051, norm(x): 0.1896, norm(y): 1.0048, norm:1.6187, tok/sec: 100268.29, flops:105.23, batch-reuse:1
@ 925 train 5.9352 , allloss: 5.9360, dt: 1291.20ms, fracRes: 0.0254, norm(attn): 0.1235, norm(output): 0.2041, norm(x): 0.1890, norm(y): 1.0048, norm:1.8171, tok/sec: 101511.57, flops:106.54, batch-reuse:1
@ 926 train 5.8920 , allloss: 5.8929, dt: 1344.86ms, fracRes: 0.0234, norm(attn): 0.1240, norm(output): 0.2041, norm(x): 0.1905, norm(y): 1.0047, norm:1.7881, tok/sec: 97461.30, flops:102.29, batch-reuse:1
@ 927 train 5.8165 , allloss: 5.8178, dt: 1318.15ms, fracRes: 0.0260, norm(attn): 0.1157, norm(output): 0.2051, norm(x): 0.1898, norm(y): 1.0049, norm:1.3681, tok/sec: 99436.60, flops:104.36, batch-reuse:1
@ 928 train 6.0247 , allloss: 6.0257, dt: 1347.05ms, fracRes: 0.0226, norm(attn): 0.1221, norm(output): 0.2041, norm(x): 0.1902, norm(y): 1.0048, norm:1.5792, tok/sec: 97303.24, flops:102.12, batch-reuse:1
@ 929 train 6.0566 , allloss: 6.0575, dt: 1323.87ms, fracRes: 0.0213, norm(attn): 0.1299, norm(output): 0.2070, norm(x): 0.1921, norm(y): 1.0047, norm:1.5740, tok/sec: 99006.72, flops:103.91, batch-reuse:1
@ 930 train 6.0028 , allloss: 6.0039, dt: 1322.18ms, fracRes: 0.0255, norm(attn): 0.1211, norm(output): 0.2061, norm(x): 0.1913, norm(y): 1.0049, norm:1.8221, tok/sec: 99133.19, flops:104.04, batch-reuse:1
@ 931 train 6.1303 , allloss: 6.1311, dt: 1313.24ms, fracRes: 0.0278, norm(attn): 0.1191, norm(output): 0.2061, norm(x): 0.1910, norm(y): 1.0049, norm:1.7229, tok/sec: 99807.96, flops:104.75, batch-reuse:1
@ 932 train 6.0541 , allloss: 6.0548, dt: 1317.87ms, fracRes: 0.0256, norm(attn): 0.1216, norm(output): 0.2041, norm(x): 0.1911, norm(y): 1.0048, norm:1.3921, tok/sec: 99457.25, flops:104.38, batch-reuse:1
@ 933 train 6.0739 , allloss: 6.0746, dt: 1304.58ms, fracRes: 0.0218, norm(attn): 0.1260, norm(output): 0.2070, norm(x): 0.1923, norm(y): 1.0047, norm:1.5233, tok/sec: 100470.28, flops:105.45, batch-reuse:1
@ 934 train 6.0517 , allloss: 6.0523, dt: 1281.45ms, fracRes: 0.0236, norm(attn): 0.1230, norm(output): 0.2061, norm(x): 0.1919, norm(y): 1.0048, norm:1.3746, tok/sec: 102284.30, flops:107.35, batch-reuse:1
@ 935 train 5.9970 , allloss: 5.9978, dt: 1319.25ms, fracRes: 0.0272, norm(attn): 0.1250, norm(output): 0.2070, norm(x): 0.1918, norm(y): 1.0048, norm:1.4892, tok/sec: 99353.09, flops:104.27, batch-reuse:1
@ 936 train 6.0432 , allloss: 6.0447, dt: 1320.08ms, fracRes: 0.0286, norm(attn): 0.1226, norm(output): 0.2070, norm(x): 0.1912, norm(y): 1.0049, norm:1.7621, tok/sec: 99291.04, flops:104.21, batch-reuse:1
@ 937 train 6.0634 , allloss: 6.0644, dt: 1294.16ms, fracRes: 0.0287, norm(attn): 0.1250, norm(output): 0.2070, norm(x): 0.1920, norm(y): 1.0048, norm:1.6178, tok/sec: 101279.73, flops:106.29, batch-reuse:1
@ 938 train 5.9928 , allloss: 5.9945, dt: 1307.97ms, fracRes: 0.0268, norm(attn): 0.1279, norm(output): 0.2061, norm(x): 0.1921, norm(y): 1.0048, norm:1.2176, tok/sec: 100210.25, flops:105.17, batch-reuse:1
@ 939 train 6.0592 , allloss: 6.0605, dt: 1301.76ms, fracRes: 0.0296, norm(attn): 0.1250, norm(output): 0.2070, norm(x): 0.1919, norm(y): 1.0048, norm:1.5046, tok/sec: 100688.19, flops:105.67, batch-reuse:1
@ 940 train 6.0500 , allloss: 6.0513, dt: 1290.87ms, fracRes: 0.0407, norm(attn): 0.1226, norm(output): 0.2080, norm(x): 0.1896, norm(y): 1.0050, norm:1.2816, tok/sec: 101537.52, flops:106.57, batch-reuse:1
@ 941 train 6.0361 , allloss: 6.0370, dt: 1309.46ms, fracRes: 0.0306, norm(attn): 0.1240, norm(output): 0.2070, norm(x): 0.1912, norm(y): 1.0049, norm:1.6023, tok/sec: 100096.21, flops:105.05, batch-reuse:1
@ 942 train 6.0631 , allloss: 6.0641, dt: 1316.88ms, fracRes: 0.0215, norm(attn): 0.1250, norm(output): 0.2090, norm(x): 0.1938, norm(y): 1.0048, norm:1.3333, tok/sec: 99531.98, flops:104.46, batch-reuse:1
@ 943 train 6.0093 , allloss: 6.0106, dt: 1310.67ms, fracRes: 0.0194, norm(attn): 0.1260, norm(output): 0.2090, norm(x): 0.1943, norm(y): 1.0048, norm:1.2369, tok/sec: 100003.64, flops:104.96, batch-reuse:1
@ 944 train 6.0345 , allloss: 6.0351, dt: 1286.63ms, fracRes: 0.0230, norm(attn): 0.1221, norm(output): 0.2090, norm(x): 0.1933, norm(y): 1.0049, norm:1.4934, tok/sec: 101872.49, flops:106.92, batch-reuse:1
@ 945 train 6.1274 , allloss: 6.1301, dt: 1302.81ms, fracRes: 0.0225, norm(attn): 0.1260, norm(output): 0.2090, norm(x): 0.1944, norm(y): 1.0048, norm:1.6572, tok/sec: 100606.93, flops:105.59, batch-reuse:1
@ 946 train 6.0354 , allloss: 6.0389, dt: 1289.48ms, fracRes: 0.0216, norm(attn): 0.1289, norm(output): 0.2109, norm(x): 0.1947, norm(y): 1.0048, norm:1.4175, tok/sec: 101646.95, flops:106.68, batch-reuse:1
@ 947 train 6.0253 , allloss: 6.0291, dt: 1285.71ms, fracRes: 0.0210, norm(attn): 0.1289, norm(output): 0.2100, norm(x): 0.1946, norm(y): 1.0048, norm:1.6537, tok/sec: 101944.88, flops:106.99, batch-reuse:1
@ 948 train 6.0226 , allloss: 6.0265, dt: 1290.78ms, fracRes: 0.0220, norm(attn): 0.1240, norm(output): 0.2109, norm(x): 0.1947, norm(y): 1.0049, norm:1.4921, tok/sec: 101544.48, flops:106.57, batch-reuse:1
@ 949 train 6.0860 , allloss: 6.0898, dt: 1306.79ms, fracRes: 0.0226, norm(attn): 0.1250, norm(output): 0.2129, norm(x): 0.1953, norm(y): 1.0048, norm:1.7840, tok/sec: 100300.64, flops:105.27, batch-reuse:1
@ 950 train 6.0081 , allloss: 6.0124, dt: 1289.78ms, fracRes: 0.0254, norm(attn): 0.1250, norm(output): 0.2080, norm(x): 0.1944, norm(y): 1.0048, norm:1.0964, tok/sec: 101623.20, flops:106.66, batch-reuse:1
@ 951 train 6.0815 , allloss: 6.0851, dt: 1327.92ms, fracRes: 0.0275, norm(attn): 0.1250, norm(output): 0.2129, norm(x): 0.1942, norm(y): 1.0049, norm:1.7291, tok/sec: 98704.97, flops:103.59, batch-reuse:1
@ 952 train 5.9935 , allloss: 5.9969, dt: 1313.47ms, fracRes: 0.0269, norm(attn): 0.1260, norm(output): 0.2109, norm(x): 0.1945, norm(y): 1.0049, norm:1.4121, tok/sec: 99790.66, flops:104.73, batch-reuse:1
@ 953 train 5.9952 , allloss: 5.9986, dt: 1315.20ms, fracRes: 0.0235, norm(attn): 0.1260, norm(output): 0.2148, norm(x): 0.1955, norm(y): 1.0048, norm:1.4793, tok/sec: 99659.27, flops:104.59, batch-reuse:1
@ 954 train 5.9353 , allloss: 5.9405, dt: 1305.96ms, fracRes: 0.0229, norm(attn): 0.1250, norm(output): 0.2129, norm(x): 0.1962, norm(y): 1.0048, norm:1.3375, tok/sec: 100364.38, flops:105.33, batch-reuse:1
@ 955 train 6.0420 , allloss: 6.0443, dt: 1324.07ms, fracRes: 0.0219, norm(attn): 0.1250, norm(output): 0.2148, norm(x): 0.1959, norm(y): 1.0048, norm:1.8845, tok/sec: 98991.60, flops:103.89, batch-reuse:1
@ 956 train 5.9870 , allloss: 5.9894, dt: 1313.40ms, fracRes: 0.0213, norm(attn): 0.1270, norm(output): 0.2148, norm(x): 0.1967, norm(y): 1.0048, norm:1.4267, tok/sec: 99795.86, flops:104.74, batch-reuse:1
@ 957 train 6.0037 , allloss: 6.0050, dt: 1311.01ms, fracRes: 0.0278, norm(attn): 0.1211, norm(output): 0.2148, norm(x): 0.1959, norm(y): 1.0049, norm:1.3317, tok/sec: 99977.56, flops:104.93, batch-reuse:1
@ 958 train 6.0320 , allloss: 6.0382, dt: 1314.97ms, fracRes: 0.0266, norm(attn): 0.1211, norm(output): 0.2148, norm(x): 0.1957, norm(y): 1.0049, norm:2.1383, tok/sec: 99677.00, flops:104.61, batch-reuse:1
@ 959 train 5.9271 , allloss: 5.9288, dt: 1328.75ms, fracRes: 0.0209, norm(attn): 0.1289, norm(output): 0.2148, norm(x): 0.1977, norm(y): 1.0048, norm:2.2167, tok/sec: 98642.77, flops:103.53, batch-reuse:1
@ 960 train 6.0758 , allloss: 6.0766, dt: 1301.72ms, fracRes: 0.0259, norm(attn): 0.1191, norm(output): 0.2148, norm(x): 0.1961, norm(y): 1.0050, norm:1.8477, tok/sec: 100691.31, flops:105.68, batch-reuse:1
@ 961 train 5.9910 , allloss: 5.9928, dt: 1290.93ms, fracRes: 0.0228, norm(attn): 0.1221, norm(output): 0.2148, norm(x): 0.1967, norm(y): 1.0049, norm:2.1180, tok/sec: 101532.98, flops:106.56, batch-reuse:1
@ 962 train 6.0021 , allloss: 6.0036, dt: 1319.45ms, fracRes: 0.0212, norm(attn): 0.1250, norm(output): 0.2148, norm(x): 0.1969, norm(y): 1.0049, norm:1.4426, tok/sec: 99338.62, flops:104.26, batch-reuse:1
@ 963 train 6.0570 , allloss: 6.0589, dt: 1329.75ms, fracRes: 0.0160, norm(attn): 0.1279, norm(output): 0.2158, norm(x): 0.1985, norm(y): 1.0047, norm:1.8936, tok/sec: 98568.79, flops:103.45, batch-reuse:1
@ 964 train 6.0378 , allloss: 6.0396, dt: 1312.33ms, fracRes: 0.0158, norm(attn): 0.1206, norm(output): 0.2158, norm(x): 0.1989, norm(y): 1.0048, norm:1.5931, tok/sec: 99877.28, flops:104.82, batch-reuse:1
@ 965 train 6.0344 , allloss: 6.0361, dt: 1281.72ms, fracRes: 0.0160, norm(attn): 0.1230, norm(output): 0.2158, norm(x): 0.1989, norm(y): 1.0048, norm:1.6934, tok/sec: 102262.84, flops:107.33, batch-reuse:1
@ 966 train 6.0042 , allloss: 6.0055, dt: 1309.65ms, fracRes: 0.0168, norm(attn): 0.1250, norm(output): 0.2168, norm(x): 0.1985, norm(y): 1.0049, norm:1.6908, tok/sec: 100081.60, flops:105.04, batch-reuse:1
@ 967 train 6.0483 , allloss: 6.0492, dt: 1338.98ms, fracRes: 0.0177, norm(attn): 0.1289, norm(output): 0.2168, norm(x): 0.1993, norm(y): 1.0050, norm:2.9125, tok/sec: 97889.30, flops:102.74, batch-reuse:1
@ 968 train 6.1013 , allloss: 6.1023, dt: 1326.61ms, fracRes: 0.0176, norm(attn): 0.1245, norm(output): 0.2168, norm(x): 0.1992, norm(y): 1.0049, norm:1.7074, tok/sec: 98802.51, flops:103.70, batch-reuse:1
@ 969 train 5.9830 , allloss: 5.9866, dt: 1305.98ms, fracRes: 0.0177, norm(attn): 0.1299, norm(output): 0.2178, norm(x): 0.2001, norm(y): 1.0048, norm:1.4164, tok/sec: 100363.26, flops:105.33, batch-reuse:1
@ 970 train 5.9905 , allloss: 5.9917, dt: 1310.11ms, fracRes: 0.0200, norm(attn): 0.1191, norm(output): 0.2178, norm(x): 0.1996, norm(y): 1.0049, norm:1.2917, tok/sec: 100046.52, flops:105.00, batch-reuse:1
@ 971 train 6.0134 , allloss: 6.0147, dt: 1312.89ms, fracRes: 0.0220, norm(attn): 0.1250, norm(output): 0.2178, norm(x): 0.2000, norm(y): 1.0049, norm:1.2982, tok/sec: 99834.57, flops:104.78, batch-reuse:1
@ 972 train 6.0348 , allloss: 6.0367, dt: 1315.41ms, fracRes: 0.0230, norm(attn): 0.1309, norm(output): 0.2178, norm(x): 0.2004, norm(y): 1.0048, norm:2.0851, tok/sec: 99643.23, flops:104.58, batch-reuse:1
@ 973 train 6.0145 , allloss: 6.0163, dt: 1293.41ms, fracRes: 0.0293, norm(attn): 0.1309, norm(output): 0.2178, norm(x): 0.1991, norm(y): 1.0049, norm:1.4929, tok/sec: 101338.15, flops:106.36, batch-reuse:1
@ 974 train 6.0189 , allloss: 6.0257, dt: 1330.39ms, fracRes: 0.0356, norm(attn): 0.1240, norm(output): 0.2178, norm(x): 0.1979, norm(y): 1.0050, norm:1.6921, tok/sec: 98521.81, flops:103.40, batch-reuse:1
@ 975 train 6.0307 , allloss: 6.0337, dt: 1301.19ms, fracRes: 0.0369, norm(attn): 0.1240, norm(output): 0.2168, norm(x): 0.1969, norm(y): 1.0050, norm:1.4898, tok/sec: 100732.73, flops:105.72, batch-reuse:1
@ 976 train 5.9636 , allloss: 5.9659, dt: 1313.83ms, fracRes: 0.0353, norm(attn): 0.1309, norm(output): 0.2178, norm(x): 0.1980, norm(y): 1.0049, norm:2.2592, tok/sec: 99763.48, flops:104.70, batch-reuse:1
@ 977 train 5.9669 , allloss: 5.9702, dt: 1322.08ms, fracRes: 0.0319, norm(attn): 0.1357, norm(output): 0.2178, norm(x): 0.1993, norm(y): 1.0049, norm:1.6430, tok/sec: 99140.59, flops:104.05, batch-reuse:1
@ 978 train 5.9799 , allloss: 5.9921, dt: 1305.13ms, fracRes: 0.0489, norm(attn): 0.1226, norm(output): 0.2178, norm(x): 0.1956, norm(y): 1.0051, norm:1.5314, tok/sec: 100428.51, flops:105.40, batch-reuse:1
@ 979 train 5.9335 , allloss: 5.9372, dt: 1336.33ms, fracRes: 0.0329, norm(attn): 0.1211, norm(output): 0.2178, norm(x): 0.1982, norm(y): 1.0050, norm:1.4260, tok/sec: 98083.84, flops:102.94, batch-reuse:1
@ 980 train 5.8871 , allloss: 5.8900, dt: 1318.07ms, fracRes: 0.0214, norm(attn): 0.1240, norm(output): 0.2178, norm(x): 0.2015, norm(y): 1.0049, norm:2.2457, tok/sec: 99442.14, flops:104.37, batch-reuse:1
@ 981 train 5.8805 , allloss: 5.8813, dt: 1313.98ms, fracRes: 0.0193, norm(attn): 0.1299, norm(output): 0.2188, norm(x): 0.2014, norm(y): 1.0049, norm:1.4696, tok/sec: 99751.73, flops:104.69, batch-reuse:1
@ 982 train 5.9013 , allloss: 5.9027, dt: 1322.38ms, fracRes: 0.0175, norm(attn): 0.1309, norm(output): 0.2188, norm(x): 0.2020, norm(y): 1.0048, norm:1.3445, tok/sec: 99118.29, flops:104.03, batch-reuse:1
@ 983 train 5.9907 , allloss: 5.9933, dt: 1334.27ms, fracRes: 0.0176, norm(attn): 0.1270, norm(output): 0.2188, norm(x): 0.2033, norm(y): 1.0049, norm:1.4139, tok/sec: 98234.81, flops:103.10, batch-reuse:1
@ 984 train 5.9464 , allloss: 5.9503, dt: 1308.61ms, fracRes: 0.0189, norm(attn): 0.1240, norm(output): 0.2188, norm(x): 0.2023, norm(y): 1.0050, norm:2.0983, tok/sec: 100161.11, flops:105.12, batch-reuse:1
@ 985 train 5.9474 , allloss: 5.9508, dt: 1299.21ms, fracRes: 0.0206, norm(attn): 0.1260, norm(output): 0.2188, norm(x): 0.2020, norm(y): 1.0050, norm:1.7876, tok/sec: 100885.64, flops:105.88, batch-reuse:1
@ 986 train 5.9985 , allloss: 6.0016, dt: 1312.53ms, fracRes: 0.0205, norm(attn): 0.1279, norm(output): 0.2197, norm(x): 0.2027, norm(y): 1.0049, norm:1.2878, tok/sec: 99861.82, flops:104.81, batch-reuse:1
@ 987 train 5.8924 , allloss: 5.8993, dt: 1292.24ms, fracRes: 0.0190, norm(attn): 0.1289, norm(output): 0.2197, norm(x): 0.2034, norm(y): 1.0048, norm:1.3410, tok/sec: 101430.03, flops:106.45, batch-reuse:1
@ 988 train 6.0297 , allloss: 6.0355, dt: 1314.66ms, fracRes: 0.0209, norm(attn): 0.1250, norm(output): 0.2188, norm(x): 0.2021, norm(y): 1.0049, norm:1.6327, tok/sec: 99700.04, flops:104.64, batch-reuse:1
@ 989 train 6.0866 , allloss: 6.0925, dt: 1325.94ms, fracRes: 0.0232, norm(attn): 0.1240, norm(output): 0.2188, norm(x): 0.2021, norm(y): 1.0050, norm:1.6675, tok/sec: 98852.07, flops:103.75, batch-reuse:1
@ 990 train 5.9253 , allloss: 5.9316, dt: 1336.85ms, fracRes: 0.0222, norm(attn): 0.1299, norm(output): 0.2197, norm(x): 0.2036, norm(y): 1.0049, norm:1.4468, tok/sec: 98045.76, flops:102.90, batch-reuse:1
@ 991 train 5.9528 , allloss: 5.9573, dt: 1330.49ms, fracRes: 0.0226, norm(attn): 0.1270, norm(output): 0.2197, norm(x): 0.2033, norm(y): 1.0048, norm:1.3174, tok/sec: 98514.21, flops:103.39, batch-reuse:1
@ 992 train 6.0130 , allloss: 6.0154, dt: 1284.69ms, fracRes: 0.0286, norm(attn): 0.1260, norm(output): 0.2197, norm(x): 0.2018, norm(y): 1.0050, norm:1.3803, tok/sec: 102026.08, flops:107.08, batch-reuse:1
@ 993 train 5.8902 , allloss: 5.8926, dt: 1312.51ms, fracRes: 0.0277, norm(attn): 0.1260, norm(output): 0.2188, norm(x): 0.2025, norm(y): 1.0049, norm:1.8258, tok/sec: 99863.73, flops:104.81, batch-reuse:1
@ 994 train 5.9782 , allloss: 5.9804, dt: 1290.54ms, fracRes: 0.0269, norm(attn): 0.1309, norm(output): 0.2197, norm(x): 0.2033, norm(y): 1.0049, norm:1.4779, tok/sec: 101563.48, flops:106.59, batch-reuse:1
@ 995 train 5.9531 , allloss: 5.9554, dt: 1312.08ms, fracRes: 0.0292, norm(attn): 0.1270, norm(output): 0.2188, norm(x): 0.2035, norm(y): 1.0050, norm:2.1276, tok/sec: 99896.37, flops:104.84, batch-reuse:1
@ 996 train 5.8477 , allloss: 5.8490, dt: 1307.48ms, fracRes: 0.0322, norm(attn): 0.1250, norm(output): 0.2197, norm(x): 0.2027, norm(y): 1.0051, norm:1.6865, tok/sec: 100247.63, flops:105.21, batch-reuse:1
@ 997 train 5.9038 , allloss: 5.9049, dt: 1344.67ms, fracRes: 0.0298, norm(attn): 0.1250, norm(output): 0.2197, norm(x): 0.2034, norm(y): 1.0050, norm:1.8826, tok/sec: 97475.07, flops:102.30, batch-reuse:1
@ 998 train 6.0797 , allloss: 6.0809, dt: 1292.13ms, fracRes: 0.0289, norm(attn): 0.1270, norm(output): 0.2197, norm(x): 0.2041, norm(y): 1.0050, norm:1.7733, tok/sec: 101438.69, flops:106.46, batch-reuse:1
@ 999 train 5.8875 , allloss: 5.8888, dt: 1310.40ms, fracRes: 0.0254, norm(attn): 0.1309, norm(output): 0.2207, norm(x): 0.2060, norm(y): 1.0049, norm:1.3733, tok/sec: 100024.20, flops:104.98, batch-reuse:1
@ 1000 train 5.9668 , allloss: 5.9678, dt: 1291.26ms, fracRes: 0.0283, norm(attn): 0.1279, norm(output): 0.2197, norm(x): 0.2044, norm(y): 1.0050, norm:1.3976, tok/sec: 101506.70, flops:106.53, batch-reuse:1
@ 1001 train 5.9917 , allloss: 5.9930, dt: 1316.07ms, fracRes: 0.0290, norm(attn): 0.1230, norm(output): 0.2207, norm(x): 0.2055, norm(y): 1.0050, norm:1.5009, tok/sec: 99593.32, flops:104.53, batch-reuse:1
@ 1002 train 5.8633 , allloss: 5.8652, dt: 1297.99ms, fracRes: 0.0279, norm(attn): 0.1279, norm(output): 0.2207, norm(x): 0.2055, norm(y): 1.0050, norm:1.2830, tok/sec: 100980.93, flops:105.98, batch-reuse:1
@ 1003 train 6.0018 , allloss: 6.0034, dt: 1325.78ms, fracRes: 0.0266, norm(attn): 0.1270, norm(output): 0.2207, norm(x): 0.2057, norm(y): 1.0050, norm:1.3352, tok/sec: 98864.27, flops:103.76, batch-reuse:1
@ 1004 train 5.8366 , allloss: 5.8377, dt: 1315.69ms, fracRes: 0.0243, norm(attn): 0.1289, norm(output): 0.2227, norm(x): 0.2073, norm(y): 1.0049, norm:1.3679, tok/sec: 99622.03, flops:104.56, batch-reuse:1
@ 1005 train 5.9247 , allloss: 5.9258, dt: 1306.39ms, fracRes: 0.0243, norm(attn): 0.1240, norm(output): 0.2217, norm(x): 0.2069, norm(y): 1.0050, norm:1.4226, tok/sec: 100331.26, flops:105.30, batch-reuse:1
@ 1006 train 5.9287 , allloss: 5.9304, dt: 1294.28ms, fracRes: 0.0256, norm(attn): 0.1270, norm(output): 0.2227, norm(x): 0.2071, norm(y): 1.0050, norm:1.3497, tok/sec: 101270.31, flops:106.29, batch-reuse:1
@ 1007 train 5.9030 , allloss: 5.9045, dt: 1282.01ms, fracRes: 0.0295, norm(attn): 0.1260, norm(output): 0.2217, norm(x): 0.2064, norm(y): 1.0050, norm:1.5699, tok/sec: 102239.48, flops:107.30, batch-reuse:1
@ 1008 train 5.9331 , allloss: 5.9361, dt: 1301.75ms, fracRes: 0.0233, norm(attn): 0.1328, norm(output): 0.2227, norm(x): 0.2094, norm(y): 1.0049, norm:1.8368, tok/sec: 100689.33, flops:105.68, batch-reuse:1
@ 1009 train 5.9418 , allloss: 5.9445, dt: 1279.54ms, fracRes: 0.0255, norm(attn): 0.1250, norm(output): 0.2285, norm(x): 0.2089, norm(y): 1.0050, norm:1.2525, tok/sec: 102436.46, flops:107.51, batch-reuse:1
@ 1010 train 6.0246 , allloss: 6.0263, dt: 1294.26ms, fracRes: 0.0225, norm(attn): 0.1245, norm(output): 0.2227, norm(x): 0.2087, norm(y): 1.0050, norm:2.1326, tok/sec: 101272.01, flops:106.29, batch-reuse:1
@ 1011 train 5.9093 , allloss: 5.9108, dt: 1334.92ms, fracRes: 0.0266, norm(attn): 0.1235, norm(output): 0.2227, norm(x): 0.2082, norm(y): 1.0051, norm:1.4672, tok/sec: 98187.22, flops:103.05, batch-reuse:1
@ 1012 train 5.9961 , allloss: 5.9974, dt: 1298.97ms, fracRes: 0.0263, norm(attn): 0.1260, norm(output): 0.2246, norm(x): 0.2084, norm(y): 1.0051, norm:1.6792, tok/sec: 100904.60, flops:105.90, batch-reuse:1
@ 1013 train 5.9342 , allloss: 5.9354, dt: 1334.02ms, fracRes: 0.0233, norm(attn): 0.1289, norm(output): 0.2227, norm(x): 0.2089, norm(y): 1.0050, norm:1.1676, tok/sec: 98253.37, flops:103.12, batch-reuse:1
@ 1014 train 5.8665 , allloss: 5.8674, dt: 1307.27ms, fracRes: 0.0266, norm(attn): 0.1240, norm(output): 0.2217, norm(x): 0.2075, norm(y): 1.0051, norm:1.5447, tok/sec: 100263.59, flops:105.23, batch-reuse:1
@ 1015 train 5.9624 , allloss: 5.9635, dt: 1327.52ms, fracRes: 0.0249, norm(attn): 0.1260, norm(output): 0.2246, norm(x): 0.2086, norm(y): 1.0050, norm:1.8575, tok/sec: 98734.70, flops:103.62, batch-reuse:1
@ 1016 train 6.0058 , allloss: 6.0074, dt: 1321.96ms, fracRes: 0.0267, norm(attn): 0.1279, norm(output): 0.2227, norm(x): 0.2089, norm(y): 1.0050, norm:1.4681, tok/sec: 99149.48, flops:104.06, batch-reuse:1
@ 1017 train 5.8607 , allloss: 5.8621, dt: 1312.93ms, fracRes: 0.0294, norm(attn): 0.1289, norm(output): 0.2227, norm(x): 0.2084, norm(y): 1.0050, norm:1.7383, tok/sec: 99831.39, flops:104.77, batch-reuse:1
@ 1018 train 5.9666 , allloss: 5.9679, dt: 1295.25ms, fracRes: 0.0295, norm(attn): 0.1279, norm(output): 0.2266, norm(x): 0.2088, norm(y): 1.0050, norm:1.4295, tok/sec: 101194.63, flops:106.21, batch-reuse:1
@ 1019 train 5.9561 , allloss: 5.9576, dt: 1312.64ms, fracRes: 0.0303, norm(attn): 0.1250, norm(output): 0.2275, norm(x): 0.2090, norm(y): 1.0051, norm:1.4280, tok/sec: 99853.44, flops:104.80, batch-reuse:1
@ 1020 train 5.8495 , allloss: 5.8516, dt: 1322.76ms, fracRes: 0.0308, norm(attn): 0.1260, norm(output): 0.2266, norm(x): 0.2093, norm(y): 1.0051, norm:1.0745, tok/sec: 99089.47, flops:104.00, batch-reuse:1
@ 1021 train 5.8528 , allloss: 5.8552, dt: 1306.48ms, fracRes: 0.0320, norm(attn): 0.1279, norm(output): 0.2266, norm(x): 0.2089, norm(y): 1.0051, norm:1.2381, tok/sec: 100324.69, flops:105.29, batch-reuse:1
@ 1022 train 5.7896 , allloss: 5.7910, dt: 1297.29ms, fracRes: 0.0323, norm(attn): 0.1309, norm(output): 0.2246, norm(x): 0.2085, norm(y): 1.0051, norm:1.2583, tok/sec: 101034.95, flops:106.04, batch-reuse:1
@ 1023 train 5.8437 , allloss: 5.8445, dt: 1306.96ms, fracRes: 0.0347, norm(attn): 0.1250, norm(output): 0.2266, norm(x): 0.2085, norm(y): 1.0052, norm:1.7392, tok/sec: 100287.43, flops:105.25, batch-reuse:1
@ 1024 train 5.8255 , allloss: 5.8263, dt: 1340.06ms, fracRes: 0.0342, norm(attn): 0.1260, norm(output): 0.2256, norm(x): 0.2087, norm(y): 1.0052, norm:1.8734, tok/sec: 97810.77, flops:102.65, batch-reuse:1
@ 1025 train 5.8836 , allloss: 5.8849, dt: 1349.85ms, fracRes: 0.0277, norm(attn): 0.1318, norm(output): 0.2246, norm(x): 0.2100, norm(y): 1.0051, norm:1.3898, tok/sec: 97101.40, flops:101.91, batch-reuse:1
@ 1026 train 5.9107 , allloss: 5.9121, dt: 1338.22ms, fracRes: 0.0286, norm(attn): 0.1309, norm(output): 0.2285, norm(x): 0.2103, norm(y): 1.0051, norm:1.4946, tok/sec: 97945.04, flops:102.80, batch-reuse:1
@ 1027 train 5.9016 , allloss: 5.9024, dt: 1343.81ms, fracRes: 0.0298, norm(attn): 0.1279, norm(output): 0.2266, norm(x): 0.2097, norm(y): 1.0052, norm:1.6902, tok/sec: 97537.42, flops:102.37, batch-reuse:1
@ 1028 train 5.8350 , allloss: 5.8356, dt: 1330.46ms, fracRes: 0.0254, norm(attn): 0.1289, norm(output): 0.2246, norm(x): 0.2108, norm(y): 1.0051, norm:1.2512, tok/sec: 98516.12, flops:103.39, batch-reuse:1
@ 1029 train 5.8546 , allloss: 5.8556, dt: 1339.09ms, fracRes: 0.0253, norm(attn): 0.1309, norm(output): 0.2256, norm(x): 0.2108, norm(y): 1.0051, norm:1.9620, tok/sec: 97881.48, flops:102.73, batch-reuse:1
@ 1030 train 5.8837 , allloss: 5.8860, dt: 1291.88ms, fracRes: 0.0262, norm(attn): 0.1357, norm(output): 0.2285, norm(x): 0.2115, norm(y): 1.0051, norm:1.7964, tok/sec: 101457.96, flops:106.48, batch-reuse:1
@ 1031 train 5.9231 , allloss: 5.9265, dt: 1312.81ms, fracRes: 0.0282, norm(attn): 0.1318, norm(output): 0.2295, norm(x): 0.2109, norm(y): 1.0051, norm:1.8079, tok/sec: 99840.62, flops:104.78, batch-reuse:1
@ 1032 train 5.8282 , allloss: 5.8293, dt: 1333.76ms, fracRes: 0.0345, norm(attn): 0.1270, norm(output): 0.2295, norm(x): 0.2100, norm(y): 1.0052, norm:1.3734, tok/sec: 98272.66, flops:103.14, batch-reuse:1
@ 1033 train 5.8314 , allloss: 5.8322, dt: 1342.85ms, fracRes: 0.0280, norm(attn): 0.1309, norm(output): 0.2305, norm(x): 0.2117, norm(y): 1.0051, norm:1.2486, tok/sec: 97607.59, flops:102.44, batch-reuse:1
@ 1034 train 5.8031 , allloss: 5.8037, dt: 1314.35ms, fracRes: 0.0279, norm(attn): 0.1328, norm(output): 0.2305, norm(x): 0.2113, norm(y): 1.0051, norm:1.3442, tok/sec: 99723.57, flops:104.66, batch-reuse:1
@ 1035 train 5.8556 , allloss: 5.8562, dt: 1326.84ms, fracRes: 0.0289, norm(attn): 0.1279, norm(output): 0.2275, norm(x): 0.2108, norm(y): 1.0052, norm:1.4617, tok/sec: 98785.41, flops:103.68, batch-reuse:1
@ 1036 train 5.8960 , allloss: 5.8977, dt: 1355.26ms, fracRes: 0.0276, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.2117, norm(y): 1.0052, norm:1.6198, tok/sec: 96713.71, flops:101.50, batch-reuse:1
@ 1037 train 5.8864 , allloss: 5.8886, dt: 1339.08ms, fracRes: 0.0311, norm(attn): 0.1299, norm(output): 0.2305, norm(x): 0.2111, norm(y): 1.0052, norm:1.7364, tok/sec: 97882.05, flops:102.73, batch-reuse:1
@ 1038 train 5.8193 , allloss: 5.8204, dt: 1337.51ms, fracRes: 0.0329, norm(attn): 0.1328, norm(output): 0.2305, norm(x): 0.2111, norm(y): 1.0052, norm:1.4198, tok/sec: 97997.12, flops:102.85, batch-reuse:1
@ 1039 train 5.8161 , allloss: 5.8176, dt: 1333.00ms, fracRes: 0.0267, norm(attn): 0.1367, norm(output): 0.2324, norm(x): 0.2137, norm(y): 1.0051, norm:1.4283, tok/sec: 98328.27, flops:103.20, batch-reuse:1
@ 1040 train 5.7166 , allloss: 5.7173, dt: 1309.36ms, fracRes: 0.0342, norm(attn): 0.1250, norm(output): 0.2305, norm(x): 0.2109, norm(y): 1.0053, norm:1.5005, tok/sec: 100103.87, flops:105.06, batch-reuse:1
@ 1041 train 5.8360 , allloss: 5.8366, dt: 1334.09ms, fracRes: 0.0293, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.2118, norm(y): 1.0053, norm:1.7582, tok/sec: 98247.96, flops:103.11, batch-reuse:1
@ 1042 train 5.7963 , allloss: 5.7970, dt: 1299.71ms, fracRes: 0.0262, norm(attn): 0.1299, norm(output): 0.2314, norm(x): 0.2133, norm(y): 1.0052, norm:1.7158, tok/sec: 100847.13, flops:105.84, batch-reuse:1
@ 1043 train 5.8638 , allloss: 5.8645, dt: 1322.62ms, fracRes: 0.0280, norm(attn): 0.1328, norm(output): 0.2324, norm(x): 0.2126, norm(y): 1.0052, norm:1.5840, tok/sec: 99100.28, flops:104.01, batch-reuse:1
@ 1044 train 5.8759 , allloss: 5.8766, dt: 1320.78ms, fracRes: 0.0274, norm(attn): 0.1357, norm(output): 0.2334, norm(x): 0.2136, norm(y): 1.0051, norm:1.7934, tok/sec: 99238.00, flops:104.15, batch-reuse:1
@ 1045 train 5.8675 , allloss: 5.8680, dt: 1311.63ms, fracRes: 0.0355, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.2121, norm(y): 1.0053, norm:1.5544, tok/sec: 99930.78, flops:104.88, batch-reuse:1
@ 1046 train 5.8307 , allloss: 5.8316, dt: 1337.83ms, fracRes: 0.0270, norm(attn): 0.1318, norm(output): 0.2314, norm(x): 0.2136, norm(y): 1.0052, norm:1.5260, tok/sec: 97973.86, flops:102.83, batch-reuse:1
@ 1047 train 5.7882 , allloss: 5.7896, dt: 1298.71ms, fracRes: 0.0251, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2147, norm(y): 1.0052, norm:1.3806, tok/sec: 100924.87, flops:105.92, batch-reuse:1
@ 1048 train 5.8198 , allloss: 5.8212, dt: 1317.30ms, fracRes: 0.0266, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2149, norm(y): 1.0052, norm:1.5643, tok/sec: 99500.24, flops:104.43, batch-reuse:1
@ 1049 train 5.7802 , allloss: 5.7829, dt: 1344.53ms, fracRes: 0.0316, norm(attn): 0.1279, norm(output): 0.2324, norm(x): 0.2133, norm(y): 1.0053, norm:1.4393, tok/sec: 97485.22, flops:102.31, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.6836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3281, 0.3203, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.0693, 0.4434, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3652, 0.0903, 0.2129, 0.0977, 0.2334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1182, 0.1094, 0.1309, 0.0908, 0.3379, 0.2119, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3516, 0.0703, 0.0698, 0.0236, 0.0952, 0.3809, 0.0068, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0208, 0.1562, 0.0698, 0.2412, 0.0427, 0.0148, 0.4473, 0.0073, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.1494, 0.0786, 0.0640, 0.1021, 0.1680, 0.2236, 0.0879, 0.0420, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0786, 0.0903, 0.0669, 0.0723, 0.1201, 0.0417, 0.1670, 0.2324, 0.0383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0255, 0.0430, 0.0159, 0.0427, 0.1387, 0.0181, 0.2061, 0.2676, 0.0791, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0442, 0.0947, 0.0630, 0.0359, 0.0542, 0.0221, 0.2207, 0.0664, 0.1484, 0.0615, 0.1016, 0.0000, 0.0000, 0.0000],
        [0.0554, 0.0811, 0.0481, 0.2061, 0.0835, 0.0287, 0.1187, 0.0508, 0.0396, 0.0491, 0.0400, 0.1328, 0.0664, 0.0000, 0.0000],
        [0.0476, 0.1328, 0.0679, 0.0684, 0.0728, 0.0972, 0.2129, 0.0498, 0.0352, 0.0344, 0.0356, 0.0713, 0.0356, 0.0393, 0.0000],
        [0.0540, 0.0459, 0.1118, 0.0530, 0.0649, 0.0947, 0.0913, 0.0654, 0.0461, 0.0481, 0.0532, 0.0483, 0.0559, 0.0649, 0.1025]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0040, -0.0294,  0.0572,  ...,  0.0140,  0.0199,  0.0147],
        [ 0.0242,  0.0036,  0.0160,  ..., -0.0138,  0.0310, -0.0008],
        [-0.0424,  0.0013, -0.0088,  ..., -0.0049, -0.0180,  0.0180],
        ...,
        [-0.0432,  0.0027, -0.0615,  ...,  0.0192, -0.0099, -0.0097],
        [ 0.0062, -0.0109,  0.0146,  ...,  0.0345, -0.0071,  0.0156],
        [-0.0250, -0.0025, -0.0287,  ...,  0.0112, -0.0128,  0.0297]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4609,  0.9336, -0.8750,  0.0654, -0.6055, -0.3633, -0.4141, -0.6836, -0.7969, -0.5039, -0.2090, -0.0659, -0.0693, -0.7070, -0.9766,  0.9141,  0.1875,  1.2734, -0.6680, -0.6641, -0.0264, -0.2461, -0.5664,  0.4688, -0.3359,  0.1338,  0.1182, -0.4258, -0.9531,  1.2891,  0.2734, -0.4219,
         0.0771,  0.4453,  0.0742, -1.0781, -0.0050,  0.6602, -0.7578, -0.0052, -0.9141,  0.0991, -0.3281,  0.4297, -1.0781,  0.9688,  0.1787,  0.0718,  0.7461, -0.7070, -0.5117,  0.2637, -0.4941,  1.4766, -0.5977, -0.0947,  0.4004,  0.6133,  0.5273,  0.4336,  0.1094,  0.4355, -0.0320,  0.1045],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0171,  0.0013, -0.0240,  ...,  0.0266,  0.0090,  0.0257],
        [ 0.0177, -0.0295, -0.0231,  ..., -0.0043,  0.0220,  0.0284],
        [-0.0049,  0.0272,  0.0503,  ...,  0.0082,  0.0163, -0.0355],
        ...,
        [ 0.0285,  0.0115,  0.0418,  ..., -0.0070,  0.0182, -0.0205],
        [ 0.0031, -0.0240, -0.0327,  ...,  0.0239, -0.0330, -0.0105],
        [ 0.0390, -0.0100,  0.0302,  ..., -0.0198, -0.0358, -0.0093]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4863,  0.1123,  0.1045, -0.2852, -0.4219,  0.4219, -0.2695, -0.1895, -0.3613, -0.9062,  0.1709, -0.8164,  0.4160, -0.1045,  0.1748, -0.4941, -0.9727,  0.4102,  0.7344, -1.0312,  0.2178,  0.4180, -0.2734,  0.6055, -1.4062, -0.4922,  0.5820,  0.9180, -0.3867,  0.0674,  0.0718,  0.5586,
        -0.6172,  0.5352,  0.3281, -0.5078,  0.0195,  0.5156, -0.4668,  0.1157,  0.1357, -0.7344, -0.4629,  0.2773, -0.2227, -0.2031, -0.2256, -1.0781, -0.2256, -0.1177, -0.4023,  0.7969,  0.0576,  0.6445,  0.2471, -0.6953, -0.4160,  0.4590,  0.3301,  1.2656,  0.2129, -0.8047,  0.1147,  0.5508],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7734, -0.1826,  0.2852, -0.2871,  0.7109,  0.8008, -0.3945, -0.5977, -0.4258, -0.3262,  0.4395,  0.0996, -0.1108,  0.5469],
        [ 0.0000, -0.0245,  0.0664, -0.0972, -0.2256, -0.1279, -0.0952,  0.2539, -0.4707,  0.1729, -0.2559,  0.3281,  0.2930, -0.1523, -0.2207],
        [ 0.0000, -1.6953,  0.1611, -1.2266, -1.5156, -0.5312, -2.9219,  1.9609,  1.1172, -0.0796,  0.0447, -1.6094, -0.1187,  1.0547,  0.3594],
        [ 0.0000, -1.3984, -0.5391, -1.3203, -0.4473,  0.3086, -1.6719,  0.4199,  1.1484, -0.4961,  0.5586, -1.1719, -0.1128,  1.0625, -0.6250],
        [ 0.0000, -0.0757,  0.1016, -0.2656,  1.0547,  0.5859,  0.3457,  0.0786,  0.3145, -0.4883,  0.5195,  0.5156, -0.4629,  0.2695, -0.1113],
        [ 0.0000, -1.6094, -1.6172, -2.7031, -1.3047,  0.0806, -3.9531,  1.4453,  0.9688, -0.9023,  0.3652, -1.7266, -0.4961,  0.6055, -0.3633],
        [ 0.0000,  2.0156,  1.2109,  2.4531,  0.7227, -0.3340,  3.0781, -1.0469, -2.1875,  1.2344, -0.7422,  1.9922,  0.3086, -1.4609,  0.9219],
        [ 0.0000,  0.5625, -0.0776, -0.2812,  0.1846,  0.6836,  0.9727,  0.0347, -0.7070, -0.3340,  0.1895,  0.4941, -0.1235, -0.2676, -0.6875],
        [ 0.0000, -0.1582, -0.0200, -0.3223, -0.2461,  0.2656, -0.7930,  0.5977,  0.9258, -0.8750,  0.1641, -0.4160, -0.2275,  0.2559,  0.5117],
        [ 0.0000, -1.0078, -0.4844, -1.4766, -0.4922,  0.6914, -1.3516,  1.0859,  1.3438,  0.1245,  0.2910, -1.5469, -0.3906,  0.7773, -0.5156],
        [ 0.0000, -0.6680,  0.0918, -0.3145, -0.8750, -0.4688, -1.3672,  0.9375, -0.2656,  0.5430, -0.3438,  0.1582,  0.5938, -0.0859, -0.1143],
        [ 0.0000,  0.3789, -0.1426,  1.3125,  0.4102, -0.6562,  0.7617, -0.0903, -0.3398, -0.1250, -0.3242,  0.8711,  0.1777, -0.6992,  0.6797],
        [ 0.0000,  1.0234,  0.3516,  0.3652,  0.4238,  0.7148,  1.5000,  0.0442, -0.2988, -0.3223, -0.2891,  0.4023, -0.2871, -0.1934,  0.2002],
        [ 0.0000, -0.1631,  0.7266, -0.0187,  0.1855,  0.5625,  0.5234,  0.1895, -0.1602, -0.1167, -0.0140, -0.1123,  0.0356,  0.1846,  0.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3959],
        [0.4059],
        [0.4792],
        [0.3231],
        [0.1253],
        [0.2546],
        [0.0475],
        [0.0641],
        [0.1031],
        [0.0742],
        [0.1066],
        [0.0604],
        [0.0400],
        [0.0686]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0894,     0.9102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.9727,     0.0275,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3145,     0.2129,     0.2988,     0.1729,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1436,     0.3047,     0.3633,     0.1338,     0.0530,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0038,     0.0354,     0.0098,     0.0034,     0.0159,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1846,     0.1562,     0.2412,     0.0928,     0.0461,     0.1396,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2578,     0.0684,     0.1289,     0.0491,     0.0583,     0.0801,     0.1318,     0.2256,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3164,     0.0530,     0.1484,     0.0679,     0.0197,     0.0933,     0.0869,     0.2002,     0.0155,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1602,     0.0879,     0.0894,     0.0742,     0.0518,     0.0776,     0.0845,     0.2891,     0.0320,     0.0525,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0006,     0.0175,     0.0025,     0.0006,     0.0053,     0.0166,     0.0079,     0.0001,     0.0049,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0030,     0.2520,     0.0383,     0.0549,     0.1069,     0.0479,     0.0272,     0.0684,     0.2002,     0.0276,     0.1289,     0.0459,     0.0000,     0.0000,     0.0000],
        [    0.0374,     0.1455,     0.1494,     0.0544,     0.0796,     0.0435,     0.0586,     0.0996,     0.0527,     0.0674,     0.0361,     0.1309,     0.0457,     0.0000,     0.0000],
        [    0.3242,     0.0303,     0.1162,     0.0420,     0.0111,     0.0718,     0.0684,     0.1025,     0.0082,     0.0327,     0.0093,     0.0413,     0.1309,     0.0109,     0.0000],
        [    0.0064,     0.2480,     0.0432,     0.0767,     0.0674,     0.0640,     0.0454,     0.0388,     0.1025,     0.0444,     0.0532,     0.0437,     0.0339,     0.1030,     0.0294]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0010, -0.0058,  0.0263,  ...,  0.0072, -0.0247, -0.0089],
        [-0.0077,  0.0335,  0.0038,  ..., -0.0041,  0.0212,  0.0218],
        [-0.0174,  0.0182,  0.0065,  ...,  0.0116, -0.0218, -0.0049],
        ...,
        [ 0.0242, -0.0331, -0.0200,  ...,  0.0035,  0.0093, -0.0051],
        [-0.0633, -0.0364,  0.0264,  ...,  0.0197, -0.0119, -0.0012],
        [ 0.0443, -0.0017,  0.0319,  ...,  0.0612, -0.0029,  0.0614]], device='cuda:0', requires_grad=True)
K: tensor([-0.6367,  0.4219,  0.6719, -0.8672,  0.2832, -0.7500, -0.5703,  0.3984,  1.0781,  1.8672,  0.2734, -1.0469,  0.1318, -0.5312,  0.3516,  0.7852,  0.1289, -0.9609,  0.2539,  0.9492,  0.0123, -1.0312,  1.4062, -1.2812,  0.3535, -0.3086, -1.1250,  0.7852, -1.0703,  0.8633,  0.0344,  1.4297,
         0.0967,  0.8984, -0.6445, -0.1069, -0.2266,  0.3223,  0.2402, -0.6680, -1.0469, -1.2578,  0.3984, -0.7930,  0.9141, -0.6602, -0.2148,  0.1865, -0.4492, -0.5156, -0.3848, -0.0554,  0.0962, -0.0830,  1.0938, -0.6445, -0.1689, -0.1992, -1.7500,  0.1699,  1.8516,  0.5039,  0.1895, -1.1484],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0174,  0.0403,  0.0149,  ...,  0.0064,  0.0037,  0.0318],
        [ 0.0186, -0.0331,  0.0135,  ...,  0.0545, -0.0174,  0.0095],
        [-0.0121,  0.0065, -0.0056,  ..., -0.0057, -0.0118,  0.0119],
        ...,
        [-0.0393,  0.0043,  0.0463,  ...,  0.0009,  0.0264,  0.0059],
        [ 0.0315, -0.0114, -0.0129,  ..., -0.0132, -0.0254,  0.0267],
        [ 0.0209,  0.0173, -0.0091,  ..., -0.0100,  0.0171, -0.0204]], device='cuda:0', requires_grad=True)
Q: tensor([    -1.2969,      0.2158,      1.6562,     -1.0625,      0.2295,     -0.3457,     -0.2520,      0.6406,      1.2422,     -0.3770,     -0.1060,      0.4004,      0.7148,     -0.2412,     -0.7461,      0.0008,     -0.7695,     -0.5938,      0.2412,      0.3535,      0.7852,      0.1118,
             0.9922,     -0.9336,      0.1011,      0.5742,     -1.0625,      0.1377,     -0.2715,     -0.9922,     -0.0425,      0.2363,      0.7656,      0.3105,     -0.5703,      0.5781,      0.3496,      0.3125,     -0.4395,     -1.7109,     -0.5938,      0.0288,     -0.4551,      0.6602,
             0.4805,      0.5781,     -0.2334,      0.2949,      0.3262,     -0.4199,      0.2559,      0.2734,     -0.6836,     -0.0046,      1.0312,      0.7422,     -0.3711,     -0.2871,     -1.3359,      0.2773,      0.2334,     -0.8828,     -0.4316,      0.5039], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.3281,  1.2578,  1.6719,  1.4766,  1.5234,  1.7656,  1.4844,  1.0234,  1.0625,  1.5703,  1.2500,  1.4922,  1.4219,  1.3438],
        [ 0.0000,  7.1875,  3.6094,  4.9062,  6.1250,  4.9062,  4.0312,  5.1562,  7.1250,  4.1875,  6.4375,  4.3438,  4.0938,  7.0312,  2.1406],
        [ 0.0000, -0.3926, -0.0491, -0.5977, -1.0703, -0.5586, -0.1299,  0.0894, -1.6172, -1.0312, -1.6484, -0.5781, -0.1089, -1.2266,  0.3594],
        [ 0.0000,  0.7539,  0.9297, -0.0723, -0.9961,  0.2100, -0.0688,  0.8008, -1.2188, -0.5156, -0.5938,  0.1211,  0.7617, -1.0156,  0.3750],
        [ 0.0000, -5.5000, -3.2656, -4.5625, -5.6250, -4.0625, -3.1406, -3.5625, -6.5625, -4.4062, -5.4062, -4.1250, -3.2031, -6.0938, -1.7891],
        [ 0.0000, -0.1641,  0.2676, -0.6914, -1.3906, -0.2773, -0.2852, -0.3164, -1.7344, -1.1719, -1.6172, -0.6367, -0.3867, -1.5391,  0.1147],
        [ 0.0000, -1.3281, -0.6875, -1.6562, -1.4844, -1.1641, -0.6680, -0.1299, -1.8516, -0.9961, -2.2188, -0.7344, -0.8750, -1.7422, -0.4805],
        [ 0.0000, -1.7891, -0.7578, -1.5391, -2.7812, -1.2188, -1.2891, -0.4570, -3.0156, -1.8359, -2.9688, -1.6250, -0.4512, -2.7344, -0.8945],
        [ 0.0000, -0.6016, -0.5820, -0.7695, -1.1328, -0.7227, -0.6445,  0.5898, -1.6094, -1.1172, -1.1719, -0.4219, -0.1367, -1.2656, -0.4844],
        [ 0.0000, -7.3125, -3.9844, -5.9062, -7.3438, -5.1875, -4.0312, -4.7812, -8.8750, -5.2500, -8.3125, -5.3750, -4.0938, -8.3750, -2.4531],
        [ 0.0000,  4.4375,  2.5625,  2.9219,  3.5781,  2.7812,  2.2188,  3.1250,  4.2188,  2.2344,  3.7656,  2.7344,  2.7344,  4.3125,  1.5547],
        [ 0.0000,  1.3594,  1.3828,  0.3770,  0.7539,  0.1494,  0.4492,  0.9805,  0.3457,  0.5898, -0.0306,  1.2500,  0.2002,  0.4805,  1.2578],
        [ 0.0000, -2.3750, -1.0234, -2.0469, -3.3750, -1.5156, -1.5547, -1.1562, -3.6875, -2.2969, -3.5469, -2.0625, -0.9102, -3.4062, -1.0156],
        [ 0.0000,  3.6562,  1.9141,  2.4844,  2.3594,  2.3125,  1.9688,  1.8047,  2.7812,  1.9453,  2.1250,  1.9297,  1.6719,  2.7812,  1.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1806],
        [0.0079],
        [0.3172],
        [0.1437],
        [0.6820],
        [0.2054],
        [0.3645],
        [0.2540],
        [0.1232],
        [0.7191],
        [0.0119],
        [0.1767],
        [0.2368],
        [0.0203]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.6680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5078, 0.3125, 0.1777, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4082, 0.3379, 0.1367, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7148, 0.1445, 0.0623, 0.0442, 0.0361, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.1396, 0.1797, 0.1553, 0.1807, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.0991, 0.0359, 0.0334, 0.0168, 0.2344, 0.0105, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.1387, 0.0386, 0.0454, 0.0095, 0.1709, 0.0037, 0.0079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5039, 0.1191, 0.0522, 0.0391, 0.0225, 0.2002, 0.0139, 0.0265, 0.0243, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1387, 0.0703, 0.0469, 0.0806, 0.1729, 0.0210, 0.0344, 0.1289, 0.1758, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.0535, 0.0830, 0.0791, 0.1816, 0.0581, 0.0840, 0.1084, 0.1621, 0.0981, 0.0435, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.1514, 0.0737, 0.0593, 0.0310, 0.1260, 0.0149, 0.0245, 0.0532, 0.1235, 0.0845, 0.0737, 0.0000, 0.0000, 0.0000],
        [0.4277, 0.1064, 0.0408, 0.0393, 0.0104, 0.1572, 0.0032, 0.0105, 0.0334, 0.0713, 0.0488, 0.0284, 0.0227, 0.0000, 0.0000],
        [0.3281, 0.0869, 0.0437, 0.0361, 0.0217, 0.1533, 0.0156, 0.0265, 0.0225, 0.0664, 0.0894, 0.0371, 0.0471, 0.0255, 0.0000],
        [0.2314, 0.0864, 0.0474, 0.0515, 0.0229, 0.1187, 0.0234, 0.0320, 0.0344, 0.0415, 0.1396, 0.0405, 0.0447, 0.0442, 0.0420]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0070,      0.0262,     -0.0000,  ...,     -0.0041,     -0.0163,      0.0227],
        [    -0.0266,      0.0065,      0.0020,  ...,      0.0095,      0.0314,      0.0134],
        [     0.0077,     -0.0204,     -0.0054,  ...,      0.0038,      0.0272,      0.0094],
        ...,
        [     0.0114,      0.0051,     -0.0249,  ...,      0.0204,      0.0080,     -0.0059],
        [    -0.0031,      0.0221,     -0.0278,  ...,      0.0233,      0.0217,      0.0104],
        [     0.0061,     -0.0121,      0.0205,  ...,     -0.0523,     -0.0367,     -0.0146]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9453, -0.1768,  0.2754, -0.2656, -1.1250, -0.2207,  0.4785, -0.2910, -0.6836,  0.3750,  0.1250, -0.8047, -1.5938, -0.4141,  0.2451,  0.6445,  0.1797, -0.2676,  0.5586, -0.1670, -0.7891, -0.3926, -1.3516,  0.1455, -0.3418,  0.5000,  0.7539,  0.9297,  0.9961, -0.8750, -1.0625,  0.9531,
        -0.6523,  0.5156,  0.0894,  0.8633, -1.0391, -0.2578, -0.3789,  1.4375,  0.2266, -0.9023,  1.8672,  0.1611,  0.0022, -0.5938,  0.2793, -0.0564, -0.5859,  0.3555, -0.3613, -1.2812, -1.6406, -0.9062,  0.7266, -0.7344, -1.2578,  0.9688,  1.0156, -1.6953, -0.3848, -0.3242,  0.9883, -1.0234],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0059, -0.0298,  0.0270,  ...,  0.0155, -0.0018,  0.0235],
        [-0.0245, -0.0162,  0.0283,  ..., -0.0007, -0.0202, -0.0178],
        [-0.0388, -0.0098, -0.0148,  ..., -0.0568, -0.0646, -0.0468],
        ...,
        [-0.0312, -0.0004,  0.0403,  ..., -0.0005, -0.0421, -0.0361],
        [ 0.0195,  0.0148, -0.0091,  ..., -0.0681, -0.0281,  0.0171],
        [ 0.0301,  0.0009,  0.0053,  ..., -0.0069,  0.0122,  0.0284]], device='cuda:0', requires_grad=True)
Q: tensor([-1.3516, -0.1187,  0.7383, -0.1963,  0.8164,  0.1113, -0.3379, -0.1523,  0.1729, -0.6172, -0.0781,  0.4102,  0.0017,  0.1045, -0.7930, -0.2393, -0.4766,  0.3301, -0.6406, -0.5938,  0.4414,  0.0894, -0.3516, -0.5938, -0.0688, -0.1162, -0.4629,  0.4180,  0.3613,  0.3105,  1.2109,  0.1064,
         0.6094, -0.0618,  0.6406, -0.0510,  0.7266,  0.8438,  0.1484, -0.3750,  1.0469,  0.4219, -0.2334, -0.5938,  0.1650,  0.3711,  0.6719,  0.1465,  0.4512, -0.8242,  0.7617,  0.3320,  0.1406,  0.2734, -0.0991,  0.9297,  0.6250, -1.6719,  0.1094,  1.4766,  0.9258, -1.0938,  0.8633, -0.1768],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7070,  0.9023,  0.8633,  1.3359,  0.5391,  1.0000,  1.5781,  1.4688,  0.2949, -0.2451,  1.1094,  0.9844,  1.4141,  0.7773],
        [ 0.0000, -0.4863, -1.0547, -1.3281, -1.9375, -0.5039, -2.4219, -1.8906, -1.3281, -1.0312, -0.8281, -1.2656, -1.5391, -1.1797, -1.3672],
        [ 0.0000, -0.1895, -1.0938, -1.2422, -1.4922,  0.2949, -2.0469, -1.3203, -0.6133, -0.4434, -0.7656, -1.0781, -0.8125, -0.4766, -1.3281],
        [ 0.0000, -1.5938, -2.4375, -2.7812, -2.9844, -0.2754, -3.6250, -2.7031, -2.6875, -1.8047, -1.3594, -2.7500, -1.8984, -2.4844, -2.3594],
        [ 0.0000, -0.3613, -0.1104, -0.2578, -0.1064, -0.3223, -0.3594, -0.3066, -0.2490, -0.3672, -0.3848, -0.2793, -0.4316, -0.3047,  0.1924],
        [ 0.0000, -1.7500, -2.7656, -2.8438, -3.5156, -0.8867, -4.0000, -3.4375, -3.1094, -2.3750, -1.6953, -3.0938, -2.8906, -2.9062, -2.7500],
        [ 0.0000, -1.4453, -2.7188, -2.5625, -4.1250, -1.2266, -5.0625, -4.3125, -2.9062, -1.7969, -2.0156, -3.2344, -3.1406, -2.6406, -3.3438],
        [ 0.0000, -1.4375, -2.2656, -2.5625, -3.1094, -0.9219, -3.5781, -2.9375, -3.0312, -1.7812, -1.4531, -2.5312, -2.1875, -2.8906, -2.2656],
        [ 0.0000,  0.0635, -0.6172, -1.0234, -0.4805,  0.2832, -1.8281, -1.3281, -0.0108,  0.2988, -0.8086, -0.5391, -0.4844,  0.0630, -0.7148],
        [ 0.0000,  0.0986,  0.5391,  0.4902,  1.3203,  0.1816,  0.5508,  0.8047,  1.2031,  0.7031, -0.1108,  0.7734,  0.3867,  1.0938,  0.2578],
        [ 0.0000, -0.1924, -0.9102, -1.1328, -1.7812, -0.3809, -2.5156, -2.0156, -1.2422, -0.3965, -0.7773, -0.9141, -1.5391, -1.0703, -1.4453],
        [ 0.0000, -1.3906, -2.3438, -2.3906, -3.7031, -0.9961, -4.9062, -3.7031, -2.5469, -1.7969, -2.1719, -2.7031, -2.9375, -2.3438, -2.8438],
        [ 0.0000, -1.3281, -2.0156, -2.2031, -2.7188, -0.7617, -3.0469, -2.5156, -2.6875, -1.5938, -1.3047, -2.1875, -1.9453, -2.5469, -1.8672],
        [ 0.0000, -0.9844, -1.5859, -1.5000, -2.3125, -0.6680, -2.2812, -1.9766, -1.9062, -1.7109, -0.5039, -1.7422, -1.6406, -1.6484, -1.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4870],
        [0.5767],
        [0.5155],
        [0.5716],
        [0.1703],
        [0.4059],
        [0.5184],
        [0.3796],
        [0.2022],
        [0.0746],
        [0.2538],
        [0.3254],
        [0.2644],
        [0.1906]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5664, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.6914, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0820, 0.5273, 0.2500, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1211, 0.3438, 0.1729, 0.1099, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.3301, 0.2520, 0.0552, 0.1846, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.2178, 0.0938, 0.0522, 0.1113, 0.1504, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0513, 0.1650, 0.1050, 0.0459, 0.0674, 0.0427, 0.3066, 0.2158, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0547, 0.1875, 0.0996, 0.0376, 0.0630, 0.0684, 0.2217, 0.1729, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1455, 0.0791, 0.1631, 0.0723, 0.0359, 0.0752, 0.1289, 0.1064, 0.0500, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0903, 0.1416, 0.1050, 0.0181, 0.0361, 0.0273, 0.2021, 0.1230, 0.0479, 0.1279, 0.0806, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0029, 0.0593, 0.0120, 0.0349, 0.0942, 0.0376, 0.1260, 0.1934, 0.0679, 0.0684, 0.2812, 0.0221, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0845, 0.1011, 0.0275, 0.0267, 0.0309, 0.1436, 0.1147, 0.0356, 0.0801, 0.0762, 0.1104, 0.0923, 0.0000, 0.0000],
        [0.0398, 0.1074, 0.0698, 0.0258, 0.0332, 0.0425, 0.1172, 0.0947, 0.0535, 0.0796, 0.0889, 0.0952, 0.0835, 0.0688, 0.0000],
        [0.0679, 0.0625, 0.0447, 0.0588, 0.0535, 0.0544, 0.0991, 0.0786, 0.0593, 0.0486, 0.0684, 0.0527, 0.0623, 0.0630, 0.1260]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0168,  0.0316,  0.0295,  ...,  0.0095,  0.0369, -0.0368],
        [ 0.0036, -0.0561,  0.0191,  ...,  0.0125, -0.0110,  0.0484],
        [ 0.0224,  0.0151, -0.0377,  ..., -0.0094, -0.0153,  0.0246],
        ...,
        [-0.0106, -0.0055, -0.0138,  ..., -0.0233, -0.0490,  0.0279],
        [-0.0058,  0.0212, -0.0286,  ..., -0.0430,  0.0020,  0.0121],
        [-0.0164, -0.0100, -0.0216,  ..., -0.0407, -0.0124,  0.0191]], device='cuda:0', requires_grad=True)
K: tensor([ 0.9023,  0.1196, -0.7539, -0.3711,  0.0337, -0.9453, -0.6445, -1.0469, -0.8828, -1.8281,  0.3184,  1.0000,  0.3418, -1.4688,  0.9375, -0.0996,  0.2402, -0.4590, -0.0498, -0.6289,  1.4297,  0.6836,  0.5859,  0.0767,  1.1797,  1.1484, -1.4609, -0.9258,  0.2324,  0.9648,  0.1113,  0.1318,
         0.8008, -0.0442, -1.4062, -0.4688,  1.0156,  0.2295,  0.0217, -1.0781,  0.8086,  0.6406,  0.4492,  0.6055,  1.4766,  0.6367,  0.7539,  1.7109,  1.2500,  0.5469, -0.0977, -2.0000,  0.8789,  0.7891,  0.7188,  1.7188, -1.1406,  0.5156,  0.3340,  0.1582,  0.6055,  0.1914, -0.1484,  1.5859],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0042, -0.0211, -0.0430,  ...,  0.0280, -0.0012, -0.0119],
        [-0.0328, -0.0453,  0.0127,  ..., -0.0236, -0.0154, -0.0730],
        [ 0.0253, -0.0023, -0.0157,  ...,  0.0218,  0.0059,  0.0270],
        ...,
        [-0.0110,  0.0207, -0.0007,  ...,  0.0035,  0.0171,  0.0024],
        [ 0.0241,  0.0190, -0.0081,  ..., -0.0124,  0.0051,  0.0078],
        [-0.0109,  0.0474,  0.0057,  ..., -0.0053,  0.0139,  0.0110]], device='cuda:0', requires_grad=True)
Q: tensor([-1.4766, -0.4922, -1.1875,  0.2637, -0.5430, -0.3105, -0.7773, -0.3262,  0.3105,  0.1924, -0.2061,  0.9414,  0.0081, -0.0688,  0.9883,  0.1196,  0.6016, -0.1104, -0.6367, -0.9141,  0.0156,  0.5039,  0.3691,  0.0640,  1.0859, -0.5352, -0.4785, -0.1670,  0.6797, -0.3633, -0.6992,  0.3535,
         0.1855,  0.3320,  0.1924, -0.7852,  1.2812, -0.8242,  0.8906, -0.0557, -0.6953, -1.2656, -0.6055, -0.6328, -0.5742, -0.6211, -0.4922,  1.2578, -0.5078,  0.7422,  0.6484, -0.1338,  0.6250,  2.0156, -0.1055, -0.4023, -0.4531, -0.0820, -0.5156, -0.3145,  0.6016,  0.5742,  0.2812, -0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.2598,      0.0618,      0.0471,      0.5391,      0.2734,      1.5547,      1.4297,      0.4863,      0.4766,      1.2109,     -0.2061,      1.1797,      0.5469,      1.3047],
        [     0.0000,      2.1562,      1.0469,      2.0469,      3.1562,      2.0000,      3.5781,      3.8438,      2.5781,      2.4375,      3.6875,      1.1875,      2.9062,      2.5938,      1.9609],
        [     0.0000,      1.8594,      1.1094,      0.5352,      1.7031,      0.0327,      2.9219,      2.5156,      0.9023,      1.4609,      2.2656,      0.9414,      1.7266,      1.0547,      2.8281],
        [     0.0000,      1.0391,      0.3574,     -0.0991,      0.7344,      0.1416,      1.7656,      1.2578,      0.2031,      0.8633,      1.1641,      0.3594,      1.2812,      0.4141,      2.3281],
        [     0.0000,      1.5234,      1.2578,     -0.2676,      0.9375,      0.3887,      2.6406,      1.8047,      1.0391,      1.6484,      1.4531,      1.2109,      1.2031,      1.3125,      2.4844],
        [     0.0000,      0.6719,     -0.1738,     -0.7578,     -0.0022,      0.2969,      0.8594,      0.3945,      0.1514,      0.1553,      0.2129,     -0.1084,      0.2256,      0.3145,      1.0391],
        [     0.0000,      1.1719,      0.7148,     -0.1104,      0.2715,     -0.1846,      1.7891,      1.4375,      0.0435,      0.9805,      1.3516,      0.9336,      1.0000,      0.3027,      2.0781],
        [     0.0000,      1.2344,      0.5977,     -0.3750,      0.1387,      0.2227,      1.3984,      1.1484,      0.5664,      0.7852,      1.0078,      0.8242,      0.9375,      0.7969,      1.8672],
        [     0.0000,     -0.6055,      0.1147,     -0.6953,     -1.3984,     -0.6602,     -0.1240,     -0.3145,     -1.0625,     -0.0115,     -0.2559,      0.2461,      0.0986,     -0.8242,      0.5234],
        [     0.0000,      0.4512,      0.1543,     -1.6094,     -0.9102,     -1.1953,      0.8086,      0.3086,     -0.6328,      0.3477,     -0.1157,      0.0991,     -0.0206,     -0.3203,      1.3906],
        [     0.0000,      3.0156,      1.4141,      2.4844,      3.4688,      2.5469,      3.7656,      4.1875,      3.1406,      3.1562,      4.5625,      2.0156,      3.3438,      3.2812,      2.4375],
        [     0.0000,      0.1035,      0.2812,     -1.0234,     -1.0547,     -0.9062,      0.6328,      0.4062,     -0.7617,      0.0464,     -0.0029,      0.3691,      0.1875,     -0.5078,      1.2891],
        [     0.0000,      0.9961,      0.5625,     -0.4355,     -0.1807,      0.0645,      1.0781,      0.8672,      0.2988,      0.6953,      0.8047,      0.8750,      0.7422,      0.5469,      1.6094],
        [     0.0000,     -0.0835,     -0.4199,     -0.1436,     -0.2422,     -0.2217,      0.3789,      0.1475,     -0.1348,     -0.3359,      0.0038,     -0.2520,     -0.0894,     -0.0747,      0.6172]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4247],
        [0.0670],
        [0.1249],
        [0.2323],
        [0.1086],
        [0.2810],
        [0.1376],
        [0.0859],
        [0.0798],
        [0.1627],
        [0.0040],
        [0.1424],
        [0.0499],
        [0.1295]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1660, 0.8359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.3965, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1855, 0.3281, 0.1973, 0.2891, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0349, 0.1924, 0.0688, 0.1475, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.0986, 0.0537, 0.0635, 0.2617, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1289, 0.0557, 0.0126, 0.0205, 0.0815, 0.1040, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1982, 0.0315, 0.0043, 0.0062, 0.1016, 0.0117, 0.6133, 0.0347, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0825, 0.0354, 0.0181, 0.0302, 0.0820, 0.1260, 0.4277, 0.0879, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0728, 0.0356, 0.0476, 0.1289, 0.0850, 0.2012, 0.0957, 0.2041, 0.0544, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0640, 0.0242, 0.0109, 0.0131, 0.0737, 0.0854, 0.3223, 0.0554, 0.1885, 0.0278, 0.1338, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0432, 0.0752, 0.0825, 0.0737, 0.1240, 0.0422, 0.0757, 0.1426, 0.1138, 0.0640, 0.0947, 0.0684, 0.0000, 0.0000, 0.0000],
        [0.0938, 0.0276, 0.0044, 0.0063, 0.0869, 0.0273, 0.3496, 0.0327, 0.1709, 0.0083, 0.0923, 0.0140, 0.0845, 0.0000, 0.0000],
        [0.0449, 0.0245, 0.0142, 0.0205, 0.0400, 0.1216, 0.1738, 0.0518, 0.0923, 0.0391, 0.0737, 0.0593, 0.1011, 0.1436, 0.0000],
        [0.0498, 0.0299, 0.0166, 0.0165, 0.0500, 0.0542, 0.0938, 0.0347, 0.0981, 0.0320, 0.0618, 0.0552, 0.0635, 0.1475, 0.1963]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0072,  0.0223, -0.0029,  ..., -0.0237,  0.0035, -0.0469],
        [ 0.0323,  0.0094,  0.0533,  ..., -0.0526, -0.0309,  0.0022],
        [-0.0002, -0.0075,  0.0055,  ...,  0.0514,  0.0094, -0.0332],
        ...,
        [ 0.0033, -0.0126, -0.0090,  ..., -0.0481, -0.0276,  0.0124],
        [ 0.0127,  0.0219,  0.0250,  ...,  0.0223, -0.0108,  0.0050],
        [-0.0128,  0.0211, -0.0292,  ..., -0.0087, -0.0134,  0.0037]], device='cuda:0', requires_grad=True)
K: tensor([-0.6094, -0.0063,  0.3867,  0.6836, -0.9062,  0.5898, -0.0618,  1.3672,  0.0466,  1.2344, -0.5195,  0.2578, -0.5703, -0.3750,  0.7969, -1.8594, -0.4727, -0.5312, -0.4551,  0.2168, -1.3984,  0.0359, -1.3203,  1.7656, -0.1475, -0.7461, -0.7578, -1.2656, -0.2383, -0.9570, -0.2559,  1.1406,
         0.2188,  0.0776,  0.1494,  0.0371,  1.2422, -0.1436,  1.3047, -1.5000, -0.4609, -0.1699,  0.9727,  0.5117,  0.8438, -0.5430, -0.5664,  0.3828, -1.6641, -0.8516,  0.7109, -0.9297, -1.0000,  0.4570, -0.8750, -0.2578, -1.1016, -0.6094, -0.7500, -0.7617,  1.3828,  1.0781, -0.4043,  0.0376],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0048,  0.0343, -0.0214,  ...,  0.0024,  0.0041,  0.0222],
        [-0.0039, -0.0065,  0.0322,  ..., -0.0056, -0.0106,  0.0059],
        [-0.0091,  0.0263, -0.0268,  ...,  0.0134,  0.0075,  0.0111],
        ...,
        [ 0.0076,  0.0408, -0.0088,  ..., -0.0016,  0.0171, -0.0100],
        [ 0.0070, -0.0007, -0.0007,  ...,  0.0317, -0.0298,  0.0233],
        [ 0.0286, -0.0049, -0.0163,  ..., -0.0063, -0.0057, -0.0259]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1006,  0.6680, -0.1465,  0.6641, -0.9375, -0.4727,  0.8242,  0.2812, -0.9961, -1.3047,  0.2949, -0.1709, -0.3203, -0.1196,  0.1602, -2.7500,  0.0962, -0.8711, -1.2812, -1.1562, -1.3672, -0.6836, -0.3555, -0.2168, -0.3105, -0.9961, -0.2119,  0.8984, -0.0452, -0.8242,  0.7656, -0.7422,
         0.0801,  0.0427, -1.2500,  0.1523,  0.8828, -0.0398, -0.8125,  1.2188, -1.0312,  0.1060,  0.9062,  0.4844,  0.2041, -0.8086,  1.0625,  0.8633, -0.2617, -1.0156, -0.2148, -0.2559, -0.2178, -0.5430, -0.2578,  0.3730,  0.2852, -0.2002, -1.1797,  0.5234,  0.5156,  1.1953, -0.1494,  0.4004],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.6172,  0.8633,  1.1484,  2.3906,  0.5039,  1.7656,  1.6328,  1.5312,  0.6016,  0.6211,  1.0547,  0.8750,  1.3516,  1.5625],
        [ 0.0000,  1.4141,  1.6562,  1.9062,  2.5469,  0.9297,  1.0469,  1.7891,  1.7500,  1.4062,  1.2109,  1.6328,  1.2266,  1.5703,  1.1953],
        [ 0.0000,  0.5703,  0.0601,  0.4434,  2.2656, -0.1445,  1.4531,  1.0156,  1.2422, -0.4355,  0.3555,  0.2891,  0.2246,  1.1094,  1.1484],
        [ 0.0000,  1.7031,  0.6797,  1.4453,  2.7656,  2.1562,  2.7656,  2.0938,  2.7969,  1.1797,  1.9609,  1.6719,  2.1250,  2.9688,  2.9844],
        [ 0.0000, -0.6836, -1.2891, -1.1250,  0.2949,  0.5117,  1.3359,  0.0840,  0.9062, -0.6992,  0.6250, -0.0583,  0.6680,  1.2500,  1.6797],
        [ 0.0000, -0.8398, -2.3281, -1.8359, -0.4551, -0.2119,  1.5312, -0.3594,  0.7188, -1.2031,  0.2520, -0.9492,  0.2969,  1.1875,  1.8750],
        [ 0.0000, -1.8359, -3.8281, -3.4688, -0.6680, -2.8281,  1.1328, -1.7422, -0.5742, -4.2500, -1.7109, -3.1562, -1.5391, -0.3926,  1.2500],
        [ 0.0000, -0.8477, -1.5234, -1.0078, -0.0092,  0.4180,  1.6406,  0.0618,  0.2949, -0.9883, -0.2402, -0.2256,  0.1895,  0.5156,  1.4922],
        [ 0.0000, -0.0378, -0.7539, -0.4648,  0.5312,  0.1147,  0.9766,  0.2344,  0.9961, -0.3281,  0.7148,  0.4941,  0.6172,  1.3359,  1.9922],
        [ 0.0000, -0.9688, -1.7734, -1.5781,  0.1445,  0.2930,  1.6250, -0.1396,  1.0859, -0.8320,  0.7422, -0.3828,  0.6953,  1.6562,  2.2500],
        [ 0.0000,  0.5586,  0.6484,  0.5391,  1.0547, -0.0211,  0.5586,  1.1953,  0.9727,  0.3887,  0.7852,  0.4570,  0.6719,  0.9766,  0.4961],
        [ 0.0000, -1.2266, -3.0625, -2.7031, -0.0786, -1.2344,  1.3125, -1.0547,  0.6016, -2.4219, -0.0164, -1.8984, -0.1045,  1.0625,  2.0938],
        [ 0.0000, -0.6016, -1.1562, -0.7812, -0.1157,  0.9961,  1.3516,  0.1416,  0.7188, -0.1367,  0.4941,  0.2773,  0.8086,  1.1641,  1.6328],
        [ 0.0000, -0.5117, -1.1016, -1.1016,  0.0052,  0.0859,  0.6328, -0.3652,  0.6797, -0.4453,  0.2148,  0.1035,  0.2441,  1.0859,  1.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2261],
        [0.0967],
        [0.1602],
        [0.1079],
        [0.2279],
        [0.1462],
        [0.1354],
        [0.0859],
        [0.0550],
        [0.0643],
        [0.0536],
        [0.0747],
        [0.0522],
        [0.0604]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0933 a:0.0469,:0.1035 and:0.1118ology:0.0254,:0.2578 a:0.0327
:0.1865)


------
		( a:0.0469,:0.1035 and:0.1118ology:0.0254,:0.2578 a:0.0327
:0.1865-:0.0884)
- The first time, the same time, and the same time, and
@ 1050 train 5.8253 , allloss: 5.8263, dt: 1740.50ms, fracRes: 0.0318, norm(attn): 0.1289, norm(output): 0.2314, norm(x): 0.2132, norm(y): 1.0053, norm:1.6398, tok/sec: 75307.24, flops:79.04, batch-reuse:1
@ 1051 train 5.7746 , allloss: 5.7770, dt: 1290.29ms, fracRes: 0.0269, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.2154, norm(y): 1.0051, norm:1.5693, tok/sec: 101583.41, flops:106.61, batch-reuse:1
@ 1052 train 5.7744 , allloss: 5.7752, dt: 1303.02ms, fracRes: 0.0305, norm(attn): 0.1260, norm(output): 0.2334, norm(x): 0.2135, norm(y): 1.0053, norm:1.2765, tok/sec: 100590.99, flops:105.57, batch-reuse:1
@ 1053 train 5.8070 , allloss: 5.8078, dt: 1287.86ms, fracRes: 0.0303, norm(attn): 0.1270, norm(output): 0.2334, norm(x): 0.2138, norm(y): 1.0053, norm:1.7141, tok/sec: 101774.69, flops:106.81, batch-reuse:1
@ 1054 train 5.7717 , allloss: 5.7728, dt: 1314.56ms, fracRes: 0.0299, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.2149, norm(y): 1.0052, norm:1.0953, tok/sec: 99707.53, flops:104.64, batch-reuse:1
@ 1055 train 5.7650 , allloss: 5.7664, dt: 1300.62ms, fracRes: 0.0316, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.2154, norm(y): 1.0052, norm:1.3549, tok/sec: 100776.55, flops:105.77, batch-reuse:1
@ 1056 train 5.7881 , allloss: 5.7904, dt: 1303.15ms, fracRes: 0.0331, norm(attn): 0.1328, norm(output): 0.2334, norm(x): 0.2153, norm(y): 1.0052, norm:1.7436, tok/sec: 100581.22, flops:105.56, batch-reuse:1
@ 1057 train 5.7962 , allloss: 5.7980, dt: 1333.53ms, fracRes: 0.0323, norm(attn): 0.1348, norm(output): 0.2334, norm(x): 0.2159, norm(y): 1.0052, norm:1.2702, tok/sec: 98289.59, flops:103.16, batch-reuse:1
@ 1058 train 5.8197 , allloss: 5.8207, dt: 1308.47ms, fracRes: 0.0308, norm(attn): 0.1270, norm(output): 0.2344, norm(x): 0.2158, norm(y): 1.0053, norm:1.4441, tok/sec: 100172.08, flops:105.13, batch-reuse:1
@ 1059 train 5.8103 , allloss: 5.8125, dt: 1291.08ms, fracRes: 0.0276, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.2162, norm(y): 1.0052, norm:2.0416, tok/sec: 101521.11, flops:106.55, batch-reuse:1
@ 1060 train 5.8310 , allloss: 5.8323, dt: 1312.10ms, fracRes: 0.0300, norm(attn): 0.1299, norm(output): 0.2334, norm(x): 0.2155, norm(y): 1.0053, norm:1.2989, tok/sec: 99894.56, flops:104.84, batch-reuse:1
@ 1061 train 5.8637 , allloss: 5.8650, dt: 1371.12ms, fracRes: 0.0331, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.2155, norm(y): 1.0053, norm:2.2395, tok/sec: 95595.18, flops:100.33, batch-reuse:1
@ 1062 train 5.7810 , allloss: 5.7826, dt: 1354.74ms, fracRes: 0.0363, norm(attn): 0.1338, norm(output): 0.2334, norm(x): 0.2152, norm(y): 1.0053, norm:1.4680, tok/sec: 96750.83, flops:101.54, batch-reuse:1
@ 1063 train 5.7788 , allloss: 5.7813, dt: 1347.23ms, fracRes: 0.0341, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.2154, norm(y): 1.0053, norm:1.5633, tok/sec: 97290.33, flops:102.11, batch-reuse:1
@ 1064 train 5.8553 , allloss: 5.8566, dt: 1334.07ms, fracRes: 0.0290, norm(attn): 0.1348, norm(output): 0.2344, norm(x): 0.2165, norm(y): 1.0052, norm:1.4222, tok/sec: 98249.79, flops:103.11, batch-reuse:1
@ 1065 train 5.8751 , allloss: 5.8758, dt: 1357.01ms, fracRes: 0.0308, norm(attn): 0.1299, norm(output): 0.2344, norm(x): 0.2166, norm(y): 1.0053, norm:1.4792, tok/sec: 96588.48, flops:101.37, batch-reuse:1
@ 1066 train 5.8329 , allloss: 5.8358, dt: 1363.75ms, fracRes: 0.0368, norm(attn): 0.1279, norm(output): 0.2334, norm(x): 0.2151, norm(y): 1.0054, norm:1.5296, tok/sec: 96111.54, flops:100.87, batch-reuse:1
@ 1067 train 5.8170 , allloss: 5.8181, dt: 1332.18ms, fracRes: 0.0331, norm(attn): 0.1357, norm(output): 0.2344, norm(x): 0.2159, norm(y): 1.0053, norm:1.8726, tok/sec: 98389.26, flops:103.26, batch-reuse:1
@ 1068 train 5.7967 , allloss: 5.7981, dt: 1289.04ms, fracRes: 0.0279, norm(attn): 0.1387, norm(output): 0.2344, norm(x): 0.2175, norm(y): 1.0052, norm:1.4196, tok/sec: 101681.60, flops:106.72, batch-reuse:1
@ 1069 train 5.7371 , allloss: 5.7400, dt: 1307.31ms, fracRes: 0.0297, norm(attn): 0.1299, norm(output): 0.2344, norm(x): 0.2163, norm(y): 1.0053, norm:1.4291, tok/sec: 100260.81, flops:105.23, batch-reuse:1
@ 1070 train 5.7672 , allloss: 5.7679, dt: 1285.38ms, fracRes: 0.0309, norm(attn): 0.1289, norm(output): 0.2344, norm(x): 0.2167, norm(y): 1.0054, norm:1.5079, tok/sec: 101971.20, flops:107.02, batch-reuse:1
@ 1071 train 5.6783 , allloss: 5.6797, dt: 1302.07ms, fracRes: 0.0322, norm(attn): 0.1318, norm(output): 0.2344, norm(x): 0.2167, norm(y): 1.0054, norm:1.4201, tok/sec: 100664.17, flops:105.65, batch-reuse:1
@ 1072 train 5.8004 , allloss: 5.8016, dt: 1335.57ms, fracRes: 0.0343, norm(attn): 0.1348, norm(output): 0.2354, norm(x): 0.2174, norm(y): 1.0054, norm:1.9006, tok/sec: 98139.31, flops:103.00, batch-reuse:1
@ 1073 train 5.7136 , allloss: 5.7175, dt: 1339.31ms, fracRes: 0.0325, norm(attn): 0.1377, norm(output): 0.2344, norm(x): 0.2183, norm(y): 1.0053, norm:1.6825, tok/sec: 97865.65, flops:102.71, batch-reuse:1
@ 1074 train 5.7044 , allloss: 5.7087, dt: 1286.87ms, fracRes: 0.0322, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.2193, norm(y): 1.0053, norm:1.2534, tok/sec: 101852.99, flops:106.90, batch-reuse:1
@ 1075 train 5.7395 , allloss: 5.7407, dt: 1295.78ms, fracRes: 0.0317, norm(attn): 0.1328, norm(output): 0.2344, norm(x): 0.2182, norm(y): 1.0054, norm:1.1755, tok/sec: 101153.18, flops:106.16, batch-reuse:1
@ 1076 train 5.7970 , allloss: 5.7987, dt: 1282.42ms, fracRes: 0.0285, norm(attn): 0.1348, norm(output): 0.2354, norm(x): 0.2192, norm(y): 1.0053, norm:1.5276, tok/sec: 102207.06, flops:107.27, batch-reuse:1
@ 1077 train 5.7196 , allloss: 5.7203, dt: 1318.88ms, fracRes: 0.0299, norm(attn): 0.1338, norm(output): 0.2354, norm(x): 0.2189, norm(y): 1.0053, norm:1.6273, tok/sec: 99381.43, flops:104.30, batch-reuse:1
@ 1078 train 6.0049 , allloss: 6.0055, dt: 1298.50ms, fracRes: 0.0316, norm(attn): 0.1299, norm(output): 0.2344, norm(x): 0.2192, norm(y): 1.0054, norm:2.3873, tok/sec: 100940.73, flops:105.94, batch-reuse:1
@ 1079 train 5.6801 , allloss: 5.6809, dt: 1292.88ms, fracRes: 0.0309, norm(attn): 0.1318, norm(output): 0.2354, norm(x): 0.2198, norm(y): 1.0054, norm:1.5634, tok/sec: 101380.05, flops:106.40, batch-reuse:1
@ 1080 train 5.7797 , allloss: 5.7805, dt: 1313.57ms, fracRes: 0.0270, norm(attn): 0.1367, norm(output): 0.2354, norm(x): 0.2207, norm(y): 1.0053, norm:1.8565, tok/sec: 99782.71, flops:104.72, batch-reuse:1
@ 1081 train 5.7562 , allloss: 5.7568, dt: 1342.52ms, fracRes: 0.0314, norm(attn): 0.1328, norm(output): 0.2354, norm(x): 0.2193, norm(y): 1.0054, norm:1.6333, tok/sec: 97631.04, flops:102.47, batch-reuse:1
@ 1082 train 5.9309 , allloss: 5.9317, dt: 1339.24ms, fracRes: 0.0350, norm(attn): 0.1289, norm(output): 0.2354, norm(x): 0.2187, norm(y): 1.0055, norm:1.3965, tok/sec: 97870.08, flops:102.72, batch-reuse:1
@ 1083 train 5.7360 , allloss: 5.7373, dt: 1308.63ms, fracRes: 0.0343, norm(attn): 0.1299, norm(output): 0.2354, norm(x): 0.2188, norm(y): 1.0055, norm:1.6263, tok/sec: 100159.76, flops:105.12, batch-reuse:1
@ 1084 train 5.6724 , allloss: 5.6732, dt: 1320.46ms, fracRes: 0.0328, norm(attn): 0.1348, norm(output): 0.2363, norm(x): 0.2199, norm(y): 1.0054, norm:1.6927, tok/sec: 99262.37, flops:104.18, batch-reuse:1
@ 1085 train 5.8198 , allloss: 5.8207, dt: 1334.59ms, fracRes: 0.0301, norm(attn): 0.1426, norm(output): 0.2354, norm(x): 0.2212, norm(y): 1.0053, norm:1.9936, tok/sec: 98211.79, flops:103.08, batch-reuse:1
@ 1086 train 5.7686 , allloss: 5.7694, dt: 1282.03ms, fracRes: 0.0312, norm(attn): 0.1377, norm(output): 0.2354, norm(x): 0.2203, norm(y): 1.0053, norm:1.7810, tok/sec: 102237.81, flops:107.30, batch-reuse:1
@ 1087 train 5.7056 , allloss: 5.7094, dt: 1315.61ms, fracRes: 0.0374, norm(attn): 0.1357, norm(output): 0.2354, norm(x): 0.2189, norm(y): 1.0054, norm:1.7455, tok/sec: 99628.39, flops:104.56, batch-reuse:1
@ 1088 train 5.8144 , allloss: 5.8152, dt: 1352.52ms, fracRes: 0.0385, norm(attn): 0.1318, norm(output): 0.2354, norm(x): 0.2189, norm(y): 1.0055, norm:2.4396, tok/sec: 96909.20, flops:101.71, batch-reuse:1
@ 1089 train 5.7148 , allloss: 5.7157, dt: 1342.45ms, fracRes: 0.0469, norm(attn): 0.1318, norm(output): 0.2354, norm(x): 0.2168, norm(y): 1.0056, norm:1.3676, tok/sec: 97636.21, flops:102.47, batch-reuse:1
@ 1090 train 5.7139 , allloss: 5.7149, dt: 1341.71ms, fracRes: 0.0345, norm(attn): 0.1387, norm(output): 0.2354, norm(x): 0.2200, norm(y): 1.0054, norm:1.5900, tok/sec: 97690.34, flops:102.53, batch-reuse:1
@ 1091 train 5.7361 , allloss: 5.7369, dt: 1318.68ms, fracRes: 0.0337, norm(attn): 0.1318, norm(output): 0.2354, norm(x): 0.2193, norm(y): 1.0055, norm:1.2194, tok/sec: 99396.51, flops:104.32, batch-reuse:1
@ 1092 train 5.8496 , allloss: 5.8505, dt: 1316.29ms, fracRes: 0.0334, norm(attn): 0.1357, norm(output): 0.2383, norm(x): 0.2208, norm(y): 1.0054, norm:1.5603, tok/sec: 99576.78, flops:104.51, batch-reuse:1
@ 1093 train 5.7110 , allloss: 5.7117, dt: 1343.71ms, fracRes: 0.0362, norm(attn): 0.1338, norm(output): 0.2373, norm(x): 0.2208, norm(y): 1.0054, norm:1.7447, tok/sec: 97545.00, flops:102.38, batch-reuse:1
@ 1094 train 5.6976 , allloss: 5.6981, dt: 1328.20ms, fracRes: 0.0350, norm(attn): 0.1387, norm(output): 0.2373, norm(x): 0.2218, norm(y): 1.0054, norm:1.7384, tok/sec: 98684.17, flops:103.57, batch-reuse:1
@ 1095 train 5.6726 , allloss: 5.6734, dt: 1297.20ms, fracRes: 0.0378, norm(attn): 0.1396, norm(output): 0.2354, norm(x): 0.2203, norm(y): 1.0054, norm:1.4622, tok/sec: 101042.15, flops:106.05, batch-reuse:1
@ 1096 train 5.7406 , allloss: 5.7423, dt: 1294.03ms, fracRes: 0.0390, norm(attn): 0.1387, norm(output): 0.2383, norm(x): 0.2206, norm(y): 1.0055, norm:1.8584, tok/sec: 101289.64, flops:106.31, batch-reuse:1
@ 1097 train 5.6564 , allloss: 5.6572, dt: 1302.76ms, fracRes: 0.0375, norm(attn): 0.1328, norm(output): 0.2393, norm(x): 0.2217, norm(y): 1.0055, norm:1.4986, tok/sec: 100611.13, flops:105.59, batch-reuse:1
@ 1098 train 5.6490 , allloss: 5.6498, dt: 1307.59ms, fracRes: 0.0354, norm(attn): 0.1338, norm(output): 0.2393, norm(x): 0.2220, norm(y): 1.0054, norm:1.1107, tok/sec: 100239.52, flops:105.20, batch-reuse:1
@ 1099 train 5.7029 , allloss: 5.7038, dt: 1334.51ms, fracRes: 0.0397, norm(attn): 0.1348, norm(output): 0.2383, norm(x): 0.2209, norm(y): 1.0055, norm:1.1684, tok/sec: 98217.07, flops:103.08, batch-reuse:1
@ 1100 train 5.6991 , allloss: 5.6998, dt: 1328.35ms, fracRes: 0.0359, norm(attn): 0.1396, norm(output): 0.2402, norm(x): 0.2229, norm(y): 1.0054, norm:1.4506, tok/sec: 98673.14, flops:103.56, batch-reuse:1
@ 1101 train 5.8076 , allloss: 5.8086, dt: 1337.61ms, fracRes: 0.0381, norm(attn): 0.1328, norm(output): 0.2383, norm(x): 0.2223, norm(y): 1.0055, norm:1.5265, tok/sec: 97989.72, flops:102.84, batch-reuse:1
@ 1102 train 5.7328 , allloss: 5.7339, dt: 1313.15ms, fracRes: 0.0399, norm(attn): 0.1328, norm(output): 0.2373, norm(x): 0.2217, norm(y): 1.0055, norm:1.3670, tok/sec: 99814.59, flops:104.76, batch-reuse:1
@ 1103 train 5.7974 , allloss: 5.7982, dt: 1307.05ms, fracRes: 0.0360, norm(attn): 0.1387, norm(output): 0.2412, norm(x): 0.2231, norm(y): 1.0054, norm:1.2534, tok/sec: 100280.80, flops:105.25, batch-reuse:1
@ 1104 train 5.8596 , allloss: 5.8614, dt: 1275.08ms, fracRes: 0.0406, norm(attn): 0.1367, norm(output): 0.2393, norm(x): 0.2223, norm(y): 1.0055, norm:1.7099, tok/sec: 102795.18, flops:107.89, batch-reuse:1
@ 1105 train 5.7330 , allloss: 5.7363, dt: 1323.00ms, fracRes: 0.0415, norm(attn): 0.1348, norm(output): 0.2383, norm(x): 0.2221, norm(y): 1.0055, norm:1.4173, tok/sec: 99071.81, flops:103.98, batch-reuse:1
@ 1106 train 5.7032 , allloss: 5.7046, dt: 1319.45ms, fracRes: 0.0429, norm(attn): 0.1367, norm(output): 0.2373, norm(x): 0.2221, norm(y): 1.0055, norm:1.6504, tok/sec: 99338.66, flops:104.26, batch-reuse:1
@ 1107 train 5.8208 , allloss: 5.8217, dt: 1342.19ms, fracRes: 0.0436, norm(attn): 0.1406, norm(output): 0.2402, norm(x): 0.2220, norm(y): 1.0055, norm:1.6471, tok/sec: 97655.04, flops:102.49, batch-reuse:1
@ 1108 train 5.6849 , allloss: 5.6860, dt: 1344.30ms, fracRes: 0.0434, norm(attn): 0.1367, norm(output): 0.2383, norm(x): 0.2217, norm(y): 1.0056, norm:1.4456, tok/sec: 97501.89, flops:102.33, batch-reuse:1
@ 1109 train 5.7036 , allloss: 5.7048, dt: 1314.73ms, fracRes: 0.0409, norm(attn): 0.1348, norm(output): 0.2441, norm(x): 0.2232, norm(y): 1.0055, norm:1.4871, tok/sec: 99695.09, flops:104.63, batch-reuse:1
@ 1110 train 5.7236 , allloss: 5.7245, dt: 1319.92ms, fracRes: 0.0397, norm(attn): 0.1377, norm(output): 0.2402, norm(x): 0.2229, norm(y): 1.0055, norm:1.4210, tok/sec: 99303.04, flops:104.22, batch-reuse:1
@ 1111 train 5.6990 , allloss: 5.7004, dt: 1319.76ms, fracRes: 0.0382, norm(attn): 0.1416, norm(output): 0.2393, norm(x): 0.2236, norm(y): 1.0055, norm:1.9703, tok/sec: 99315.13, flops:104.23, batch-reuse:1
@ 1112 train 5.8483 , allloss: 5.8489, dt: 1316.90ms, fracRes: 0.0416, norm(attn): 0.1357, norm(output): 0.2402, norm(x): 0.2231, norm(y): 1.0056, norm:1.3522, tok/sec: 99531.08, flops:104.46, batch-reuse:1
@ 1113 train 5.8391 , allloss: 5.8402, dt: 1356.70ms, fracRes: 0.0372, norm(attn): 0.1367, norm(output): 0.2412, norm(x): 0.2243, norm(y): 1.0055, norm:1.3821, tok/sec: 96610.68, flops:101.39, batch-reuse:1
@ 1114 train 5.9161 , allloss: 5.9168, dt: 1330.08ms, fracRes: 0.0397, norm(attn): 0.1377, norm(output): 0.2402, norm(x): 0.2231, norm(y): 1.0056, norm:1.8722, tok/sec: 98544.46, flops:103.42, batch-reuse:1
@ 1115 train 5.8838 , allloss: 5.8852, dt: 1291.25ms, fracRes: 0.0422, norm(attn): 0.1377, norm(output): 0.2383, norm(x): 0.2217, norm(y): 1.0056, norm:1.8481, tok/sec: 101507.71, flops:106.53, batch-reuse:1
@ 1116 train 5.7648 , allloss: 5.7666, dt: 1299.55ms, fracRes: 0.0425, norm(attn): 0.1387, norm(output): 0.2432, norm(x): 0.2233, norm(y): 1.0056, norm:1.6327, tok/sec: 100859.91, flops:105.85, batch-reuse:1
@ 1117 train 5.7906 , allloss: 5.7913, dt: 1306.39ms, fracRes: 0.0418, norm(attn): 0.1396, norm(output): 0.2461, norm(x): 0.2246, norm(y): 1.0055, norm:1.7436, tok/sec: 100331.10, flops:105.30, batch-reuse:1
@ 1118 train 5.8815 , allloss: 5.8837, dt: 1342.46ms, fracRes: 0.0407, norm(attn): 0.1377, norm(output): 0.2432, norm(x): 0.2243, norm(y): 1.0055, norm:1.5177, tok/sec: 97635.92, flops:102.47, batch-reuse:1
@ 1119 train 5.8406 , allloss: 5.8415, dt: 1340.06ms, fracRes: 0.0429, norm(attn): 0.1367, norm(output): 0.2461, norm(x): 0.2238, norm(y): 1.0056, norm:1.1012, tok/sec: 97810.88, flops:102.65, batch-reuse:1
@ 1120 train 5.8427 , allloss: 5.8435, dt: 1294.29ms, fracRes: 0.0383, norm(attn): 0.1406, norm(output): 0.2461, norm(x): 0.2258, norm(y): 1.0055, norm:1.7484, tok/sec: 101269.77, flops:106.28, batch-reuse:1
@ 1121 train 5.8990 , allloss: 5.8999, dt: 1314.85ms, fracRes: 0.0459, norm(attn): 0.1406, norm(output): 0.2441, norm(x): 0.2233, norm(y): 1.0056, norm:1.5744, tok/sec: 99686.02, flops:104.62, batch-reuse:1
@ 1122 train 5.8626 , allloss: 5.8638, dt: 1290.67ms, fracRes: 0.0523, norm(attn): 0.1387, norm(output): 0.2461, norm(x): 0.2227, norm(y): 1.0057, norm:1.1994, tok/sec: 101553.31, flops:106.58, batch-reuse:1
@ 1123 train 5.8241 , allloss: 5.8260, dt: 1284.89ms, fracRes: 0.0402, norm(attn): 0.1396, norm(output): 0.2461, norm(x): 0.2260, norm(y): 1.0056, norm:1.5497, tok/sec: 102010.22, flops:107.06, batch-reuse:1
@ 1124 train 5.8245 , allloss: 5.8251, dt: 1316.66ms, fracRes: 0.0383, norm(attn): 0.1328, norm(output): 0.2471, norm(x): 0.2262, norm(y): 1.0056, norm:1.7026, tok/sec: 99549.12, flops:104.48, batch-reuse:1
@ 1125 train 5.8748 , allloss: 5.8753, dt: 1303.39ms, fracRes: 0.0360, norm(attn): 0.1377, norm(output): 0.2471, norm(x): 0.2264, norm(y): 1.0056, norm:1.7255, tok/sec: 100562.58, flops:105.54, batch-reuse:1
@ 1126 train 5.8405 , allloss: 5.8418, dt: 1309.70ms, fracRes: 0.0331, norm(attn): 0.1436, norm(output): 0.2471, norm(x): 0.2276, norm(y): 1.0055, norm:1.5391, tok/sec: 100078.04, flops:105.03, batch-reuse:1
@ 1127 train 5.8169 , allloss: 5.8174, dt: 1317.26ms, fracRes: 0.0383, norm(attn): 0.1377, norm(output): 0.2461, norm(x): 0.2259, norm(y): 1.0057, norm:1.5777, tok/sec: 99503.78, flops:104.43, batch-reuse:1
@ 1128 train 5.8025 , allloss: 5.8033, dt: 1345.76ms, fracRes: 0.0409, norm(attn): 0.1367, norm(output): 0.2461, norm(x): 0.2257, norm(y): 1.0057, norm:1.7554, tok/sec: 97396.55, flops:102.22, batch-reuse:1
@ 1129 train 5.8264 , allloss: 5.8273, dt: 1290.66ms, fracRes: 0.0367, norm(attn): 0.1387, norm(output): 0.2461, norm(x): 0.2265, norm(y): 1.0056, norm:1.2107, tok/sec: 101553.89, flops:106.58, batch-reuse:1
@ 1130 train 5.7766 , allloss: 5.7776, dt: 1314.65ms, fracRes: 0.0343, norm(attn): 0.1396, norm(output): 0.2480, norm(x): 0.2277, norm(y): 1.0056, norm:1.3175, tok/sec: 99700.71, flops:104.64, batch-reuse:1
@ 1131 train 5.8349 , allloss: 5.8357, dt: 1343.85ms, fracRes: 0.0356, norm(attn): 0.1348, norm(output): 0.2461, norm(x): 0.2272, norm(y): 1.0056, norm:1.2261, tok/sec: 97534.81, flops:102.36, batch-reuse:1
@ 1132 train 5.8308 , allloss: 5.8316, dt: 1336.56ms, fracRes: 0.0370, norm(attn): 0.1387, norm(output): 0.2471, norm(x): 0.2269, norm(y): 1.0056, norm:1.4340, tok/sec: 98066.84, flops:102.92, batch-reuse:1
@ 1133 train 5.8435 , allloss: 5.8442, dt: 1319.20ms, fracRes: 0.0392, norm(attn): 0.1406, norm(output): 0.2480, norm(x): 0.2273, norm(y): 1.0056, norm:1.3565, tok/sec: 99357.54, flops:104.28, batch-reuse:1
@ 1134 train 5.7925 , allloss: 5.7930, dt: 1323.10ms, fracRes: 0.0414, norm(attn): 0.1367, norm(output): 0.2471, norm(x): 0.2268, norm(y): 1.0056, norm:1.5229, tok/sec: 99063.97, flops:103.97, batch-reuse:1
@ 1135 train 5.8039 , allloss: 5.8045, dt: 1316.29ms, fracRes: 0.0419, norm(attn): 0.1377, norm(output): 0.2471, norm(x): 0.2267, norm(y): 1.0056, norm:1.4744, tok/sec: 99576.81, flops:104.51, batch-reuse:1
@ 1136 train 5.8451 , allloss: 5.8457, dt: 1343.48ms, fracRes: 0.0420, norm(attn): 0.1387, norm(output): 0.2480, norm(x): 0.2273, norm(y): 1.0056, norm:1.3056, tok/sec: 97561.24, flops:102.39, batch-reuse:1
@ 1137 train 5.8285 , allloss: 5.8294, dt: 1339.79ms, fracRes: 0.0497, norm(attn): 0.1309, norm(output): 0.2471, norm(x): 0.2261, norm(y): 1.0057, norm:1.2463, tok/sec: 97830.21, flops:102.67, batch-reuse:1
@ 1138 train 5.9861 , allloss: 5.9874, dt: 1311.41ms, fracRes: 0.0499, norm(attn): 0.1367, norm(output): 0.2480, norm(x): 0.2264, norm(y): 1.0057, norm:1.5474, tok/sec: 99947.37, flops:104.90, batch-reuse:1
@ 1139 train 5.7766 , allloss: 5.7814, dt: 1325.46ms, fracRes: 0.0437, norm(attn): 0.1406, norm(output): 0.2490, norm(x): 0.2279, norm(y): 1.0056, norm:1.2184, tok/sec: 98888.17, flops:103.78, batch-reuse:1
@ 1140 train 5.8170 , allloss: 5.8188, dt: 1312.67ms, fracRes: 0.0460, norm(attn): 0.1377, norm(output): 0.2480, norm(x): 0.2263, norm(y): 1.0057, norm:1.3503, tok/sec: 99851.58, flops:104.80, batch-reuse:1
@ 1141 train 5.7388 , allloss: 5.7393, dt: 1320.81ms, fracRes: 0.0451, norm(attn): 0.1367, norm(output): 0.2480, norm(x): 0.2269, norm(y): 1.0057, norm:1.9040, tok/sec: 99235.73, flops:104.15, batch-reuse:1
@ 1142 train 5.7740 , allloss: 5.7744, dt: 1326.10ms, fracRes: 0.0451, norm(attn): 0.1377, norm(output): 0.2471, norm(x): 0.2265, norm(y): 1.0057, norm:1.1072, tok/sec: 98840.18, flops:103.73, batch-reuse:1
@ 1143 train 5.8068 , allloss: 5.8078, dt: 1344.16ms, fracRes: 0.0436, norm(attn): 0.1436, norm(output): 0.2480, norm(x): 0.2266, norm(y): 1.0057, norm:2.6552, tok/sec: 97512.52, flops:102.34, batch-reuse:1
@ 1144 train 5.8635 , allloss: 5.8664, dt: 1323.76ms, fracRes: 0.0458, norm(attn): 0.1406, norm(output): 0.2480, norm(x): 0.2269, norm(y): 1.0057, norm:2.2871, tok/sec: 99015.25, flops:103.92, batch-reuse:1
@ 1145 train 5.8878 , allloss: 5.8894, dt: 1332.04ms, fracRes: 0.0469, norm(attn): 0.1416, norm(output): 0.2490, norm(x): 0.2283, norm(y): 1.0057, norm:1.6688, tok/sec: 98399.58, flops:103.27, batch-reuse:1
@ 1146 train 5.8599 , allloss: 5.8602, dt: 1336.36ms, fracRes: 0.0565, norm(attn): 0.1348, norm(output): 0.2480, norm(x): 0.2259, norm(y): 1.0058, norm:1.8632, tok/sec: 98081.51, flops:102.94, batch-reuse:1
@ 1147 train 5.8417 , allloss: 5.8422, dt: 1300.54ms, fracRes: 0.0557, norm(attn): 0.1338, norm(output): 0.2490, norm(x): 0.2263, norm(y): 1.0058, norm:1.7723, tok/sec: 100782.86, flops:105.77, batch-reuse:1
@ 1148 train 5.7652 , allloss: 5.7660, dt: 1360.00ms, fracRes: 0.0499, norm(attn): 0.1367, norm(output): 0.2490, norm(x): 0.2267, norm(y): 1.0058, norm:1.4541, tok/sec: 96376.16, flops:101.15, batch-reuse:1
@ 1149 train 5.7930 , allloss: 5.7954, dt: 1304.73ms, fracRes: 0.0487, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2272, norm(y): 1.0057, norm:1.6211, tok/sec: 100458.75, flops:105.43, batch-reuse:1
@ 1150 train 5.8342 , allloss: 5.8351, dt: 1320.40ms, fracRes: 0.0519, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2265, norm(y): 1.0058, norm:1.8376, tok/sec: 99266.80, flops:104.18, batch-reuse:1
@ 1151 train 5.8803 , allloss: 5.8828, dt: 1328.88ms, fracRes: 0.0485, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2284, norm(y): 1.0057, norm:1.5110, tok/sec: 98633.15, flops:103.52, batch-reuse:1
@ 1152 train 5.7834 , allloss: 5.7851, dt: 1311.51ms, fracRes: 0.0505, norm(attn): 0.1406, norm(output): 0.2490, norm(x): 0.2283, norm(y): 1.0057, norm:1.4677, tok/sec: 99939.76, flops:104.89, batch-reuse:1
@ 1153 train 5.7871 , allloss: 5.7886, dt: 1339.25ms, fracRes: 0.0532, norm(attn): 0.1396, norm(output): 0.2490, norm(x): 0.2275, norm(y): 1.0058, norm:1.3628, tok/sec: 97869.70, flops:102.72, batch-reuse:1
@ 1154 train 5.7804 , allloss: 5.7811, dt: 1291.55ms, fracRes: 0.0550, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2271, norm(y): 1.0058, norm:1.4132, tok/sec: 101484.31, flops:106.51, batch-reuse:1
@ 1155 train 5.7381 , allloss: 5.7390, dt: 1315.26ms, fracRes: 0.0520, norm(attn): 0.1396, norm(output): 0.2500, norm(x): 0.2285, norm(y): 1.0057, norm:1.6284, tok/sec: 99654.93, flops:104.59, batch-reuse:1
@ 1156 train 5.8249 , allloss: 5.8258, dt: 1307.14ms, fracRes: 0.0554, norm(attn): 0.1348, norm(output): 0.2490, norm(x): 0.2276, norm(y): 1.0059, norm:1.6114, tok/sec: 100273.73, flops:105.24, batch-reuse:1
@ 1157 train 5.7796 , allloss: 5.7818, dt: 1301.79ms, fracRes: 0.0551, norm(attn): 0.1377, norm(output): 0.2490, norm(x): 0.2278, norm(y): 1.0058, norm:1.8410, tok/sec: 100686.33, flops:105.67, batch-reuse:1
@ 1158 train 5.7704 , allloss: 5.7720, dt: 1331.24ms, fracRes: 0.0479, norm(attn): 0.1426, norm(output): 0.2500, norm(x): 0.2307, norm(y): 1.0057, norm:1.4157, tok/sec: 98458.48, flops:103.33, batch-reuse:1
@ 1159 train 5.8019 , allloss: 5.8026, dt: 1337.86ms, fracRes: 0.0583, norm(attn): 0.1387, norm(output): 0.2500, norm(x): 0.2272, norm(y): 1.0060, norm:1.5527, tok/sec: 97971.68, flops:102.82, batch-reuse:1
@ 1160 train 5.8365 , allloss: 5.8372, dt: 1344.60ms, fracRes: 0.0496, norm(attn): 0.1328, norm(output): 0.2500, norm(x): 0.2292, norm(y): 1.0058, norm:2.1080, tok/sec: 97480.47, flops:102.31, batch-reuse:1
@ 1161 train 5.6871 , allloss: 5.6880, dt: 1323.03ms, fracRes: 0.0473, norm(attn): 0.1377, norm(output): 0.2500, norm(x): 0.2300, norm(y): 1.0058, norm:1.5370, tok/sec: 99069.61, flops:103.98, batch-reuse:1
@ 1162 train 5.6408 , allloss: 5.6416, dt: 1298.67ms, fracRes: 0.0523, norm(attn): 0.1377, norm(output): 0.2500, norm(x): 0.2299, norm(y): 1.0058, norm:1.5188, tok/sec: 100927.50, flops:105.93, batch-reuse:1
@ 1163 train 5.8028 , allloss: 5.8040, dt: 1319.30ms, fracRes: 0.0582, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2296, norm(y): 1.0059, norm:1.6303, tok/sec: 99349.30, flops:104.27, batch-reuse:1
@ 1164 train 5.7528 , allloss: 5.7542, dt: 1320.72ms, fracRes: 0.0569, norm(attn): 0.1426, norm(output): 0.2520, norm(x): 0.2307, norm(y): 1.0058, norm:1.6107, tok/sec: 99243.20, flops:104.16, batch-reuse:1
@ 1165 train 5.7935 , allloss: 5.7944, dt: 1323.23ms, fracRes: 0.0613, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2289, norm(y): 1.0059, norm:1.5480, tok/sec: 99054.94, flops:103.96, batch-reuse:1
@ 1166 train 5.7572 , allloss: 5.7579, dt: 1304.84ms, fracRes: 0.0524, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2311, norm(y): 1.0058, norm:1.4222, tok/sec: 100450.62, flops:105.42, batch-reuse:1
@ 1167 train 5.7156 , allloss: 5.7165, dt: 1304.67ms, fracRes: 0.0518, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2316, norm(y): 1.0058, norm:1.6518, tok/sec: 100463.62, flops:105.44, batch-reuse:1
@ 1168 train 5.6242 , allloss: 5.6255, dt: 1301.64ms, fracRes: 0.0513, norm(attn): 0.1426, norm(output): 0.2520, norm(x): 0.2317, norm(y): 1.0057, norm:1.3779, tok/sec: 100697.27, flops:105.68, batch-reuse:1
@ 1169 train 5.7379 , allloss: 5.7394, dt: 1298.60ms, fracRes: 0.0632, norm(attn): 0.1377, norm(output): 0.2520, norm(x): 0.2292, norm(y): 1.0059, norm:1.3238, tok/sec: 100933.48, flops:105.93, batch-reuse:1
@ 1170 train 5.7004 , allloss: 5.7013, dt: 1332.78ms, fracRes: 0.0643, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2287, norm(y): 1.0059, norm:1.4861, tok/sec: 98344.68, flops:103.21, batch-reuse:1
@ 1171 train 5.6768 , allloss: 5.6777, dt: 1311.09ms, fracRes: 0.0621, norm(attn): 0.1416, norm(output): 0.2500, norm(x): 0.2291, norm(y): 1.0059, norm:1.4292, tok/sec: 99971.98, flops:104.92, batch-reuse:1
@ 1172 train 5.8052 , allloss: 5.8069, dt: 1314.40ms, fracRes: 0.0578, norm(attn): 0.1406, norm(output): 0.2500, norm(x): 0.2305, norm(y): 1.0059, norm:1.3953, tok/sec: 99720.24, flops:104.66, batch-reuse:1
@ 1173 train 5.7075 , allloss: 5.7091, dt: 1303.49ms, fracRes: 0.0548, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2319, norm(y): 1.0058, norm:1.5500, tok/sec: 100554.32, flops:105.53, batch-reuse:1
@ 1174 train 5.6387 , allloss: 5.6399, dt: 1325.64ms, fracRes: 0.0566, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2313, norm(y): 1.0058, norm:1.2739, tok/sec: 98874.21, flops:103.77, batch-reuse:1
@ 1175 train 5.7726 , allloss: 5.7736, dt: 1317.85ms, fracRes: 0.0528, norm(attn): 0.1387, norm(output): 0.2520, norm(x): 0.2325, norm(y): 1.0058, norm:1.4232, tok/sec: 99459.17, flops:104.38, batch-reuse:1
@ 1176 train 5.7448 , allloss: 5.7453, dt: 1305.89ms, fracRes: 0.0594, norm(attn): 0.1367, norm(output): 0.2520, norm(x): 0.2310, norm(y): 1.0059, norm:1.0876, tok/sec: 100369.89, flops:105.34, batch-reuse:1
@ 1177 train 5.7436 , allloss: 5.7442, dt: 1308.08ms, fracRes: 0.0581, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2312, norm(y): 1.0059, norm:1.2685, tok/sec: 100202.08, flops:105.16, batch-reuse:1
@ 1178 train 5.8629 , allloss: 5.8638, dt: 1319.69ms, fracRes: 0.0560, norm(attn): 0.1406, norm(output): 0.2520, norm(x): 0.2323, norm(y): 1.0059, norm:1.3318, tok/sec: 99320.12, flops:104.24, batch-reuse:1
@ 1179 train 5.7842 , allloss: 5.7853, dt: 1281.97ms, fracRes: 0.0516, norm(attn): 0.1387, norm(output): 0.2520, norm(x): 0.2331, norm(y): 1.0059, norm:1.4172, tok/sec: 102242.41, flops:107.31, batch-reuse:1
@ 1180 train 5.7562 , allloss: 5.7577, dt: 1303.38ms, fracRes: 0.0464, norm(attn): 0.1416, norm(output): 0.2520, norm(x): 0.2343, norm(y): 1.0058, norm:1.2894, tok/sec: 100562.89, flops:105.54, batch-reuse:1
@ 1181 train 5.6911 , allloss: 5.6931, dt: 1313.03ms, fracRes: 0.0531, norm(attn): 0.1367, norm(output): 0.2520, norm(x): 0.2326, norm(y): 1.0060, norm:1.2414, tok/sec: 99824.43, flops:104.77, batch-reuse:1
@ 1182 train 5.7340 , allloss: 5.7351, dt: 1320.53ms, fracRes: 0.0433, norm(attn): 0.1436, norm(output): 0.2539, norm(x): 0.2367, norm(y): 1.0058, norm:1.5637, tok/sec: 99257.19, flops:104.17, batch-reuse:1
@ 1183 train 5.7548 , allloss: 5.7556, dt: 1300.33ms, fracRes: 0.0448, norm(attn): 0.1377, norm(output): 0.2539, norm(x): 0.2356, norm(y): 1.0059, norm:1.9129, tok/sec: 100799.37, flops:105.79, batch-reuse:1
@ 1184 train 5.7184 , allloss: 5.7198, dt: 1325.61ms, fracRes: 0.0489, norm(attn): 0.1348, norm(output): 0.2539, norm(x): 0.2347, norm(y): 1.0059, norm:1.6664, tok/sec: 98876.48, flops:103.77, batch-reuse:1
@ 1185 train 5.7459 , allloss: 5.7472, dt: 1354.50ms, fracRes: 0.0466, norm(attn): 0.1377, norm(output): 0.2539, norm(x): 0.2354, norm(y): 1.0059, norm:1.6483, tok/sec: 96767.57, flops:101.56, batch-reuse:1
@ 1186 train 5.7620 , allloss: 5.7629, dt: 1310.21ms, fracRes: 0.0444, norm(attn): 0.1396, norm(output): 0.2539, norm(x): 0.2362, norm(y): 1.0059, norm:1.7806, tok/sec: 100038.91, flops:104.99, batch-reuse:1
@ 1187 train 5.7259 , allloss: 5.7266, dt: 1295.07ms, fracRes: 0.0421, norm(attn): 0.1396, norm(output): 0.2539, norm(x): 0.2375, norm(y): 1.0058, norm:1.1977, tok/sec: 101208.06, flops:106.22, batch-reuse:1
@ 1188 train 5.6514 , allloss: 5.6519, dt: 1302.71ms, fracRes: 0.0494, norm(attn): 0.1367, norm(output): 0.2539, norm(x): 0.2348, norm(y): 1.0060, norm:1.5871, tok/sec: 100614.94, flops:105.60, batch-reuse:1
@ 1189 train 5.6913 , allloss: 5.6921, dt: 1308.72ms, fracRes: 0.0513, norm(attn): 0.1387, norm(output): 0.2539, norm(x): 0.2349, norm(y): 1.0060, norm:1.5341, tok/sec: 100152.74, flops:105.11, batch-reuse:1
@ 1190 train 5.7835 , allloss: 5.7847, dt: 1304.78ms, fracRes: 0.0453, norm(attn): 0.1426, norm(output): 0.2578, norm(x): 0.2374, norm(y): 1.0058, norm:1.5172, tok/sec: 100455.54, flops:105.43, batch-reuse:1
@ 1191 train 5.8391 , allloss: 5.8401, dt: 1319.37ms, fracRes: 0.0492, norm(attn): 0.1396, norm(output): 0.2520, norm(x): 0.2359, norm(y): 1.0060, norm:1.1390, tok/sec: 99344.58, flops:104.26, batch-reuse:1
@ 1192 train 5.6787 , allloss: 5.6804, dt: 1332.64ms, fracRes: 0.0471, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2362, norm(y): 1.0059, norm:1.4250, tok/sec: 98354.97, flops:103.23, batch-reuse:1
@ 1193 train 5.7345 , allloss: 5.7359, dt: 1343.19ms, fracRes: 0.0494, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2360, norm(y): 1.0059, norm:1.3886, tok/sec: 97582.68, flops:102.41, batch-reuse:1
@ 1194 train 5.7420 , allloss: 5.7432, dt: 1328.11ms, fracRes: 0.0554, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2346, norm(y): 1.0060, norm:1.4221, tok/sec: 98690.80, flops:103.58, batch-reuse:1
@ 1195 train 5.7149 , allloss: 5.7159, dt: 1300.57ms, fracRes: 0.0632, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2330, norm(y): 1.0060, norm:1.4656, tok/sec: 100780.09, flops:105.77, batch-reuse:1
@ 1196 train 5.7240 , allloss: 5.7249, dt: 1314.41ms, fracRes: 0.0534, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2347, norm(y): 1.0059, norm:1.4715, tok/sec: 99719.47, flops:104.66, batch-reuse:1
@ 1197 train 5.6869 , allloss: 5.6886, dt: 1320.65ms, fracRes: 0.0530, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2344, norm(y): 1.0060, norm:1.9107, tok/sec: 99248.14, flops:104.16, batch-reuse:1
@ 1198 train 5.6813 , allloss: 5.6836, dt: 1304.51ms, fracRes: 0.0536, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2351, norm(y): 1.0059, norm:1.4551, tok/sec: 100476.25, flops:105.45, batch-reuse:1
@ 1199 train 5.7386 , allloss: 5.7411, dt: 1313.32ms, fracRes: 0.0517, norm(attn): 0.1484, norm(output): 0.2539, norm(x): 0.2363, norm(y): 1.0059, norm:1.7452, tok/sec: 99801.93, flops:104.74, batch-reuse:1
@ 1200 train 5.6982 , allloss: 5.7020, dt: 1318.30ms, fracRes: 0.0567, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2348, norm(y): 1.0060, norm:1.1226, tok/sec: 99425.23, flops:104.35, batch-reuse:1
@ 1201 train 5.7120 , allloss: 5.7128, dt: 1300.02ms, fracRes: 0.0607, norm(attn): 0.1387, norm(output): 0.2539, norm(x): 0.2347, norm(y): 1.0061, norm:1.3203, tok/sec: 100823.23, flops:105.82, batch-reuse:1
@ 1202 train 5.7447 , allloss: 5.7456, dt: 1291.33ms, fracRes: 0.0583, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2348, norm(y): 1.0060, norm:1.4973, tok/sec: 101501.39, flops:106.53, batch-reuse:1
@ 1203 train 6.0600 , allloss: 6.0608, dt: 1284.93ms, fracRes: 0.0566, norm(attn): 0.1426, norm(output): 0.2559, norm(x): 0.2352, norm(y): 1.0060, norm:2.0466, tok/sec: 102007.40, flops:107.06, batch-reuse:1
@ 1204 train 5.7041 , allloss: 5.7048, dt: 1331.22ms, fracRes: 0.0549, norm(attn): 0.1426, norm(output): 0.2539, norm(x): 0.2373, norm(y): 1.0060, norm:1.8166, tok/sec: 98460.38, flops:103.34, batch-reuse:1
@ 1205 train 5.6352 , allloss: 5.6360, dt: 1336.62ms, fracRes: 0.0563, norm(attn): 0.1426, norm(output): 0.2559, norm(x): 0.2374, norm(y): 1.0060, norm:1.5254, tok/sec: 98062.60, flops:102.92, batch-reuse:1
@ 1206 train 5.6524 , allloss: 5.6543, dt: 1287.70ms, fracRes: 0.0610, norm(attn): 0.1406, norm(output): 0.2539, norm(x): 0.2360, norm(y): 1.0060, norm:1.5636, tok/sec: 101787.39, flops:106.83, batch-reuse:1
@ 1207 train 5.6544 , allloss: 5.6551, dt: 1298.71ms, fracRes: 0.0588, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2369, norm(y): 1.0060, norm:1.6005, tok/sec: 100924.57, flops:105.92, batch-reuse:1
@ 1208 train 5.6156 , allloss: 5.6171, dt: 1314.62ms, fracRes: 0.0664, norm(attn): 0.1377, norm(output): 0.2539, norm(x): 0.2352, norm(y): 1.0061, norm:1.5441, tok/sec: 99703.19, flops:104.64, batch-reuse:1
@ 1209 train 5.6961 , allloss: 5.6972, dt: 1349.53ms, fracRes: 0.0662, norm(attn): 0.1396, norm(output): 0.2559, norm(x): 0.2350, norm(y): 1.0061, norm:1.1421, tok/sec: 97124.46, flops:101.93, batch-reuse:1
@ 1210 train 5.6214 , allloss: 5.6239, dt: 1346.85ms, fracRes: 0.0556, norm(attn): 0.1494, norm(output): 0.2578, norm(x): 0.2383, norm(y): 1.0059, norm:1.4228, tok/sec: 97317.48, flops:102.14, batch-reuse:1
@ 1211 train 5.7002 , allloss: 5.7019, dt: 1343.04ms, fracRes: 0.0598, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2359, norm(y): 1.0060, norm:1.3902, tok/sec: 97593.76, flops:102.43, batch-reuse:1
@ 1212 train 5.7650 , allloss: 5.7671, dt: 1338.96ms, fracRes: 0.0553, norm(attn): 0.1406, norm(output): 0.2578, norm(x): 0.2373, norm(y): 1.0060, norm:1.6410, tok/sec: 97891.08, flops:102.74, batch-reuse:1
@ 1213 train 5.6075 , allloss: 5.6088, dt: 1341.35ms, fracRes: 0.0572, norm(attn): 0.1426, norm(output): 0.2559, norm(x): 0.2371, norm(y): 1.0060, norm:1.2798, tok/sec: 97716.56, flops:102.56, batch-reuse:1
@ 1214 train 5.6404 , allloss: 5.6415, dt: 1302.33ms, fracRes: 0.0604, norm(attn): 0.1416, norm(output): 0.2539, norm(x): 0.2361, norm(y): 1.0061, norm:1.2983, tok/sec: 100644.60, flops:105.63, batch-reuse:1
@ 1215 train 5.6708 , allloss: 5.6717, dt: 1318.58ms, fracRes: 0.0620, norm(attn): 0.1416, norm(output): 0.2578, norm(x): 0.2360, norm(y): 1.0061, norm:1.2880, tok/sec: 99403.75, flops:104.33, batch-reuse:1
@ 1216 train 5.6445 , allloss: 5.6453, dt: 1334.01ms, fracRes: 0.0628, norm(attn): 0.1455, norm(output): 0.2578, norm(x): 0.2372, norm(y): 1.0060, norm:1.3724, tok/sec: 98254.00, flops:103.12, batch-reuse:1
@ 1217 train 5.6720 , allloss: 5.6734, dt: 1293.91ms, fracRes: 0.0662, norm(attn): 0.1416, norm(output): 0.2578, norm(x): 0.2366, norm(y): 1.0060, norm:1.4464, tok/sec: 101299.42, flops:106.32, batch-reuse:1
@ 1218 train 5.6103 , allloss: 5.6131, dt: 1308.53ms, fracRes: 0.0658, norm(attn): 0.1436, norm(output): 0.2617, norm(x): 0.2368, norm(y): 1.0061, norm:1.6826, tok/sec: 100167.47, flops:105.13, batch-reuse:1
@ 1219 train 5.5918 , allloss: 5.5930, dt: 1289.23ms, fracRes: 0.0645, norm(attn): 0.1426, norm(output): 0.2559, norm(x): 0.2365, norm(y): 1.0061, norm:1.6363, tok/sec: 101666.50, flops:106.70, batch-reuse:1
@ 1220 train 5.6660 , allloss: 5.6668, dt: 1278.10ms, fracRes: 0.0603, norm(attn): 0.1426, norm(output): 0.2617, norm(x): 0.2384, norm(y): 1.0060, norm:1.7632, tok/sec: 102552.44, flops:107.63, batch-reuse:1
@ 1221 train 5.6163 , allloss: 5.6173, dt: 1300.87ms, fracRes: 0.0625, norm(attn): 0.1426, norm(output): 0.2617, norm(x): 0.2377, norm(y): 1.0060, norm:1.4799, tok/sec: 100757.49, flops:105.75, batch-reuse:1
@ 1222 train 5.6263 , allloss: 5.6272, dt: 1295.96ms, fracRes: 0.0750, norm(attn): 0.1406, norm(output): 0.2559, norm(x): 0.2347, norm(y): 1.0062, norm:1.4740, tok/sec: 101139.02, flops:106.15, batch-reuse:1
@ 1223 train 5.6025 , allloss: 5.6040, dt: 1341.21ms, fracRes: 0.0776, norm(attn): 0.1406, norm(output): 0.2598, norm(x): 0.2353, norm(y): 1.0062, norm:1.8235, tok/sec: 97726.67, flops:102.57, batch-reuse:1
@ 1224 train 5.5907 , allloss: 5.5932, dt: 1328.20ms, fracRes: 0.0659, norm(attn): 0.1475, norm(output): 0.2637, norm(x): 0.2383, norm(y): 1.0060, norm:1.9630, tok/sec: 98683.80, flops:103.57, batch-reuse:1
@ 1225 train 5.6291 , allloss: 5.6299, dt: 1338.62ms, fracRes: 0.0805, norm(attn): 0.1406, norm(output): 0.2598, norm(x): 0.2345, norm(y): 1.0063, norm:1.8408, tok/sec: 97915.72, flops:102.76, batch-reuse:1
@ 1226 train 5.7014 , allloss: 5.7024, dt: 1312.17ms, fracRes: 0.0730, norm(attn): 0.1348, norm(output): 0.2598, norm(x): 0.2362, norm(y): 1.0062, norm:1.5105, tok/sec: 99889.66, flops:104.84, batch-reuse:1
@ 1227 train 5.6430 , allloss: 5.6440, dt: 1339.69ms, fracRes: 0.0691, norm(attn): 0.1396, norm(output): 0.2598, norm(x): 0.2371, norm(y): 1.0062, norm:1.7320, tok/sec: 97837.32, flops:102.68, batch-reuse:1
@ 1228 train 5.5940 , allloss: 5.5952, dt: 1305.08ms, fracRes: 0.0627, norm(attn): 0.1465, norm(output): 0.2637, norm(x): 0.2394, norm(y): 1.0060, norm:1.3238, tok/sec: 100432.02, flops:105.41, batch-reuse:1
@ 1229 train 5.6296 , allloss: 5.6313, dt: 1291.00ms, fracRes: 0.0740, norm(attn): 0.1426, norm(output): 0.2617, norm(x): 0.2365, norm(y): 1.0062, norm:1.5322, tok/sec: 101527.56, flops:106.56, batch-reuse:1
@ 1230 train 5.6504 , allloss: 5.6517, dt: 1322.81ms, fracRes: 0.0765, norm(attn): 0.1416, norm(output): 0.2617, norm(x): 0.2370, norm(y): 1.0062, norm:1.8495, tok/sec: 99086.11, flops:103.99, batch-reuse:1
@ 1231 train 5.6166 , allloss: 5.6177, dt: 1284.55ms, fracRes: 0.0740, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2376, norm(y): 1.0062, norm:1.3738, tok/sec: 102037.48, flops:107.09, batch-reuse:1
@ 1232 train 5.5861 , allloss: 5.5869, dt: 1302.77ms, fracRes: 0.0731, norm(attn): 0.1406, norm(output): 0.2637, norm(x): 0.2371, norm(y): 1.0062, norm:1.2632, tok/sec: 100609.90, flops:105.59, batch-reuse:1
@ 1233 train 5.5898 , allloss: 5.5907, dt: 1309.45ms, fracRes: 0.0701, norm(attn): 0.1436, norm(output): 0.2637, norm(x): 0.2389, norm(y): 1.0061, norm:1.3134, tok/sec: 100097.01, flops:105.05, batch-reuse:1
@ 1234 train 5.6236 , allloss: 5.6251, dt: 1309.48ms, fracRes: 0.0713, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2381, norm(y): 1.0061, norm:1.3631, tok/sec: 100094.48, flops:105.05, batch-reuse:1
@ 1235 train 5.6625 , allloss: 5.6634, dt: 1320.72ms, fracRes: 0.0739, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2373, norm(y): 1.0062, norm:1.1511, tok/sec: 99242.86, flops:104.16, batch-reuse:1
@ 1236 train 5.5991 , allloss: 5.6000, dt: 1325.12ms, fracRes: 0.0737, norm(attn): 0.1436, norm(output): 0.2637, norm(x): 0.2381, norm(y): 1.0062, norm:1.8083, tok/sec: 98913.52, flops:103.81, batch-reuse:1
@ 1237 train 5.6467 , allloss: 5.6475, dt: 1338.60ms, fracRes: 0.0724, norm(attn): 0.1455, norm(output): 0.2637, norm(x): 0.2390, norm(y): 1.0062, norm:1.6190, tok/sec: 97917.58, flops:102.77, batch-reuse:1
@ 1238 train 5.5978 , allloss: 5.5990, dt: 1292.19ms, fracRes: 0.0731, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2384, norm(y): 1.0062, norm:1.3219, tok/sec: 101433.66, flops:106.46, batch-reuse:1
@ 1239 train 5.5411 , allloss: 5.5416, dt: 1319.32ms, fracRes: 0.0721, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2389, norm(y): 1.0062, norm:1.4144, tok/sec: 99348.37, flops:104.27, batch-reuse:1
@ 1240 train 5.5648 , allloss: 5.5665, dt: 1340.08ms, fracRes: 0.0691, norm(attn): 0.1416, norm(output): 0.2637, norm(x): 0.2399, norm(y): 1.0062, norm:1.4528, tok/sec: 97809.14, flops:102.65, batch-reuse:1
@ 1241 train 5.5608 , allloss: 5.5625, dt: 1289.65ms, fracRes: 0.0694, norm(attn): 0.1406, norm(output): 0.2637, norm(x): 0.2395, norm(y): 1.0062, norm:1.6123, tok/sec: 101633.95, flops:106.67, batch-reuse:1
@ 1242 train 5.5942 , allloss: 5.5950, dt: 1326.48ms, fracRes: 0.0713, norm(attn): 0.1406, norm(output): 0.2617, norm(x): 0.2398, norm(y): 1.0062, norm:1.2892, tok/sec: 98811.81, flops:103.70, batch-reuse:1
@ 1243 train 5.6086 , allloss: 5.6097, dt: 1334.22ms, fracRes: 0.0658, norm(attn): 0.1475, norm(output): 0.2637, norm(x): 0.2414, norm(y): 1.0061, norm:1.5013, tok/sec: 98238.69, flops:103.10, batch-reuse:1
@ 1244 train 5.6254 , allloss: 5.6264, dt: 1337.23ms, fracRes: 0.0701, norm(attn): 0.1445, norm(output): 0.2637, norm(x): 0.2408, norm(y): 1.0062, norm:1.6956, tok/sec: 98017.30, flops:102.87, batch-reuse:1
@ 1245 train 5.5881 , allloss: 5.5897, dt: 1346.47ms, fracRes: 0.0776, norm(attn): 0.1406, norm(output): 0.2637, norm(x): 0.2390, norm(y): 1.0063, norm:1.1606, tok/sec: 97344.64, flops:102.17, batch-reuse:1
@ 1246 train 5.5984 , allloss: 5.6000, dt: 1345.88ms, fracRes: 0.0677, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2416, norm(y): 1.0062, norm:1.2408, tok/sec: 97387.58, flops:102.21, batch-reuse:1
@ 1247 train 5.5221 , allloss: 5.5226, dt: 1347.22ms, fracRes: 0.0648, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2422, norm(y): 1.0061, norm:1.5056, tok/sec: 97290.60, flops:102.11, batch-reuse:1
@ 1248 train 5.6134 , allloss: 5.6141, dt: 1310.77ms, fracRes: 0.0673, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2417, norm(y): 1.0062, norm:1.1696, tok/sec: 99996.18, flops:104.95, batch-reuse:1
@ 1249 train 5.5063 , allloss: 5.5074, dt: 1328.57ms, fracRes: 0.0709, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2411, norm(y): 1.0063, norm:1.2944, tok/sec: 98656.72, flops:103.54, batch-reuse:1
@ 1250 train 5.6199 , allloss: 5.6206, dt: 1328.15ms, fracRes: 0.0713, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2404, norm(y): 1.0063, norm:1.2843, tok/sec: 98687.98, flops:103.57, batch-reuse:1
@ 1251 train 5.5655 , allloss: 5.5663, dt: 1294.62ms, fracRes: 0.0681, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2428, norm(y): 1.0062, norm:1.7191, tok/sec: 101243.57, flops:106.26, batch-reuse:1
@ 1252 train 5.5972 , allloss: 5.6002, dt: 1303.47ms, fracRes: 0.0684, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2422, norm(y): 1.0063, norm:1.6612, tok/sec: 100555.90, flops:105.54, batch-reuse:1
@ 1253 train 5.4720 , allloss: 5.4734, dt: 1285.61ms, fracRes: 0.0679, norm(attn): 0.1426, norm(output): 0.2637, norm(x): 0.2417, norm(y): 1.0063, norm:1.3181, tok/sec: 101953.27, flops:107.00, batch-reuse:1
@ 1254 train 5.5562 , allloss: 5.5572, dt: 1290.71ms, fracRes: 0.0706, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2421, norm(y): 1.0062, norm:1.3650, tok/sec: 101550.69, flops:106.58, batch-reuse:1
@ 1255 train 5.5900 , allloss: 5.5913, dt: 1305.22ms, fracRes: 0.0716, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2434, norm(y): 1.0062, norm:1.3500, tok/sec: 100421.49, flops:105.39, batch-reuse:1
@ 1256 train 5.5068 , allloss: 5.5075, dt: 1308.06ms, fracRes: 0.0781, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2409, norm(y): 1.0063, norm:1.3762, tok/sec: 100203.51, flops:105.17, batch-reuse:1
@ 1257 train 5.5755 , allloss: 5.5761, dt: 1313.21ms, fracRes: 0.0778, norm(attn): 0.1396, norm(output): 0.2656, norm(x): 0.2402, norm(y): 1.0063, norm:1.6224, tok/sec: 99810.26, flops:104.75, batch-reuse:1
@ 1258 train 5.5220 , allloss: 5.5235, dt: 1326.17ms, fracRes: 0.0711, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2427, norm(y): 1.0062, norm:1.4626, tok/sec: 98834.99, flops:103.73, batch-reuse:1
@ 1259 train 5.5733 , allloss: 5.5752, dt: 1315.60ms, fracRes: 0.0784, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2402, norm(y): 1.0063, norm:1.7058, tok/sec: 99628.93, flops:104.56, batch-reuse:1
@ 1260 train 5.5018 , allloss: 5.5028, dt: 1337.02ms, fracRes: 0.0831, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2397, norm(y): 1.0064, norm:1.3646, tok/sec: 98032.87, flops:102.89, batch-reuse:1
@ 1261 train 5.5155 , allloss: 5.5169, dt: 1297.31ms, fracRes: 0.0751, norm(attn): 0.1475, norm(output): 0.2656, norm(x): 0.2432, norm(y): 1.0062, norm:1.3357, tok/sec: 101033.35, flops:106.04, batch-reuse:1
@ 1262 train 5.5002 , allloss: 5.5012, dt: 1287.34ms, fracRes: 0.0739, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2429, norm(y): 1.0062, norm:1.4230, tok/sec: 101815.89, flops:106.86, batch-reuse:1
@ 1263 train 5.5030 , allloss: 5.5040, dt: 1298.79ms, fracRes: 0.0807, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2408, norm(y): 1.0064, norm:1.4316, tok/sec: 100918.90, flops:105.92, batch-reuse:1
@ 1264 train 5.6210 , allloss: 5.6220, dt: 1321.73ms, fracRes: 0.0811, norm(attn): 0.1436, norm(output): 0.2637, norm(x): 0.2404, norm(y): 1.0064, norm:1.4068, tok/sec: 99167.01, flops:104.08, batch-reuse:1
@ 1265 train 5.5186 , allloss: 5.5203, dt: 1353.46ms, fracRes: 0.0739, norm(attn): 0.1465, norm(output): 0.2656, norm(x): 0.2431, norm(y): 1.0062, norm:1.2182, tok/sec: 96842.44, flops:101.64, batch-reuse:1
@ 1266 train 5.5520 , allloss: 5.5528, dt: 1336.52ms, fracRes: 0.0827, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2408, norm(y): 1.0065, norm:1.6885, tok/sec: 98069.83, flops:102.93, batch-reuse:1
@ 1267 train 5.5851 , allloss: 5.5859, dt: 1311.39ms, fracRes: 0.0823, norm(attn): 0.1396, norm(output): 0.2656, norm(x): 0.2409, norm(y): 1.0065, norm:1.5211, tok/sec: 99948.57, flops:104.90, batch-reuse:1
@ 1268 train 5.5835 , allloss: 5.5866, dt: 1317.41ms, fracRes: 0.0758, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2431, norm(y): 1.0063, norm:1.5706, tok/sec: 99492.51, flops:104.42, batch-reuse:1
@ 1269 train 5.5491 , allloss: 5.5504, dt: 1317.92ms, fracRes: 0.0766, norm(attn): 0.1465, norm(output): 0.2656, norm(x): 0.2435, norm(y): 1.0063, norm:1.3721, tok/sec: 99453.72, flops:104.38, batch-reuse:1
@ 1270 train 5.4805 , allloss: 5.4812, dt: 1336.84ms, fracRes: 0.0796, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2420, norm(y): 1.0064, norm:1.6130, tok/sec: 98045.99, flops:102.90, batch-reuse:1
@ 1271 train 5.4834 , allloss: 5.4839, dt: 1314.30ms, fracRes: 0.0793, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2421, norm(y): 1.0064, norm:1.3414, tok/sec: 99727.63, flops:104.67, batch-reuse:1
@ 1272 train 5.4897 , allloss: 5.4906, dt: 1334.77ms, fracRes: 0.0766, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2429, norm(y): 1.0063, norm:1.2992, tok/sec: 98197.98, flops:103.06, batch-reuse:1
@ 1273 train 5.6076 , allloss: 5.6084, dt: 1339.65ms, fracRes: 0.0781, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2418, norm(y): 1.0064, norm:1.3481, tok/sec: 97840.49, flops:102.69, batch-reuse:1
@ 1274 train 5.4952 , allloss: 5.4961, dt: 1317.86ms, fracRes: 0.0834, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2418, norm(y): 1.0064, norm:1.5511, tok/sec: 99458.35, flops:104.38, batch-reuse:1
@ 1275 train 5.6582 , allloss: 5.6592, dt: 1328.56ms, fracRes: 0.0801, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2436, norm(y): 1.0063, norm:1.8407, tok/sec: 98657.17, flops:103.54, batch-reuse:1
@ 1276 train 5.4549 , allloss: 5.4558, dt: 1304.47ms, fracRes: 0.0874, norm(attn): 0.1406, norm(output): 0.2656, norm(x): 0.2416, norm(y): 1.0064, norm:1.3347, tok/sec: 100479.48, flops:105.46, batch-reuse:1
@ 1277 train 5.4473 , allloss: 5.4492, dt: 1342.59ms, fracRes: 0.0861, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2414, norm(y): 1.0064, norm:1.6542, tok/sec: 97626.08, flops:102.46, batch-reuse:1
@ 1278 train 5.5613 , allloss: 5.5633, dt: 1353.88ms, fracRes: 0.0841, norm(attn): 0.1416, norm(output): 0.2656, norm(x): 0.2419, norm(y): 1.0064, norm:1.5524, tok/sec: 96811.79, flops:101.61, batch-reuse:1
@ 1279 train 5.6540 , allloss: 5.6565, dt: 1343.53ms, fracRes: 0.0882, norm(attn): 0.1436, norm(output): 0.2656, norm(x): 0.2412, norm(y): 1.0064, norm:1.4094, tok/sec: 97558.03, flops:102.39, batch-reuse:1
@ 1280 train 5.4355 , allloss: 5.4373, dt: 1311.14ms, fracRes: 0.0894, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2411, norm(y): 1.0064, norm:1.2384, tok/sec: 99968.33, flops:104.92, batch-reuse:1
@ 1281 train 5.4488 , allloss: 5.4503, dt: 1335.55ms, fracRes: 0.0909, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2409, norm(y): 1.0065, norm:1.5076, tok/sec: 98140.71, flops:103.00, batch-reuse:1
@ 1282 train 5.4635 , allloss: 5.4657, dt: 1299.42ms, fracRes: 0.0913, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2409, norm(y): 1.0064, norm:1.5234, tok/sec: 100869.92, flops:105.86, batch-reuse:1
@ 1283 train 5.5118 , allloss: 5.5136, dt: 1291.08ms, fracRes: 0.0917, norm(attn): 0.1465, norm(output): 0.2656, norm(x): 0.2406, norm(y): 1.0064, norm:1.4810, tok/sec: 101521.30, flops:106.55, batch-reuse:1
@ 1284 train 5.4608 , allloss: 5.4630, dt: 1293.97ms, fracRes: 0.0969, norm(attn): 0.1465, norm(output): 0.2656, norm(x): 0.2391, norm(y): 1.0066, norm:1.5606, tok/sec: 101294.46, flops:106.31, batch-reuse:1
@ 1285 train 5.3920 , allloss: 5.3930, dt: 1307.30ms, fracRes: 0.0910, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2419, norm(y): 1.0064, norm:1.4937, tok/sec: 100261.82, flops:105.23, batch-reuse:1
@ 1286 train 5.6105 , allloss: 5.6116, dt: 1302.86ms, fracRes: 0.0939, norm(attn): 0.1445, norm(output): 0.2656, norm(x): 0.2412, norm(y): 1.0065, norm:1.4018, tok/sec: 100602.99, flops:105.58, batch-reuse:1
@ 1287 train 5.5389 , allloss: 5.5397, dt: 1285.76ms, fracRes: 0.0914, norm(attn): 0.1465, norm(output): 0.2656, norm(x): 0.2419, norm(y): 1.0064, norm:1.6571, tok/sec: 101941.31, flops:106.99, batch-reuse:1
@ 1288 train 5.5139 , allloss: 5.5151, dt: 1329.60ms, fracRes: 0.1012, norm(attn): 0.1426, norm(output): 0.2656, norm(x): 0.2396, norm(y): 1.0066, norm:1.5646, tok/sec: 98580.32, flops:103.46, batch-reuse:1
@ 1289 train 5.4359 , allloss: 5.4379, dt: 1355.21ms, fracRes: 0.0854, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2434, norm(y): 1.0064, norm:1.6068, tok/sec: 96716.79, flops:101.51, batch-reuse:1
@ 1290 train 5.4291 , allloss: 5.4303, dt: 1331.47ms, fracRes: 0.0865, norm(attn): 0.1436, norm(output): 0.2676, norm(x): 0.2429, norm(y): 1.0065, norm:1.4592, tok/sec: 98441.55, flops:103.32, batch-reuse:1
@ 1291 train 5.4937 , allloss: 5.4946, dt: 1310.32ms, fracRes: 0.0877, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2431, norm(y): 1.0065, norm:1.4509, tok/sec: 100030.61, flops:104.98, batch-reuse:1
@ 1292 train 5.4684 , allloss: 5.4703, dt: 1300.27ms, fracRes: 0.0934, norm(attn): 0.1455, norm(output): 0.2656, norm(x): 0.2425, norm(y): 1.0066, norm:1.8362, tok/sec: 100804.02, flops:105.80, batch-reuse:1
@ 1293 train 5.4916 , allloss: 5.4944, dt: 1290.53ms, fracRes: 0.0897, norm(attn): 0.1484, norm(output): 0.2676, norm(x): 0.2432, norm(y): 1.0065, norm:1.3943, tok/sec: 101564.27, flops:106.59, batch-reuse:1
@ 1294 train 5.4035 , allloss: 5.4049, dt: 1290.92ms, fracRes: 0.0884, norm(attn): 0.1455, norm(output): 0.2676, norm(x): 0.2433, norm(y): 1.0065, norm:1.2825, tok/sec: 101534.05, flops:106.56, batch-reuse:1
@ 1295 train 5.5778 , allloss: 5.5804, dt: 1304.98ms, fracRes: 0.0883, norm(attn): 0.1416, norm(output): 0.2676, norm(x): 0.2428, norm(y): 1.0065, norm:1.8393, tok/sec: 100439.85, flops:105.41, batch-reuse:1
@ 1296 train 5.5283 , allloss: 5.5296, dt: 1301.90ms, fracRes: 0.0910, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2430, norm(y): 1.0065, norm:1.5016, tok/sec: 100677.39, flops:105.66, batch-reuse:1
@ 1297 train 5.5755 , allloss: 5.5774, dt: 1310.28ms, fracRes: 0.0932, norm(attn): 0.1475, norm(output): 0.2676, norm(x): 0.2431, norm(y): 1.0065, norm:1.1945, tok/sec: 100033.48, flops:104.99, batch-reuse:1
@ 1298 train 5.6873 , allloss: 5.6884, dt: 1314.46ms, fracRes: 0.0966, norm(attn): 0.1475, norm(output): 0.2676, norm(x): 0.2423, norm(y): 1.0066, norm:1.7693, tok/sec: 99715.14, flops:104.65, batch-reuse:1
@ 1299 train 5.6648 , allloss: 5.6671, dt: 1329.78ms, fracRes: 0.0913, norm(attn): 0.1436, norm(output): 0.2676, norm(x): 0.2440, norm(y): 1.0065, norm:1.4216, tok/sec: 98566.37, flops:103.45, batch-reuse:1
@ 1300 train 5.6163 , allloss: 5.6184, dt: 1289.94ms, fracRes: 0.0950, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2432, norm(y): 1.0065, norm:1.4956, tok/sec: 101610.75, flops:106.64, batch-reuse:1
@ 1301 train 5.7141 , allloss: 5.7183, dt: 1317.98ms, fracRes: 0.0976, norm(attn): 0.1465, norm(output): 0.2695, norm(x): 0.2427, norm(y): 1.0066, norm:1.7696, tok/sec: 99449.44, flops:104.37, batch-reuse:1
@ 1302 train 5.6637 , allloss: 5.6659, dt: 1300.84ms, fracRes: 0.0894, norm(attn): 0.1523, norm(output): 0.2715, norm(x): 0.2455, norm(y): 1.0064, norm:1.3904, tok/sec: 100759.15, flops:105.75, batch-reuse:1
@ 1303 train 5.7413 , allloss: 5.7444, dt: 1338.07ms, fracRes: 0.0975, norm(attn): 0.1445, norm(output): 0.2676, norm(x): 0.2422, norm(y): 1.0066, norm:2.0762, tok/sec: 97956.05, flops:102.81, batch-reuse:1
@ 1304 train 5.7010 , allloss: 5.7029, dt: 1331.16ms, fracRes: 0.0999, norm(attn): 0.1406, norm(output): 0.2676, norm(x): 0.2415, norm(y): 1.0067, norm:1.8287, tok/sec: 98464.53, flops:103.34, batch-reuse:1
@ 1305 train 5.6473 , allloss: 5.6505, dt: 1335.43ms, fracRes: 0.0915, norm(attn): 0.1445, norm(output): 0.2715, norm(x): 0.2441, norm(y): 1.0065, norm:1.7437, tok/sec: 98150.02, flops:103.01, batch-reuse:1
@ 1306 train 5.5566 , allloss: 5.5603, dt: 1294.54ms, fracRes: 0.0941, norm(attn): 0.1455, norm(output): 0.2715, norm(x): 0.2446, norm(y): 1.0066, norm:1.5572, tok/sec: 101250.08, flops:106.26, batch-reuse:1
@ 1307 train 5.7151 , allloss: 5.7181, dt: 1317.52ms, fracRes: 0.0895, norm(attn): 0.1504, norm(output): 0.2715, norm(x): 0.2461, norm(y): 1.0065, norm:1.3201, tok/sec: 99484.01, flops:104.41, batch-reuse:1
@ 1308 train 5.7033 , allloss: 5.7068, dt: 1345.38ms, fracRes: 0.0931, norm(attn): 0.1484, norm(output): 0.2695, norm(x): 0.2443, norm(y): 1.0066, norm:1.6108, tok/sec: 97423.81, flops:102.25, batch-reuse:1
@ 1309 train 5.6732 , allloss: 5.6743, dt: 1300.90ms, fracRes: 0.0933, norm(attn): 0.1455, norm(output): 0.2715, norm(x): 0.2445, norm(y): 1.0066, norm:1.5578, tok/sec: 100755.10, flops:105.74, batch-reuse:1
@ 1310 train 5.6436 , allloss: 5.6453, dt: 1304.17ms, fracRes: 0.0905, norm(attn): 0.1455, norm(output): 0.2734, norm(x): 0.2460, norm(y): 1.0065, norm:1.8141, tok/sec: 100502.17, flops:105.48, batch-reuse:1
@ 1311 train 5.6651 , allloss: 5.6662, dt: 1312.49ms, fracRes: 0.0939, norm(attn): 0.1445, norm(output): 0.2695, norm(x): 0.2447, norm(y): 1.0066, norm:1.6248, tok/sec: 99865.02, flops:104.81, batch-reuse:1
@ 1312 train 5.6589 , allloss: 5.6600, dt: 1343.84ms, fracRes: 0.0935, norm(attn): 0.1445, norm(output): 0.2734, norm(x): 0.2451, norm(y): 1.0066, norm:1.5336, tok/sec: 97535.33, flops:102.37, batch-reuse:1
@ 1313 train 5.6974 , allloss: 5.6989, dt: 1332.51ms, fracRes: 0.0939, norm(attn): 0.1465, norm(output): 0.2734, norm(x): 0.2464, norm(y): 1.0066, norm:1.8147, tok/sec: 98364.81, flops:103.24, batch-reuse:1
@ 1314 train 5.6610 , allloss: 5.6655, dt: 1342.52ms, fracRes: 0.0946, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2472, norm(y): 1.0065, norm:1.6119, tok/sec: 97631.22, flops:102.47, batch-reuse:1
@ 1315 train 5.6414 , allloss: 5.6436, dt: 1319.08ms, fracRes: 0.1024, norm(attn): 0.1455, norm(output): 0.2695, norm(x): 0.2434, norm(y): 1.0067, norm:1.8564, tok/sec: 99365.93, flops:104.29, batch-reuse:1
@ 1316 train 5.5842 , allloss: 5.5864, dt: 1302.57ms, fracRes: 0.1013, norm(attn): 0.1455, norm(output): 0.2715, norm(x): 0.2444, norm(y): 1.0066, norm:1.5153, tok/sec: 100625.44, flops:105.61, batch-reuse:1
@ 1317 train 5.6864 , allloss: 5.6888, dt: 1295.04ms, fracRes: 0.0941, norm(attn): 0.1514, norm(output): 0.2773, norm(x): 0.2479, norm(y): 1.0065, norm:1.6595, tok/sec: 101210.99, flops:106.22, batch-reuse:1
@ 1318 train 5.5820 , allloss: 5.5840, dt: 1303.11ms, fracRes: 0.1061, norm(attn): 0.1436, norm(output): 0.2754, norm(x): 0.2442, norm(y): 1.0067, norm:1.8861, tok/sec: 100584.16, flops:105.56, batch-reuse:1
@ 1319 train 5.6883 , allloss: 5.6903, dt: 1275.08ms, fracRes: 0.1105, norm(attn): 0.1426, norm(output): 0.2715, norm(x): 0.2428, norm(y): 1.0068, norm:1.6109, tok/sec: 102794.95, flops:107.89, batch-reuse:1
@ 1320 train 5.7150 , allloss: 5.7183, dt: 1281.49ms, fracRes: 0.1043, norm(attn): 0.1455, norm(output): 0.2754, norm(x): 0.2438, norm(y): 1.0067, norm:1.7652, tok/sec: 102281.18, flops:107.35, batch-reuse:1
@ 1321 train 5.6578 , allloss: 5.6600, dt: 1306.63ms, fracRes: 0.1005, norm(attn): 0.1494, norm(output): 0.2734, norm(x): 0.2454, norm(y): 1.0066, norm:1.4282, tok/sec: 100312.81, flops:105.28, batch-reuse:1
@ 1322 train 5.6449 , allloss: 5.6467, dt: 1340.84ms, fracRes: 0.0954, norm(attn): 0.1484, norm(output): 0.2754, norm(x): 0.2468, norm(y): 1.0066, norm:1.6240, tok/sec: 97753.92, flops:102.59, batch-reuse:1
@ 1323 train 5.6415 , allloss: 5.6429, dt: 1299.01ms, fracRes: 0.0936, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2480, norm(y): 1.0066, norm:1.8361, tok/sec: 100901.67, flops:105.90, batch-reuse:1
@ 1324 train 5.6699 , allloss: 5.6715, dt: 1304.44ms, fracRes: 0.0942, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2477, norm(y): 1.0066, norm:1.3594, tok/sec: 100481.27, flops:105.46, batch-reuse:1
@ 1325 train 5.5911 , allloss: 5.5929, dt: 1301.13ms, fracRes: 0.0948, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2472, norm(y): 1.0066, norm:1.8718, tok/sec: 100736.68, flops:105.73, batch-reuse:1
@ 1326 train 5.5623 , allloss: 5.5652, dt: 1316.77ms, fracRes: 0.1016, norm(attn): 0.1494, norm(output): 0.2754, norm(x): 0.2458, norm(y): 1.0067, norm:1.4747, tok/sec: 99540.57, flops:104.47, batch-reuse:1
@ 1327 train 5.6995 , allloss: 5.7010, dt: 1316.37ms, fracRes: 0.0986, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2469, norm(y): 1.0067, norm:1.9450, tok/sec: 99571.08, flops:104.50, batch-reuse:1
@ 1328 train 5.6190 , allloss: 5.6204, dt: 1303.18ms, fracRes: 0.0989, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2472, norm(y): 1.0066, norm:1.4611, tok/sec: 100578.33, flops:105.56, batch-reuse:1
@ 1329 train 5.6277 , allloss: 5.6288, dt: 1320.69ms, fracRes: 0.1011, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2474, norm(y): 1.0067, norm:1.3495, tok/sec: 99244.79, flops:104.16, batch-reuse:1
@ 1330 train 5.6992 , allloss: 5.7007, dt: 1301.83ms, fracRes: 0.1117, norm(attn): 0.1455, norm(output): 0.2773, norm(x): 0.2449, norm(y): 1.0068, norm:1.7740, tok/sec: 100682.79, flops:105.67, batch-reuse:1
@ 1331 train 5.6782 , allloss: 5.6794, dt: 1340.99ms, fracRes: 0.1075, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2453, norm(y): 1.0067, norm:1.9747, tok/sec: 97742.69, flops:102.58, batch-reuse:1
@ 1332 train 5.5983 , allloss: 5.5999, dt: 1331.43ms, fracRes: 0.0999, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2478, norm(y): 1.0066, norm:1.5797, tok/sec: 98444.83, flops:103.32, batch-reuse:1
@ 1333 train 5.5898 , allloss: 5.5912, dt: 1328.52ms, fracRes: 0.1148, norm(attn): 0.1436, norm(output): 0.2754, norm(x): 0.2429, norm(y): 1.0068, norm:1.5439, tok/sec: 98659.91, flops:103.55, batch-reuse:1
@ 1334 train 5.6211 , allloss: 5.6221, dt: 1307.40ms, fracRes: 0.1044, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2455, norm(y): 1.0067, norm:1.9924, tok/sec: 100253.81, flops:105.22, batch-reuse:1
@ 1335 train 5.6557 , allloss: 5.6609, dt: 1324.44ms, fracRes: 0.0943, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2486, norm(y): 1.0066, norm:1.7114, tok/sec: 98964.22, flops:103.86, batch-reuse:1
@ 1336 train 5.6532 , allloss: 5.6591, dt: 1291.90ms, fracRes: 0.0981, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2484, norm(y): 1.0067, norm:1.6143, tok/sec: 101457.13, flops:106.48, batch-reuse:1
@ 1337 train 5.6381 , allloss: 5.6424, dt: 1286.69ms, fracRes: 0.1024, norm(attn): 0.1504, norm(output): 0.2773, norm(x): 0.2469, norm(y): 1.0068, norm:1.3907, tok/sec: 101867.53, flops:106.91, batch-reuse:1
@ 1338 train 5.6464 , allloss: 5.6480, dt: 1295.37ms, fracRes: 0.1013, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2466, norm(y): 1.0068, norm:1.6082, tok/sec: 101185.30, flops:106.20, batch-reuse:1
@ 1339 train 5.6392 , allloss: 5.6425, dt: 1306.24ms, fracRes: 0.0996, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2487, norm(y): 1.0067, norm:1.5973, tok/sec: 100343.00, flops:105.31, batch-reuse:1
@ 1340 train 5.6051 , allloss: 5.6074, dt: 1317.74ms, fracRes: 0.0993, norm(attn): 0.1523, norm(output): 0.2773, norm(x): 0.2489, norm(y): 1.0067, norm:1.4922, tok/sec: 99467.34, flops:104.39, batch-reuse:1
@ 1341 train 5.6636 , allloss: 5.6652, dt: 1327.54ms, fracRes: 0.1024, norm(attn): 0.1494, norm(output): 0.2773, norm(x): 0.2480, norm(y): 1.0067, norm:1.5794, tok/sec: 98732.88, flops:103.62, batch-reuse:1
@ 1342 train 5.7378 , allloss: 5.7388, dt: 1306.27ms, fracRes: 0.0991, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2497, norm(y): 1.0067, norm:1.5763, tok/sec: 100340.64, flops:105.31, batch-reuse:1
@ 1343 train 5.5728 , allloss: 5.5742, dt: 1309.94ms, fracRes: 0.1051, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2491, norm(y): 1.0067, norm:1.5961, tok/sec: 100059.70, flops:105.01, batch-reuse:1
@ 1344 train 5.5948 , allloss: 5.5963, dt: 1299.04ms, fracRes: 0.1128, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2470, norm(y): 1.0068, norm:1.6847, tok/sec: 100899.34, flops:105.90, batch-reuse:1
@ 1345 train 5.4907 , allloss: 5.4924, dt: 1310.14ms, fracRes: 0.1194, norm(attn): 0.1445, norm(output): 0.2773, norm(x): 0.2454, norm(y): 1.0069, norm:1.4783, tok/sec: 100043.97, flops:105.00, batch-reuse:1
@ 1346 train 5.5697 , allloss: 5.5714, dt: 1334.01ms, fracRes: 0.1107, norm(attn): 0.1484, norm(output): 0.2773, norm(x): 0.2482, norm(y): 1.0067, norm:1.7215, tok/sec: 98253.85, flops:103.12, batch-reuse:1
@ 1347 train 5.5440 , allloss: 5.5453, dt: 1326.11ms, fracRes: 0.1072, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2497, norm(y): 1.0067, norm:1.6227, tok/sec: 98839.29, flops:103.73, batch-reuse:1
@ 1348 train 5.5897 , allloss: 5.5908, dt: 1335.20ms, fracRes: 0.1119, norm(attn): 0.1455, norm(output): 0.2793, norm(x): 0.2477, norm(y): 1.0068, norm:1.6347, tok/sec: 98166.74, flops:103.03, batch-reuse:1
@ 1349 train 5.6088 , allloss: 5.6101, dt: 1312.39ms, fracRes: 0.1146, norm(attn): 0.1436, norm(output): 0.2773, norm(x): 0.2466, norm(y): 1.0069, norm:1.3035, tok/sec: 99872.85, flops:104.82, batch-reuse:1
@ 1350 train 5.5266 , allloss: 5.5278, dt: 1314.13ms, fracRes: 0.1089, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2481, norm(y): 1.0068, norm:1.3870, tok/sec: 99740.67, flops:104.68, batch-reuse:1
@ 1351 train 5.6067 , allloss: 5.6091, dt: 1339.73ms, fracRes: 0.1032, norm(attn): 0.1543, norm(output): 0.2793, norm(x): 0.2506, norm(y): 1.0067, norm:1.6511, tok/sec: 97834.76, flops:102.68, batch-reuse:1
@ 1352 train 5.6495 , allloss: 5.6508, dt: 1323.52ms, fracRes: 0.1146, norm(attn): 0.1475, norm(output): 0.2773, norm(x): 0.2467, norm(y): 1.0069, norm:1.5866, tok/sec: 99032.87, flops:103.94, batch-reuse:1
@ 1353 train 5.6114 , allloss: 5.6125, dt: 1299.60ms, fracRes: 0.1158, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2468, norm(y): 1.0069, norm:1.6671, tok/sec: 100855.92, flops:105.85, batch-reuse:1
@ 1354 train 5.6171 , allloss: 5.6184, dt: 1316.53ms, fracRes: 0.1100, norm(attn): 0.1465, norm(output): 0.2793, norm(x): 0.2489, norm(y): 1.0068, norm:1.6215, tok/sec: 99558.78, flops:104.49, batch-reuse:1
@ 1355 train 5.5838 , allloss: 5.5859, dt: 1312.44ms, fracRes: 0.1024, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2505, norm(y): 1.0067, norm:1.4510, tok/sec: 99868.57, flops:104.81, batch-reuse:1
@ 1356 train 5.6567 , allloss: 5.6577, dt: 1291.08ms, fracRes: 0.1061, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2499, norm(y): 1.0068, norm:1.6982, tok/sec: 101521.36, flops:106.55, batch-reuse:1
@ 1357 train 5.5961 , allloss: 5.5974, dt: 1319.60ms, fracRes: 0.1056, norm(attn): 0.1523, norm(output): 0.2793, norm(x): 0.2499, norm(y): 1.0067, norm:1.8053, tok/sec: 99327.10, flops:104.25, batch-reuse:1
@ 1358 train 5.5782 , allloss: 5.5796, dt: 1315.85ms, fracRes: 0.1153, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2482, norm(y): 1.0069, norm:1.7942, tok/sec: 99610.28, flops:104.54, batch-reuse:1
@ 1359 train 5.5055 , allloss: 5.5078, dt: 1308.70ms, fracRes: 0.1121, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2493, norm(y): 1.0068, norm:1.4884, tok/sec: 100154.38, flops:105.11, batch-reuse:1
@ 1360 train 5.5260 , allloss: 5.5271, dt: 1333.57ms, fracRes: 0.1101, norm(attn): 0.1465, norm(output): 0.2773, norm(x): 0.2488, norm(y): 1.0068, norm:1.5419, tok/sec: 98286.43, flops:103.15, batch-reuse:1
@ 1361 train 5.5819 , allloss: 5.5828, dt: 1322.11ms, fracRes: 0.1075, norm(attn): 0.1465, norm(output): 0.2793, norm(x): 0.2500, norm(y): 1.0068, norm:1.3490, tok/sec: 99138.75, flops:104.05, batch-reuse:1
@ 1362 train 5.6509 , allloss: 5.6523, dt: 1346.50ms, fracRes: 0.1088, norm(attn): 0.1484, norm(output): 0.2812, norm(x): 0.2510, norm(y): 1.0068, norm:1.3506, tok/sec: 97342.42, flops:102.16, batch-reuse:1
@ 1363 train 5.5570 , allloss: 5.5588, dt: 1337.02ms, fracRes: 0.1141, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2485, norm(y): 1.0069, norm:1.6562, tok/sec: 98032.93, flops:102.89, batch-reuse:1
@ 1364 train 5.4959 , allloss: 5.4971, dt: 1286.19ms, fracRes: 0.1123, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2491, norm(y): 1.0069, norm:1.5406, tok/sec: 101907.48, flops:106.95, batch-reuse:1
@ 1365 train 5.6093 , allloss: 5.6103, dt: 1279.07ms, fracRes: 0.1130, norm(attn): 0.1523, norm(output): 0.2793, norm(x): 0.2497, norm(y): 1.0069, norm:1.5221, tok/sec: 102474.56, flops:107.55, batch-reuse:1
@ 1366 train 5.5486 , allloss: 5.5498, dt: 1332.85ms, fracRes: 0.1143, norm(attn): 0.1504, norm(output): 0.2793, norm(x): 0.2493, norm(y): 1.0069, norm:1.2849, tok/sec: 98339.74, flops:103.21, batch-reuse:1
@ 1367 train 5.5265 , allloss: 5.5273, dt: 1292.44ms, fracRes: 0.1123, norm(attn): 0.1514, norm(output): 0.2793, norm(x): 0.2501, norm(y): 1.0068, norm:1.3437, tok/sec: 101414.16, flops:106.44, batch-reuse:1
@ 1368 train 5.6586 , allloss: 5.6598, dt: 1294.00ms, fracRes: 0.1190, norm(attn): 0.1514, norm(output): 0.2793, norm(x): 0.2489, norm(y): 1.0069, norm:1.5820, tok/sec: 101292.29, flops:106.31, batch-reuse:1
@ 1369 train 5.6211 , allloss: 5.6226, dt: 1316.71ms, fracRes: 0.1152, norm(attn): 0.1523, norm(output): 0.2793, norm(x): 0.2502, norm(y): 1.0068, norm:1.5648, tok/sec: 99545.31, flops:104.47, batch-reuse:1
@ 1370 train 5.5276 , allloss: 5.5290, dt: 1295.21ms, fracRes: 0.1111, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2514, norm(y): 1.0068, norm:1.9744, tok/sec: 101197.42, flops:106.21, batch-reuse:1
@ 1371 train 5.6311 , allloss: 5.6330, dt: 1295.47ms, fracRes: 0.1220, norm(attn): 0.1465, norm(output): 0.2793, norm(x): 0.2478, norm(y): 1.0069, norm:1.5408, tok/sec: 101177.53, flops:106.19, batch-reuse:1
@ 1372 train 5.5109 , allloss: 5.5138, dt: 1315.80ms, fracRes: 0.1222, norm(attn): 0.1484, norm(output): 0.2793, norm(x): 0.2477, norm(y): 1.0069, norm:1.7106, tok/sec: 99613.62, flops:104.55, batch-reuse:1
@ 1373 train 5.5125 , allloss: 5.5170, dt: 1287.84ms, fracRes: 0.1139, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2514, norm(y): 1.0068, norm:1.6400, tok/sec: 101776.48, flops:106.82, batch-reuse:1
@ 1374 train 5.5281 , allloss: 5.5319, dt: 1312.63ms, fracRes: 0.1132, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2522, norm(y): 1.0068, norm:1.5795, tok/sec: 99854.17, flops:104.80, batch-reuse:1
@ 1375 train 5.5062 , allloss: 5.5093, dt: 1331.95ms, fracRes: 0.1284, norm(attn): 0.1436, norm(output): 0.2793, norm(x): 0.2468, norm(y): 1.0070, norm:1.5616, tok/sec: 98405.75, flops:103.28, batch-reuse:1
@ 1376 train 5.4778 , allloss: 5.4816, dt: 1323.21ms, fracRes: 0.1241, norm(attn): 0.1494, norm(output): 0.2793, norm(x): 0.2476, norm(y): 1.0070, norm:1.9287, tok/sec: 99056.44, flops:103.96, batch-reuse:1
@ 1377 train 5.4852 , allloss: 5.4873, dt: 1316.39ms, fracRes: 0.1101, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2518, norm(y): 1.0069, norm:1.7829, tok/sec: 99569.13, flops:104.50, batch-reuse:1
@ 1378 train 5.6387 , allloss: 5.6405, dt: 1310.84ms, fracRes: 0.1095, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2521, norm(y): 1.0069, norm:2.1328, tok/sec: 99990.56, flops:104.94, batch-reuse:1
@ 1379 train 5.5829 , allloss: 5.5842, dt: 1313.81ms, fracRes: 0.1104, norm(attn): 0.1562, norm(output): 0.2812, norm(x): 0.2518, norm(y): 1.0069, norm:1.6434, tok/sec: 99764.51, flops:104.70, batch-reuse:1
@ 1380 train 5.4408 , allloss: 5.4433, dt: 1310.04ms, fracRes: 0.1125, norm(attn): 0.1543, norm(output): 0.2812, norm(x): 0.2518, norm(y): 1.0069, norm:1.8064, tok/sec: 100052.05, flops:105.01, batch-reuse:1
@ 1381 train 5.5089 , allloss: 5.5102, dt: 1299.31ms, fracRes: 0.1221, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2492, norm(y): 1.0070, norm:1.7109, tok/sec: 100877.86, flops:105.87, batch-reuse:1
@ 1382 train 5.5110 , allloss: 5.5124, dt: 1339.27ms, fracRes: 0.1209, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2495, norm(y): 1.0070, norm:1.5631, tok/sec: 97868.25, flops:102.71, batch-reuse:1
@ 1383 train 5.5731 , allloss: 5.5749, dt: 1331.92ms, fracRes: 0.1188, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2513, norm(y): 1.0069, norm:1.4790, tok/sec: 98408.11, flops:103.28, batch-reuse:1
@ 1384 train 5.4446 , allloss: 5.4462, dt: 1298.60ms, fracRes: 0.1186, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2515, norm(y): 1.0069, norm:1.5542, tok/sec: 100933.52, flops:105.93, batch-reuse:1
@ 1385 train 5.5156 , allloss: 5.5190, dt: 1297.93ms, fracRes: 0.1228, norm(attn): 0.1484, norm(output): 0.2812, norm(x): 0.2510, norm(y): 1.0069, norm:1.2549, tok/sec: 100985.21, flops:105.99, batch-reuse:1
@ 1386 train 5.4920 , allloss: 5.4947, dt: 1288.63ms, fracRes: 0.1250, norm(attn): 0.1494, norm(output): 0.2812, norm(x): 0.2500, norm(y): 1.0070, norm:1.4124, tok/sec: 101714.11, flops:106.75, batch-reuse:1
@ 1387 train 5.4747 , allloss: 5.4760, dt: 1324.15ms, fracRes: 0.1249, norm(attn): 0.1533, norm(output): 0.2812, norm(x): 0.2503, norm(y): 1.0070, norm:1.5916, tok/sec: 98985.99, flops:103.89, batch-reuse:1
@ 1388 train 5.5522 , allloss: 5.5546, dt: 1309.18ms, fracRes: 0.1203, norm(attn): 0.1553, norm(output): 0.2812, norm(x): 0.2517, norm(y): 1.0069, norm:1.6111, tok/sec: 100117.48, flops:105.08, batch-reuse:1
@ 1389 train 5.3609 , allloss: 5.3638, dt: 1286.27ms, fracRes: 0.1224, norm(attn): 0.1543, norm(output): 0.2812, norm(x): 0.2509, norm(y): 1.0070, norm:1.3894, tok/sec: 101900.51, flops:106.95, batch-reuse:1
@ 1390 train 5.6271 , allloss: 5.6293, dt: 1312.68ms, fracRes: 0.1223, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2503, norm(y): 1.0070, norm:1.6128, tok/sec: 99850.34, flops:104.79, batch-reuse:1
@ 1391 train 5.5311 , allloss: 5.5343, dt: 1339.22ms, fracRes: 0.1216, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2518, norm(y): 1.0070, norm:1.5473, tok/sec: 97871.74, flops:102.72, batch-reuse:1
@ 1392 train 5.4712 , allloss: 5.4731, dt: 1292.20ms, fracRes: 0.1247, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2512, norm(y): 1.0070, norm:1.5586, tok/sec: 101433.45, flops:106.46, batch-reuse:1
@ 1393 train 5.4483 , allloss: 5.4509, dt: 1327.64ms, fracRes: 0.1209, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2522, norm(y): 1.0069, norm:1.4721, tok/sec: 98725.91, flops:103.61, batch-reuse:1
@ 1394 train 5.4436 , allloss: 5.4455, dt: 1305.31ms, fracRes: 0.1274, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2507, norm(y): 1.0070, norm:1.5101, tok/sec: 100414.28, flops:105.39, batch-reuse:1
@ 1395 train 5.4495 , allloss: 5.4519, dt: 1297.23ms, fracRes: 0.1288, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2506, norm(y): 1.0070, norm:1.2960, tok/sec: 101039.68, flops:106.04, batch-reuse:1
@ 1396 train 5.4557 , allloss: 5.4580, dt: 1311.25ms, fracRes: 0.1275, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2510, norm(y): 1.0070, norm:1.4791, tok/sec: 99959.71, flops:104.91, batch-reuse:1
@ 1397 train 5.4905 , allloss: 5.4929, dt: 1333.91ms, fracRes: 0.1252, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2515, norm(y): 1.0070, norm:1.2621, tok/sec: 98261.41, flops:103.13, batch-reuse:1
@ 1398 train 5.4802 , allloss: 5.4821, dt: 1308.75ms, fracRes: 0.1263, norm(attn): 0.1484, norm(output): 0.2812, norm(x): 0.2513, norm(y): 1.0070, norm:1.4220, tok/sec: 100150.35, flops:105.11, batch-reuse:1
@ 1399 train 5.4041 , allloss: 5.4059, dt: 1298.87ms, fracRes: 0.1228, norm(attn): 0.1523, norm(output): 0.2812, norm(x): 0.2524, norm(y): 1.0070, norm:1.4528, tok/sec: 100912.62, flops:105.91, batch-reuse:1
@ 1400 train 5.5401 , allloss: 5.5428, dt: 1277.54ms, fracRes: 0.1237, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2541, norm(y): 1.0070, norm:1.2833, tok/sec: 102597.22, flops:107.68, batch-reuse:1
@ 1401 train 5.4303 , allloss: 5.4326, dt: 1300.26ms, fracRes: 0.1241, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2528, norm(y): 1.0070, norm:1.5721, tok/sec: 100804.80, flops:105.80, batch-reuse:1
@ 1402 train 5.3814 , allloss: 5.3831, dt: 1321.11ms, fracRes: 0.1250, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2521, norm(y): 1.0071, norm:1.4317, tok/sec: 99213.92, flops:104.13, batch-reuse:1
@ 1403 train 5.4918 , allloss: 5.4941, dt: 1316.89ms, fracRes: 0.1188, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2545, norm(y): 1.0069, norm:1.5254, tok/sec: 99531.13, flops:104.46, batch-reuse:1
@ 1404 train 5.4292 , allloss: 5.4309, dt: 1300.69ms, fracRes: 0.1254, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2524, norm(y): 1.0071, norm:1.3899, tok/sec: 100771.19, flops:105.76, batch-reuse:1
@ 1405 train 5.4608 , allloss: 5.4634, dt: 1300.60ms, fracRes: 0.1278, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2520, norm(y): 1.0071, norm:1.3123, tok/sec: 100778.38, flops:105.77, batch-reuse:1
@ 1406 train 5.5685 , allloss: 5.5703, dt: 1304.73ms, fracRes: 0.1305, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2519, norm(y): 1.0071, norm:1.5032, tok/sec: 100458.86, flops:105.43, batch-reuse:1
@ 1407 train 5.4505 , allloss: 5.4523, dt: 1300.96ms, fracRes: 0.1342, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2520, norm(y): 1.0071, norm:1.8932, tok/sec: 100750.54, flops:105.74, batch-reuse:1
@ 1408 train 5.4467 , allloss: 5.4486, dt: 1340.98ms, fracRes: 0.1345, norm(attn): 0.1543, norm(output): 0.2812, norm(x): 0.2511, norm(y): 1.0071, norm:1.8872, tok/sec: 97743.45, flops:102.58, batch-reuse:1
@ 1409 train 5.4325 , allloss: 5.4344, dt: 1324.38ms, fracRes: 0.1371, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2512, norm(y): 1.0071, norm:1.2745, tok/sec: 98968.46, flops:103.87, batch-reuse:1
@ 1410 train 5.4175 , allloss: 5.4187, dt: 1295.35ms, fracRes: 0.1344, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2519, norm(y): 1.0071, norm:1.7235, tok/sec: 101186.58, flops:106.20, batch-reuse:1
@ 1411 train 5.4343 , allloss: 5.4356, dt: 1284.97ms, fracRes: 0.1319, norm(attn): 0.1514, norm(output): 0.2832, norm(x): 0.2519, norm(y): 1.0071, norm:2.0413, tok/sec: 102004.09, flops:107.06, batch-reuse:1
@ 1412 train 5.3987 , allloss: 5.4001, dt: 1315.48ms, fracRes: 0.1359, norm(attn): 0.1514, norm(output): 0.2812, norm(x): 0.2510, norm(y): 1.0071, norm:1.5048, tok/sec: 99638.12, flops:104.57, batch-reuse:1
@ 1413 train 5.3983 , allloss: 5.4002, dt: 1306.81ms, fracRes: 0.1365, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2515, norm(y): 1.0071, norm:1.5585, tok/sec: 100299.03, flops:105.27, batch-reuse:1
@ 1414 train 5.4068 , allloss: 5.4083, dt: 1313.00ms, fracRes: 0.1366, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2510, norm(y): 1.0071, norm:1.4917, tok/sec: 99826.01, flops:104.77, batch-reuse:1
@ 1415 train 5.4784 , allloss: 5.4803, dt: 1302.58ms, fracRes: 0.1353, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2511, norm(y): 1.0071, norm:1.4919, tok/sec: 100624.94, flops:105.61, batch-reuse:1
@ 1416 train 5.5034 , allloss: 5.5050, dt: 1288.46ms, fracRes: 0.1395, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2506, norm(y): 1.0071, norm:1.4111, tok/sec: 101727.76, flops:106.77, batch-reuse:1
@ 1417 train 5.4319 , allloss: 5.4335, dt: 1290.32ms, fracRes: 0.1434, norm(attn): 0.1504, norm(output): 0.2812, norm(x): 0.2490, norm(y): 1.0072, norm:1.6742, tok/sec: 101580.77, flops:106.61, batch-reuse:1
@ 1418 train 5.4433 , allloss: 5.4460, dt: 1328.48ms, fracRes: 0.1297, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2531, norm(y): 1.0070, norm:1.8284, tok/sec: 98663.01, flops:103.55, batch-reuse:1
@ 1419 train 5.5409 , allloss: 5.5427, dt: 1325.82ms, fracRes: 0.1395, norm(attn): 0.1455, norm(output): 0.2812, norm(x): 0.2496, norm(y): 1.0073, norm:1.7331, tok/sec: 98860.92, flops:103.76, batch-reuse:1
@ 1420 train 5.4922 , allloss: 5.4936, dt: 1308.73ms, fracRes: 0.1391, norm(attn): 0.1475, norm(output): 0.2852, norm(x): 0.2507, norm(y): 1.0073, norm:1.7569, tok/sec: 100151.75, flops:105.11, batch-reuse:1
@ 1421 train 5.4718 , allloss: 5.4737, dt: 1303.69ms, fracRes: 0.1324, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2533, norm(y): 1.0072, norm:1.5268, tok/sec: 100539.41, flops:105.52, batch-reuse:1
@ 1422 train 5.4078 , allloss: 5.4101, dt: 1316.78ms, fracRes: 0.1298, norm(attn): 0.1533, norm(output): 0.2852, norm(x): 0.2540, norm(y): 1.0071, norm:1.6045, tok/sec: 99539.53, flops:104.47, batch-reuse:1
@ 1423 train 5.4362 , allloss: 5.4384, dt: 1341.48ms, fracRes: 0.1315, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2534, norm(y): 1.0072, norm:1.5979, tok/sec: 97707.10, flops:102.55, batch-reuse:1
@ 1424 train 5.4230 , allloss: 5.4252, dt: 1332.04ms, fracRes: 0.1306, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2543, norm(y): 1.0071, norm:1.3552, tok/sec: 98399.65, flops:103.27, batch-reuse:1
@ 1425 train 5.4053 , allloss: 5.4067, dt: 1295.63ms, fracRes: 0.1370, norm(attn): 0.1504, norm(output): 0.2832, norm(x): 0.2520, norm(y): 1.0072, norm:1.5219, tok/sec: 101164.72, flops:106.17, batch-reuse:1
@ 1426 train 5.3032 , allloss: 5.3061, dt: 1298.51ms, fracRes: 0.1360, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2535, norm(y): 1.0072, norm:1.5286, tok/sec: 100940.67, flops:105.94, batch-reuse:1
@ 1427 train 5.3985 , allloss: 5.4004, dt: 1309.83ms, fracRes: 0.1386, norm(attn): 0.1533, norm(output): 0.2832, norm(x): 0.2535, norm(y): 1.0072, norm:1.6107, tok/sec: 100067.62, flops:105.02, batch-reuse:1
@ 1428 train 5.3808 , allloss: 5.3824, dt: 1296.79ms, fracRes: 0.1325, norm(attn): 0.1553, norm(output): 0.2832, norm(x): 0.2551, norm(y): 1.0071, norm:1.3140, tok/sec: 101073.94, flops:106.08, batch-reuse:1
@ 1429 train 5.4028 , allloss: 5.4041, dt: 1311.89ms, fracRes: 0.1401, norm(attn): 0.1514, norm(output): 0.2852, norm(x): 0.2527, norm(y): 1.0073, norm:1.3642, tok/sec: 99910.52, flops:104.86, batch-reuse:1
@ 1430 train 5.4452 , allloss: 5.4460, dt: 1317.58ms, fracRes: 0.1343, norm(attn): 0.1504, norm(output): 0.2852, norm(x): 0.2541, norm(y): 1.0072, norm:1.7451, tok/sec: 99479.66, flops:104.41, batch-reuse:1
@ 1431 train 5.4016 , allloss: 5.4035, dt: 1294.61ms, fracRes: 0.1349, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2541, norm(y): 1.0072, norm:2.0965, tok/sec: 101244.78, flops:106.26, batch-reuse:1
@ 1432 train 5.3460 , allloss: 5.3496, dt: 1316.72ms, fracRes: 0.1391, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2536, norm(y): 1.0072, norm:1.2833, tok/sec: 99544.47, flops:104.47, batch-reuse:1
@ 1433 train 5.4122 , allloss: 5.4147, dt: 1312.26ms, fracRes: 0.1361, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2539, norm(y): 1.0072, norm:1.7109, tok/sec: 99882.43, flops:104.83, batch-reuse:1
@ 1434 train 5.4680 , allloss: 5.4698, dt: 1326.00ms, fracRes: 0.1377, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2540, norm(y): 1.0072, norm:2.0795, tok/sec: 98847.81, flops:103.74, batch-reuse:1
@ 1435 train 5.3856 , allloss: 5.3879, dt: 1310.88ms, fracRes: 0.1372, norm(attn): 0.1543, norm(output): 0.2832, norm(x): 0.2542, norm(y): 1.0072, norm:1.5243, tok/sec: 99987.43, flops:104.94, batch-reuse:1
@ 1436 train 5.3772 , allloss: 5.3802, dt: 1287.93ms, fracRes: 0.1441, norm(attn): 0.1514, norm(output): 0.2852, norm(x): 0.2521, norm(y): 1.0073, norm:1.8978, tok/sec: 101769.41, flops:106.81, batch-reuse:1
@ 1437 train 5.3917 , allloss: 5.3938, dt: 1285.37ms, fracRes: 0.1430, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2536, norm(y): 1.0072, norm:1.5085, tok/sec: 101972.55, flops:107.02, batch-reuse:1
@ 1438 train 5.3218 , allloss: 5.3255, dt: 1297.51ms, fracRes: 0.1413, norm(attn): 0.1562, norm(output): 0.2832, norm(x): 0.2537, norm(y): 1.0072, norm:1.5304, tok/sec: 101018.48, flops:106.02, batch-reuse:1
@ 1439 train 5.3419 , allloss: 5.3445, dt: 1303.26ms, fracRes: 0.1449, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2518, norm(y): 1.0073, norm:1.4867, tok/sec: 100572.62, flops:105.55, batch-reuse:1
@ 1440 train 5.3725 , allloss: 5.3755, dt: 1309.00ms, fracRes: 0.1393, norm(attn): 0.1562, norm(output): 0.2852, norm(x): 0.2540, norm(y): 1.0072, norm:1.6833, tok/sec: 100131.52, flops:105.09, batch-reuse:1
@ 1441 train 5.3603 , allloss: 5.3627, dt: 1327.12ms, fracRes: 0.1452, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2530, norm(y): 1.0073, norm:1.4461, tok/sec: 98764.13, flops:103.65, batch-reuse:1
@ 1442 train 5.3905 , allloss: 5.3925, dt: 1327.12ms, fracRes: 0.1454, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2534, norm(y): 1.0073, norm:1.9451, tok/sec: 98764.25, flops:103.65, batch-reuse:1
@ 1443 train 5.3174 , allloss: 5.3202, dt: 1332.56ms, fracRes: 0.1433, norm(attn): 0.1543, norm(output): 0.2852, norm(x): 0.2537, norm(y): 1.0073, norm:1.4708, tok/sec: 98360.80, flops:103.23, batch-reuse:1
@ 1444 train 5.3474 , allloss: 5.3494, dt: 1329.61ms, fracRes: 0.1494, norm(attn): 0.1523, norm(output): 0.2832, norm(x): 0.2520, norm(y): 1.0073, norm:1.7835, tok/sec: 98579.24, flops:103.46, batch-reuse:1
@ 1445 train 5.4262 , allloss: 5.4291, dt: 1314.18ms, fracRes: 0.1449, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2540, norm(y): 1.0072, norm:1.5234, tok/sec: 99736.83, flops:104.68, batch-reuse:1
@ 1446 train 5.4075 , allloss: 5.4092, dt: 1335.12ms, fracRes: 0.1452, norm(attn): 0.1533, norm(output): 0.2852, norm(x): 0.2537, norm(y): 1.0073, norm:1.4735, tok/sec: 98172.61, flops:103.03, batch-reuse:1
@ 1447 train 5.3937 , allloss: 5.3947, dt: 1310.20ms, fracRes: 0.1486, norm(attn): 0.1533, norm(output): 0.2871, norm(x): 0.2535, norm(y): 1.0073, norm:1.9578, tok/sec: 100039.89, flops:104.99, batch-reuse:1
@ 1448 train 5.3530 , allloss: 5.3551, dt: 1309.18ms, fracRes: 0.1485, norm(attn): 0.1553, norm(output): 0.2852, norm(x): 0.2523, norm(y): 1.0073, norm:1.5606, tok/sec: 100117.57, flops:105.08, batch-reuse:1
@ 1449 train 5.4534 , allloss: 5.4561, dt: 1320.10ms, fracRes: 0.1476, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2534, norm(y): 1.0073, norm:1.6392, tok/sec: 99289.33, flops:104.21, batch-reuse:1
@ 1450 train 5.4201 , allloss: 5.4242, dt: 1279.97ms, fracRes: 0.1441, norm(attn): 0.1553, norm(output): 0.2852, norm(x): 0.2542, norm(y): 1.0073, norm:1.5318, tok/sec: 102402.18, flops:107.47, batch-reuse:1
@ 1451 train 5.4440 , allloss: 5.4454, dt: 1285.75ms, fracRes: 0.1411, norm(attn): 0.1562, norm(output): 0.2871, norm(x): 0.2541, norm(y): 1.0073, norm:1.6647, tok/sec: 101942.01, flops:106.99, batch-reuse:1
@ 1452 train 5.3301 , allloss: 5.3321, dt: 1289.31ms, fracRes: 0.1439, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2544, norm(y): 1.0073, norm:1.7276, tok/sec: 101660.56, flops:106.69, batch-reuse:1
@ 1453 train 5.3763 , allloss: 5.3795, dt: 1312.62ms, fracRes: 0.1456, norm(attn): 0.1572, norm(output): 0.2891, norm(x): 0.2558, norm(y): 1.0073, norm:1.7763, tok/sec: 99855.47, flops:104.80, batch-reuse:1
@ 1454 train 5.3743 , allloss: 5.3763, dt: 1291.93ms, fracRes: 0.1516, norm(attn): 0.1523, norm(output): 0.2852, norm(x): 0.2528, norm(y): 1.0074, norm:1.3657, tok/sec: 101454.14, flops:106.48, batch-reuse:1
@ 1455 train 5.2997 , allloss: 5.3015, dt: 1317.76ms, fracRes: 0.1383, norm(attn): 0.1543, norm(output): 0.2871, norm(x): 0.2565, norm(y): 1.0073, norm:1.4888, tok/sec: 99465.54, flops:104.39, batch-reuse:1
@ 1456 train 5.3431 , allloss: 5.3452, dt: 1333.23ms, fracRes: 0.1380, norm(attn): 0.1572, norm(output): 0.2910, norm(x): 0.2569, norm(y): 1.0073, norm:1.6044, tok/sec: 98311.65, flops:103.18, batch-reuse:1
@ 1457 train 5.3538 , allloss: 5.3556, dt: 1291.05ms, fracRes: 0.1450, norm(attn): 0.1543, norm(output): 0.2910, norm(x): 0.2563, norm(y): 1.0074, norm:1.7510, tok/sec: 101523.27, flops:106.55, batch-reuse:1
@ 1458 train 5.3876 , allloss: 5.3909, dt: 1287.33ms, fracRes: 0.1514, norm(attn): 0.1553, norm(output): 0.2871, norm(x): 0.2547, norm(y): 1.0074, norm:1.7732, tok/sec: 101816.64, flops:106.86, batch-reuse:1
@ 1459 train 5.3991 , allloss: 5.4039, dt: 1293.93ms, fracRes: 0.1414, norm(attn): 0.1592, norm(output): 0.2891, norm(x): 0.2580, norm(y): 1.0072, norm:1.4723, tok/sec: 101297.82, flops:106.31, batch-reuse:1
@ 1460 train 5.3350 , allloss: 5.3377, dt: 1307.18ms, fracRes: 0.1544, norm(attn): 0.1504, norm(output): 0.2852, norm(x): 0.2534, norm(y): 1.0076, norm:1.8179, tok/sec: 100270.54, flops:105.24, batch-reuse:1
@ 1461 train 5.2796 , allloss: 5.2816, dt: 1334.45ms, fracRes: 0.1450, norm(attn): 0.1504, norm(output): 0.2910, norm(x): 0.2562, norm(y): 1.0074, norm:1.6672, tok/sec: 98221.93, flops:103.09, batch-reuse:1
@ 1462 train 5.3507 , allloss: 5.3529, dt: 1302.77ms, fracRes: 0.1378, norm(attn): 0.1533, norm(output): 0.2910, norm(x): 0.2581, norm(y): 1.0073, norm:1.8380, tok/sec: 100610.54, flops:105.59, batch-reuse:1
@ 1463 train 5.3518 , allloss: 5.3568, dt: 1299.03ms, fracRes: 0.1373, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2587, norm(y): 1.0072, norm:1.7959, tok/sec: 100900.21, flops:105.90, batch-reuse:1
@ 1464 train 5.3542 , allloss: 5.3576, dt: 1310.28ms, fracRes: 0.1496, norm(attn): 0.1533, norm(output): 0.2891, norm(x): 0.2544, norm(y): 1.0074, norm:1.3886, tok/sec: 100033.57, flops:104.99, batch-reuse:1
@ 1465 train 5.2593 , allloss: 5.2626, dt: 1329.41ms, fracRes: 0.1521, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2543, norm(y): 1.0075, norm:1.6264, tok/sec: 98593.86, flops:103.48, batch-reuse:1
@ 1466 train 5.2542 , allloss: 5.2566, dt: 1338.42ms, fracRes: 0.1443, norm(attn): 0.1553, norm(output): 0.2910, norm(x): 0.2567, norm(y): 1.0073, norm:1.7332, tok/sec: 97930.11, flops:102.78, batch-reuse:1
@ 1467 train 5.3477 , allloss: 5.3488, dt: 1299.65ms, fracRes: 0.1454, norm(attn): 0.1514, norm(output): 0.2891, norm(x): 0.2557, norm(y): 1.0074, norm:1.5713, tok/sec: 100851.75, flops:105.85, batch-reuse:1
@ 1468 train 5.3671 , allloss: 5.3690, dt: 1307.14ms, fracRes: 0.1420, norm(attn): 0.1533, norm(output): 0.2871, norm(x): 0.2562, norm(y): 1.0074, norm:1.4917, tok/sec: 100274.02, flops:105.24, batch-reuse:1
@ 1469 train 5.5068 , allloss: 5.5084, dt: 1335.82ms, fracRes: 0.1467, norm(attn): 0.1572, norm(output): 0.2910, norm(x): 0.2561, norm(y): 1.0073, norm:2.3985, tok/sec: 98121.31, flops:102.98, batch-reuse:1
@ 1470 train 5.3490 , allloss: 5.3522, dt: 1316.67ms, fracRes: 0.1454, norm(attn): 0.1582, norm(output): 0.2930, norm(x): 0.2574, norm(y): 1.0073, norm:1.5301, tok/sec: 99548.14, flops:104.48, batch-reuse:1
@ 1471 train 5.2505 , allloss: 5.2522, dt: 1324.12ms, fracRes: 0.1521, norm(attn): 0.1562, norm(output): 0.2910, norm(x): 0.2551, norm(y): 1.0075, norm:1.7884, tok/sec: 98988.18, flops:103.89, batch-reuse:1
@ 1472 train 5.3171 , allloss: 5.3188, dt: 1310.02ms, fracRes: 0.1471, norm(attn): 0.1562, norm(output): 0.2891, norm(x): 0.2567, norm(y): 1.0074, norm:1.9023, tok/sec: 100053.60, flops:105.01, batch-reuse:1
@ 1473 train 5.3730 , allloss: 5.3751, dt: 1320.94ms, fracRes: 0.1394, norm(attn): 0.1572, norm(output): 0.2910, norm(x): 0.2594, norm(y): 1.0072, norm:2.0798, tok/sec: 99226.11, flops:104.14, batch-reuse:1
@ 1474 train 5.5314 , allloss: 5.5331, dt: 1315.94ms, fracRes: 0.1455, norm(attn): 0.1543, norm(output): 0.2930, norm(x): 0.2580, norm(y): 1.0074, norm:1.7538, tok/sec: 99603.15, flops:104.54, batch-reuse:1
@ 1475 train 5.3550 , allloss: 5.3566, dt: 1285.57ms, fracRes: 0.1465, norm(attn): 0.1533, norm(output): 0.2930, norm(x): 0.2580, norm(y): 1.0074, norm:1.6238, tok/sec: 101956.13, flops:107.00, batch-reuse:1
@ 1476 train 5.2949 , allloss: 5.2968, dt: 1323.89ms, fracRes: 0.1486, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2580, norm(y): 1.0074, norm:1.6229, tok/sec: 99005.56, flops:103.91, batch-reuse:1
@ 1477 train 5.3312 , allloss: 5.3325, dt: 1312.15ms, fracRes: 0.1544, norm(attn): 0.1543, norm(output): 0.2910, norm(x): 0.2563, norm(y): 1.0075, norm:1.7234, tok/sec: 99891.11, flops:104.84, batch-reuse:1
@ 1478 train 5.2842 , allloss: 5.2856, dt: 1325.60ms, fracRes: 0.1513, norm(attn): 0.1553, norm(output): 0.2930, norm(x): 0.2565, norm(y): 1.0075, norm:1.6659, tok/sec: 98877.83, flops:103.77, batch-reuse:1
@ 1479 train 5.3203 , allloss: 5.3222, dt: 1342.94ms, fracRes: 0.1482, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2579, norm(y): 1.0074, norm:1.9930, tok/sec: 97600.62, flops:102.43, batch-reuse:1
@ 1480 train 5.3378 , allloss: 5.3397, dt: 1312.88ms, fracRes: 0.1439, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2589, norm(y): 1.0074, norm:1.5665, tok/sec: 99835.27, flops:104.78, batch-reuse:1
@ 1481 train 5.3191 , allloss: 5.3208, dt: 1326.23ms, fracRes: 0.1460, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2587, norm(y): 1.0074, norm:1.6697, tok/sec: 98830.23, flops:103.72, batch-reuse:1
@ 1482 train 5.3623 , allloss: 5.3636, dt: 1323.60ms, fracRes: 0.1518, norm(attn): 0.1543, norm(output): 0.2969, norm(x): 0.2580, norm(y): 1.0075, norm:1.5421, tok/sec: 99026.93, flops:103.93, batch-reuse:1
@ 1483 train 5.3906 , allloss: 5.3927, dt: 1305.88ms, fracRes: 0.1531, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2572, norm(y): 1.0075, norm:1.7949, tok/sec: 100370.42, flops:105.34, batch-reuse:1
@ 1484 train 5.4374 , allloss: 5.4399, dt: 1320.83ms, fracRes: 0.1517, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2584, norm(y): 1.0074, norm:1.4310, tok/sec: 99234.94, flops:104.15, batch-reuse:1
@ 1485 train 5.5300 , allloss: 5.5311, dt: 1315.72ms, fracRes: 0.1549, norm(attn): 0.1543, norm(output): 0.2930, norm(x): 0.2577, norm(y): 1.0075, norm:1.8404, tok/sec: 99619.96, flops:104.55, batch-reuse:1
@ 1486 train 5.4733 , allloss: 5.4749, dt: 1298.10ms, fracRes: 0.1497, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2595, norm(y): 1.0074, norm:1.4576, tok/sec: 100971.91, flops:105.97, batch-reuse:1
@ 1487 train 5.4591 , allloss: 5.4602, dt: 1292.81ms, fracRes: 0.1555, norm(attn): 0.1543, norm(output): 0.2930, norm(x): 0.2576, norm(y): 1.0075, norm:1.4980, tok/sec: 101385.43, flops:106.41, batch-reuse:1
@ 1488 train 5.4349 , allloss: 5.4359, dt: 1306.27ms, fracRes: 0.1519, norm(attn): 0.1562, norm(output): 0.2930, norm(x): 0.2591, norm(y): 1.0074, norm:2.0825, tok/sec: 100340.47, flops:105.31, batch-reuse:1
@ 1489 train 5.5835 , allloss: 5.5854, dt: 1289.03ms, fracRes: 0.1502, norm(attn): 0.1572, norm(output): 0.2949, norm(x): 0.2602, norm(y): 1.0074, norm:1.6855, tok/sec: 101682.58, flops:106.72, batch-reuse:1
@ 1490 train 5.5921 , allloss: 5.5936, dt: 1306.96ms, fracRes: 0.1572, norm(attn): 0.1533, norm(output): 0.2969, norm(x): 0.2575, norm(y): 1.0075, norm:1.6270, tok/sec: 100287.33, flops:105.25, batch-reuse:1
@ 1491 train 5.5884 , allloss: 5.5904, dt: 1312.51ms, fracRes: 0.1580, norm(attn): 0.1543, norm(output): 0.2949, norm(x): 0.2578, norm(y): 1.0075, norm:1.6032, tok/sec: 99863.35, flops:104.81, batch-reuse:1
@ 1492 train 5.4572 , allloss: 5.4593, dt: 1316.59ms, fracRes: 0.1568, norm(attn): 0.1572, norm(output): 0.2930, norm(x): 0.2576, norm(y): 1.0075, norm:1.7598, tok/sec: 99553.84, flops:104.48, batch-reuse:1
@ 1493 train 5.4330 , allloss: 5.4356, dt: 1335.53ms, fracRes: 0.1512, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2596, norm(y): 1.0074, norm:1.7913, tok/sec: 98141.96, flops:103.00, batch-reuse:1
@ 1494 train 5.4451 , allloss: 5.4466, dt: 1337.28ms, fracRes: 0.1534, norm(attn): 0.1543, norm(output): 0.2949, norm(x): 0.2581, norm(y): 1.0076, norm:1.2448, tok/sec: 98014.24, flops:102.87, batch-reuse:1
@ 1495 train 5.4231 , allloss: 5.4257, dt: 1318.12ms, fracRes: 0.1471, norm(attn): 0.1553, norm(output): 0.2949, norm(x): 0.2597, norm(y): 1.0075, norm:1.6494, tok/sec: 99438.92, flops:104.36, batch-reuse:1
@ 1496 train 5.4590 , allloss: 5.4608, dt: 1309.85ms, fracRes: 0.1474, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2610, norm(y): 1.0075, norm:1.5560, tok/sec: 100066.66, flops:105.02, batch-reuse:1
@ 1497 train 5.3201 , allloss: 5.3215, dt: 1301.14ms, fracRes: 0.1530, norm(attn): 0.1602, norm(output): 0.2969, norm(x): 0.2600, norm(y): 1.0075, norm:1.8097, tok/sec: 100736.27, flops:105.72, batch-reuse:1
@ 1498 train 5.5201 , allloss: 5.5218, dt: 1289.68ms, fracRes: 0.1592, norm(attn): 0.1553, norm(output): 0.2969, norm(x): 0.2580, norm(y): 1.0076, norm:1.7704, tok/sec: 101631.62, flops:106.66, batch-reuse:1
@ 1499 train 5.5156 , allloss: 5.5173, dt: 1299.59ms, fracRes: 0.1583, norm(attn): 0.1602, norm(output): 0.2949, norm(x): 0.2584, norm(y): 1.0075, norm:1.7446, tok/sec: 100856.14, flops:105.85, batch-reuse:1
@ 1500 train 5.5383 , allloss: 5.5400, dt: 1310.09ms, fracRes: 0.1604, norm(attn): 0.1572, norm(output): 0.2949, norm(x): 0.2577, norm(y): 1.0075, norm:1.6772, tok/sec: 100048.16, flops:105.00, batch-reuse:1
@ 1501 train 5.4297 , allloss: 5.4328, dt: 1311.02ms, fracRes: 0.1578, norm(attn): 0.1572, norm(output): 0.2969, norm(x): 0.2595, norm(y): 1.0074, norm:1.9626, tok/sec: 99976.83, flops:104.93, batch-reuse:1
@ 1502 train 5.4568 , allloss: 5.4578, dt: 1290.47ms, fracRes: 0.1624, norm(attn): 0.1533, norm(output): 0.2930, norm(x): 0.2569, norm(y): 1.0076, norm:1.7222, tok/sec: 101569.28, flops:106.60, batch-reuse:1
@ 1503 train 5.5221 , allloss: 5.5230, dt: 1304.67ms, fracRes: 0.1583, norm(attn): 0.1543, norm(output): 0.2949, norm(x): 0.2579, norm(y): 1.0076, norm:2.0450, tok/sec: 100463.84, flops:105.44, batch-reuse:1
@ 1504 train 5.5348 , allloss: 5.5364, dt: 1317.52ms, fracRes: 0.1601, norm(attn): 0.1562, norm(output): 0.2949, norm(x): 0.2586, norm(y): 1.0075, norm:1.7320, tok/sec: 99483.81, flops:104.41, batch-reuse:1
@ 1505 train 5.4492 , allloss: 5.4524, dt: 1314.57ms, fracRes: 0.1585, norm(attn): 0.1592, norm(output): 0.2969, norm(x): 0.2596, norm(y): 1.0075, norm:1.3584, tok/sec: 99707.46, flops:104.64, batch-reuse:1
@ 1506 train 5.5228 , allloss: 5.5263, dt: 1310.12ms, fracRes: 0.1628, norm(attn): 0.1562, norm(output): 0.2969, norm(x): 0.2577, norm(y): 1.0076, norm:1.5392, tok/sec: 100045.93, flops:105.00, batch-reuse:1
@ 1507 train 5.5030 , allloss: 5.5048, dt: 1298.03ms, fracRes: 0.1584, norm(attn): 0.1562, norm(output): 0.2988, norm(x): 0.2596, norm(y): 1.0075, norm:1.5355, tok/sec: 100977.48, flops:105.98, batch-reuse:1
@ 1508 train 5.4776 , allloss: 5.4793, dt: 1310.67ms, fracRes: 0.1570, norm(attn): 0.1572, norm(output): 0.2988, norm(x): 0.2606, norm(y): 1.0075, norm:1.2743, tok/sec: 100003.88, flops:104.96, batch-reuse:1
@ 1509 train 5.4606 , allloss: 5.4620, dt: 1299.19ms, fracRes: 0.1641, norm(attn): 0.1553, norm(output): 0.2969, norm(x): 0.2590, norm(y): 1.0076, norm:2.0010, tok/sec: 100887.27, flops:105.88, batch-reuse:1
@ 1510 train 5.5029 , allloss: 5.5052, dt: 1301.96ms, fracRes: 0.1595, norm(attn): 0.1562, norm(output): 0.2988, norm(x): 0.2608, norm(y): 1.0075, norm:1.6772, tok/sec: 100672.48, flops:105.66, batch-reuse:1
@ 1511 train 5.5261 , allloss: 5.5279, dt: 1311.71ms, fracRes: 0.1635, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2602, norm(y): 1.0075, norm:1.5869, tok/sec: 99924.28, flops:104.87, batch-reuse:1
@ 1512 train 5.5435 , allloss: 5.5449, dt: 1315.28ms, fracRes: 0.1677, norm(attn): 0.1553, norm(output): 0.2969, norm(x): 0.2588, norm(y): 1.0076, norm:1.8309, tok/sec: 99653.33, flops:104.59, batch-reuse:1
@ 1513 train 5.4663 , allloss: 5.4676, dt: 1309.74ms, fracRes: 0.1678, norm(attn): 0.1553, norm(output): 0.2969, norm(x): 0.2592, norm(y): 1.0076, norm:1.8179, tok/sec: 100075.06, flops:105.03, batch-reuse:1
@ 1514 train 5.6048 , allloss: 5.6068, dt: 1348.46ms, fracRes: 0.1644, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2604, norm(y): 1.0075, norm:1.8793, tok/sec: 97200.89, flops:102.01, batch-reuse:1
@ 1515 train 5.4784 , allloss: 5.4799, dt: 1295.10ms, fracRes: 0.1656, norm(attn): 0.1553, norm(output): 0.2969, norm(x): 0.2597, norm(y): 1.0076, norm:1.6898, tok/sec: 101205.70, flops:106.22, batch-reuse:1
@ 1516 train 5.3559 , allloss: 5.3582, dt: 1306.66ms, fracRes: 0.1633, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2607, norm(y): 1.0075, norm:1.6724, tok/sec: 100310.72, flops:105.28, batch-reuse:1
@ 1517 train 5.4241 , allloss: 5.4262, dt: 1310.59ms, fracRes: 0.1782, norm(attn): 0.1533, norm(output): 0.2969, norm(x): 0.2558, norm(y): 1.0078, norm:1.6213, tok/sec: 100009.90, flops:104.96, batch-reuse:1
@ 1518 train 5.4294 , allloss: 5.4340, dt: 1289.27ms, fracRes: 0.1663, norm(attn): 0.1543, norm(output): 0.2969, norm(x): 0.2591, norm(y): 1.0076, norm:1.7569, tok/sec: 101664.10, flops:106.70, batch-reuse:1
@ 1519 train 5.4318 , allloss: 5.4349, dt: 1320.42ms, fracRes: 0.1630, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2599, norm(y): 1.0075, norm:1.4012, tok/sec: 99265.26, flops:104.18, batch-reuse:1
@ 1520 train 5.4503 , allloss: 5.4533, dt: 1315.49ms, fracRes: 0.1679, norm(attn): 0.1562, norm(output): 0.2988, norm(x): 0.2588, norm(y): 1.0076, norm:1.5910, tok/sec: 99637.25, flops:104.57, batch-reuse:1
@ 1521 train 5.4467 , allloss: 5.4506, dt: 1342.09ms, fracRes: 0.1699, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2593, norm(y): 1.0076, norm:1.9897, tok/sec: 97662.52, flops:102.50, batch-reuse:1
@ 1522 train 5.4409 , allloss: 5.4441, dt: 1315.12ms, fracRes: 0.1728, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2589, norm(y): 1.0076, norm:1.3425, tok/sec: 99665.61, flops:104.60, batch-reuse:1
@ 1523 train 5.4763 , allloss: 5.4792, dt: 1335.38ms, fracRes: 0.1618, norm(attn): 0.1572, norm(output): 0.3027, norm(x): 0.2622, norm(y): 1.0075, norm:1.6507, tok/sec: 98153.05, flops:103.01, batch-reuse:1
@ 1524 train 5.4376 , allloss: 5.4398, dt: 1312.48ms, fracRes: 0.1656, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2599, norm(y): 1.0077, norm:1.6854, tok/sec: 99866.23, flops:104.81, batch-reuse:1
@ 1525 train 5.4116 , allloss: 5.4134, dt: 1356.83ms, fracRes: 0.1600, norm(attn): 0.1553, norm(output): 0.3008, norm(x): 0.2616, norm(y): 1.0076, norm:1.4977, tok/sec: 96601.44, flops:101.39, batch-reuse:1
@ 1526 train 5.5008 , allloss: 5.5031, dt: 1332.17ms, fracRes: 0.1564, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2631, norm(y): 1.0075, norm:1.4984, tok/sec: 98389.90, flops:103.26, batch-reuse:1
@ 1527 train 5.4057 , allloss: 5.4073, dt: 1281.47ms, fracRes: 0.1658, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2611, norm(y): 1.0077, norm:1.4178, tok/sec: 102282.78, flops:107.35, batch-reuse:1
@ 1528 train 5.4592 , allloss: 5.4611, dt: 1302.44ms, fracRes: 0.1647, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2618, norm(y): 1.0076, norm:1.4177, tok/sec: 100636.03, flops:105.62, batch-reuse:1
@ 1529 train 5.3829 , allloss: 5.3845, dt: 1292.93ms, fracRes: 0.1607, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2628, norm(y): 1.0077, norm:1.3751, tok/sec: 101375.58, flops:106.40, batch-reuse:1
@ 1530 train 5.4140 , allloss: 5.4152, dt: 1314.91ms, fracRes: 0.1616, norm(attn): 0.1562, norm(output): 0.2988, norm(x): 0.2622, norm(y): 1.0077, norm:1.7590, tok/sec: 99681.55, flops:104.62, batch-reuse:1
@ 1531 train 5.3397 , allloss: 5.3410, dt: 1306.33ms, fracRes: 0.1596, norm(attn): 0.1602, norm(output): 0.3008, norm(x): 0.2644, norm(y): 1.0076, norm:1.7800, tok/sec: 100335.86, flops:105.30, batch-reuse:1
@ 1532 train 5.4001 , allloss: 5.4013, dt: 1312.30ms, fracRes: 0.1628, norm(attn): 0.1572, norm(output): 0.3027, norm(x): 0.2641, norm(y): 1.0076, norm:1.4449, tok/sec: 99879.84, flops:104.83, batch-reuse:1
@ 1533 train 5.3433 , allloss: 5.3443, dt: 1300.74ms, fracRes: 0.1667, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2622, norm(y): 1.0077, norm:1.7315, tok/sec: 100767.57, flops:105.76, batch-reuse:1
@ 1534 train 5.4190 , allloss: 5.4199, dt: 1301.83ms, fracRes: 0.1692, norm(attn): 0.1562, norm(output): 0.2988, norm(x): 0.2609, norm(y): 1.0078, norm:1.6133, tok/sec: 100683.25, flops:105.67, batch-reuse:1
@ 1535 train 5.4310 , allloss: 5.4322, dt: 1296.83ms, fracRes: 0.1658, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2627, norm(y): 1.0077, norm:1.5044, tok/sec: 101071.23, flops:106.08, batch-reuse:1
@ 1536 train 5.3881 , allloss: 5.3892, dt: 1307.11ms, fracRes: 0.1668, norm(attn): 0.1602, norm(output): 0.3027, norm(x): 0.2623, norm(y): 1.0077, norm:1.4522, tok/sec: 100276.29, flops:105.24, batch-reuse:1
@ 1537 train 5.3753 , allloss: 5.3762, dt: 1322.71ms, fracRes: 0.1680, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2621, norm(y): 1.0077, norm:1.6507, tok/sec: 99093.27, flops:104.00, batch-reuse:1
@ 1538 train 5.3330 , allloss: 5.3348, dt: 1304.14ms, fracRes: 0.1672, norm(attn): 0.1582, norm(output): 0.3008, norm(x): 0.2621, norm(y): 1.0076, norm:1.7337, tok/sec: 100504.39, flops:105.48, batch-reuse:1
@ 1539 train 5.4151 , allloss: 5.4172, dt: 1289.61ms, fracRes: 0.1715, norm(attn): 0.1572, norm(output): 0.3008, norm(x): 0.2620, norm(y): 1.0077, norm:1.4621, tok/sec: 101637.11, flops:106.67, batch-reuse:1
@ 1540 train 5.3668 , allloss: 5.3688, dt: 1280.76ms, fracRes: 0.1740, norm(attn): 0.1572, norm(output): 0.3027, norm(x): 0.2613, norm(y): 1.0077, norm:1.3677, tok/sec: 102339.61, flops:107.41, batch-reuse:1
@ 1541 train 5.3461 , allloss: 5.3483, dt: 1306.88ms, fracRes: 0.1775, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2609, norm(y): 1.0078, norm:1.4370, tok/sec: 100293.52, flops:105.26, batch-reuse:1
@ 1542 train 5.4056 , allloss: 5.4073, dt: 1289.98ms, fracRes: 0.1690, norm(attn): 0.1582, norm(output): 0.3027, norm(x): 0.2638, norm(y): 1.0077, norm:1.5504, tok/sec: 101608.03, flops:106.64, batch-reuse:1
@ 1543 train 5.7127 , allloss: 5.7135, dt: 1302.11ms, fracRes: 0.1711, norm(attn): 0.1592, norm(output): 0.3008, norm(x): 0.2622, norm(y): 1.0078, norm:1.9882, tok/sec: 100661.57, flops:105.65, batch-reuse:1
@ 1544 train 5.2986 , allloss: 5.2999, dt: 1294.64ms, fracRes: 0.1696, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2630, norm(y): 1.0078, norm:1.8643, tok/sec: 101242.10, flops:106.26, batch-reuse:1
@ 1545 train 5.3923 , allloss: 5.3956, dt: 1275.32ms, fracRes: 0.1663, norm(attn): 0.1562, norm(output): 0.3027, norm(x): 0.2645, norm(y): 1.0077, norm:1.6204, tok/sec: 102775.96, flops:107.87, batch-reuse:1
@ 1546 train 5.8687 , allloss: 5.8709, dt: 1304.54ms, fracRes: 0.1694, norm(attn): 0.1582, norm(output): 0.3047, norm(x): 0.2631, norm(y): 1.0077, norm:1.9972, tok/sec: 100473.79, flops:105.45, batch-reuse:1
@ 1547 train 5.4269 , allloss: 5.4285, dt: 1310.93ms, fracRes: 0.1645, norm(attn): 0.1611, norm(output): 0.3066, norm(x): 0.2659, norm(y): 1.0076, norm:1.9734, tok/sec: 99984.07, flops:104.94, batch-reuse:1
@ 1548 train 5.5255 , allloss: 5.5284, dt: 1321.96ms, fracRes: 0.1647, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2659, norm(y): 1.0076, norm:1.7826, tok/sec: 99149.96, flops:104.06, batch-reuse:1
@ 1549 train 5.4826 , allloss: 5.4840, dt: 1310.51ms, fracRes: 0.1715, norm(attn): 0.1562, norm(output): 0.3008, norm(x): 0.2619, norm(y): 1.0078, norm:1.6925, tok/sec: 100015.72, flops:104.97, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4219, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.4434, 0.2441, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2285, 0.0903, 0.3203, 0.3613, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3555, 0.0422, 0.1436, 0.0737, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1060, 0.0513, 0.1108, 0.0535, 0.3711, 0.3086, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2988, 0.0591, 0.0332, 0.0430, 0.0903, 0.4648, 0.0101, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0126, 0.2422, 0.0747, 0.1816, 0.0168, 0.0056, 0.4609, 0.0054, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0859, 0.0500, 0.0698, 0.0236, 0.0796, 0.2578, 0.0879, 0.1279, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.0874, 0.1040, 0.0942, 0.0569, 0.1221, 0.0522, 0.1738, 0.1797, 0.0374, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0217, 0.0021, 0.0093, 0.0021, 0.0195, 0.0835, 0.0027, 0.0669, 0.7031, 0.0172, 0.0713, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0713, 0.0820, 0.1177, 0.0146, 0.0278, 0.0305, 0.2275, 0.0097, 0.1416, 0.0134, 0.2002, 0.0000, 0.0000, 0.0000],
        [0.0304, 0.1348, 0.0476, 0.2793, 0.0339, 0.0110, 0.1602, 0.0249, 0.0039, 0.0430, 0.0104, 0.1699, 0.0498, 0.0000, 0.0000],
        [0.0471, 0.0364, 0.0674, 0.0211, 0.0591, 0.1543, 0.0737, 0.0713, 0.1836, 0.0198, 0.0708, 0.0260, 0.0243, 0.1455, 0.0000],
        [0.0444, 0.0352, 0.1084, 0.0454, 0.0674, 0.1416, 0.0762, 0.0527, 0.0688, 0.0334, 0.0796, 0.0327, 0.0327, 0.0806, 0.1006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0019, -0.0323,  0.0573,  ...,  0.0133,  0.0215,  0.0116],
        [ 0.0172,  0.0030,  0.0201,  ..., -0.0125,  0.0332, -0.0048],
        [-0.0394,  0.0038, -0.0118,  ..., -0.0054, -0.0206,  0.0178],
        ...,
        [-0.0413,  0.0084, -0.0606,  ...,  0.0184, -0.0104, -0.0122],
        [ 0.0031, -0.0106,  0.0175,  ...,  0.0364, -0.0084,  0.0165],
        [-0.0212,  0.0034, -0.0318,  ...,  0.0045, -0.0100,  0.0301]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4727,  0.8477, -0.9648,  0.2637, -0.5000, -0.3633, -0.5938, -0.4199, -0.9023, -0.7500, -0.4668,  0.0510,  0.0214, -0.8906, -1.0938,  1.0000,  0.1543,  1.6406, -0.8047, -0.6836, -0.1211, -0.5977, -0.6719,  0.7305, -0.6211,  0.2793,  0.1602, -0.5312, -0.9961,  1.2812,  0.2383, -0.3594,
         0.0747,  0.2139,  0.1992, -1.0469,  0.0068,  0.8594, -1.1094,  0.2441, -0.6875,  0.1260, -0.2637,  0.3691, -1.0781,  0.8867,  0.1855,  0.0374,  0.8867, -0.6484, -0.4473,  0.4551, -0.3086,  1.8672, -0.5469, -0.0234,  0.4648,  0.5234,  0.5156,  0.4277,  0.1289,  0.4707, -0.1299,  0.1260],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0116,  0.0025, -0.0232,  ...,  0.0267,  0.0123,  0.0233],
        [ 0.0207, -0.0278, -0.0247,  ..., -0.0051,  0.0216,  0.0303],
        [-0.0101,  0.0276,  0.0479,  ...,  0.0089,  0.0146, -0.0357],
        ...,
        [ 0.0238,  0.0094,  0.0426,  ..., -0.0032,  0.0163, -0.0212],
        [ 0.0094, -0.0227, -0.0333,  ...,  0.0235, -0.0326, -0.0092],
        [ 0.0342, -0.0106,  0.0326,  ..., -0.0171, -0.0383, -0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3848,  0.0164,  0.2305, -0.2070, -0.5234,  0.5469, -0.0413, -0.1045, -0.4043, -0.8555,  0.6367, -0.9453,  0.5078, -0.0815,  0.2236, -0.3496, -1.0312,  0.4590,  0.5742, -1.0859,  0.2793,  0.4824, -0.1924,  0.7305, -1.4531, -0.5469,  0.3340,  0.9883, -0.4512, -0.0298, -0.3125,  0.6953,
        -0.4980,  0.4551,  0.6484, -0.4082, -0.0277,  0.4453, -0.6484,  0.0214,  0.2236, -0.8125, -0.5273,  0.4863, -0.2969, -0.2871, -0.2969, -1.0078, -0.1406, -0.3496, -0.7734,  0.8984,  0.1445,  0.8008,  0.2637, -0.5664, -0.5039,  0.6992,  0.5273,  1.3984,  0.2988, -0.5859,  0.2559,  0.6328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.3125, -0.1123,  0.3711, -0.6406,  0.9883,  0.2598,  0.0461, -0.2021, -0.6055, -0.3945,  0.3281, -0.1992,  0.0708,  0.9219],
        [ 0.0000,  0.3555, -0.2451,  0.3633, -0.8164, -0.0645,  0.1113,  0.7344, -1.3750,  0.2988, -0.8594,  0.6875,  0.4434, -1.0469,  0.4512],
        [ 0.0000, -0.9297,  0.3359,  0.4590, -1.7656, -0.7969, -2.2500,  2.1250,  0.0669,  0.3926, -1.0547, -0.0154,  0.5078, -0.3379,  0.6953],
        [ 0.0000, -2.1250, -0.9062, -1.5703,  0.0845,  0.8398, -1.8828,  0.3145,  2.4531, -0.8203,  1.2422, -1.4844, -0.5820,  1.7812, -1.2812],
        [ 0.0000, -0.7266,  0.0481, -0.6797,  1.2500,  1.0703,  0.0396,  0.0571,  1.3750, -0.8398,  1.2422,  0.0703, -0.7852,  1.0234, -0.2695],
        [ 0.0000, -1.6250, -2.2031, -1.9375, -1.1953,  0.4395, -3.3906,  1.3906,  0.9727, -0.7031,  0.2461, -1.1562, -0.4375,  0.0459, -0.6250],
        [ 0.0000,  2.9531,  1.7812,  2.6719,  0.2910, -0.8125,  3.5938, -0.8516, -3.7500,  1.4844, -1.2969,  2.1875,  0.3242, -2.1719,  2.1094],
        [ 0.0000, -0.5430, -0.2100, -1.2891, -0.0771,  1.1016,  0.0239,  0.4004,  0.9258, -0.8047,  0.9258, -0.4785, -0.6445,  0.9688, -1.1250],
        [ 0.0000, -0.0554,  0.1191,  0.0193, -0.4824,  0.2793, -0.5664,  0.6289,  0.6680, -0.9023, -0.0752, -0.1455, -0.0933, -0.0552,  0.4785],
        [ 0.0000, -2.3438, -0.8477, -2.3438, -0.1104,  1.3438, -2.0938,  1.1250,  3.4688, -0.2334,  1.1875, -2.1406, -0.6680,  2.0938, -1.5859],
        [ 0.0000,  0.1245,  0.2656,  0.6289, -1.4531, -0.8125, -0.7188,  1.2891, -1.8672,  0.8164, -1.5469,  1.1641,  1.2812, -1.5234,  0.2793],
        [ 0.0000,  1.4922,  0.4473,  2.2188,  0.1143, -1.0078,  1.6641, -0.2012, -2.0625,  0.3477, -1.0703,  1.7188,  0.4961, -1.6406,  1.7031],
        [ 0.0000, -0.2539,  0.3633, -0.8008,  0.2305,  1.1875,  0.4473,  0.4141,  1.3594, -0.8633,  0.4082, -0.5938, -0.6602,  1.1328, -0.1709],
        [ 0.0000, -0.2373,  0.8906,  0.0201,  0.4141,  1.1641,  0.5430,  0.1719,  0.4414, -0.2871,  0.5820, -0.3086, -0.3066,  0.5977,  0.8164]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4912],
        [0.4574],
        [0.3942],
        [0.3288],
        [0.1255],
        [0.2147],
        [0.0506],
        [0.0693],
        [0.1020],
        [0.0578],
        [0.0947],
        [0.0460],
        [0.0459],
        [0.0611]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0073, -0.0040,  0.0250,  ...,  0.0102, -0.0281, -0.0043],
        [-0.0100,  0.0314,  0.0058,  ..., -0.0092,  0.0248,  0.0170],
        [-0.0144,  0.0232,  0.0065,  ...,  0.0143, -0.0258, -0.0025],
        ...,
        [ 0.0296, -0.0365, -0.0177,  ...,  0.0114,  0.0102, -0.0112],
        [-0.0708, -0.0354,  0.0178,  ...,  0.0127, -0.0126,  0.0030],
        [ 0.0458, -0.0042,  0.0394,  ...,  0.0624,  0.0007,  0.0553]], device='cuda:0', requires_grad=True)
K: tensor([-1.9766,  2.0312,  2.0938, -2.5469,  1.5859, -1.9141,  0.9961,  1.8984,  2.5312,  3.9375, -1.5312, -2.4844,  1.7656,  0.8516, -0.7578,  2.3906, -1.2578, -3.1562,  1.8203,  2.5625,  1.5156, -2.7344,  2.6094, -2.8906,  1.7500, -2.1250, -3.2500,  0.1387,  0.4766, -0.2236,  1.5938,  2.8594,
         0.9336,  2.9219, -1.9922,  1.7812, -1.9219,  1.7266, -0.7031, -1.6875, -2.8281, -2.5000,  2.5000, -1.8906,  2.2188,  0.9766, -1.8047, -0.8750, -1.8594,  1.2188, -1.8281, -2.0312, -1.4766, -1.5469,  2.6562, -1.6875, -1.4375, -1.7422, -2.9062,  2.1406,  3.3594, -1.1719,  1.5391, -2.3594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0199,  0.0375,  0.0157,  ...,  0.0047,  0.0060,  0.0293],
        [ 0.0218, -0.0343,  0.0130,  ...,  0.0556, -0.0163,  0.0083],
        [-0.0140,  0.0063, -0.0057,  ..., -0.0077, -0.0099,  0.0082],
        ...,
        [-0.0378,  0.0110,  0.0375,  ...,  0.0004,  0.0255,  0.0037],
        [ 0.0348, -0.0128, -0.0087,  ..., -0.0109, -0.0234,  0.0255],
        [ 0.0184,  0.0165, -0.0149,  ..., -0.0114,  0.0132, -0.0177]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1338, -1.4844, -0.1138,  0.7500, -1.6250,  2.8281, -2.2812, -1.4531, -0.2021, -1.7578,  2.1719,  2.0312, -1.2031, -2.2031,  0.7422, -1.8438,  1.4062,  0.8398, -1.5703, -1.7969, -1.2344,  2.6719, -0.8867,  1.4688, -1.6797,  2.1719,  1.1797,  1.9844, -1.9375,  0.9570, -2.2188, -1.8438,
        -1.6953, -1.2969,  1.6484, -1.2031,  1.9688, -2.0625,  1.8672,  0.1367,  2.1719,  1.9531, -2.1094,  2.7031, -1.7344, -1.3906,  1.3438,  2.7031,  2.9219, -2.8906,  2.0156,  2.2500,  1.8047,  2.2188, -0.4082,  2.6562,  2.1875,  1.6094,  1.1953, -0.8867, -1.4688,  0.9492, -3.2188,  1.8438],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -15.7500, -11.0625, -14.3750, -16.7500, -16.3750, -13.5625, -12.0000, -17.5000, -14.7500, -16.5000, -15.6250, -14.1875, -16.8750, -15.1250],
        [  0.0000, -12.6250,  -9.0000, -11.6250, -12.6875, -11.9375, -10.7500,  -9.0000, -13.3750, -11.5625, -13.5625, -12.3750, -10.8750, -13.0000, -13.0625],
        [  0.0000, -15.6875,  -9.6250, -13.5000, -16.2500, -15.3125, -13.8125, -11.0000, -17.5000, -13.6875, -17.1250, -13.8125, -13.1250, -16.7500, -14.3750],
        [  0.0000, -14.6250,  -9.2500, -12.6875, -15.2500, -14.0000, -12.7500,  -9.9375, -16.2500, -13.0625, -15.6250, -13.0000, -12.0625, -15.8125, -13.6875],
        [  0.0000, -21.7500, -16.0000, -19.1250, -21.6250, -22.5000, -19.0000, -16.6250, -22.3750, -20.2500, -21.6250, -21.2500, -19.8750, -21.6250, -21.3750],
        [  0.0000, -18.8750, -13.5000, -16.8750, -19.1250, -19.0000, -16.6250, -14.5000, -19.8750, -17.3750, -19.8750, -18.3750, -16.8750, -19.2500, -18.6250],
        [  0.0000, -11.5625,  -7.2500, -10.6250, -11.7500, -11.3125, -10.0000,  -8.5625, -12.9375,  -9.8125, -13.0000, -10.0000, -10.5625, -12.5625, -10.8750],
        [  0.0000, -15.5625,  -9.6250, -12.6250, -15.8750, -14.8750, -13.5000, -10.3750, -16.6250, -13.3125, -16.3750, -13.4375, -12.4375, -16.0000, -14.4375],
        [  0.0000, -16.7500, -10.9375, -14.4375, -16.8750, -16.8750, -14.8125, -11.8125, -18.3750, -14.8750, -17.6250, -14.5625, -14.6875, -17.7500, -15.6875],
        [  0.0000, -21.1250, -14.3750, -17.8750, -20.8750, -21.2500, -18.3750, -15.5625, -21.8750, -18.7500, -21.5000, -19.2500, -18.2500, -21.1250, -20.1250],
        [  0.0000, -20.5000, -14.4375, -18.1250, -20.2500, -20.1250, -18.0000, -14.7500, -21.5000, -18.3750, -21.3750, -19.3750, -17.7500, -20.8750, -20.5000],
        [  0.0000, -14.1250,  -8.6250, -12.1875, -14.1250, -14.8125, -12.8750, -11.0000, -15.5000, -12.1250, -15.5625, -11.7500, -13.1250, -15.0000, -12.3750],
        [  0.0000, -14.6875,  -9.0000, -11.8125, -15.0625, -14.0625, -12.7500,  -9.8750, -15.6875, -12.6250, -15.5000, -12.6875, -11.7500, -15.1250, -13.6250],
        [  0.0000, -24.6250, -18.5000, -22.0000, -24.1250, -25.6250, -22.0000, -19.6250, -24.8750, -22.2500, -24.6250, -24.5000, -22.5000, -24.2500, -24.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4390],
        [0.2911],
        [0.3347],
        [0.2521],
        [0.6340],
        [0.4197],
        [0.3774],
        [0.4068],
        [0.2409],
        [0.4725],
        [0.2309],
        [0.3053],
        [0.3738],
        [0.5781]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7734, 0.2256, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4648, 0.2617, 0.2734, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6367, 0.2812, 0.0469, 0.0374, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.1367, 0.0801, 0.0889, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2031, 0.1084, 0.1885, 0.2188, 0.1250, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.0967, 0.0640, 0.0552, 0.0820, 0.2871, 0.0588, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.1211, 0.0332, 0.0302, 0.0339, 0.1729, 0.0096, 0.0334, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4805, 0.0659, 0.0332, 0.0261, 0.0688, 0.1768, 0.0330, 0.0649, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3008, 0.1172, 0.0157, 0.0203, 0.0334, 0.1729, 0.0065, 0.0172, 0.0549, 0.2598, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0630, 0.0767, 0.0403, 0.0796, 0.0947, 0.0737, 0.0259, 0.0708, 0.1592, 0.2637, 0.0525, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3418, 0.0796, 0.0237, 0.0249, 0.0500, 0.1328, 0.0130, 0.0176, 0.0659, 0.1367, 0.0610, 0.0530, 0.0000, 0.0000, 0.0000],
        [0.3789, 0.0864, 0.0229, 0.0237, 0.0277, 0.1396, 0.0075, 0.0238, 0.0684, 0.0918, 0.0308, 0.0254, 0.0742, 0.0000, 0.0000],
        [0.3105, 0.0352, 0.0172, 0.0124, 0.0356, 0.0986, 0.0176, 0.0315, 0.0236, 0.0771, 0.0330, 0.0239, 0.2559, 0.0282, 0.0000],
        [0.1621, 0.0505, 0.0554, 0.0466, 0.0537, 0.0752, 0.0464, 0.0522, 0.0723, 0.0476, 0.0630, 0.0469, 0.0630, 0.0796, 0.0859]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0017,      0.0256,     -0.0000,  ...,     -0.0080,     -0.0170,      0.0239],
        [    -0.0253,      0.0029,     -0.0009,  ...,      0.0142,      0.0351,      0.0130],
        [     0.0093,     -0.0209,     -0.0082,  ...,      0.0053,      0.0279,      0.0091],
        ...,
        [     0.0110,      0.0058,     -0.0227,  ...,      0.0237,      0.0094,     -0.0069],
        [    -0.0028,      0.0226,     -0.0275,  ...,      0.0252,      0.0215,      0.0099],
        [     0.0058,     -0.0128,      0.0183,  ...,     -0.0566,     -0.0367,     -0.0149]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8164, -0.8594,  0.0371, -0.2373, -1.5391,  0.0557,  0.5742,  0.2412, -1.0781,  0.0806, -0.2617, -1.0000, -1.8984, -0.4297,  0.1387,  1.1250, -0.2256,  0.0033,  0.2168, -0.9180, -1.2969,  0.1582, -1.1953,  0.8125, -0.2578,  0.2852,  0.2227,  0.9492,  1.0312, -0.4316, -0.9375,  0.9766,
        -0.8516,  1.2734, -0.3438,  0.2363, -0.7031,  0.4941, -0.8672,  1.8906, -0.0400, -1.2109,  0.9453, -0.0322, -0.0889, -0.8594, -0.1562,  0.2275, -0.1270, -0.1904, -0.0259, -1.2891, -1.6250, -1.0938,  0.9062, -1.1094, -1.3906,  1.0234,  1.1094, -1.3203, -0.7734,  0.2051,  1.2578, -1.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0049, -0.0287,  0.0280,  ...,  0.0177, -0.0030,  0.0206],
        [-0.0228, -0.0155,  0.0287,  ..., -0.0020, -0.0225, -0.0164],
        [-0.0358, -0.0096, -0.0140,  ..., -0.0570, -0.0654, -0.0452],
        ...,
        [-0.0310, -0.0010,  0.0397,  ..., -0.0012, -0.0411, -0.0353],
        [ 0.0197,  0.0144, -0.0094,  ..., -0.0685, -0.0267,  0.0176],
        [ 0.0300, -0.0002,  0.0052,  ..., -0.0059,  0.0114,  0.0279]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3086, -1.1328,  0.9961, -0.8750,  0.1699,  0.1875,  0.1250, -0.5352,  0.3770, -0.0092, -0.1748,  0.8359,  0.0320, -0.3457,  0.1309, -0.0845, -0.0986,  0.5078, -0.3223, -0.1016,  0.2773, -0.9141, -0.5195, -0.4023, -0.0610, -0.1260,  0.1631,  0.2285,  0.2275,  0.0071,  0.6758,  0.3926,
         0.5273, -0.0510,  0.6250,  0.6445,  0.9961,  0.4863,  0.7383, -0.5117,  0.3555, -0.1123, -0.4277, -1.0391, -0.6523,  0.2285,  0.2295,  0.3379, -0.6055, -0.6875,  0.7969, -0.4141,  0.6641, -0.2949,  0.0513,  0.6953,  0.0732, -1.5391,  0.6797,  0.5938,  1.2891, -0.4746,  1.1406, -0.3633],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -1.2344, -0.6602,  0.1016, -0.6953, -0.3164, -0.9531, -0.1846, -0.1108,  0.2051, -0.7969,  0.1108,  0.6055,  0.2305,  0.5078],
        [ 0.0000, -0.5781, -0.5352, -0.0182, -0.6289, -0.2246, -0.9102, -0.5273,  0.2637,  0.1226, -0.1963,  0.0530, -0.4219,  0.4316,  0.4277],
        [ 0.0000, -0.8164, -2.6094, -2.8438, -2.2344, -0.3477, -3.4531, -2.1562, -1.2891, -0.8633, -2.0781, -2.2969, -0.8203, -1.0859, -1.3125],
        [ 0.0000, -1.2656, -1.7969, -1.7031, -0.8438, -0.0374, -1.5234, -0.8789, -0.6914, -0.5039, -1.1094, -1.1328,  0.4727, -0.4707,  0.0447],
        [ 0.0000, -0.6289, -0.0737,  0.0762, -0.4863, -0.2637, -0.1895,  0.4473,  0.0298,  0.0569, -0.7031,  0.1235,  0.5781,  0.2002,  0.4141],
        [ 0.0000, -1.3047, -1.7188, -1.8672, -1.4766, -0.2217, -1.8047, -0.8789, -0.9805, -0.7305, -1.5938, -1.4922,  0.2090, -0.8008, -0.4961],
        [ 0.0000, -1.5469, -2.8438, -2.9375, -2.8125, -1.1875, -4.0625, -2.8281, -1.9844, -1.3203, -2.5781, -2.9531, -1.8047, -1.9141, -1.9531],
        [ 0.0000, -1.9844, -2.6719, -2.9062, -1.9375, -1.0000, -2.6875, -2.0000, -2.2500, -1.1406, -2.0156, -2.2500,  0.0598, -2.0625, -1.1875],
        [ 0.0000, -0.9453, -2.9531, -2.7031, -2.2031, -0.5547, -3.8438, -2.8594, -1.7031, -0.1514, -2.1562, -2.0781, -0.3691, -1.3984, -1.3906],
        [ 0.0000,  0.1973, -0.4473,  0.2354,  0.4082,  0.1572, -0.8867,  0.1138,  0.9258,  1.4297, -0.1807,  0.7109,  1.4219,  1.2734,  0.7305],
        [ 0.0000, -1.4609, -2.6719, -2.6250, -1.9219, -0.9414, -3.2656, -2.9688, -1.6406, -0.9141, -1.7188, -1.8672, -1.3047, -1.4375, -0.9727],
        [ 0.0000, -1.4766, -2.7969, -2.7656, -2.6094, -1.0000, -3.9062, -2.7656, -1.7109, -1.4141, -2.5156, -2.7031, -1.6328, -1.5469, -1.8125],
        [ 0.0000, -2.1719, -2.8906, -3.2188, -2.1719, -1.1484, -2.8750, -2.2812, -2.5781, -1.3984, -2.2500, -2.5625, -0.1982, -2.4062, -1.4766],
        [ 0.0000, -1.1641, -1.0703, -1.2422, -1.1016, -0.7656, -1.2500, -1.1328, -0.8047, -1.2266, -0.9453, -1.2422, -0.9453, -0.7109, -0.6328]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6413],
        [0.5437],
        [0.7238],
        [0.6149],
        [0.3407],
        [0.3335],
        [0.4822],
        [0.5316],
        [0.5416],
        [0.3600],
        [0.5206],
        [0.4873],
        [0.4944],
        [0.3723]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.4473, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.4121, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.2734, 0.3418, 0.2285, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.1973, 0.2275, 0.2051, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1533, 0.1855, 0.2031, 0.0613, 0.1787, 0.2178, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.1621, 0.0869, 0.0967, 0.1089, 0.1768, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.0483, 0.1177, 0.0728, 0.0292, 0.1318, 0.1079, 0.3887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0991, 0.0474, 0.0376, 0.0334, 0.0166, 0.1309, 0.0806, 0.5039, 0.0483, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.0806, 0.0437, 0.0645, 0.0410, 0.0806, 0.0503, 0.1895, 0.0635, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.0933, 0.0654, 0.0272, 0.0288, 0.0505, 0.0498, 0.2910, 0.0376, 0.0532, 0.0315, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0347, 0.0483, 0.0171, 0.1250, 0.0620, 0.0693, 0.0544, 0.0884, 0.1396, 0.0933, 0.2490, 0.0182, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.0282, 0.0337, 0.0356, 0.0120, 0.0591, 0.0349, 0.1709, 0.0344, 0.0251, 0.0598, 0.0114, 0.3750, 0.0000, 0.0000],
        [0.0972, 0.0400, 0.0205, 0.0300, 0.0136, 0.0894, 0.0400, 0.2021, 0.0405, 0.0464, 0.0703, 0.0212, 0.2373, 0.0505, 0.0000],
        [0.0903, 0.0386, 0.0172, 0.0444, 0.0486, 0.0757, 0.0559, 0.0625, 0.0737, 0.0559, 0.1533, 0.0126, 0.1094, 0.0801, 0.0820]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0156,  0.0328,  0.0256,  ...,  0.0125,  0.0383, -0.0337],
        [ 0.0025, -0.0602,  0.0160,  ...,  0.0115, -0.0122,  0.0457],
        [ 0.0249,  0.0093, -0.0403,  ..., -0.0099, -0.0114,  0.0242],
        ...,
        [-0.0112, -0.0056, -0.0134,  ..., -0.0216, -0.0460,  0.0270],
        [-0.0063,  0.0190, -0.0296,  ..., -0.0429,  0.0037,  0.0105],
        [-0.0199, -0.0089, -0.0266,  ..., -0.0405, -0.0180,  0.0153]], device='cuda:0', requires_grad=True)
K: tensor([ 1.4844,  0.4160, -0.6680, -0.7461,  0.3867, -1.1641, -0.3301, -0.6445, -0.9414, -2.0156,  0.6523,  0.5273,  0.2461, -1.4688,  0.8164,  0.2402,  0.5547, -0.6914,  0.6367, -0.0175,  1.2891,  1.2266,  0.3691,  0.3555,  0.9805,  0.9922, -1.7891, -1.3125,  0.7773,  0.5000,  1.0938,  0.3457,
         0.7109,  0.6680, -1.9062, -0.7891,  1.5312, -0.1816,  0.0918, -1.7734,  0.4902,  0.4277,  0.3750,  0.9297,  1.3047,  0.3691,  1.3047,  0.9922,  0.9531,  0.4297, -0.4043, -2.4219,  0.9805,  1.1172,  0.6523,  0.9219, -0.9727,  0.0410, -0.3516,  0.3691,  0.2451,  0.1309, -0.0166,  1.2891],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0031, -0.0203, -0.0392,  ...,  0.0282, -0.0030, -0.0155],
        [-0.0320, -0.0449,  0.0122,  ..., -0.0251, -0.0153, -0.0707],
        [ 0.0259, -0.0009, -0.0173,  ...,  0.0233,  0.0042,  0.0259],
        ...,
        [-0.0112,  0.0217, -0.0011,  ...,  0.0035,  0.0151,  0.0041],
        [ 0.0241,  0.0132, -0.0065,  ..., -0.0128,  0.0088,  0.0116],
        [-0.0110,  0.0475,  0.0052,  ..., -0.0041,  0.0127,  0.0108]], device='cuda:0', requires_grad=True)
Q: tensor([-2.0312,  0.0776, -0.8047,  1.3047, -0.8945, -0.2002, -0.7500, -0.8906, -0.2676,  0.0205, -0.7500,  0.6875, -1.3438,  0.4043,  1.2188,  0.0025,  0.1328, -0.0452,  0.2207,  0.2891,  0.2334,  0.2773, -0.2207, -0.0747,  0.8047, -0.4355, -0.3828,  0.3926, -0.1348,  0.7266, -1.0391, -0.3945,
         0.6328,  0.1445,  0.1592, -0.1104,  0.4062, -1.0312,  0.8125, -0.1484, -1.1406, -0.0356, -0.6758, -0.0354, -0.4707,  0.0840, -0.8672,  1.5547, -0.6719,  1.7578,  0.8477, -0.3086, -0.0022,  1.3359, -0.5391,  0.5898, -1.0234, -0.3574,  0.0427, -0.8125,  0.0327, -0.4844, -0.6836, -1.3750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -0.2139,  0.2637,  0.8164,  0.4805,  0.7969,  0.6875,  1.0859,  0.3613,  0.2295,  1.3984, -0.7422,  1.2344,  0.1494,  0.5312],
        [ 0.0000,  0.6094,  0.4805,  1.7500,  2.0156,  1.4141,  1.8359,  1.6406,  2.0781,  1.2812,  3.1562, -0.3691,  2.2812,  2.1094,  1.0000],
        [ 0.0000,  0.5547,  0.7812,  0.3789,  0.6641,  0.5508,  1.6562,  2.3125,  0.4824, -0.0508,  1.6250, -0.3691,  2.4844,  0.7148,  2.3750],
        [ 0.0000,  0.1904,  0.3320,  0.2266,  0.2334,  0.9688,  0.7695,  1.7344, -0.0240,  0.6953,  0.4316,  0.2578,  1.7266,  0.0771,  1.1641],
        [ 0.0000,  0.1904,  0.2832, -0.9180,  0.1504,  0.3516,  1.2812,  2.1406,  0.7344,  0.1279,  0.1318, -0.1465,  2.1094,  0.8750,  1.7344],
        [ 0.0000, -0.4316, -1.0547, -0.9492, -0.8281, -0.3457, -0.7266,  0.2559, -0.9492, -1.3516, -1.3984, -1.8750, -0.1299, -1.1328,  0.5742],
        [ 0.0000, -0.7773,  0.1162, -0.3691, -1.2812,  0.2246,  0.0254,  1.3047, -0.7812, -1.2031, -0.6914, -1.2656,  0.7461, -0.7461,  0.8477],
        [ 0.0000, -0.7422, -0.9688, -1.0859, -1.7891,  0.2812, -0.2051,  1.6250, -0.7188, -0.7812, -0.5430, -1.2031,  0.9180, -0.7891,  0.9570],
        [ 0.0000, -1.1328, -1.7344, -1.3594, -1.8047, -1.1328, -1.6016, -0.2773, -1.3672, -0.5898, -1.0703, -1.8359,  0.5312, -1.0625,  0.3945],
        [ 0.0000, -1.0703, -1.4219, -2.2969, -2.2500, -1.6797, -1.6953,  0.0723, -1.9766, -1.6250, -2.1562, -1.9844,  0.4316, -1.6328,  0.3848],
        [ 0.0000,  0.3359, -0.7070,  1.2891,  0.5859,  0.6914,  0.4531,  0.9375,  1.3984,  0.9922,  1.9766, -0.6445,  1.8672,  1.5781,  0.6875],
        [ 0.0000, -1.4453, -1.2656, -1.2109, -2.2969, -0.7031, -1.2344,  0.3535, -1.2422, -1.5547, -0.6914, -2.3594,  1.1406, -0.7266,  0.5273],
        [ 0.0000, -0.8867, -1.5547, -1.1719, -1.9688, -0.0850, -0.8867,  0.7344, -0.8750, -0.7383, -0.3262, -1.5156,  0.8906, -0.6562,  0.5352],
        [ 0.0000, -0.8516, -1.6562, -0.7109, -0.6211, -0.1797, -0.4824, -0.3691, -0.2041, -0.4785,  0.5273, -1.9688,  0.1885, -0.1216, -0.0967]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4652],
        [0.0983],
        [0.1316],
        [0.1637],
        [0.1395],
        [0.3236],
        [0.2354],
        [0.1641],
        [0.1292],
        [0.2118],
        [0.0234],
        [0.2358],
        [0.0996],
        [0.1315]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3438,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1406,     0.1826,     0.6758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1465,     0.4531,     0.1172,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0583,     0.3633,     0.0481,     0.1729,     0.3574,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0344,     0.2402,     0.0388,     0.0903,     0.3672,     0.2295,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0464,     0.0830,     0.0060,     0.0177,     0.0811,     0.0334,     0.7305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0160,     0.0160,     0.0002,     0.0014,     0.0493,     0.0025,     0.7344,     0.1797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0233,     0.1318,     0.0091,     0.0339,     0.0913,     0.0503,     0.3418,     0.2559,     0.0620,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0162,     0.4258,     0.0216,     0.0613,     0.0630,     0.0308,     0.1030,     0.1758,     0.0549,     0.0469,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0173,     0.2168,     0.0067,     0.0231,     0.0571,     0.0354,     0.1562,     0.1221,     0.0728,     0.1025,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0645,     0.0688,     0.0342,     0.0574,     0.0835,     0.0181,     0.1260,     0.3730,     0.0464,     0.0225,     0.0579,     0.0474,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.0630,     0.0013,     0.0056,     0.1211,     0.0151,     0.3398,     0.1855,     0.0664,     0.0071,     0.0889,     0.0238,     0.0554,     0.0000,     0.0000],
        [    0.0164,     0.1465,     0.0119,     0.0349,     0.0547,     0.0591,     0.1279,     0.1270,     0.0654,     0.0811,     0.0618,     0.0669,     0.0752,     0.0713,     0.0000],
        [    0.0043,     0.0811,     0.0038,     0.0113,     0.0359,     0.0388,     0.0405,     0.0442,     0.0564,     0.0215,     0.0273,     0.0239,     0.0435,     0.0977,     0.4707]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0037,  0.0179, -0.0011,  ..., -0.0204,  0.0022, -0.0466],
        [ 0.0322,  0.0137,  0.0484,  ..., -0.0564, -0.0298,  0.0037],
        [ 0.0014, -0.0116,  0.0141,  ...,  0.0566,  0.0085, -0.0337],
        ...,
        [ 0.0024, -0.0065, -0.0101,  ..., -0.0473, -0.0261,  0.0115],
        [ 0.0187,  0.0148,  0.0258,  ...,  0.0273, -0.0106,  0.0008],
        [-0.0110,  0.0266, -0.0167,  ..., -0.0098, -0.0042,  0.0006]], device='cuda:0', requires_grad=True)
K: tensor([-0.8906, -0.7461,  0.7930,  0.2676, -1.3516,  0.7656, -0.3828,  2.5938, -0.3574,  1.8828, -1.2109, -0.1226, -0.2236, -0.6992,  0.7539, -3.1875, -0.0874, -1.2188, -1.4688, -0.3125, -2.1875,  0.7422, -2.2969,  1.1562,  0.1055, -1.2109, -0.5117, -1.4922,  0.2471, -0.6719,  0.8242,  0.2969,
        -0.0033, -0.2422,  0.2305, -0.3613,  0.7578, -0.0801,  2.1250, -0.8477, -0.7695, -1.1172,  1.0625,  1.0156,  0.4473, -0.6953, -0.4961,  0.6367, -1.6719, -1.3438,  0.5898, -1.1172, -0.4727,  0.1055, -1.0156, -0.6797, -1.2422, -1.6016, -1.7266, -0.9688,  1.0078,  1.3828, -0.4277, -0.2695],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0022,  0.0341, -0.0229,  ...,  0.0040,  0.0043,  0.0254],
        [-0.0066, -0.0080,  0.0318,  ..., -0.0056, -0.0103,  0.0101],
        [-0.0077,  0.0317, -0.0300,  ...,  0.0160,  0.0085,  0.0127],
        ...,
        [ 0.0054,  0.0373, -0.0065,  ..., -0.0030,  0.0157, -0.0070],
        [ 0.0096,  0.0027, -0.0025,  ...,  0.0311, -0.0308,  0.0218],
        [ 0.0280,  0.0053, -0.0241,  ..., -0.0059, -0.0049, -0.0249]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3906, -0.3066,  0.8320,  1.3828, -2.2344,  0.1338,  0.7656,  0.4883, -1.4141, -0.6719, -1.0000, -0.5234, -0.0317, -0.2402, -0.4941, -2.9062, -0.2422, -1.1641, -1.8047, -1.2188, -1.7734, -0.9336, -0.2266,  0.2129, -0.5195, -0.5391, -0.7188,  0.1816, -0.6523, -0.6250,  1.2109, -0.1147,
        -0.0522, -0.3086, -0.8672,  0.5781,  1.0547, -0.7812,  0.6523,  1.1562, -1.7812, -0.6211,  0.5391,  0.0535, -0.0310, -0.3164,  1.0078,  0.4746, -1.2656, -1.0234, -0.9805,  0.0845, -0.7422, -1.1797,  0.0801, -0.0564,  0.0894, -0.4082, -1.3359,  0.1152,  0.6484,  1.2422, -0.9414,  0.8789],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.6484,     -0.3691,      0.1562,      0.0430,     -0.7773,      0.0064,      0.7734,     -0.5820,     -0.9219,     -0.9922,      0.0864,      0.1621,     -0.6680,      0.2520],
        [     0.0000,      0.2598,      1.5703,      1.6172,      0.7031,      0.7656,     -0.2139,      0.9922,      0.5820,      0.1553,     -0.2158,      0.6055,      0.8477,      0.5859,     -0.2656],
        [     0.0000,      1.1250,     -0.2256,      0.6562,      1.3750,     -0.0099,      1.9844,      2.2812,      0.7109,     -0.8828,      0.2676,      0.5117,      0.6875,      0.4082,      0.7930],
        [     0.0000,      1.8359,     -0.1943,      1.0859,      1.8125,      0.8359,      2.7188,      3.0312,      1.0391,      0.0378,      0.0530,      1.5234,      1.3203,      0.4941,      2.5781],
        [     0.0000,      1.9453,      0.1196,      0.9648,      2.3750,      1.8984,      2.8438,      2.8906,      1.8906,      1.0234,      1.1172,      1.3281,      1.8203,      1.9766,      3.4844],
        [     0.0000,      0.5781,     -2.0469,     -0.9648,      0.5586,     -0.3301,      2.7500,      1.2109,      0.3418,     -0.0913,      0.0850,     -0.3281,     -0.5742,      0.2373,      2.9688],
        [     0.0000,     -0.0015,     -4.1875,     -2.4688,      1.1250,     -1.8438,      3.8281,      2.4219,      0.1895,     -2.5781,      0.1641,     -0.7695,     -0.5898,     -0.0757,      1.6094],
        [     0.0000,      1.7344,     -0.9453,      0.3730,      1.3672,      0.7695,      2.6875,      2.3906,      0.9766,      0.8359,      0.7500,      1.2422,      0.9961,      0.6797,      2.9531],
        [     0.0000,      3.2656,      0.2871,      1.3281,      1.3516,      0.6406,      1.8516,      2.3906,      1.2188,      1.0625,      1.8594,      1.9688,      1.6484,      1.3594,      3.0938],
        [     0.0000,      2.5156,     -0.9492,      0.2852,      1.1953,      0.7148,      2.2031,      1.9531,      1.4375,      1.7812,      2.3906,      1.2031,      1.4844,      1.7109,      3.7656],
        [     0.0000,      0.0630,     -0.6367,     -0.1172,      0.2559,     -1.2734,      0.6680,      1.7578,     -0.3301,     -1.0547,     -0.1118,     -0.3086,      0.2656,     -0.6680,     -0.1934],
        [     0.0000,      0.8086,     -3.0781,     -1.6172,      1.4609,     -0.6172,      2.5000,      1.8906,      0.8633,     -1.3672,      1.1562,     -0.1611,      0.6836,      1.3125,      2.6250],
        [     0.0000,      2.1875,     -0.3164,      0.7578,      1.2109,      1.2891,      2.0625,      2.0625,      1.3906,      1.6016,      1.3281,      1.4141,      1.5312,      1.4766,      3.5625],
        [     0.0000,      2.9375,     -0.1348,      0.9648,      2.1250,      2.2031,      2.2344,      2.3281,      2.5781,      1.6094,      1.8438,      1.7188,      2.3125,      3.1250,      4.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5202],
        [0.2638],
        [0.2151],
        [0.1627],
        [0.0722],
        [0.1895],
        [0.0521],
        [0.0217],
        [0.0524],
        [0.0471],
        [0.1199],
        [0.0540],
        [0.0241],
        [0.0143]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0737 a:0.0996 and:0.2100 and:0.1465om:0.0231,:0.2754 the:0.0806ery:0.1709)
ery
------
		( a:0.0996 and:0.2100 and:0.1465om:0.0231,:0.2754 the:0.0806ery:0.1709,:0.1348)
, and the most common in the most common types of the most common types
@ 1550 train 5.4376 , allloss: 5.4389, dt: 1859.56ms, fracRes: 0.1734, norm(attn): 0.1533, norm(output): 0.3008, norm(x): 0.2619, norm(y): 1.0078, norm:1.6872, tok/sec: 70485.59, flops:73.98, batch-reuse:1
@ 1551 train 5.3929 , allloss: 5.3965, dt: 1326.01ms, fracRes: 0.1713, norm(attn): 0.1562, norm(output): 0.3027, norm(x): 0.2636, norm(y): 1.0077, norm:1.4038, tok/sec: 98846.90, flops:103.74, batch-reuse:1
@ 1552 train 5.2763 , allloss: 5.2790, dt: 1310.96ms, fracRes: 0.1703, norm(attn): 0.1602, norm(output): 0.3066, norm(x): 0.2646, norm(y): 1.0076, norm:1.3570, tok/sec: 99981.40, flops:104.93, batch-reuse:1
@ 1553 train 5.3880 , allloss: 5.3890, dt: 1329.46ms, fracRes: 0.1714, norm(attn): 0.1562, norm(output): 0.3027, norm(x): 0.2641, norm(y): 1.0078, norm:1.7440, tok/sec: 98590.20, flops:103.47, batch-reuse:1
@ 1554 train 5.3754 , allloss: 5.3769, dt: 1287.62ms, fracRes: 0.1715, norm(attn): 0.1572, norm(output): 0.3027, norm(x): 0.2638, norm(y): 1.0078, norm:1.7077, tok/sec: 101794.27, flops:106.83, batch-reuse:1
@ 1555 train 5.3864 , allloss: 5.3886, dt: 1323.17ms, fracRes: 0.1697, norm(attn): 0.1582, norm(output): 0.3066, norm(x): 0.2654, norm(y): 1.0077, norm:1.2397, tok/sec: 99058.83, flops:103.96, batch-reuse:1
@ 1556 train 5.4705 , allloss: 5.4751, dt: 1293.22ms, fracRes: 0.1766, norm(attn): 0.1562, norm(output): 0.3086, norm(x): 0.2625, norm(y): 1.0079, norm:1.4310, tok/sec: 101353.39, flops:106.37, batch-reuse:1
@ 1557 train 5.3969 , allloss: 5.3987, dt: 1300.73ms, fracRes: 0.1721, norm(attn): 0.1562, norm(output): 0.3066, norm(x): 0.2648, norm(y): 1.0078, norm:1.7342, tok/sec: 100767.83, flops:105.76, batch-reuse:1
@ 1558 train 5.3237 , allloss: 5.3255, dt: 1321.56ms, fracRes: 0.1697, norm(attn): 0.1582, norm(output): 0.3086, norm(x): 0.2654, norm(y): 1.0078, norm:1.6542, tok/sec: 99179.93, flops:104.09, batch-reuse:1
@ 1559 train 5.3731 , allloss: 5.3758, dt: 1342.66ms, fracRes: 0.1724, norm(attn): 0.1602, norm(output): 0.3066, norm(x): 0.2649, norm(y): 1.0077, norm:1.5865, tok/sec: 97620.95, flops:102.46, batch-reuse:1
@ 1560 train 5.4355 , allloss: 5.4383, dt: 1325.02ms, fracRes: 0.1781, norm(attn): 0.1572, norm(output): 0.3047, norm(x): 0.2636, norm(y): 1.0078, norm:1.3652, tok/sec: 98920.80, flops:103.82, batch-reuse:1
@ 1561 train 5.4084 , allloss: 5.4108, dt: 1345.53ms, fracRes: 0.1705, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2669, norm(y): 1.0077, norm:1.4000, tok/sec: 97412.95, flops:102.24, batch-reuse:1
@ 1562 train 5.3377 , allloss: 5.3392, dt: 1353.83ms, fracRes: 0.1728, norm(attn): 0.1582, norm(output): 0.3066, norm(x): 0.2659, norm(y): 1.0078, norm:1.6816, tok/sec: 96815.81, flops:101.61, batch-reuse:1
@ 1563 train 5.3674 , allloss: 5.3692, dt: 1314.11ms, fracRes: 0.1754, norm(attn): 0.1572, norm(output): 0.3027, norm(x): 0.2640, norm(y): 1.0079, norm:1.4522, tok/sec: 99741.83, flops:104.68, batch-reuse:1
@ 1564 train 5.3824 , allloss: 5.3836, dt: 1317.81ms, fracRes: 0.1760, norm(attn): 0.1592, norm(output): 0.3027, norm(x): 0.2641, norm(y): 1.0079, norm:1.7081, tok/sec: 99462.00, flops:104.39, batch-reuse:1
@ 1565 train 5.4205 , allloss: 5.4225, dt: 1358.40ms, fracRes: 0.1702, norm(attn): 0.1621, norm(output): 0.3086, norm(x): 0.2666, norm(y): 1.0077, norm:1.4777, tok/sec: 96489.83, flops:101.27, batch-reuse:1
@ 1566 train 5.4141 , allloss: 5.4153, dt: 1332.22ms, fracRes: 0.1764, norm(attn): 0.1572, norm(output): 0.3047, norm(x): 0.2643, norm(y): 1.0079, norm:1.5816, tok/sec: 98385.97, flops:103.26, batch-reuse:1
@ 1567 train 5.3480 , allloss: 5.3489, dt: 1345.20ms, fracRes: 0.1755, norm(attn): 0.1562, norm(output): 0.3047, norm(x): 0.2647, norm(y): 1.0079, norm:1.4609, tok/sec: 97436.89, flops:102.26, batch-reuse:1
@ 1568 train 5.3420 , allloss: 5.3430, dt: 1312.51ms, fracRes: 0.1720, norm(attn): 0.1572, norm(output): 0.3086, norm(x): 0.2664, norm(y): 1.0078, norm:1.9129, tok/sec: 99863.96, flops:104.81, batch-reuse:1
@ 1569 train 5.2464 , allloss: 5.2485, dt: 1329.29ms, fracRes: 0.1737, norm(attn): 0.1621, norm(output): 0.3086, norm(x): 0.2664, norm(y): 1.0077, norm:1.6439, tok/sec: 98602.97, flops:103.49, batch-reuse:1
@ 1570 train 5.3395 , allloss: 5.3425, dt: 1354.31ms, fracRes: 0.1819, norm(attn): 0.1592, norm(output): 0.3066, norm(x): 0.2635, norm(y): 1.0078, norm:1.3484, tok/sec: 96781.74, flops:101.57, batch-reuse:1
@ 1571 train 5.3686 , allloss: 5.3705, dt: 1332.14ms, fracRes: 0.1812, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2639, norm(y): 1.0078, norm:1.5549, tok/sec: 98392.17, flops:103.26, batch-reuse:1
@ 1572 train 5.3542 , allloss: 5.3558, dt: 1327.68ms, fracRes: 0.1790, norm(attn): 0.1582, norm(output): 0.3086, norm(x): 0.2645, norm(y): 1.0078, norm:1.5631, tok/sec: 98722.56, flops:103.61, batch-reuse:1
@ 1573 train 5.4173 , allloss: 5.4187, dt: 1358.18ms, fracRes: 0.1768, norm(attn): 0.1602, norm(output): 0.3047, norm(x): 0.2643, norm(y): 1.0078, norm:1.5048, tok/sec: 96505.77, flops:101.28, batch-reuse:1
@ 1574 train 5.3571 , allloss: 5.3592, dt: 1327.88ms, fracRes: 0.1789, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2653, norm(y): 1.0078, norm:1.3778, tok/sec: 98707.53, flops:103.60, batch-reuse:1
@ 1575 train 5.3434 , allloss: 5.3455, dt: 1310.84ms, fracRes: 0.1825, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2651, norm(y): 1.0078, norm:1.5776, tok/sec: 99990.53, flops:104.94, batch-reuse:1
@ 1576 train 5.3701 , allloss: 5.3724, dt: 1316.62ms, fracRes: 0.1797, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2658, norm(y): 1.0078, norm:1.6080, tok/sec: 99552.14, flops:104.48, batch-reuse:1
@ 1577 train 5.2593 , allloss: 5.2605, dt: 1295.32ms, fracRes: 0.1833, norm(attn): 0.1582, norm(output): 0.3086, norm(x): 0.2645, norm(y): 1.0078, norm:1.4859, tok/sec: 101188.54, flops:106.20, batch-reuse:1
@ 1578 train 5.3419 , allloss: 5.3431, dt: 1312.81ms, fracRes: 0.1909, norm(attn): 0.1562, norm(output): 0.3047, norm(x): 0.2628, norm(y): 1.0080, norm:1.5635, tok/sec: 99841.06, flops:104.79, batch-reuse:1
@ 1579 train 5.2252 , allloss: 5.2270, dt: 1334.81ms, fracRes: 0.1830, norm(attn): 0.1582, norm(output): 0.3047, norm(x): 0.2647, norm(y): 1.0079, norm:1.6363, tok/sec: 98195.30, flops:103.06, batch-reuse:1
@ 1580 train 5.2720 , allloss: 5.2734, dt: 1293.49ms, fracRes: 0.1803, norm(attn): 0.1611, norm(output): 0.3086, norm(x): 0.2660, norm(y): 1.0078, norm:1.6295, tok/sec: 101332.04, flops:106.35, batch-reuse:1
@ 1581 train 5.2038 , allloss: 5.2057, dt: 1297.23ms, fracRes: 0.1854, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2643, norm(y): 1.0079, norm:1.4928, tok/sec: 101040.02, flops:106.04, batch-reuse:1
@ 1582 train 5.2776 , allloss: 5.2803, dt: 1312.11ms, fracRes: 0.1786, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2654, norm(y): 1.0079, norm:1.3792, tok/sec: 99894.18, flops:104.84, batch-reuse:1
@ 1583 train 5.2453 , allloss: 5.2469, dt: 1321.79ms, fracRes: 0.1702, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2674, norm(y): 1.0078, norm:1.6193, tok/sec: 99162.47, flops:104.07, batch-reuse:1
@ 1584 train 5.2808 , allloss: 5.2821, dt: 1322.02ms, fracRes: 0.1717, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2674, norm(y): 1.0079, norm:1.7120, tok/sec: 99145.57, flops:104.06, batch-reuse:1
@ 1585 train 5.2889 , allloss: 5.2906, dt: 1320.75ms, fracRes: 0.1738, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2669, norm(y): 1.0079, norm:1.1827, tok/sec: 99240.87, flops:104.16, batch-reuse:1
@ 1586 train 5.2772 , allloss: 5.2794, dt: 1307.90ms, fracRes: 0.1765, norm(attn): 0.1641, norm(output): 0.3105, norm(x): 0.2661, norm(y): 1.0079, norm:1.4728, tok/sec: 100215.56, flops:105.18, batch-reuse:1
@ 1587 train 5.3293 , allloss: 5.3309, dt: 1286.25ms, fracRes: 0.1798, norm(attn): 0.1602, norm(output): 0.3086, norm(x): 0.2656, norm(y): 1.0079, norm:1.7789, tok/sec: 101902.29, flops:106.95, batch-reuse:1
@ 1588 train 5.3370 , allloss: 5.3381, dt: 1298.08ms, fracRes: 0.1800, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2659, norm(y): 1.0079, norm:1.3125, tok/sec: 100973.69, flops:105.97, batch-reuse:1
@ 1589 train 5.2559 , allloss: 5.2577, dt: 1302.31ms, fracRes: 0.1782, norm(attn): 0.1660, norm(output): 0.3105, norm(x): 0.2681, norm(y): 1.0078, norm:1.5487, tok/sec: 100645.63, flops:105.63, batch-reuse:1
@ 1590 train 5.3372 , allloss: 5.3384, dt: 1282.67ms, fracRes: 0.1904, norm(attn): 0.1572, norm(output): 0.3086, norm(x): 0.2639, norm(y): 1.0081, norm:1.5915, tok/sec: 102187.05, flops:107.25, batch-reuse:1
@ 1591 train 5.2280 , allloss: 5.2288, dt: 1322.55ms, fracRes: 0.1863, norm(attn): 0.1562, norm(output): 0.3086, norm(x): 0.2654, norm(y): 1.0080, norm:1.5213, tok/sec: 99105.87, flops:104.01, batch-reuse:1
@ 1592 train 5.2959 , allloss: 5.2976, dt: 1289.93ms, fracRes: 0.1833, norm(attn): 0.1592, norm(output): 0.3086, norm(x): 0.2665, norm(y): 1.0079, norm:1.4359, tok/sec: 101611.63, flops:106.64, batch-reuse:1
@ 1593 train 5.2923 , allloss: 5.2942, dt: 1303.98ms, fracRes: 0.1844, norm(attn): 0.1582, norm(output): 0.3105, norm(x): 0.2663, norm(y): 1.0079, norm:1.4374, tok/sec: 100516.94, flops:105.49, batch-reuse:1
@ 1594 train 5.1673 , allloss: 5.1689, dt: 1289.76ms, fracRes: 0.1867, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2658, norm(y): 1.0080, norm:1.3281, tok/sec: 101624.91, flops:106.66, batch-reuse:1
@ 1595 train 5.3388 , allloss: 5.3412, dt: 1288.36ms, fracRes: 0.1784, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2699, norm(y): 1.0078, norm:1.7229, tok/sec: 101735.89, flops:106.77, batch-reuse:1
@ 1596 train 5.2422 , allloss: 5.2452, dt: 1315.92ms, fracRes: 0.1811, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2690, norm(y): 1.0079, norm:1.4372, tok/sec: 99605.07, flops:104.54, batch-reuse:1
@ 1597 train 5.3006 , allloss: 5.3018, dt: 1311.43ms, fracRes: 0.1861, norm(attn): 0.1572, norm(output): 0.3086, norm(x): 0.2661, norm(y): 1.0080, norm:1.5658, tok/sec: 99945.72, flops:104.89, batch-reuse:1
@ 1598 train 5.2825 , allloss: 5.2838, dt: 1320.92ms, fracRes: 0.1807, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2679, norm(y): 1.0079, norm:1.8194, tok/sec: 99227.85, flops:104.14, batch-reuse:1
@ 1599 train 5.3489 , allloss: 5.3504, dt: 1321.12ms, fracRes: 0.1855, norm(attn): 0.1582, norm(output): 0.3105, norm(x): 0.2678, norm(y): 1.0080, norm:1.5507, tok/sec: 99212.70, flops:104.13, batch-reuse:1
@ 1600 train 5.2532 , allloss: 5.2549, dt: 1308.23ms, fracRes: 0.1890, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2669, norm(y): 1.0080, norm:1.4227, tok/sec: 100190.28, flops:105.15, batch-reuse:1
@ 1601 train 5.3705 , allloss: 5.3738, dt: 1339.43ms, fracRes: 0.1896, norm(attn): 0.1621, norm(output): 0.3086, norm(x): 0.2662, norm(y): 1.0079, norm:1.4631, tok/sec: 97856.46, flops:102.70, batch-reuse:1
@ 1602 train 5.2601 , allloss: 5.2623, dt: 1333.57ms, fracRes: 0.1962, norm(attn): 0.1562, norm(output): 0.3105, norm(x): 0.2648, norm(y): 1.0081, norm:1.5019, tok/sec: 98286.33, flops:103.15, batch-reuse:1
@ 1603 train 5.2150 , allloss: 5.2166, dt: 1295.91ms, fracRes: 0.1883, norm(attn): 0.1572, norm(output): 0.3105, norm(x): 0.2677, norm(y): 1.0080, norm:2.1301, tok/sec: 101143.11, flops:106.15, batch-reuse:1
@ 1604 train 5.2443 , allloss: 5.2457, dt: 1321.26ms, fracRes: 0.1855, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2678, norm(y): 1.0080, norm:1.6848, tok/sec: 99202.40, flops:104.11, batch-reuse:1
@ 1605 train 5.2903 , allloss: 5.2917, dt: 1343.93ms, fracRes: 0.1887, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2667, norm(y): 1.0080, norm:1.6117, tok/sec: 97528.58, flops:102.36, batch-reuse:1
@ 1606 train 5.2934 , allloss: 5.2956, dt: 1340.33ms, fracRes: 0.1875, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2674, norm(y): 1.0079, norm:1.4241, tok/sec: 97790.80, flops:102.63, batch-reuse:1
@ 1607 train 5.2618 , allloss: 5.2637, dt: 1338.76ms, fracRes: 0.1897, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2670, norm(y): 1.0080, norm:1.3182, tok/sec: 97905.76, flops:102.75, batch-reuse:1
@ 1608 train 5.3193 , allloss: 5.3204, dt: 1324.24ms, fracRes: 0.1897, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2669, norm(y): 1.0081, norm:1.6358, tok/sec: 98978.67, flops:103.88, batch-reuse:1
@ 1609 train 5.2843 , allloss: 5.2852, dt: 1339.56ms, fracRes: 0.1848, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2687, norm(y): 1.0080, norm:1.8125, tok/sec: 97846.70, flops:102.69, batch-reuse:1
@ 1610 train 5.2302 , allloss: 5.2320, dt: 1331.27ms, fracRes: 0.1830, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2692, norm(y): 1.0080, norm:1.5413, tok/sec: 98455.99, flops:103.33, batch-reuse:1
@ 1611 train 5.2019 , allloss: 5.2041, dt: 1324.48ms, fracRes: 0.1837, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2690, norm(y): 1.0079, norm:1.5390, tok/sec: 98960.97, flops:103.86, batch-reuse:1
@ 1612 train 5.2548 , allloss: 5.2571, dt: 1323.21ms, fracRes: 0.1841, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2685, norm(y): 1.0080, norm:1.2885, tok/sec: 99055.83, flops:103.96, batch-reuse:1
@ 1613 train 5.2521 , allloss: 5.2549, dt: 1348.46ms, fracRes: 0.1848, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2682, norm(y): 1.0080, norm:1.4059, tok/sec: 97201.32, flops:102.01, batch-reuse:1
@ 1614 train 5.2984 , allloss: 5.3001, dt: 1342.99ms, fracRes: 0.1886, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2678, norm(y): 1.0080, norm:1.2015, tok/sec: 97596.90, flops:102.43, batch-reuse:1
@ 1615 train 5.2600 , allloss: 5.2611, dt: 1345.52ms, fracRes: 0.1831, norm(attn): 0.1670, norm(output): 0.3105, norm(x): 0.2703, norm(y): 1.0079, norm:1.6928, tok/sec: 97413.52, flops:102.24, batch-reuse:1
@ 1616 train 5.3179 , allloss: 5.3188, dt: 1328.52ms, fracRes: 0.1903, norm(attn): 0.1641, norm(output): 0.3105, norm(x): 0.2675, norm(y): 1.0081, norm:1.4583, tok/sec: 98659.84, flops:103.55, batch-reuse:1
@ 1617 train 5.2730 , allloss: 5.2752, dt: 1291.10ms, fracRes: 0.1892, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2680, norm(y): 1.0080, norm:1.6024, tok/sec: 101519.63, flops:106.55, batch-reuse:1
@ 1618 train 5.2625 , allloss: 5.2656, dt: 1302.34ms, fracRes: 0.1921, norm(attn): 0.1592, norm(output): 0.3105, norm(x): 0.2675, norm(y): 1.0080, norm:1.6627, tok/sec: 100643.47, flops:105.63, batch-reuse:1
@ 1619 train 5.1897 , allloss: 5.1953, dt: 1310.33ms, fracRes: 0.1899, norm(attn): 0.1650, norm(output): 0.3105, norm(x): 0.2678, norm(y): 1.0080, norm:1.5529, tok/sec: 100029.59, flops:104.98, batch-reuse:1
@ 1620 train 5.1969 , allloss: 5.2022, dt: 1320.52ms, fracRes: 0.1887, norm(attn): 0.1670, norm(output): 0.3105, norm(x): 0.2692, norm(y): 1.0080, norm:1.6071, tok/sec: 99258.20, flops:104.17, batch-reuse:1
@ 1621 train 5.2978 , allloss: 5.2991, dt: 1334.17ms, fracRes: 0.1924, norm(attn): 0.1611, norm(output): 0.3105, norm(x): 0.2672, norm(y): 1.0081, norm:1.7704, tok/sec: 98242.61, flops:103.11, batch-reuse:1
@ 1622 train 5.2754 , allloss: 5.2762, dt: 1339.02ms, fracRes: 0.1939, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2668, norm(y): 1.0081, norm:1.4248, tok/sec: 97886.76, flops:102.73, batch-reuse:1
@ 1623 train 5.1842 , allloss: 5.1851, dt: 1366.03ms, fracRes: 0.1879, norm(attn): 0.1631, norm(output): 0.3105, norm(x): 0.2691, norm(y): 1.0080, norm:1.5830, tok/sec: 95951.31, flops:100.70, batch-reuse:1
@ 1624 train 5.1219 , allloss: 5.1237, dt: 1287.80ms, fracRes: 0.1959, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2670, norm(y): 1.0081, norm:1.4510, tok/sec: 101779.53, flops:106.82, batch-reuse:1
@ 1625 train 5.2361 , allloss: 5.2390, dt: 1309.79ms, fracRes: 0.1927, norm(attn): 0.1680, norm(output): 0.3125, norm(x): 0.2682, norm(y): 1.0080, norm:1.6546, tok/sec: 100071.32, flops:105.03, batch-reuse:1
@ 1626 train 5.2195 , allloss: 5.2211, dt: 1347.27ms, fracRes: 0.1920, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2674, norm(y): 1.0081, norm:1.6744, tok/sec: 97287.40, flops:102.10, batch-reuse:1
@ 1627 train 5.1417 , allloss: 5.1431, dt: 1321.60ms, fracRes: 0.1867, norm(attn): 0.1631, norm(output): 0.3105, norm(x): 0.2691, norm(y): 1.0081, norm:1.5635, tok/sec: 99177.03, flops:104.09, batch-reuse:1
@ 1628 train 5.1387 , allloss: 5.1399, dt: 1305.54ms, fracRes: 0.1862, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2700, norm(y): 1.0081, norm:1.9350, tok/sec: 100396.87, flops:105.37, batch-reuse:1
@ 1629 train 5.1511 , allloss: 5.1527, dt: 1302.44ms, fracRes: 0.1931, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2688, norm(y): 1.0081, norm:1.7456, tok/sec: 100635.68, flops:105.62, batch-reuse:1
@ 1630 train 5.2019 , allloss: 5.2051, dt: 1290.54ms, fracRes: 0.1929, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2690, norm(y): 1.0080, norm:1.6777, tok/sec: 101563.78, flops:106.59, batch-reuse:1
@ 1631 train 5.1136 , allloss: 5.1155, dt: 1285.53ms, fracRes: 0.2002, norm(attn): 0.1602, norm(output): 0.3105, norm(x): 0.2670, norm(y): 1.0082, norm:1.4954, tok/sec: 101959.25, flops:107.01, batch-reuse:1
@ 1632 train 5.2369 , allloss: 5.2387, dt: 1314.18ms, fracRes: 0.1924, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2694, norm(y): 1.0081, norm:1.7815, tok/sec: 99736.56, flops:104.68, batch-reuse:1
@ 1633 train 5.1833 , allloss: 5.1860, dt: 1315.59ms, fracRes: 0.1856, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2723, norm(y): 1.0080, norm:1.8365, tok/sec: 99629.79, flops:104.56, batch-reuse:1
@ 1634 train 5.2098 , allloss: 5.2111, dt: 1295.57ms, fracRes: 0.1912, norm(attn): 0.1602, norm(output): 0.3125, norm(x): 0.2701, norm(y): 1.0082, norm:1.5407, tok/sec: 101169.60, flops:106.18, batch-reuse:1
@ 1635 train 5.1439 , allloss: 5.1451, dt: 1313.66ms, fracRes: 0.1933, norm(attn): 0.1621, norm(output): 0.3105, norm(x): 0.2691, norm(y): 1.0082, norm:1.4130, tok/sec: 99776.31, flops:104.72, batch-reuse:1
@ 1636 train 5.1214 , allloss: 5.1256, dt: 1330.12ms, fracRes: 0.1911, norm(attn): 0.1650, norm(output): 0.3105, norm(x): 0.2700, norm(y): 1.0081, norm:1.4564, tok/sec: 98541.27, flops:103.42, batch-reuse:1
@ 1637 train 5.2117 , allloss: 5.2132, dt: 1317.12ms, fracRes: 0.1838, norm(attn): 0.1670, norm(output): 0.3125, norm(x): 0.2721, norm(y): 1.0081, norm:1.3912, tok/sec: 99514.21, flops:104.44, batch-reuse:1
@ 1638 train 5.2490 , allloss: 5.2503, dt: 1321.96ms, fracRes: 0.1865, norm(attn): 0.1650, norm(output): 0.3105, norm(x): 0.2713, norm(y): 1.0081, norm:1.5189, tok/sec: 99149.91, flops:104.06, batch-reuse:1
@ 1639 train 5.1283 , allloss: 5.1295, dt: 1319.68ms, fracRes: 0.1888, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2711, norm(y): 1.0082, norm:1.5269, tok/sec: 99320.92, flops:104.24, batch-reuse:1
@ 1640 train 5.1694 , allloss: 5.1710, dt: 1322.15ms, fracRes: 0.1867, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2710, norm(y): 1.0081, norm:1.3272, tok/sec: 99135.46, flops:104.04, batch-reuse:1
@ 1641 train 5.1468 , allloss: 5.1480, dt: 1345.97ms, fracRes: 0.1858, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2707, norm(y): 1.0081, norm:1.5136, tok/sec: 97380.87, flops:102.20, batch-reuse:1
@ 1642 train 5.1838 , allloss: 5.1845, dt: 1346.81ms, fracRes: 0.1896, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2705, norm(y): 1.0082, norm:1.9116, tok/sec: 97320.07, flops:102.14, batch-reuse:1
@ 1643 train 5.1937 , allloss: 5.1949, dt: 1289.53ms, fracRes: 0.1927, norm(attn): 0.1660, norm(output): 0.3105, norm(x): 0.2697, norm(y): 1.0082, norm:1.6084, tok/sec: 101643.46, flops:106.68, batch-reuse:1
@ 1644 train 5.2431 , allloss: 5.2447, dt: 1317.00ms, fracRes: 0.1951, norm(attn): 0.1660, norm(output): 0.3125, norm(x): 0.2693, norm(y): 1.0081, norm:1.5008, tok/sec: 99522.82, flops:104.45, batch-reuse:1
@ 1645 train 5.1808 , allloss: 5.1820, dt: 1359.06ms, fracRes: 0.1957, norm(attn): 0.1680, norm(output): 0.3105, norm(x): 0.2691, norm(y): 1.0082, norm:1.6685, tok/sec: 96443.24, flops:101.22, batch-reuse:1
@ 1646 train 5.1969 , allloss: 5.1983, dt: 1360.71ms, fracRes: 0.1954, norm(attn): 0.1631, norm(output): 0.3125, norm(x): 0.2685, norm(y): 1.0082, norm:1.6307, tok/sec: 96326.29, flops:101.10, batch-reuse:1
@ 1647 train 5.2471 , allloss: 5.2490, dt: 1351.39ms, fracRes: 0.1933, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2700, norm(y): 1.0082, norm:1.7126, tok/sec: 96990.41, flops:101.79, batch-reuse:1
@ 1648 train 5.2079 , allloss: 5.2092, dt: 1346.84ms, fracRes: 0.1939, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2703, norm(y): 1.0082, norm:1.7090, tok/sec: 97318.21, flops:102.14, batch-reuse:1
@ 1649 train 5.1587 , allloss: 5.1608, dt: 1341.69ms, fracRes: 0.1903, norm(attn): 0.1689, norm(output): 0.3125, norm(x): 0.2718, norm(y): 1.0081, norm:1.7889, tok/sec: 97691.92, flops:102.53, batch-reuse:1
@ 1650 train 5.1598 , allloss: 5.1619, dt: 1330.90ms, fracRes: 0.1950, norm(attn): 0.1660, norm(output): 0.3125, norm(x): 0.2701, norm(y): 1.0082, norm:1.3295, tok/sec: 98483.93, flops:103.36, batch-reuse:1
@ 1651 train 5.2815 , allloss: 5.2830, dt: 1294.45ms, fracRes: 0.1965, norm(attn): 0.1631, norm(output): 0.3145, norm(x): 0.2707, norm(y): 1.0081, norm:2.6114, tok/sec: 101257.11, flops:106.27, batch-reuse:1
@ 1652 train 5.2966 , allloss: 5.2986, dt: 1321.13ms, fracRes: 0.1939, norm(attn): 0.1631, norm(output): 0.3145, norm(x): 0.2713, norm(y): 1.0081, norm:1.8067, tok/sec: 99212.29, flops:104.13, batch-reuse:1
@ 1653 train 5.2138 , allloss: 5.2166, dt: 1347.62ms, fracRes: 0.1967, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2702, norm(y): 1.0081, norm:1.9621, tok/sec: 97261.87, flops:102.08, batch-reuse:1
@ 1654 train 5.1801 , allloss: 5.1826, dt: 1310.90ms, fracRes: 0.1971, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2710, norm(y): 1.0082, norm:1.8486, tok/sec: 99986.34, flops:104.94, batch-reuse:1
@ 1655 train 5.1217 , allloss: 5.1247, dt: 1298.61ms, fracRes: 0.1962, norm(attn): 0.1670, norm(output): 0.3125, norm(x): 0.2710, norm(y): 1.0082, norm:1.7534, tok/sec: 100932.83, flops:105.93, batch-reuse:1
@ 1656 train 5.1382 , allloss: 5.1399, dt: 1315.90ms, fracRes: 0.1966, norm(attn): 0.1660, norm(output): 0.3125, norm(x): 0.2709, norm(y): 1.0082, norm:1.5281, tok/sec: 99606.31, flops:104.54, batch-reuse:1
@ 1657 train 5.2410 , allloss: 5.2427, dt: 1308.90ms, fracRes: 0.1944, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2714, norm(y): 1.0081, norm:1.6122, tok/sec: 100139.22, flops:105.10, batch-reuse:1
@ 1658 train 5.2365 , allloss: 5.2383, dt: 1317.63ms, fracRes: 0.1989, norm(attn): 0.1592, norm(output): 0.3125, norm(x): 0.2696, norm(y): 1.0083, norm:1.5515, tok/sec: 99475.43, flops:104.40, batch-reuse:1
@ 1659 train 5.1794 , allloss: 5.1813, dt: 1337.04ms, fracRes: 0.2009, norm(attn): 0.1621, norm(output): 0.3125, norm(x): 0.2700, norm(y): 1.0083, norm:1.3645, tok/sec: 98031.79, flops:102.89, batch-reuse:1
@ 1660 train 5.1449 , allloss: 5.1469, dt: 1328.60ms, fracRes: 0.1988, norm(attn): 0.1689, norm(output): 0.3125, norm(x): 0.2714, norm(y): 1.0082, norm:1.8360, tok/sec: 98654.35, flops:103.54, batch-reuse:1
@ 1661 train 5.2271 , allloss: 5.2290, dt: 1318.56ms, fracRes: 0.2029, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2709, norm(y): 1.0082, norm:1.4403, tok/sec: 99405.38, flops:104.33, batch-reuse:1
@ 1662 train 5.1970 , allloss: 5.2000, dt: 1285.56ms, fracRes: 0.1988, norm(attn): 0.1641, norm(output): 0.3125, norm(x): 0.2706, norm(y): 1.0082, norm:1.5833, tok/sec: 101957.26, flops:107.01, batch-reuse:1
@ 1663 train 5.2177 , allloss: 5.2198, dt: 1307.74ms, fracRes: 0.1977, norm(attn): 0.1602, norm(output): 0.3145, norm(x): 0.2712, norm(y): 1.0083, norm:1.6210, tok/sec: 100227.78, flops:105.19, batch-reuse:1
@ 1664 train 5.1654 , allloss: 5.1680, dt: 1327.78ms, fracRes: 0.1886, norm(attn): 0.1670, norm(output): 0.3164, norm(x): 0.2749, norm(y): 1.0081, norm:1.8968, tok/sec: 98714.94, flops:103.60, batch-reuse:1
@ 1665 train 5.1900 , allloss: 5.1919, dt: 1307.75ms, fracRes: 0.1918, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2728, norm(y): 1.0082, norm:1.5074, tok/sec: 100226.76, flops:105.19, batch-reuse:1
@ 1666 train 5.2624 , allloss: 5.2652, dt: 1305.34ms, fracRes: 0.1928, norm(attn): 0.1680, norm(output): 0.3145, norm(x): 0.2736, norm(y): 1.0082, norm:1.3969, tok/sec: 100412.42, flops:105.38, batch-reuse:1
@ 1667 train 5.3834 , allloss: 5.3849, dt: 1297.60ms, fracRes: 0.1995, norm(attn): 0.1611, norm(output): 0.3145, norm(x): 0.2724, norm(y): 1.0083, norm:1.6555, tok/sec: 101011.11, flops:106.01, batch-reuse:1
@ 1668 train 5.3403 , allloss: 5.3417, dt: 1281.36ms, fracRes: 0.1945, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2729, norm(y): 1.0083, norm:1.6117, tok/sec: 102291.06, flops:107.36, batch-reuse:1
@ 1669 train 5.3791 , allloss: 5.3815, dt: 1299.36ms, fracRes: 0.1964, norm(attn): 0.1650, norm(output): 0.3125, norm(x): 0.2728, norm(y): 1.0083, norm:1.7064, tok/sec: 100874.16, flops:105.87, batch-reuse:1
@ 1670 train 5.4825 , allloss: 5.4869, dt: 1306.96ms, fracRes: 0.1976, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2730, norm(y): 1.0083, norm:1.9276, tok/sec: 100287.96, flops:105.25, batch-reuse:1
@ 1671 train 5.3769 , allloss: 5.3801, dt: 1327.78ms, fracRes: 0.1896, norm(attn): 0.1680, norm(output): 0.3164, norm(x): 0.2766, norm(y): 1.0081, norm:1.5312, tok/sec: 98715.40, flops:103.60, batch-reuse:1
@ 1672 train 5.4004 , allloss: 5.4018, dt: 1330.32ms, fracRes: 0.1993, norm(attn): 0.1621, norm(output): 0.3145, norm(x): 0.2722, norm(y): 1.0085, norm:1.8534, tok/sec: 98526.41, flops:103.41, batch-reuse:1
@ 1673 train 5.2965 , allloss: 5.2982, dt: 1332.68ms, fracRes: 0.2004, norm(attn): 0.1611, norm(output): 0.3145, norm(x): 0.2725, norm(y): 1.0085, norm:1.6482, tok/sec: 98352.51, flops:103.22, batch-reuse:1
@ 1674 train 5.3380 , allloss: 5.3407, dt: 1317.46ms, fracRes: 0.1953, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2744, norm(y): 1.0083, norm:1.9331, tok/sec: 99488.12, flops:104.41, batch-reuse:1
@ 1675 train 5.4141 , allloss: 5.4154, dt: 1335.65ms, fracRes: 0.2033, norm(attn): 0.1650, norm(output): 0.3145, norm(x): 0.2708, norm(y): 1.0084, norm:1.6894, tok/sec: 98133.53, flops:102.99, batch-reuse:1
@ 1676 train 5.4467 , allloss: 5.4477, dt: 1320.95ms, fracRes: 0.2029, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2710, norm(y): 1.0083, norm:1.9367, tok/sec: 99225.61, flops:104.14, batch-reuse:1
@ 1677 train 5.3604 , allloss: 5.3617, dt: 1310.44ms, fracRes: 0.2014, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2725, norm(y): 1.0083, norm:1.2926, tok/sec: 100021.18, flops:104.97, batch-reuse:1
@ 1678 train 5.3172 , allloss: 5.3186, dt: 1309.76ms, fracRes: 0.1971, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2740, norm(y): 1.0083, norm:1.6409, tok/sec: 100073.65, flops:105.03, batch-reuse:1
@ 1679 train 5.4112 , allloss: 5.4131, dt: 1318.79ms, fracRes: 0.1971, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2738, norm(y): 1.0083, norm:1.5808, tok/sec: 99388.42, flops:104.31, batch-reuse:1
@ 1680 train 5.3305 , allloss: 5.3323, dt: 1305.03ms, fracRes: 0.1986, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2734, norm(y): 1.0084, norm:2.0246, tok/sec: 100436.38, flops:105.41, batch-reuse:1
@ 1681 train 5.3529 , allloss: 5.3551, dt: 1313.12ms, fracRes: 0.1966, norm(attn): 0.1670, norm(output): 0.3164, norm(x): 0.2754, norm(y): 1.0083, norm:1.6684, tok/sec: 99817.42, flops:104.76, batch-reuse:1
@ 1682 train 5.3366 , allloss: 5.3386, dt: 1338.88ms, fracRes: 0.2026, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2731, norm(y): 1.0084, norm:1.1836, tok/sec: 97896.85, flops:102.74, batch-reuse:1
@ 1683 train 5.2856 , allloss: 5.2882, dt: 1337.14ms, fracRes: 0.1986, norm(attn): 0.1680, norm(output): 0.3164, norm(x): 0.2761, norm(y): 1.0082, norm:1.4876, tok/sec: 98024.12, flops:102.88, batch-reuse:1
@ 1684 train 5.2916 , allloss: 5.2927, dt: 1310.73ms, fracRes: 0.2077, norm(attn): 0.1592, norm(output): 0.3164, norm(x): 0.2720, norm(y): 1.0085, norm:1.5452, tok/sec: 99999.48, flops:104.95, batch-reuse:1
@ 1685 train 5.3522 , allloss: 5.3529, dt: 1314.76ms, fracRes: 0.2066, norm(attn): 0.1602, norm(output): 0.3145, norm(x): 0.2725, norm(y): 1.0085, norm:1.6800, tok/sec: 99692.83, flops:104.63, batch-reuse:1
@ 1686 train 5.3719 , allloss: 5.3733, dt: 1304.76ms, fracRes: 0.2091, norm(attn): 0.1641, norm(output): 0.3145, norm(x): 0.2726, norm(y): 1.0085, norm:1.3898, tok/sec: 100456.66, flops:105.43, batch-reuse:1
@ 1687 train 5.3507 , allloss: 5.3517, dt: 1299.79ms, fracRes: 0.2060, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2737, norm(y): 1.0084, norm:1.5612, tok/sec: 100840.71, flops:105.83, batch-reuse:1
@ 1688 train 5.4000 , allloss: 5.4016, dt: 1305.28ms, fracRes: 0.2078, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2723, norm(y): 1.0084, norm:1.8278, tok/sec: 100416.50, flops:105.39, batch-reuse:1
@ 1689 train 5.3289 , allloss: 5.3301, dt: 1292.82ms, fracRes: 0.2073, norm(attn): 0.1660, norm(output): 0.3145, norm(x): 0.2727, norm(y): 1.0084, norm:1.4168, tok/sec: 101384.76, flops:106.41, batch-reuse:1
@ 1690 train 5.3125 , allloss: 5.3154, dt: 1303.45ms, fracRes: 0.2043, norm(attn): 0.1699, norm(output): 0.3164, norm(x): 0.2745, norm(y): 1.0083, norm:1.2862, tok/sec: 100557.76, flops:105.54, batch-reuse:1
@ 1691 train 5.2612 , allloss: 5.2625, dt: 1291.03ms, fracRes: 0.2034, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2748, norm(y): 1.0083, norm:1.6239, tok/sec: 101524.84, flops:106.55, batch-reuse:1
@ 1692 train 5.2198 , allloss: 5.2210, dt: 1307.85ms, fracRes: 0.2048, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2740, norm(y): 1.0084, norm:1.5415, tok/sec: 100219.53, flops:105.18, batch-reuse:1
@ 1693 train 5.4858 , allloss: 5.4873, dt: 1295.74ms, fracRes: 0.2072, norm(attn): 0.1631, norm(output): 0.3184, norm(x): 0.2739, norm(y): 1.0083, norm:1.5910, tok/sec: 101155.88, flops:106.16, batch-reuse:1
@ 1694 train 5.4893 , allloss: 5.4916, dt: 1299.59ms, fracRes: 0.2087, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2728, norm(y): 1.0084, norm:1.5069, tok/sec: 100856.80, flops:105.85, batch-reuse:1
@ 1695 train 5.3413 , allloss: 5.3427, dt: 1321.33ms, fracRes: 0.2046, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2749, norm(y): 1.0083, norm:1.4669, tok/sec: 99197.32, flops:104.11, batch-reuse:1
@ 1696 train 5.3126 , allloss: 5.3135, dt: 1299.92ms, fracRes: 0.2101, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2734, norm(y): 1.0084, norm:1.5880, tok/sec: 100831.20, flops:105.82, batch-reuse:1
@ 1697 train 5.3611 , allloss: 5.3626, dt: 1285.88ms, fracRes: 0.2075, norm(attn): 0.1670, norm(output): 0.3164, norm(x): 0.2752, norm(y): 1.0083, norm:1.7212, tok/sec: 101931.50, flops:106.98, batch-reuse:1
@ 1698 train 5.2917 , allloss: 5.2946, dt: 1319.42ms, fracRes: 0.2114, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2732, norm(y): 1.0084, norm:1.4102, tok/sec: 99340.49, flops:104.26, batch-reuse:1
@ 1699 train 5.3190 , allloss: 5.3210, dt: 1342.11ms, fracRes: 0.2122, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2740, norm(y): 1.0084, norm:1.2747, tok/sec: 97661.50, flops:102.50, batch-reuse:1
@ 1700 train 5.3240 , allloss: 5.3260, dt: 1306.09ms, fracRes: 0.2096, norm(attn): 0.1621, norm(output): 0.3164, norm(x): 0.2732, norm(y): 1.0084, norm:1.3271, tok/sec: 100354.61, flops:105.32, batch-reuse:1
@ 1701 train 5.2879 , allloss: 5.2894, dt: 1336.14ms, fracRes: 0.2076, norm(attn): 0.1699, norm(output): 0.3164, norm(x): 0.2740, norm(y): 1.0084, norm:1.5096, tok/sec: 98097.72, flops:102.96, batch-reuse:1
@ 1702 train 5.3059 , allloss: 5.3076, dt: 1346.31ms, fracRes: 0.2110, norm(attn): 0.1650, norm(output): 0.3164, norm(x): 0.2731, norm(y): 1.0085, norm:1.5950, tok/sec: 97356.26, flops:102.18, batch-reuse:1
@ 1703 train 5.3096 , allloss: 5.3121, dt: 1345.51ms, fracRes: 0.2118, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2728, norm(y): 1.0085, norm:1.5105, tok/sec: 97414.48, flops:102.24, batch-reuse:1
@ 1704 train 5.2761 , allloss: 5.2773, dt: 1312.80ms, fracRes: 0.2086, norm(attn): 0.1660, norm(output): 0.3164, norm(x): 0.2743, norm(y): 1.0084, norm:1.3499, tok/sec: 99841.84, flops:104.79, batch-reuse:1
@ 1705 train 5.3032 , allloss: 5.3043, dt: 1331.91ms, fracRes: 0.2081, norm(attn): 0.1689, norm(output): 0.3203, norm(x): 0.2753, norm(y): 1.0085, norm:1.9415, tok/sec: 98409.36, flops:103.28, batch-reuse:1
@ 1706 train 5.2652 , allloss: 5.2674, dt: 1335.20ms, fracRes: 0.2071, norm(attn): 0.1689, norm(output): 0.3164, norm(x): 0.2754, norm(y): 1.0084, norm:1.7231, tok/sec: 98166.28, flops:103.03, batch-reuse:1
@ 1707 train 5.2615 , allloss: 5.2638, dt: 1335.58ms, fracRes: 0.2069, norm(attn): 0.1680, norm(output): 0.3203, norm(x): 0.2765, norm(y): 1.0084, norm:1.5388, tok/sec: 98138.66, flops:103.00, batch-reuse:1
@ 1708 train 5.2426 , allloss: 5.2444, dt: 1345.39ms, fracRes: 0.2065, norm(attn): 0.1680, norm(output): 0.3184, norm(x): 0.2762, norm(y): 1.0084, norm:1.7948, tok/sec: 97422.96, flops:102.25, batch-reuse:1
@ 1709 train 5.3335 , allloss: 5.3350, dt: 1307.89ms, fracRes: 0.2010, norm(attn): 0.1680, norm(output): 0.3223, norm(x): 0.2782, norm(y): 1.0083, norm:1.6939, tok/sec: 100216.49, flops:105.18, batch-reuse:1
@ 1710 train 5.2622 , allloss: 5.2637, dt: 1286.23ms, fracRes: 0.2058, norm(attn): 0.1650, norm(output): 0.3184, norm(x): 0.2764, norm(y): 1.0085, norm:1.5842, tok/sec: 101904.06, flops:106.95, batch-reuse:1
@ 1711 train 5.2791 , allloss: 5.2806, dt: 1289.35ms, fracRes: 0.2095, norm(attn): 0.1641, norm(output): 0.3164, norm(x): 0.2756, norm(y): 1.0085, norm:1.6547, tok/sec: 101657.06, flops:106.69, batch-reuse:1
@ 1712 train 5.3846 , allloss: 5.3861, dt: 1311.46ms, fracRes: 0.2076, norm(attn): 0.1660, norm(output): 0.3184, norm(x): 0.2762, norm(y): 1.0084, norm:1.2371, tok/sec: 99943.79, flops:104.89, batch-reuse:1
@ 1713 train 5.1271 , allloss: 5.1279, dt: 1298.54ms, fracRes: 0.2035, norm(attn): 0.1689, norm(output): 0.3203, norm(x): 0.2782, norm(y): 1.0084, norm:1.6187, tok/sec: 100937.60, flops:105.94, batch-reuse:1
@ 1714 train 5.2865 , allloss: 5.2873, dt: 1290.05ms, fracRes: 0.2091, norm(attn): 0.1689, norm(output): 0.3184, norm(x): 0.2764, norm(y): 1.0085, norm:1.8005, tok/sec: 101602.58, flops:106.63, batch-reuse:1
@ 1715 train 5.2734 , allloss: 5.2751, dt: 1288.57ms, fracRes: 0.2097, norm(attn): 0.1699, norm(output): 0.3203, norm(x): 0.2770, norm(y): 1.0084, norm:1.3861, tok/sec: 101719.23, flops:106.76, batch-reuse:1
@ 1716 train 5.3253 , allloss: 5.3267, dt: 1316.73ms, fracRes: 0.2106, norm(attn): 0.1650, norm(output): 0.3184, norm(x): 0.2750, norm(y): 1.0085, norm:1.4960, tok/sec: 99543.89, flops:104.47, batch-reuse:1
@ 1717 train 5.4872 , allloss: 5.4906, dt: 1298.58ms, fracRes: 0.2101, norm(attn): 0.1670, norm(output): 0.3203, norm(x): 0.2760, norm(y): 1.0085, norm:1.8955, tok/sec: 100934.89, flops:105.93, batch-reuse:1
@ 1718 train 5.3066 , allloss: 5.3084, dt: 1301.42ms, fracRes: 0.2162, norm(attn): 0.1709, norm(output): 0.3223, norm(x): 0.2738, norm(y): 1.0086, norm:2.2682, tok/sec: 100714.75, flops:105.70, batch-reuse:1
@ 1719 train 5.3940 , allloss: 5.3955, dt: 1299.07ms, fracRes: 0.2096, norm(attn): 0.1621, norm(output): 0.3223, norm(x): 0.2765, norm(y): 1.0084, norm:2.0185, tok/sec: 100896.64, flops:105.89, batch-reuse:1
@ 1720 train 5.3174 , allloss: 5.3185, dt: 1335.60ms, fracRes: 0.2100, norm(attn): 0.1689, norm(output): 0.3223, norm(x): 0.2767, norm(y): 1.0085, norm:2.4583, tok/sec: 98137.38, flops:103.00, batch-reuse:1
@ 1721 train 5.3262 , allloss: 5.3283, dt: 1298.21ms, fracRes: 0.2116, norm(attn): 0.1709, norm(output): 0.3203, norm(x): 0.2759, norm(y): 1.0085, norm:1.5323, tok/sec: 100963.99, flops:105.96, batch-reuse:1
@ 1722 train 5.4275 , allloss: 5.4288, dt: 1306.70ms, fracRes: 0.2161, norm(attn): 0.1689, norm(output): 0.3223, norm(x): 0.2749, norm(y): 1.0085, norm:2.1376, tok/sec: 100307.79, flops:105.27, batch-reuse:1
@ 1723 train 5.3129 , allloss: 5.3150, dt: 1329.68ms, fracRes: 0.2182, norm(attn): 0.1680, norm(output): 0.3203, norm(x): 0.2742, norm(y): 1.0086, norm:1.6853, tok/sec: 98573.83, flops:103.46, batch-reuse:1
@ 1724 train 5.2443 , allloss: 5.2478, dt: 1300.66ms, fracRes: 0.2116, norm(attn): 0.1689, norm(output): 0.3223, norm(x): 0.2768, norm(y): 1.0084, norm:1.6566, tok/sec: 100773.39, flops:105.76, batch-reuse:1
@ 1725 train 5.2848 , allloss: 5.2866, dt: 1295.24ms, fracRes: 0.2106, norm(attn): 0.1680, norm(output): 0.3203, norm(x): 0.2763, norm(y): 1.0085, norm:1.6543, tok/sec: 101195.10, flops:106.21, batch-reuse:1
@ 1726 train 5.2663 , allloss: 5.2679, dt: 1281.52ms, fracRes: 0.2084, norm(attn): 0.1689, norm(output): 0.3223, norm(x): 0.2783, norm(y): 1.0084, norm:1.4643, tok/sec: 102278.78, flops:107.34, batch-reuse:1
@ 1727 train 5.2226 , allloss: 5.2235, dt: 1318.96ms, fracRes: 0.2132, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2775, norm(y): 1.0086, norm:1.6644, tok/sec: 99375.13, flops:104.30, batch-reuse:1
@ 1728 train 5.3321 , allloss: 5.3336, dt: 1283.29ms, fracRes: 0.2112, norm(attn): 0.1709, norm(output): 0.3223, norm(x): 0.2783, norm(y): 1.0085, norm:1.3685, tok/sec: 102137.60, flops:107.20, batch-reuse:1
@ 1729 train 5.4430 , allloss: 5.4451, dt: 1313.02ms, fracRes: 0.2138, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2763, norm(y): 1.0086, norm:1.6829, tok/sec: 99824.81, flops:104.77, batch-reuse:1
@ 1730 train 5.3344 , allloss: 5.3362, dt: 1310.00ms, fracRes: 0.2117, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2782, norm(y): 1.0085, norm:1.5469, tok/sec: 100054.64, flops:105.01, batch-reuse:1
@ 1731 train 5.2764 , allloss: 5.2776, dt: 1335.23ms, fracRes: 0.2125, norm(attn): 0.1670, norm(output): 0.3223, norm(x): 0.2783, norm(y): 1.0085, norm:1.5978, tok/sec: 98164.28, flops:103.03, batch-reuse:1
@ 1732 train 5.2474 , allloss: 5.2485, dt: 1335.11ms, fracRes: 0.2087, norm(attn): 0.1709, norm(output): 0.3223, norm(x): 0.2806, norm(y): 1.0084, norm:1.4372, tok/sec: 98173.12, flops:103.03, batch-reuse:1
@ 1733 train 5.2474 , allloss: 5.2487, dt: 1336.13ms, fracRes: 0.2119, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2787, norm(y): 1.0085, norm:1.3663, tok/sec: 98098.33, flops:102.96, batch-reuse:1
@ 1734 train 5.6076 , allloss: 5.6090, dt: 1338.16ms, fracRes: 0.2121, norm(attn): 0.1660, norm(output): 0.3223, norm(x): 0.2784, norm(y): 1.0085, norm:1.6015, tok/sec: 97949.70, flops:102.80, batch-reuse:1
@ 1735 train 5.2680 , allloss: 5.2700, dt: 1338.07ms, fracRes: 0.2116, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2795, norm(y): 1.0084, norm:1.7129, tok/sec: 97955.74, flops:102.81, batch-reuse:1
@ 1736 train 5.2642 , allloss: 5.2676, dt: 1325.84ms, fracRes: 0.2171, norm(attn): 0.1670, norm(output): 0.3223, norm(x): 0.2770, norm(y): 1.0086, norm:1.9113, tok/sec: 98859.25, flops:103.75, batch-reuse:1
@ 1737 train 5.2111 , allloss: 5.2123, dt: 1327.58ms, fracRes: 0.2143, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2779, norm(y): 1.0085, norm:1.7355, tok/sec: 98729.93, flops:103.62, batch-reuse:1
@ 1738 train 5.1767 , allloss: 5.1782, dt: 1313.65ms, fracRes: 0.2152, norm(attn): 0.1621, norm(output): 0.3223, norm(x): 0.2777, norm(y): 1.0086, norm:1.3534, tok/sec: 99776.77, flops:104.72, batch-reuse:1
@ 1739 train 5.2695 , allloss: 5.2709, dt: 1341.69ms, fracRes: 0.2119, norm(attn): 0.1650, norm(output): 0.3242, norm(x): 0.2788, norm(y): 1.0085, norm:1.7581, tok/sec: 97691.66, flops:102.53, batch-reuse:1
@ 1740 train 5.1762 , allloss: 5.1774, dt: 1305.83ms, fracRes: 0.2084, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2802, norm(y): 1.0085, norm:1.4045, tok/sec: 100374.82, flops:105.35, batch-reuse:1
@ 1741 train 5.2546 , allloss: 5.2558, dt: 1291.87ms, fracRes: 0.2143, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2787, norm(y): 1.0086, norm:1.4261, tok/sec: 101458.84, flops:106.48, batch-reuse:1
@ 1742 train 5.2336 , allloss: 5.2356, dt: 1291.69ms, fracRes: 0.2170, norm(attn): 0.1680, norm(output): 0.3223, norm(x): 0.2777, norm(y): 1.0086, norm:1.3892, tok/sec: 101473.57, flops:106.50, batch-reuse:1
@ 1743 train 5.3160 , allloss: 5.3178, dt: 1311.65ms, fracRes: 0.2136, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2796, norm(y): 1.0085, norm:1.3354, tok/sec: 99929.09, flops:104.88, batch-reuse:1
@ 1744 train 5.1877 , allloss: 5.1888, dt: 1323.63ms, fracRes: 0.2162, norm(attn): 0.1621, norm(output): 0.3242, norm(x): 0.2784, norm(y): 1.0087, norm:1.8293, tok/sec: 99024.29, flops:103.93, batch-reuse:1
@ 1745 train 5.1844 , allloss: 5.1856, dt: 1294.64ms, fracRes: 0.2149, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2787, norm(y): 1.0086, norm:1.5144, tok/sec: 101242.21, flops:106.26, batch-reuse:1
@ 1746 train 5.2869 , allloss: 5.2890, dt: 1323.19ms, fracRes: 0.2108, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2801, norm(y): 1.0085, norm:1.6160, tok/sec: 99057.35, flops:103.96, batch-reuse:1
@ 1747 train 5.1607 , allloss: 5.1630, dt: 1339.27ms, fracRes: 0.2130, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2791, norm(y): 1.0086, norm:1.7288, tok/sec: 97868.11, flops:102.71, batch-reuse:1
@ 1748 train 5.1902 , allloss: 5.1922, dt: 1339.93ms, fracRes: 0.2111, norm(attn): 0.1719, norm(output): 0.3242, norm(x): 0.2809, norm(y): 1.0085, norm:1.4942, tok/sec: 97820.14, flops:102.66, batch-reuse:1
@ 1749 train 5.2960 , allloss: 5.2972, dt: 1330.38ms, fracRes: 0.2192, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2775, norm(y): 1.0087, norm:1.4291, tok/sec: 98522.04, flops:103.40, batch-reuse:1
@ 1750 train 5.2795 , allloss: 5.2806, dt: 1333.98ms, fracRes: 0.2133, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2802, norm(y): 1.0086, norm:1.7387, tok/sec: 98256.48, flops:103.12, batch-reuse:1
@ 1751 train 5.4978 , allloss: 5.4992, dt: 1331.00ms, fracRes: 0.2158, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2793, norm(y): 1.0086, norm:1.7372, tok/sec: 98476.70, flops:103.35, batch-reuse:1
@ 1752 train 5.4811 , allloss: 5.4828, dt: 1295.15ms, fracRes: 0.2208, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2785, norm(y): 1.0086, norm:1.4740, tok/sec: 101202.49, flops:106.21, batch-reuse:1
@ 1753 train 5.2840 , allloss: 5.2854, dt: 1317.32ms, fracRes: 0.2219, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2789, norm(y): 1.0086, norm:1.4988, tok/sec: 99498.67, flops:104.43, batch-reuse:1
@ 1754 train 5.2453 , allloss: 5.2480, dt: 1319.30ms, fracRes: 0.2238, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2787, norm(y): 1.0086, norm:1.4496, tok/sec: 99349.59, flops:104.27, batch-reuse:1
@ 1755 train 5.2572 , allloss: 5.2591, dt: 1295.77ms, fracRes: 0.2252, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2778, norm(y): 1.0087, norm:1.4551, tok/sec: 101153.44, flops:106.16, batch-reuse:1
@ 1756 train 5.2521 , allloss: 5.2534, dt: 1282.79ms, fracRes: 0.2208, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2790, norm(y): 1.0086, norm:1.4647, tok/sec: 102177.31, flops:107.24, batch-reuse:1
@ 1757 train 5.3075 , allloss: 5.3088, dt: 1301.83ms, fracRes: 0.2166, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2797, norm(y): 1.0086, norm:1.3233, tok/sec: 100683.03, flops:105.67, batch-reuse:1
@ 1758 train 5.3349 , allloss: 5.3358, dt: 1291.03ms, fracRes: 0.2179, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2793, norm(y): 1.0087, norm:1.5414, tok/sec: 101525.31, flops:106.55, batch-reuse:1
@ 1759 train 5.2881 , allloss: 5.2901, dt: 1311.79ms, fracRes: 0.2179, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2802, norm(y): 1.0086, norm:1.6349, tok/sec: 99918.58, flops:104.87, batch-reuse:1
@ 1760 train 5.1808 , allloss: 5.1827, dt: 1336.27ms, fracRes: 0.2164, norm(attn): 0.1719, norm(output): 0.3242, norm(x): 0.2806, norm(y): 1.0086, norm:1.6246, tok/sec: 98087.73, flops:102.94, batch-reuse:1
@ 1761 train 5.1316 , allloss: 5.1334, dt: 1323.89ms, fracRes: 0.2143, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2815, norm(y): 1.0086, norm:1.4142, tok/sec: 99005.53, flops:103.91, batch-reuse:1
@ 1762 train 5.0160 , allloss: 5.0176, dt: 1312.99ms, fracRes: 0.2166, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2811, norm(y): 1.0087, norm:1.5482, tok/sec: 99827.48, flops:104.77, batch-reuse:1
@ 1763 train 5.1626 , allloss: 5.1640, dt: 1329.87ms, fracRes: 0.2163, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2824, norm(y): 1.0086, norm:1.4914, tok/sec: 98559.99, flops:103.44, batch-reuse:1
@ 1764 train 5.1899 , allloss: 5.1912, dt: 1335.11ms, fracRes: 0.2169, norm(attn): 0.1699, norm(output): 0.3262, norm(x): 0.2814, norm(y): 1.0087, norm:1.5527, tok/sec: 98173.15, flops:103.03, batch-reuse:1
@ 1765 train 5.1915 , allloss: 5.1928, dt: 1292.21ms, fracRes: 0.2200, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2795, norm(y): 1.0087, norm:1.5066, tok/sec: 101432.59, flops:106.46, batch-reuse:1
@ 1766 train 5.1178 , allloss: 5.1196, dt: 1311.97ms, fracRes: 0.2180, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2811, norm(y): 1.0086, norm:1.4182, tok/sec: 99904.89, flops:104.85, batch-reuse:1
@ 1767 train 5.1878 , allloss: 5.1898, dt: 1290.77ms, fracRes: 0.2191, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2809, norm(y): 1.0086, norm:1.4076, tok/sec: 101545.81, flops:106.57, batch-reuse:1
@ 1768 train 5.2583 , allloss: 5.2597, dt: 1303.68ms, fracRes: 0.2231, norm(attn): 0.1660, norm(output): 0.3242, norm(x): 0.2797, norm(y): 1.0087, norm:1.3811, tok/sec: 100539.65, flops:105.52, batch-reuse:1
@ 1769 train 5.1427 , allloss: 5.1442, dt: 1343.64ms, fracRes: 0.2204, norm(attn): 0.1699, norm(output): 0.3281, norm(x): 0.2808, norm(y): 1.0086, norm:1.8404, tok/sec: 97549.79, flops:102.38, batch-reuse:1
@ 1770 train 5.1308 , allloss: 5.1321, dt: 1326.38ms, fracRes: 0.2237, norm(attn): 0.1680, norm(output): 0.3281, norm(x): 0.2800, norm(y): 1.0087, norm:1.5686, tok/sec: 98819.24, flops:103.71, batch-reuse:1
@ 1771 train 5.1245 , allloss: 5.1259, dt: 1325.06ms, fracRes: 0.2205, norm(attn): 0.1709, norm(output): 0.3281, norm(x): 0.2805, norm(y): 1.0087, norm:1.4163, tok/sec: 98917.74, flops:103.82, batch-reuse:1
@ 1772 train 5.1598 , allloss: 5.1613, dt: 1301.07ms, fracRes: 0.2233, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2796, norm(y): 1.0088, norm:1.6465, tok/sec: 100741.48, flops:105.73, batch-reuse:1
@ 1773 train 5.0460 , allloss: 5.0476, dt: 1320.85ms, fracRes: 0.2203, norm(attn): 0.1729, norm(output): 0.3281, norm(x): 0.2809, norm(y): 1.0087, norm:1.3826, tok/sec: 99233.10, flops:104.15, batch-reuse:1
@ 1774 train 5.2190 , allloss: 5.2198, dt: 1297.94ms, fracRes: 0.2254, norm(attn): 0.1670, norm(output): 0.3242, norm(x): 0.2793, norm(y): 1.0089, norm:1.6618, tok/sec: 100984.97, flops:105.99, batch-reuse:1
@ 1775 train 5.1490 , allloss: 5.1498, dt: 1312.85ms, fracRes: 0.2251, norm(attn): 0.1680, norm(output): 0.3242, norm(x): 0.2797, norm(y): 1.0089, norm:1.7017, tok/sec: 99837.52, flops:104.78, batch-reuse:1
@ 1776 train 5.1046 , allloss: 5.1055, dt: 1323.36ms, fracRes: 0.2206, norm(attn): 0.1709, norm(output): 0.3281, norm(x): 0.2815, norm(y): 1.0087, norm:1.2013, tok/sec: 99044.93, flops:103.95, batch-reuse:1
@ 1777 train 5.0868 , allloss: 5.0877, dt: 1340.33ms, fracRes: 0.2261, norm(attn): 0.1709, norm(output): 0.3242, norm(x): 0.2795, norm(y): 1.0088, norm:1.7299, tok/sec: 97790.92, flops:102.63, batch-reuse:1
@ 1778 train 5.4252 , allloss: 5.4266, dt: 1322.57ms, fracRes: 0.2246, norm(attn): 0.1719, norm(output): 0.3281, norm(x): 0.2817, norm(y): 1.0086, norm:1.5911, tok/sec: 99104.39, flops:104.01, batch-reuse:1
@ 1779 train 5.0956 , allloss: 5.0971, dt: 1315.96ms, fracRes: 0.2268, norm(attn): 0.1689, norm(output): 0.3281, norm(x): 0.2803, norm(y): 1.0088, norm:1.7320, tok/sec: 99601.82, flops:104.53, batch-reuse:1
@ 1780 train 5.1778 , allloss: 5.1792, dt: 1330.40ms, fracRes: 0.2262, norm(attn): 0.1699, norm(output): 0.3242, norm(x): 0.2809, norm(y): 1.0088, norm:1.6049, tok/sec: 98520.55, flops:103.40, batch-reuse:1
@ 1781 train 5.1855 , allloss: 5.1876, dt: 1311.68ms, fracRes: 0.2238, norm(attn): 0.1689, norm(output): 0.3242, norm(x): 0.2805, norm(y): 1.0088, norm:1.4315, tok/sec: 99926.97, flops:104.88, batch-reuse:1
@ 1782 train 5.1990 , allloss: 5.2004, dt: 1291.64ms, fracRes: 0.2232, norm(attn): 0.1689, norm(output): 0.3281, norm(x): 0.2805, norm(y): 1.0088, norm:1.5230, tok/sec: 101477.19, flops:106.50, batch-reuse:1
@ 1783 train 5.1440 , allloss: 5.1453, dt: 1318.54ms, fracRes: 0.2219, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2815, norm(y): 1.0087, norm:1.3493, tok/sec: 99407.25, flops:104.33, batch-reuse:1
@ 1784 train 5.1210 , allloss: 5.1226, dt: 1295.62ms, fracRes: 0.2224, norm(attn): 0.1719, norm(output): 0.3262, norm(x): 0.2820, norm(y): 1.0087, norm:1.6891, tok/sec: 101165.13, flops:106.17, batch-reuse:1
@ 1785 train 5.1555 , allloss: 5.1572, dt: 1323.82ms, fracRes: 0.2190, norm(attn): 0.1738, norm(output): 0.3301, norm(x): 0.2831, norm(y): 1.0086, norm:1.5399, tok/sec: 99010.27, flops:103.91, batch-reuse:1
@ 1786 train 5.1971 , allloss: 5.1982, dt: 1347.05ms, fracRes: 0.2314, norm(attn): 0.1670, norm(output): 0.3281, norm(x): 0.2779, norm(y): 1.0090, norm:1.5241, tok/sec: 97302.93, flops:102.12, batch-reuse:1
@ 1787 train 5.1640 , allloss: 5.1657, dt: 1315.26ms, fracRes: 0.2259, norm(attn): 0.1680, norm(output): 0.3301, norm(x): 0.2813, norm(y): 1.0089, norm:1.5619, tok/sec: 99655.19, flops:104.59, batch-reuse:1
@ 1788 train 5.1868 , allloss: 5.1878, dt: 1294.12ms, fracRes: 0.2219, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2829, norm(y): 1.0088, norm:1.5788, tok/sec: 101282.78, flops:106.30, batch-reuse:1
@ 1789 train 5.1961 , allloss: 5.1969, dt: 1303.84ms, fracRes: 0.2207, norm(attn): 0.1729, norm(output): 0.3301, norm(x): 0.2818, norm(y): 1.0087, norm:1.4119, tok/sec: 100527.88, flops:105.51, batch-reuse:1
@ 1790 train 5.2580 , allloss: 5.2595, dt: 1297.45ms, fracRes: 0.2243, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2815, norm(y): 1.0087, norm:1.6317, tok/sec: 101022.44, flops:106.02, batch-reuse:1
@ 1791 train 5.1848 , allloss: 5.1872, dt: 1299.38ms, fracRes: 0.2248, norm(attn): 0.1719, norm(output): 0.3301, norm(x): 0.2820, norm(y): 1.0087, norm:1.4864, tok/sec: 100872.89, flops:105.87, batch-reuse:1
@ 1792 train 5.2379 , allloss: 5.2394, dt: 1309.72ms, fracRes: 0.2285, norm(attn): 0.1689, norm(output): 0.3281, norm(x): 0.2810, norm(y): 1.0088, norm:1.3166, tok/sec: 100076.64, flops:105.03, batch-reuse:1
@ 1793 train 5.1952 , allloss: 5.1966, dt: 1333.85ms, fracRes: 0.2269, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2823, norm(y): 1.0087, norm:1.5658, tok/sec: 98266.05, flops:103.13, batch-reuse:1
@ 1794 train 5.1954 , allloss: 5.1965, dt: 1318.96ms, fracRes: 0.2284, norm(attn): 0.1748, norm(output): 0.3320, norm(x): 0.2813, norm(y): 1.0088, norm:1.2894, tok/sec: 99374.91, flops:104.30, batch-reuse:1
@ 1795 train 5.2039 , allloss: 5.2058, dt: 1293.47ms, fracRes: 0.2256, norm(attn): 0.1719, norm(output): 0.3301, norm(x): 0.2821, norm(y): 1.0088, norm:1.4867, tok/sec: 101333.74, flops:106.35, batch-reuse:1
@ 1796 train 5.0964 , allloss: 5.0975, dt: 1314.58ms, fracRes: 0.2251, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2823, norm(y): 1.0089, norm:1.4232, tok/sec: 99706.17, flops:104.64, batch-reuse:1
@ 1797 train 5.1664 , allloss: 5.1672, dt: 1338.52ms, fracRes: 0.2236, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2835, norm(y): 1.0089, norm:1.5766, tok/sec: 97923.32, flops:102.77, batch-reuse:1
@ 1798 train 5.1366 , allloss: 5.1375, dt: 1330.06ms, fracRes: 0.2241, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2831, norm(y): 1.0088, norm:1.4504, tok/sec: 98545.95, flops:103.43, batch-reuse:1
@ 1799 train 5.1863 , allloss: 5.1873, dt: 1310.13ms, fracRes: 0.2246, norm(attn): 0.1729, norm(output): 0.3320, norm(x): 0.2835, norm(y): 1.0088, norm:1.3075, tok/sec: 100045.22, flops:105.00, batch-reuse:1
@ 1800 train 5.1133 , allloss: 5.1154, dt: 1327.00ms, fracRes: 0.2270, norm(attn): 0.1689, norm(output): 0.3320, norm(x): 0.2818, norm(y): 1.0089, norm:1.4982, tok/sec: 98772.81, flops:103.66, batch-reuse:1
@ 1801 train 5.1053 , allloss: 5.1066, dt: 1279.33ms, fracRes: 0.2246, norm(attn): 0.1719, norm(output): 0.3262, norm(x): 0.2828, norm(y): 1.0088, norm:1.4051, tok/sec: 102453.80, flops:107.53, batch-reuse:1
@ 1802 train 5.2151 , allloss: 5.2168, dt: 1316.20ms, fracRes: 0.2222, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2836, norm(y): 1.0088, norm:1.4166, tok/sec: 99583.52, flops:104.51, batch-reuse:1
@ 1803 train 5.1746 , allloss: 5.1758, dt: 1351.26ms, fracRes: 0.2232, norm(attn): 0.1729, norm(output): 0.3320, norm(x): 0.2846, norm(y): 1.0087, norm:1.6042, tok/sec: 96999.77, flops:101.80, batch-reuse:1
@ 1804 train 5.1262 , allloss: 5.1271, dt: 1331.46ms, fracRes: 0.2290, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2818, norm(y): 1.0089, norm:1.4845, tok/sec: 98442.40, flops:103.32, batch-reuse:1
@ 1805 train 5.2107 , allloss: 5.2115, dt: 1315.24ms, fracRes: 0.2294, norm(attn): 0.1680, norm(output): 0.3301, norm(x): 0.2833, norm(y): 1.0089, norm:1.7183, tok/sec: 99656.24, flops:104.59, batch-reuse:1
@ 1806 train 5.1601 , allloss: 5.1612, dt: 1343.74ms, fracRes: 0.2256, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2859, norm(y): 1.0088, norm:1.5657, tok/sec: 97542.59, flops:102.37, batch-reuse:1
@ 1807 train 5.2101 , allloss: 5.2111, dt: 1320.81ms, fracRes: 0.2330, norm(attn): 0.1689, norm(output): 0.3301, norm(x): 0.2820, norm(y): 1.0089, norm:1.3725, tok/sec: 99235.91, flops:104.15, batch-reuse:1
@ 1808 train 5.1275 , allloss: 5.1291, dt: 1297.37ms, fracRes: 0.2367, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2828, norm(y): 1.0089, norm:1.7406, tok/sec: 101028.69, flops:106.03, batch-reuse:1
@ 1809 train 5.0828 , allloss: 5.0839, dt: 1321.79ms, fracRes: 0.2345, norm(attn): 0.1709, norm(output): 0.3320, norm(x): 0.2826, norm(y): 1.0089, norm:1.5795, tok/sec: 99162.86, flops:104.07, batch-reuse:1
@ 1810 train 5.0422 , allloss: 5.0444, dt: 1324.09ms, fracRes: 0.2296, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2837, norm(y): 1.0089, norm:2.1588, tok/sec: 98990.52, flops:103.89, batch-reuse:1
@ 1811 train 5.0941 , allloss: 5.0970, dt: 1322.36ms, fracRes: 0.2246, norm(attn): 0.1738, norm(output): 0.3340, norm(x): 0.2856, norm(y): 1.0088, norm:1.7280, tok/sec: 99119.81, flops:104.03, batch-reuse:1
@ 1812 train 5.1173 , allloss: 5.1204, dt: 1339.86ms, fracRes: 0.2272, norm(attn): 0.1680, norm(output): 0.3301, norm(x): 0.2834, norm(y): 1.0089, norm:1.6754, tok/sec: 97824.78, flops:102.67, batch-reuse:1
@ 1813 train 5.0805 , allloss: 5.0825, dt: 1281.07ms, fracRes: 0.2294, norm(attn): 0.1699, norm(output): 0.3320, norm(x): 0.2822, norm(y): 1.0089, norm:1.5683, tok/sec: 102314.62, flops:107.38, batch-reuse:1
@ 1814 train 5.1465 , allloss: 5.1488, dt: 1297.41ms, fracRes: 0.2280, norm(attn): 0.1709, norm(output): 0.3301, norm(x): 0.2824, norm(y): 1.0089, norm:1.4135, tok/sec: 101026.02, flops:106.03, batch-reuse:1
@ 1815 train 5.0762 , allloss: 5.0781, dt: 1301.55ms, fracRes: 0.2268, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2833, norm(y): 1.0089, norm:1.6315, tok/sec: 100704.18, flops:105.69, batch-reuse:1
@ 1816 train 5.0872 , allloss: 5.0886, dt: 1328.16ms, fracRes: 0.2283, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2834, norm(y): 1.0089, norm:1.5286, tok/sec: 98686.88, flops:103.57, batch-reuse:1
@ 1817 train 5.1056 , allloss: 5.1084, dt: 1314.65ms, fracRes: 0.2341, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2820, norm(y): 1.0089, norm:1.6207, tok/sec: 99701.44, flops:104.64, batch-reuse:1
@ 1818 train 5.0581 , allloss: 5.0602, dt: 1296.07ms, fracRes: 0.2322, norm(attn): 0.1719, norm(output): 0.3301, norm(x): 0.2837, norm(y): 1.0089, norm:1.4617, tok/sec: 101130.26, flops:106.14, batch-reuse:1
@ 1819 train 5.1689 , allloss: 5.1699, dt: 1310.80ms, fracRes: 0.2294, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2857, norm(y): 1.0088, norm:1.5464, tok/sec: 99993.76, flops:104.95, batch-reuse:1
@ 1820 train 5.0785 , allloss: 5.0795, dt: 1311.49ms, fracRes: 0.2303, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2847, norm(y): 1.0089, norm:1.5837, tok/sec: 99941.34, flops:104.89, batch-reuse:1
@ 1821 train 4.9901 , allloss: 4.9918, dt: 1284.14ms, fracRes: 0.2300, norm(attn): 0.1738, norm(output): 0.3320, norm(x): 0.2857, norm(y): 1.0088, norm:1.4455, tok/sec: 102070.24, flops:107.12, batch-reuse:1
@ 1822 train 4.9727 , allloss: 4.9747, dt: 1285.18ms, fracRes: 0.2363, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2825, norm(y): 1.0090, norm:1.4207, tok/sec: 101987.26, flops:107.04, batch-reuse:1
@ 1823 train 5.0216 , allloss: 5.0233, dt: 1293.39ms, fracRes: 0.2354, norm(attn): 0.1719, norm(output): 0.3320, norm(x): 0.2832, norm(y): 1.0090, norm:1.6337, tok/sec: 101340.13, flops:106.36, batch-reuse:1
@ 1824 train 5.0563 , allloss: 5.0586, dt: 1314.23ms, fracRes: 0.2349, norm(attn): 0.1729, norm(output): 0.3320, norm(x): 0.2836, norm(y): 1.0089, norm:1.3292, tok/sec: 99732.69, flops:104.67, batch-reuse:1
@ 1825 train 5.0944 , allloss: 5.0956, dt: 1291.05ms, fracRes: 0.2366, norm(attn): 0.1689, norm(output): 0.3320, norm(x): 0.2833, norm(y): 1.0090, norm:1.1998, tok/sec: 101523.76, flops:106.55, batch-reuse:1
@ 1826 train 5.0951 , allloss: 5.0959, dt: 1302.00ms, fracRes: 0.2323, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.2849, norm(y): 1.0089, norm:1.5584, tok/sec: 100669.99, flops:105.66, batch-reuse:1
@ 1827 train 5.1445 , allloss: 5.1462, dt: 1310.60ms, fracRes: 0.2333, norm(attn): 0.1758, norm(output): 0.3320, norm(x): 0.2840, norm(y): 1.0089, norm:1.6125, tok/sec: 100009.46, flops:104.96, batch-reuse:1
@ 1828 train 5.0707 , allloss: 5.0727, dt: 1320.52ms, fracRes: 0.2349, norm(attn): 0.1729, norm(output): 0.3320, norm(x): 0.2830, norm(y): 1.0090, norm:1.3999, tok/sec: 99258.04, flops:104.17, batch-reuse:1
@ 1829 train 5.1457 , allloss: 5.1477, dt: 1303.55ms, fracRes: 0.2289, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.2851, norm(y): 1.0089, norm:1.5056, tok/sec: 100550.11, flops:105.53, batch-reuse:1
@ 1830 train 4.9691 , allloss: 4.9703, dt: 1292.82ms, fracRes: 0.2292, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.2844, norm(y): 1.0089, norm:1.3790, tok/sec: 101384.61, flops:106.41, batch-reuse:1
@ 1831 train 5.0524 , allloss: 5.0540, dt: 1318.60ms, fracRes: 0.2275, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.2860, norm(y): 1.0089, norm:1.2661, tok/sec: 99402.19, flops:104.32, batch-reuse:1
@ 1832 train 5.0758 , allloss: 5.0780, dt: 1296.22ms, fracRes: 0.2351, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.2830, norm(y): 1.0090, norm:1.3227, tok/sec: 101118.56, flops:106.13, batch-reuse:1
@ 1833 train 5.1800 , allloss: 5.1809, dt: 1287.93ms, fracRes: 0.2363, norm(attn): 0.1729, norm(output): 0.3320, norm(x): 0.2834, norm(y): 1.0090, norm:1.5249, tok/sec: 101769.79, flops:106.81, batch-reuse:1
@ 1834 train 5.0808 , allloss: 5.0816, dt: 1320.50ms, fracRes: 0.2330, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.2849, norm(y): 1.0090, norm:1.5476, tok/sec: 99259.56, flops:104.17, batch-reuse:1
@ 1835 train 4.9985 , allloss: 4.9999, dt: 1303.63ms, fracRes: 0.2335, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2853, norm(y): 1.0090, norm:1.8128, tok/sec: 100544.06, flops:105.52, batch-reuse:1
@ 1836 train 5.1243 , allloss: 5.1266, dt: 1315.41ms, fracRes: 0.2323, norm(attn): 0.1738, norm(output): 0.3359, norm(x): 0.2860, norm(y): 1.0089, norm:1.4338, tok/sec: 99643.25, flops:104.58, batch-reuse:1
@ 1837 train 5.1795 , allloss: 5.1821, dt: 1334.94ms, fracRes: 0.2307, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2863, norm(y): 1.0089, norm:1.4590, tok/sec: 98185.50, flops:103.05, batch-reuse:1
@ 1838 train 5.0881 , allloss: 5.0898, dt: 1313.41ms, fracRes: 0.2329, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2859, norm(y): 1.0090, norm:1.4079, tok/sec: 99795.39, flops:104.74, batch-reuse:1
@ 1839 train 5.0265 , allloss: 5.0281, dt: 1324.49ms, fracRes: 0.2342, norm(attn): 0.1709, norm(output): 0.3379, norm(x): 0.2863, norm(y): 1.0091, norm:1.5107, tok/sec: 98960.19, flops:103.86, batch-reuse:1
@ 1840 train 5.0173 , allloss: 5.0187, dt: 1295.19ms, fracRes: 0.2354, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2859, norm(y): 1.0091, norm:1.4806, tok/sec: 101199.01, flops:106.21, batch-reuse:1
@ 1841 train 5.1158 , allloss: 5.1168, dt: 1313.56ms, fracRes: 0.2349, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2855, norm(y): 1.0090, norm:1.7512, tok/sec: 99784.16, flops:104.73, batch-reuse:1
@ 1842 train 5.0281 , allloss: 5.0312, dt: 1277.97ms, fracRes: 0.2366, norm(attn): 0.1738, norm(output): 0.3359, norm(x): 0.2864, norm(y): 1.0090, norm:1.3608, tok/sec: 102562.79, flops:107.64, batch-reuse:1
@ 1843 train 5.0559 , allloss: 5.0577, dt: 1313.38ms, fracRes: 0.2408, norm(attn): 0.1699, norm(output): 0.3379, norm(x): 0.2850, norm(y): 1.0091, norm:1.5523, tok/sec: 99797.60, flops:104.74, batch-reuse:1
@ 1844 train 5.0536 , allloss: 5.0546, dt: 1313.06ms, fracRes: 0.2357, norm(attn): 0.1699, norm(output): 0.3359, norm(x): 0.2868, norm(y): 1.0090, norm:1.5840, tok/sec: 99821.99, flops:104.77, batch-reuse:1
@ 1845 train 5.0250 , allloss: 5.0258, dt: 1310.20ms, fracRes: 0.2370, norm(attn): 0.1709, norm(output): 0.3340, norm(x): 0.2852, norm(y): 1.0091, norm:1.4085, tok/sec: 100039.53, flops:104.99, batch-reuse:1
@ 1846 train 5.0767 , allloss: 5.0782, dt: 1332.23ms, fracRes: 0.2352, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.2861, norm(y): 1.0090, norm:1.5071, tok/sec: 98385.64, flops:103.26, batch-reuse:1
@ 1847 train 5.0090 , allloss: 5.0103, dt: 1326.39ms, fracRes: 0.2383, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.2840, norm(y): 1.0091, norm:1.2964, tok/sec: 98818.92, flops:103.71, batch-reuse:1
@ 1848 train 4.8950 , allloss: 4.8966, dt: 1336.01ms, fracRes: 0.2341, norm(attn): 0.1729, norm(output): 0.3379, norm(x): 0.2881, norm(y): 1.0090, norm:1.6293, tok/sec: 98107.26, flops:102.97, batch-reuse:1
@ 1849 train 5.0825 , allloss: 5.0833, dt: 1338.53ms, fracRes: 0.2347, norm(attn): 0.1719, norm(output): 0.3398, norm(x): 0.2877, norm(y): 1.0091, norm:1.2875, tok/sec: 97922.40, flops:102.77, batch-reuse:1
@ 1850 train 4.9391 , allloss: 4.9401, dt: 1309.53ms, fracRes: 0.2376, norm(attn): 0.1709, norm(output): 0.3359, norm(x): 0.2860, norm(y): 1.0091, norm:1.4941, tok/sec: 100090.58, flops:105.05, batch-reuse:1
@ 1851 train 4.9204 , allloss: 4.9219, dt: 1282.25ms, fracRes: 0.2366, norm(attn): 0.1738, norm(output): 0.3340, norm(x): 0.2871, norm(y): 1.0091, norm:1.4901, tok/sec: 102220.30, flops:107.28, batch-reuse:1
@ 1852 train 5.0414 , allloss: 5.0429, dt: 1308.41ms, fracRes: 0.2338, norm(attn): 0.1738, norm(output): 0.3379, norm(x): 0.2886, norm(y): 1.0089, norm:1.4352, tok/sec: 100176.17, flops:105.14, batch-reuse:1
@ 1853 train 5.0364 , allloss: 5.0374, dt: 1310.43ms, fracRes: 0.2439, norm(attn): 0.1699, norm(output): 0.3340, norm(x): 0.2843, norm(y): 1.0092, norm:1.5050, tok/sec: 100021.89, flops:104.97, batch-reuse:1
@ 1854 train 5.1107 , allloss: 5.1116, dt: 1341.02ms, fracRes: 0.2352, norm(attn): 0.1719, norm(output): 0.3398, norm(x): 0.2873, norm(y): 1.0091, norm:1.6055, tok/sec: 97740.34, flops:102.58, batch-reuse:1
@ 1855 train 5.2083 , allloss: 5.2095, dt: 1305.25ms, fracRes: 0.2380, norm(attn): 0.1738, norm(output): 0.3398, norm(x): 0.2864, norm(y): 1.0092, norm:1.6670, tok/sec: 100419.21, flops:105.39, batch-reuse:1
@ 1856 train 5.0935 , allloss: 5.0945, dt: 1290.94ms, fracRes: 0.2383, norm(attn): 0.1719, norm(output): 0.3340, norm(x): 0.2856, norm(y): 1.0092, norm:1.2621, tok/sec: 101532.49, flops:106.56, batch-reuse:1
@ 1857 train 5.1199 , allloss: 5.1215, dt: 1315.75ms, fracRes: 0.2373, norm(attn): 0.1748, norm(output): 0.3379, norm(x): 0.2857, norm(y): 1.0091, norm:1.9154, tok/sec: 99617.61, flops:104.55, batch-reuse:1
@ 1858 train 5.2095 , allloss: 5.2112, dt: 1306.40ms, fracRes: 0.2386, norm(attn): 0.1729, norm(output): 0.3379, norm(x): 0.2847, norm(y): 1.0091, norm:1.8266, tok/sec: 100330.88, flops:105.30, batch-reuse:1
@ 1859 train 5.2360 , allloss: 5.2375, dt: 1315.39ms, fracRes: 0.2379, norm(attn): 0.1738, norm(output): 0.3398, norm(x): 0.2867, norm(y): 1.0091, norm:2.1054, tok/sec: 99644.89, flops:104.58, batch-reuse:1
@ 1860 train 5.2402 , allloss: 5.2433, dt: 1303.34ms, fracRes: 0.2374, norm(attn): 0.1748, norm(output): 0.3379, norm(x): 0.2861, norm(y): 1.0091, norm:1.8657, tok/sec: 100566.13, flops:105.55, batch-reuse:1
@ 1861 train 5.1550 , allloss: 5.1585, dt: 1294.62ms, fracRes: 0.2353, norm(attn): 0.1738, norm(output): 0.3398, norm(x): 0.2879, norm(y): 1.0090, norm:1.5672, tok/sec: 101243.40, flops:106.26, batch-reuse:1
@ 1862 train 5.1963 , allloss: 5.1979, dt: 1296.17ms, fracRes: 0.2377, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.2876, norm(y): 1.0091, norm:1.5248, tok/sec: 101122.85, flops:106.13, batch-reuse:1
@ 1863 train 5.2100 , allloss: 5.2110, dt: 1289.30ms, fracRes: 0.2382, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2886, norm(y): 1.0091, norm:1.4227, tok/sec: 101661.48, flops:106.70, batch-reuse:1
@ 1864 train 5.1608 , allloss: 5.1624, dt: 1304.51ms, fracRes: 0.2396, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.2886, norm(y): 1.0090, norm:1.4986, tok/sec: 100476.05, flops:105.45, batch-reuse:1
@ 1865 train 5.1366 , allloss: 5.1388, dt: 1296.74ms, fracRes: 0.2422, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.2875, norm(y): 1.0091, norm:1.3360, tok/sec: 101078.25, flops:106.08, batch-reuse:1
@ 1866 train 5.5507 , allloss: 5.5518, dt: 1300.78ms, fracRes: 0.2418, norm(attn): 0.1729, norm(output): 0.3359, norm(x): 0.2867, norm(y): 1.0092, norm:2.1064, tok/sec: 100764.17, flops:105.75, batch-reuse:1
@ 1867 train 5.1827 , allloss: 5.1836, dt: 1310.86ms, fracRes: 0.2372, norm(attn): 0.1748, norm(output): 0.3398, norm(x): 0.2875, norm(y): 1.0091, norm:1.5868, tok/sec: 99989.47, flops:104.94, batch-reuse:1
@ 1868 train 5.2603 , allloss: 5.2618, dt: 1283.60ms, fracRes: 0.2424, norm(attn): 0.1709, norm(output): 0.3398, norm(x): 0.2874, norm(y): 1.0092, norm:1.6486, tok/sec: 102112.99, flops:107.17, batch-reuse:1
@ 1869 train 5.1739 , allloss: 5.1757, dt: 1340.68ms, fracRes: 0.2413, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2879, norm(y): 1.0092, norm:1.3910, tok/sec: 97765.32, flops:102.61, batch-reuse:1
@ 1870 train 5.1590 , allloss: 5.1615, dt: 1333.34ms, fracRes: 0.2395, norm(attn): 0.1758, norm(output): 0.3398, norm(x): 0.2890, norm(y): 1.0090, norm:1.6948, tok/sec: 98303.85, flops:103.17, batch-reuse:1
@ 1871 train 5.1597 , allloss: 5.1612, dt: 1316.73ms, fracRes: 0.2458, norm(attn): 0.1719, norm(output): 0.3359, norm(x): 0.2854, norm(y): 1.0093, norm:1.7033, tok/sec: 99543.22, flops:104.47, batch-reuse:1
@ 1872 train 5.2614 , allloss: 5.2634, dt: 1273.48ms, fracRes: 0.2407, norm(attn): 0.1738, norm(output): 0.3398, norm(x): 0.2862, norm(y): 1.0092, norm:1.6211, tok/sec: 102923.89, flops:108.02, batch-reuse:1
@ 1873 train 5.2694 , allloss: 5.2704, dt: 1306.18ms, fracRes: 0.2386, norm(attn): 0.1748, norm(output): 0.3398, norm(x): 0.2867, norm(y): 1.0092, norm:1.3380, tok/sec: 100347.69, flops:105.32, batch-reuse:1
@ 1874 train 5.1085 , allloss: 5.1096, dt: 1310.26ms, fracRes: 0.2454, norm(attn): 0.1729, norm(output): 0.3340, norm(x): 0.2843, norm(y): 1.0093, norm:1.2782, tok/sec: 100034.90, flops:104.99, batch-reuse:1
@ 1875 train 5.1375 , allloss: 5.1392, dt: 1294.38ms, fracRes: 0.2454, norm(attn): 0.1729, norm(output): 0.3398, norm(x): 0.2855, norm(y): 1.0092, norm:1.3509, tok/sec: 101262.20, flops:106.28, batch-reuse:1
@ 1876 train 5.2582 , allloss: 5.2600, dt: 1323.06ms, fracRes: 0.2412, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2882, norm(y): 1.0091, norm:1.4979, tok/sec: 99067.47, flops:103.97, batch-reuse:1
@ 1877 train 5.2285 , allloss: 5.2298, dt: 1328.39ms, fracRes: 0.2432, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2871, norm(y): 1.0092, norm:1.8231, tok/sec: 98669.74, flops:103.56, batch-reuse:1
@ 1878 train 5.1801 , allloss: 5.1814, dt: 1291.05ms, fracRes: 0.2426, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2876, norm(y): 1.0092, norm:1.3668, tok/sec: 101523.70, flops:106.55, batch-reuse:1
@ 1879 train 5.2053 , allloss: 5.2084, dt: 1311.35ms, fracRes: 0.2406, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2896, norm(y): 1.0091, norm:1.6530, tok/sec: 99951.79, flops:104.90, batch-reuse:1
@ 1880 train 5.2094 , allloss: 5.2140, dt: 1280.78ms, fracRes: 0.2388, norm(attn): 0.1807, norm(output): 0.3418, norm(x): 0.2911, norm(y): 1.0090, norm:1.7079, tok/sec: 102337.80, flops:107.41, batch-reuse:1
@ 1881 train 5.1444 , allloss: 5.1455, dt: 1299.95ms, fracRes: 0.2514, norm(attn): 0.1719, norm(output): 0.3379, norm(x): 0.2858, norm(y): 1.0093, norm:1.7256, tok/sec: 100828.59, flops:105.82, batch-reuse:1
@ 1882 train 5.2254 , allloss: 5.2264, dt: 1290.46ms, fracRes: 0.2544, norm(attn): 0.1689, norm(output): 0.3398, norm(x): 0.2845, norm(y): 1.0094, norm:1.6893, tok/sec: 101570.22, flops:106.60, batch-reuse:1
@ 1883 train 5.1317 , allloss: 5.1330, dt: 1305.82ms, fracRes: 0.2506, norm(attn): 0.1719, norm(output): 0.3398, norm(x): 0.2868, norm(y): 1.0094, norm:1.6708, tok/sec: 100375.15, flops:105.35, batch-reuse:1
@ 1884 train 5.0824 , allloss: 5.0844, dt: 1296.49ms, fracRes: 0.2484, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2883, norm(y): 1.0093, norm:1.4469, tok/sec: 101097.71, flops:106.10, batch-reuse:1
@ 1885 train 5.1579 , allloss: 5.1594, dt: 1315.08ms, fracRes: 0.2522, norm(attn): 0.1709, norm(output): 0.3418, norm(x): 0.2858, norm(y): 1.0093, norm:1.3661, tok/sec: 99668.50, flops:104.60, batch-reuse:1
@ 1886 train 5.1279 , allloss: 5.1296, dt: 1340.33ms, fracRes: 0.2484, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2878, norm(y): 1.0092, norm:1.2846, tok/sec: 97790.90, flops:102.63, batch-reuse:1
@ 1887 train 5.0840 , allloss: 5.0851, dt: 1347.42ms, fracRes: 0.2478, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2884, norm(y): 1.0093, norm:1.4390, tok/sec: 97276.33, flops:102.09, batch-reuse:1
@ 1888 train 5.2732 , allloss: 5.2745, dt: 1346.76ms, fracRes: 0.2506, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2877, norm(y): 1.0093, norm:1.4345, tok/sec: 97324.29, flops:102.14, batch-reuse:1
@ 1889 train 5.1039 , allloss: 5.1058, dt: 1331.17ms, fracRes: 0.2491, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2881, norm(y): 1.0092, norm:1.6326, tok/sec: 98464.02, flops:103.34, batch-reuse:1
@ 1890 train 5.2730 , allloss: 5.2743, dt: 1309.22ms, fracRes: 0.2541, norm(attn): 0.1748, norm(output): 0.3418, norm(x): 0.2871, norm(y): 1.0092, norm:1.4058, tok/sec: 100114.88, flops:105.07, batch-reuse:1
@ 1891 train 5.1679 , allloss: 5.1694, dt: 1314.90ms, fracRes: 0.2532, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2874, norm(y): 1.0091, norm:1.3426, tok/sec: 99682.38, flops:104.62, batch-reuse:1
@ 1892 train 5.1249 , allloss: 5.1261, dt: 1321.65ms, fracRes: 0.2578, norm(attn): 0.1709, norm(output): 0.3398, norm(x): 0.2852, norm(y): 1.0093, norm:1.7261, tok/sec: 99173.32, flops:104.08, batch-reuse:1
@ 1893 train 5.2114 , allloss: 5.2126, dt: 1323.18ms, fracRes: 0.2557, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2865, norm(y): 1.0093, norm:1.4300, tok/sec: 99058.65, flops:103.96, batch-reuse:1
@ 1894 train 5.0838 , allloss: 5.0848, dt: 1330.67ms, fracRes: 0.2523, norm(attn): 0.1719, norm(output): 0.3398, norm(x): 0.2877, norm(y): 1.0092, norm:1.6685, tok/sec: 98500.43, flops:103.38, batch-reuse:1
@ 1895 train 5.2621 , allloss: 5.2633, dt: 1287.25ms, fracRes: 0.2500, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2890, norm(y): 1.0092, norm:1.3514, tok/sec: 101823.64, flops:106.87, batch-reuse:1
@ 1896 train 5.2740 , allloss: 5.2751, dt: 1295.04ms, fracRes: 0.2513, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2888, norm(y): 1.0093, norm:1.3315, tok/sec: 101210.50, flops:106.22, batch-reuse:1
@ 1897 train 5.2269 , allloss: 5.2282, dt: 1318.17ms, fracRes: 0.2499, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2901, norm(y): 1.0093, norm:1.3968, tok/sec: 99434.66, flops:104.36, batch-reuse:1
@ 1898 train 5.1907 , allloss: 5.1919, dt: 1298.49ms, fracRes: 0.2485, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2896, norm(y): 1.0092, norm:1.4242, tok/sec: 100942.14, flops:105.94, batch-reuse:1
@ 1899 train 5.1865 , allloss: 5.1876, dt: 1304.04ms, fracRes: 0.2471, norm(attn): 0.1738, norm(output): 0.3418, norm(x): 0.2908, norm(y): 1.0092, norm:1.5999, tok/sec: 100512.15, flops:105.49, batch-reuse:1
@ 1900 train 5.1357 , allloss: 5.1379, dt: 1314.15ms, fracRes: 0.2501, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2890, norm(y): 1.0093, norm:1.3053, tok/sec: 99739.13, flops:104.68, batch-reuse:1
@ 1901 train 5.2172 , allloss: 5.2181, dt: 1315.50ms, fracRes: 0.2498, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2902, norm(y): 1.0093, norm:1.5113, tok/sec: 99636.95, flops:104.57, batch-reuse:1
@ 1902 train 5.1815 , allloss: 5.1826, dt: 1306.00ms, fracRes: 0.2458, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2928, norm(y): 1.0092, norm:1.6373, tok/sec: 100361.61, flops:105.33, batch-reuse:1
@ 1903 train 5.1781 , allloss: 5.1790, dt: 1319.88ms, fracRes: 0.2489, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2913, norm(y): 1.0093, norm:1.2915, tok/sec: 99305.69, flops:104.22, batch-reuse:1
@ 1904 train 5.1503 , allloss: 5.1512, dt: 1344.29ms, fracRes: 0.2472, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2911, norm(y): 1.0093, norm:1.4666, tok/sec: 97502.60, flops:102.33, batch-reuse:1
@ 1905 train 5.0714 , allloss: 5.0723, dt: 1341.92ms, fracRes: 0.2482, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.2914, norm(y): 1.0093, norm:1.6158, tok/sec: 97675.33, flops:102.51, batch-reuse:1
@ 1906 train 5.0791 , allloss: 5.0804, dt: 1324.51ms, fracRes: 0.2472, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2926, norm(y): 1.0092, norm:1.5003, tok/sec: 98958.60, flops:103.86, batch-reuse:1
@ 1907 train 5.1364 , allloss: 5.1376, dt: 1347.25ms, fracRes: 0.2506, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2914, norm(y): 1.0093, norm:1.5751, tok/sec: 97288.59, flops:102.11, batch-reuse:1
@ 1908 train 5.1301 , allloss: 5.1321, dt: 1343.19ms, fracRes: 0.2511, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2904, norm(y): 1.0093, norm:1.3018, tok/sec: 97582.69, flops:102.41, batch-reuse:1
@ 1909 train 5.2720 , allloss: 5.2736, dt: 1339.78ms, fracRes: 0.2465, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2913, norm(y): 1.0092, norm:1.4007, tok/sec: 97830.91, flops:102.68, batch-reuse:1
@ 1910 train 5.2077 , allloss: 5.2086, dt: 1337.76ms, fracRes: 0.2449, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2925, norm(y): 1.0093, norm:1.4990, tok/sec: 97978.38, flops:102.83, batch-reuse:1
@ 1911 train 5.1520 , allloss: 5.1531, dt: 1334.66ms, fracRes: 0.2481, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2907, norm(y): 1.0093, norm:1.3245, tok/sec: 98205.95, flops:103.07, batch-reuse:1
@ 1912 train 5.1366 , allloss: 5.1380, dt: 1298.51ms, fracRes: 0.2510, norm(attn): 0.1748, norm(output): 0.3418, norm(x): 0.2895, norm(y): 1.0094, norm:1.5503, tok/sec: 100940.30, flops:105.94, batch-reuse:1
@ 1913 train 5.1494 , allloss: 5.1506, dt: 1315.22ms, fracRes: 0.2492, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2911, norm(y): 1.0093, norm:1.4733, tok/sec: 99657.54, flops:104.59, batch-reuse:1
@ 1914 train 5.1478 , allloss: 5.1490, dt: 1336.76ms, fracRes: 0.2522, norm(attn): 0.1729, norm(output): 0.3418, norm(x): 0.2888, norm(y): 1.0093, norm:1.6030, tok/sec: 98051.86, flops:102.91, batch-reuse:1
@ 1915 train 5.1209 , allloss: 5.1218, dt: 1318.01ms, fracRes: 0.2476, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2916, norm(y): 1.0092, norm:1.5523, tok/sec: 99446.71, flops:104.37, batch-reuse:1
@ 1916 train 5.3264 , allloss: 5.3274, dt: 1311.25ms, fracRes: 0.2471, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2931, norm(y): 1.0092, norm:1.7681, tok/sec: 99959.89, flops:104.91, batch-reuse:1
@ 1917 train 5.1773 , allloss: 5.1780, dt: 1303.84ms, fracRes: 0.2474, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2927, norm(y): 1.0094, norm:1.5758, tok/sec: 100527.73, flops:105.51, batch-reuse:1
@ 1918 train 5.1918 , allloss: 5.1927, dt: 1317.30ms, fracRes: 0.2480, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2929, norm(y): 1.0094, norm:1.6121, tok/sec: 99500.18, flops:104.43, batch-reuse:1
@ 1919 train 5.1506 , allloss: 5.1521, dt: 1287.16ms, fracRes: 0.2532, norm(attn): 0.1758, norm(output): 0.3418, norm(x): 0.2919, norm(y): 1.0094, norm:1.5853, tok/sec: 101830.52, flops:106.87, batch-reuse:1
@ 1920 train 5.1209 , allloss: 5.1221, dt: 1273.33ms, fracRes: 0.2478, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2940, norm(y): 1.0092, norm:1.3907, tok/sec: 102936.28, flops:108.03, batch-reuse:1
@ 1921 train 5.1713 , allloss: 5.1722, dt: 1282.96ms, fracRes: 0.2523, norm(attn): 0.1729, norm(output): 0.3438, norm(x): 0.2923, norm(y): 1.0094, norm:1.5672, tok/sec: 102163.88, flops:107.22, batch-reuse:1
@ 1922 train 5.0803 , allloss: 5.0812, dt: 1298.81ms, fracRes: 0.2481, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2943, norm(y): 1.0094, norm:1.4374, tok/sec: 100917.10, flops:105.91, batch-reuse:1
@ 1923 train 5.1760 , allloss: 5.1776, dt: 1313.21ms, fracRes: 0.2466, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2946, norm(y): 1.0093, norm:1.6644, tok/sec: 99810.57, flops:104.75, batch-reuse:1
@ 1924 train 5.1761 , allloss: 5.1775, dt: 1320.16ms, fracRes: 0.2496, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2934, norm(y): 1.0095, norm:1.3425, tok/sec: 99285.01, flops:104.20, batch-reuse:1
@ 1925 train 5.1680 , allloss: 5.1694, dt: 1325.93ms, fracRes: 0.2469, norm(attn): 0.1777, norm(output): 0.3438, norm(x): 0.2941, norm(y): 1.0094, norm:1.4329, tok/sec: 98852.55, flops:103.75, batch-reuse:1
@ 1926 train 5.1748 , allloss: 5.1759, dt: 1295.95ms, fracRes: 0.2494, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2921, norm(y): 1.0094, norm:1.2817, tok/sec: 101139.58, flops:106.15, batch-reuse:1
@ 1927 train 5.1820 , allloss: 5.1832, dt: 1285.26ms, fracRes: 0.2469, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2943, norm(y): 1.0094, norm:1.4980, tok/sec: 101980.64, flops:107.03, batch-reuse:1
@ 1928 train 5.1127 , allloss: 5.1146, dt: 1314.40ms, fracRes: 0.2448, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2948, norm(y): 1.0093, norm:1.3105, tok/sec: 99720.14, flops:104.66, batch-reuse:1
@ 1929 train 5.1214 , allloss: 5.1228, dt: 1295.32ms, fracRes: 0.2457, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2945, norm(y): 1.0094, norm:1.1541, tok/sec: 101188.86, flops:106.20, batch-reuse:1
@ 1930 train 5.0598 , allloss: 5.0607, dt: 1308.45ms, fracRes: 0.2497, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2927, norm(y): 1.0095, norm:1.2705, tok/sec: 100173.74, flops:105.13, batch-reuse:1
@ 1931 train 5.2278 , allloss: 5.2287, dt: 1309.39ms, fracRes: 0.2485, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2936, norm(y): 1.0095, norm:1.5288, tok/sec: 100101.66, flops:105.06, batch-reuse:1
@ 1932 train 5.1975 , allloss: 5.1998, dt: 1281.37ms, fracRes: 0.2468, norm(attn): 0.1787, norm(output): 0.3438, norm(x): 0.2955, norm(y): 1.0094, norm:1.5221, tok/sec: 102290.62, flops:107.36, batch-reuse:1
@ 1933 train 5.2118 , allloss: 5.2125, dt: 1302.33ms, fracRes: 0.2502, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2937, norm(y): 1.0095, norm:1.6879, tok/sec: 100644.56, flops:105.63, batch-reuse:1
@ 1934 train 5.2614 , allloss: 5.2631, dt: 1294.30ms, fracRes: 0.2485, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2938, norm(y): 1.0095, norm:1.6278, tok/sec: 101268.84, flops:106.28, batch-reuse:1
@ 1935 train 5.0913 , allloss: 5.0931, dt: 1303.02ms, fracRes: 0.2503, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2934, norm(y): 1.0093, norm:1.4702, tok/sec: 100590.71, flops:105.57, batch-reuse:1
@ 1936 train 5.1241 , allloss: 5.1253, dt: 1333.26ms, fracRes: 0.2539, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2929, norm(y): 1.0093, norm:1.5168, tok/sec: 98309.51, flops:103.18, batch-reuse:1
@ 1937 train 5.0912 , allloss: 5.0921, dt: 1311.94ms, fracRes: 0.2542, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2936, norm(y): 1.0094, norm:1.5126, tok/sec: 99906.98, flops:104.85, batch-reuse:1
@ 1938 train 5.1353 , allloss: 5.1366, dt: 1311.00ms, fracRes: 0.2523, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2940, norm(y): 1.0094, norm:1.3865, tok/sec: 99978.65, flops:104.93, batch-reuse:1
@ 1939 train 5.1223 , allloss: 5.1244, dt: 1333.73ms, fracRes: 0.2529, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2935, norm(y): 1.0095, norm:1.4389, tok/sec: 98274.52, flops:103.14, batch-reuse:1
@ 1940 train 5.2922 , allloss: 5.2946, dt: 1330.09ms, fracRes: 0.2491, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2951, norm(y): 1.0094, norm:1.4649, tok/sec: 98543.81, flops:103.42, batch-reuse:1
@ 1941 train 5.1855 , allloss: 5.1862, dt: 1307.51ms, fracRes: 0.2519, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2942, norm(y): 1.0095, norm:1.4692, tok/sec: 100245.40, flops:105.21, batch-reuse:1
@ 1942 train 5.0886 , allloss: 5.0894, dt: 1287.94ms, fracRes: 0.2520, norm(attn): 0.1748, norm(output): 0.3457, norm(x): 0.2950, norm(y): 1.0094, norm:1.6789, tok/sec: 101768.60, flops:106.81, batch-reuse:1
@ 1943 train 5.1229 , allloss: 5.1239, dt: 1309.44ms, fracRes: 0.2586, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2925, norm(y): 1.0095, norm:1.4899, tok/sec: 100098.09, flops:105.05, batch-reuse:1
@ 1944 train 5.1148 , allloss: 5.1158, dt: 1315.14ms, fracRes: 0.2573, norm(attn): 0.1777, norm(output): 0.3438, norm(x): 0.2940, norm(y): 1.0094, norm:1.5343, tok/sec: 99664.04, flops:104.60, batch-reuse:1
@ 1945 train 5.0445 , allloss: 5.0457, dt: 1341.49ms, fracRes: 0.2598, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2931, norm(y): 1.0094, norm:1.3492, tok/sec: 97706.38, flops:102.54, batch-reuse:1
@ 1946 train 5.0589 , allloss: 5.0602, dt: 1326.45ms, fracRes: 0.2614, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2912, norm(y): 1.0095, norm:1.2092, tok/sec: 98813.98, flops:103.71, batch-reuse:1
@ 1947 train 5.2145 , allloss: 5.2157, dt: 1309.93ms, fracRes: 0.2562, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2934, norm(y): 1.0094, norm:1.3495, tok/sec: 100060.52, flops:105.02, batch-reuse:1
@ 1948 train 5.0529 , allloss: 5.0541, dt: 1335.84ms, fracRes: 0.2542, norm(attn): 0.1797, norm(output): 0.3438, norm(x): 0.2939, norm(y): 1.0094, norm:1.3084, tok/sec: 98119.75, flops:102.98, batch-reuse:1
@ 1949 train 5.1183 , allloss: 5.1194, dt: 1318.33ms, fracRes: 0.2592, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2912, norm(y): 1.0096, norm:1.3258, tok/sec: 99423.11, flops:104.35, batch-reuse:1
@ 1950 train 5.2032 , allloss: 5.2046, dt: 1282.34ms, fracRes: 0.2587, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2922, norm(y): 1.0094, norm:1.1678, tok/sec: 102213.50, flops:107.27, batch-reuse:1
@ 1951 train 5.0887 , allloss: 5.0898, dt: 1311.47ms, fracRes: 0.2568, norm(attn): 0.1777, norm(output): 0.3457, norm(x): 0.2940, norm(y): 1.0094, norm:1.4597, tok/sec: 99942.48, flops:104.89, batch-reuse:1
@ 1952 train 5.0815 , allloss: 5.0826, dt: 1299.00ms, fracRes: 0.2598, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2915, norm(y): 1.0096, norm:1.6004, tok/sec: 100902.43, flops:105.90, batch-reuse:1
@ 1953 train 5.0721 , allloss: 5.0728, dt: 1296.27ms, fracRes: 0.2613, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2907, norm(y): 1.0096, norm:1.3961, tok/sec: 101114.95, flops:106.12, batch-reuse:1
@ 1954 train 5.0417 , allloss: 5.0423, dt: 1322.18ms, fracRes: 0.2588, norm(attn): 0.1758, norm(output): 0.3438, norm(x): 0.2933, norm(y): 1.0095, norm:1.3191, tok/sec: 99133.23, flops:104.04, batch-reuse:1
@ 1955 train 5.0651 , allloss: 5.0659, dt: 1324.90ms, fracRes: 0.2596, norm(attn): 0.1777, norm(output): 0.3457, norm(x): 0.2935, norm(y): 1.0095, norm:1.5588, tok/sec: 98929.67, flops:103.83, batch-reuse:1
@ 1956 train 4.9371 , allloss: 4.9376, dt: 1317.99ms, fracRes: 0.2601, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2923, norm(y): 1.0096, norm:1.4160, tok/sec: 99448.04, flops:104.37, batch-reuse:1
@ 1957 train 5.0746 , allloss: 5.0755, dt: 1340.27ms, fracRes: 0.2578, norm(attn): 0.1777, norm(output): 0.3438, norm(x): 0.2938, norm(y): 1.0095, norm:1.4304, tok/sec: 97795.44, flops:102.64, batch-reuse:1
@ 1958 train 5.0552 , allloss: 5.0560, dt: 1347.23ms, fracRes: 0.2558, norm(attn): 0.1768, norm(output): 0.3438, norm(x): 0.2952, norm(y): 1.0095, norm:1.4577, tok/sec: 97289.91, flops:102.11, batch-reuse:1
@ 1959 train 4.9994 , allloss: 5.0005, dt: 1293.56ms, fracRes: 0.2537, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2954, norm(y): 1.0095, norm:1.2942, tok/sec: 101326.35, flops:106.34, batch-reuse:1
@ 1960 train 4.9693 , allloss: 4.9708, dt: 1298.97ms, fracRes: 0.2522, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2968, norm(y): 1.0095, norm:1.6654, tok/sec: 100904.21, flops:105.90, batch-reuse:1
@ 1961 train 5.1168 , allloss: 5.1189, dt: 1294.58ms, fracRes: 0.2561, norm(attn): 0.1816, norm(output): 0.3457, norm(x): 0.2959, norm(y): 1.0095, norm:1.4779, tok/sec: 101246.96, flops:106.26, batch-reuse:1
@ 1962 train 5.0025 , allloss: 5.0033, dt: 1315.62ms, fracRes: 0.2573, norm(attn): 0.1748, norm(output): 0.3457, norm(x): 0.2944, norm(y): 1.0096, norm:1.1896, tok/sec: 99627.56, flops:104.56, batch-reuse:1
@ 1963 train 5.1702 , allloss: 5.1712, dt: 1324.83ms, fracRes: 0.2581, norm(attn): 0.1777, norm(output): 0.3457, norm(x): 0.2957, norm(y): 1.0095, norm:1.5727, tok/sec: 98934.79, flops:103.83, batch-reuse:1
@ 1964 train 5.0822 , allloss: 5.0834, dt: 1307.24ms, fracRes: 0.2604, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2959, norm(y): 1.0096, norm:1.5217, tok/sec: 100266.32, flops:105.23, batch-reuse:1
@ 1965 train 5.0443 , allloss: 5.0456, dt: 1334.06ms, fracRes: 0.2590, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2964, norm(y): 1.0095, norm:1.2588, tok/sec: 98250.63, flops:103.12, batch-reuse:1
@ 1966 train 5.0770 , allloss: 5.0783, dt: 1326.72ms, fracRes: 0.2629, norm(attn): 0.1738, norm(output): 0.3438, norm(x): 0.2941, norm(y): 1.0096, norm:1.8487, tok/sec: 98794.37, flops:103.69, batch-reuse:1
@ 1967 train 5.0123 , allloss: 5.0136, dt: 1332.77ms, fracRes: 0.2610, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2937, norm(y): 1.0096, norm:1.4573, tok/sec: 98345.82, flops:103.22, batch-reuse:1
@ 1968 train 5.0507 , allloss: 5.0516, dt: 1333.95ms, fracRes: 0.2613, norm(attn): 0.1807, norm(output): 0.3457, norm(x): 0.2941, norm(y): 1.0095, norm:1.4786, tok/sec: 98258.60, flops:103.12, batch-reuse:1
@ 1969 train 5.0957 , allloss: 5.0965, dt: 1303.40ms, fracRes: 0.2632, norm(attn): 0.1807, norm(output): 0.3438, norm(x): 0.2951, norm(y): 1.0095, norm:1.4143, tok/sec: 100561.29, flops:105.54, batch-reuse:1
@ 1970 train 5.0328 , allloss: 5.0339, dt: 1306.57ms, fracRes: 0.2652, norm(attn): 0.1748, norm(output): 0.3438, norm(x): 0.2926, norm(y): 1.0097, norm:1.3947, tok/sec: 100317.51, flops:105.29, batch-reuse:1
@ 1971 train 5.1083 , allloss: 5.1090, dt: 1308.62ms, fracRes: 0.2617, norm(attn): 0.1729, norm(output): 0.3457, norm(x): 0.2938, norm(y): 1.0097, norm:1.5977, tok/sec: 100160.13, flops:105.12, batch-reuse:1
@ 1972 train 5.0627 , allloss: 5.0638, dt: 1298.44ms, fracRes: 0.2557, norm(attn): 0.1807, norm(output): 0.3457, norm(x): 0.2969, norm(y): 1.0095, norm:1.3447, tok/sec: 100945.99, flops:105.94, batch-reuse:1
@ 1973 train 5.0478 , allloss: 5.0489, dt: 1347.04ms, fracRes: 0.2592, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2947, norm(y): 1.0097, norm:1.4346, tok/sec: 97303.45, flops:102.12, batch-reuse:1
@ 1974 train 5.0819 , allloss: 5.0836, dt: 1351.14ms, fracRes: 0.2618, norm(attn): 0.1777, norm(output): 0.3438, norm(x): 0.2947, norm(y): 1.0097, norm:1.5899, tok/sec: 97008.31, flops:101.81, batch-reuse:1
@ 1975 train 4.9222 , allloss: 4.9235, dt: 1304.62ms, fracRes: 0.2595, norm(attn): 0.1836, norm(output): 0.3438, norm(x): 0.2956, norm(y): 1.0096, norm:1.5933, tok/sec: 100467.37, flops:105.44, batch-reuse:1
@ 1976 train 5.1384 , allloss: 5.1395, dt: 1308.10ms, fracRes: 0.2578, norm(attn): 0.1836, norm(output): 0.3457, norm(x): 0.2966, norm(y): 1.0095, norm:1.3592, tok/sec: 100200.46, flops:105.16, batch-reuse:1
@ 1977 train 4.9688 , allloss: 4.9707, dt: 1331.72ms, fracRes: 0.2577, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2964, norm(y): 1.0095, norm:1.3703, tok/sec: 98423.42, flops:103.30, batch-reuse:1
@ 1978 train 5.0936 , allloss: 5.0964, dt: 1333.16ms, fracRes: 0.2549, norm(attn): 0.1777, norm(output): 0.3477, norm(x): 0.2972, norm(y): 1.0095, norm:1.5388, tok/sec: 98316.45, flops:103.18, batch-reuse:1
@ 1979 train 5.0910 , allloss: 5.0918, dt: 1328.78ms, fracRes: 0.2610, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2954, norm(y): 1.0097, norm:1.6261, tok/sec: 98640.81, flops:103.53, batch-reuse:1
@ 1980 train 5.0508 , allloss: 5.0521, dt: 1301.93ms, fracRes: 0.2639, norm(attn): 0.1787, norm(output): 0.3457, norm(x): 0.2955, norm(y): 1.0097, norm:1.3699, tok/sec: 100674.88, flops:105.66, batch-reuse:1
@ 1981 train 5.0429 , allloss: 5.0440, dt: 1319.61ms, fracRes: 0.2627, norm(attn): 0.1787, norm(output): 0.3457, norm(x): 0.2968, norm(y): 1.0096, norm:1.3938, tok/sec: 99325.95, flops:104.24, batch-reuse:1
@ 1982 train 4.9713 , allloss: 4.9720, dt: 1340.20ms, fracRes: 0.2631, norm(attn): 0.1738, norm(output): 0.3457, norm(x): 0.2969, norm(y): 1.0096, norm:1.2753, tok/sec: 97800.56, flops:102.64, batch-reuse:1
@ 1983 train 5.0667 , allloss: 5.0674, dt: 1331.30ms, fracRes: 0.2615, norm(attn): 0.1748, norm(output): 0.3457, norm(x): 0.2982, norm(y): 1.0095, norm:1.4273, tok/sec: 98454.48, flops:103.33, batch-reuse:1
@ 1984 train 5.0156 , allloss: 5.0165, dt: 1299.66ms, fracRes: 0.2664, norm(attn): 0.1748, norm(output): 0.3457, norm(x): 0.2955, norm(y): 1.0096, norm:1.3614, tok/sec: 100851.36, flops:105.85, batch-reuse:1
@ 1985 train 5.0211 , allloss: 5.0218, dt: 1286.02ms, fracRes: 0.2689, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2939, norm(y): 1.0097, norm:1.1245, tok/sec: 101920.93, flops:106.97, batch-reuse:1
@ 1986 train 5.0969 , allloss: 5.0975, dt: 1301.59ms, fracRes: 0.2620, norm(attn): 0.1758, norm(output): 0.3477, norm(x): 0.2970, norm(y): 1.0097, norm:1.4002, tok/sec: 100701.69, flops:105.69, batch-reuse:1
@ 1987 train 5.0925 , allloss: 5.0936, dt: 1321.75ms, fracRes: 0.2625, norm(attn): 0.1738, norm(output): 0.3477, norm(x): 0.2970, norm(y): 1.0098, norm:1.5320, tok/sec: 99165.60, flops:104.08, batch-reuse:1
@ 1988 train 5.0125 , allloss: 5.0151, dt: 1306.79ms, fracRes: 0.2588, norm(attn): 0.1768, norm(output): 0.3496, norm(x): 0.2994, norm(y): 1.0097, norm:1.5088, tok/sec: 100300.44, flops:105.27, batch-reuse:1
@ 1989 train 5.0375 , allloss: 5.0385, dt: 1339.98ms, fracRes: 0.2604, norm(attn): 0.1816, norm(output): 0.3477, norm(x): 0.2984, norm(y): 1.0096, norm:1.3688, tok/sec: 97816.52, flops:102.66, batch-reuse:1
@ 1990 train 5.1012 , allloss: 5.1024, dt: 1306.27ms, fracRes: 0.2633, norm(attn): 0.1787, norm(output): 0.3457, norm(x): 0.2958, norm(y): 1.0096, norm:1.5084, tok/sec: 100340.42, flops:105.31, batch-reuse:1
@ 1991 train 4.9743 , allloss: 4.9752, dt: 1314.74ms, fracRes: 0.2662, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2952, norm(y): 1.0097, norm:1.3831, tok/sec: 99694.35, flops:104.63, batch-reuse:1
@ 1992 train 5.0306 , allloss: 5.0315, dt: 1303.24ms, fracRes: 0.2627, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2969, norm(y): 1.0097, norm:1.3249, tok/sec: 100574.26, flops:105.55, batch-reuse:1
@ 1993 train 4.9455 , allloss: 4.9466, dt: 1297.31ms, fracRes: 0.2633, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2978, norm(y): 1.0097, norm:1.8805, tok/sec: 101034.04, flops:106.04, batch-reuse:1
@ 1994 train 4.9935 , allloss: 4.9945, dt: 1327.22ms, fracRes: 0.2656, norm(attn): 0.1758, norm(output): 0.3477, norm(x): 0.2980, norm(y): 1.0098, norm:1.4214, tok/sec: 98756.47, flops:103.65, batch-reuse:1
@ 1995 train 4.9847 , allloss: 4.9861, dt: 1328.67ms, fracRes: 0.2655, norm(attn): 0.1748, norm(output): 0.3477, norm(x): 0.2972, norm(y): 1.0097, norm:1.3977, tok/sec: 98649.02, flops:103.53, batch-reuse:1
@ 1996 train 5.0113 , allloss: 5.0128, dt: 1321.45ms, fracRes: 0.2678, norm(attn): 0.1748, norm(output): 0.3477, norm(x): 0.2969, norm(y): 1.0097, norm:1.4289, tok/sec: 99188.32, flops:104.10, batch-reuse:1
@ 1997 train 4.9289 , allloss: 4.9306, dt: 1320.48ms, fracRes: 0.2652, norm(attn): 0.1768, norm(output): 0.3457, norm(x): 0.2966, norm(y): 1.0097, norm:1.3996, tok/sec: 99260.56, flops:104.18, batch-reuse:1
@ 1998 train 4.9499 , allloss: 4.9507, dt: 1300.07ms, fracRes: 0.2670, norm(attn): 0.1787, norm(output): 0.3477, norm(x): 0.2978, norm(y): 1.0096, norm:1.4736, tok/sec: 100818.96, flops:105.81, batch-reuse:1
@ 1999 train 4.8860 , allloss: 4.8867, dt: 1303.43ms, fracRes: 0.2736, norm(attn): 0.1758, norm(output): 0.3457, norm(x): 0.2947, norm(y): 1.0098, norm:1.7558, tok/sec: 100559.34, flops:105.54, batch-reuse:1
@ 2000 val 5.0730
@ 2000 train 4.9701 , allloss: 4.9711, dt: 1914.40ms, fracRes: 0.2701, norm(attn): 0.1738, norm(output): 0.3457, norm(x): 0.2968, norm(y): 1.0097, norm:1.6096, tok/sec: 68466.44, flops:71.86, batch-reuse:1
@ 2001 train 5.0374 , allloss: 5.0384, dt: 1287.58ms, fracRes: 0.2707, norm(attn): 0.1758, norm(output): 0.3477, norm(x): 0.2972, norm(y): 1.0097, norm:1.5241, tok/sec: 101797.51, flops:106.84, batch-reuse:1
@ 2002 train 5.0264 , allloss: 5.0275, dt: 1291.31ms, fracRes: 0.2698, norm(attn): 0.1787, norm(output): 0.3477, norm(x): 0.2968, norm(y): 1.0097, norm:1.2874, tok/sec: 101503.29, flops:106.53, batch-reuse:1
@ 2003 train 5.0383 , allloss: 5.0390, dt: 1298.05ms, fracRes: 0.2705, norm(attn): 0.1797, norm(output): 0.3477, norm(x): 0.2962, norm(y): 1.0097, norm:1.4375, tok/sec: 100976.09, flops:105.98, batch-reuse:1
@ 2004 train 5.0369 , allloss: 5.0381, dt: 1308.19ms, fracRes: 0.2686, norm(attn): 0.1797, norm(output): 0.3477, norm(x): 0.2981, norm(y): 1.0097, norm:1.5411, tok/sec: 100193.68, flops:105.16, batch-reuse:1
@ 2005 train 4.8822 , allloss: 4.8833, dt: 1306.33ms, fracRes: 0.2665, norm(attn): 0.1777, norm(output): 0.3496, norm(x): 0.2987, norm(y): 1.0097, norm:1.5661, tok/sec: 100335.99, flops:105.30, batch-reuse:1
@ 2006 train 5.0576 , allloss: 5.0586, dt: 1302.93ms, fracRes: 0.2677, norm(attn): 0.1768, norm(output): 0.3477, norm(x): 0.2984, norm(y): 1.0098, norm:1.4603, tok/sec: 100597.60, flops:105.58, batch-reuse:1
@ 2007 train 4.9144 , allloss: 4.9159, dt: 1303.30ms, fracRes: 0.2630, norm(attn): 0.1816, norm(output): 0.3516, norm(x): 0.3007, norm(y): 1.0097, norm:1.5487, tok/sec: 100569.04, flops:105.55, batch-reuse:1
@ 2008 train 4.9399 , allloss: 4.9413, dt: 1317.96ms, fracRes: 0.2657, norm(attn): 0.1768, norm(output): 0.3496, norm(x): 0.2980, norm(y): 1.0098, norm:1.3536, tok/sec: 99450.83, flops:104.38, batch-reuse:1
@ 2009 train 4.9296 , allloss: 4.9304, dt: 1309.34ms, fracRes: 0.2648, norm(attn): 0.1787, norm(output): 0.3457, norm(x): 0.2976, norm(y): 1.0098, norm:1.4729, tok/sec: 100105.32, flops:105.06, batch-reuse:1
@ 2010 train 4.9988 , allloss: 4.9995, dt: 1299.62ms, fracRes: 0.2660, norm(attn): 0.1768, norm(output): 0.3477, norm(x): 0.2984, norm(y): 1.0097, norm:1.2749, tok/sec: 100853.77, flops:105.85, batch-reuse:1
@ 2011 train 4.9174 , allloss: 4.9196, dt: 1298.26ms, fracRes: 0.2654, norm(attn): 0.1816, norm(output): 0.3477, norm(x): 0.2995, norm(y): 1.0097, norm:1.3715, tok/sec: 100960.03, flops:105.96, batch-reuse:1
@ 2012 train 4.9105 , allloss: 4.9114, dt: 1309.40ms, fracRes: 0.2661, norm(attn): 0.1758, norm(output): 0.3496, norm(x): 0.2988, norm(y): 1.0098, norm:1.4458, tok/sec: 100100.84, flops:105.06, batch-reuse:1
@ 2013 train 4.9479 , allloss: 4.9491, dt: 1305.85ms, fracRes: 0.2617, norm(attn): 0.1787, norm(output): 0.3516, norm(x): 0.3009, norm(y): 1.0097, norm:1.2335, tok/sec: 100372.93, flops:105.34, batch-reuse:1
@ 2014 train 4.9669 , allloss: 4.9706, dt: 1320.58ms, fracRes: 0.2589, norm(attn): 0.1797, norm(output): 0.3496, norm(x): 0.3017, norm(y): 1.0097, norm:1.6480, tok/sec: 99253.70, flops:104.17, batch-reuse:1
@ 2015 train 4.8697 , allloss: 4.8709, dt: 1313.46ms, fracRes: 0.2619, norm(attn): 0.1787, norm(output): 0.3516, norm(x): 0.3007, norm(y): 1.0098, norm:1.3077, tok/sec: 99791.51, flops:104.73, batch-reuse:1
@ 2016 train 4.9644 , allloss: 4.9659, dt: 1327.18ms, fracRes: 0.2624, norm(attn): 0.1807, norm(output): 0.3496, norm(x): 0.3014, norm(y): 1.0097, norm:1.7657, tok/sec: 98759.89, flops:103.65, batch-reuse:1
@ 2017 train 4.9772 , allloss: 4.9784, dt: 1326.76ms, fracRes: 0.2659, norm(attn): 0.1777, norm(output): 0.3516, norm(x): 0.3008, norm(y): 1.0098, norm:1.4043, tok/sec: 98790.73, flops:103.68, batch-reuse:1
@ 2018 train 5.0223 , allloss: 5.0241, dt: 1303.51ms, fracRes: 0.2652, norm(attn): 0.1768, norm(output): 0.3516, norm(x): 0.3013, norm(y): 1.0097, norm:1.4581, tok/sec: 100552.78, flops:105.53, batch-reuse:1
@ 2019 train 5.0325 , allloss: 5.0341, dt: 1331.22ms, fracRes: 0.2658, norm(attn): 0.1768, norm(output): 0.3516, norm(x): 0.3006, norm(y): 1.0098, norm:1.6902, tok/sec: 98460.38, flops:103.34, batch-reuse:1
@ 2020 train 4.9002 , allloss: 4.9014, dt: 1333.80ms, fracRes: 0.2668, norm(attn): 0.1758, norm(output): 0.3496, norm(x): 0.3002, norm(y): 1.0097, norm:1.5770, tok/sec: 98269.71, flops:103.14, batch-reuse:1
@ 2021 train 4.9299 , allloss: 4.9314, dt: 1304.39ms, fracRes: 0.2701, norm(attn): 0.1748, norm(output): 0.3516, norm(x): 0.2990, norm(y): 1.0098, norm:1.3452, tok/sec: 100485.21, flops:105.46, batch-reuse:1
@ 2022 train 4.9933 , allloss: 4.9945, dt: 1302.56ms, fracRes: 0.2679, norm(attn): 0.1768, norm(output): 0.3516, norm(x): 0.2994, norm(y): 1.0098, norm:1.4636, tok/sec: 100626.14, flops:105.61, batch-reuse:1
@ 2023 train 4.9849 , allloss: 4.9859, dt: 1323.01ms, fracRes: 0.2646, norm(attn): 0.1807, norm(output): 0.3516, norm(x): 0.3011, norm(y): 1.0098, norm:1.5441, tok/sec: 99070.81, flops:103.98, batch-reuse:1
@ 2024 train 4.8711 , allloss: 4.8720, dt: 1296.58ms, fracRes: 0.2630, norm(attn): 0.1816, norm(output): 0.3496, norm(x): 0.3006, norm(y): 1.0098, norm:1.2755, tok/sec: 101090.24, flops:106.10, batch-reuse:1
@ 2025 train 5.0218 , allloss: 5.0229, dt: 1291.08ms, fracRes: 0.2654, norm(attn): 0.1807, norm(output): 0.3477, norm(x): 0.2999, norm(y): 1.0099, norm:1.5403, tok/sec: 101520.85, flops:106.55, batch-reuse:1
@ 2026 train 4.9605 , allloss: 4.9619, dt: 1303.05ms, fracRes: 0.2619, norm(attn): 0.1846, norm(output): 0.3516, norm(x): 0.3021, norm(y): 1.0097, norm:1.5672, tok/sec: 100588.34, flops:105.57, batch-reuse:1
@ 2027 train 4.9670 , allloss: 4.9679, dt: 1303.93ms, fracRes: 0.2677, norm(attn): 0.1748, norm(output): 0.3477, norm(x): 0.2990, norm(y): 1.0099, norm:1.5604, tok/sec: 100520.44, flops:105.50, batch-reuse:1
@ 2028 train 5.2870 , allloss: 5.2880, dt: 1325.60ms, fracRes: 0.2703, norm(attn): 0.1768, norm(output): 0.3496, norm(x): 0.2999, norm(y): 1.0098, norm:1.4748, tok/sec: 98877.34, flops:103.77, batch-reuse:1
@ 2029 train 5.0328 , allloss: 5.0340, dt: 1323.49ms, fracRes: 0.2688, norm(attn): 0.1797, norm(output): 0.3516, norm(x): 0.3000, norm(y): 1.0098, norm:1.4272, tok/sec: 99035.46, flops:103.94, batch-reuse:1
@ 2030 train 4.7927 , allloss: 4.7939, dt: 1327.03ms, fracRes: 0.2701, norm(attn): 0.1787, norm(output): 0.3477, norm(x): 0.2979, norm(y): 1.0099, norm:1.4690, tok/sec: 98770.75, flops:103.66, batch-reuse:1
@ 2031 train 4.8620 , allloss: 4.8638, dt: 1293.20ms, fracRes: 0.2710, norm(attn): 0.1816, norm(output): 0.3496, norm(x): 0.2986, norm(y): 1.0098, norm:1.5041, tok/sec: 101354.72, flops:106.37, batch-reuse:1
@ 2032 train 4.8714 , allloss: 4.8747, dt: 1284.44ms, fracRes: 0.2696, norm(attn): 0.1846, norm(output): 0.3516, norm(x): 0.2998, norm(y): 1.0097, norm:1.4192, tok/sec: 102045.66, flops:107.10, batch-reuse:1
@ 2033 train 4.8783 , allloss: 4.8795, dt: 1287.06ms, fracRes: 0.2740, norm(attn): 0.1787, norm(output): 0.3477, norm(x): 0.2976, norm(y): 1.0100, norm:1.6215, tok/sec: 101837.98, flops:106.88, batch-reuse:1
@ 2034 train 4.8886 , allloss: 4.8895, dt: 1286.90ms, fracRes: 0.2716, norm(attn): 0.1777, norm(output): 0.3496, norm(x): 0.2988, norm(y): 1.0099, norm:1.3104, tok/sec: 101850.77, flops:106.89, batch-reuse:1
@ 2035 train 4.8959 , allloss: 4.8980, dt: 1286.46ms, fracRes: 0.2694, norm(attn): 0.1826, norm(output): 0.3535, norm(x): 0.3013, norm(y): 1.0097, norm:1.5578, tok/sec: 101885.93, flops:106.93, batch-reuse:1
@ 2036 train 4.8862 , allloss: 4.8874, dt: 1337.41ms, fracRes: 0.2774, norm(attn): 0.1768, norm(output): 0.3477, norm(x): 0.2970, norm(y): 1.0100, norm:1.3652, tok/sec: 98004.11, flops:102.86, batch-reuse:1
@ 2037 train 4.9441 , allloss: 4.9452, dt: 1334.74ms, fracRes: 0.2722, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3007, norm(y): 1.0099, norm:1.6358, tok/sec: 98200.68, flops:103.06, batch-reuse:1
@ 2038 train 4.9208 , allloss: 4.9237, dt: 1330.57ms, fracRes: 0.2732, norm(attn): 0.1787, norm(output): 0.3535, norm(x): 0.3008, norm(y): 1.0098, norm:1.3833, tok/sec: 98508.18, flops:103.39, batch-reuse:1
@ 2039 train 5.0294 , allloss: 5.0312, dt: 1278.53ms, fracRes: 0.2772, norm(attn): 0.1758, norm(output): 0.3516, norm(x): 0.2987, norm(y): 1.0099, norm:1.6083, tok/sec: 102517.61, flops:107.59, batch-reuse:1
@ 2040 train 5.0670 , allloss: 5.0682, dt: 1277.78ms, fracRes: 0.2773, norm(attn): 0.1758, norm(output): 0.3535, norm(x): 0.2986, norm(y): 1.0100, norm:1.3304, tok/sec: 102578.10, flops:107.66, batch-reuse:1
@ 2041 train 5.0462 , allloss: 5.0473, dt: 1286.35ms, fracRes: 0.2751, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3007, norm(y): 1.0099, norm:1.6954, tok/sec: 101894.26, flops:106.94, batch-reuse:1
@ 2042 train 5.1741 , allloss: 5.1752, dt: 1321.79ms, fracRes: 0.2734, norm(attn): 0.1816, norm(output): 0.3535, norm(x): 0.3014, norm(y): 1.0098, norm:1.5450, tok/sec: 99162.86, flops:104.07, batch-reuse:1
@ 2043 train 5.0843 , allloss: 5.0874, dt: 1303.27ms, fracRes: 0.2729, norm(attn): 0.1816, norm(output): 0.3516, norm(x): 0.2998, norm(y): 1.0099, norm:1.4257, tok/sec: 100571.26, flops:105.55, batch-reuse:1
@ 2044 train 5.1887 , allloss: 5.1898, dt: 1303.11ms, fracRes: 0.2724, norm(attn): 0.1807, norm(output): 0.3535, norm(x): 0.2998, norm(y): 1.0099, norm:1.4218, tok/sec: 100584.22, flops:105.57, batch-reuse:1
@ 2045 train 5.0741 , allloss: 5.0751, dt: 1288.59ms, fracRes: 0.2690, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3012, norm(y): 1.0098, norm:1.3413, tok/sec: 101717.48, flops:106.75, batch-reuse:1
@ 2046 train 5.1750 , allloss: 5.1762, dt: 1275.40ms, fracRes: 0.2700, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3011, norm(y): 1.0098, norm:1.5683, tok/sec: 102768.97, flops:107.86, batch-reuse:1
@ 2047 train 5.0885 , allloss: 5.0904, dt: 1288.23ms, fracRes: 0.2733, norm(attn): 0.1807, norm(output): 0.3535, norm(x): 0.3006, norm(y): 1.0099, norm:1.4240, tok/sec: 101745.42, flops:106.78, batch-reuse:1
@ 2048 train 5.0666 , allloss: 5.0681, dt: 1300.96ms, fracRes: 0.2724, norm(attn): 0.1797, norm(output): 0.3516, norm(x): 0.3013, norm(y): 1.0099, norm:1.3831, tok/sec: 100750.04, flops:105.74, batch-reuse:1
@ 2049 train 5.1281 , allloss: 5.1298, dt: 1296.74ms, fracRes: 0.2721, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3021, norm(y): 1.0098, norm:1.4737, tok/sec: 101078.21, flops:106.08, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3906, 0.6094, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2012, 0.5078, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0679, 0.4414, 0.4102, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3711, 0.0366, 0.2578, 0.0542, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1279, 0.0393, 0.1670, 0.0400, 0.2891, 0.3359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2637, 0.0625, 0.0439, 0.0452, 0.1680, 0.4102, 0.0068, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.1729, 0.0396, 0.1621, 0.0089, 0.0050, 0.6016, 0.0035, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.0210, 0.0654, 0.0126, 0.0327, 0.2578, 0.0349, 0.2539, 0.2227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0762, 0.1226, 0.0908, 0.0413, 0.1279, 0.0481, 0.2217, 0.1436, 0.0376, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0211, 0.0011, 0.0118, 0.0011, 0.0173, 0.0850, 0.0011, 0.0525, 0.7383, 0.0139, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.0649, 0.0981, 0.1787, 0.0078, 0.0211, 0.0381, 0.1904, 0.0039, 0.0962, 0.0057, 0.2559, 0.0000, 0.0000, 0.0000],
        [0.0171, 0.1138, 0.0255, 0.3125, 0.0286, 0.0099, 0.2324, 0.0112, 0.0027, 0.0344, 0.0101, 0.1680, 0.0330, 0.0000, 0.0000],
        [0.0601, 0.0170, 0.0723, 0.0120, 0.0271, 0.1689, 0.0347, 0.1523, 0.2227, 0.0249, 0.0366, 0.0242, 0.0356, 0.1118, 0.0000],
        [0.0415, 0.0410, 0.1631, 0.0557, 0.0400, 0.1240, 0.0889, 0.0713, 0.0393, 0.0320, 0.0457, 0.0469, 0.0422, 0.0452, 0.1226]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0031, -0.0312,  0.0541,  ...,  0.0129,  0.0201,  0.0123],
        [ 0.0171,  0.0022,  0.0198,  ..., -0.0111,  0.0312, -0.0021],
        [-0.0379,  0.0042, -0.0102,  ..., -0.0079, -0.0224,  0.0152],
        ...,
        [-0.0385,  0.0096, -0.0595,  ...,  0.0182, -0.0131, -0.0126],
        [ 0.0035, -0.0116,  0.0166,  ...,  0.0368, -0.0111,  0.0157],
        [-0.0185,  0.0064, -0.0327,  ...,  0.0026, -0.0093,  0.0313]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5859,  0.7500, -0.8398,  0.3262, -0.5703, -0.2773, -0.5664, -0.2910, -1.1172, -0.8203, -0.6289,  0.1934,  0.0079, -0.9609, -0.9492,  1.1094,  0.0649,  1.6484, -0.9453, -0.7539, -0.1963, -0.5781, -0.7656,  0.7344, -0.6328,  0.1787,  0.1533, -0.5312, -0.9453,  1.2578,  0.0898, -0.3359,
         0.1299,  0.1611,  0.2676, -0.9141, -0.1162,  0.8633, -1.1406,  0.2412, -0.6484,  0.1875, -0.2832,  0.4395, -1.0156,  0.7773, -0.0349, -0.0021,  1.1797, -0.7930, -0.4844,  0.4668, -0.1309,  1.9609, -0.6914, -0.1226,  0.5312,  0.3789,  0.5703,  0.6172, -0.0771,  0.5391, -0.0625,  0.2188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0107,  0.0019, -0.0248,  ...,  0.0233,  0.0153,  0.0231],
        [ 0.0205, -0.0253, -0.0263,  ..., -0.0069,  0.0221,  0.0304],
        [-0.0077,  0.0278,  0.0429,  ...,  0.0068,  0.0107, -0.0332],
        ...,
        [ 0.0227,  0.0109,  0.0408,  ..., -0.0015,  0.0185, -0.0217],
        [ 0.0066, -0.0201, -0.0343,  ...,  0.0238, -0.0296, -0.0089],
        [ 0.0341, -0.0094,  0.0312,  ..., -0.0161, -0.0375, -0.0114]], device='cuda:0', requires_grad=True)
Q: tensor([     0.5078,     -0.1069,      0.0012,     -0.2266,     -0.6367,      0.5078,     -0.3008,     -0.1621,     -0.3340,     -0.7188,      0.3730,     -0.8359,      0.7578,     -0.0496,     -0.1167,     -0.2754,     -0.9844,      0.6211,      0.5859,     -1.1953,      0.3066,      0.6328,
            -0.1562,      0.7812,     -1.5781,     -0.5312,      0.2910,      0.7344,     -0.6875,      0.1768,     -0.1582,      0.7617,     -0.2227,      0.4570,      0.6328,     -0.5586,      0.1279,      0.4121,     -0.5781,      0.0889,      0.1484,     -0.9727,     -0.5547,      0.4395,
            -0.2324,      0.0175,      0.0135,     -0.9375,     -0.3809,     -0.3652,     -0.7109,      0.7422,      0.0796,      0.8555,      0.3418,     -0.3672,     -0.4395,      0.8828,      0.6211,      1.1484,      0.2812,     -0.7227,      0.0674,      0.4785], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.4473,      0.1045,      0.8516,     -0.6016,      1.4141,      0.5820,      0.1426,     -0.1562,     -0.6562,     -0.2275,      0.4570,     -0.2969,      0.0283,      1.2031],
        [     0.0000,      0.9258,      0.3730,      1.4922,     -0.7031,      0.3672,      1.2578,      0.6445,     -1.9453,      0.3379,     -1.0078,      1.4766,      0.8398,     -1.1875,      0.9297],
        [     0.0000,     -0.1631,      1.7109,      1.6328,     -1.8281,     -0.9062,     -1.8828,      2.3281,     -0.7383,      0.5430,     -1.5156,      0.6836,      1.0938,     -1.0391,      1.1953],
        [     0.0000,     -2.3125,     -0.3613,     -1.9219,     -0.2734,      0.5391,     -2.0156,      0.3945,      1.8047,     -0.8594,      0.4980,     -1.6094,     -0.7344,      0.9609,     -1.0781],
        [     0.0000,     -1.1875,      0.2637,     -1.1641,      0.8125,      0.9648,     -0.1235,      0.1846,      1.3047,     -0.9688,      0.7891,     -0.1484,     -0.8789,      0.7656,     -0.1553],
        [     0.0000,     -1.4453,     -1.7969,     -1.7656,     -0.4570,      0.4375,     -3.6719,      0.8086,      0.6445,     -0.6328,      0.6094,     -1.6328,     -1.0234,     -0.3203,     -0.1504],
        [     0.0000,      3.2344,      1.7500,      3.1719,      0.2637,     -0.3125,      4.4688,     -0.6719,     -3.2500,      1.5703,     -1.1172,      2.8906,      0.7852,     -1.2422,      2.0312],
        [     0.0000,     -1.5547,     -0.4180,     -2.0625,     -1.1172,      0.9531,     -1.0469,      0.9375,      0.8086,     -0.7930,      0.0002,     -0.8711,     -0.6406,      0.3594,     -1.1953],
        [     0.0000,     -0.1670,      0.3066,      0.0073,     -0.7773,      0.3516,     -0.6250,      0.9023,      0.4668,     -0.8750,     -0.2969,     -0.0737,      0.1602,     -0.2734,      0.4766],
        [     0.0000,     -2.9531,     -0.5820,     -2.9375,     -0.1963,      1.3906,     -2.9375,      0.9102,      3.5469,     -0.4219,      1.0156,     -2.7969,     -1.1328,      1.5156,     -1.3203],
        [     0.0000,      0.4883,      0.8945,      1.4922,     -1.6328,     -0.6406,     -0.0471,      1.5625,     -2.3125,      0.8750,     -1.9453,      1.8516,      1.8906,     -1.7266,      0.5078],
        [     0.0000,      1.8984,      0.4023,      2.9062,      0.5117,     -0.5469,      2.6094,     -0.4219,     -1.8594,      0.7031,     -0.5312,      2.2812,      0.6562,     -0.9844,      1.9219],
        [     0.0000,     -1.2656,      0.1826,     -1.6094,     -0.7969,      1.0312,     -0.5469,      0.9297,      1.3125,     -0.8789,     -0.4941,     -0.9141,     -0.5234,      0.6211,     -0.2383],
        [     0.0000,     -0.0087,      1.3750,      0.2969,     -0.0332,      1.1016,      0.7617,      0.5430,     -0.0515,     -0.2559,      0.0967,      0.1250,      0.0217,      0.0845,      1.0859]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5083],
        [0.3739],
        [0.3033],
        [0.2934],
        [0.1398],
        [0.2017],
        [0.0502],
        [0.0759],
        [0.1003],
        [0.0549],
        [0.0844],
        [0.0406],
        [0.0489],
        [0.0599]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0400,     0.0010,     0.9180,     0.0272,     0.0006,     0.0082,     0.0032,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0000,     0.0067,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4277,     0.0003,     0.4297,     0.0150,     0.0002,     0.0007,     0.0014,     0.0007,     0.0001,     0.0096,     0.0001,     0.1104,     0.0036,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0039,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0114, -0.0054,  0.0249,  ...,  0.0065, -0.0271,  0.0002],
        [-0.0122,  0.0330,  0.0061,  ..., -0.0046,  0.0244,  0.0121],
        [-0.0154,  0.0257,  0.0059,  ...,  0.0091, -0.0325, -0.0008],
        ...,
        [ 0.0281, -0.0418, -0.0208,  ...,  0.0125,  0.0138, -0.0101],
        [-0.0669, -0.0417,  0.0160,  ...,  0.0232, -0.0047,  0.0028],
        [ 0.0390, -0.0077,  0.0387,  ...,  0.0583,  0.0050,  0.0548]], device='cuda:0', requires_grad=True)
K: tensor([-2.4219,  2.7188,  1.9688, -2.7344,  1.7344, -2.5469,  1.1172,  3.0156,  2.8125,  3.8281, -1.6406, -2.3906,  2.0781,  1.7266, -0.9844,  2.6406, -1.1172, -3.7812,  1.6875,  3.0938,  2.0469, -3.1562,  2.8750, -2.8750,  2.3281, -2.5938, -3.8125, -0.2070,  0.9180, -0.0588,  2.2656,  3.2969,
         0.9453,  3.1719, -2.6875,  2.3438, -1.7969,  2.1875, -0.6719, -1.8906, -3.4062, -2.4531,  2.6875, -2.2656,  1.9219,  1.0703, -1.4844, -1.7812, -2.1719,  1.6094, -2.1875, -2.4688, -1.8359, -1.4844,  2.6406, -2.7500, -1.9766, -2.2031, -3.5625,  1.9766,  3.4219, -1.8438,  1.8047, -2.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0201,  0.0378,  0.0156,  ...,  0.0058,  0.0058,  0.0307],
        [ 0.0212, -0.0328,  0.0120,  ...,  0.0545, -0.0163,  0.0108],
        [-0.0200,  0.0059, -0.0069,  ..., -0.0078, -0.0121,  0.0038],
        ...,
        [-0.0328,  0.0132,  0.0323,  ..., -0.0086,  0.0244, -0.0006],
        [ 0.0367, -0.0124, -0.0089,  ..., -0.0169, -0.0241,  0.0269],
        [ 0.0192,  0.0174, -0.0184,  ..., -0.0083,  0.0099, -0.0191]], device='cuda:0', requires_grad=True)
Q: tensor([-0.0075, -1.1719, -0.2539,  0.9766, -1.6250,  2.8281, -2.4688, -1.2578, -0.2168, -2.2344,  1.6562,  2.2500, -1.3125, -1.8828,  0.6680, -2.2656,  1.6406,  1.3359, -2.2188, -1.6328, -1.4844,  2.5781, -0.7148,  1.8203, -1.5391,  2.1094,  1.1797,  1.7266, -2.3438,  0.7656, -1.9766, -1.9062,
        -2.5156, -2.1250,  1.5078, -1.9453,  2.1094, -2.0781,  2.5469, -0.1709,  2.5469,  2.4688, -2.0625,  2.8906, -2.0312, -1.8125,  1.8125,  2.7656,  3.6875, -3.1250,  1.9609,  2.1562,  1.6406,  3.1094, -0.6836,  2.3438,  2.3594,  2.0625,  1.4531, -1.0938, -1.3750,  0.9727, -3.7344,  1.6406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,    -26.2500,    -18.5000,    -23.0000,    -26.2500,    -26.6250,    -19.5000,    -18.3750,    -24.0000,    -23.0000,    -25.8750,    -24.6250,    -21.5000,    -24.0000,    -24.5000],
        [     0.0000,    -22.3750,    -17.0000,    -20.5000,    -21.5000,    -21.8750,    -16.0000,    -15.3125,    -19.6250,    -20.0000,    -22.2500,    -22.0000,    -18.6250,    -19.7500,    -22.1250],
        [     0.0000,    -21.8750,    -10.8750,    -16.6250,    -21.3750,    -19.5000,    -16.2500,    -15.8750,    -21.2500,    -16.8750,    -23.2500,    -16.0000,    -16.2500,    -21.1250,    -16.1250],
        [     0.0000,    -20.0000,    -11.3125,    -15.8750,    -19.8750,    -17.8750,    -14.5625,    -13.6250,    -18.7500,    -16.1250,    -20.2500,    -16.1250,    -15.0000,    -18.7500,    -16.5000],
        [     0.0000,    -25.5000,    -19.8750,    -23.2500,    -25.3750,    -27.0000,    -19.2500,    -18.2500,    -22.5000,    -23.1250,    -24.6250,    -25.3750,    -21.7500,    -22.5000,    -25.1250],
        [     0.0000,    -16.1250,     -9.3750,    -12.8750,    -16.1250,    -14.6875,    -11.5000,    -11.2500,    -14.8125,    -13.2500,    -16.7500,    -13.2500,    -12.0625,    -14.7500,    -13.1250],
        [     0.0000,     -3.6719,      3.1406,     -0.3828,     -4.1562,     -1.5781,     -2.5312,     -3.7031,     -4.9062,     -0.9844,     -5.3750,      1.9297,     -2.0625,     -4.6875,      2.0781],
        [     0.0000,    -14.3125,     -5.0000,     -8.8750,    -14.1875,    -12.3125,    -10.6875,     -9.6250,    -14.0000,    -10.1875,    -15.0625,     -8.7500,     -9.3750,    -13.8125,     -9.3125],
        [     0.0000,    -14.7500,     -7.7812,    -11.5000,    -15.2500,    -15.2500,    -11.4375,    -11.3750,    -14.8750,    -12.3125,    -15.5625,    -11.0000,    -12.1875,    -14.6250,    -10.2500],
        [     0.0000,    -18.0000,     -9.4375,    -13.1875,    -17.8750,    -16.8750,    -13.1250,    -12.5625,    -16.6250,    -14.6250,    -18.1250,    -13.5625,    -13.3125,    -16.5000,    -13.3750],
        [     0.0000,    -28.6250,    -20.1250,    -24.7500,    -27.5000,    -27.7500,    -21.1250,    -19.8750,    -25.6250,    -24.1250,    -28.5000,    -26.1250,    -22.8750,    -25.6250,    -26.6250],
        [     0.0000,     -7.3125,      0.0078,     -3.3438,     -7.8438,     -6.3750,     -5.7500,     -6.4688,     -8.0625,     -3.7969,     -8.8125,     -1.3516,     -4.7812,     -7.8125,     -0.7031],
        [     0.0000,    -14.7500,     -5.5312,     -9.4375,    -14.5625,    -12.6875,    -10.9375,     -9.9375,    -14.2500,    -10.6250,    -15.4375,     -9.3750,     -9.8125,    -14.1250,    -10.0000],
        [     0.0000,    -32.7500,    -24.2500,    -29.1250,    -32.2500,    -34.2500,    -25.5000,    -23.3750,    -29.0000,    -28.6250,    -32.2500,    -31.2500,    -27.6250,    -29.1250,    -31.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5869],
        [0.3878],
        [0.3210],
        [0.2272],
        [0.6455],
        [0.3820],
        [0.1332],
        [0.3200],
        [0.2277],
        [0.4241],
        [0.3034],
        [0.2143],
        [0.2995],
        [0.5814]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8711,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8711,     0.1113,     0.0181,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8633,     0.1226,     0.0093,     0.0044,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6836,     0.1245,     0.0659,     0.0327,     0.0928,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0583,     0.0889,     0.0386,     0.0327,     0.2158,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4902,     0.0542,     0.0337,     0.0126,     0.0115,     0.3828,     0.0140,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8398,     0.0132,     0.0026,     0.0011,     0.0013,     0.1318,     0.0005,     0.0095,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3828,     0.0415,     0.0415,     0.0221,     0.0277,     0.3223,     0.0317,     0.1064,     0.0220,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6289,     0.0347,     0.0053,     0.0030,     0.0069,     0.1748,     0.0029,     0.0156,     0.0203,     0.1074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0276,     0.1108,     0.0869,     0.0713,     0.0403,     0.1348,     0.0292,     0.0977,     0.0496,     0.3047,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8086,     0.0188,     0.0010,     0.0007,     0.0066,     0.0708,     0.0009,     0.0045,     0.0256,     0.0447,     0.0157,     0.0011,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0136,     0.0019,     0.0009,     0.0013,     0.0977,     0.0004,     0.0064,     0.0159,     0.0369,     0.0067,     0.0010,     0.0121,     0.0000,     0.0000],
        [    0.2559,     0.0153,     0.0101,     0.0050,     0.0097,     0.1348,     0.0085,     0.0347,     0.0094,     0.1338,     0.0189,     0.0205,     0.3320,     0.0112,     0.0000],
        [    0.3066,     0.0513,     0.0134,     0.0094,     0.0289,     0.0771,     0.0135,     0.0559,     0.1152,     0.0840,     0.0654,     0.0087,     0.0491,     0.0996,     0.0222]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0016,  0.0227,  0.0066,  ..., -0.0104, -0.0128,  0.0187],
        [-0.0258,  0.0053, -0.0053,  ...,  0.0146,  0.0348,  0.0180],
        [ 0.0096, -0.0175, -0.0132,  ...,  0.0084,  0.0272,  0.0137],
        ...,
        [ 0.0133,  0.0024, -0.0249,  ...,  0.0324,  0.0141, -0.0010],
        [-0.0018,  0.0248, -0.0282,  ...,  0.0317,  0.0202,  0.0130],
        [ 0.0038, -0.0130,  0.0180,  ..., -0.0647, -0.0342, -0.0168]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8164, -1.5625,  0.0938, -0.8281, -1.8047,  0.5156,  1.0000, -0.2617, -1.6406,  0.0776,  0.2578, -1.2969, -2.4219, -1.0781,  0.5078,  1.3438, -0.4004, -0.3184,  0.7188, -1.4922, -1.7109, -0.2197, -1.5703,  1.3516, -1.1016,  0.4316,  0.6094,  1.6094,  1.2891, -0.8438, -1.3906,  1.3672,
        -1.4766,  1.6250, -0.6797,  0.9453, -1.1016,  0.0272, -0.9375,  2.2969, -0.6211, -1.8750,  1.3203,  0.8633, -0.6406, -1.4062, -0.7617,  0.6836, -0.4277, -0.6172,  0.0635, -1.5391, -2.3125, -1.8594,  1.8750, -1.8906, -1.9844,  0.7891,  1.5703, -1.6641, -1.1172,  0.8281,  1.4297, -1.7188],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0062, -0.0255,  0.0272,  ...,  0.0182, -0.0048,  0.0235],
        [-0.0170, -0.0178,  0.0297,  ..., -0.0015, -0.0260, -0.0185],
        [-0.0302, -0.0132, -0.0128,  ..., -0.0569, -0.0653, -0.0477],
        ...,
        [-0.0317, -0.0015,  0.0393,  ..., -0.0033, -0.0402, -0.0365],
        [ 0.0186,  0.0137, -0.0096,  ..., -0.0704, -0.0265,  0.0150],
        [ 0.0315, -0.0007,  0.0047,  ..., -0.0036,  0.0118,  0.0295]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6367, -1.3125,  0.9180, -0.1514,  0.3145, -0.0111,  0.2188,  0.0603,  0.7227, -0.2422, -0.5078,  0.8477,  0.2197,  0.0503, -0.3438,  0.2256,  0.1670,  0.9844, -0.7344, -0.3438,  0.5078, -0.1680,  0.0566, -0.7734,  0.3809, -0.6484, -0.0618,  0.1582,  0.0398,  0.2578,  0.2021, -0.0126,
         0.8984, -0.4219,  1.0938,  0.3223,  1.6016,  0.7266,  0.5273, -0.4844,  0.2246, -0.1299, -0.7930, -1.1797,  0.3066,  0.6953,  0.2910,  0.7188, -0.0055,  0.0221,  0.8789, -0.6797,  1.1641,  0.0359, -0.5586,  1.3047,  0.1631, -1.3359,  0.8047,  0.9805,  1.1406, -0.7734,  0.7109, -0.1992],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -1.9062,     -2.0312,     -2.2969,     -2.3594,     -0.6719,     -2.4844,     -1.2969,     -1.6172,     -1.1797,     -2.0000,     -1.7812,     -0.8789,     -1.4141,     -0.6914],
        [     0.0000,     -2.0625,     -3.8750,     -3.9844,     -3.0938,     -1.5000,     -4.1250,     -2.8594,     -1.6406,     -1.7109,     -2.2812,     -3.8594,     -2.8125,     -1.6406,     -2.4688],
        [     0.0000,     -1.9531,     -4.5312,     -5.2812,     -3.6875,     -1.0234,     -5.0000,     -2.4531,     -1.9922,     -1.4297,     -2.7188,     -4.4062,     -1.9297,     -1.9922,     -3.1406],
        [     0.0000,     -1.7031,     -2.3438,     -3.0469,     -1.9922,      0.0027,     -2.2812,     -1.2266,     -1.9453,     -0.8750,     -1.8906,     -1.6484,     -0.0933,     -1.7656,     -0.4238],
        [     0.0000,     -2.2656,     -1.8516,     -2.6875,     -2.8594,     -0.9609,     -1.8984,     -1.0859,     -2.1719,     -1.9688,     -2.6875,     -2.1406,     -0.6992,     -2.0000,     -0.6133],
        [     0.0000,     -2.2031,     -2.6719,     -3.6719,     -3.7500,     -0.2471,     -3.5625,     -1.5781,     -2.2031,     -0.6562,     -2.5312,     -2.7969,     -0.5664,     -2.0156,     -0.8516],
        [     0.0000,     -4.1562,     -5.7500,     -6.6250,     -6.4688,     -1.8516,     -7.4688,     -4.4688,     -4.0938,     -2.3594,     -4.6875,     -6.2812,     -3.4219,     -4.0312,     -4.0625],
        [     0.0000,     -2.2188,     -2.2188,     -2.8594,     -2.6250,     -0.1719,     -2.5000,     -1.2812,     -2.8594,     -0.1445,     -2.0625,     -1.2734,      0.9453,     -2.5781,     -0.0026],
        [     0.0000,     -2.9062,     -4.7812,     -5.3438,     -4.5312,     -1.2812,     -5.4062,     -3.6875,     -3.4375,     -1.7656,     -3.6406,     -4.6875,     -2.1406,     -3.3750,     -3.1562],
        [     0.0000,      1.3906,      1.1484,      0.9492,      0.3750,      1.5859,      0.0530,      1.2656,      0.5820,      2.4062,      0.5312,      2.7188,      2.4219,      1.0703,      2.5000],
        [     0.0000,     -3.7656,     -6.6875,     -7.0938,     -4.8125,     -2.4375,     -6.8438,     -5.1875,     -3.4531,     -2.8906,     -3.9375,     -6.5938,     -4.1250,     -3.6250,     -4.7500],
        [     0.0000,     -4.0938,     -6.0312,     -6.7812,     -6.4688,     -2.1094,     -7.5312,     -4.8438,     -3.9219,     -3.0781,     -4.7812,     -6.7188,     -4.1875,     -4.0000,     -4.9062],
        [     0.0000,     -2.8125,     -3.2344,     -3.9375,     -3.2812,     -0.6406,     -3.4062,     -2.0000,     -3.3125,     -0.6523,     -2.6094,     -2.5312,      0.2617,     -3.1250,     -1.1016],
        [     0.0000,     -1.7891,     -3.1250,     -3.4844,     -2.3594,     -1.3750,     -3.1250,     -1.7031,     -0.9766,     -1.2891,     -1.5391,     -3.5625,     -1.8281,     -1.1250,     -2.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8461],
        [0.9264],
        [0.9248],
        [0.7974],
        [0.6632],
        [0.5311],
        [0.7540],
        [0.5458],
        [0.7786],
        [0.4949],
        [0.8739],
        [0.7931],
        [0.5480],
        [0.6241]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6289, 0.3711, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6797, 0.1553, 0.1650, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1445, 0.1309, 0.1177, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.2188, 0.1309, 0.2520, 0.3184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0605, 0.1865, 0.1494, 0.0913, 0.2715, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.2109, 0.1699, 0.2129, 0.0669, 0.1455, 0.0481, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0322, 0.0830, 0.2559, 0.0322, 0.1494, 0.0330, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0591, 0.0991, 0.1309, 0.1377, 0.0166, 0.1270, 0.0210, 0.2031, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0500, 0.0148, 0.0334, 0.0137, 0.0293, 0.0128, 0.0933, 0.1846, 0.4707, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0500, 0.0552, 0.0493, 0.0310, 0.0064, 0.0317, 0.0058, 0.0923, 0.1240, 0.4863, 0.0679, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0933, 0.0327, 0.0092, 0.1387, 0.0330, 0.0315, 0.0192, 0.1021, 0.2236, 0.2129, 0.0854, 0.0178, 0.0000, 0.0000, 0.0000],
        [0.0304, 0.0173, 0.0151, 0.0542, 0.0057, 0.0292, 0.0087, 0.0771, 0.2354, 0.1670, 0.0732, 0.0145, 0.2734, 0.0000, 0.0000],
        [0.0312, 0.0371, 0.0261, 0.0417, 0.0045, 0.0325, 0.0051, 0.0496, 0.0874, 0.2070, 0.0640, 0.0393, 0.2412, 0.1328, 0.0000],
        [0.0294, 0.0554, 0.0132, 0.0381, 0.0223, 0.0256, 0.0310, 0.0339, 0.1309, 0.0596, 0.1924, 0.0145, 0.0762, 0.1631, 0.1143]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0152,  0.0319,  0.0231,  ...,  0.0197,  0.0430, -0.0313],
        [ 0.0023, -0.0641,  0.0172,  ...,  0.0080, -0.0154,  0.0397],
        [ 0.0235,  0.0087, -0.0429,  ..., -0.0091, -0.0137,  0.0260],
        ...,
        [-0.0068, -0.0018, -0.0101,  ..., -0.0228, -0.0443,  0.0262],
        [-0.0057,  0.0211, -0.0344,  ..., -0.0440,  0.0023,  0.0078],
        [-0.0204, -0.0106, -0.0300,  ..., -0.0401, -0.0171,  0.0111]], device='cuda:0', requires_grad=True)
K: tensor([ 2.3594,  1.3906,  0.3672, -1.2969,  0.0403, -1.0234, -0.8398, -0.3555,  0.3066, -1.8281,  1.0312,  0.4180,  0.5977, -1.2031,  1.0547,  0.4355,  0.5508, -1.1875,  1.6797,  0.1138,  0.9727,  0.7148,  0.0043,  1.4844,  0.9297,  1.1016, -1.9688, -1.7266,  1.8672,  0.2793,  1.4453,  0.7969,
        -0.2119,  1.1094, -2.2031, -1.7031,  1.7188,  0.1367,  0.9766, -1.9688,  0.6562,  0.1982,  0.4336,  0.6836,  1.6484,  0.3633,  1.3047,  1.3203,  0.8359,  0.4336, -0.5195, -2.4375,  1.9766,  1.9531,  0.8555,  0.8047, -1.5938, -0.3535, -1.5469,  0.5000,  0.8477, -0.0557, -0.1748,  1.7969],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0040, -0.0198, -0.0373,  ...,  0.0294, -0.0052, -0.0169],
        [-0.0311, -0.0456,  0.0133,  ..., -0.0261, -0.0171, -0.0697],
        [ 0.0257,  0.0025, -0.0155,  ...,  0.0317,  0.0025,  0.0232],
        ...,
        [-0.0120,  0.0277, -0.0037,  ...,  0.0014,  0.0163,  0.0036],
        [ 0.0216,  0.0074, -0.0064,  ..., -0.0124,  0.0105,  0.0128],
        [-0.0119,  0.0457,  0.0036,  ..., -0.0037,  0.0113,  0.0088]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7422,  0.8359, -0.6094,  1.2266, -1.2344, -0.1748, -1.6641, -1.2500,  0.1064,  0.0209, -0.0928,  1.5312, -1.5625,  0.1836,  0.8125, -0.7266, -0.4375, -0.1377,  1.9531,  1.3828, -0.8281,  0.1299, -0.6836,  0.2578,  0.7383,  0.7617, -0.8164, -0.1050, -0.3125,  1.0469, -0.2598, -0.8828,
         0.2676,  0.7305,  0.5898,  0.0459, -0.7344, -0.7773,  0.6680, -0.5117, -0.8047, -0.0747, -0.1406,  0.1328,  0.0625,  0.8359, -0.4199,  1.3359, -0.5625,  2.7031,  0.8281, -0.3496,  0.6445,  1.2891, -1.0312,  0.7891, -1.4766, -0.5664, -0.1299, -0.4043, -0.1904, -0.6445, -1.2656, -0.9531],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.5234,      0.2451,      0.4590,     -0.4941,      0.0554,     -0.0302,      0.2891,     -0.3711,     -0.9883,     -0.5820,     -1.8750,     -0.3652,     -1.0156,      0.0317],
        [     0.0000,     -1.4766,     -1.4141,      0.5430,      0.6250,     -0.2773,      0.3887,     -0.0004,      0.6641,     -0.8555,     -0.0058,     -2.9062,     -0.5625,      0.0654,     -1.3594],
        [     0.0000,     -0.0967,     -0.2070,      1.4375,      1.0938,      0.9805,      0.9844,      1.5000,      1.8516,      0.4141,      0.5117,     -2.2656,      1.0781,      1.3750,      1.8125],
        [     0.0000,      1.0000,      0.4844,      1.1406,      1.3672,      2.0625,      0.3770,      0.7812,      0.3477,      0.6172,     -0.3906,     -0.9375,      0.1768,     -0.3848,      2.1094],
        [     0.0000,      1.1250,      0.9023,      0.4102,      1.5000,      1.3828,      1.3359,      1.5938,      1.7344,      1.0078,      0.5977,     -0.8047,      1.0078,      0.8984,      2.1875],
        [     0.0000,      0.3652,      0.1533,      0.3770,     -0.7773,     -0.0047,     -1.1094,      1.0625,      0.3516,     -0.4961,     -1.4766,     -1.5000,      0.1187,     -0.3262,      2.2500],
        [     0.0000,     -0.9844,     -0.0391,      1.0859,     -0.9883,      0.5508,     -0.9609,      1.3359,      1.0938,      0.3828,     -0.9688,     -1.8984,      0.6836,      0.5234,      1.9219],
        [     0.0000,      0.5195,      0.8008,      0.8477,     -1.2734,      0.7656,     -1.0312,      1.2344,      1.2422,      1.7266,      0.0237,     -0.0005,      1.8516,      1.1484,      3.1250],
        [     0.0000,     -0.6562,     -1.8828,     -1.0625,     -1.9531,     -1.1953,     -2.0156,     -0.0342,      0.6445,      1.5859,     -0.1533,     -1.4375,      1.3203,      0.7383,      1.1484],
        [     0.0000,      0.0981,     -0.0139,     -0.4805,     -2.0469,     -0.4609,     -2.1562,      0.6133,      0.9062,      2.2656,      0.3008,      1.1094,      2.6094,      1.4922,      2.3906],
        [     0.0000,     -1.0469,     -2.3125,      0.3965,     -1.0391,     -1.0859,     -1.5859,      0.0864,      0.8711,      0.8242,     -0.0879,     -1.6562,      1.1953,      0.9141,     -0.6680],
        [     0.0000,     -0.5625,     -0.6953,      0.5781,     -1.6719,     -0.0420,     -1.2578,      0.9336,      2.0469,      1.7031,      0.8789,     -0.7422,      2.1875,      2.3281,      1.7734],
        [     0.0000,      0.1680,     -0.1807,      0.2871,     -1.9297,      0.0403,     -1.8125,      0.4590,      1.0312,      1.8906,      0.7188,      0.2266,      2.0469,      1.4453,      2.3125],
        [     0.0000,      0.6367,     -0.7969,      0.2578,     -0.2773,     -0.1348,      0.0532,      0.1465,      1.4922,      0.7070,      1.8828,     -0.7070,      0.9531,      1.7109,      1.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4543],
        [0.1759],
        [0.0879],
        [0.1244],
        [0.0866],
        [0.1199],
        [0.1438],
        [0.1145],
        [0.0600],
        [0.0735],
        [0.0621],
        [0.0551],
        [0.0429],
        [0.0374]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0525,     0.9492,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0317,     0.6289,     0.3379,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.5352,     0.0381,     0.4219,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0311,     0.4785,     0.0608,     0.2598,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0127,     0.2715,     0.0557,     0.1445,     0.1992,     0.3164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.0581,     0.0063,     0.0210,     0.0237,     0.0272,     0.8594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0197,     0.0004,     0.0041,     0.0435,     0.0171,     0.5664,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0334,     0.1924,     0.0267,     0.0334,     0.0381,     0.0693,     0.1689,     0.4004,     0.0381,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0225,     0.2080,     0.0260,     0.0698,     0.0239,     0.0962,     0.0193,     0.1836,     0.1201,     0.2305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0092,     0.0859,     0.0195,     0.0175,     0.0042,     0.0223,     0.0034,     0.0376,     0.0227,     0.5430,     0.2344,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0226,     0.0557,     0.0381,     0.4746,     0.0613,     0.0325,     0.0178,     0.2041,     0.0199,     0.0121,     0.0067,     0.0552,     0.0000,     0.0000,     0.0000],
        [    0.0327,     0.0850,     0.0055,     0.0425,     0.0649,     0.0422,     0.0601,     0.2373,     0.1650,     0.0181,     0.0347,     0.0125,     0.1992,     0.0000,     0.0000],
        [    0.0199,     0.1157,     0.0266,     0.0339,     0.0240,     0.0640,     0.0469,     0.1318,     0.0469,     0.1709,     0.0645,     0.0500,     0.1523,     0.0532,     0.0000],
        [    0.0008,     0.1396,     0.0146,     0.0320,     0.0454,     0.1133,     0.1035,     0.1084,     0.1143,     0.0281,     0.0184,     0.0060,     0.1206,     0.1250,     0.0303]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0096,  0.0180,  0.0031,  ..., -0.0232,  0.0011, -0.0474],
        [ 0.0314,  0.0126,  0.0537,  ..., -0.0638, -0.0309,  0.0044],
        [ 0.0006, -0.0124,  0.0227,  ...,  0.0498,  0.0080, -0.0323],
        ...,
        [ 0.0032,  0.0025, -0.0118,  ..., -0.0430, -0.0226,  0.0081],
        [ 0.0198,  0.0018,  0.0337,  ...,  0.0237, -0.0194,  0.0026],
        [-0.0122,  0.0358, -0.0078,  ..., -0.0164, -0.0016,  0.0061]], device='cuda:0', requires_grad=True)
K: tensor([-0.9609, -0.5625,  1.1094,  0.1021, -0.4219,  0.7070, -1.2734,  1.7344, -0.3223,  0.5039, -0.5938, -0.7070, -0.0461,  0.0771,  0.4395, -2.2500, -0.2041, -1.1328, -1.8516, -0.5117, -1.5781, -0.2168, -1.4531,  0.1523, -0.1904, -0.9492,  0.0179, -1.0859,  0.9414, -0.0698,  1.0703,  0.2334,
        -0.1494,  0.0315,  0.8164, -0.0608,  0.2715, -0.0549,  1.2578, -0.4355, -0.5898, -1.1016,  1.0312,  0.9492,  0.6055, -0.0322,  0.2227,  0.1504, -0.9336, -1.2422,  0.6328, -0.4766,  0.4023, -0.1406, -1.0703, -0.5508, -0.9141, -1.1875, -1.3672, -0.9648,  0.3125,  0.7305,  0.5078, -0.4766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0001,      0.0335,     -0.0224,  ...,      0.0028,      0.0052,      0.0282],
        [    -0.0073,     -0.0110,      0.0313,  ...,     -0.0074,     -0.0116,      0.0133],
        [    -0.0093,      0.0353,     -0.0297,  ...,      0.0154,      0.0087,      0.0126],
        ...,
        [     0.0053,      0.0303,     -0.0059,  ...,     -0.0028,      0.0137,     -0.0040],
        [     0.0051,      0.0067,     -0.0024,  ...,      0.0293,     -0.0295,      0.0249],
        [     0.0299,      0.0115,     -0.0324,  ...,     -0.0006,     -0.0052,     -0.0282]], device='cuda:0', requires_grad=True)
Q: tensor([-0.7383, -0.3398,  1.1250,  1.8125, -2.6094,  0.5039,  0.3613,  1.1250, -1.4297, -0.9531, -1.4219, -0.8516, -0.4512, -0.1738,  0.1396, -2.1875, -1.0781, -0.5391, -1.2891, -0.3691, -1.2734, -1.0625, -0.2100,  0.2402, -0.2363,  0.0249, -0.4766, -0.7266, -0.4219, -0.1084,  1.2812,  0.5352,
         1.0078, -0.0325, -0.1289,  0.2061,  1.9219, -0.8906,  1.0547,  0.0303, -1.0312, -0.0603,  0.5234, -0.3496,  0.7969, -0.0262,  1.2656, -0.2852, -1.1484, -0.9531, -0.1221,  0.2656, -0.3965,  0.3262, -1.1016, -0.1602, -0.2441, -0.4102, -1.0781, -0.6641,  0.0796,  2.1094, -1.0781,  1.6328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      2.8906,      1.0938,      2.4219,      0.8672,      0.6641,      0.6328,      1.2969,      0.0104,     -0.6094,     -1.8125,      0.8438,      1.2734,     -0.1357,      0.7773],
        [     0.0000,      2.9844,      2.3594,      4.5938,      3.0000,      3.1406,      2.5312,      3.2969,      2.0625,      0.6250,     -0.3008,      1.5234,      2.4688,      1.7266,      0.8867],
        [     0.0000,      4.7500,      2.0938,      4.5000,      3.9062,      3.4688,      4.4688,      5.4062,      3.0938,      0.5000,     -0.3516,      1.4141,      3.6094,      2.4375,      1.5547],
        [     0.0000,      2.7344,      0.6719,      2.1250,      1.7031,      1.6406,      2.2812,      3.5625,      0.9531,      0.6406,     -1.0469,      0.8789,      2.5000,      0.2080,      1.6953],
        [     0.0000,      3.0625,      1.4766,      2.4375,      2.7500,      3.2188,      3.5781,      3.3281,      2.1562,      1.8906,      0.4746,      1.0625,      1.8125,      1.1641,      1.7969],
        [     0.0000,      2.3750,      0.1582,      1.3516,      1.4766,      1.6172,      5.0625,      3.0938,      2.0469,      1.2109,      0.3418,      0.5664,      0.5977,      0.6055,      2.3906],
        [     0.0000,      3.2812,     -0.5156,      1.7188,      4.0938,      3.1562,      6.6562,      6.1562,      4.5625,     -0.1045,      0.3730,     -0.5977,      2.6094,      3.1875,      1.3906],
        [     0.0000,      1.7500,     -0.2236,      0.0016,      0.1309,      0.7266,      1.6172,      2.4844,      0.1270,      1.6406,     -0.2988,      0.5742,      1.3203,     -0.6289,      1.5703],
        [     0.0000,      2.2188,      0.1455,      1.1328,      0.0654,      1.4531,     -0.1494,      2.1094,      1.6797,      2.3281,      2.6719,      1.2266,      2.2188,      1.9297,      1.1953],
        [     0.0000,      2.2344,      0.7461,      0.6328,     -0.7773,      0.8867,     -1.0156,      1.3984,      0.8984,      4.0625,      3.2344,      2.1875,      3.0781,      1.3281,      2.1250],
        [     0.0000,      0.8984,      0.5234,      3.0469,      0.9961,      0.3594,     -0.2402,      2.2031,     -0.1245,     -0.6211,     -1.2266,      0.8945,      1.4688,     -0.4766,     -0.5703],
        [     0.0000,      0.9531,     -1.7891,      0.2617,      0.6797,      0.2520,      0.6055,      1.9844,      1.6172,     -0.5977,      0.0557,     -0.9648,      1.8047,      1.9531,      0.6328],
        [     0.0000,      1.7578,      0.2891,      0.5352,      0.1865,      1.1719,      0.8594,      1.8906,      0.8555,      2.1562,      1.1719,      0.9219,      2.0312,      0.9844,      1.6016],
        [     0.0000,      5.1562,      2.8906,      3.6875,      4.0312,      4.9375,      4.8438,      4.9062,      4.9375,      3.5469,      3.1250,      2.0000,      5.0000,      5.0312,      3.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1678],
        [0.0642],
        [0.0398],
        [0.1175],
        [0.0493],
        [0.0550],
        [0.0120],
        [0.0342],
        [0.0547],
        [0.0139],
        [0.0833],
        [0.0840],
        [0.0286],
        [0.0023]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1367 a:0.0747 and:0.1631 and:0.1177om:0.0742,:0.5039 a:0.0708ills:0.1128)
ills
------
		( a:0.0747 and:0.1631 and:0.1177om:0.0742,:0.5039 a:0.0708ills:0.1128,:0.4199)
, and are the most common types of the most common types of the most
@ 2050 train 5.0678 , allloss: 5.0688, dt: 1721.84ms, fracRes: 0.2764, norm(attn): 0.1787, norm(output): 0.3535, norm(x): 0.3003, norm(y): 1.0099, norm:1.5886, tok/sec: 76123.21, flops:79.89, batch-reuse:1
@ 2051 train 5.1778 , allloss: 5.1791, dt: 1319.50ms, fracRes: 0.2752, norm(attn): 0.1777, norm(output): 0.3516, norm(x): 0.3014, norm(y): 1.0099, norm:1.4150, tok/sec: 99334.22, flops:104.25, batch-reuse:1
@ 2052 train 5.0978 , allloss: 5.0990, dt: 1318.77ms, fracRes: 0.2718, norm(attn): 0.1826, norm(output): 0.3555, norm(x): 0.3031, norm(y): 1.0098, norm:1.6843, tok/sec: 99389.70, flops:104.31, batch-reuse:1
@ 2053 train 5.1042 , allloss: 5.1053, dt: 1320.65ms, fracRes: 0.2740, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3011, norm(y): 1.0099, norm:1.2884, tok/sec: 99247.89, flops:104.16, batch-reuse:1
@ 2054 train 5.0738 , allloss: 5.0790, dt: 1320.68ms, fracRes: 0.2730, norm(attn): 0.1816, norm(output): 0.3535, norm(x): 0.3016, norm(y): 1.0099, norm:1.6903, tok/sec: 99245.56, flops:104.16, batch-reuse:1
@ 2055 train 5.1309 , allloss: 5.1326, dt: 1313.68ms, fracRes: 0.2734, norm(attn): 0.1816, norm(output): 0.3555, norm(x): 0.3014, norm(y): 1.0099, norm:1.4032, tok/sec: 99774.59, flops:104.72, batch-reuse:1
@ 2056 train 5.1240 , allloss: 5.1253, dt: 1324.39ms, fracRes: 0.2750, norm(attn): 0.1826, norm(output): 0.3535, norm(x): 0.3014, norm(y): 1.0099, norm:1.3439, tok/sec: 98968.08, flops:103.87, batch-reuse:1
@ 2057 train 5.1907 , allloss: 5.1923, dt: 1329.11ms, fracRes: 0.2768, norm(attn): 0.1807, norm(output): 0.3535, norm(x): 0.3011, norm(y): 1.0099, norm:1.9670, tok/sec: 98616.20, flops:103.50, batch-reuse:1
@ 2058 train 5.1362 , allloss: 5.1372, dt: 1327.37ms, fracRes: 0.2767, norm(attn): 0.1797, norm(output): 0.3555, norm(x): 0.3007, norm(y): 1.0100, norm:1.8287, tok/sec: 98745.96, flops:103.64, batch-reuse:1
@ 2059 train 5.0477 , allloss: 5.0494, dt: 1321.59ms, fracRes: 0.2745, norm(attn): 0.1816, norm(output): 0.3535, norm(x): 0.3007, norm(y): 1.0099, norm:1.4631, tok/sec: 99177.71, flops:104.09, batch-reuse:1
@ 2060 train 5.0708 , allloss: 5.0719, dt: 1308.16ms, fracRes: 0.2765, norm(attn): 0.1777, norm(output): 0.3535, norm(x): 0.2985, norm(y): 1.0100, norm:1.6268, tok/sec: 100195.74, flops:105.16, batch-reuse:1
@ 2061 train 5.1306 , allloss: 5.1323, dt: 1306.73ms, fracRes: 0.2779, norm(attn): 0.1787, norm(output): 0.3555, norm(x): 0.3008, norm(y): 1.0100, norm:1.7129, tok/sec: 100305.58, flops:105.27, batch-reuse:1
@ 2062 train 5.0516 , allloss: 5.0533, dt: 1325.21ms, fracRes: 0.2776, norm(attn): 0.1807, norm(output): 0.3555, norm(x): 0.3021, norm(y): 1.0099, norm:1.5884, tok/sec: 98906.83, flops:103.80, batch-reuse:1
@ 2063 train 5.1512 , allloss: 5.1530, dt: 1308.82ms, fracRes: 0.2792, norm(attn): 0.1797, norm(output): 0.3535, norm(x): 0.3011, norm(y): 1.0099, norm:1.4541, tok/sec: 100145.24, flops:105.10, batch-reuse:1
@ 2064 train 5.0554 , allloss: 5.0566, dt: 1283.39ms, fracRes: 0.2788, norm(attn): 0.1807, norm(output): 0.3535, norm(x): 0.3014, norm(y): 1.0099, norm:1.5241, tok/sec: 102129.17, flops:107.19, batch-reuse:1
@ 2065 train 5.7216 , allloss: 5.7223, dt: 1301.95ms, fracRes: 0.2815, norm(attn): 0.1777, norm(output): 0.3535, norm(x): 0.3008, norm(y): 1.0099, norm:2.2009, tok/sec: 100673.86, flops:105.66, batch-reuse:1
@ 2066 train 5.1579 , allloss: 5.1587, dt: 1308.46ms, fracRes: 0.2829, norm(attn): 0.1787, norm(output): 0.3535, norm(x): 0.3006, norm(y): 1.0100, norm:2.1595, tok/sec: 100172.49, flops:105.13, batch-reuse:1
@ 2067 train 5.0918 , allloss: 5.0928, dt: 1320.15ms, fracRes: 0.2829, norm(attn): 0.1807, norm(output): 0.3555, norm(x): 0.3007, norm(y): 1.0100, norm:1.4223, tok/sec: 99285.69, flops:104.20, batch-reuse:1
@ 2068 train 5.1625 , allloss: 5.1639, dt: 1305.49ms, fracRes: 0.2791, norm(attn): 0.1797, norm(output): 0.3594, norm(x): 0.3034, norm(y): 1.0099, norm:1.4633, tok/sec: 100400.58, flops:105.37, batch-reuse:1
@ 2069 train 5.1492 , allloss: 5.1508, dt: 1311.31ms, fracRes: 0.2774, norm(attn): 0.1826, norm(output): 0.3594, norm(x): 0.3038, norm(y): 1.0099, norm:1.7787, tok/sec: 99954.93, flops:104.90, batch-reuse:1
@ 2070 train 5.2404 , allloss: 5.2423, dt: 1286.85ms, fracRes: 0.2753, norm(attn): 0.1807, norm(output): 0.3555, norm(x): 0.3043, norm(y): 1.0098, norm:1.8533, tok/sec: 101854.67, flops:106.90, batch-reuse:1
@ 2071 train 5.1585 , allloss: 5.1604, dt: 1282.53ms, fracRes: 0.2778, norm(attn): 0.1787, norm(output): 0.3535, norm(x): 0.3024, norm(y): 1.0099, norm:1.4871, tok/sec: 102198.22, flops:107.26, batch-reuse:1
@ 2072 train 5.1318 , allloss: 5.1331, dt: 1266.08ms, fracRes: 0.2786, norm(attn): 0.1836, norm(output): 0.3535, norm(x): 0.3025, norm(y): 1.0099, norm:1.4781, tok/sec: 103526.24, flops:108.65, batch-reuse:1
@ 2073 train 5.0810 , allloss: 5.0832, dt: 1307.84ms, fracRes: 0.2808, norm(attn): 0.1777, norm(output): 0.3535, norm(x): 0.3019, norm(y): 1.0100, norm:1.3489, tok/sec: 100219.95, flops:105.18, batch-reuse:1
@ 2074 train 5.1300 , allloss: 5.1320, dt: 1306.08ms, fracRes: 0.2788, norm(attn): 0.1816, norm(output): 0.3594, norm(x): 0.3036, norm(y): 1.0099, norm:1.4392, tok/sec: 100355.35, flops:105.32, batch-reuse:1
@ 2075 train 5.0779 , allloss: 5.0785, dt: 1277.93ms, fracRes: 0.2785, norm(attn): 0.1816, norm(output): 0.3574, norm(x): 0.3026, norm(y): 1.0100, norm:1.3623, tok/sec: 102566.15, flops:107.65, batch-reuse:1
@ 2076 train 5.0387 , allloss: 5.0395, dt: 1286.74ms, fracRes: 0.2771, norm(attn): 0.1787, norm(output): 0.3594, norm(x): 0.3034, norm(y): 1.0100, norm:1.5511, tok/sec: 101863.79, flops:106.91, batch-reuse:1
@ 2077 train 5.1029 , allloss: 5.1045, dt: 1295.45ms, fracRes: 0.2738, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3044, norm(y): 1.0100, norm:1.3731, tok/sec: 101178.43, flops:106.19, batch-reuse:1
@ 2078 train 5.2826 , allloss: 5.2843, dt: 1283.29ms, fracRes: 0.2778, norm(attn): 0.1836, norm(output): 0.3574, norm(x): 0.3017, norm(y): 1.0101, norm:1.8051, tok/sec: 102137.58, flops:107.20, batch-reuse:1
@ 2079 train 5.1686 , allloss: 5.1705, dt: 1288.10ms, fracRes: 0.2796, norm(attn): 0.1787, norm(output): 0.3594, norm(x): 0.3019, norm(y): 1.0101, norm:2.0950, tok/sec: 101755.98, flops:106.79, batch-reuse:1
@ 2080 train 5.1606 , allloss: 5.1624, dt: 1277.67ms, fracRes: 0.2776, norm(attn): 0.1865, norm(output): 0.3633, norm(x): 0.3047, norm(y): 1.0099, norm:1.7034, tok/sec: 102587.02, flops:107.67, batch-reuse:1
@ 2081 train 5.1663 , allloss: 5.1682, dt: 1275.40ms, fracRes: 0.2826, norm(attn): 0.1777, norm(output): 0.3594, norm(x): 0.3019, norm(y): 1.0101, norm:1.4260, tok/sec: 102769.05, flops:107.86, batch-reuse:1
@ 2082 train 5.0813 , allloss: 5.0827, dt: 1301.69ms, fracRes: 0.2826, norm(attn): 0.1758, norm(output): 0.3594, norm(x): 0.3022, norm(y): 1.0101, norm:1.7652, tok/sec: 100693.47, flops:105.68, batch-reuse:1
@ 2083 train 5.0773 , allloss: 5.0787, dt: 1330.13ms, fracRes: 0.2842, norm(attn): 0.1777, norm(output): 0.3613, norm(x): 0.3030, norm(y): 1.0101, norm:1.6256, tok/sec: 98540.60, flops:103.42, batch-reuse:1
@ 2084 train 5.2046 , allloss: 5.2055, dt: 1320.37ms, fracRes: 0.2852, norm(attn): 0.1787, norm(output): 0.3555, norm(x): 0.3017, norm(y): 1.0101, norm:1.7759, tok/sec: 99269.15, flops:104.18, batch-reuse:1
@ 2085 train 5.1477 , allloss: 5.1489, dt: 1317.29ms, fracRes: 0.2815, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3044, norm(y): 1.0099, norm:1.7939, tok/sec: 99501.50, flops:104.43, batch-reuse:1
@ 2086 train 5.0442 , allloss: 5.0452, dt: 1278.29ms, fracRes: 0.2826, norm(attn): 0.1807, norm(output): 0.3633, norm(x): 0.3050, norm(y): 1.0100, norm:1.7563, tok/sec: 102537.11, flops:107.61, batch-reuse:1
@ 2087 train 5.0611 , allloss: 5.0626, dt: 1297.44ms, fracRes: 0.2830, norm(attn): 0.1787, norm(output): 0.3633, norm(x): 0.3042, norm(y): 1.0100, norm:1.4788, tok/sec: 101023.72, flops:106.03, batch-reuse:1
@ 2088 train 5.1355 , allloss: 5.1370, dt: 1325.04ms, fracRes: 0.2849, norm(attn): 0.1787, norm(output): 0.3594, norm(x): 0.3042, norm(y): 1.0100, norm:1.4837, tok/sec: 98919.61, flops:103.82, batch-reuse:1
@ 2089 train 5.0751 , allloss: 5.0775, dt: 1297.01ms, fracRes: 0.2835, norm(attn): 0.1816, norm(output): 0.3613, norm(x): 0.3042, norm(y): 1.0100, norm:1.3706, tok/sec: 101057.13, flops:106.06, batch-reuse:1
@ 2090 train 5.0950 , allloss: 5.0963, dt: 1322.47ms, fracRes: 0.2844, norm(attn): 0.1855, norm(output): 0.3594, norm(x): 0.3035, norm(y): 1.0100, norm:1.2956, tok/sec: 99111.59, flops:104.02, batch-reuse:1
@ 2091 train 5.0638 , allloss: 5.0647, dt: 1305.17ms, fracRes: 0.2831, norm(attn): 0.1836, norm(output): 0.3574, norm(x): 0.3023, norm(y): 1.0101, norm:1.2371, tok/sec: 100425.30, flops:105.40, batch-reuse:1
@ 2092 train 5.1009 , allloss: 5.1019, dt: 1284.17ms, fracRes: 0.2817, norm(attn): 0.1826, norm(output): 0.3633, norm(x): 0.3048, norm(y): 1.0100, norm:1.4921, tok/sec: 102067.58, flops:107.12, batch-reuse:1
@ 2093 train 5.0281 , allloss: 5.0292, dt: 1283.43ms, fracRes: 0.2865, norm(attn): 0.1768, norm(output): 0.3594, norm(x): 0.3016, norm(y): 1.0102, norm:1.5446, tok/sec: 102125.98, flops:107.18, batch-reuse:1
@ 2094 train 5.0564 , allloss: 5.0577, dt: 1279.36ms, fracRes: 0.2860, norm(attn): 0.1797, norm(output): 0.3594, norm(x): 0.3016, norm(y): 1.0102, norm:1.4555, tok/sec: 102451.35, flops:107.52, batch-reuse:1
@ 2095 train 4.9712 , allloss: 4.9723, dt: 1304.53ms, fracRes: 0.2809, norm(attn): 0.1865, norm(output): 0.3633, norm(x): 0.3049, norm(y): 1.0100, norm:1.5050, tok/sec: 100474.43, flops:105.45, batch-reuse:1
@ 2096 train 5.1450 , allloss: 5.1459, dt: 1314.34ms, fracRes: 0.2842, norm(attn): 0.1816, norm(output): 0.3594, norm(x): 0.3020, norm(y): 1.0102, norm:1.6352, tok/sec: 99724.88, flops:104.66, batch-reuse:1
@ 2097 train 5.0268 , allloss: 5.0279, dt: 1320.89ms, fracRes: 0.2833, norm(attn): 0.1816, norm(output): 0.3594, norm(x): 0.3034, norm(y): 1.0102, norm:1.5041, tok/sec: 99229.76, flops:104.14, batch-reuse:1
@ 2098 train 4.9602 , allloss: 4.9610, dt: 1308.51ms, fracRes: 0.2821, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3048, norm(y): 1.0101, norm:1.3411, tok/sec: 100168.82, flops:105.13, batch-reuse:1
@ 2099 train 5.0550 , allloss: 5.0567, dt: 1298.80ms, fracRes: 0.2800, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3058, norm(y): 1.0100, norm:1.2475, tok/sec: 100917.72, flops:105.92, batch-reuse:1
@ 2100 train 5.0522 , allloss: 5.0536, dt: 1307.64ms, fracRes: 0.2789, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3065, norm(y): 1.0100, norm:1.3090, tok/sec: 100235.26, flops:105.20, batch-reuse:1
@ 2101 train 4.9805 , allloss: 4.9814, dt: 1312.12ms, fracRes: 0.2781, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3064, norm(y): 1.0100, norm:1.1099, tok/sec: 99893.40, flops:104.84, batch-reuse:1
@ 2102 train 5.0329 , allloss: 5.0338, dt: 1316.77ms, fracRes: 0.2810, norm(attn): 0.1855, norm(output): 0.3633, norm(x): 0.3073, norm(y): 1.0100, norm:1.3866, tok/sec: 99540.92, flops:104.47, batch-reuse:1
@ 2103 train 4.9920 , allloss: 4.9926, dt: 1310.51ms, fracRes: 0.2844, norm(attn): 0.1816, norm(output): 0.3594, norm(x): 0.3050, norm(y): 1.0102, norm:1.3292, tok/sec: 100016.25, flops:104.97, batch-reuse:1
@ 2104 train 5.0268 , allloss: 5.0275, dt: 1324.54ms, fracRes: 0.2828, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3054, norm(y): 1.0102, norm:1.1992, tok/sec: 98956.41, flops:103.86, batch-reuse:1
@ 2105 train 5.0921 , allloss: 5.0930, dt: 1322.16ms, fracRes: 0.2798, norm(attn): 0.1836, norm(output): 0.3652, norm(x): 0.3068, norm(y): 1.0101, norm:1.4986, tok/sec: 99134.64, flops:104.04, batch-reuse:1
@ 2106 train 5.0340 , allloss: 5.0353, dt: 1320.35ms, fracRes: 0.2803, norm(attn): 0.1816, norm(output): 0.3652, norm(x): 0.3063, norm(y): 1.0101, norm:1.3977, tok/sec: 99270.42, flops:104.19, batch-reuse:1
@ 2107 train 5.0511 , allloss: 5.0519, dt: 1324.14ms, fracRes: 0.2802, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3057, norm(y): 1.0102, norm:1.3180, tok/sec: 98986.33, flops:103.89, batch-reuse:1
@ 2108 train 5.1723 , allloss: 5.1732, dt: 1312.70ms, fracRes: 0.2810, norm(attn): 0.1855, norm(output): 0.3652, norm(x): 0.3061, norm(y): 1.0101, norm:1.5945, tok/sec: 99849.18, flops:104.79, batch-reuse:1
@ 2109 train 5.0787 , allloss: 5.0794, dt: 1306.73ms, fracRes: 0.2801, norm(attn): 0.1855, norm(output): 0.3652, norm(x): 0.3064, norm(y): 1.0102, norm:1.4106, tok/sec: 100305.36, flops:105.27, batch-reuse:1
@ 2110 train 4.9960 , allloss: 4.9971, dt: 1299.79ms, fracRes: 0.2816, norm(attn): 0.1816, norm(output): 0.3613, norm(x): 0.3059, norm(y): 1.0102, norm:1.6288, tok/sec: 100840.84, flops:105.83, batch-reuse:1
@ 2111 train 4.9708 , allloss: 4.9717, dt: 1294.14ms, fracRes: 0.2812, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3074, norm(y): 1.0101, norm:1.3249, tok/sec: 101281.49, flops:106.30, batch-reuse:1
@ 2112 train 5.0071 , allloss: 5.0086, dt: 1290.35ms, fracRes: 0.2804, norm(attn): 0.1846, norm(output): 0.3652, norm(x): 0.3081, norm(y): 1.0100, norm:1.3615, tok/sec: 101578.61, flops:106.61, batch-reuse:1
@ 2113 train 5.0196 , allloss: 5.0206, dt: 1299.85ms, fracRes: 0.2828, norm(attn): 0.1846, norm(output): 0.3672, norm(x): 0.3077, norm(y): 1.0101, norm:1.2160, tok/sec: 100836.44, flops:105.83, batch-reuse:1
@ 2114 train 5.0790 , allloss: 5.0799, dt: 1313.73ms, fracRes: 0.2877, norm(attn): 0.1787, norm(output): 0.3613, norm(x): 0.3042, norm(y): 1.0102, norm:1.5361, tok/sec: 99771.17, flops:104.71, batch-reuse:1
@ 2115 train 5.0503 , allloss: 5.0513, dt: 1331.87ms, fracRes: 0.2845, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3064, norm(y): 1.0101, norm:1.3506, tok/sec: 98412.02, flops:103.29, batch-reuse:1
@ 2116 train 5.0765 , allloss: 5.0774, dt: 1306.70ms, fracRes: 0.2826, norm(attn): 0.1836, norm(output): 0.3652, norm(x): 0.3077, norm(y): 1.0101, norm:1.4235, tok/sec: 100307.83, flops:105.27, batch-reuse:1
@ 2117 train 5.0250 , allloss: 5.0259, dt: 1298.49ms, fracRes: 0.2821, norm(attn): 0.1855, norm(output): 0.3652, norm(x): 0.3074, norm(y): 1.0102, norm:1.3971, tok/sec: 100942.23, flops:105.94, batch-reuse:1
@ 2118 train 5.0048 , allloss: 5.0058, dt: 1331.36ms, fracRes: 0.2830, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3060, norm(y): 1.0102, norm:1.4835, tok/sec: 98449.89, flops:103.32, batch-reuse:1
@ 2119 train 5.0831 , allloss: 5.0845, dt: 1284.82ms, fracRes: 0.2820, norm(attn): 0.1836, norm(output): 0.3652, norm(x): 0.3079, norm(y): 1.0101, norm:1.2700, tok/sec: 102015.84, flops:107.07, batch-reuse:1
@ 2120 train 5.0036 , allloss: 5.0043, dt: 1299.89ms, fracRes: 0.2837, norm(attn): 0.1836, norm(output): 0.3652, norm(x): 0.3070, norm(y): 1.0102, norm:1.4827, tok/sec: 100832.79, flops:105.83, batch-reuse:1
@ 2121 train 5.0874 , allloss: 5.0883, dt: 1296.92ms, fracRes: 0.2850, norm(attn): 0.1807, norm(output): 0.3594, norm(x): 0.3058, norm(y): 1.0102, norm:1.5454, tok/sec: 101064.00, flops:106.07, batch-reuse:1
@ 2122 train 5.0176 , allloss: 5.0184, dt: 1318.58ms, fracRes: 0.2844, norm(attn): 0.1855, norm(output): 0.3633, norm(x): 0.3073, norm(y): 1.0102, norm:1.3705, tok/sec: 99403.57, flops:104.33, batch-reuse:1
@ 2123 train 5.0587 , allloss: 5.0596, dt: 1332.97ms, fracRes: 0.2822, norm(attn): 0.1865, norm(output): 0.3652, norm(x): 0.3103, norm(y): 1.0100, norm:1.2846, tok/sec: 98331.10, flops:103.20, batch-reuse:1
@ 2124 train 4.9958 , allloss: 4.9964, dt: 1328.72ms, fracRes: 0.2893, norm(attn): 0.1787, norm(output): 0.3652, norm(x): 0.3058, norm(y): 1.0104, norm:1.6780, tok/sec: 98645.38, flops:103.53, batch-reuse:1
@ 2125 train 5.0579 , allloss: 5.0587, dt: 1327.92ms, fracRes: 0.2894, norm(attn): 0.1777, norm(output): 0.3652, norm(x): 0.3045, norm(y): 1.0105, norm:1.5727, tok/sec: 98704.55, flops:103.59, batch-reuse:1
@ 2126 train 5.0042 , allloss: 5.0051, dt: 1334.45ms, fracRes: 0.2843, norm(attn): 0.1816, norm(output): 0.3652, norm(x): 0.3070, norm(y): 1.0103, norm:1.4992, tok/sec: 98221.83, flops:103.09, batch-reuse:1
@ 2127 train 5.0454 , allloss: 5.0465, dt: 1281.41ms, fracRes: 0.2818, norm(attn): 0.1846, norm(output): 0.3672, norm(x): 0.3075, norm(y): 1.0102, norm:1.4916, tok/sec: 102287.04, flops:107.35, batch-reuse:1
@ 2128 train 4.9625 , allloss: 4.9635, dt: 1301.35ms, fracRes: 0.2821, norm(attn): 0.1855, norm(output): 0.3652, norm(x): 0.3082, norm(y): 1.0102, norm:1.4180, tok/sec: 100719.74, flops:105.71, batch-reuse:1
@ 2129 train 5.0165 , allloss: 5.0175, dt: 1333.37ms, fracRes: 0.2860, norm(attn): 0.1836, norm(output): 0.3633, norm(x): 0.3069, norm(y): 1.0102, norm:1.3278, tok/sec: 98301.30, flops:103.17, batch-reuse:1
@ 2130 train 4.9547 , allloss: 4.9560, dt: 1295.46ms, fracRes: 0.2891, norm(attn): 0.1846, norm(output): 0.3633, norm(x): 0.3054, norm(y): 1.0103, norm:1.3690, tok/sec: 101177.77, flops:106.19, batch-reuse:1
@ 2131 train 5.0458 , allloss: 5.0468, dt: 1329.96ms, fracRes: 0.2853, norm(attn): 0.1836, norm(output): 0.3652, norm(x): 0.3086, norm(y): 1.0101, norm:1.4500, tok/sec: 98553.65, flops:103.43, batch-reuse:1
@ 2132 train 5.1057 , allloss: 5.1065, dt: 1278.17ms, fracRes: 0.2853, norm(attn): 0.1836, norm(output): 0.3672, norm(x): 0.3092, norm(y): 1.0101, norm:1.3577, tok/sec: 102546.54, flops:107.62, batch-reuse:1
@ 2133 train 5.0299 , allloss: 5.0307, dt: 1271.42ms, fracRes: 0.2874, norm(attn): 0.1826, norm(output): 0.3652, norm(x): 0.3076, norm(y): 1.0102, norm:1.3156, tok/sec: 103091.34, flops:108.20, batch-reuse:1
@ 2134 train 4.9786 , allloss: 4.9800, dt: 1302.31ms, fracRes: 0.2877, norm(attn): 0.1826, norm(output): 0.3652, norm(x): 0.3084, norm(y): 1.0103, norm:1.4077, tok/sec: 100645.89, flops:105.63, batch-reuse:1
@ 2135 train 5.0444 , allloss: 5.0455, dt: 1320.50ms, fracRes: 0.2883, norm(attn): 0.1797, norm(output): 0.3652, norm(x): 0.3078, norm(y): 1.0103, norm:1.2810, tok/sec: 99259.52, flops:104.17, batch-reuse:1
@ 2136 train 4.9663 , allloss: 4.9671, dt: 1303.75ms, fracRes: 0.2905, norm(attn): 0.1797, norm(output): 0.3652, norm(x): 0.3070, norm(y): 1.0103, norm:1.6466, tok/sec: 100534.92, flops:105.51, batch-reuse:1
@ 2137 train 4.9287 , allloss: 4.9295, dt: 1329.66ms, fracRes: 0.2875, norm(attn): 0.1846, norm(output): 0.3691, norm(x): 0.3096, norm(y): 1.0102, norm:1.5496, tok/sec: 98575.72, flops:103.46, batch-reuse:1
@ 2138 train 4.9691 , allloss: 4.9700, dt: 1327.90ms, fracRes: 0.2864, norm(attn): 0.1826, norm(output): 0.3672, norm(x): 0.3103, norm(y): 1.0102, norm:1.3006, tok/sec: 98706.29, flops:103.59, batch-reuse:1
@ 2139 train 5.0376 , allloss: 5.0388, dt: 1333.81ms, fracRes: 0.2866, norm(attn): 0.1816, norm(output): 0.3652, norm(x): 0.3088, norm(y): 1.0102, norm:1.5569, tok/sec: 98269.06, flops:103.14, batch-reuse:1
@ 2140 train 5.0026 , allloss: 5.0040, dt: 1281.43ms, fracRes: 0.2854, norm(attn): 0.1816, norm(output): 0.3652, norm(x): 0.3087, norm(y): 1.0102, norm:1.2275, tok/sec: 102285.65, flops:107.35, batch-reuse:1
@ 2141 train 4.9680 , allloss: 4.9691, dt: 1322.57ms, fracRes: 0.2815, norm(attn): 0.1855, norm(output): 0.3672, norm(x): 0.3109, norm(y): 1.0102, norm:1.5599, tok/sec: 99103.87, flops:104.01, batch-reuse:1
@ 2142 train 4.9287 , allloss: 4.9294, dt: 1326.38ms, fracRes: 0.2801, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3121, norm(y): 1.0102, norm:1.3234, tok/sec: 98819.47, flops:103.71, batch-reuse:1
@ 2143 train 5.0253 , allloss: 5.0261, dt: 1326.07ms, fracRes: 0.2823, norm(attn): 0.1836, norm(output): 0.3691, norm(x): 0.3105, norm(y): 1.0104, norm:1.4583, tok/sec: 98842.37, flops:103.74, batch-reuse:1
@ 2144 train 4.9724 , allloss: 4.9733, dt: 1308.25ms, fracRes: 0.2816, norm(attn): 0.1865, norm(output): 0.3672, norm(x): 0.3109, norm(y): 1.0103, norm:1.4449, tok/sec: 100189.12, flops:105.15, batch-reuse:1
@ 2145 train 5.0074 , allloss: 5.0089, dt: 1302.50ms, fracRes: 0.2810, norm(attn): 0.1885, norm(output): 0.3691, norm(x): 0.3124, norm(y): 1.0102, norm:1.3539, tok/sec: 100631.37, flops:105.61, batch-reuse:1
@ 2146 train 5.2973 , allloss: 5.2986, dt: 1327.68ms, fracRes: 0.2842, norm(attn): 0.1855, norm(output): 0.3691, norm(x): 0.3115, norm(y): 1.0103, norm:1.7129, tok/sec: 98722.72, flops:103.61, batch-reuse:1
@ 2147 train 4.9118 , allloss: 4.9125, dt: 1315.15ms, fracRes: 0.2840, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3112, norm(y): 1.0103, norm:1.4144, tok/sec: 99663.15, flops:104.60, batch-reuse:1
@ 2148 train 4.9497 , allloss: 4.9508, dt: 1315.45ms, fracRes: 0.2851, norm(attn): 0.1855, norm(output): 0.3672, norm(x): 0.3111, norm(y): 1.0103, norm:1.5225, tok/sec: 99640.79, flops:104.57, batch-reuse:1
@ 2149 train 4.9519 , allloss: 4.9529, dt: 1300.96ms, fracRes: 0.2862, norm(attn): 0.1855, norm(output): 0.3691, norm(x): 0.3109, norm(y): 1.0103, norm:1.4772, tok/sec: 100750.51, flops:105.74, batch-reuse:1
@ 2150 train 4.9774 , allloss: 4.9785, dt: 1328.65ms, fracRes: 0.2898, norm(attn): 0.1836, norm(output): 0.3711, norm(x): 0.3100, norm(y): 1.0103, norm:1.3953, tok/sec: 98650.85, flops:103.54, batch-reuse:1
@ 2151 train 4.9176 , allloss: 4.9189, dt: 1313.59ms, fracRes: 0.2898, norm(attn): 0.1836, norm(output): 0.3711, norm(x): 0.3095, norm(y): 1.0103, norm:1.3705, tok/sec: 99781.40, flops:104.72, batch-reuse:1
@ 2152 train 4.9857 , allloss: 4.9868, dt: 1296.24ms, fracRes: 0.2921, norm(attn): 0.1826, norm(output): 0.3691, norm(x): 0.3098, norm(y): 1.0103, norm:1.3735, tok/sec: 101116.87, flops:106.12, batch-reuse:1
@ 2153 train 4.9470 , allloss: 4.9488, dt: 1326.53ms, fracRes: 0.2926, norm(attn): 0.1846, norm(output): 0.3691, norm(x): 0.3100, norm(y): 1.0103, norm:1.3191, tok/sec: 98807.97, flops:103.70, batch-reuse:1
@ 2154 train 4.9891 , allloss: 4.9908, dt: 1320.10ms, fracRes: 0.2914, norm(attn): 0.1846, norm(output): 0.3672, norm(x): 0.3095, norm(y): 1.0103, norm:1.4138, tok/sec: 99289.53, flops:104.21, batch-reuse:1
@ 2155 train 4.9713 , allloss: 4.9722, dt: 1305.90ms, fracRes: 0.2864, norm(attn): 0.1846, norm(output): 0.3691, norm(x): 0.3116, norm(y): 1.0103, norm:1.3154, tok/sec: 100369.40, flops:105.34, batch-reuse:1
@ 2156 train 4.9450 , allloss: 4.9460, dt: 1284.04ms, fracRes: 0.2827, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3126, norm(y): 1.0104, norm:1.7374, tok/sec: 102078.01, flops:107.13, batch-reuse:1
@ 2157 train 5.0293 , allloss: 5.0306, dt: 1297.84ms, fracRes: 0.2813, norm(attn): 0.1885, norm(output): 0.3711, norm(x): 0.3132, norm(y): 1.0103, norm:1.4347, tok/sec: 100992.33, flops:105.99, batch-reuse:1
@ 2158 train 5.0108 , allloss: 5.0122, dt: 1318.42ms, fracRes: 0.2823, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3119, norm(y): 1.0103, norm:1.4148, tok/sec: 99415.95, flops:104.34, batch-reuse:1
@ 2159 train 4.9477 , allloss: 4.9486, dt: 1280.86ms, fracRes: 0.2832, norm(attn): 0.1875, norm(output): 0.3691, norm(x): 0.3106, norm(y): 1.0103, norm:1.5308, tok/sec: 102331.59, flops:107.40, batch-reuse:1
@ 2160 train 5.0163 , allloss: 5.0181, dt: 1310.90ms, fracRes: 0.2829, norm(attn): 0.1895, norm(output): 0.3711, norm(x): 0.3126, norm(y): 1.0103, norm:1.6020, tok/sec: 99986.18, flops:104.94, batch-reuse:1
@ 2161 train 4.9991 , allloss: 5.0008, dt: 1339.04ms, fracRes: 0.2855, norm(attn): 0.1895, norm(output): 0.3672, norm(x): 0.3118, norm(y): 1.0104, norm:1.6726, tok/sec: 97884.79, flops:102.73, batch-reuse:1
@ 2162 train 4.9055 , allloss: 4.9069, dt: 1327.08ms, fracRes: 0.2835, norm(attn): 0.1865, norm(output): 0.3691, norm(x): 0.3122, norm(y): 1.0104, norm:1.6491, tok/sec: 98767.02, flops:103.66, batch-reuse:1
@ 2163 train 4.9935 , allloss: 4.9945, dt: 1318.46ms, fracRes: 0.2861, norm(attn): 0.1855, norm(output): 0.3691, norm(x): 0.3115, norm(y): 1.0104, norm:1.5811, tok/sec: 99413.28, flops:104.34, batch-reuse:1
@ 2164 train 4.8733 , allloss: 4.8748, dt: 1297.15ms, fracRes: 0.2866, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3131, norm(y): 1.0103, norm:1.5106, tok/sec: 101045.91, flops:106.05, batch-reuse:1
@ 2165 train 4.8590 , allloss: 4.8602, dt: 1326.94ms, fracRes: 0.2901, norm(attn): 0.1826, norm(output): 0.3672, norm(x): 0.3099, norm(y): 1.0105, norm:1.6912, tok/sec: 98778.01, flops:103.67, batch-reuse:1
@ 2166 train 4.9440 , allloss: 4.9452, dt: 1315.50ms, fracRes: 0.2885, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3123, norm(y): 1.0103, norm:1.4414, tok/sec: 99636.69, flops:104.57, batch-reuse:1
@ 2167 train 4.9752 , allloss: 4.9761, dt: 1289.78ms, fracRes: 0.2877, norm(attn): 0.1875, norm(output): 0.3672, norm(x): 0.3128, norm(y): 1.0103, norm:1.5678, tok/sec: 101623.24, flops:106.66, batch-reuse:1
@ 2168 train 4.9677 , allloss: 4.9684, dt: 1306.09ms, fracRes: 0.2909, norm(attn): 0.1855, norm(output): 0.3652, norm(x): 0.3104, norm(y): 1.0104, norm:1.3975, tok/sec: 100354.39, flops:105.32, batch-reuse:1
@ 2169 train 4.9821 , allloss: 4.9834, dt: 1299.75ms, fracRes: 0.2938, norm(attn): 0.1865, norm(output): 0.3672, norm(x): 0.3108, norm(y): 1.0103, norm:1.3707, tok/sec: 100843.98, flops:105.84, batch-reuse:1
@ 2170 train 4.9810 , allloss: 4.9824, dt: 1279.92ms, fracRes: 0.2946, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3102, norm(y): 1.0104, norm:1.3334, tok/sec: 102406.51, flops:107.48, batch-reuse:1
@ 2171 train 4.9960 , allloss: 4.9967, dt: 1329.34ms, fracRes: 0.2931, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3117, norm(y): 1.0104, norm:1.3228, tok/sec: 98599.32, flops:103.48, batch-reuse:1
@ 2172 train 5.0127 , allloss: 5.0135, dt: 1307.53ms, fracRes: 0.2932, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3108, norm(y): 1.0104, norm:1.3228, tok/sec: 100244.05, flops:105.21, batch-reuse:1
@ 2173 train 4.9392 , allloss: 4.9402, dt: 1304.45ms, fracRes: 0.2925, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3110, norm(y): 1.0104, norm:1.2898, tok/sec: 100480.66, flops:105.46, batch-reuse:1
@ 2174 train 4.9855 , allloss: 4.9865, dt: 1291.15ms, fracRes: 0.2943, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3106, norm(y): 1.0104, norm:1.2142, tok/sec: 101515.53, flops:106.54, batch-reuse:1
@ 2175 train 4.9320 , allloss: 4.9329, dt: 1292.63ms, fracRes: 0.2981, norm(attn): 0.1826, norm(output): 0.3691, norm(x): 0.3092, norm(y): 1.0106, norm:1.3118, tok/sec: 101399.48, flops:106.42, batch-reuse:1
@ 2176 train 4.9247 , allloss: 4.9256, dt: 1306.76ms, fracRes: 0.2932, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3121, norm(y): 1.0105, norm:1.5368, tok/sec: 100302.81, flops:105.27, batch-reuse:1
@ 2177 train 4.9335 , allloss: 4.9346, dt: 1323.48ms, fracRes: 0.2896, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3130, norm(y): 1.0104, norm:1.3262, tok/sec: 99036.24, flops:103.94, batch-reuse:1
@ 2178 train 4.9934 , allloss: 4.9944, dt: 1309.38ms, fracRes: 0.2918, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3113, norm(y): 1.0105, norm:1.1951, tok/sec: 100102.50, flops:105.06, batch-reuse:1
@ 2179 train 4.9860 , allloss: 4.9871, dt: 1279.01ms, fracRes: 0.2901, norm(attn): 0.1875, norm(output): 0.3711, norm(x): 0.3121, norm(y): 1.0104, norm:1.5299, tok/sec: 102479.24, flops:107.55, batch-reuse:1
@ 2180 train 4.8829 , allloss: 4.8838, dt: 1306.19ms, fracRes: 0.2883, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3133, norm(y): 1.0104, norm:1.2459, tok/sec: 100346.86, flops:105.32, batch-reuse:1
@ 2181 train 4.9062 , allloss: 4.9070, dt: 1281.56ms, fracRes: 0.2899, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3148, norm(y): 1.0104, norm:1.6098, tok/sec: 102275.47, flops:107.34, batch-reuse:1
@ 2182 train 5.0017 , allloss: 5.0025, dt: 1320.00ms, fracRes: 0.2895, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3151, norm(y): 1.0103, norm:1.3427, tok/sec: 99296.74, flops:104.21, batch-reuse:1
@ 2183 train 4.8136 , allloss: 4.8146, dt: 1297.35ms, fracRes: 0.2899, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3139, norm(y): 1.0104, norm:1.3068, tok/sec: 101030.53, flops:106.03, batch-reuse:1
@ 2184 train 4.7858 , allloss: 4.7865, dt: 1311.20ms, fracRes: 0.2900, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3129, norm(y): 1.0105, norm:1.4252, tok/sec: 99963.11, flops:104.91, batch-reuse:1
@ 2185 train 4.9554 , allloss: 4.9568, dt: 1339.86ms, fracRes: 0.2866, norm(attn): 0.1885, norm(output): 0.3730, norm(x): 0.3148, norm(y): 1.0104, norm:1.4461, tok/sec: 97824.97, flops:102.67, batch-reuse:1
@ 2186 train 4.8543 , allloss: 4.8549, dt: 1310.46ms, fracRes: 0.2868, norm(attn): 0.1865, norm(output): 0.3711, norm(x): 0.3141, norm(y): 1.0105, norm:1.5880, tok/sec: 100019.85, flops:104.97, batch-reuse:1
@ 2187 train 4.8384 , allloss: 4.8390, dt: 1307.29ms, fracRes: 0.2892, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3143, norm(y): 1.0105, norm:1.3252, tok/sec: 100262.20, flops:105.23, batch-reuse:1
@ 2188 train 4.7963 , allloss: 4.7973, dt: 1318.37ms, fracRes: 0.2886, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3147, norm(y): 1.0104, norm:1.3818, tok/sec: 99419.55, flops:104.34, batch-reuse:1
@ 2189 train 4.8711 , allloss: 4.8719, dt: 1327.24ms, fracRes: 0.2936, norm(attn): 0.1846, norm(output): 0.3711, norm(x): 0.3114, norm(y): 1.0106, norm:1.4187, tok/sec: 98755.54, flops:103.65, batch-reuse:1
@ 2190 train 4.7662 , allloss: 4.7667, dt: 1327.21ms, fracRes: 0.2949, norm(attn): 0.1904, norm(output): 0.3711, norm(x): 0.3116, norm(y): 1.0105, norm:1.5952, tok/sec: 98757.35, flops:103.65, batch-reuse:1
@ 2191 train 4.8913 , allloss: 4.8918, dt: 1265.41ms, fracRes: 0.2922, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3134, norm(y): 1.0105, norm:1.5729, tok/sec: 103581.05, flops:108.71, batch-reuse:1
@ 2192 train 4.8657 , allloss: 4.8665, dt: 1273.83ms, fracRes: 0.2917, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3133, norm(y): 1.0105, norm:1.5158, tok/sec: 102895.90, flops:107.99, batch-reuse:1
@ 2193 train 4.8226 , allloss: 4.8233, dt: 1292.96ms, fracRes: 0.2911, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3136, norm(y): 1.0105, norm:1.4027, tok/sec: 101373.45, flops:106.39, batch-reuse:1
@ 2194 train 4.9293 , allloss: 4.9304, dt: 1307.77ms, fracRes: 0.2896, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3149, norm(y): 1.0104, norm:1.3865, tok/sec: 100225.85, flops:105.19, batch-reuse:1
@ 2195 train 4.9143 , allloss: 4.9150, dt: 1258.52ms, fracRes: 0.2956, norm(attn): 0.1816, norm(output): 0.3730, norm(x): 0.3130, norm(y): 1.0106, norm:1.6303, tok/sec: 104147.68, flops:109.30, batch-reuse:1
@ 2196 train 4.9351 , allloss: 4.9359, dt: 1286.07ms, fracRes: 0.2952, norm(attn): 0.1807, norm(output): 0.3730, norm(x): 0.3127, norm(y): 1.0106, norm:1.4699, tok/sec: 101916.48, flops:106.96, batch-reuse:1
@ 2197 train 4.7994 , allloss: 4.8005, dt: 1272.53ms, fracRes: 0.2932, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3125, norm(y): 1.0106, norm:1.5447, tok/sec: 103001.39, flops:108.10, batch-reuse:1
@ 2198 train 4.8789 , allloss: 4.8802, dt: 1264.07ms, fracRes: 0.2918, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3137, norm(y): 1.0105, norm:1.3772, tok/sec: 103690.18, flops:108.82, batch-reuse:1
@ 2199 train 4.9079 , allloss: 4.9091, dt: 1267.84ms, fracRes: 0.2939, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3134, norm(y): 1.0106, norm:1.3566, tok/sec: 103382.14, flops:108.50, batch-reuse:1
@ 2200 train 4.8601 , allloss: 4.8616, dt: 1278.94ms, fracRes: 0.2913, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3154, norm(y): 1.0105, norm:1.4104, tok/sec: 102485.22, flops:107.56, batch-reuse:1
@ 2201 train 4.8907 , allloss: 4.8918, dt: 1284.40ms, fracRes: 0.2898, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3168, norm(y): 1.0104, norm:1.7135, tok/sec: 102049.53, flops:107.10, batch-reuse:1
@ 2202 train 4.9675 , allloss: 4.9686, dt: 1294.57ms, fracRes: 0.2948, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3151, norm(y): 1.0105, norm:1.5691, tok/sec: 101247.50, flops:106.26, batch-reuse:1
@ 2203 train 4.8969 , allloss: 4.8978, dt: 1301.68ms, fracRes: 0.2950, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3143, norm(y): 1.0106, norm:1.5018, tok/sec: 100694.78, flops:105.68, batch-reuse:1
@ 2204 train 4.9014 , allloss: 4.9023, dt: 1270.52ms, fracRes: 0.2921, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3163, norm(y): 1.0105, norm:1.3612, tok/sec: 103163.83, flops:108.27, batch-reuse:1
@ 2205 train 4.8895 , allloss: 4.8911, dt: 1289.07ms, fracRes: 0.2902, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3177, norm(y): 1.0104, norm:1.4917, tok/sec: 101679.42, flops:106.71, batch-reuse:1
@ 2206 train 4.8186 , allloss: 4.8197, dt: 1286.17ms, fracRes: 0.2937, norm(attn): 0.1826, norm(output): 0.3730, norm(x): 0.3156, norm(y): 1.0106, norm:1.4778, tok/sec: 101908.75, flops:106.96, batch-reuse:1
@ 2207 train 4.8353 , allloss: 4.8361, dt: 1276.30ms, fracRes: 0.2969, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3144, norm(y): 1.0106, norm:1.4854, tok/sec: 102696.94, flops:107.78, batch-reuse:1
@ 2208 train 4.9445 , allloss: 4.9456, dt: 1292.17ms, fracRes: 0.2949, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3158, norm(y): 1.0105, norm:1.3312, tok/sec: 101435.49, flops:106.46, batch-reuse:1
@ 2209 train 4.7919 , allloss: 4.7930, dt: 1291.64ms, fracRes: 0.2967, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3146, norm(y): 1.0105, norm:1.2625, tok/sec: 101477.49, flops:106.50, batch-reuse:1
@ 2210 train 4.7355 , allloss: 4.7363, dt: 1282.67ms, fracRes: 0.2954, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3153, norm(y): 1.0106, norm:1.4617, tok/sec: 102187.20, flops:107.25, batch-reuse:1
@ 2211 train 4.8858 , allloss: 4.8873, dt: 1279.32ms, fracRes: 0.2943, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3165, norm(y): 1.0105, norm:1.6276, tok/sec: 102454.75, flops:107.53, batch-reuse:1
@ 2212 train 4.7484 , allloss: 4.7497, dt: 1286.29ms, fracRes: 0.2927, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3165, norm(y): 1.0105, norm:1.4280, tok/sec: 101899.30, flops:106.95, batch-reuse:1
@ 2213 train 5.1477 , allloss: 5.1496, dt: 1283.85ms, fracRes: 0.2999, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3147, norm(y): 1.0107, norm:1.7214, tok/sec: 102092.60, flops:107.15, batch-reuse:1
@ 2214 train 5.0010 , allloss: 5.0090, dt: 1282.13ms, fracRes: 0.3013, norm(attn): 0.1836, norm(output): 0.3711, norm(x): 0.3132, norm(y): 1.0107, norm:1.9536, tok/sec: 102230.02, flops:107.29, batch-reuse:1
@ 2215 train 4.8770 , allloss: 4.8780, dt: 1277.56ms, fracRes: 0.3005, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3148, norm(y): 1.0106, norm:1.4254, tok/sec: 102595.46, flops:107.68, batch-reuse:1
@ 2216 train 4.9329 , allloss: 4.9341, dt: 1288.47ms, fracRes: 0.2996, norm(attn): 0.1875, norm(output): 0.3730, norm(x): 0.3165, norm(y): 1.0104, norm:1.6355, tok/sec: 101726.81, flops:106.76, batch-reuse:1
@ 2217 train 4.8235 , allloss: 4.8245, dt: 1273.46ms, fracRes: 0.3028, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3134, norm(y): 1.0106, norm:1.2439, tok/sec: 102926.24, flops:108.02, batch-reuse:1
@ 2218 train 4.8141 , allloss: 4.8149, dt: 1276.13ms, fracRes: 0.2996, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3154, norm(y): 1.0107, norm:1.4837, tok/sec: 102710.91, flops:107.80, batch-reuse:1
@ 2219 train 4.9101 , allloss: 4.9109, dt: 1282.12ms, fracRes: 0.2988, norm(attn): 0.1836, norm(output): 0.3730, norm(x): 0.3141, norm(y): 1.0107, norm:1.4317, tok/sec: 102230.51, flops:107.29, batch-reuse:1
@ 2220 train 4.8844 , allloss: 4.8850, dt: 1274.31ms, fracRes: 0.2972, norm(attn): 0.1846, norm(output): 0.3730, norm(x): 0.3147, norm(y): 1.0106, norm:1.4000, tok/sec: 102857.01, flops:107.95, batch-reuse:1
@ 2221 train 4.7473 , allloss: 4.7483, dt: 1271.35ms, fracRes: 0.2974, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3157, norm(y): 1.0105, norm:1.4955, tok/sec: 103096.39, flops:108.20, batch-reuse:1
@ 2222 train 4.8853 , allloss: 4.8863, dt: 1288.93ms, fracRes: 0.2957, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3149, norm(y): 1.0105, norm:1.2281, tok/sec: 101690.52, flops:106.73, batch-reuse:1
@ 2223 train 4.8094 , allloss: 4.8114, dt: 1274.45ms, fracRes: 0.2979, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3156, norm(y): 1.0105, norm:1.5281, tok/sec: 102845.83, flops:107.94, batch-reuse:1
@ 2224 train 4.9006 , allloss: 4.9030, dt: 1314.86ms, fracRes: 0.3012, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3148, norm(y): 1.0106, norm:1.5741, tok/sec: 99685.00, flops:104.62, batch-reuse:1
@ 2225 train 4.9330 , allloss: 4.9357, dt: 1306.75ms, fracRes: 0.2954, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3171, norm(y): 1.0105, norm:1.6280, tok/sec: 100303.86, flops:105.27, batch-reuse:1
@ 2226 train 4.9146 , allloss: 4.9203, dt: 1292.34ms, fracRes: 0.2949, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3175, norm(y): 1.0106, norm:1.8259, tok/sec: 101422.49, flops:106.44, batch-reuse:1
@ 2227 train 4.8316 , allloss: 4.8329, dt: 1296.84ms, fracRes: 0.2969, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3170, norm(y): 1.0106, norm:1.3814, tok/sec: 101070.07, flops:106.07, batch-reuse:1
@ 2228 train 4.8594 , allloss: 4.8608, dt: 1294.69ms, fracRes: 0.2974, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3154, norm(y): 1.0106, norm:1.5261, tok/sec: 101237.92, flops:106.25, batch-reuse:1
@ 2229 train 5.0169 , allloss: 5.0186, dt: 1277.39ms, fracRes: 0.2956, norm(attn): 0.1895, norm(output): 0.3730, norm(x): 0.3186, norm(y): 1.0105, norm:1.4186, tok/sec: 102609.30, flops:107.69, batch-reuse:1
@ 2230 train 5.0405 , allloss: 5.0414, dt: 1304.33ms, fracRes: 0.2978, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3170, norm(y): 1.0107, norm:1.4455, tok/sec: 100489.95, flops:105.47, batch-reuse:1
@ 2231 train 5.0938 , allloss: 5.0949, dt: 1272.14ms, fracRes: 0.2991, norm(attn): 0.1855, norm(output): 0.3730, norm(x): 0.3153, norm(y): 1.0107, norm:1.2506, tok/sec: 103032.74, flops:108.13, batch-reuse:1
@ 2232 train 5.0267 , allloss: 5.0275, dt: 1281.03ms, fracRes: 0.2974, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3175, norm(y): 1.0106, norm:1.3794, tok/sec: 102317.88, flops:107.38, batch-reuse:1
@ 2233 train 4.9750 , allloss: 4.9760, dt: 1277.05ms, fracRes: 0.2965, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3175, norm(y): 1.0106, norm:1.2864, tok/sec: 102636.49, flops:107.72, batch-reuse:1
@ 2234 train 5.1530 , allloss: 5.1549, dt: 1296.35ms, fracRes: 0.2990, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3186, norm(y): 1.0107, norm:1.7992, tok/sec: 101108.39, flops:106.12, batch-reuse:1
@ 2235 train 5.0147 , allloss: 5.0160, dt: 1284.11ms, fracRes: 0.2986, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3201, norm(y): 1.0106, norm:1.5371, tok/sec: 102071.92, flops:107.13, batch-reuse:1
@ 2236 train 4.9808 , allloss: 4.9819, dt: 1291.11ms, fracRes: 0.2983, norm(attn): 0.1895, norm(output): 0.3750, norm(x): 0.3207, norm(y): 1.0105, norm:1.3753, tok/sec: 101518.77, flops:106.55, batch-reuse:1
@ 2237 train 5.0748 , allloss: 5.0763, dt: 1270.47ms, fracRes: 0.3011, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3176, norm(y): 1.0106, norm:1.4785, tok/sec: 103168.13, flops:108.28, batch-reuse:1
@ 2238 train 4.9558 , allloss: 4.9569, dt: 1277.11ms, fracRes: 0.2995, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3195, norm(y): 1.0106, norm:1.5762, tok/sec: 102631.93, flops:107.71, batch-reuse:1
@ 2239 train 4.9285 , allloss: 4.9296, dt: 1288.98ms, fracRes: 0.3021, norm(attn): 0.1865, norm(output): 0.3730, norm(x): 0.3163, norm(y): 1.0108, norm:1.3003, tok/sec: 101686.25, flops:106.72, batch-reuse:1
@ 2240 train 5.0206 , allloss: 5.0218, dt: 1288.02ms, fracRes: 0.2992, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3176, norm(y): 1.0107, norm:1.1706, tok/sec: 101762.35, flops:106.80, batch-reuse:1
@ 2241 train 5.0637 , allloss: 5.0646, dt: 1290.41ms, fracRes: 0.2966, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3192, norm(y): 1.0107, norm:1.2173, tok/sec: 101574.23, flops:106.60, batch-reuse:1
@ 2242 train 4.9805 , allloss: 4.9813, dt: 1319.57ms, fracRes: 0.2945, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3206, norm(y): 1.0107, norm:1.1725, tok/sec: 99329.21, flops:104.25, batch-reuse:1
@ 2243 train 5.0431 , allloss: 5.0437, dt: 1268.46ms, fracRes: 0.2978, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3186, norm(y): 1.0107, norm:1.6104, tok/sec: 103331.69, flops:108.45, batch-reuse:1
@ 2244 train 5.0365 , allloss: 5.0374, dt: 1278.23ms, fracRes: 0.2991, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3197, norm(y): 1.0107, norm:1.4636, tok/sec: 102542.18, flops:107.62, batch-reuse:1
@ 2245 train 4.9790 , allloss: 4.9806, dt: 1272.97ms, fracRes: 0.2999, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3189, norm(y): 1.0107, norm:1.5216, tok/sec: 102965.41, flops:108.06, batch-reuse:1
@ 2246 train 4.9406 , allloss: 4.9416, dt: 1279.01ms, fracRes: 0.3000, norm(attn): 0.1885, norm(output): 0.3750, norm(x): 0.3184, norm(y): 1.0107, norm:1.2901, tok/sec: 102478.95, flops:107.55, batch-reuse:1
@ 2247 train 4.9968 , allloss: 4.9976, dt: 1286.53ms, fracRes: 0.3014, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3186, norm(y): 1.0107, norm:1.3408, tok/sec: 101879.97, flops:106.92, batch-reuse:1
@ 2248 train 5.0601 , allloss: 5.0608, dt: 1294.16ms, fracRes: 0.3019, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3188, norm(y): 1.0107, norm:1.3629, tok/sec: 101279.70, flops:106.29, batch-reuse:1
@ 2249 train 4.8773 , allloss: 4.8783, dt: 1331.92ms, fracRes: 0.3010, norm(attn): 0.1855, norm(output): 0.3750, norm(x): 0.3194, norm(y): 1.0107, norm:1.3959, tok/sec: 98408.48, flops:103.28, batch-reuse:1
@ 2250 train 5.0891 , allloss: 5.0902, dt: 1282.55ms, fracRes: 0.3025, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3186, norm(y): 1.0107, norm:1.5583, tok/sec: 102196.53, flops:107.26, batch-reuse:1
@ 2251 train 4.9187 , allloss: 4.9211, dt: 1294.02ms, fracRes: 0.2973, norm(attn): 0.1914, norm(output): 0.3750, norm(x): 0.3206, norm(y): 1.0106, norm:1.5730, tok/sec: 101290.87, flops:106.31, batch-reuse:1
@ 2252 train 4.9497 , allloss: 4.9520, dt: 1276.00ms, fracRes: 0.3010, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3190, norm(y): 1.0107, norm:1.6213, tok/sec: 102720.83, flops:107.81, batch-reuse:1
@ 2253 train 4.9457 , allloss: 4.9467, dt: 1286.06ms, fracRes: 0.3005, norm(attn): 0.1865, norm(output): 0.3750, norm(x): 0.3176, norm(y): 1.0107, norm:1.4857, tok/sec: 101917.48, flops:106.96, batch-reuse:1
@ 2254 train 5.0202 , allloss: 5.0215, dt: 1305.77ms, fracRes: 0.2996, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3197, norm(y): 1.0106, norm:1.4119, tok/sec: 100379.24, flops:105.35, batch-reuse:1
@ 2255 train 4.9925 , allloss: 4.9955, dt: 1321.53ms, fracRes: 0.3013, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3201, norm(y): 1.0107, norm:1.5998, tok/sec: 99182.00, flops:104.09, batch-reuse:1
@ 2256 train 5.0971 , allloss: 5.0988, dt: 1308.85ms, fracRes: 0.3043, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3191, norm(y): 1.0108, norm:1.4457, tok/sec: 100142.63, flops:105.10, batch-reuse:1
@ 2257 train 5.0110 , allloss: 5.0130, dt: 1295.51ms, fracRes: 0.3048, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3191, norm(y): 1.0107, norm:1.5766, tok/sec: 101173.94, flops:106.18, batch-reuse:1
@ 2258 train 4.9426 , allloss: 4.9442, dt: 1291.62ms, fracRes: 0.3068, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3197, norm(y): 1.0107, norm:1.2408, tok/sec: 101479.04, flops:106.50, batch-reuse:1
@ 2259 train 5.0681 , allloss: 5.0697, dt: 1266.97ms, fracRes: 0.3043, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3213, norm(y): 1.0106, norm:1.2643, tok/sec: 103453.32, flops:108.58, batch-reuse:1
@ 2260 train 4.9709 , allloss: 4.9718, dt: 1267.86ms, fracRes: 0.3036, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3219, norm(y): 1.0107, norm:1.8862, tok/sec: 103380.25, flops:108.50, batch-reuse:1
@ 2261 train 5.0137 , allloss: 5.0145, dt: 1265.51ms, fracRes: 0.3042, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3217, norm(y): 1.0108, norm:1.4209, tok/sec: 103572.11, flops:108.70, batch-reuse:1
@ 2262 train 5.0006 , allloss: 5.0023, dt: 1296.01ms, fracRes: 0.3041, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3205, norm(y): 1.0108, norm:1.4782, tok/sec: 101134.85, flops:106.14, batch-reuse:1
@ 2263 train 5.0593 , allloss: 5.0605, dt: 1276.69ms, fracRes: 0.3019, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3213, norm(y): 1.0107, norm:1.2944, tok/sec: 102665.28, flops:107.75, batch-reuse:1
@ 2264 train 5.0070 , allloss: 5.0078, dt: 1282.24ms, fracRes: 0.3027, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3214, norm(y): 1.0107, norm:1.3301, tok/sec: 102221.12, flops:107.28, batch-reuse:1
@ 2265 train 4.9813 , allloss: 4.9827, dt: 1295.65ms, fracRes: 0.3026, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3208, norm(y): 1.0108, norm:1.4449, tok/sec: 101162.88, flops:106.17, batch-reuse:1
@ 2266 train 4.8869 , allloss: 4.8877, dt: 1283.47ms, fracRes: 0.3000, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3211, norm(y): 1.0107, norm:1.4953, tok/sec: 102123.18, flops:107.18, batch-reuse:1
@ 2267 train 5.0088 , allloss: 5.0097, dt: 1265.64ms, fracRes: 0.3042, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3200, norm(y): 1.0108, norm:1.3127, tok/sec: 103562.07, flops:108.69, batch-reuse:1
@ 2268 train 5.0514 , allloss: 5.0530, dt: 1300.91ms, fracRes: 0.3053, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3197, norm(y): 1.0108, norm:1.5396, tok/sec: 100754.38, flops:105.74, batch-reuse:1
@ 2269 train 5.0548 , allloss: 5.0564, dt: 1281.03ms, fracRes: 0.3048, norm(attn): 0.1875, norm(output): 0.3750, norm(x): 0.3189, norm(y): 1.0108, norm:1.4521, tok/sec: 102317.69, flops:107.38, batch-reuse:1
@ 2270 train 5.0937 , allloss: 5.0946, dt: 1265.17ms, fracRes: 0.3045, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3207, norm(y): 1.0108, norm:1.5707, tok/sec: 103600.57, flops:108.73, batch-reuse:1
@ 2271 train 5.0206 , allloss: 5.0221, dt: 1301.64ms, fracRes: 0.3039, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3213, norm(y): 1.0108, norm:1.5210, tok/sec: 100697.80, flops:105.68, batch-reuse:1
@ 2272 train 4.8889 , allloss: 4.8902, dt: 1289.15ms, fracRes: 0.3042, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3214, norm(y): 1.0108, norm:1.3916, tok/sec: 101672.82, flops:106.71, batch-reuse:1
@ 2273 train 5.0413 , allloss: 5.0420, dt: 1278.18ms, fracRes: 0.3057, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3219, norm(y): 1.0108, norm:1.4979, tok/sec: 102546.07, flops:107.62, batch-reuse:1
@ 2274 train 4.9512 , allloss: 4.9522, dt: 1303.74ms, fracRes: 0.3060, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3214, norm(y): 1.0109, norm:1.3904, tok/sec: 100535.47, flops:105.51, batch-reuse:1
@ 2275 train 4.9841 , allloss: 4.9853, dt: 1330.13ms, fracRes: 0.3043, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3219, norm(y): 1.0108, norm:1.3501, tok/sec: 98540.77, flops:103.42, batch-reuse:1
@ 2276 train 5.0095 , allloss: 5.0105, dt: 1317.74ms, fracRes: 0.3052, norm(attn): 0.1855, norm(output): 0.3770, norm(x): 0.3212, norm(y): 1.0108, norm:1.4527, tok/sec: 99467.47, flops:104.39, batch-reuse:1
@ 2277 train 4.9630 , allloss: 4.9640, dt: 1289.36ms, fracRes: 0.3064, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3211, norm(y): 1.0108, norm:1.3709, tok/sec: 101656.33, flops:106.69, batch-reuse:1
@ 2278 train 5.0685 , allloss: 5.0697, dt: 1269.41ms, fracRes: 0.3049, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3226, norm(y): 1.0108, norm:1.4305, tok/sec: 103254.16, flops:108.37, batch-reuse:1
@ 2279 train 4.9433 , allloss: 4.9441, dt: 1293.09ms, fracRes: 0.3021, norm(attn): 0.1875, norm(output): 0.3789, norm(x): 0.3222, norm(y): 1.0108, norm:1.2652, tok/sec: 101363.19, flops:106.38, batch-reuse:1
@ 2280 train 4.9145 , allloss: 4.9153, dt: 1294.79ms, fracRes: 0.3036, norm(attn): 0.1865, norm(output): 0.3789, norm(x): 0.3212, norm(y): 1.0108, norm:1.1634, tok/sec: 101230.22, flops:106.24, batch-reuse:1
@ 2281 train 4.8561 , allloss: 4.8571, dt: 1274.73ms, fracRes: 0.3017, norm(attn): 0.1904, norm(output): 0.3809, norm(x): 0.3238, norm(y): 1.0107, norm:1.7534, tok/sec: 102822.94, flops:107.91, batch-reuse:1
@ 2282 train 5.0600 , allloss: 5.0611, dt: 1277.63ms, fracRes: 0.3027, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3221, norm(y): 1.0108, norm:1.4722, tok/sec: 102589.70, flops:107.67, batch-reuse:1
@ 2283 train 4.9353 , allloss: 4.9361, dt: 1283.52ms, fracRes: 0.3051, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3209, norm(y): 1.0109, norm:1.5563, tok/sec: 102118.78, flops:107.18, batch-reuse:1
@ 2284 train 4.8793 , allloss: 4.8801, dt: 1265.47ms, fracRes: 0.3008, norm(attn): 0.1914, norm(output): 0.3770, norm(x): 0.3236, norm(y): 1.0108, norm:1.5566, tok/sec: 103576.12, flops:108.71, batch-reuse:1
@ 2285 train 4.9079 , allloss: 4.9086, dt: 1317.56ms, fracRes: 0.3041, norm(attn): 0.1895, norm(output): 0.3770, norm(x): 0.3222, norm(y): 1.0109, norm:1.3440, tok/sec: 99481.15, flops:104.41, batch-reuse:1
@ 2286 train 4.9824 , allloss: 4.9834, dt: 1337.32ms, fracRes: 0.3055, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3230, norm(y): 1.0108, norm:1.5018, tok/sec: 98011.29, flops:102.86, batch-reuse:1
@ 2287 train 4.9633 , allloss: 4.9648, dt: 1291.95ms, fracRes: 0.3064, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3217, norm(y): 1.0109, norm:1.3429, tok/sec: 101453.03, flops:106.48, batch-reuse:1
@ 2288 train 5.0187 , allloss: 5.0199, dt: 1582.07ms, fracRes: 0.3020, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3232, norm(y): 1.0108, norm:1.4835, tok/sec: 82848.49, flops:86.95, batch-reuse:1
@ 2289 train 4.9085 , allloss: 4.9095, dt: 1286.44ms, fracRes: 0.3000, norm(attn): 0.1914, norm(output): 0.3770, norm(x): 0.3232, norm(y): 1.0108, norm:1.5099, tok/sec: 101887.01, flops:106.93, batch-reuse:1
@ 2290 train 4.8749 , allloss: 4.8760, dt: 1299.31ms, fracRes: 0.3006, norm(attn): 0.1914, norm(output): 0.3770, norm(x): 0.3219, norm(y): 1.0109, norm:1.4808, tok/sec: 100878.46, flops:105.87, batch-reuse:1
@ 2291 train 5.0345 , allloss: 5.0360, dt: 1276.47ms, fracRes: 0.3013, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3233, norm(y): 1.0108, norm:1.3244, tok/sec: 102683.13, flops:107.77, batch-reuse:1
@ 2292 train 4.9307 , allloss: 4.9323, dt: 1290.40ms, fracRes: 0.3018, norm(attn): 0.1904, norm(output): 0.3789, norm(x): 0.3248, norm(y): 1.0108, norm:1.3943, tok/sec: 101574.78, flops:106.60, batch-reuse:1
@ 2293 train 5.0106 , allloss: 5.0116, dt: 1290.71ms, fracRes: 0.3050, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3237, norm(y): 1.0109, norm:1.4942, tok/sec: 101550.29, flops:106.58, batch-reuse:1
@ 2294 train 4.9776 , allloss: 4.9786, dt: 1276.40ms, fracRes: 0.3073, norm(attn): 0.1865, norm(output): 0.3770, norm(x): 0.3225, norm(y): 1.0109, norm:1.2820, tok/sec: 102688.48, flops:107.77, batch-reuse:1
@ 2295 train 4.9039 , allloss: 4.9046, dt: 1312.08ms, fracRes: 0.3067, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3222, norm(y): 1.0109, norm:1.1676, tok/sec: 99896.01, flops:104.84, batch-reuse:1
@ 2296 train 4.9008 , allloss: 4.9015, dt: 1301.28ms, fracRes: 0.3064, norm(attn): 0.1885, norm(output): 0.3770, norm(x): 0.3223, norm(y): 1.0109, norm:1.2341, tok/sec: 100725.29, flops:105.71, batch-reuse:1
@ 2297 train 4.9057 , allloss: 4.9065, dt: 1320.05ms, fracRes: 0.3046, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3237, norm(y): 1.0109, norm:1.2898, tok/sec: 99293.26, flops:104.21, batch-reuse:1
@ 2298 train 4.9398 , allloss: 4.9408, dt: 1282.02ms, fracRes: 0.3034, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3247, norm(y): 1.0108, norm:1.3062, tok/sec: 102238.27, flops:107.30, batch-reuse:1
@ 2299 train 4.9340 , allloss: 4.9348, dt: 1304.37ms, fracRes: 0.3062, norm(attn): 0.1885, norm(output): 0.3789, norm(x): 0.3237, norm(y): 1.0109, norm:1.2040, tok/sec: 100487.01, flops:105.46, batch-reuse:1
@ 2300 train 4.8881 , allloss: 4.8891, dt: 1286.61ms, fracRes: 0.3071, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3239, norm(y): 1.0109, norm:1.3095, tok/sec: 101873.55, flops:106.92, batch-reuse:1
@ 2301 train 4.9502 , allloss: 4.9514, dt: 1291.96ms, fracRes: 0.3064, norm(attn): 0.1875, norm(output): 0.3770, norm(x): 0.3239, norm(y): 1.0109, norm:1.1361, tok/sec: 101452.19, flops:106.48, batch-reuse:1
@ 2302 train 4.9057 , allloss: 4.9068, dt: 1300.93ms, fracRes: 0.3043, norm(attn): 0.1895, norm(output): 0.3789, norm(x): 0.3255, norm(y): 1.0109, norm:1.4625, tok/sec: 100752.83, flops:105.74, batch-reuse:1
@ 2303 train 4.9316 , allloss: 4.9327, dt: 1305.84ms, fracRes: 0.3047, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3254, norm(y): 1.0109, norm:1.1724, tok/sec: 100373.59, flops:105.34, batch-reuse:1
@ 2304 train 4.9703 , allloss: 4.9710, dt: 1293.61ms, fracRes: 0.3077, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3236, norm(y): 1.0110, norm:1.5528, tok/sec: 101322.59, flops:106.34, batch-reuse:1
@ 2305 train 4.8991 , allloss: 4.9016, dt: 1293.35ms, fracRes: 0.3047, norm(attn): 0.1885, norm(output): 0.3789, norm(x): 0.3241, norm(y): 1.0109, norm:1.4263, tok/sec: 101343.14, flops:106.36, batch-reuse:1
@ 2306 train 4.9780 , allloss: 4.9790, dt: 1291.63ms, fracRes: 0.3033, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3235, norm(y): 1.0109, norm:1.4880, tok/sec: 101477.84, flops:106.50, batch-reuse:1
@ 2307 train 4.9863 , allloss: 4.9870, dt: 1305.94ms, fracRes: 0.3011, norm(attn): 0.1885, norm(output): 0.3809, norm(x): 0.3252, norm(y): 1.0109, norm:1.3299, tok/sec: 100365.86, flops:105.34, batch-reuse:1
@ 2308 train 4.9538 , allloss: 4.9546, dt: 1305.49ms, fracRes: 0.3021, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3266, norm(y): 1.0109, norm:1.3820, tok/sec: 100400.89, flops:105.37, batch-reuse:1
@ 2309 train 4.8548 , allloss: 4.8556, dt: 1281.62ms, fracRes: 0.3058, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3235, norm(y): 1.0111, norm:1.3132, tok/sec: 102270.87, flops:107.34, batch-reuse:1
@ 2310 train 5.0301 , allloss: 5.0310, dt: 1294.75ms, fracRes: 0.3033, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3275, norm(y): 1.0109, norm:1.7402, tok/sec: 101233.54, flops:106.25, batch-reuse:1
@ 2311 train 4.9735 , allloss: 4.9749, dt: 1324.22ms, fracRes: 0.3027, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3278, norm(y): 1.0108, norm:1.3877, tok/sec: 98980.71, flops:103.88, batch-reuse:1
@ 2312 train 4.9630 , allloss: 4.9639, dt: 1277.07ms, fracRes: 0.3079, norm(attn): 0.1855, norm(output): 0.3789, norm(x): 0.3230, norm(y): 1.0111, norm:1.4077, tok/sec: 102635.07, flops:107.72, batch-reuse:1
@ 2313 train 4.9875 , allloss: 4.9885, dt: 1276.83ms, fracRes: 0.3093, norm(attn): 0.1865, norm(output): 0.3809, norm(x): 0.3239, norm(y): 1.0110, norm:1.2099, tok/sec: 102654.39, flops:107.74, batch-reuse:1
@ 2314 train 4.9560 , allloss: 4.9570, dt: 1293.36ms, fracRes: 0.3090, norm(attn): 0.1865, norm(output): 0.3828, norm(x): 0.3260, norm(y): 1.0110, norm:1.4814, tok/sec: 101341.90, flops:106.36, batch-reuse:1
@ 2315 train 4.9018 , allloss: 4.9026, dt: 1274.71ms, fracRes: 0.3074, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3272, norm(y): 1.0109, norm:1.3598, tok/sec: 102825.33, flops:107.92, batch-reuse:1
@ 2316 train 4.9412 , allloss: 4.9418, dt: 1305.54ms, fracRes: 0.3051, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3248, norm(y): 1.0110, norm:1.3285, tok/sec: 100397.09, flops:105.37, batch-reuse:1
@ 2317 train 4.8883 , allloss: 4.8888, dt: 1332.34ms, fracRes: 0.3074, norm(attn): 0.1875, norm(output): 0.3809, norm(x): 0.3254, norm(y): 1.0111, norm:1.5364, tok/sec: 98377.43, flops:103.25, batch-reuse:1
@ 2318 train 4.9395 , allloss: 4.9405, dt: 1296.37ms, fracRes: 0.3063, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3264, norm(y): 1.0109, norm:1.3443, tok/sec: 101106.99, flops:106.11, batch-reuse:1
@ 2319 train 4.9558 , allloss: 4.9568, dt: 1301.46ms, fracRes: 0.3068, norm(attn): 0.1885, norm(output): 0.3809, norm(x): 0.3267, norm(y): 1.0109, norm:1.3530, tok/sec: 100711.27, flops:105.70, batch-reuse:1
@ 2320 train 4.8882 , allloss: 4.8891, dt: 1280.17ms, fracRes: 0.3071, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3265, norm(y): 1.0109, norm:1.3393, tok/sec: 102386.19, flops:107.46, batch-reuse:1
@ 2321 train 4.8376 , allloss: 4.8385, dt: 1283.54ms, fracRes: 0.3057, norm(attn): 0.1914, norm(output): 0.3828, norm(x): 0.3277, norm(y): 1.0109, norm:1.7057, tok/sec: 102117.49, flops:107.17, batch-reuse:1
@ 2322 train 4.9224 , allloss: 4.9234, dt: 1295.43ms, fracRes: 0.3055, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3260, norm(y): 1.0110, norm:1.3606, tok/sec: 101180.21, flops:106.19, batch-reuse:1
@ 2323 train 4.8092 , allloss: 4.8100, dt: 1297.23ms, fracRes: 0.3061, norm(attn): 0.1914, norm(output): 0.3828, norm(x): 0.3272, norm(y): 1.0111, norm:1.7013, tok/sec: 101040.22, flops:106.04, batch-reuse:1
@ 2324 train 4.9335 , allloss: 4.9348, dt: 1278.52ms, fracRes: 0.3067, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3265, norm(y): 1.0110, norm:1.2159, tok/sec: 102518.36, flops:107.59, batch-reuse:1
@ 2325 train 4.9771 , allloss: 4.9825, dt: 1270.74ms, fracRes: 0.3074, norm(attn): 0.1904, norm(output): 0.3809, norm(x): 0.3268, norm(y): 1.0110, norm:1.6909, tok/sec: 103145.89, flops:108.25, batch-reuse:1
@ 2326 train 4.8870 , allloss: 4.8949, dt: 1272.50ms, fracRes: 0.3094, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3265, norm(y): 1.0111, norm:1.6261, tok/sec: 103003.82, flops:108.10, batch-reuse:1
@ 2327 train 4.8793 , allloss: 4.8800, dt: 1281.78ms, fracRes: 0.3066, norm(attn): 0.1895, norm(output): 0.3828, norm(x): 0.3263, norm(y): 1.0110, norm:1.2217, tok/sec: 102257.95, flops:107.32, batch-reuse:1
@ 2328 train 4.8269 , allloss: 4.8286, dt: 1307.87ms, fracRes: 0.3049, norm(attn): 0.1934, norm(output): 0.3828, norm(x): 0.3259, norm(y): 1.0110, norm:1.6841, tok/sec: 100217.59, flops:105.18, batch-reuse:1
@ 2329 train 4.6805 , allloss: 4.7046, dt: 1279.16ms, fracRes: 0.3133, norm(attn): 0.1953, norm(output): 0.3789, norm(x): 0.3238, norm(y): 1.0110, norm:3.4982, tok/sec: 102467.24, flops:107.54, batch-reuse:1
@ 2330 train 4.9608 , allloss: 4.9631, dt: 1305.52ms, fracRes: 0.3056, norm(attn): 0.1914, norm(output): 0.3828, norm(x): 0.3261, norm(y): 1.0109, norm:1.8995, tok/sec: 100398.18, flops:105.37, batch-reuse:1
@ 2331 train 4.7877 , allloss: 4.7889, dt: 1315.34ms, fracRes: 0.3105, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3244, norm(y): 1.0111, norm:1.5186, tok/sec: 99648.76, flops:104.58, batch-reuse:1
@ 2332 train 4.9236 , allloss: 4.9245, dt: 1330.08ms, fracRes: 0.3098, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3260, norm(y): 1.0111, norm:1.5540, tok/sec: 98544.30, flops:103.42, batch-reuse:1
@ 2333 train 4.7905 , allloss: 4.7911, dt: 1320.10ms, fracRes: 0.3117, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3264, norm(y): 1.0110, norm:1.5633, tok/sec: 99289.59, flops:104.21, batch-reuse:1
@ 2334 train 4.7849 , allloss: 4.7856, dt: 1292.13ms, fracRes: 0.3125, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3257, norm(y): 1.0111, norm:1.5103, tok/sec: 101438.75, flops:106.46, batch-reuse:1
@ 2335 train 4.8959 , allloss: 4.8972, dt: 1277.85ms, fracRes: 0.3108, norm(attn): 0.1885, norm(output): 0.3848, norm(x): 0.3276, norm(y): 1.0110, norm:1.2909, tok/sec: 102572.43, flops:107.65, batch-reuse:1
@ 2336 train 4.9826 , allloss: 4.9839, dt: 1313.90ms, fracRes: 0.3093, norm(attn): 0.1875, norm(output): 0.3867, norm(x): 0.3267, norm(y): 1.0110, norm:1.2645, tok/sec: 99757.85, flops:104.70, batch-reuse:1
@ 2337 train 4.8469 , allloss: 4.8476, dt: 1287.39ms, fracRes: 0.3039, norm(attn): 0.1904, norm(output): 0.3867, norm(x): 0.3287, norm(y): 1.0109, norm:1.3025, tok/sec: 101812.48, flops:106.85, batch-reuse:1
@ 2338 train 4.8667 , allloss: 4.8674, dt: 1304.75ms, fracRes: 0.3078, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3267, norm(y): 1.0111, norm:1.1893, tok/sec: 100457.78, flops:105.43, batch-reuse:1
@ 2339 train 4.8443 , allloss: 4.8453, dt: 1303.55ms, fracRes: 0.3070, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3291, norm(y): 1.0110, norm:1.4745, tok/sec: 100550.22, flops:105.53, batch-reuse:1
@ 2340 train 4.8575 , allloss: 4.8582, dt: 1302.94ms, fracRes: 0.3091, norm(attn): 0.1875, norm(output): 0.3848, norm(x): 0.3279, norm(y): 1.0111, norm:1.4320, tok/sec: 100597.03, flops:105.58, batch-reuse:1
@ 2341 train 4.8717 , allloss: 4.8729, dt: 1274.46ms, fracRes: 0.3105, norm(attn): 0.1875, norm(output): 0.3848, norm(x): 0.3278, norm(y): 1.0111, norm:1.2639, tok/sec: 102845.02, flops:107.94, batch-reuse:1
@ 2342 train 4.7737 , allloss: 4.7761, dt: 1289.58ms, fracRes: 0.3114, norm(attn): 0.1914, norm(output): 0.3867, norm(x): 0.3287, norm(y): 1.0111, norm:1.4257, tok/sec: 101639.23, flops:106.67, batch-reuse:1
@ 2343 train 4.8678 , allloss: 4.8691, dt: 1296.05ms, fracRes: 0.3138, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3274, norm(y): 1.0111, norm:1.3258, tok/sec: 101131.90, flops:106.14, batch-reuse:1
@ 2344 train 4.9725 , allloss: 4.9740, dt: 1291.15ms, fracRes: 0.3125, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3286, norm(y): 1.0110, norm:1.4536, tok/sec: 101515.53, flops:106.54, batch-reuse:1
@ 2345 train 4.7965 , allloss: 4.7976, dt: 1280.48ms, fracRes: 0.3112, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3278, norm(y): 1.0111, norm:1.5726, tok/sec: 102361.76, flops:107.43, batch-reuse:1
@ 2346 train 4.9246 , allloss: 4.9256, dt: 1279.41ms, fracRes: 0.3106, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3276, norm(y): 1.0111, norm:1.5238, tok/sec: 102446.96, flops:107.52, batch-reuse:1
@ 2347 train 4.7965 , allloss: 4.7973, dt: 1273.21ms, fracRes: 0.3065, norm(attn): 0.1914, norm(output): 0.3828, norm(x): 0.3273, norm(y): 1.0110, norm:1.4202, tok/sec: 102946.00, flops:108.04, batch-reuse:1
@ 2348 train 4.9046 , allloss: 4.9058, dt: 1283.23ms, fracRes: 0.3068, norm(attn): 0.1875, norm(output): 0.3828, norm(x): 0.3269, norm(y): 1.0111, norm:1.5186, tok/sec: 102142.34, flops:107.20, batch-reuse:1
@ 2349 train 4.9213 , allloss: 4.9226, dt: 1308.34ms, fracRes: 0.3041, norm(attn): 0.1895, norm(output): 0.3848, norm(x): 0.3287, norm(y): 1.0111, norm:1.4601, tok/sec: 100181.58, flops:105.14, batch-reuse:1
@ 2350 train 4.8066 , allloss: 4.8086, dt: 1311.05ms, fracRes: 0.3058, norm(attn): 0.1914, norm(output): 0.3848, norm(x): 0.3278, norm(y): 1.0111, norm:1.6665, tok/sec: 99974.51, flops:104.93, batch-reuse:1
@ 2351 train 4.9625 , allloss: 4.9635, dt: 1308.54ms, fracRes: 0.3084, norm(attn): 0.1924, norm(output): 0.3828, norm(x): 0.3279, norm(y): 1.0111, norm:1.4823, tok/sec: 100166.72, flops:105.13, batch-reuse:1
@ 2352 train 4.8884 , allloss: 4.8891, dt: 1302.92ms, fracRes: 0.3090, norm(attn): 0.1914, norm(output): 0.3828, norm(x): 0.3290, norm(y): 1.0110, norm:1.3974, tok/sec: 100598.56, flops:105.58, batch-reuse:1
@ 2353 train 4.8907 , allloss: 4.8917, dt: 1295.64ms, fracRes: 0.3133, norm(attn): 0.1895, norm(output): 0.3809, norm(x): 0.3268, norm(y): 1.0111, norm:1.6143, tok/sec: 101163.90, flops:106.17, batch-reuse:1
@ 2354 train 4.9122 , allloss: 4.9137, dt: 1294.95ms, fracRes: 0.3154, norm(attn): 0.1914, norm(output): 0.3789, norm(x): 0.3251, norm(y): 1.0111, norm:1.5278, tok/sec: 101217.83, flops:106.23, batch-reuse:1
@ 2355 train 4.8654 , allloss: 4.8670, dt: 1282.80ms, fracRes: 0.3111, norm(attn): 0.1904, norm(output): 0.3848, norm(x): 0.3301, norm(y): 1.0110, norm:1.2910, tok/sec: 102176.82, flops:107.24, batch-reuse:1
@ 2356 train 4.9643 , allloss: 4.9648, dt: 1291.80ms, fracRes: 0.3128, norm(attn): 0.1855, norm(output): 0.3828, norm(x): 0.3281, norm(y): 1.0112, norm:1.6110, tok/sec: 101464.47, flops:106.49, batch-reuse:1
@ 2357 train 4.9382 , allloss: 4.9388, dt: 1290.53ms, fracRes: 0.3140, norm(attn): 0.1885, norm(output): 0.3887, norm(x): 0.3281, norm(y): 1.0112, norm:1.5181, tok/sec: 101564.74, flops:106.59, batch-reuse:1
@ 2358 train 4.9312 , allloss: 4.9319, dt: 1296.15ms, fracRes: 0.3119, norm(attn): 0.1924, norm(output): 0.3867, norm(x): 0.3284, norm(y): 1.0111, norm:1.3661, tok/sec: 101124.25, flops:106.13, batch-reuse:1
@ 2359 train 4.8754 , allloss: 4.8765, dt: 1290.56ms, fracRes: 0.3131, norm(attn): 0.1885, norm(output): 0.3828, norm(x): 0.3267, norm(y): 1.0112, norm:1.3083, tok/sec: 101561.83, flops:106.59, batch-reuse:1
@ 2360 train 4.8775 , allloss: 4.8788, dt: 1291.68ms, fracRes: 0.3104, norm(attn): 0.1895, norm(output): 0.3828, norm(x): 0.3276, norm(y): 1.0111, norm:1.3061, tok/sec: 101473.95, flops:106.50, batch-reuse:1
@ 2361 train 4.8705 , allloss: 4.8714, dt: 1303.56ms, fracRes: 0.3111, norm(attn): 0.1895, norm(output): 0.3926, norm(x): 0.3311, norm(y): 1.0110, norm:1.2743, tok/sec: 100549.56, flops:105.53, batch-reuse:1
@ 2362 train 4.8790 , allloss: 4.8801, dt: 1298.92ms, fracRes: 0.3135, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3297, norm(y): 1.0112, norm:1.3517, tok/sec: 100908.21, flops:105.91, batch-reuse:1
@ 2363 train 4.9307 , allloss: 4.9314, dt: 1300.25ms, fracRes: 0.3131, norm(attn): 0.1875, norm(output): 0.3848, norm(x): 0.3294, norm(y): 1.0112, norm:1.3425, tok/sec: 100805.24, flops:105.80, batch-reuse:1
@ 2364 train 4.9546 , allloss: 4.9553, dt: 1310.65ms, fracRes: 0.3110, norm(attn): 0.1895, norm(output): 0.3906, norm(x): 0.3297, norm(y): 1.0112, norm:1.4826, tok/sec: 100005.51, flops:104.96, batch-reuse:1
@ 2365 train 4.8911 , allloss: 4.8924, dt: 1296.24ms, fracRes: 0.3080, norm(attn): 0.1904, norm(output): 0.3926, norm(x): 0.3313, norm(y): 1.0112, norm:1.2889, tok/sec: 101116.70, flops:106.12, batch-reuse:1
@ 2366 train 4.9171 , allloss: 4.9184, dt: 1289.69ms, fracRes: 0.3046, norm(attn): 0.1914, norm(output): 0.3965, norm(x): 0.3326, norm(y): 1.0111, norm:1.4168, tok/sec: 101630.85, flops:106.66, batch-reuse:1
@ 2367 train 4.7978 , allloss: 4.7983, dt: 1314.06ms, fracRes: 0.3058, norm(attn): 0.1904, norm(output): 0.3906, norm(x): 0.3316, norm(y): 1.0112, norm:1.2527, tok/sec: 99745.61, flops:104.68, batch-reuse:1
@ 2368 train 4.7548 , allloss: 4.7554, dt: 1327.85ms, fracRes: 0.3058, norm(attn): 0.1895, norm(output): 0.3945, norm(x): 0.3325, norm(y): 1.0111, norm:1.2475, tok/sec: 98709.72, flops:103.60, batch-reuse:1
@ 2369 train 4.7834 , allloss: 4.7840, dt: 1303.33ms, fracRes: 0.3067, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3325, norm(y): 1.0112, norm:1.4014, tok/sec: 100567.16, flops:105.55, batch-reuse:1
@ 2370 train 4.8254 , allloss: 4.8269, dt: 1297.19ms, fracRes: 0.3086, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3315, norm(y): 1.0112, norm:1.4984, tok/sec: 101042.80, flops:106.05, batch-reuse:1
@ 2371 train 4.6571 , allloss: 4.6593, dt: 1296.86ms, fracRes: 0.3061, norm(attn): 0.1924, norm(output): 0.3867, norm(x): 0.3311, norm(y): 1.0112, norm:1.2934, tok/sec: 101068.87, flops:106.07, batch-reuse:1
@ 2372 train 4.7219 , allloss: 4.7227, dt: 1268.25ms, fracRes: 0.3048, norm(attn): 0.1934, norm(output): 0.3887, norm(x): 0.3316, norm(y): 1.0111, norm:1.4112, tok/sec: 103348.94, flops:108.47, batch-reuse:1
@ 2373 train 4.7695 , allloss: 4.7714, dt: 1301.99ms, fracRes: 0.3072, norm(attn): 0.1904, norm(output): 0.3887, norm(x): 0.3298, norm(y): 1.0112, norm:1.3561, tok/sec: 100670.82, flops:105.66, batch-reuse:1
@ 2374 train 4.7356 , allloss: 4.7368, dt: 1326.68ms, fracRes: 0.3108, norm(attn): 0.1895, norm(output): 0.3867, norm(x): 0.3290, norm(y): 1.0113, norm:1.3831, tok/sec: 98797.29, flops:103.69, batch-reuse:1
@ 2375 train 4.7630 , allloss: 4.7640, dt: 1288.56ms, fracRes: 0.3103, norm(attn): 0.1904, norm(output): 0.3867, norm(x): 0.3306, norm(y): 1.0112, norm:1.2830, tok/sec: 101719.62, flops:106.76, batch-reuse:1
@ 2376 train 4.7947 , allloss: 4.7956, dt: 1284.53ms, fracRes: 0.3152, norm(attn): 0.1885, norm(output): 0.3926, norm(x): 0.3286, norm(y): 1.0113, norm:1.3869, tok/sec: 102038.62, flops:107.09, batch-reuse:1
@ 2377 train 4.7822 , allloss: 4.7829, dt: 1301.18ms, fracRes: 0.3163, norm(attn): 0.1885, norm(output): 0.3867, norm(x): 0.3301, norm(y): 1.0113, norm:1.3859, tok/sec: 100732.88, flops:105.72, batch-reuse:1
@ 2378 train 4.7615 , allloss: 4.7624, dt: 1277.09ms, fracRes: 0.3145, norm(attn): 0.1895, norm(output): 0.3945, norm(x): 0.3315, norm(y): 1.0112, norm:1.3443, tok/sec: 102632.94, flops:107.72, batch-reuse:1
@ 2379 train 4.7103 , allloss: 4.7112, dt: 1299.01ms, fracRes: 0.3127, norm(attn): 0.1885, norm(output): 0.3926, norm(x): 0.3315, norm(y): 1.0112, norm:1.5499, tok/sec: 100901.34, flops:105.90, batch-reuse:1
@ 2380 train 4.9964 , allloss: 4.9978, dt: 1293.59ms, fracRes: 0.3142, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3317, norm(y): 1.0112, norm:2.0032, tok/sec: 101323.90, flops:106.34, batch-reuse:1
@ 2381 train 4.8303 , allloss: 4.8311, dt: 1292.69ms, fracRes: 0.3139, norm(attn): 0.1885, norm(output): 0.3887, norm(x): 0.3317, norm(y): 1.0112, norm:1.4972, tok/sec: 101394.88, flops:106.42, batch-reuse:1
@ 2382 train 4.8058 , allloss: 4.8075, dt: 1297.24ms, fracRes: 0.3106, norm(attn): 0.1914, norm(output): 0.3945, norm(x): 0.3339, norm(y): 1.0110, norm:1.7187, tok/sec: 101038.79, flops:106.04, batch-reuse:1
@ 2383 train 4.7729 , allloss: 4.7741, dt: 1308.94ms, fracRes: 0.3132, norm(attn): 0.1865, norm(output): 0.3906, norm(x): 0.3323, norm(y): 1.0114, norm:1.4740, tok/sec: 100135.63, flops:105.09, batch-reuse:1
@ 2384 train 4.8135 , allloss: 4.8156, dt: 1327.78ms, fracRes: 0.3109, norm(attn): 0.1865, norm(output): 0.3965, norm(x): 0.3341, norm(y): 1.0113, norm:1.9225, tok/sec: 98715.20, flops:103.60, batch-reuse:1
@ 2385 train 4.7759 , allloss: 4.7773, dt: 1303.38ms, fracRes: 0.3134, norm(attn): 0.1875, norm(output): 0.3945, norm(x): 0.3326, norm(y): 1.0112, norm:1.5751, tok/sec: 100563.24, flops:105.54, batch-reuse:1
@ 2386 train 4.7181 , allloss: 4.7193, dt: 1329.22ms, fracRes: 0.3164, norm(attn): 0.1885, norm(output): 0.3906, norm(x): 0.3298, norm(y): 1.0113, norm:1.3695, tok/sec: 98608.06, flops:103.49, batch-reuse:1
@ 2387 train 4.7566 , allloss: 4.7575, dt: 1329.33ms, fracRes: 0.3138, norm(attn): 0.1885, norm(output): 0.3945, norm(x): 0.3319, norm(y): 1.0113, norm:1.3834, tok/sec: 98599.96, flops:103.48, batch-reuse:1
@ 2388 train 4.8017 , allloss: 4.8024, dt: 1322.46ms, fracRes: 0.3118, norm(attn): 0.1885, norm(output): 0.3945, norm(x): 0.3321, norm(y): 1.0113, norm:1.4231, tok/sec: 99112.00, flops:104.02, batch-reuse:1
@ 2389 train 4.7313 , allloss: 4.7322, dt: 1291.39ms, fracRes: 0.3121, norm(attn): 0.1875, norm(output): 0.3906, norm(x): 0.3306, norm(y): 1.0113, norm:1.4545, tok/sec: 101496.82, flops:106.52, batch-reuse:1
@ 2390 train 4.8118 , allloss: 4.8130, dt: 1307.94ms, fracRes: 0.3145, norm(attn): 0.1895, norm(output): 0.3926, norm(x): 0.3310, norm(y): 1.0113, norm:1.5313, tok/sec: 100212.88, flops:105.18, batch-reuse:1
@ 2391 train 4.8733 , allloss: 4.8747, dt: 1332.18ms, fracRes: 0.3121, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3327, norm(y): 1.0112, norm:1.6017, tok/sec: 98388.75, flops:103.26, batch-reuse:1
@ 2392 train 4.7996 , allloss: 4.8004, dt: 1305.44ms, fracRes: 0.3145, norm(attn): 0.1885, norm(output): 0.3965, norm(x): 0.3306, norm(y): 1.0112, norm:1.3926, tok/sec: 100404.41, flops:105.38, batch-reuse:1
@ 2393 train 4.9145 , allloss: 4.9153, dt: 1298.51ms, fracRes: 0.3176, norm(attn): 0.1904, norm(output): 0.3945, norm(x): 0.3303, norm(y): 1.0113, norm:1.5484, tok/sec: 100940.47, flops:105.94, batch-reuse:1
@ 2394 train 4.8159 , allloss: 4.8166, dt: 1279.47ms, fracRes: 0.3163, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3312, norm(y): 1.0113, norm:1.5229, tok/sec: 102442.19, flops:107.51, batch-reuse:1
@ 2395 train 4.7732 , allloss: 4.7739, dt: 1308.00ms, fracRes: 0.3160, norm(attn): 0.1904, norm(output): 0.3945, norm(x): 0.3328, norm(y): 1.0113, norm:1.4568, tok/sec: 100207.78, flops:105.17, batch-reuse:1
@ 2396 train 4.7621 , allloss: 4.7634, dt: 1305.09ms, fracRes: 0.3115, norm(attn): 0.1904, norm(output): 0.3984, norm(x): 0.3342, norm(y): 1.0112, norm:1.3162, tok/sec: 100431.39, flops:105.40, batch-reuse:1
@ 2397 train 4.7200 , allloss: 4.7212, dt: 1304.23ms, fracRes: 0.3115, norm(attn): 0.1924, norm(output): 0.3945, norm(x): 0.3340, norm(y): 1.0113, norm:1.4590, tok/sec: 100497.54, flops:105.47, batch-reuse:1
@ 2398 train 4.8176 , allloss: 4.8206, dt: 1287.63ms, fracRes: 0.3116, norm(attn): 0.1953, norm(output): 0.3945, norm(x): 0.3348, norm(y): 1.0112, norm:1.4703, tok/sec: 101793.55, flops:106.83, batch-reuse:1
@ 2399 train 4.7374 , allloss: 4.7383, dt: 1292.87ms, fracRes: 0.3152, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3349, norm(y): 1.0114, norm:1.5076, tok/sec: 101381.02, flops:106.40, batch-reuse:1
@ 2400 train 4.7340 , allloss: 4.7349, dt: 1307.90ms, fracRes: 0.3153, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3351, norm(y): 1.0113, norm:1.3554, tok/sec: 100215.60, flops:105.18, batch-reuse:1
@ 2401 train 4.8263 , allloss: 4.8269, dt: 1337.82ms, fracRes: 0.3166, norm(attn): 0.1875, norm(output): 0.3945, norm(x): 0.3340, norm(y): 1.0113, norm:1.3875, tok/sec: 97974.23, flops:102.83, batch-reuse:1
@ 2402 train 4.8103 , allloss: 4.8110, dt: 1324.07ms, fracRes: 0.3156, norm(attn): 0.1943, norm(output): 0.3945, norm(x): 0.3354, norm(y): 1.0113, norm:1.3920, tok/sec: 98991.50, flops:103.89, batch-reuse:1
@ 2403 train 4.6912 , allloss: 4.6937, dt: 1335.39ms, fracRes: 0.3150, norm(attn): 0.1924, norm(output): 0.3945, norm(x): 0.3353, norm(y): 1.0113, norm:1.4272, tok/sec: 98152.54, flops:103.01, batch-reuse:1
@ 2404 train 4.6890 , allloss: 4.6898, dt: 1301.47ms, fracRes: 0.3143, norm(attn): 0.1895, norm(output): 0.3945, norm(x): 0.3346, norm(y): 1.0113, norm:1.2739, tok/sec: 100710.93, flops:105.70, batch-reuse:1
@ 2405 train 4.7883 , allloss: 4.7891, dt: 1303.20ms, fracRes: 0.3111, norm(attn): 0.1904, norm(output): 0.3945, norm(x): 0.3359, norm(y): 1.0113, norm:1.5241, tok/sec: 100577.17, flops:105.56, batch-reuse:1
@ 2406 train 4.7161 , allloss: 4.7170, dt: 1299.04ms, fracRes: 0.3128, norm(attn): 0.1904, norm(output): 0.3965, norm(x): 0.3337, norm(y): 1.0114, norm:1.4826, tok/sec: 100898.97, flops:105.90, batch-reuse:1
@ 2407 train 4.7007 , allloss: 4.7017, dt: 1287.45ms, fracRes: 0.3120, norm(attn): 0.1943, norm(output): 0.3945, norm(x): 0.3337, norm(y): 1.0113, norm:1.4159, tok/sec: 101807.07, flops:106.85, batch-reuse:1
@ 2408 train 4.7536 , allloss: 4.7557, dt: 1303.56ms, fracRes: 0.3149, norm(attn): 0.1934, norm(output): 0.3926, norm(x): 0.3325, norm(y): 1.0113, norm:1.4538, tok/sec: 100548.95, flops:105.53, batch-reuse:1
@ 2409 train 4.7551 , allloss: 4.7561, dt: 1314.08ms, fracRes: 0.3154, norm(attn): 0.1924, norm(output): 0.3945, norm(x): 0.3332, norm(y): 1.0113, norm:1.3831, tok/sec: 99744.60, flops:104.68, batch-reuse:1
@ 2410 train 4.7129 , allloss: 4.7141, dt: 1312.43ms, fracRes: 0.3168, norm(attn): 0.1904, norm(output): 0.3926, norm(x): 0.3338, norm(y): 1.0113, norm:1.1950, tok/sec: 99869.62, flops:104.82, batch-reuse:1
@ 2411 train 4.7300 , allloss: 4.7308, dt: 1275.69ms, fracRes: 0.3157, norm(attn): 0.1904, norm(output): 0.3965, norm(x): 0.3343, norm(y): 1.0113, norm:1.4182, tok/sec: 102746.25, flops:107.83, batch-reuse:1
@ 2412 train 4.8015 , allloss: 4.8024, dt: 1277.45ms, fracRes: 0.3172, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3349, norm(y): 1.0113, norm:1.4380, tok/sec: 102604.57, flops:107.69, batch-reuse:1
@ 2413 train 4.8322 , allloss: 4.8331, dt: 1290.25ms, fracRes: 0.3176, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3332, norm(y): 1.0115, norm:1.4092, tok/sec: 101586.83, flops:106.62, batch-reuse:1
@ 2414 train 4.8325 , allloss: 4.8333, dt: 1339.26ms, fracRes: 0.3174, norm(attn): 0.1904, norm(output): 0.3965, norm(x): 0.3350, norm(y): 1.0114, norm:1.3595, tok/sec: 97868.67, flops:102.71, batch-reuse:1
@ 2415 train 4.9062 , allloss: 4.9072, dt: 1301.65ms, fracRes: 0.3159, norm(attn): 0.1934, norm(output): 0.3965, norm(x): 0.3354, norm(y): 1.0113, norm:1.3982, tok/sec: 100696.66, flops:105.68, batch-reuse:1
@ 2416 train 4.8614 , allloss: 4.8622, dt: 1306.29ms, fracRes: 0.3191, norm(attn): 0.1895, norm(output): 0.3965, norm(x): 0.3328, norm(y): 1.0114, norm:1.3654, tok/sec: 100339.37, flops:105.31, batch-reuse:1
@ 2417 train 4.8943 , allloss: 4.8949, dt: 1311.32ms, fracRes: 0.3163, norm(attn): 0.1924, norm(output): 0.3965, norm(x): 0.3342, norm(y): 1.0113, norm:1.5668, tok/sec: 99954.17, flops:104.90, batch-reuse:1
@ 2418 train 4.9289 , allloss: 4.9300, dt: 1300.60ms, fracRes: 0.3164, norm(attn): 0.1953, norm(output): 0.3984, norm(x): 0.3349, norm(y): 1.0113, norm:1.3857, tok/sec: 100778.15, flops:105.77, batch-reuse:1
@ 2419 train 4.9625 , allloss: 4.9637, dt: 1311.59ms, fracRes: 0.3225, norm(attn): 0.1943, norm(output): 0.3965, norm(x): 0.3328, norm(y): 1.0115, norm:1.4719, tok/sec: 99934.00, flops:104.88, batch-reuse:1
@ 2420 train 4.9240 , allloss: 4.9248, dt: 1278.63ms, fracRes: 0.3206, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3341, norm(y): 1.0115, norm:1.6527, tok/sec: 102509.74, flops:107.59, batch-reuse:1
@ 2421 train 4.9189 , allloss: 4.9205, dt: 1291.72ms, fracRes: 0.3209, norm(attn): 0.1904, norm(output): 0.3984, norm(x): 0.3334, norm(y): 1.0115, norm:1.3059, tok/sec: 101470.69, flops:106.50, batch-reuse:1
@ 2422 train 4.9770 , allloss: 4.9796, dt: 1296.47ms, fracRes: 0.3192, norm(attn): 0.1953, norm(output): 0.4004, norm(x): 0.3346, norm(y): 1.0114, norm:1.5407, tok/sec: 101099.52, flops:106.11, batch-reuse:1
@ 2423 train 4.9965 , allloss: 4.9977, dt: 1313.63ms, fracRes: 0.3208, norm(attn): 0.1914, norm(output): 0.3965, norm(x): 0.3334, norm(y): 1.0114, norm:1.2891, tok/sec: 99778.20, flops:104.72, batch-reuse:1
@ 2424 train 4.8932 , allloss: 4.8943, dt: 1305.99ms, fracRes: 0.3193, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3352, norm(y): 1.0114, norm:1.6031, tok/sec: 100362.16, flops:105.33, batch-reuse:1
@ 2425 train 4.8587 , allloss: 4.8609, dt: 1269.66ms, fracRes: 0.3182, norm(attn): 0.1924, norm(output): 0.3984, norm(x): 0.3361, norm(y): 1.0114, norm:1.6313, tok/sec: 103233.67, flops:108.35, batch-reuse:1
@ 2426 train 4.8829 , allloss: 4.8840, dt: 1308.74ms, fracRes: 0.3170, norm(attn): 0.1904, norm(output): 0.4004, norm(x): 0.3360, norm(y): 1.0114, norm:1.4899, tok/sec: 100151.12, flops:105.11, batch-reuse:1
@ 2427 train 5.0109 , allloss: 5.0120, dt: 1278.47ms, fracRes: 0.3171, norm(attn): 0.1885, norm(output): 0.4004, norm(x): 0.3351, norm(y): 1.0114, norm:1.4427, tok/sec: 102522.37, flops:107.60, batch-reuse:1
@ 2428 train 4.9289 , allloss: 4.9302, dt: 1301.56ms, fracRes: 0.3175, norm(attn): 0.1924, norm(output): 0.4023, norm(x): 0.3371, norm(y): 1.0113, norm:1.1297, tok/sec: 100703.76, flops:105.69, batch-reuse:1
@ 2429 train 4.8872 , allloss: 4.8879, dt: 1277.63ms, fracRes: 0.3206, norm(attn): 0.1885, norm(output): 0.3984, norm(x): 0.3341, norm(y): 1.0115, norm:1.3707, tok/sec: 102589.98, flops:107.67, batch-reuse:1
@ 2430 train 4.9071 , allloss: 4.9085, dt: 1320.03ms, fracRes: 0.3179, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3366, norm(y): 1.0114, norm:1.3141, tok/sec: 99294.75, flops:104.21, batch-reuse:1
@ 2431 train 4.9098 , allloss: 4.9115, dt: 1303.37ms, fracRes: 0.3198, norm(attn): 0.1895, norm(output): 0.4004, norm(x): 0.3356, norm(y): 1.0114, norm:1.3726, tok/sec: 100564.29, flops:105.54, batch-reuse:1
@ 2432 train 4.8113 , allloss: 4.8120, dt: 1293.06ms, fracRes: 0.3219, norm(attn): 0.1895, norm(output): 0.3984, norm(x): 0.3320, norm(y): 1.0115, norm:1.4906, tok/sec: 101365.93, flops:106.39, batch-reuse:1
@ 2433 train 4.8840 , allloss: 4.8845, dt: 1300.05ms, fracRes: 0.3196, norm(attn): 0.1885, norm(output): 0.4023, norm(x): 0.3358, norm(y): 1.0115, norm:1.2588, tok/sec: 100820.63, flops:105.81, batch-reuse:1
@ 2434 train 4.9743 , allloss: 4.9758, dt: 1311.37ms, fracRes: 0.3203, norm(attn): 0.1885, norm(output): 0.4043, norm(x): 0.3379, norm(y): 1.0115, norm:1.7082, tok/sec: 99950.30, flops:104.90, batch-reuse:1
@ 2435 train 4.9274 , allloss: 4.9287, dt: 1294.01ms, fracRes: 0.3185, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3386, norm(y): 1.0115, norm:1.4731, tok/sec: 101291.28, flops:106.31, batch-reuse:1
@ 2436 train 4.9365 , allloss: 4.9375, dt: 1286.00ms, fracRes: 0.3208, norm(attn): 0.1885, norm(output): 0.4004, norm(x): 0.3378, norm(y): 1.0115, norm:1.5046, tok/sec: 101922.47, flops:106.97, batch-reuse:1
@ 2437 train 4.8705 , allloss: 4.8716, dt: 1293.34ms, fracRes: 0.3223, norm(attn): 0.1885, norm(output): 0.4043, norm(x): 0.3371, norm(y): 1.0116, norm:1.6390, tok/sec: 101343.46, flops:106.36, batch-reuse:1
@ 2438 train 4.8787 , allloss: 4.8797, dt: 1285.08ms, fracRes: 0.3195, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3393, norm(y): 1.0115, norm:1.4593, tok/sec: 101995.49, flops:107.05, batch-reuse:1
@ 2439 train 4.9157 , allloss: 4.9167, dt: 1288.96ms, fracRes: 0.3198, norm(attn): 0.1875, norm(output): 0.4023, norm(x): 0.3381, norm(y): 1.0116, norm:1.4033, tok/sec: 101687.98, flops:106.72, batch-reuse:1
@ 2440 train 4.9874 , allloss: 4.9882, dt: 1286.27ms, fracRes: 0.3161, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3455, norm(y): 1.0115, norm:1.9581, tok/sec: 101900.78, flops:106.95, batch-reuse:1
@ 2441 train 4.8523 , allloss: 4.8535, dt: 1287.80ms, fracRes: 0.3162, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3422, norm(y): 1.0115, norm:1.8716, tok/sec: 101780.04, flops:106.82, batch-reuse:1
@ 2442 train 4.8784 , allloss: 4.8793, dt: 1300.88ms, fracRes: 0.3164, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3395, norm(y): 1.0116, norm:1.4239, tok/sec: 100756.03, flops:105.75, batch-reuse:1
@ 2443 train 5.0029 , allloss: 5.0038, dt: 1304.10ms, fracRes: 0.3157, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3392, norm(y): 1.0115, norm:1.8324, tok/sec: 100507.46, flops:105.48, batch-reuse:1
@ 2444 train 4.8619 , allloss: 4.8631, dt: 1291.39ms, fracRes: 0.3152, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3399, norm(y): 1.0114, norm:1.4805, tok/sec: 101497.16, flops:106.52, batch-reuse:1
@ 2445 train 4.8304 , allloss: 4.8315, dt: 1289.39ms, fracRes: 0.3155, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3408, norm(y): 1.0115, norm:1.7249, tok/sec: 101654.38, flops:106.69, batch-reuse:1
@ 2446 train 5.0362 , allloss: 5.0370, dt: 1281.69ms, fracRes: 0.3186, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3398, norm(y): 1.0115, norm:1.5083, tok/sec: 102264.70, flops:107.33, batch-reuse:1
@ 2447 train 4.9478 , allloss: 4.9485, dt: 1296.15ms, fracRes: 0.3187, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3395, norm(y): 1.0115, norm:1.6005, tok/sec: 101123.71, flops:106.13, batch-reuse:1
@ 2448 train 4.9034 , allloss: 4.9042, dt: 1301.17ms, fracRes: 0.3215, norm(attn): 0.1875, norm(output): 0.4023, norm(x): 0.3379, norm(y): 1.0116, norm:1.5239, tok/sec: 100733.74, flops:105.72, batch-reuse:1
@ 2449 train 4.9047 , allloss: 4.9055, dt: 1322.40ms, fracRes: 0.3213, norm(attn): 0.1904, norm(output): 0.4004, norm(x): 0.3380, norm(y): 1.0115, norm:1.3111, tok/sec: 99116.82, flops:104.02, batch-reuse:1
@ 2450 train 4.8695 , allloss: 4.8703, dt: 1295.82ms, fracRes: 0.3206, norm(attn): 0.1914, norm(output): 0.4023, norm(x): 0.3391, norm(y): 1.0115, norm:1.3575, tok/sec: 101149.94, flops:106.16, batch-reuse:1
@ 2451 train 4.9928 , allloss: 4.9941, dt: 1312.32ms, fracRes: 0.3230, norm(attn): 0.1904, norm(output): 0.4004, norm(x): 0.3370, norm(y): 1.0116, norm:1.4810, tok/sec: 99878.12, flops:104.82, batch-reuse:1
@ 2452 train 4.8751 , allloss: 4.8771, dt: 1296.53ms, fracRes: 0.3196, norm(attn): 0.1914, norm(output): 0.4004, norm(x): 0.3386, norm(y): 1.0116, norm:1.6367, tok/sec: 101094.70, flops:106.10, batch-reuse:1
@ 2453 train 4.8296 , allloss: 4.8311, dt: 1287.84ms, fracRes: 0.3173, norm(attn): 0.1914, norm(output): 0.3984, norm(x): 0.3389, norm(y): 1.0115, norm:1.5069, tok/sec: 101776.25, flops:106.82, batch-reuse:1
@ 2454 train 4.8280 , allloss: 4.8287, dt: 1291.38ms, fracRes: 0.3182, norm(attn): 0.1934, norm(output): 0.4023, norm(x): 0.3387, norm(y): 1.0114, norm:1.6219, tok/sec: 101497.85, flops:106.52, batch-reuse:1
@ 2455 train 4.9392 , allloss: 4.9399, dt: 1280.27ms, fracRes: 0.3207, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3378, norm(y): 1.0115, norm:1.4368, tok/sec: 102378.76, flops:107.45, batch-reuse:1
@ 2456 train 4.8894 , allloss: 4.8904, dt: 1307.56ms, fracRes: 0.3205, norm(attn): 0.1934, norm(output): 0.4043, norm(x): 0.3383, norm(y): 1.0115, norm:1.4818, tok/sec: 100241.97, flops:105.21, batch-reuse:1
@ 2457 train 5.0605 , allloss: 5.0613, dt: 1294.76ms, fracRes: 0.3213, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3382, norm(y): 1.0115, norm:1.4228, tok/sec: 101232.42, flops:106.25, batch-reuse:1
@ 2458 train 4.7777 , allloss: 4.7785, dt: 1292.98ms, fracRes: 0.3219, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3378, norm(y): 1.0115, norm:1.3108, tok/sec: 101372.08, flops:106.39, batch-reuse:1
@ 2459 train 4.9000 , allloss: 4.9007, dt: 1294.24ms, fracRes: 0.3240, norm(attn): 0.1885, norm(output): 0.4043, norm(x): 0.3375, norm(y): 1.0116, norm:1.3658, tok/sec: 101273.11, flops:106.29, batch-reuse:1
@ 2460 train 5.0171 , allloss: 5.0185, dt: 1325.15ms, fracRes: 0.3251, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3383, norm(y): 1.0116, norm:1.6154, tok/sec: 98910.98, flops:103.81, batch-reuse:1
@ 2461 train 4.8663 , allloss: 4.8670, dt: 1343.16ms, fracRes: 0.3233, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3387, norm(y): 1.0115, norm:1.4293, tok/sec: 97584.86, flops:102.42, batch-reuse:1
@ 2462 train 4.9256 , allloss: 4.9262, dt: 1320.93ms, fracRes: 0.3223, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3382, norm(y): 1.0115, norm:1.5053, tok/sec: 99227.33, flops:104.14, batch-reuse:1
@ 2463 train 4.9399 , allloss: 4.9406, dt: 1313.68ms, fracRes: 0.3196, norm(attn): 0.1934, norm(output): 0.4043, norm(x): 0.3414, norm(y): 1.0115, norm:1.4231, tok/sec: 99774.72, flops:104.72, batch-reuse:1
@ 2464 train 4.8801 , allloss: 4.8807, dt: 1291.30ms, fracRes: 0.3203, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3402, norm(y): 1.0116, norm:1.3775, tok/sec: 101504.00, flops:106.53, batch-reuse:1
@ 2465 train 4.7543 , allloss: 4.7549, dt: 1274.13ms, fracRes: 0.3195, norm(attn): 0.1895, norm(output): 0.4023, norm(x): 0.3395, norm(y): 1.0116, norm:1.3710, tok/sec: 102871.58, flops:107.97, batch-reuse:1
@ 2466 train 4.9477 , allloss: 4.9484, dt: 1311.63ms, fracRes: 0.3183, norm(attn): 0.1904, norm(output): 0.4043, norm(x): 0.3431, norm(y): 1.0114, norm:1.4650, tok/sec: 99930.91, flops:104.88, batch-reuse:1
@ 2467 train 4.8104 , allloss: 4.8112, dt: 1288.41ms, fracRes: 0.3193, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3423, norm(y): 1.0115, norm:1.4256, tok/sec: 101731.46, flops:106.77, batch-reuse:1
@ 2468 train 4.9120 , allloss: 4.9128, dt: 1323.35ms, fracRes: 0.3207, norm(attn): 0.1885, norm(output): 0.4043, norm(x): 0.3429, norm(y): 1.0115, norm:1.5844, tok/sec: 99045.75, flops:103.95, batch-reuse:1
@ 2469 train 4.9958 , allloss: 4.9965, dt: 1283.27ms, fracRes: 0.3205, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3412, norm(y): 1.0115, norm:1.3610, tok/sec: 102138.91, flops:107.20, batch-reuse:1
@ 2470 train 4.8257 , allloss: 4.8264, dt: 1297.32ms, fracRes: 0.3207, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3405, norm(y): 1.0116, norm:1.3778, tok/sec: 101032.78, flops:106.04, batch-reuse:1
@ 2471 train 4.8104 , allloss: 4.8110, dt: 1281.77ms, fracRes: 0.3191, norm(attn): 0.1934, norm(output): 0.4043, norm(x): 0.3426, norm(y): 1.0115, norm:1.4115, tok/sec: 102258.35, flops:107.32, batch-reuse:1
@ 2472 train 4.8911 , allloss: 4.8920, dt: 1266.90ms, fracRes: 0.3213, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3411, norm(y): 1.0116, norm:1.3828, tok/sec: 103459.14, flops:108.58, batch-reuse:1
@ 2473 train 4.8023 , allloss: 4.8034, dt: 1287.38ms, fracRes: 0.3210, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3395, norm(y): 1.0117, norm:1.5608, tok/sec: 101812.59, flops:106.85, batch-reuse:1
@ 2474 train 4.8250 , allloss: 4.8257, dt: 1287.96ms, fracRes: 0.3212, norm(attn): 0.1895, norm(output): 0.4043, norm(x): 0.3397, norm(y): 1.0117, norm:1.2233, tok/sec: 101767.17, flops:106.81, batch-reuse:1
@ 2475 train 4.8979 , allloss: 4.8986, dt: 1290.70ms, fracRes: 0.3205, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3411, norm(y): 1.0116, norm:1.2630, tok/sec: 101551.23, flops:106.58, batch-reuse:1
@ 2476 train 4.8869 , allloss: 4.8884, dt: 1280.25ms, fracRes: 0.3202, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3413, norm(y): 1.0116, norm:1.3373, tok/sec: 102380.09, flops:107.45, batch-reuse:1
@ 2477 train 4.8636 , allloss: 4.8644, dt: 1283.78ms, fracRes: 0.3200, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3406, norm(y): 1.0116, norm:1.3591, tok/sec: 102098.82, flops:107.15, batch-reuse:1
@ 2478 train 4.8045 , allloss: 4.8052, dt: 1313.48ms, fracRes: 0.3193, norm(attn): 0.1953, norm(output): 0.4043, norm(x): 0.3400, norm(y): 1.0116, norm:1.1300, tok/sec: 99789.97, flops:104.73, batch-reuse:1
@ 2479 train 4.8009 , allloss: 4.8015, dt: 1322.56ms, fracRes: 0.3172, norm(attn): 0.1963, norm(output): 0.4043, norm(x): 0.3416, norm(y): 1.0116, norm:1.4660, tok/sec: 99104.46, flops:104.01, batch-reuse:1
@ 2480 train 4.9109 , allloss: 4.9119, dt: 1287.89ms, fracRes: 0.3186, norm(attn): 0.1963, norm(output): 0.4043, norm(x): 0.3420, norm(y): 1.0116, norm:1.3366, tok/sec: 101772.56, flops:106.81, batch-reuse:1
@ 2481 train 4.8375 , allloss: 4.8386, dt: 1312.35ms, fracRes: 0.3200, norm(attn): 0.1943, norm(output): 0.4043, norm(x): 0.3407, norm(y): 1.0117, norm:1.1526, tok/sec: 99876.01, flops:104.82, batch-reuse:1
@ 2482 train 4.9689 , allloss: 4.9701, dt: 1336.91ms, fracRes: 0.3182, norm(attn): 0.1934, norm(output): 0.4043, norm(x): 0.3430, norm(y): 1.0115, norm:1.1976, tok/sec: 98041.09, flops:102.90, batch-reuse:1
@ 2483 train 4.9046 , allloss: 4.9056, dt: 1329.01ms, fracRes: 0.3222, norm(attn): 0.1914, norm(output): 0.4043, norm(x): 0.3411, norm(y): 1.0118, norm:1.5081, tok/sec: 98624.03, flops:103.51, batch-reuse:1
@ 2484 train 4.8871 , allloss: 4.8875, dt: 1319.12ms, fracRes: 0.3231, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3426, norm(y): 1.0117, norm:1.4185, tok/sec: 99363.20, flops:104.28, batch-reuse:1
@ 2485 train 4.7882 , allloss: 4.7887, dt: 1288.39ms, fracRes: 0.3243, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3418, norm(y): 1.0117, norm:1.5367, tok/sec: 101733.23, flops:106.77, batch-reuse:1
@ 2486 train 4.8308 , allloss: 4.8313, dt: 1294.37ms, fracRes: 0.3246, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3429, norm(y): 1.0116, norm:1.2268, tok/sec: 101263.37, flops:106.28, batch-reuse:1
@ 2487 train 4.9242 , allloss: 4.9247, dt: 1305.89ms, fracRes: 0.3250, norm(attn): 0.1875, norm(output): 0.4062, norm(x): 0.3416, norm(y): 1.0117, norm:1.2472, tok/sec: 100369.78, flops:105.34, batch-reuse:1
@ 2488 train 4.8918 , allloss: 4.8928, dt: 1291.84ms, fracRes: 0.3222, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3442, norm(y): 1.0115, norm:1.5097, tok/sec: 101461.21, flops:106.49, batch-reuse:1
@ 2489 train 4.8396 , allloss: 4.8402, dt: 1310.99ms, fracRes: 0.3241, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3425, norm(y): 1.0117, norm:1.3802, tok/sec: 99979.18, flops:104.93, batch-reuse:1
@ 2490 train 4.8141 , allloss: 4.8148, dt: 1303.41ms, fracRes: 0.3228, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3435, norm(y): 1.0117, norm:1.2906, tok/sec: 100560.48, flops:105.54, batch-reuse:1
@ 2491 train 4.9598 , allloss: 4.9611, dt: 1277.55ms, fracRes: 0.3236, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3434, norm(y): 1.0116, norm:1.3715, tok/sec: 102596.20, flops:107.68, batch-reuse:1
@ 2492 train 4.9226 , allloss: 4.9238, dt: 1277.30ms, fracRes: 0.3254, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3428, norm(y): 1.0116, norm:1.2816, tok/sec: 102616.79, flops:107.70, batch-reuse:1
@ 2493 train 4.8613 , allloss: 4.8620, dt: 1286.14ms, fracRes: 0.3261, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3420, norm(y): 1.0116, norm:1.4975, tok/sec: 101911.20, flops:106.96, batch-reuse:1
@ 2494 train 4.8174 , allloss: 4.8183, dt: 1303.47ms, fracRes: 0.3258, norm(attn): 0.1914, norm(output): 0.4062, norm(x): 0.3427, norm(y): 1.0117, norm:1.3151, tok/sec: 100556.03, flops:105.54, batch-reuse:1
@ 2495 train 4.8508 , allloss: 4.8516, dt: 1341.13ms, fracRes: 0.3277, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3420, norm(y): 1.0117, norm:1.5813, tok/sec: 97732.77, flops:102.57, batch-reuse:1
@ 2496 train 4.7827 , allloss: 4.7842, dt: 1312.17ms, fracRes: 0.3265, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3414, norm(y): 1.0117, norm:1.4947, tok/sec: 99889.42, flops:104.84, batch-reuse:1
@ 2497 train 4.8486 , allloss: 4.8498, dt: 1309.26ms, fracRes: 0.3241, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3435, norm(y): 1.0116, norm:1.3162, tok/sec: 100111.76, flops:105.07, batch-reuse:1
@ 2498 train 4.8863 , allloss: 4.8870, dt: 1292.73ms, fracRes: 0.3253, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3433, norm(y): 1.0118, norm:1.3738, tok/sec: 101391.45, flops:106.41, batch-reuse:1
@ 2499 train 4.8581 , allloss: 4.8586, dt: 1282.27ms, fracRes: 0.3241, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3442, norm(y): 1.0118, norm:1.7919, tok/sec: 102218.97, flops:107.28, batch-reuse:1
@ 2500 train 4.8385 , allloss: 4.8392, dt: 1284.92ms, fracRes: 0.3259, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3443, norm(y): 1.0117, norm:1.4806, tok/sec: 102007.87, flops:107.06, batch-reuse:1
@ 2501 train 4.8093 , allloss: 4.8106, dt: 1285.85ms, fracRes: 0.3272, norm(attn): 0.1924, norm(output): 0.4043, norm(x): 0.3403, norm(y): 1.0117, norm:1.7416, tok/sec: 101934.35, flops:106.98, batch-reuse:1
@ 2502 train 4.9508 , allloss: 4.9525, dt: 1285.55ms, fracRes: 0.3243, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3436, norm(y): 1.0116, norm:1.6423, tok/sec: 101957.87, flops:107.01, batch-reuse:1
@ 2503 train 4.8548 , allloss: 4.8559, dt: 1303.14ms, fracRes: 0.3247, norm(attn): 0.1904, norm(output): 0.4062, norm(x): 0.3426, norm(y): 1.0117, norm:1.5401, tok/sec: 100581.88, flops:105.56, batch-reuse:1
@ 2504 train 4.8960 , allloss: 4.8967, dt: 1309.03ms, fracRes: 0.3278, norm(attn): 0.1895, norm(output): 0.4062, norm(x): 0.3423, norm(y): 1.0118, norm:1.6863, tok/sec: 100129.41, flops:105.09, batch-reuse:1
@ 2505 train 4.8749 , allloss: 4.8769, dt: 1295.87ms, fracRes: 0.3282, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3442, norm(y): 1.0117, norm:1.5289, tok/sec: 101146.30, flops:106.15, batch-reuse:1
@ 2506 train 4.9254 , allloss: 4.9263, dt: 1302.31ms, fracRes: 0.3296, norm(attn): 0.1885, norm(output): 0.4062, norm(x): 0.3430, norm(y): 1.0117, norm:1.4747, tok/sec: 100645.63, flops:105.63, batch-reuse:1
@ 2507 train 4.9279 , allloss: 4.9292, dt: 1298.36ms, fracRes: 0.3290, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3439, norm(y): 1.0117, norm:1.6579, tok/sec: 100951.63, flops:105.95, batch-reuse:1
@ 2508 train 4.7849 , allloss: 4.7857, dt: 1329.47ms, fracRes: 0.3260, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3453, norm(y): 1.0117, norm:1.4678, tok/sec: 98589.63, flops:103.47, batch-reuse:1
@ 2509 train 4.7326 , allloss: 4.7354, dt: 1312.60ms, fracRes: 0.3247, norm(attn): 0.1924, norm(output): 0.4062, norm(x): 0.3432, norm(y): 1.0118, norm:1.5073, tok/sec: 99857.03, flops:104.80, batch-reuse:1
@ 2510 train 4.8233 , allloss: 4.8246, dt: 1303.63ms, fracRes: 0.3241, norm(attn): 0.1943, norm(output): 0.4062, norm(x): 0.3421, norm(y): 1.0118, norm:1.5024, tok/sec: 100543.65, flops:105.52, batch-reuse:1
@ 2511 train 4.7876 , allloss: 4.7885, dt: 1298.59ms, fracRes: 0.3215, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3444, norm(y): 1.0117, norm:1.4776, tok/sec: 100933.96, flops:105.93, batch-reuse:1
@ 2512 train 4.7936 , allloss: 4.7950, dt: 1321.75ms, fracRes: 0.3226, norm(attn): 0.1953, norm(output): 0.4043, norm(x): 0.3427, norm(y): 1.0117, norm:1.3652, tok/sec: 99165.52, flops:104.08, batch-reuse:1
@ 2513 train 4.8486 , allloss: 4.8499, dt: 1308.13ms, fracRes: 0.3261, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3431, norm(y): 1.0117, norm:1.2867, tok/sec: 100197.75, flops:105.16, batch-reuse:1
@ 2514 train 4.9327 , allloss: 4.9345, dt: 1292.58ms, fracRes: 0.3262, norm(attn): 0.1943, norm(output): 0.4062, norm(x): 0.3461, norm(y): 1.0117, norm:1.5689, tok/sec: 101403.53, flops:106.42, batch-reuse:1
@ 2515 train 4.7472 , allloss: 4.7485, dt: 1303.66ms, fracRes: 0.3262, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3435, norm(y): 1.0117, norm:1.4095, tok/sec: 100541.83, flops:105.52, batch-reuse:1
@ 2516 train 4.6711 , allloss: 4.6720, dt: 1300.81ms, fracRes: 0.3258, norm(attn): 0.1973, norm(output): 0.4062, norm(x): 0.3454, norm(y): 1.0117, norm:1.5803, tok/sec: 100761.49, flops:105.75, batch-reuse:1
@ 2517 train 4.7420 , allloss: 4.7428, dt: 1287.25ms, fracRes: 0.3266, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3449, norm(y): 1.0117, norm:1.4381, tok/sec: 101823.57, flops:106.87, batch-reuse:1
@ 2518 train 4.8132 , allloss: 4.8144, dt: 1305.96ms, fracRes: 0.3261, norm(attn): 0.1973, norm(output): 0.4082, norm(x): 0.3457, norm(y): 1.0117, norm:1.4735, tok/sec: 100364.21, flops:105.33, batch-reuse:1
@ 2519 train 4.8354 , allloss: 4.8376, dt: 1298.49ms, fracRes: 0.3237, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3458, norm(y): 1.0117, norm:1.5232, tok/sec: 100942.01, flops:105.94, batch-reuse:1
@ 2520 train 4.8340 , allloss: 4.8373, dt: 1314.27ms, fracRes: 0.3267, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3437, norm(y): 1.0118, norm:1.3861, tok/sec: 99730.03, flops:104.67, batch-reuse:1
@ 2521 train 4.7557 , allloss: 4.7576, dt: 1305.67ms, fracRes: 0.3264, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3454, norm(y): 1.0117, norm:1.4284, tok/sec: 100386.63, flops:105.36, batch-reuse:1
@ 2522 train 4.8951 , allloss: 4.8959, dt: 1313.63ms, fracRes: 0.3273, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3450, norm(y): 1.0118, norm:1.5043, tok/sec: 99778.69, flops:104.72, batch-reuse:1
@ 2523 train 4.7901 , allloss: 4.7908, dt: 1298.11ms, fracRes: 0.3275, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3461, norm(y): 1.0118, norm:1.4042, tok/sec: 100971.21, flops:105.97, batch-reuse:1
@ 2524 train 4.7295 , allloss: 4.7302, dt: 1300.10ms, fracRes: 0.3267, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3447, norm(y): 1.0118, norm:1.2974, tok/sec: 100816.50, flops:105.81, batch-reuse:1
@ 2525 train 4.7813 , allloss: 4.7822, dt: 1315.72ms, fracRes: 0.3252, norm(attn): 0.2002, norm(output): 0.4062, norm(x): 0.3457, norm(y): 1.0117, norm:1.3334, tok/sec: 99619.68, flops:104.55, batch-reuse:1
@ 2526 train 4.8973 , allloss: 4.8984, dt: 1303.51ms, fracRes: 0.3261, norm(attn): 0.1934, norm(output): 0.4062, norm(x): 0.3444, norm(y): 1.0118, norm:1.3947, tok/sec: 100552.98, flops:105.53, batch-reuse:1
@ 2527 train 4.7758 , allloss: 4.7769, dt: 1314.41ms, fracRes: 0.3244, norm(attn): 0.1953, norm(output): 0.4062, norm(x): 0.3436, norm(y): 1.0118, norm:1.3956, tok/sec: 99719.29, flops:104.66, batch-reuse:1
@ 2528 train 4.8108 , allloss: 4.8163, dt: 1344.69ms, fracRes: 0.3241, norm(attn): 0.1963, norm(output): 0.4062, norm(x): 0.3448, norm(y): 1.0118, norm:1.3651, tok/sec: 97473.62, flops:102.30, batch-reuse:1
@ 2529 train 4.7936 , allloss: 4.7942, dt: 1310.52ms, fracRes: 0.3260, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3450, norm(y): 1.0119, norm:1.3778, tok/sec: 100015.48, flops:104.97, batch-reuse:1
@ 2530 train 4.7750 , allloss: 4.7765, dt: 1312.26ms, fracRes: 0.3267, norm(attn): 0.1953, norm(output): 0.4082, norm(x): 0.3474, norm(y): 1.0118, norm:1.5299, tok/sec: 99882.78, flops:104.83, batch-reuse:1
@ 2531 train 4.7254 , allloss: 4.7263, dt: 1317.63ms, fracRes: 0.3257, norm(attn): 0.1992, norm(output): 0.4082, norm(x): 0.3473, norm(y): 1.0117, norm:1.3163, tok/sec: 99475.48, flops:104.40, batch-reuse:1
@ 2532 train 4.8156 , allloss: 4.8163, dt: 1301.00ms, fracRes: 0.3282, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3448, norm(y): 1.0119, norm:1.6128, tok/sec: 100747.39, flops:105.74, batch-reuse:1
@ 2533 train 4.8800 , allloss: 4.8821, dt: 1305.48ms, fracRes: 0.3268, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3478, norm(y): 1.0119, norm:1.8995, tok/sec: 100401.48, flops:105.37, batch-reuse:1
@ 2534 train 4.8892 , allloss: 4.8939, dt: 1312.32ms, fracRes: 0.3252, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3487, norm(y): 1.0118, norm:1.6403, tok/sec: 99878.33, flops:104.82, batch-reuse:1
@ 2535 train 4.7174 , allloss: 4.7183, dt: 1281.50ms, fracRes: 0.3274, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3463, norm(y): 1.0119, norm:1.3589, tok/sec: 102280.46, flops:107.35, batch-reuse:1
@ 2536 train 4.8123 , allloss: 4.8130, dt: 1312.03ms, fracRes: 0.3284, norm(attn): 0.1943, norm(output): 0.4082, norm(x): 0.3458, norm(y): 1.0119, norm:1.4481, tok/sec: 99899.88, flops:104.85, batch-reuse:1
@ 2537 train 4.7891 , allloss: 4.7899, dt: 1288.86ms, fracRes: 0.3254, norm(attn): 0.1943, norm(output): 0.4082, norm(x): 0.3482, norm(y): 1.0118, norm:1.3169, tok/sec: 101696.44, flops:106.73, batch-reuse:1
@ 2538 train 4.8683 , allloss: 4.8691, dt: 1313.02ms, fracRes: 0.3255, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3486, norm(y): 1.0118, norm:1.3466, tok/sec: 99825.00, flops:104.77, batch-reuse:1
@ 2539 train 4.8211 , allloss: 4.8219, dt: 1313.43ms, fracRes: 0.3278, norm(attn): 0.1885, norm(output): 0.4082, norm(x): 0.3477, norm(y): 1.0120, norm:1.5137, tok/sec: 99793.63, flops:104.74, batch-reuse:1
@ 2540 train 4.8849 , allloss: 4.8860, dt: 1308.51ms, fracRes: 0.3260, norm(attn): 0.1914, norm(output): 0.4082, norm(x): 0.3480, norm(y): 1.0119, norm:1.4055, tok/sec: 100169.09, flops:105.13, batch-reuse:1
@ 2541 train 4.7892 , allloss: 4.7901, dt: 1333.96ms, fracRes: 0.3250, norm(attn): 0.1973, norm(output): 0.4082, norm(x): 0.3479, norm(y): 1.0118, norm:1.4449, tok/sec: 98257.94, flops:103.12, batch-reuse:1
@ 2542 train 4.8778 , allloss: 4.8785, dt: 1298.23ms, fracRes: 0.3261, norm(attn): 0.2002, norm(output): 0.4082, norm(x): 0.3484, norm(y): 1.0118, norm:1.9922, tok/sec: 100962.31, flops:105.96, batch-reuse:1
@ 2543 train 4.7496 , allloss: 4.7584, dt: 1285.59ms, fracRes: 0.3265, norm(attn): 0.1895, norm(output): 0.4082, norm(x): 0.3471, norm(y): 1.0119, norm:1.3992, tok/sec: 101954.88, flops:107.00, batch-reuse:1
@ 2544 train 4.9016 , allloss: 4.9029, dt: 1286.68ms, fracRes: 0.3282, norm(attn): 0.1904, norm(output): 0.4102, norm(x): 0.3497, norm(y): 1.0119, norm:1.6942, tok/sec: 101868.60, flops:106.91, batch-reuse:1
@ 2545 train 4.8350 , allloss: 4.8362, dt: 1301.97ms, fracRes: 0.3263, norm(attn): 0.1934, norm(output): 0.4121, norm(x): 0.3515, norm(y): 1.0119, norm:1.3477, tok/sec: 100671.74, flops:105.66, batch-reuse:1
@ 2546 train 4.8240 , allloss: 4.8254, dt: 1333.55ms, fracRes: 0.3290, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3484, norm(y): 1.0119, norm:1.4645, tok/sec: 98287.98, flops:103.16, batch-reuse:1
@ 2547 train 4.8314 , allloss: 4.8362, dt: 1309.83ms, fracRes: 0.3281, norm(attn): 0.1934, norm(output): 0.4082, norm(x): 0.3476, norm(y): 1.0119, norm:1.3277, tok/sec: 100068.21, flops:105.02, batch-reuse:1
@ 2548 train 5.0188 , allloss: 5.0203, dt: 1312.14ms, fracRes: 0.3276, norm(attn): 0.1963, norm(output): 0.4082, norm(x): 0.3490, norm(y): 1.0118, norm:1.9402, tok/sec: 99891.85, flops:104.84, batch-reuse:1
@ 2549 train 4.9626 , allloss: 4.9648, dt: 1293.51ms, fracRes: 0.3239, norm(attn): 0.1982, norm(output): 0.4121, norm(x): 0.3525, norm(y): 1.0117, norm:1.5383, tok/sec: 101330.14, flops:106.35, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3320,     0.6680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.4844,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0483,     0.0752,     0.5156,     0.3594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3652,     0.0557,     0.1797,     0.1006,     0.2988,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1641,     0.0605,     0.1846,     0.0535,     0.2363,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2910,     0.0708,     0.0488,     0.0771,     0.2168,     0.2871,     0.0086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0021,     0.0527,     0.0231,     0.0277,     0.0042,     0.0050,     0.8828,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1050,     0.0220,     0.0537,     0.0168,     0.0214,     0.2178,     0.0303,     0.3535,     0.1787,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0747,     0.0742,     0.1235,     0.1060,     0.0317,     0.1562,     0.0654,     0.2109,     0.1270,     0.0300,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0267,     0.0023,     0.0103,     0.0048,     0.0162,     0.0520,     0.0008,     0.1016,     0.6836,     0.0273,     0.0752,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0405,     0.0771,     0.1216,     0.1602,     0.0105,     0.0466,     0.1064,     0.1221,     0.0043,     0.0645,     0.0067,     0.2402,     0.0000,     0.0000,     0.0000],
        [    0.0111,     0.0874,     0.0226,     0.1328,     0.0364,     0.0176,     0.5625,     0.0032,     0.0025,     0.0135,     0.0103,     0.0762,     0.0225,     0.0000,     0.0000],
        [    0.0654,     0.0160,     0.0454,     0.0143,     0.0243,     0.1396,     0.0231,     0.1836,     0.2344,     0.0292,     0.0364,     0.0277,     0.0297,     0.1318,     0.0000],
        [    0.0366,     0.0498,     0.1543,     0.0554,     0.0388,     0.1426,     0.1104,     0.0591,     0.0388,     0.0260,     0.0469,     0.0408,     0.0408,     0.0447,     0.1157]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0046, -0.0288,  0.0521,  ...,  0.0158,  0.0165,  0.0123],
        [ 0.0167,  0.0011,  0.0179,  ..., -0.0093,  0.0267, -0.0022],
        [-0.0396,  0.0066, -0.0099,  ..., -0.0148, -0.0213,  0.0148],
        ...,
        [-0.0362,  0.0097, -0.0593,  ...,  0.0139, -0.0150, -0.0121],
        [ 0.0063, -0.0124,  0.0132,  ...,  0.0360, -0.0127,  0.0167],
        [-0.0178,  0.0042, -0.0325,  ...,  0.0008, -0.0058,  0.0300]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5312,  0.7695, -0.9844,  0.5078, -0.5508, -0.2305, -0.5820, -0.1357, -0.9648, -0.7812, -0.6914,  0.1787,  0.1426, -0.9727, -0.9922,  1.0312, -0.1826,  1.6406, -0.9727, -0.6094, -0.2002, -0.6758, -0.8672,  0.8125, -0.5977,  0.2295,  0.2148, -0.5977, -0.9727,  1.1562,  0.1157, -0.2295,
         0.1406,  0.0557,  0.3730, -0.8047, -0.1240,  0.9453, -1.3281,  0.1396, -0.3867,  0.0757, -0.1895,  0.4199, -1.0625,  0.8242, -0.0952,  0.1914,  1.2500, -0.8008, -0.4336,  0.4863, -0.0435,  2.1094, -0.5820, -0.1162,  0.5820,  0.3555,  0.6367,  0.3262, -0.0674,  0.6445, -0.1836,  0.2139],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0120,  0.0034, -0.0269,  ...,  0.0224,  0.0204,  0.0226],
        [ 0.0214, -0.0248, -0.0274,  ..., -0.0079,  0.0224,  0.0294],
        [-0.0064,  0.0263,  0.0400,  ...,  0.0039,  0.0072, -0.0345],
        ...,
        [ 0.0220,  0.0124,  0.0386,  ..., -0.0009,  0.0227, -0.0235],
        [ 0.0043, -0.0180, -0.0355,  ...,  0.0251, -0.0259, -0.0108],
        [ 0.0340, -0.0071,  0.0285,  ..., -0.0154, -0.0358, -0.0144]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4336, -0.3652,  0.0244, -0.1445, -0.6797,  0.4727, -0.4941, -0.0099, -0.3398, -0.6523,  0.1875, -0.7969,  0.7773, -0.1099, -0.0576, -0.2041, -1.0078,  0.6328,  0.4395, -1.0469,  0.3789,  0.4355, -0.1079,  0.8828, -1.5547, -0.5117,  0.5117,  0.7656, -0.6523,  0.1416, -0.2275,  0.8398,
        -0.0781,  0.2715,  0.7539, -0.6016,  0.2051,  0.5000, -0.5898,  0.2373,  0.0398, -1.1094, -0.5234,  0.3398, -0.2500, -0.0869,  0.1484, -0.8164, -0.3809, -0.3496, -0.8086,  0.7305,  0.1914,  0.9883,  0.3496, -0.4668, -0.1865,  0.8945,  0.6562,  1.1328,  0.2715, -0.6562,  0.0315,  0.4629],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  0.7031, -0.0371,  1.0938, -0.5742,  1.8516,  1.1484,  0.0669, -0.2461, -0.8008, -0.2188,  0.4375,  0.0645,  0.0096,  1.1250],
        [ 0.0000,  1.1875,  0.9102,  1.6172, -0.8125,  1.0391,  2.3438,  0.6289, -2.0156, -0.1777, -1.3828,  1.6641,  1.5781, -1.2344,  0.9531],
        [ 0.0000,  0.4453,  2.3750,  2.0156, -1.7109, -0.5117, -0.7305,  2.3906, -0.8477,  0.3203, -1.4062,  1.1172,  1.7500, -0.9883,  0.8945],
        [ 0.0000, -1.8828, -0.7109, -1.2891, -0.1992,  0.1982, -2.1719,  0.3340,  1.7266, -0.3711,  0.8555, -1.2656, -1.1797,  1.1406, -0.6680],
        [ 0.0000, -0.9961,  0.1191, -1.1172,  0.3652,  0.6055, -0.3457,  0.4141,  1.1953, -0.9258,  0.3711, -0.1177, -0.8594,  0.8398,  0.0503],
        [ 0.0000, -1.4141, -1.7812, -1.3281, -0.2930, -0.0134, -3.5156,  1.3672,  0.4766, -0.4238,  0.4141, -1.1875, -0.9453, -0.0815, -0.2773],
        [ 0.0000,  3.2188,  2.3906,  2.5781,  0.6719,  0.8672,  6.0312, -1.3594, -2.8594,  0.8438, -1.1328,  2.5469,  1.0469, -1.1016,  2.0938],
        [ 0.0000, -1.5625, -0.6719, -1.8281, -1.5938,  0.7266, -1.2500,  1.2109,  0.5312, -0.6797, -0.5859, -0.5352, -0.6367,  0.2891, -0.7852],
        [ 0.0000, -0.0091,  0.5000,  0.3457, -0.8594,  0.7344, -0.1328,  1.0391,  0.5234, -0.9141, -0.2949,  0.2441,  0.3848, -0.1387,  0.7070],
        [ 0.0000, -2.4531, -0.9609, -1.7188, -0.5039,  0.6641, -3.4688,  1.3281,  3.2344,  0.0228,  1.0312, -2.0469, -1.2031,  1.5391, -1.0000],
        [ 0.0000,  0.6484,  1.1016,  1.3750, -1.3516,  0.1406,  0.9688,  1.1016, -2.2344,  0.4648, -1.8047,  1.7812,  2.1250, -1.6406,  0.3242],
        [ 0.0000,  2.0625,  0.7148,  2.4844,  1.1875,  0.4629,  3.9219, -1.2344, -1.4922,  0.1943, -0.0718,  1.9219,  0.7070, -0.7695,  1.9453],
        [ 0.0000, -1.4062, -0.3613, -1.5234, -0.9883,  0.7617, -1.0391,  1.0312,  1.2734, -0.8047, -0.5859, -0.8555, -0.7891,  0.6992,  0.1270],
        [ 0.0000,  0.3125,  1.4375,  0.4160,  0.0610,  1.3594,  1.1094,  0.4824,  0.0630, -0.3418,  0.2520,  0.1084,  0.1113,  0.1992,  1.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5206],
        [0.3975],
        [0.2438],
        [0.2679],
        [0.1411],
        [0.1976],
        [0.0503],
        [0.0731],
        [0.0929],
        [0.0493],
        [0.0811],
        [0.0421],
        [0.0487],
        [0.0575]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0874,     0.0117,     0.6406,     0.0547,     0.0004,     0.1118,     0.0815,     0.0105,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0010,     0.0004,     0.0000,     0.0000,     0.0001,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0009,     0.0052,     0.0014,     0.0001,     0.0003,     0.0031,     0.0004,     0.0004,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0869,     0.0157,     0.3672,     0.0762,     0.0007,     0.0815,     0.0737,     0.0044,     0.0082,     0.0491,     0.0007,     0.1904,     0.0444,     0.0000,     0.0000],
        [    0.9883,     0.0000,     0.0022,     0.0010,     0.0000,     0.0000,     0.0003,     0.0059,     0.0001,     0.0002,     0.0000,     0.0008,     0.0019,     0.0003,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0125, -0.0051,  0.0249,  ...,  0.0023, -0.0261,  0.0021],
        [-0.0142,  0.0294,  0.0069,  ..., -0.0019,  0.0247,  0.0118],
        [-0.0118,  0.0257,  0.0050,  ...,  0.0009, -0.0365,  0.0035],
        ...,
        [ 0.0266, -0.0429, -0.0212,  ...,  0.0086,  0.0148, -0.0052],
        [-0.0578, -0.0457,  0.0171,  ...,  0.0318, -0.0033,  0.0058],
        [ 0.0351, -0.0121,  0.0371,  ...,  0.0520,  0.0085,  0.0532]], device='cuda:0', requires_grad=True)
K: tensor([-2.1094,  2.7188,  2.3750, -3.0625,  0.7539, -2.8906,  0.2988,  2.5000,  3.5312,  3.2031, -1.3281, -2.4219,  2.5781,  0.3730, -0.3984,  2.9062, -1.3047, -4.2188,  1.9453,  2.7969,  1.0234, -2.2344,  2.3281, -2.4219,  3.1562, -3.2188, -3.5312,  1.3516,  1.1484,  0.1318,  2.6875,  2.0156,
         1.0234,  2.9219, -2.4375,  2.8125, -0.0334,  1.2812, -1.0859, -1.8125, -2.3125, -2.5312,  2.7969, -2.1406,  0.4766,  0.4023, -0.3672, -1.8281, -1.3672,  1.5859, -1.1016, -1.1016, -1.6250, -1.5469,  2.7344, -2.1719, -1.0469, -1.2891, -2.9219,  2.2344,  3.0312, -0.8164,  2.0469, -1.4609],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0241,  0.0403,  0.0144,  ...,  0.0089,  0.0048,  0.0342],
        [ 0.0179, -0.0301,  0.0130,  ...,  0.0511, -0.0178,  0.0133],
        [-0.0194,  0.0058, -0.0080,  ..., -0.0071, -0.0139,  0.0015],
        ...,
        [-0.0340,  0.0127,  0.0318,  ..., -0.0138,  0.0192, -0.0032],
        [ 0.0318, -0.0128, -0.0099,  ..., -0.0222, -0.0255,  0.0276],
        [ 0.0220,  0.0144, -0.0224,  ..., -0.0061,  0.0006, -0.0175]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6523,  0.1289, -0.2598,  0.3945, -0.5508,  1.5234, -1.6328, -0.3516,  0.3125, -2.0312,  0.8164,  2.0781, -0.8945, -0.7891, -0.1416, -1.6719,  1.4141,  0.5195, -1.6875, -0.6406, -0.7969,  1.7656, -0.2227,  1.4062, -0.1250,  1.6250,  0.5078,  0.8047, -2.0156,  0.2949, -0.3730, -1.0391,
        -2.0469, -1.6562,  0.4844, -0.8945,  1.3516, -1.2109,  2.4531, -0.3926,  2.0781,  1.7500, -1.2500,  2.4531, -1.1875, -0.9648,  1.4609,  2.1719,  3.1719, -1.9375,  1.0000,  1.1406,  0.4492,  3.0156,  0.2676,  1.3828,  1.3047,  1.2578,  0.8477, -0.9375, -0.3848,  0.3848, -3.0469,  1.0781],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -15.5625, -12.6250, -14.8125, -17.0000, -19.0000, -14.5625, -12.9375, -16.1250, -15.9375, -18.3750, -14.5625, -13.9375, -15.0000, -14.3125],
        [  0.0000, -16.0000, -13.5625, -16.7500, -16.1250, -18.5000, -15.1875, -14.6875, -16.7500, -16.3750, -19.2500, -16.3750, -15.0625, -15.8750, -15.4375],
        [  0.0000, -13.4375,  -6.6875, -11.1250, -14.6250, -13.0625, -12.5000, -12.5000, -14.7500, -11.0625, -17.8750,  -9.6250, -11.0000, -13.8125, -10.1250],
        [  0.0000, -12.4375,  -9.5000, -11.5000, -13.5000, -12.3750, -10.1250,  -8.3125, -12.1250, -11.3750, -14.4375, -11.1875,  -8.7500, -11.3750, -11.2500],
        [  0.0000, -17.3750, -15.1250, -16.8750, -18.0000, -21.0000, -15.8125, -14.3750, -17.1250, -17.8750, -19.6250, -16.6250, -15.0000, -15.8750, -16.2500],
        [  0.0000, -14.5625, -10.7500, -14.1250, -16.2500, -14.5625, -11.2500, -10.3125, -14.5625, -13.6875, -18.7500, -13.7500,  -9.9375, -13.7500, -12.3750],
        [  0.0000,  -2.0156,   1.9922,  -0.4688,  -5.2812,   0.2480,  -0.0674,  -2.1250,  -2.8438,  -0.6953,  -5.5938,   0.5234,  -0.2852,  -2.4062,   2.8438],
        [  0.0000, -10.8750,  -6.9062,  -7.7812, -11.6250, -11.9375,  -9.0000,  -6.0000,  -9.9375,  -9.2500, -12.2500,  -7.9688,  -7.0312,  -9.0625, -10.2500],
        [  0.0000,  -7.0000,  -5.2500,  -6.5312,  -9.5000,  -7.9688,  -5.7500,  -7.7500,  -7.8125,  -7.5625,  -9.3750,  -6.1250,  -6.6562,  -7.1562,  -2.5938],
        [  0.0000, -12.3750,  -9.6250, -10.3750, -13.3750, -13.8125, -10.2500,  -8.2500, -11.6250, -11.9375, -14.1875, -10.3750,  -9.0000, -10.6875, -11.3750],
        [  0.0000, -15.5625, -12.5625, -15.5625, -15.5625, -16.3750, -14.4375, -13.1250, -15.6250, -13.8125, -18.5000, -14.8125, -12.6875, -14.8125, -14.3125],
        [  0.0000,  -1.7109,   1.4375,  -0.1328,  -4.8125,  -0.0645,  -0.1660,  -2.9844,  -2.3594,  -0.5742,  -4.8125,   0.7812,  -0.6719,  -1.9453,   4.1875],
        [  0.0000,  -9.9375,  -6.1250,  -6.8750, -10.4375, -10.8125,  -8.1250,  -5.1250,  -8.9375,  -8.3750, -10.9375,  -7.1250,  -6.2188,  -8.1250,  -9.6250],
        [  0.0000, -17.7500, -14.2500, -16.6250, -18.8750, -22.2500, -18.1250, -16.5000, -18.5000, -17.5000, -21.0000, -16.3750, -17.3750, -17.2500, -15.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5131],
        [0.5120],
        [0.5165],
        [0.2800],
        [0.6552],
        [0.5181],
        [0.3521],
        [0.4545],
        [0.3169],
        [0.4950],
        [0.3426],
        [0.2660],
        [0.4302],
        [0.6000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0544,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7578,     0.1865,     0.0547,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9180,     0.0625,     0.0138,     0.0077,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8555,     0.0327,     0.0300,     0.0150,     0.0659,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1777,     0.1069,     0.1367,     0.0952,     0.1201,     0.3633,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3809,     0.0403,     0.0369,     0.0095,     0.0179,     0.4922,     0.0222,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8203,     0.0045,     0.0032,     0.0004,     0.0008,     0.1631,     0.0004,     0.0068,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1807,     0.0354,     0.0457,     0.0393,     0.0723,     0.3750,     0.0576,     0.1787,     0.0145,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7852,     0.0126,     0.0067,     0.0016,     0.0042,     0.1309,     0.0023,     0.0117,     0.0201,     0.0260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0194,     0.0579,     0.0302,     0.0303,     0.0525,     0.1211,     0.0226,     0.1021,     0.0238,     0.4707,     0.0698,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.0034,     0.0012,     0.0005,     0.0040,     0.0630,     0.0014,     0.0027,     0.0181,     0.0053,     0.0056,     0.0015,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0041,     0.0033,     0.0005,     0.0006,     0.1162,     0.0006,     0.0043,     0.0092,     0.0106,     0.0027,     0.0005,     0.0057,     0.0000,     0.0000],
        [    0.0815,     0.0063,     0.0078,     0.0052,     0.0125,     0.0938,     0.0107,     0.0344,     0.0037,     0.1328,     0.0176,     0.0223,     0.5664,     0.0062,     0.0000],
        [    0.3457,     0.0228,     0.0103,     0.0051,     0.0229,     0.1436,     0.0188,     0.0498,     0.0874,     0.0435,     0.0483,     0.0084,     0.0645,     0.0874,     0.0415]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0012,  0.0211,  0.0036,  ..., -0.0126, -0.0099,  0.0195],
        [-0.0304,  0.0043, -0.0018,  ...,  0.0161,  0.0353,  0.0134],
        [ 0.0053, -0.0184, -0.0092,  ...,  0.0116,  0.0275,  0.0098],
        ...,
        [ 0.0095, -0.0044, -0.0249,  ...,  0.0419,  0.0126, -0.0018],
        [-0.0009,  0.0210, -0.0283,  ...,  0.0396,  0.0164,  0.0131],
        [ 0.0050, -0.0097,  0.0194,  ..., -0.0704, -0.0328, -0.0162]], device='cuda:0', requires_grad=True)
K: tensor([ 0.8320, -1.5156,  0.4512, -0.8281, -1.5781,  0.7461,  1.1250, -0.5039, -1.6797,  0.5547,  0.1260, -1.2578, -2.2969, -1.2031,  0.6289,  1.5703, -0.6836, -0.6797,  0.8477, -1.7188, -1.7812, -0.5391, -1.8203,  1.4062, -1.4453,  0.3965,  0.7305,  1.8203,  1.4688, -0.8242, -1.5000,  1.3125,
        -1.4531,  1.8828, -1.0391,  1.1172, -1.2266, -0.3145, -0.9648,  2.0000, -0.4785, -1.7891,  1.3750,  1.0859, -0.9727, -1.7109, -0.8164,  0.8555, -0.5000, -0.7344,  0.0493, -1.4688, -2.5469, -2.1094,  2.0781, -1.8984, -2.1250,  0.4629,  1.6562, -1.6484, -1.2656,  0.9180,  1.8594, -1.7734],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0071, -0.0250,  0.0258,  ...,  0.0177, -0.0068,  0.0214],
        [-0.0165, -0.0171,  0.0315,  ..., -0.0050, -0.0287, -0.0230],
        [-0.0325, -0.0137, -0.0101,  ..., -0.0621, -0.0649, -0.0550],
        ...,
        [-0.0315,  0.0012,  0.0387,  ..., -0.0061, -0.0403, -0.0394],
        [ 0.0194,  0.0171, -0.0104,  ..., -0.0714, -0.0272,  0.0128],
        [ 0.0311, -0.0037,  0.0045,  ..., -0.0023,  0.0120,  0.0314]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.1846,     -1.5938,      0.8672,      0.8359,      0.1543,      0.0007,      0.4199,     -0.3770,      0.4453,     -0.0957,     -0.5703,      0.9297,      0.0144,     -0.1377,      0.1953,      0.5820,      0.6914,      1.6797,     -0.2061,     -0.5039,      0.3418,     -0.2461,
            -0.2129,     -0.5820,      0.2471,     -1.3906,     -0.0500,      0.0583,      0.2158,      0.1719,     -0.0869,      0.0344,      0.9141,     -0.3223,      1.1328,      0.1060,      1.8281,      0.5469,      0.7578,     -0.2217,     -0.5195,     -0.4414,     -0.7656,     -0.9570,
             0.1338,      0.6680,     -0.1660,      1.0859,      0.6289,      0.5898,      1.6641,     -0.9258,      0.7539,      0.0698,     -0.5508,      1.1250,      0.3164,     -1.4531,      1.4141,      1.7812,      1.3359,     -1.7500,      0.8359,     -0.0047], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.8594, -3.1719, -3.5000, -2.6250, -0.1196, -3.2500, -2.0000, -2.2656, -1.4688, -2.0781, -2.8125, -0.8047, -1.9062, -0.5625],
        [ 0.0000, -1.4062, -2.6250, -2.3906, -1.1172, -0.2305, -1.9688, -1.7500, -0.7031, -1.2812, -0.9570, -1.5234, -0.8281, -0.5430, -0.6289],
        [ 0.0000, -2.6875, -4.1875, -4.7812, -2.7656, -0.7500, -3.7344, -2.1875, -1.8438, -2.0312, -2.6562, -3.1719, -0.7148, -1.5859, -1.9844],
        [ 0.0000, -3.2656, -3.3594, -4.0625, -2.5625, -0.7109, -2.7031, -1.9609, -2.5312, -2.1406, -2.5000, -2.8125, -0.6953, -2.3281, -1.0000],
        [ 0.0000, -0.5117, -0.2656, -0.6289, -0.3945,  0.7109, -0.1572,  0.6445, -0.9609,  0.5586, -0.4785,  0.2383,  2.1406, -0.4297,  2.7031],
        [ 0.0000, -2.2500, -2.3438, -3.6875, -3.0469,  0.2578, -2.8438, -0.7383, -1.9922,  0.1895, -1.7891, -3.0469,  0.2715, -1.5391,  0.5977],
        [ 0.0000, -5.2188, -5.5312, -7.5625, -6.9062, -1.6172, -7.5625, -4.7812, -4.7812, -3.1094, -5.4062, -7.0312, -3.6250, -4.4375, -4.3438],
        [ 0.0000, -1.6250, -1.3750, -1.5234, -0.9102,  0.7344, -1.1406, -0.0087, -2.5156,  1.4062, -0.6562, -0.0099,  2.9844, -1.9062,  2.8281],
        [ 0.0000, -4.1250, -4.7812, -6.1875, -5.2188, -1.7891, -5.8438, -4.2188, -3.6562, -3.4062, -4.6562, -5.5938, -3.1094, -3.5000, -4.5000],
        [ 0.0000,  1.0938,  0.4375,  0.4434,  0.9922,  1.8281,  0.1504,  1.6562,  0.2002,  3.1875,  1.2734,  1.8359,  3.6406,  0.8203,  3.8125],
        [ 0.0000, -5.5625, -6.6250, -7.5312, -5.4062, -2.6562, -6.5000, -5.8125, -3.9062, -5.1250, -5.0625, -6.3750, -4.7188, -3.9375, -5.6250],
        [ 0.0000, -5.3438, -5.5312, -7.5000, -7.3125, -1.9844, -7.2188, -5.2812, -4.5000, -4.3750, -5.7500, -7.4062, -5.0000, -4.3750, -5.6562],
        [ 0.0000, -2.5625, -2.3438, -2.7500, -1.8750,  0.1367, -2.0312, -0.8633, -3.0938,  0.4844, -1.5391, -1.2969,  1.9375, -2.5781,  1.5078],
        [ 0.0000, -2.7188, -3.5156, -4.2188, -2.7188, -0.8789, -2.9219, -1.9375, -1.3750, -2.0781, -1.9688, -3.7188, -1.6797, -1.3750, -2.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9590],
        [0.9160],
        [0.9603],
        [0.9421],
        [0.5954],
        [0.7243],
        [0.8852],
        [0.5861],
        [0.8804],
        [0.5969],
        [0.9297],
        [0.9199],
        [0.5881],
        [0.7232]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6094, 0.3906, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7461, 0.1494, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.2656, 0.0356, 0.5391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1816, 0.0850, 0.1758, 0.4316, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.2910, 0.0767, 0.1006, 0.3301, 0.1455, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.2021, 0.2100, 0.3027, 0.0483, 0.0216, 0.0581, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0386, 0.0718, 0.0625, 0.1768, 0.0092, 0.0098, 0.0034, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0479, 0.1660, 0.0874, 0.2012, 0.0143, 0.0240, 0.0114, 0.3906, 0.0564, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.3516, 0.0396, 0.0566, 0.0282, 0.0085, 0.0034, 0.1875, 0.0879, 0.1191, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0396, 0.1006, 0.0649, 0.0400, 0.0101, 0.0093, 0.0042, 0.4043, 0.0835, 0.2109, 0.0332, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0483, 0.1670, 0.0188, 0.2295, 0.1104, 0.0427, 0.0205, 0.1099, 0.0850, 0.0918, 0.0408, 0.0342, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.1289, 0.0255, 0.0952, 0.0063, 0.0157, 0.0031, 0.1514, 0.0508, 0.0410, 0.0303, 0.0466, 0.3652, 0.0000, 0.0000],
        [0.0306, 0.1089, 0.0270, 0.0757, 0.0060, 0.0150, 0.0046, 0.0933, 0.0413, 0.0962, 0.0581, 0.0991, 0.3008, 0.0425, 0.0000],
        [0.0664, 0.2178, 0.0215, 0.0540, 0.0317, 0.0209, 0.0737, 0.1079, 0.0581, 0.0233, 0.0640, 0.0334, 0.0540, 0.0417, 0.1309]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0115,  0.0336,  0.0179,  ...,  0.0223,  0.0432, -0.0323],
        [-0.0049, -0.0679,  0.0181,  ...,  0.0049, -0.0175,  0.0363],
        [ 0.0239,  0.0104, -0.0438,  ..., -0.0065, -0.0166,  0.0293],
        ...,
        [-0.0030,  0.0015, -0.0088,  ..., -0.0246, -0.0435,  0.0250],
        [-0.0053,  0.0229, -0.0390,  ..., -0.0417,  0.0032,  0.0107],
        [-0.0197, -0.0123, -0.0328,  ..., -0.0371, -0.0161,  0.0072]], device='cuda:0', requires_grad=True)
K: tensor([ 2.2656,  1.5312,  1.0547, -1.7812,  0.1250, -0.6641, -0.6289, -0.4414,  0.6641, -1.5781,  1.4844,  0.1221,  0.5625, -1.3828,  1.4375,  0.5977,  0.0618, -1.8984,  2.0469,  0.0420,  0.7891,  0.8398, -0.1670,  1.3203,  1.5234,  1.6016, -2.1719, -2.0156,  2.2344,  0.0432,  0.9727,  1.4766,
        -0.5078,  1.0938, -2.1406, -1.6016,  1.7031,  0.3477,  1.2578, -1.6172,  0.8438,  0.3926,  0.3262,  0.5195,  1.8281,  0.1138,  1.4297,  0.9258,  0.8633,  0.6016, -0.7500, -2.3438,  1.6328,  1.9531,  0.9570,  0.3105, -1.8672, -0.1377, -1.2422,  0.7148,  0.8438,  0.0413, -0.1387,  1.3906],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0044,     -0.0192,     -0.0363,  ...,      0.0303,     -0.0058,     -0.0168],
        [    -0.0304,     -0.0462,      0.0143,  ...,     -0.0275,     -0.0193,     -0.0690],
        [     0.0242,      0.0059,     -0.0164,  ...,      0.0382,      0.0001,      0.0220],
        ...,
        [    -0.0127,      0.0266,     -0.0059,  ...,      0.0010,      0.0164,      0.0003],
        [     0.0216,      0.0048,     -0.0089,  ...,     -0.0125,      0.0066,      0.0136],
        [    -0.0128,      0.0431,      0.0022,  ...,     -0.0046,      0.0076,      0.0087]], device='cuda:0', requires_grad=True)
Q: tensor([-0.2373,  0.5195, -1.5703,  1.6406, -1.3906, -0.5820, -1.0312, -1.2734,  0.5312,  0.7656,  0.6836,  1.3203, -1.6016, -0.0223,  0.3477, -0.2090, -0.5586,  0.4004,  1.6250,  1.8438, -1.8359,  0.0957, -1.1094, -0.0835,  0.8789,  0.7148, -1.0234,  0.3047,  0.2256,  0.3203,  0.2100, -0.2139,
         0.2793,  1.5625,  0.7461,  0.2910, -1.7188, -1.1172,  0.4863, -0.5859, -1.2734, -0.2148, -0.2314, -0.4277,  0.5742,  1.0938, -0.1973,  1.3750, -0.5547,  2.7188,  1.1953,  0.2051,  0.9219,  2.0781, -0.9258,  0.3262, -0.8633, -0.4434,  0.8438, -0.1729, -0.3184, -0.6797, -0.9609, -0.4883],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.4473,      0.1592,      0.0354,     -0.8320,     -1.1250,     -1.2422,      0.6875,     -1.2578,     -1.4922,     -2.6094,     -1.4531,     -0.2832,     -2.2344,     -0.4062],
        [     0.0000,     -1.6016,     -1.9453,      0.1338,      0.5391,     -0.7852,      0.3008,     -1.0234,     -1.2656,     -2.1406,     -2.5312,     -3.6719,     -1.7734,     -2.0312,     -2.3125],
        [     0.0000,      0.5117,     -1.5000,      1.2266,      1.5859,      0.3770,      0.5547,      0.4004,      0.0010,     -1.0391,     -1.4531,     -2.7500,      0.5078,     -0.5117,      0.9062],
        [     0.0000,      0.3691,     -0.3887,      0.3359,      1.2344,      1.7734,     -0.6484,      1.4062,     -1.5391,     -0.1289,     -1.9062,     -0.4746,      1.1406,     -2.3125,      1.8750],
        [     0.0000,      1.6250,      0.2891,      0.5586,      1.7500,      0.9336,      1.9453,      2.9844,      0.9141,      0.3320,      0.2295,     -0.1670,      1.8359,     -0.2412,      2.6562],
        [     0.0000,      0.2539,      0.2871,      0.6562,     -1.1797,     -1.9844,     -0.9961,      3.0000,     -1.4609,     -1.0312,     -3.2031,     -0.8008,      0.2520,     -3.0156,      0.8008],
        [     0.0000,      0.6250,      0.4824,      1.5234,     -1.4297,     -1.3672,     -2.4062,      2.7969,     -0.5156,      0.0830,     -2.2344,     -0.2363,      1.7969,     -1.7812,      1.7578],
        [     0.0000,      1.2422,      0.6016,      1.4297,     -1.2109,     -0.6914,     -1.4375,      2.0938,      0.1631,      1.0703,     -0.1729,      1.1250,      2.3750,     -0.4414,      2.7344],
        [     0.0000,      1.0938,     -1.0938,     -0.7305,     -1.4297,     -2.6250,     -3.5469,      0.4668,     -0.2891,      0.0132,      0.5586,      1.1328,      2.4375,      0.1377,      1.8828],
        [     0.0000,      0.9375,      0.4980,      0.0146,     -1.3672,     -1.4375,     -2.2344,      2.3281,      0.7500,      1.6719,     -0.1748,      2.0469,      3.7500,      0.6562,      3.0625],
        [     0.0000,      1.2422,     -0.9453,      1.5547,      0.8242,     -0.1235,     -0.8633,      0.8203,      0.5625,      0.6406,     -0.1699,     -0.3496,      2.4219,      0.7266,      2.1875],
        [     0.0000,      1.1719,     -0.4473,      0.8711,     -1.8438,     -0.9297,     -2.5469,      1.3281,      0.2412,      0.0275,     -0.2754,      0.1572,      2.2188,      0.2139,      2.2188],
        [     0.0000,      1.2656,     -0.1309,      0.9023,     -1.6250,     -0.7188,     -1.9062,      1.1094,      0.2949,      1.1406,      0.6406,      1.1719,      2.2812,      0.3242,      2.2969],
        [     0.0000,      1.1875,     -1.1250,     -0.2109,     -0.7422,     -1.1562,      0.1011,      0.4863,     -0.1338,     -1.0469,     -0.0408,     -0.6836,     -0.2100,     -0.4629,      0.6758]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2759],
        [0.1449],
        [0.0735],
        [0.2066],
        [0.1061],
        [0.1722],
        [0.1100],
        [0.0663],
        [0.0626],
        [0.0433],
        [0.0324],
        [0.1161],
        [0.0413],
        [0.0388]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0352,     0.6875,     0.2773,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0060,     0.6055,     0.0366,     0.3516,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0294,     0.7227,     0.0452,     0.1318,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.7305,     0.0229,     0.0491,     0.0645,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0039,     0.2949,     0.0085,     0.0513,     0.0277,     0.0200,     0.5938,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.2070,     0.0026,     0.0344,     0.0615,     0.0253,     0.4883,     0.1787,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0359,     0.1328,     0.0461,     0.0334,     0.0549,     0.1152,     0.2227,     0.3418,     0.0176,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0258,     0.1011,     0.0118,     0.0879,     0.0227,     0.0493,     0.0491,     0.1738,     0.0176,     0.4609,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0057,     0.0034,     0.0028,     0.0018,     0.0007,     0.0044,     0.0011,     0.0254,     0.0005,     0.9336,     0.0226,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0264,     0.1572,     0.0135,     0.2812,     0.0613,     0.0277,     0.0535,     0.1406,     0.0267,     0.0554,     0.0206,     0.1348,     0.0000,     0.0000,     0.0000],
        [    0.0121,     0.1011,     0.0011,     0.0117,     0.0452,     0.0183,     0.1348,     0.0515,     0.2178,     0.0422,     0.0593,     0.0520,     0.2520,     0.0000,     0.0000],
        [    0.0220,     0.0280,     0.0208,     0.0165,     0.0124,     0.0530,     0.0317,     0.0659,     0.0098,     0.4531,     0.1030,     0.0801,     0.0835,     0.0208,     0.0000],
        [    0.0010,     0.3613,     0.0036,     0.0282,     0.0311,     0.0286,     0.1040,     0.0479,     0.0996,     0.0471,     0.0251,     0.0222,     0.0723,     0.0564,     0.0708]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0137,      0.0175,      0.0000,  ...,     -0.0237,      0.0016,     -0.0517],
        [     0.0317,      0.0128,      0.0518,  ...,     -0.0668,     -0.0284,      0.0041],
        [    -0.0010,     -0.0130,      0.0260,  ...,      0.0462,      0.0121,     -0.0330],
        ...,
        [     0.0014,      0.0041,     -0.0105,  ...,     -0.0386,     -0.0249,      0.0078],
        [     0.0203,     -0.0095,      0.0343,  ...,      0.0195,     -0.0230,      0.0041],
        [    -0.0143,      0.0483,     -0.0018,  ...,     -0.0167,      0.0076,      0.0078]], device='cuda:0', requires_grad=True)
K: tensor([-0.1387, -1.0000,  2.2344,  0.9180, -0.5859,  0.0786, -0.5078,  1.9922, -1.1250,  0.4512,  0.4707, -0.5078,  0.1387,  0.2461,  0.8281, -2.4531,  0.1250, -1.1250, -0.8711, -1.1562, -2.5000, -0.8867, -1.1875,  0.3691, -0.1328, -0.8047, -1.1328, -1.1484,  0.8398, -0.1641,  0.5508, -0.4375,
        -0.3340,  1.3672,  1.7188,  0.5117,  1.4375, -0.1699,  1.1016, -0.5234, -1.4766, -0.9570,  0.8477,  0.0240,  0.8906, -0.5586,  1.1250,  0.6445, -0.6602, -0.1875,  0.3730,  0.3828, -0.6602, -0.2539, -0.7695,  0.3477, -0.4355, -1.3750, -1.7969, -1.6953,  0.1865,  0.7188,  0.8633, -0.3281],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0009,  0.0354, -0.0212,  ...,  0.0025,  0.0062,  0.0288],
        [-0.0072, -0.0112,  0.0313,  ..., -0.0068, -0.0101,  0.0143],
        [-0.0112,  0.0354, -0.0286,  ...,  0.0174,  0.0084,  0.0121],
        ...,
        [ 0.0039,  0.0328, -0.0051,  ..., -0.0034,  0.0125,  0.0003],
        [ 0.0031,  0.0129, -0.0010,  ...,  0.0248, -0.0311,  0.0251],
        [ 0.0331,  0.0197, -0.0353,  ...,  0.0039, -0.0033, -0.0351]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3965, -1.0625,  0.6797,  1.9375, -2.3594,  0.6133, -0.3613,  1.1484, -0.8320, -1.3984, -1.4375, -0.3340, -0.1973,  0.1973, -0.1562, -2.1094, -1.5078, -0.5234, -0.9062, -0.6875, -1.3594, -1.5547,  0.4727,  0.7344, -0.4863,  0.4258, -0.4961, -1.0938, -0.3906, -1.0078,  3.0000,  0.6523,
         0.7266,  0.1367, -1.1797, -0.3828,  2.2500, -0.3867,  0.6328,  1.2812, -1.4688, -0.2334,  0.9062, -0.2344,  0.5273, -0.8672,  2.0938,  0.1172, -0.6523, -1.3594, -0.4863,  0.8477, -1.1328, -0.0212,  0.0238,  0.1855, -0.3379, -0.1621, -0.7266,  0.2441,  0.0718,  2.7969, -0.4219,  0.9258],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.5938,  2.4062,  3.7969,  2.4219,  1.2031,  3.8750,  1.9375,  0.9414,  1.2812, -1.1875,  1.5391,  2.0625, -0.1992,  2.7344],
        [ 0.0000,  2.9688,  2.0625,  3.6875,  1.9609,  1.9062,  1.8359,  1.8047,  1.0703,  1.0078,  0.2695,  1.5547,  1.9609,  0.3242,  1.1562],
        [ 0.0000,  4.5938,  1.8047,  4.0625,  3.2031,  2.0156,  3.2969,  3.2500,  2.1875,  1.5703,  1.1406,  1.9922,  3.3906,  1.1875,  2.7500],
        [ 0.0000,  3.2031,  0.4297,  1.5000,  0.8828,  1.5859,  2.3594,  3.0625, -0.0457,  2.5781, -0.2158,  1.9922,  2.4531, -1.0781,  3.3281],
        [ 0.0000,  5.2812,  1.8203,  2.5781,  2.8594,  3.5469,  5.0312,  3.7344,  2.7656,  2.9219,  1.3828,  2.5938,  1.7969,  0.7773,  3.4688],
        [ 0.0000,  4.3438,  0.7852,  2.5781,  1.9688,  1.6406,  5.0312,  4.2812,  3.1875,  2.6562,  0.8086,  1.8516,  1.5391,  1.1250,  3.4844],
        [ 0.0000,  4.3750, -0.0151,  2.5625,  3.1562,  2.2656,  5.2188,  4.2188,  3.8906,  1.3125,  1.7812,  2.1094,  3.2656,  2.2031,  3.8906],
        [ 0.0000,  1.3047,  0.2480, -0.0693,  0.4238,  1.1641,  1.8203,  2.2500, -0.7109,  2.9219,  0.1914,  1.0469,  1.0156, -1.4062,  1.9453],
        [ 0.0000,  1.3672, -0.7812,  1.2266, -0.1309,  0.6484,  0.6406,  1.9062, -0.3848,  2.8750,  2.7188,  2.3594,  3.3906,  0.2656,  3.1562],
        [ 0.0000, -0.5078, -0.7227, -1.1484, -2.1250, -0.2539, -1.6641,  1.5000, -2.3594,  5.0938,  1.3828,  2.5469,  2.6406, -1.3281,  2.1719],
        [ 0.0000,  1.7891, -0.6680,  2.3750,  0.8438,  0.0515,  0.7109,  1.6797,  0.0152,  0.7461, -0.2461,  1.6328,  2.7031, -0.5039,  1.6484],
        [ 0.0000,  2.1250, -2.3750, -0.0417,  1.3125,  0.4062,  2.4062,  1.4453,  2.8906,  1.2422,  1.5859,  1.4531,  3.0312,  3.2500,  4.1562],
        [ 0.0000,  0.2441, -0.0559, -0.2832, -0.5742,  0.8828,  0.3730,  1.0938, -0.8125,  3.0312,  1.5469,  1.2969,  1.3359, -0.0579,  1.8125],
        [ 0.0000,  5.9062,  1.2891,  3.3438,  3.4531,  3.3594,  4.6562,  3.8750,  4.5938,  3.8594,  3.2344,  3.1094,  4.2812,  4.0312,  4.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0295],
        [0.0422],
        [0.0283],
        [0.1348],
        [0.0210],
        [0.0574],
        [0.0197],
        [0.0429],
        [0.2241],
        [0.0350],
        [0.0727],
        [0.0653],
        [0.0476],
        [0.0132]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1064 a:0.1128 and:0.1357 and:0.0776ty:0.1230,:0.3008 the:0.0471ery:0.1123)
ery
------
		( a:0.1128 and:0.1357 and:0.0776ty:0.1230,:0.3008 the:0.0471ery:0.1123,:0.0623)
, and the fruit is the most common form of the fruit.
The
@ 2550 train 4.8619 , allloss: 4.8649, dt: 1724.64ms, fracRes: 0.3279, norm(attn): 0.1924, norm(output): 0.4082, norm(x): 0.3480, norm(y): 1.0120, norm:1.5265, tok/sec: 75999.41, flops:79.76, batch-reuse:1
@ 2551 train 5.7349 , allloss: 5.7381, dt: 1279.12ms, fracRes: 0.3361, norm(attn): 0.1855, norm(output): 0.4102, norm(x): 0.3476, norm(y): 1.0121, norm:3.0920, tok/sec: 102470.36, flops:107.54, batch-reuse:1
@ 2552 train 4.8503 , allloss: 4.8512, dt: 1292.96ms, fracRes: 0.3275, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3513, norm(y): 1.0119, norm:2.0944, tok/sec: 101373.56, flops:106.39, batch-reuse:1
@ 2553 train 4.8538 , allloss: 4.8551, dt: 1298.84ms, fracRes: 0.3290, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3502, norm(y): 1.0119, norm:1.6005, tok/sec: 100914.53, flops:105.91, batch-reuse:1
@ 2554 train 4.7984 , allloss: 4.7997, dt: 1319.19ms, fracRes: 0.3316, norm(attn): 0.1885, norm(output): 0.4102, norm(x): 0.3471, norm(y): 1.0120, norm:1.4806, tok/sec: 99358.05, flops:104.28, batch-reuse:1
@ 2555 train 4.6482 , allloss: 4.6502, dt: 1323.58ms, fracRes: 0.3308, norm(attn): 0.1885, norm(output): 0.4141, norm(x): 0.3489, norm(y): 1.0120, norm:1.5168, tok/sec: 99028.28, flops:103.93, batch-reuse:1
@ 2556 train 4.7730 , allloss: 4.7748, dt: 1322.65ms, fracRes: 0.3321, norm(attn): 0.1934, norm(output): 0.4160, norm(x): 0.3522, norm(y): 1.0118, norm:1.5391, tok/sec: 99097.94, flops:104.01, batch-reuse:1
@ 2557 train 4.7496 , allloss: 4.7505, dt: 1303.72ms, fracRes: 0.3330, norm(attn): 0.1904, norm(output): 0.4121, norm(x): 0.3488, norm(y): 1.0119, norm:1.3635, tok/sec: 100537.02, flops:105.52, batch-reuse:1
@ 2558 train 4.7841 , allloss: 4.7849, dt: 1304.30ms, fracRes: 0.3329, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3490, norm(y): 1.0119, norm:1.5003, tok/sec: 100492.56, flops:105.47, batch-reuse:1
@ 2559 train 4.7715 , allloss: 4.7730, dt: 1334.07ms, fracRes: 0.3329, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3501, norm(y): 1.0120, norm:1.6206, tok/sec: 98249.63, flops:103.11, batch-reuse:1
@ 2560 train 4.6180 , allloss: 4.6202, dt: 1327.36ms, fracRes: 0.3323, norm(attn): 0.1904, norm(output): 0.4121, norm(x): 0.3496, norm(y): 1.0121, norm:1.4889, tok/sec: 98746.51, flops:103.64, batch-reuse:1
@ 2561 train 4.6232 , allloss: 4.6246, dt: 1310.74ms, fracRes: 0.3279, norm(attn): 0.1953, norm(output): 0.4102, norm(x): 0.3511, norm(y): 1.0120, norm:1.7241, tok/sec: 99998.58, flops:104.95, batch-reuse:1
@ 2562 train 4.6519 , allloss: 4.6530, dt: 1300.50ms, fracRes: 0.3273, norm(attn): 0.1953, norm(output): 0.4121, norm(x): 0.3506, norm(y): 1.0120, norm:1.7137, tok/sec: 100786.19, flops:105.78, batch-reuse:1
@ 2563 train 4.6186 , allloss: 4.6200, dt: 1273.77ms, fracRes: 0.3277, norm(attn): 0.1953, norm(output): 0.4121, norm(x): 0.3509, norm(y): 1.0120, norm:1.6655, tok/sec: 102901.12, flops:108.00, batch-reuse:1
@ 2564 train 4.6178 , allloss: 4.6202, dt: 1277.07ms, fracRes: 0.3271, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3517, norm(y): 1.0119, norm:1.6650, tok/sec: 102635.01, flops:107.72, batch-reuse:1
@ 2565 train 4.8049 , allloss: 4.8066, dt: 1281.70ms, fracRes: 0.3286, norm(attn): 0.1963, norm(output): 0.4141, norm(x): 0.3504, norm(y): 1.0120, norm:1.5860, tok/sec: 102264.23, flops:107.33, batch-reuse:1
@ 2566 train 4.7453 , allloss: 4.7462, dt: 1305.82ms, fracRes: 0.3314, norm(attn): 0.1973, norm(output): 0.4102, norm(x): 0.3495, norm(y): 1.0120, norm:1.7212, tok/sec: 100375.43, flops:105.35, batch-reuse:1
@ 2567 train 4.7567 , allloss: 4.7589, dt: 1292.40ms, fracRes: 0.3313, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3506, norm(y): 1.0119, norm:1.4775, tok/sec: 101417.25, flops:106.44, batch-reuse:1
@ 2568 train 4.7390 , allloss: 4.7420, dt: 1288.16ms, fracRes: 0.3298, norm(attn): 0.1982, norm(output): 0.4141, norm(x): 0.3529, norm(y): 1.0119, norm:1.5400, tok/sec: 101750.99, flops:106.79, batch-reuse:1
@ 2569 train 4.7803 , allloss: 4.7819, dt: 1301.50ms, fracRes: 0.3287, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3519, norm(y): 1.0119, norm:1.5592, tok/sec: 100708.04, flops:105.69, batch-reuse:1
@ 2570 train 4.7071 , allloss: 4.7079, dt: 1313.56ms, fracRes: 0.3304, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3508, norm(y): 1.0120, norm:1.5043, tok/sec: 99783.74, flops:104.72, batch-reuse:1
@ 2571 train 4.7087 , allloss: 4.7104, dt: 1305.86ms, fracRes: 0.3313, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3506, norm(y): 1.0120, norm:1.5927, tok/sec: 100372.00, flops:105.34, batch-reuse:1
@ 2572 train 4.7838 , allloss: 4.7848, dt: 1330.15ms, fracRes: 0.3312, norm(attn): 0.1934, norm(output): 0.4160, norm(x): 0.3519, norm(y): 1.0119, norm:1.3115, tok/sec: 98539.50, flops:103.42, batch-reuse:1
@ 2573 train 4.7403 , allloss: 4.7428, dt: 1336.37ms, fracRes: 0.3295, norm(attn): 0.1934, norm(output): 0.4141, norm(x): 0.3516, norm(y): 1.0119, norm:1.3493, tok/sec: 98080.29, flops:102.94, batch-reuse:1
@ 2574 train 4.6762 , allloss: 4.6774, dt: 1312.99ms, fracRes: 0.3295, norm(attn): 0.1914, norm(output): 0.4160, norm(x): 0.3514, norm(y): 1.0120, norm:1.4015, tok/sec: 99827.12, flops:104.77, batch-reuse:1
@ 2575 train 4.7411 , allloss: 4.7425, dt: 1303.76ms, fracRes: 0.3298, norm(attn): 0.1953, norm(output): 0.4121, norm(x): 0.3511, norm(y): 1.0120, norm:1.4691, tok/sec: 100533.84, flops:105.51, batch-reuse:1
@ 2576 train 4.6660 , allloss: 4.6671, dt: 1294.39ms, fracRes: 0.3299, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3493, norm(y): 1.0120, norm:1.2850, tok/sec: 101261.53, flops:106.28, batch-reuse:1
@ 2577 train 4.7683 , allloss: 4.7713, dt: 1286.84ms, fracRes: 0.3314, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3499, norm(y): 1.0120, norm:1.3390, tok/sec: 101855.94, flops:106.90, batch-reuse:1
@ 2578 train 4.6064 , allloss: 4.6119, dt: 1295.72ms, fracRes: 0.3307, norm(attn): 0.1934, norm(output): 0.4160, norm(x): 0.3528, norm(y): 1.0119, norm:1.5338, tok/sec: 101157.50, flops:106.17, batch-reuse:1
@ 2579 train 4.7602 , allloss: 4.7690, dt: 1279.37ms, fracRes: 0.3306, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3528, norm(y): 1.0120, norm:1.3583, tok/sec: 102450.09, flops:107.52, batch-reuse:1
@ 2580 train 4.6956 , allloss: 4.7024, dt: 1271.22ms, fracRes: 0.3298, norm(attn): 0.1904, norm(output): 0.4141, norm(x): 0.3524, norm(y): 1.0120, norm:1.5201, tok/sec: 103107.47, flops:108.21, batch-reuse:1
@ 2581 train 4.6765 , allloss: 4.6805, dt: 1276.87ms, fracRes: 0.3300, norm(attn): 0.1973, norm(output): 0.4121, norm(x): 0.3522, norm(y): 1.0119, norm:1.4198, tok/sec: 102651.24, flops:107.73, batch-reuse:1
@ 2582 train 4.6535 , allloss: 4.6546, dt: 1303.85ms, fracRes: 0.3334, norm(attn): 0.1924, norm(output): 0.4141, norm(x): 0.3496, norm(y): 1.0121, norm:1.3633, tok/sec: 100527.20, flops:105.51, batch-reuse:1
@ 2583 train 4.6430 , allloss: 4.6435, dt: 1273.88ms, fracRes: 0.3315, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3516, norm(y): 1.0120, norm:1.4956, tok/sec: 102891.99, flops:107.99, batch-reuse:1
@ 2584 train 4.6726 , allloss: 4.6742, dt: 1292.38ms, fracRes: 0.3319, norm(attn): 0.1953, norm(output): 0.4160, norm(x): 0.3523, norm(y): 1.0120, norm:1.2604, tok/sec: 101419.29, flops:106.44, batch-reuse:1
@ 2585 train 4.7140 , allloss: 4.7153, dt: 1294.55ms, fracRes: 0.3342, norm(attn): 0.1934, norm(output): 0.4180, norm(x): 0.3511, norm(y): 1.0121, norm:1.5679, tok/sec: 101248.99, flops:106.26, batch-reuse:1
@ 2586 train 4.6118 , allloss: 4.6128, dt: 1283.85ms, fracRes: 0.3346, norm(attn): 0.1934, norm(output): 0.4160, norm(x): 0.3521, norm(y): 1.0121, norm:1.4160, tok/sec: 102092.97, flops:107.15, batch-reuse:1
@ 2587 train 4.7438 , allloss: 4.7445, dt: 1290.97ms, fracRes: 0.3312, norm(attn): 0.1934, norm(output): 0.4141, norm(x): 0.3533, norm(y): 1.0120, norm:1.5148, tok/sec: 101529.72, flops:106.56, batch-reuse:1
@ 2588 train 4.6386 , allloss: 4.6403, dt: 1280.59ms, fracRes: 0.3344, norm(attn): 0.1914, norm(output): 0.4141, norm(x): 0.3504, norm(y): 1.0121, norm:1.4021, tok/sec: 102352.93, flops:107.42, batch-reuse:1
@ 2589 train 4.6979 , allloss: 4.6991, dt: 1298.14ms, fracRes: 0.3339, norm(attn): 0.1934, norm(output): 0.4141, norm(x): 0.3506, norm(y): 1.0121, norm:1.4004, tok/sec: 100969.45, flops:105.97, batch-reuse:1
@ 2590 train 4.6818 , allloss: 4.6832, dt: 1289.70ms, fracRes: 0.3325, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3514, norm(y): 1.0120, norm:1.3373, tok/sec: 101630.04, flops:106.66, batch-reuse:1
@ 2591 train 4.7416 , allloss: 4.7431, dt: 1293.31ms, fracRes: 0.3319, norm(attn): 0.1953, norm(output): 0.4141, norm(x): 0.3514, norm(y): 1.0120, norm:1.2938, tok/sec: 101345.90, flops:106.36, batch-reuse:1
@ 2592 train 4.7709 , allloss: 4.7727, dt: 1291.34ms, fracRes: 0.3308, norm(attn): 0.1963, norm(output): 0.4141, norm(x): 0.3517, norm(y): 1.0120, norm:1.4762, tok/sec: 101500.50, flops:106.53, batch-reuse:1
@ 2593 train 4.7347 , allloss: 4.7362, dt: 1301.97ms, fracRes: 0.3298, norm(attn): 0.1982, norm(output): 0.4160, norm(x): 0.3529, norm(y): 1.0120, norm:1.4211, tok/sec: 100672.17, flops:105.66, batch-reuse:1
@ 2594 train 4.6709 , allloss: 4.6719, dt: 1291.79ms, fracRes: 0.3296, norm(attn): 0.1953, norm(output): 0.4160, norm(x): 0.3529, norm(y): 1.0120, norm:1.4387, tok/sec: 101465.60, flops:106.49, batch-reuse:1
@ 2595 train 4.6899 , allloss: 4.6918, dt: 1295.36ms, fracRes: 0.3322, norm(attn): 0.1943, norm(output): 0.4141, norm(x): 0.3508, norm(y): 1.0121, norm:1.4401, tok/sec: 101185.88, flops:106.20, batch-reuse:1
@ 2596 train 4.8163 , allloss: 4.8180, dt: 1302.61ms, fracRes: 0.3303, norm(attn): 0.1973, norm(output): 0.4180, norm(x): 0.3565, norm(y): 1.0120, norm:1.8543, tok/sec: 100622.97, flops:105.61, batch-reuse:1
@ 2597 train 4.6894 , allloss: 4.6960, dt: 1306.18ms, fracRes: 0.3288, norm(attn): 0.1973, norm(output): 0.4238, norm(x): 0.3561, norm(y): 1.0120, norm:1.6723, tok/sec: 100347.36, flops:105.32, batch-reuse:1
@ 2598 train 4.6342 , allloss: 4.6353, dt: 1288.43ms, fracRes: 0.3307, norm(attn): 0.1924, norm(output): 0.4141, norm(x): 0.3533, norm(y): 1.0121, norm:1.3665, tok/sec: 101730.15, flops:106.77, batch-reuse:1
@ 2599 train 4.6304 , allloss: 4.6316, dt: 1304.20ms, fracRes: 0.3322, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3543, norm(y): 1.0121, norm:1.7375, tok/sec: 100499.73, flops:105.48, batch-reuse:1
@ 2600 train 4.6184 , allloss: 4.6193, dt: 1296.17ms, fracRes: 0.3325, norm(attn): 0.1953, norm(output): 0.4238, norm(x): 0.3533, norm(y): 1.0122, norm:1.3737, tok/sec: 101122.78, flops:106.13, batch-reuse:1
@ 2601 train 4.7827 , allloss: 4.7837, dt: 1298.87ms, fracRes: 0.3313, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3545, norm(y): 1.0121, norm:1.4842, tok/sec: 100912.66, flops:105.91, batch-reuse:1
@ 2602 train 4.7922 , allloss: 4.7930, dt: 1312.85ms, fracRes: 0.3322, norm(attn): 0.1953, norm(output): 0.4238, norm(x): 0.3536, norm(y): 1.0121, norm:1.5562, tok/sec: 99837.58, flops:104.78, batch-reuse:1
@ 2603 train 4.9132 , allloss: 4.9142, dt: 1310.37ms, fracRes: 0.3332, norm(attn): 0.1924, norm(output): 0.4180, norm(x): 0.3528, norm(y): 1.0121, norm:1.4302, tok/sec: 100026.91, flops:104.98, batch-reuse:1
@ 2604 train 4.8657 , allloss: 4.8668, dt: 1292.69ms, fracRes: 0.3334, norm(attn): 0.1953, norm(output): 0.4199, norm(x): 0.3533, norm(y): 1.0120, norm:1.3328, tok/sec: 101395.10, flops:106.42, batch-reuse:1
@ 2605 train 4.8188 , allloss: 4.8198, dt: 1288.70ms, fracRes: 0.3338, norm(attn): 0.1924, norm(output): 0.4141, norm(x): 0.3533, norm(y): 1.0122, norm:1.4592, tok/sec: 101708.50, flops:106.74, batch-reuse:1
@ 2606 train 4.8840 , allloss: 4.8850, dt: 1309.45ms, fracRes: 0.3339, norm(attn): 0.1924, norm(output): 0.4141, norm(x): 0.3526, norm(y): 1.0122, norm:1.4533, tok/sec: 100097.21, flops:105.05, batch-reuse:1
@ 2607 train 4.8156 , allloss: 4.8168, dt: 1325.55ms, fracRes: 0.3310, norm(attn): 0.1973, norm(output): 0.4160, norm(x): 0.3560, norm(y): 1.0121, norm:1.5575, tok/sec: 98881.37, flops:103.78, batch-reuse:1
@ 2608 train 4.8455 , allloss: 4.8474, dt: 1325.89ms, fracRes: 0.3290, norm(attn): 0.1973, norm(output): 0.4141, norm(x): 0.3565, norm(y): 1.0120, norm:1.6340, tok/sec: 98856.07, flops:103.75, batch-reuse:1
@ 2609 train 5.0039 , allloss: 5.0061, dt: 1298.92ms, fracRes: 0.3301, norm(attn): 0.1982, norm(output): 0.4160, norm(x): 0.3558, norm(y): 1.0120, norm:1.3974, tok/sec: 100908.64, flops:105.91, batch-reuse:1
@ 2610 train 4.9908 , allloss: 4.9920, dt: 1287.58ms, fracRes: 0.3311, norm(attn): 0.2021, norm(output): 0.4180, norm(x): 0.3582, norm(y): 1.0120, norm:1.5736, tok/sec: 101796.90, flops:106.84, batch-reuse:1
@ 2611 train 4.8732 , allloss: 4.8746, dt: 1305.79ms, fracRes: 0.3278, norm(attn): 0.2012, norm(output): 0.4238, norm(x): 0.3577, norm(y): 1.0121, norm:1.3445, tok/sec: 100377.72, flops:105.35, batch-reuse:1
@ 2612 train 4.8547 , allloss: 4.8557, dt: 1297.03ms, fracRes: 0.3291, norm(attn): 0.1982, norm(output): 0.4180, norm(x): 0.3557, norm(y): 1.0121, norm:1.3310, tok/sec: 101055.75, flops:106.06, batch-reuse:1
@ 2613 train 4.7444 , allloss: 4.7458, dt: 1287.91ms, fracRes: 0.3293, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.3571, norm(y): 1.0121, norm:1.5032, tok/sec: 101771.22, flops:106.81, batch-reuse:1
@ 2614 train 4.8615 , allloss: 4.8627, dt: 1303.99ms, fracRes: 0.3309, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.3565, norm(y): 1.0120, norm:1.3120, tok/sec: 100516.23, flops:105.49, batch-reuse:1
@ 2615 train 4.8930 , allloss: 4.8940, dt: 1342.53ms, fracRes: 0.3340, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3544, norm(y): 1.0122, norm:1.4309, tok/sec: 97630.61, flops:102.47, batch-reuse:1
@ 2616 train 4.8743 , allloss: 4.8766, dt: 1287.40ms, fracRes: 0.3336, norm(attn): 0.1943, norm(output): 0.4297, norm(x): 0.3567, norm(y): 1.0121, norm:1.2903, tok/sec: 101811.03, flops:106.85, batch-reuse:1
@ 2617 train 4.7861 , allloss: 4.7875, dt: 1292.31ms, fracRes: 0.3344, norm(attn): 0.1924, norm(output): 0.4297, norm(x): 0.3558, norm(y): 1.0121, norm:1.3523, tok/sec: 101424.60, flops:106.45, batch-reuse:1
@ 2618 train 4.7615 , allloss: 4.7645, dt: 1305.38ms, fracRes: 0.3353, norm(attn): 0.1943, norm(output): 0.4258, norm(x): 0.3548, norm(y): 1.0122, norm:1.3599, tok/sec: 100409.31, flops:105.38, batch-reuse:1
@ 2619 train 4.8171 , allloss: 4.8189, dt: 1307.69ms, fracRes: 0.3352, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3556, norm(y): 1.0121, norm:1.4554, tok/sec: 100231.66, flops:105.19, batch-reuse:1
@ 2620 train 4.8811 , allloss: 4.8835, dt: 1320.40ms, fracRes: 0.3363, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3554, norm(y): 1.0122, norm:1.3981, tok/sec: 99266.92, flops:104.18, batch-reuse:1
@ 2621 train 4.8435 , allloss: 4.8487, dt: 1295.26ms, fracRes: 0.3360, norm(attn): 0.1943, norm(output): 0.4258, norm(x): 0.3560, norm(y): 1.0122, norm:1.3805, tok/sec: 101193.31, flops:106.20, batch-reuse:1
@ 2622 train 4.8333 , allloss: 4.8350, dt: 1299.16ms, fracRes: 0.3334, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3585, norm(y): 1.0121, norm:1.4387, tok/sec: 100889.86, flops:105.89, batch-reuse:1
@ 2623 train 4.8861 , allloss: 4.8880, dt: 1310.03ms, fracRes: 0.3341, norm(attn): 0.1953, norm(output): 0.4219, norm(x): 0.3571, norm(y): 1.0122, norm:1.3568, tok/sec: 100052.85, flops:105.01, batch-reuse:1
@ 2624 train 4.9344 , allloss: 4.9373, dt: 1297.05ms, fracRes: 0.3360, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3569, norm(y): 1.0122, norm:1.7520, tok/sec: 101054.06, flops:106.06, batch-reuse:1
@ 2625 train 4.8505 , allloss: 4.8515, dt: 1287.23ms, fracRes: 0.3344, norm(attn): 0.2002, norm(output): 0.4258, norm(x): 0.3590, norm(y): 1.0121, norm:1.4085, tok/sec: 101824.56, flops:106.87, batch-reuse:1
@ 2626 train 4.8187 , allloss: 4.8238, dt: 1281.91ms, fracRes: 0.3337, norm(attn): 0.2002, norm(output): 0.4238, norm(x): 0.3572, norm(y): 1.0122, norm:1.8290, tok/sec: 102247.47, flops:107.31, batch-reuse:1
@ 2627 train 4.8699 , allloss: 4.8711, dt: 1293.29ms, fracRes: 0.3300, norm(attn): 0.1992, norm(output): 0.4219, norm(x): 0.3582, norm(y): 1.0121, norm:1.6023, tok/sec: 101347.64, flops:106.37, batch-reuse:1
@ 2628 train 4.7789 , allloss: 4.7803, dt: 1289.73ms, fracRes: 0.3311, norm(attn): 0.1992, norm(output): 0.4258, norm(x): 0.3567, norm(y): 1.0121, norm:1.5745, tok/sec: 101627.15, flops:106.66, batch-reuse:1
@ 2629 train 4.7728 , allloss: 4.7749, dt: 1320.31ms, fracRes: 0.3276, norm(attn): 0.2021, norm(output): 0.4238, norm(x): 0.3578, norm(y): 1.0120, norm:1.3188, tok/sec: 99273.90, flops:104.19, batch-reuse:1
@ 2630 train 4.8769 , allloss: 4.8781, dt: 1291.10ms, fracRes: 0.3318, norm(attn): 0.1973, norm(output): 0.4180, norm(x): 0.3571, norm(y): 1.0122, norm:1.4995, tok/sec: 101519.37, flops:106.55, batch-reuse:1
@ 2631 train 4.7679 , allloss: 4.7703, dt: 1302.73ms, fracRes: 0.3312, norm(attn): 0.1992, norm(output): 0.4219, norm(x): 0.3576, norm(y): 1.0122, norm:1.4016, tok/sec: 100613.47, flops:105.60, batch-reuse:1
@ 2632 train 4.8287 , allloss: 4.8309, dt: 1308.89ms, fracRes: 0.3336, norm(attn): 0.1982, norm(output): 0.4180, norm(x): 0.3566, norm(y): 1.0122, norm:1.7058, tok/sec: 100139.71, flops:105.10, batch-reuse:1
@ 2633 train 4.8180 , allloss: 4.8196, dt: 1345.15ms, fracRes: 0.3343, norm(attn): 0.2002, norm(output): 0.4219, norm(x): 0.3551, norm(y): 1.0121, norm:1.2717, tok/sec: 97440.23, flops:102.27, batch-reuse:1
@ 2634 train 4.7897 , allloss: 4.7911, dt: 1307.68ms, fracRes: 0.3336, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.3581, norm(y): 1.0121, norm:1.6484, tok/sec: 100232.65, flops:105.20, batch-reuse:1
@ 2635 train 4.7801 , allloss: 4.7811, dt: 1300.82ms, fracRes: 0.3353, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3585, norm(y): 1.0122, norm:1.5027, tok/sec: 100761.11, flops:105.75, batch-reuse:1
@ 2636 train 4.8399 , allloss: 4.8414, dt: 1281.12ms, fracRes: 0.3362, norm(attn): 0.1963, norm(output): 0.4316, norm(x): 0.3599, norm(y): 1.0121, norm:1.2158, tok/sec: 102310.40, flops:107.38, batch-reuse:1
@ 2637 train 4.8079 , allloss: 4.8100, dt: 1271.92ms, fracRes: 0.3370, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.3580, norm(y): 1.0122, norm:1.3730, tok/sec: 103050.22, flops:108.15, batch-reuse:1
@ 2638 train 4.8609 , allloss: 4.8616, dt: 1304.06ms, fracRes: 0.3369, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3577, norm(y): 1.0122, norm:1.5043, tok/sec: 100510.48, flops:105.49, batch-reuse:1
@ 2639 train 4.9721 , allloss: 4.9746, dt: 1291.45ms, fracRes: 0.3352, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.3596, norm(y): 1.0122, norm:1.4866, tok/sec: 101491.89, flops:106.52, batch-reuse:1
@ 2640 train 4.7811 , allloss: 4.7843, dt: 1315.13ms, fracRes: 0.3323, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.3601, norm(y): 1.0121, norm:1.4897, tok/sec: 99664.85, flops:104.60, batch-reuse:1
@ 2641 train 4.8611 , allloss: 4.8620, dt: 1295.97ms, fracRes: 0.3357, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3583, norm(y): 1.0123, norm:1.6818, tok/sec: 101137.94, flops:106.15, batch-reuse:1
@ 2642 train 4.8305 , allloss: 4.8314, dt: 1281.50ms, fracRes: 0.3332, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.3588, norm(y): 1.0123, norm:1.5267, tok/sec: 102279.77, flops:107.34, batch-reuse:1
@ 2643 train 4.7326 , allloss: 4.7343, dt: 1287.29ms, fracRes: 0.3334, norm(attn): 0.1992, norm(output): 0.4258, norm(x): 0.3569, norm(y): 1.0122, norm:1.4485, tok/sec: 101819.85, flops:106.86, batch-reuse:1
@ 2644 train 4.7924 , allloss: 4.7951, dt: 1286.38ms, fracRes: 0.3338, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.3580, norm(y): 1.0122, norm:1.5119, tok/sec: 101892.24, flops:106.94, batch-reuse:1
@ 2645 train 4.8710 , allloss: 4.8747, dt: 1280.86ms, fracRes: 0.3354, norm(attn): 0.2002, norm(output): 0.4277, norm(x): 0.3589, norm(y): 1.0122, norm:1.5095, tok/sec: 102330.95, flops:107.40, batch-reuse:1
@ 2646 train 4.8602 , allloss: 4.8631, dt: 1288.03ms, fracRes: 0.3373, norm(attn): 0.1973, norm(output): 0.4277, norm(x): 0.3590, norm(y): 1.0122, norm:1.6641, tok/sec: 101761.54, flops:106.80, batch-reuse:1
@ 2647 train 4.8079 , allloss: 4.8092, dt: 1303.94ms, fracRes: 0.3388, norm(attn): 0.1934, norm(output): 0.4297, norm(x): 0.3577, norm(y): 1.0122, norm:1.6594, tok/sec: 100519.61, flops:105.50, batch-reuse:1
@ 2648 train 4.7414 , allloss: 4.7424, dt: 1310.00ms, fracRes: 0.3387, norm(attn): 0.1963, norm(output): 0.4297, norm(x): 0.3585, norm(y): 1.0121, norm:1.4303, tok/sec: 100054.64, flops:105.01, batch-reuse:1
@ 2649 train 4.8098 , allloss: 4.8111, dt: 1274.61ms, fracRes: 0.3368, norm(attn): 0.1963, norm(output): 0.4297, norm(x): 0.3589, norm(y): 1.0122, norm:1.6158, tok/sec: 102833.31, flops:107.93, batch-reuse:1
@ 2650 train 4.7532 , allloss: 4.7542, dt: 1308.75ms, fracRes: 0.3352, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3578, norm(y): 1.0123, norm:1.5570, tok/sec: 100150.53, flops:105.11, batch-reuse:1
@ 2651 train 4.7697 , allloss: 4.7717, dt: 1279.59ms, fracRes: 0.3328, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.3575, norm(y): 1.0123, norm:1.4425, tok/sec: 102433.18, flops:107.51, batch-reuse:1
@ 2652 train 4.7828 , allloss: 4.7850, dt: 1301.85ms, fracRes: 0.3303, norm(attn): 0.2021, norm(output): 0.4297, norm(x): 0.3596, norm(y): 1.0122, norm:1.6734, tok/sec: 100681.00, flops:105.67, batch-reuse:1
@ 2653 train 4.7924 , allloss: 4.7937, dt: 1295.93ms, fracRes: 0.3286, norm(attn): 0.2002, norm(output): 0.4316, norm(x): 0.3623, norm(y): 1.0122, norm:1.4662, tok/sec: 101140.96, flops:106.15, batch-reuse:1
@ 2654 train 4.7644 , allloss: 4.7686, dt: 1280.83ms, fracRes: 0.3326, norm(attn): 0.2002, norm(output): 0.4297, norm(x): 0.3595, norm(y): 1.0123, norm:1.6108, tok/sec: 102333.48, flops:107.40, batch-reuse:1
@ 2655 train 4.7500 , allloss: 4.7513, dt: 1303.89ms, fracRes: 0.3330, norm(attn): 0.2021, norm(output): 0.4336, norm(x): 0.3610, norm(y): 1.0122, norm:1.4618, tok/sec: 100523.67, flops:105.50, batch-reuse:1
@ 2656 train 4.8476 , allloss: 4.8487, dt: 1305.26ms, fracRes: 0.3338, norm(attn): 0.1973, norm(output): 0.4316, norm(x): 0.3606, norm(y): 1.0124, norm:1.3475, tok/sec: 100418.22, flops:105.39, batch-reuse:1
@ 2657 train 4.7092 , allloss: 4.7104, dt: 1287.89ms, fracRes: 0.3334, norm(attn): 0.1963, norm(output): 0.4316, norm(x): 0.3617, norm(y): 1.0123, norm:1.6946, tok/sec: 101772.44, flops:106.81, batch-reuse:1
@ 2658 train 4.7865 , allloss: 4.7876, dt: 1299.04ms, fracRes: 0.3359, norm(attn): 0.1953, norm(output): 0.4336, norm(x): 0.3618, norm(y): 1.0124, norm:1.6590, tok/sec: 100899.29, flops:105.90, batch-reuse:1
@ 2659 train 4.7392 , allloss: 4.7410, dt: 1287.11ms, fracRes: 0.3341, norm(attn): 0.1953, norm(output): 0.4297, norm(x): 0.3604, norm(y): 1.0123, norm:1.6759, tok/sec: 101834.09, flops:106.88, batch-reuse:1
@ 2660 train 4.8113 , allloss: 4.8131, dt: 1292.88ms, fracRes: 0.3357, norm(attn): 0.1992, norm(output): 0.4297, norm(x): 0.3597, norm(y): 1.0123, norm:1.8361, tok/sec: 101379.71, flops:106.40, batch-reuse:1
@ 2661 train 4.7602 , allloss: 4.7663, dt: 1299.61ms, fracRes: 0.3331, norm(attn): 0.1992, norm(output): 0.4316, norm(x): 0.3600, norm(y): 1.0122, norm:1.6094, tok/sec: 100854.69, flops:105.85, batch-reuse:1
@ 2662 train 4.6946 , allloss: 4.6955, dt: 1298.98ms, fracRes: 0.3369, norm(attn): 0.1963, norm(output): 0.4297, norm(x): 0.3589, norm(y): 1.0124, norm:1.7240, tok/sec: 100903.79, flops:105.90, batch-reuse:1
@ 2663 train 4.7754 , allloss: 4.7767, dt: 1280.65ms, fracRes: 0.3354, norm(attn): 0.1953, norm(output): 0.4336, norm(x): 0.3606, norm(y): 1.0123, norm:1.5881, tok/sec: 102347.65, flops:107.42, batch-reuse:1
@ 2664 train 4.7955 , allloss: 4.7963, dt: 1341.61ms, fracRes: 0.3368, norm(attn): 0.1953, norm(output): 0.4316, norm(x): 0.3606, norm(y): 1.0123, norm:1.4074, tok/sec: 97697.70, flops:102.54, batch-reuse:1
@ 2665 train 4.7404 , allloss: 4.7426, dt: 1343.19ms, fracRes: 0.3380, norm(attn): 0.1953, norm(output): 0.4316, norm(x): 0.3581, norm(y): 1.0124, norm:1.3039, tok/sec: 97582.43, flops:102.41, batch-reuse:1
@ 2666 train 4.8450 , allloss: 4.8473, dt: 1299.51ms, fracRes: 0.3368, norm(attn): 0.1953, norm(output): 0.4336, norm(x): 0.3613, norm(y): 1.0123, norm:1.5125, tok/sec: 100862.95, flops:105.86, batch-reuse:1
@ 2667 train 4.8145 , allloss: 4.8215, dt: 1337.28ms, fracRes: 0.3377, norm(attn): 0.1973, norm(output): 0.4316, norm(x): 0.3601, norm(y): 1.0123, norm:1.4274, tok/sec: 98014.10, flops:102.87, batch-reuse:1
@ 2668 train 4.7997 , allloss: 4.8005, dt: 1298.16ms, fracRes: 0.3388, norm(attn): 0.1982, norm(output): 0.4297, norm(x): 0.3589, norm(y): 1.0123, norm:1.4694, tok/sec: 100967.81, flops:105.97, batch-reuse:1
@ 2669 train 4.7367 , allloss: 4.7380, dt: 1337.91ms, fracRes: 0.3371, norm(attn): 0.1973, norm(output): 0.4297, norm(x): 0.3573, norm(y): 1.0124, norm:1.3778, tok/sec: 97967.71, flops:102.82, batch-reuse:1
@ 2670 train 4.7413 , allloss: 4.7441, dt: 1304.81ms, fracRes: 0.3334, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3627, norm(y): 1.0123, norm:1.5923, tok/sec: 100452.81, flops:105.43, batch-reuse:1
@ 2671 train 4.7809 , allloss: 4.7827, dt: 1311.27ms, fracRes: 0.3345, norm(attn): 0.1992, norm(output): 0.4336, norm(x): 0.3616, norm(y): 1.0124, norm:1.6636, tok/sec: 99957.98, flops:104.91, batch-reuse:1
@ 2672 train 4.7268 , allloss: 4.7319, dt: 1310.63ms, fracRes: 0.3326, norm(attn): 0.2021, norm(output): 0.4336, norm(x): 0.3607, norm(y): 1.0123, norm:1.5951, tok/sec: 100006.61, flops:104.96, batch-reuse:1
@ 2673 train 4.6628 , allloss: 4.6666, dt: 1321.30ms, fracRes: 0.3338, norm(attn): 0.2021, norm(output): 0.4316, norm(x): 0.3608, norm(y): 1.0123, norm:1.3101, tok/sec: 99199.58, flops:104.11, batch-reuse:1
@ 2674 train 4.8567 , allloss: 4.8606, dt: 1309.52ms, fracRes: 0.3352, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3618, norm(y): 1.0122, norm:1.9129, tok/sec: 100091.47, flops:105.05, batch-reuse:1
@ 2675 train 4.7970 , allloss: 4.7987, dt: 1284.82ms, fracRes: 0.3352, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3623, norm(y): 1.0123, norm:1.5631, tok/sec: 102016.01, flops:107.07, batch-reuse:1
@ 2676 train 4.7148 , allloss: 4.7174, dt: 1280.78ms, fracRes: 0.3364, norm(attn): 0.1973, norm(output): 0.4336, norm(x): 0.3602, norm(y): 1.0123, norm:1.3893, tok/sec: 102337.80, flops:107.41, batch-reuse:1
@ 2677 train 4.7326 , allloss: 4.7337, dt: 1297.15ms, fracRes: 0.3372, norm(attn): 0.1963, norm(output): 0.4316, norm(x): 0.3607, norm(y): 1.0123, norm:1.4797, tok/sec: 101045.81, flops:106.05, batch-reuse:1
@ 2678 train 4.8211 , allloss: 4.8238, dt: 1297.94ms, fracRes: 0.3397, norm(attn): 0.1943, norm(output): 0.4316, norm(x): 0.3596, norm(y): 1.0123, norm:1.3240, tok/sec: 100984.30, flops:105.98, batch-reuse:1
@ 2679 train 4.7806 , allloss: 4.7821, dt: 1290.53ms, fracRes: 0.3394, norm(attn): 0.1934, norm(output): 0.4355, norm(x): 0.3615, norm(y): 1.0123, norm:1.5744, tok/sec: 101564.53, flops:106.59, batch-reuse:1
@ 2680 train 4.6651 , allloss: 4.6674, dt: 1272.63ms, fracRes: 0.3393, norm(attn): 0.1953, norm(output): 0.4336, norm(x): 0.3608, norm(y): 1.0123, norm:1.4674, tok/sec: 102993.33, flops:108.09, batch-reuse:1
@ 2681 train 4.7659 , allloss: 4.7673, dt: 1285.72ms, fracRes: 0.3428, norm(attn): 0.1904, norm(output): 0.4316, norm(x): 0.3580, norm(y): 1.0125, norm:1.3334, tok/sec: 101944.67, flops:106.99, batch-reuse:1
@ 2682 train 4.6326 , allloss: 4.6339, dt: 1272.31ms, fracRes: 0.3411, norm(attn): 0.1963, norm(output): 0.4336, norm(x): 0.3588, norm(y): 1.0124, norm:1.4416, tok/sec: 103019.30, flops:108.12, batch-reuse:1
@ 2683 train 4.7114 , allloss: 4.7149, dt: 1304.84ms, fracRes: 0.3357, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.3614, norm(y): 1.0123, norm:1.4633, tok/sec: 100450.44, flops:105.42, batch-reuse:1
@ 2684 train 4.7590 , allloss: 4.7608, dt: 1321.63ms, fracRes: 0.3354, norm(attn): 0.1953, norm(output): 0.4336, norm(x): 0.3598, norm(y): 1.0124, norm:1.3179, tok/sec: 99174.40, flops:104.09, batch-reuse:1
@ 2685 train 4.7398 , allloss: 4.7411, dt: 1294.71ms, fracRes: 0.3347, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3623, norm(y): 1.0124, norm:1.4292, tok/sec: 101236.82, flops:106.25, batch-reuse:1
@ 2686 train 4.8159 , allloss: 4.8169, dt: 1320.15ms, fracRes: 0.3335, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3648, norm(y): 1.0124, norm:1.3665, tok/sec: 99285.69, flops:104.20, batch-reuse:1
@ 2687 train 4.7427 , allloss: 4.7442, dt: 1277.56ms, fracRes: 0.3359, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3631, norm(y): 1.0125, norm:1.6728, tok/sec: 102595.96, flops:107.68, batch-reuse:1
@ 2688 train 4.7306 , allloss: 4.7325, dt: 1292.95ms, fracRes: 0.3333, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3658, norm(y): 1.0124, norm:1.5878, tok/sec: 101374.23, flops:106.39, batch-reuse:1
@ 2689 train 4.8297 , allloss: 4.8308, dt: 1294.09ms, fracRes: 0.3327, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3685, norm(y): 1.0124, norm:1.8569, tok/sec: 101285.18, flops:106.30, batch-reuse:1
@ 2690 train 4.7692 , allloss: 4.7732, dt: 1308.64ms, fracRes: 0.3348, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.3675, norm(y): 1.0124, norm:1.5807, tok/sec: 100158.89, flops:105.12, batch-reuse:1
@ 2691 train 4.7746 , allloss: 4.7768, dt: 1314.75ms, fracRes: 0.3357, norm(attn): 0.1982, norm(output): 0.4375, norm(x): 0.3661, norm(y): 1.0124, norm:1.5922, tok/sec: 99693.52, flops:104.63, batch-reuse:1
@ 2692 train 4.6410 , allloss: 4.6473, dt: 1289.18ms, fracRes: 0.3358, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3662, norm(y): 1.0124, norm:1.5445, tok/sec: 101670.71, flops:106.71, batch-reuse:1
@ 2693 train 4.8305 , allloss: 4.8319, dt: 1310.50ms, fracRes: 0.3366, norm(attn): 0.2002, norm(output): 0.4336, norm(x): 0.3659, norm(y): 1.0124, norm:1.8516, tok/sec: 100016.92, flops:104.97, batch-reuse:1
@ 2694 train 4.7733 , allloss: 4.7765, dt: 1332.76ms, fracRes: 0.3385, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3641, norm(y): 1.0125, norm:1.4330, tok/sec: 98346.42, flops:103.22, batch-reuse:1
@ 2695 train 4.7426 , allloss: 4.7442, dt: 1293.05ms, fracRes: 0.3410, norm(attn): 0.1953, norm(output): 0.4355, norm(x): 0.3644, norm(y): 1.0126, norm:1.6386, tok/sec: 101366.50, flops:106.39, batch-reuse:1
@ 2696 train 4.7149 , allloss: 4.7193, dt: 1274.94ms, fracRes: 0.3387, norm(attn): 0.1953, norm(output): 0.4355, norm(x): 0.3643, norm(y): 1.0125, norm:1.5920, tok/sec: 102806.02, flops:107.90, batch-reuse:1
@ 2697 train 4.6757 , allloss: 4.6821, dt: 1298.55ms, fracRes: 0.3399, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3626, norm(y): 1.0125, norm:1.4931, tok/sec: 100936.93, flops:105.94, batch-reuse:1
@ 2698 train 4.6860 , allloss: 4.6874, dt: 1294.61ms, fracRes: 0.3386, norm(attn): 0.1992, norm(output): 0.4336, norm(x): 0.3620, norm(y): 1.0125, norm:1.4446, tok/sec: 101244.20, flops:106.26, batch-reuse:1
@ 2699 train 4.7540 , allloss: 4.7609, dt: 1296.35ms, fracRes: 0.3353, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3641, norm(y): 1.0123, norm:1.6678, tok/sec: 101108.63, flops:106.12, batch-reuse:1
@ 2700 train 4.6723 , allloss: 4.6752, dt: 1294.48ms, fracRes: 0.3392, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3620, norm(y): 1.0126, norm:1.5732, tok/sec: 101254.91, flops:106.27, batch-reuse:1
@ 2701 train 4.6378 , allloss: 4.6428, dt: 1329.31ms, fracRes: 0.3389, norm(attn): 0.1934, norm(output): 0.4355, norm(x): 0.3628, norm(y): 1.0127, norm:1.3960, tok/sec: 98601.82, flops:103.48, batch-reuse:1
@ 2702 train 4.7684 , allloss: 4.7712, dt: 1298.51ms, fracRes: 0.3365, norm(attn): 0.1973, norm(output): 0.4375, norm(x): 0.3649, norm(y): 1.0125, norm:1.8435, tok/sec: 100940.53, flops:105.94, batch-reuse:1
@ 2703 train 4.7337 , allloss: 4.7389, dt: 1296.16ms, fracRes: 0.3365, norm(attn): 0.1982, norm(output): 0.4375, norm(x): 0.3644, norm(y): 1.0124, norm:1.3582, tok/sec: 101122.95, flops:106.13, batch-reuse:1
@ 2704 train 4.8789 , allloss: 4.9087, dt: 1305.16ms, fracRes: 0.3374, norm(attn): 0.1963, norm(output): 0.4375, norm(x): 0.3652, norm(y): 1.0125, norm:1.7576, tok/sec: 100426.11, flops:105.40, batch-reuse:1
@ 2705 train 4.6846 , allloss: 4.6871, dt: 1271.38ms, fracRes: 0.3356, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3648, norm(y): 1.0125, norm:1.4506, tok/sec: 103094.18, flops:108.20, batch-reuse:1
@ 2706 train 4.6689 , allloss: 4.6700, dt: 1287.81ms, fracRes: 0.3361, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3658, norm(y): 1.0124, norm:1.5528, tok/sec: 101779.19, flops:106.82, batch-reuse:1
@ 2707 train 4.7202 , allloss: 4.7227, dt: 1299.53ms, fracRes: 0.3381, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3643, norm(y): 1.0125, norm:1.4984, tok/sec: 100861.06, flops:105.86, batch-reuse:1
@ 2708 train 4.6709 , allloss: 4.6747, dt: 1293.22ms, fracRes: 0.3407, norm(attn): 0.1963, norm(output): 0.4355, norm(x): 0.3619, norm(y): 1.0126, norm:1.4434, tok/sec: 101353.13, flops:106.37, batch-reuse:1
@ 2709 train 4.6764 , allloss: 4.6834, dt: 1316.28ms, fracRes: 0.3387, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3632, norm(y): 1.0125, norm:1.4695, tok/sec: 99577.55, flops:104.51, batch-reuse:1
@ 2710 train 4.8264 , allloss: 4.8278, dt: 1291.47ms, fracRes: 0.3386, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3647, norm(y): 1.0125, norm:1.4431, tok/sec: 101490.43, flops:106.52, batch-reuse:1
@ 2711 train 4.8228 , allloss: 4.8253, dt: 1294.74ms, fracRes: 0.3395, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3620, norm(y): 1.0125, norm:1.5243, tok/sec: 101234.53, flops:106.25, batch-reuse:1
@ 2712 train 4.7528 , allloss: 4.7537, dt: 1292.17ms, fracRes: 0.3419, norm(attn): 0.1973, norm(output): 0.4355, norm(x): 0.3627, norm(y): 1.0125, norm:1.6976, tok/sec: 101435.47, flops:106.46, batch-reuse:1
@ 2713 train 4.7370 , allloss: 4.7382, dt: 1331.85ms, fracRes: 0.3411, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3646, norm(y): 1.0124, norm:1.8276, tok/sec: 98413.48, flops:103.29, batch-reuse:1
@ 2714 train 4.7687 , allloss: 4.7701, dt: 1319.50ms, fracRes: 0.3429, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.3626, norm(y): 1.0126, norm:1.5573, tok/sec: 99334.83, flops:104.25, batch-reuse:1
@ 2715 train 4.6992 , allloss: 4.7052, dt: 1291.29ms, fracRes: 0.3417, norm(attn): 0.1982, norm(output): 0.4355, norm(x): 0.3623, norm(y): 1.0126, norm:1.6229, tok/sec: 101505.09, flops:106.53, batch-reuse:1
@ 2716 train 4.6664 , allloss: 4.6694, dt: 1289.11ms, fracRes: 0.3400, norm(attn): 0.2002, norm(output): 0.4355, norm(x): 0.3638, norm(y): 1.0125, norm:1.5164, tok/sec: 101676.17, flops:106.71, batch-reuse:1
@ 2717 train 4.7228 , allloss: 4.7352, dt: 1282.48ms, fracRes: 0.3402, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.3654, norm(y): 1.0125, norm:1.3823, tok/sec: 102202.12, flops:107.26, batch-reuse:1
@ 2718 train 4.6314 , allloss: 4.6329, dt: 1281.13ms, fracRes: 0.3379, norm(attn): 0.1992, norm(output): 0.4355, norm(x): 0.3640, norm(y): 1.0125, norm:1.5112, tok/sec: 102310.02, flops:107.38, batch-reuse:1
@ 2719 train 4.7686 , allloss: 4.7707, dt: 1304.09ms, fracRes: 0.3377, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.3654, norm(y): 1.0125, norm:1.5057, tok/sec: 100508.12, flops:105.49, batch-reuse:1
@ 2720 train 4.7504 , allloss: 4.7521, dt: 1286.22ms, fracRes: 0.3338, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3684, norm(y): 1.0124, norm:1.6899, tok/sec: 101904.91, flops:106.95, batch-reuse:1
@ 2721 train 4.6468 , allloss: 4.6498, dt: 1266.78ms, fracRes: 0.3357, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.3646, norm(y): 1.0126, norm:1.4572, tok/sec: 103468.59, flops:108.59, batch-reuse:1
@ 2722 train 4.6936 , allloss: 4.7006, dt: 1284.11ms, fracRes: 0.3352, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3654, norm(y): 1.0125, norm:1.6819, tok/sec: 102072.40, flops:107.13, batch-reuse:1
@ 2723 train 4.7548 , allloss: 4.7573, dt: 1283.73ms, fracRes: 0.3345, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3668, norm(y): 1.0124, norm:1.3948, tok/sec: 102102.86, flops:107.16, batch-reuse:1
@ 2724 train 4.6701 , allloss: 4.6751, dt: 1286.03ms, fracRes: 0.3368, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3657, norm(y): 1.0125, norm:1.5488, tok/sec: 101920.24, flops:106.97, batch-reuse:1
@ 2725 train 4.6645 , allloss: 4.6662, dt: 1288.15ms, fracRes: 0.3361, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3664, norm(y): 1.0125, norm:1.3996, tok/sec: 101751.89, flops:106.79, batch-reuse:1
@ 2726 train 4.6663 , allloss: 4.6677, dt: 1278.81ms, fracRes: 0.3372, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3663, norm(y): 1.0126, norm:1.6188, tok/sec: 102495.19, flops:107.57, batch-reuse:1
@ 2727 train 4.7413 , allloss: 4.7485, dt: 1300.65ms, fracRes: 0.3397, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3662, norm(y): 1.0127, norm:1.3336, tok/sec: 100774.09, flops:105.76, batch-reuse:1
@ 2728 train 4.7624 , allloss: 4.7693, dt: 1285.69ms, fracRes: 0.3369, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3660, norm(y): 1.0125, norm:1.4762, tok/sec: 101947.02, flops:107.00, batch-reuse:1
@ 2729 train 4.7489 , allloss: 4.7511, dt: 1288.35ms, fracRes: 0.3361, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.3674, norm(y): 1.0125, norm:1.5277, tok/sec: 101736.66, flops:106.77, batch-reuse:1
@ 2730 train 4.7321 , allloss: 4.7341, dt: 1292.63ms, fracRes: 0.3354, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3658, norm(y): 1.0126, norm:1.3663, tok/sec: 101399.49, flops:106.42, batch-reuse:1
@ 2731 train 4.6625 , allloss: 4.6657, dt: 1318.81ms, fracRes: 0.3359, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3679, norm(y): 1.0126, norm:1.5946, tok/sec: 99386.62, flops:104.31, batch-reuse:1
@ 2732 train 4.6888 , allloss: 4.6943, dt: 1296.13ms, fracRes: 0.3369, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3680, norm(y): 1.0126, norm:1.6065, tok/sec: 101125.63, flops:106.13, batch-reuse:1
@ 2733 train 4.7253 , allloss: 4.7285, dt: 1303.20ms, fracRes: 0.3364, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3676, norm(y): 1.0125, norm:1.4417, tok/sec: 100576.84, flops:105.56, batch-reuse:1
@ 2734 train 4.6583 , allloss: 4.6597, dt: 1287.70ms, fracRes: 0.3386, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3663, norm(y): 1.0126, norm:1.5838, tok/sec: 101787.71, flops:106.83, batch-reuse:1
@ 2735 train 4.7402 , allloss: 4.7414, dt: 1291.12ms, fracRes: 0.3392, norm(attn): 0.2012, norm(output): 0.4355, norm(x): 0.3661, norm(y): 1.0126, norm:1.3886, tok/sec: 101517.95, flops:106.54, batch-reuse:1
@ 2736 train 4.7654 , allloss: 4.7683, dt: 1295.26ms, fracRes: 0.3400, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3680, norm(y): 1.0126, norm:1.4969, tok/sec: 101193.68, flops:106.20, batch-reuse:1
@ 2737 train 4.7330 , allloss: 4.7360, dt: 1307.17ms, fracRes: 0.3391, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3666, norm(y): 1.0125, norm:1.4512, tok/sec: 100271.53, flops:105.24, batch-reuse:1
@ 2738 train 4.5832 , allloss: 4.5928, dt: 1300.51ms, fracRes: 0.3419, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3652, norm(y): 1.0126, norm:1.8028, tok/sec: 100785.01, flops:105.78, batch-reuse:1
@ 2739 train 4.6966 , allloss: 4.7046, dt: 1296.34ms, fracRes: 0.3389, norm(attn): 0.2031, norm(output): 0.4355, norm(x): 0.3655, norm(y): 1.0126, norm:1.4537, tok/sec: 101109.50, flops:106.12, batch-reuse:1
@ 2740 train 4.5518 , allloss: 4.5558, dt: 1306.49ms, fracRes: 0.3373, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3665, norm(y): 1.0125, norm:1.6409, tok/sec: 100323.48, flops:105.29, batch-reuse:1
@ 2741 train 4.6418 , allloss: 4.6459, dt: 1275.82ms, fracRes: 0.3394, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3641, norm(y): 1.0126, norm:1.5995, tok/sec: 102735.13, flops:107.82, batch-reuse:1
@ 2742 train 4.6379 , allloss: 4.6435, dt: 1326.35ms, fracRes: 0.3417, norm(attn): 0.2041, norm(output): 0.4355, norm(x): 0.3653, norm(y): 1.0126, norm:1.4568, tok/sec: 98821.88, flops:103.72, batch-reuse:1
@ 2743 train 4.6006 , allloss: 4.6020, dt: 1298.02ms, fracRes: 0.3429, norm(attn): 0.2021, norm(output): 0.4355, norm(x): 0.3667, norm(y): 1.0126, norm:1.5421, tok/sec: 100978.09, flops:105.98, batch-reuse:1
@ 2744 train 4.6369 , allloss: 4.6385, dt: 1304.47ms, fracRes: 0.3441, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3664, norm(y): 1.0127, norm:1.5656, tok/sec: 100478.79, flops:105.45, batch-reuse:1
@ 2745 train 4.5776 , allloss: 4.5789, dt: 1294.58ms, fracRes: 0.3437, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3661, norm(y): 1.0127, norm:1.6313, tok/sec: 101246.42, flops:106.26, batch-reuse:1
@ 2746 train 4.5822 , allloss: 4.5861, dt: 1303.64ms, fracRes: 0.3412, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3682, norm(y): 1.0127, norm:1.4356, tok/sec: 100542.86, flops:105.52, batch-reuse:1
@ 2747 train 4.6109 , allloss: 4.6189, dt: 1283.46ms, fracRes: 0.3390, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.3686, norm(y): 1.0126, norm:1.4912, tok/sec: 102124.07, flops:107.18, batch-reuse:1
@ 2748 train 4.6571 , allloss: 4.6590, dt: 1301.29ms, fracRes: 0.3405, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3659, norm(y): 1.0127, norm:1.5369, tok/sec: 100724.74, flops:105.71, batch-reuse:1
@ 2749 train 4.6204 , allloss: 4.6223, dt: 1287.80ms, fracRes: 0.3394, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3669, norm(y): 1.0126, norm:1.5536, tok/sec: 101779.92, flops:106.82, batch-reuse:1
@ 2750 train 4.6109 , allloss: 4.6152, dt: 1278.97ms, fracRes: 0.3403, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3712, norm(y): 1.0126, norm:1.9713, tok/sec: 102482.79, flops:107.56, batch-reuse:1
@ 2751 train 4.6809 , allloss: 4.6832, dt: 1296.47ms, fracRes: 0.3393, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3679, norm(y): 1.0126, norm:1.7504, tok/sec: 101098.92, flops:106.11, batch-reuse:1
@ 2752 train 4.6339 , allloss: 4.6385, dt: 1282.89ms, fracRes: 0.3392, norm(attn): 0.2041, norm(output): 0.4375, norm(x): 0.3672, norm(y): 1.0126, norm:1.6678, tok/sec: 102169.24, flops:107.23, batch-reuse:1
@ 2753 train 4.6378 , allloss: 4.6395, dt: 1306.38ms, fracRes: 0.3404, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3662, norm(y): 1.0127, norm:1.4941, tok/sec: 100331.99, flops:105.30, batch-reuse:1
@ 2754 train 4.6140 , allloss: 4.6188, dt: 1332.63ms, fracRes: 0.3387, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3681, norm(y): 1.0126, norm:1.4577, tok/sec: 98355.80, flops:103.23, batch-reuse:1
@ 2755 train 4.6359 , allloss: 4.6397, dt: 1284.06ms, fracRes: 0.3370, norm(attn): 0.2031, norm(output): 0.4375, norm(x): 0.3690, norm(y): 1.0126, norm:1.5331, tok/sec: 102075.90, flops:107.13, batch-reuse:1
@ 2756 train 4.5793 , allloss: 4.5811, dt: 1279.64ms, fracRes: 0.3393, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3677, norm(y): 1.0128, norm:1.3750, tok/sec: 102429.04, flops:107.50, batch-reuse:1
@ 2757 train 4.6208 , allloss: 4.6304, dt: 1277.91ms, fracRes: 0.3384, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3682, norm(y): 1.0128, norm:1.5167, tok/sec: 102567.84, flops:107.65, batch-reuse:1
@ 2758 train 4.6128 , allloss: 4.6158, dt: 1304.37ms, fracRes: 0.3402, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3681, norm(y): 1.0127, norm:1.4342, tok/sec: 100486.89, flops:105.46, batch-reuse:1
@ 2759 train 4.6292 , allloss: 4.6314, dt: 1303.51ms, fracRes: 0.3419, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3671, norm(y): 1.0127, norm:1.4368, tok/sec: 100553.16, flops:105.53, batch-reuse:1
@ 2760 train 4.5352 , allloss: 4.5377, dt: 1303.64ms, fracRes: 0.3401, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3679, norm(y): 1.0126, norm:1.3874, tok/sec: 100542.75, flops:105.52, batch-reuse:1
@ 2761 train 4.6676 , allloss: 4.6689, dt: 1311.61ms, fracRes: 0.3426, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3665, norm(y): 1.0127, norm:1.2631, tok/sec: 99931.87, flops:104.88, batch-reuse:1
@ 2762 train 4.6649 , allloss: 4.6681, dt: 1299.67ms, fracRes: 0.3447, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3682, norm(y): 1.0128, norm:1.5088, tok/sec: 100849.92, flops:105.84, batch-reuse:1
@ 2763 train 4.6270 , allloss: 4.6287, dt: 1284.49ms, fracRes: 0.3459, norm(attn): 0.1992, norm(output): 0.4375, norm(x): 0.3662, norm(y): 1.0128, norm:1.5049, tok/sec: 102041.76, flops:107.09, batch-reuse:1
@ 2764 train 4.5870 , allloss: 4.5922, dt: 1277.32ms, fracRes: 0.3423, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3688, norm(y): 1.0126, norm:1.6863, tok/sec: 102615.01, flops:107.70, batch-reuse:1
@ 2765 train 4.6740 , allloss: 4.6762, dt: 1273.04ms, fracRes: 0.3437, norm(attn): 0.2002, norm(output): 0.4375, norm(x): 0.3665, norm(y): 1.0127, norm:1.5588, tok/sec: 102959.76, flops:108.06, batch-reuse:1
@ 2766 train 4.6273 , allloss: 4.6293, dt: 1286.52ms, fracRes: 0.3416, norm(attn): 0.2012, norm(output): 0.4375, norm(x): 0.3681, norm(y): 1.0126, norm:1.4773, tok/sec: 101881.14, flops:106.93, batch-reuse:1
@ 2767 train 4.6297 , allloss: 4.6338, dt: 1303.50ms, fracRes: 0.3405, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3705, norm(y): 1.0126, norm:1.7718, tok/sec: 100553.81, flops:105.53, batch-reuse:1
@ 2768 train 4.5967 , allloss: 4.6002, dt: 1294.77ms, fracRes: 0.3414, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3687, norm(y): 1.0127, norm:1.3595, tok/sec: 101232.03, flops:106.24, batch-reuse:1
@ 2769 train 4.6480 , allloss: 4.6553, dt: 1304.66ms, fracRes: 0.3406, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3697, norm(y): 1.0127, norm:1.5473, tok/sec: 100464.63, flops:105.44, batch-reuse:1
@ 2770 train 4.6033 , allloss: 4.6053, dt: 1287.97ms, fracRes: 0.3395, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3695, norm(y): 1.0126, norm:1.4425, tok/sec: 101766.19, flops:106.81, batch-reuse:1
@ 2771 train 4.7266 , allloss: 4.7279, dt: 1284.30ms, fracRes: 0.3389, norm(attn): 0.2061, norm(output): 0.4375, norm(x): 0.3705, norm(y): 1.0126, norm:1.5869, tok/sec: 102057.41, flops:107.11, batch-reuse:1
@ 2772 train 4.5464 , allloss: 4.5472, dt: 1300.28ms, fracRes: 0.3394, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3680, norm(y): 1.0127, norm:1.3419, tok/sec: 100803.03, flops:105.79, batch-reuse:1
@ 2773 train 4.5977 , allloss: 4.5986, dt: 1295.80ms, fracRes: 0.3408, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.3691, norm(y): 1.0128, norm:1.7361, tok/sec: 101151.73, flops:106.16, batch-reuse:1
@ 2774 train 4.5359 , allloss: 4.5421, dt: 1298.66ms, fracRes: 0.3379, norm(attn): 0.2051, norm(output): 0.4395, norm(x): 0.3722, norm(y): 1.0127, norm:1.6848, tok/sec: 100928.96, flops:105.93, batch-reuse:1
@ 2775 train 4.6342 , allloss: 4.6368, dt: 1312.09ms, fracRes: 0.3403, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3721, norm(y): 1.0127, norm:1.6779, tok/sec: 99895.94, flops:104.84, batch-reuse:1
@ 2776 train 4.7431 , allloss: 4.7456, dt: 1314.06ms, fracRes: 0.3417, norm(attn): 0.2021, norm(output): 0.4375, norm(x): 0.3714, norm(y): 1.0127, norm:1.8858, tok/sec: 99746.05, flops:104.69, batch-reuse:1
@ 2777 train 4.5897 , allloss: 4.5911, dt: 1297.06ms, fracRes: 0.3408, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3715, norm(y): 1.0126, norm:1.5968, tok/sec: 101052.82, flops:106.06, batch-reuse:1
@ 2778 train 4.7268 , allloss: 4.7317, dt: 1294.87ms, fracRes: 0.3411, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.3724, norm(y): 1.0126, norm:1.5974, tok/sec: 101223.68, flops:106.24, batch-reuse:1
@ 2779 train 4.5837 , allloss: 4.5869, dt: 1305.07ms, fracRes: 0.3410, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.3733, norm(y): 1.0127, norm:1.5535, tok/sec: 100433.02, flops:105.41, batch-reuse:1
@ 2780 train 4.4775 , allloss: 4.4790, dt: 1302.83ms, fracRes: 0.3423, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.3701, norm(y): 1.0128, norm:1.3791, tok/sec: 100605.59, flops:105.59, batch-reuse:1
@ 2781 train 4.4475 , allloss: 4.4495, dt: 1281.02ms, fracRes: 0.3417, norm(attn): 0.2031, norm(output): 0.4414, norm(x): 0.3720, norm(y): 1.0127, norm:1.4699, tok/sec: 102318.45, flops:107.39, batch-reuse:1
@ 2782 train 4.6154 , allloss: 4.6173, dt: 1291.29ms, fracRes: 0.3462, norm(attn): 0.1992, norm(output): 0.4395, norm(x): 0.3689, norm(y): 1.0128, norm:1.5031, tok/sec: 101505.03, flops:106.53, batch-reuse:1
@ 2783 train 4.5872 , allloss: 4.5955, dt: 1307.54ms, fracRes: 0.3430, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.3715, norm(y): 1.0127, norm:1.5716, tok/sec: 100242.84, flops:105.21, batch-reuse:1
@ 2784 train 4.6630 , allloss: 4.6648, dt: 1290.74ms, fracRes: 0.3461, norm(attn): 0.1992, norm(output): 0.4395, norm(x): 0.3706, norm(y): 1.0127, norm:1.6671, tok/sec: 101547.69, flops:106.58, batch-reuse:1
@ 2785 train 4.7460 , allloss: 4.7494, dt: 1311.92ms, fracRes: 0.3463, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.3693, norm(y): 1.0127, norm:1.5473, tok/sec: 99908.74, flops:104.86, batch-reuse:1
@ 2786 train 4.6492 , allloss: 4.6509, dt: 1307.24ms, fracRes: 0.3441, norm(attn): 0.2012, norm(output): 0.4395, norm(x): 0.3729, norm(y): 1.0127, norm:1.5803, tok/sec: 100265.97, flops:105.23, batch-reuse:1
@ 2787 train 4.7592 , allloss: 4.7604, dt: 1287.55ms, fracRes: 0.3431, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3727, norm(y): 1.0126, norm:1.6358, tok/sec: 101799.66, flops:106.84, batch-reuse:1
@ 2788 train 4.7595 , allloss: 4.7608, dt: 1306.73ms, fracRes: 0.3435, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.3691, norm(y): 1.0128, norm:1.5759, tok/sec: 100305.27, flops:105.27, batch-reuse:1
@ 2789 train 4.7713 , allloss: 4.7737, dt: 1293.13ms, fracRes: 0.3432, norm(attn): 0.2002, norm(output): 0.4414, norm(x): 0.3711, norm(y): 1.0128, norm:1.4040, tok/sec: 101359.92, flops:106.38, batch-reuse:1
@ 2790 train 4.8483 , allloss: 4.8512, dt: 1297.66ms, fracRes: 0.3432, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3718, norm(y): 1.0128, norm:1.5652, tok/sec: 101006.16, flops:106.01, batch-reuse:1
@ 2791 train 4.7325 , allloss: 4.7338, dt: 1269.44ms, fracRes: 0.3410, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3712, norm(y): 1.0128, norm:1.6719, tok/sec: 103251.46, flops:108.36, batch-reuse:1
@ 2792 train 5.3816 , allloss: 5.3831, dt: 1302.04ms, fracRes: 0.3441, norm(attn): 0.1982, norm(output): 0.4395, norm(x): 0.3716, norm(y): 1.0127, norm:1.9453, tok/sec: 100666.68, flops:105.65, batch-reuse:1
@ 2793 train 4.8066 , allloss: 4.8122, dt: 1306.28ms, fracRes: 0.3402, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3729, norm(y): 1.0127, norm:2.0160, tok/sec: 100339.78, flops:105.31, batch-reuse:1
@ 2794 train 4.7183 , allloss: 4.7245, dt: 1314.56ms, fracRes: 0.3401, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.3749, norm(y): 1.0126, norm:1.6381, tok/sec: 99707.95, flops:104.65, batch-reuse:1
@ 2795 train 4.7169 , allloss: 4.7183, dt: 1308.49ms, fracRes: 0.3431, norm(attn): 0.2051, norm(output): 0.4375, norm(x): 0.3707, norm(y): 1.0128, norm:1.7747, tok/sec: 100170.26, flops:105.13, batch-reuse:1
@ 2796 train 4.8430 , allloss: 4.8450, dt: 1288.71ms, fracRes: 0.3452, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3705, norm(y): 1.0127, norm:1.5859, tok/sec: 101707.84, flops:106.74, batch-reuse:1
@ 2797 train 4.7287 , allloss: 4.7305, dt: 1289.48ms, fracRes: 0.3450, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3706, norm(y): 1.0126, norm:1.4863, tok/sec: 101647.46, flops:106.68, batch-reuse:1
@ 2798 train 4.7471 , allloss: 4.7502, dt: 1315.83ms, fracRes: 0.3459, norm(attn): 0.2002, norm(output): 0.4414, norm(x): 0.3723, norm(y): 1.0128, norm:1.6434, tok/sec: 99611.81, flops:104.54, batch-reuse:1
@ 2799 train 4.7486 , allloss: 4.7529, dt: 1302.75ms, fracRes: 0.3450, norm(attn): 0.2012, norm(output): 0.4434, norm(x): 0.3728, norm(y): 1.0128, norm:1.6785, tok/sec: 100612.09, flops:105.59, batch-reuse:1
@ 2800 train 4.9466 , allloss: 4.9511, dt: 1287.58ms, fracRes: 0.3460, norm(attn): 0.2002, norm(output): 0.4414, norm(x): 0.3742, norm(y): 1.0128, norm:1.8174, tok/sec: 101797.49, flops:106.84, batch-reuse:1
@ 2801 train 4.8105 , allloss: 4.8477, dt: 1290.97ms, fracRes: 0.3445, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.3736, norm(y): 1.0128, norm:2.2299, tok/sec: 101529.48, flops:106.56, batch-reuse:1
@ 2802 train 4.7433 , allloss: 4.7450, dt: 1287.38ms, fracRes: 0.3428, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3735, norm(y): 1.0128, norm:1.7564, tok/sec: 101812.85, flops:106.85, batch-reuse:1
@ 2803 train 4.7161 , allloss: 4.7224, dt: 1288.51ms, fracRes: 0.3416, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3747, norm(y): 1.0128, norm:1.4396, tok/sec: 101723.35, flops:106.76, batch-reuse:1
@ 2804 train 4.8292 , allloss: 4.8353, dt: 1292.35ms, fracRes: 0.3412, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.3776, norm(y): 1.0127, norm:1.7756, tok/sec: 101421.27, flops:106.44, batch-reuse:1
@ 2805 train 4.6543 , allloss: 4.6575, dt: 1305.39ms, fracRes: 0.3421, norm(attn): 0.2002, norm(output): 0.4414, norm(x): 0.3755, norm(y): 1.0129, norm:1.7833, tok/sec: 100408.32, flops:105.38, batch-reuse:1
@ 2806 train 4.6502 , allloss: 4.6570, dt: 1306.30ms, fracRes: 0.3421, norm(attn): 0.2012, norm(output): 0.4434, norm(x): 0.3755, norm(y): 1.0129, norm:1.7376, tok/sec: 100338.60, flops:105.31, batch-reuse:1
@ 2807 train 4.9354 , allloss: 4.9454, dt: 1324.88ms, fracRes: 0.3418, norm(attn): 0.2021, norm(output): 0.4395, norm(x): 0.3735, norm(y): 1.0128, norm:1.5023, tok/sec: 98931.45, flops:103.83, batch-reuse:1
@ 2808 train 4.7200 , allloss: 4.7276, dt: 1281.68ms, fracRes: 0.3436, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3716, norm(y): 1.0128, norm:1.4674, tok/sec: 102265.82, flops:107.33, batch-reuse:1
@ 2809 train 4.6811 , allloss: 4.6875, dt: 1311.94ms, fracRes: 0.3421, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.3747, norm(y): 1.0126, norm:1.7209, tok/sec: 99907.03, flops:104.85, batch-reuse:1
@ 2810 train 4.6598 , allloss: 4.6631, dt: 1295.16ms, fracRes: 0.3454, norm(attn): 0.2031, norm(output): 0.4395, norm(x): 0.3735, norm(y): 1.0127, norm:1.3653, tok/sec: 101201.48, flops:106.21, batch-reuse:1
@ 2811 train 4.7525 , allloss: 4.7564, dt: 1281.02ms, fracRes: 0.3483, norm(attn): 0.2002, norm(output): 0.4395, norm(x): 0.3694, norm(y): 1.0128, norm:1.7631, tok/sec: 102318.51, flops:107.39, batch-reuse:1
@ 2812 train 4.7712 , allloss: 4.7746, dt: 1283.84ms, fracRes: 0.3472, norm(attn): 0.2021, norm(output): 0.4453, norm(x): 0.3744, norm(y): 1.0128, norm:1.6466, tok/sec: 102093.97, flops:107.15, batch-reuse:1
@ 2813 train 4.8184 , allloss: 4.8204, dt: 1298.06ms, fracRes: 0.3472, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3765, norm(y): 1.0128, norm:1.9071, tok/sec: 100975.10, flops:105.98, batch-reuse:1
@ 2814 train 4.7620 , allloss: 4.7720, dt: 1280.43ms, fracRes: 0.3460, norm(attn): 0.2021, norm(output): 0.4434, norm(x): 0.3733, norm(y): 1.0128, norm:1.5799, tok/sec: 102365.26, flops:107.43, batch-reuse:1
@ 2815 train 4.7947 , allloss: 4.7963, dt: 1307.14ms, fracRes: 0.3481, norm(attn): 0.2021, norm(output): 0.4414, norm(x): 0.3696, norm(y): 1.0129, norm:2.0001, tok/sec: 100273.63, flops:105.24, batch-reuse:1
@ 2816 train 4.7254 , allloss: 4.7276, dt: 1319.79ms, fracRes: 0.3468, norm(attn): 0.2021, norm(output): 0.4434, norm(x): 0.3720, norm(y): 1.0129, norm:1.8577, tok/sec: 99312.81, flops:104.23, batch-reuse:1
@ 2817 train 4.7988 , allloss: 4.8057, dt: 1339.66ms, fracRes: 0.3444, norm(attn): 0.2021, norm(output): 0.4453, norm(x): 0.3737, norm(y): 1.0127, norm:1.6395, tok/sec: 97840.05, flops:102.68, batch-reuse:1
@ 2818 train 4.7730 , allloss: 4.7815, dt: 1288.96ms, fracRes: 0.3460, norm(attn): 0.2002, norm(output): 0.4434, norm(x): 0.3734, norm(y): 1.0129, norm:1.6282, tok/sec: 101688.32, flops:106.72, batch-reuse:1
@ 2819 train 4.7663 , allloss: 4.7696, dt: 1305.07ms, fracRes: 0.3453, norm(attn): 0.2002, norm(output): 0.4434, norm(x): 0.3746, norm(y): 1.0130, norm:1.8800, tok/sec: 100433.04, flops:105.41, batch-reuse:1
@ 2820 train 4.7412 , allloss: 4.7428, dt: 1319.87ms, fracRes: 0.3455, norm(attn): 0.1982, norm(output): 0.4453, norm(x): 0.3756, norm(y): 1.0129, norm:1.7694, tok/sec: 99306.50, flops:104.22, batch-reuse:1
@ 2821 train 4.7287 , allloss: 4.7335, dt: 1343.74ms, fracRes: 0.3449, norm(attn): 0.2002, norm(output): 0.4434, norm(x): 0.3757, norm(y): 1.0129, norm:2.0079, tok/sec: 97542.58, flops:102.37, batch-reuse:1
@ 2822 train 4.6849 , allloss: 4.7014, dt: 1289.55ms, fracRes: 0.3463, norm(attn): 0.2012, norm(output): 0.4434, norm(x): 0.3745, norm(y): 1.0128, norm:1.5865, tok/sec: 101641.48, flops:106.67, batch-reuse:1
@ 2823 train 4.7270 , allloss: 4.7308, dt: 1283.10ms, fracRes: 0.3454, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3752, norm(y): 1.0128, norm:1.5296, tok/sec: 102152.34, flops:107.21, batch-reuse:1
@ 2824 train 4.6961 , allloss: 4.7035, dt: 1311.00ms, fracRes: 0.3479, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3748, norm(y): 1.0128, norm:1.6698, tok/sec: 99978.51, flops:104.93, batch-reuse:1
@ 2825 train 4.7075 , allloss: 4.7092, dt: 1324.73ms, fracRes: 0.3474, norm(attn): 0.2012, norm(output): 0.4414, norm(x): 0.3724, norm(y): 1.0128, norm:1.3595, tok/sec: 98942.22, flops:103.84, batch-reuse:1
@ 2826 train 4.7705 , allloss: 4.7751, dt: 1273.81ms, fracRes: 0.3451, norm(attn): 0.2012, norm(output): 0.4434, norm(x): 0.3759, norm(y): 1.0128, norm:1.6503, tok/sec: 102897.94, flops:107.99, batch-reuse:1
@ 2827 train 4.7901 , allloss: 4.7921, dt: 1299.66ms, fracRes: 0.3448, norm(attn): 0.2002, norm(output): 0.4434, norm(x): 0.3762, norm(y): 1.0129, norm:1.6340, tok/sec: 100850.74, flops:105.84, batch-reuse:1
@ 2828 train 4.7636 , allloss: 4.7687, dt: 1316.27ms, fracRes: 0.3432, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.3769, norm(y): 1.0128, norm:1.5911, tok/sec: 99578.26, flops:104.51, batch-reuse:1
@ 2829 train 4.7098 , allloss: 4.7130, dt: 1288.10ms, fracRes: 0.3416, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3761, norm(y): 1.0129, norm:1.4745, tok/sec: 101756.38, flops:106.80, batch-reuse:1
@ 2830 train 4.8531 , allloss: 4.8564, dt: 1330.96ms, fracRes: 0.3440, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3779, norm(y): 1.0129, norm:1.8964, tok/sec: 98479.56, flops:103.36, batch-reuse:1
@ 2831 train 4.8000 , allloss: 4.8016, dt: 1317.13ms, fracRes: 0.3428, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3776, norm(y): 1.0128, norm:1.4766, tok/sec: 99513.56, flops:104.44, batch-reuse:1
@ 2832 train 4.7043 , allloss: 4.7067, dt: 1336.26ms, fracRes: 0.3438, norm(attn): 0.2002, norm(output): 0.4453, norm(x): 0.3760, norm(y): 1.0129, norm:1.7410, tok/sec: 98089.02, flops:102.95, batch-reuse:1
@ 2833 train 4.7712 , allloss: 4.7737, dt: 1316.34ms, fracRes: 0.3443, norm(attn): 0.2002, norm(output): 0.4453, norm(x): 0.3772, norm(y): 1.0129, norm:1.5918, tok/sec: 99573.17, flops:104.50, batch-reuse:1
@ 2834 train 4.7704 , allloss: 4.7724, dt: 1334.24ms, fracRes: 0.3444, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3763, norm(y): 1.0128, norm:1.5377, tok/sec: 98237.06, flops:103.10, batch-reuse:1
@ 2835 train 4.7520 , allloss: 4.7542, dt: 1294.02ms, fracRes: 0.3456, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3777, norm(y): 1.0128, norm:1.8295, tok/sec: 101290.87, flops:106.31, batch-reuse:1
@ 2836 train 4.7402 , allloss: 4.7424, dt: 1299.63ms, fracRes: 0.3456, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3761, norm(y): 1.0128, norm:1.5685, tok/sec: 100853.45, flops:105.85, batch-reuse:1
@ 2837 train 4.8236 , allloss: 4.8264, dt: 1275.68ms, fracRes: 0.3481, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3752, norm(y): 1.0128, norm:1.5188, tok/sec: 102746.65, flops:107.83, batch-reuse:1
@ 2838 train 4.8696 , allloss: 4.8752, dt: 1287.62ms, fracRes: 0.3475, norm(attn): 0.2051, norm(output): 0.4434, norm(x): 0.3758, norm(y): 1.0128, norm:1.4796, tok/sec: 101794.19, flops:106.83, batch-reuse:1
@ 2839 train 4.6954 , allloss: 4.6998, dt: 1304.85ms, fracRes: 0.3452, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3765, norm(y): 1.0129, norm:1.6397, tok/sec: 100449.60, flops:105.42, batch-reuse:1
@ 2840 train 4.7480 , allloss: 4.7496, dt: 1324.77ms, fracRes: 0.3432, norm(attn): 0.2051, norm(output): 0.4434, norm(x): 0.3767, norm(y): 1.0129, norm:1.7652, tok/sec: 98939.30, flops:103.84, batch-reuse:1
@ 2841 train 4.7221 , allloss: 4.7234, dt: 1321.86ms, fracRes: 0.3421, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.3760, norm(y): 1.0129, norm:1.4880, tok/sec: 99156.90, flops:104.07, batch-reuse:1
@ 2842 train 4.7273 , allloss: 4.7319, dt: 1292.54ms, fracRes: 0.3402, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3800, norm(y): 1.0128, norm:1.4400, tok/sec: 101406.81, flops:106.43, batch-reuse:1
@ 2843 train 4.6777 , allloss: 4.6810, dt: 1286.17ms, fracRes: 0.3417, norm(attn): 0.2031, norm(output): 0.4473, norm(x): 0.3784, norm(y): 1.0128, norm:1.5084, tok/sec: 101908.94, flops:106.96, batch-reuse:1
@ 2844 train 4.6769 , allloss: 4.6788, dt: 1292.04ms, fracRes: 0.3416, norm(attn): 0.2041, norm(output): 0.4492, norm(x): 0.3808, norm(y): 1.0127, norm:1.6361, tok/sec: 101445.58, flops:106.47, batch-reuse:1
@ 2845 train 4.7200 , allloss: 4.7214, dt: 1288.77ms, fracRes: 0.3467, norm(attn): 0.2021, norm(output): 0.4473, norm(x): 0.3786, norm(y): 1.0130, norm:1.4213, tok/sec: 101702.95, flops:106.74, batch-reuse:1
@ 2846 train 4.7310 , allloss: 4.7331, dt: 1308.97ms, fracRes: 0.3481, norm(attn): 0.2012, norm(output): 0.4453, norm(x): 0.3772, norm(y): 1.0130, norm:1.6288, tok/sec: 100133.37, flops:105.09, batch-reuse:1
@ 2847 train 4.7513 , allloss: 4.7528, dt: 1320.60ms, fracRes: 0.3483, norm(attn): 0.2012, norm(output): 0.4453, norm(x): 0.3760, norm(y): 1.0129, norm:1.5746, tok/sec: 99251.83, flops:104.17, batch-reuse:1
@ 2848 train 4.7240 , allloss: 4.7254, dt: 1299.63ms, fracRes: 0.3462, norm(attn): 0.2012, norm(output): 0.4453, norm(x): 0.3763, norm(y): 1.0129, norm:1.6418, tok/sec: 100853.18, flops:105.85, batch-reuse:1
@ 2849 train 4.7006 , allloss: 4.7031, dt: 1299.97ms, fracRes: 0.3478, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3733, norm(y): 1.0129, norm:1.4914, tok/sec: 100826.58, flops:105.82, batch-reuse:1
@ 2850 train 4.6622 , allloss: 4.6643, dt: 1281.21ms, fracRes: 0.3484, norm(attn): 0.2031, norm(output): 0.4434, norm(x): 0.3751, norm(y): 1.0128, norm:1.5316, tok/sec: 102303.14, flops:107.37, batch-reuse:1
@ 2851 train 4.6436 , allloss: 4.6446, dt: 1274.99ms, fracRes: 0.3495, norm(attn): 0.2041, norm(output): 0.4434, norm(x): 0.3755, norm(y): 1.0129, norm:1.5149, tok/sec: 102802.39, flops:107.89, batch-reuse:1
@ 2852 train 4.6576 , allloss: 4.6617, dt: 1308.94ms, fracRes: 0.3487, norm(attn): 0.2021, norm(output): 0.4453, norm(x): 0.3776, norm(y): 1.0129, norm:1.3823, tok/sec: 100136.21, flops:105.09, batch-reuse:1
@ 2853 train 4.7513 , allloss: 4.7534, dt: 1332.86ms, fracRes: 0.3485, norm(attn): 0.2031, norm(output): 0.4492, norm(x): 0.3775, norm(y): 1.0130, norm:1.4328, tok/sec: 98338.93, flops:103.21, batch-reuse:1
@ 2854 train 4.6814 , allloss: 4.6852, dt: 1284.45ms, fracRes: 0.3466, norm(attn): 0.2100, norm(output): 0.4492, norm(x): 0.3779, norm(y): 1.0129, norm:1.7307, tok/sec: 102045.30, flops:107.10, batch-reuse:1
@ 2855 train 4.6791 , allloss: 4.6813, dt: 1292.27ms, fracRes: 0.3442, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3769, norm(y): 1.0129, norm:1.6151, tok/sec: 101427.95, flops:106.45, batch-reuse:1
@ 2856 train 4.7195 , allloss: 4.7215, dt: 1265.67ms, fracRes: 0.3418, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3790, norm(y): 1.0129, norm:1.7537, tok/sec: 103559.55, flops:108.69, batch-reuse:1
@ 2857 train 4.6534 , allloss: 4.6560, dt: 1296.04ms, fracRes: 0.3396, norm(attn): 0.2080, norm(output): 0.4473, norm(x): 0.3812, norm(y): 1.0127, norm:1.5104, tok/sec: 101132.56, flops:106.14, batch-reuse:1
@ 2858 train 4.6344 , allloss: 4.6356, dt: 1278.98ms, fracRes: 0.3435, norm(attn): 0.2051, norm(output): 0.4453, norm(x): 0.3769, norm(y): 1.0129, norm:1.7622, tok/sec: 102481.82, flops:107.56, batch-reuse:1
@ 2859 train 4.6378 , allloss: 4.6390, dt: 1303.53ms, fracRes: 0.3430, norm(attn): 0.2070, norm(output): 0.4609, norm(x): 0.3810, norm(y): 1.0129, norm:2.2105, tok/sec: 100551.71, flops:105.53, batch-reuse:1
@ 2860 train 4.7482 , allloss: 4.7534, dt: 1321.06ms, fracRes: 0.3455, norm(attn): 0.2031, norm(output): 0.4570, norm(x): 0.3828, norm(y): 1.0130, norm:1.9685, tok/sec: 99217.17, flops:104.13, batch-reuse:1
@ 2861 train 4.7892 , allloss: 4.7918, dt: 1288.99ms, fracRes: 0.3453, norm(attn): 0.2031, norm(output): 0.4492, norm(x): 0.3794, norm(y): 1.0129, norm:1.5862, tok/sec: 101685.98, flops:106.72, batch-reuse:1
@ 2862 train 4.7843 , allloss: 4.7931, dt: 1290.64ms, fracRes: 0.3476, norm(attn): 0.2031, norm(output): 0.4492, norm(x): 0.3798, norm(y): 1.0129, norm:2.2585, tok/sec: 101555.71, flops:106.58, batch-reuse:1
@ 2863 train 4.7746 , allloss: 4.7776, dt: 1332.59ms, fracRes: 0.3460, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3783, norm(y): 1.0129, norm:1.9503, tok/sec: 98358.88, flops:103.23, batch-reuse:1
@ 2864 train 4.6158 , allloss: 4.6252, dt: 1313.55ms, fracRes: 0.3454, norm(attn): 0.2041, norm(output): 0.4453, norm(x): 0.3796, norm(y): 1.0129, norm:1.7018, tok/sec: 99784.43, flops:104.73, batch-reuse:1
@ 2865 train 4.7179 , allloss: 4.7220, dt: 1285.28ms, fracRes: 0.3464, norm(attn): 0.2031, norm(output): 0.4453, norm(x): 0.3791, norm(y): 1.0130, norm:1.9846, tok/sec: 101979.36, flops:107.03, batch-reuse:1
@ 2866 train 4.7688 , allloss: 4.7719, dt: 1291.87ms, fracRes: 0.3475, norm(attn): 0.2021, norm(output): 0.4492, norm(x): 0.3797, norm(y): 1.0130, norm:1.7157, tok/sec: 101459.17, flops:106.48, batch-reuse:1
@ 2867 train 4.6945 , allloss: 4.6967, dt: 1279.17ms, fracRes: 0.3478, norm(attn): 0.2021, norm(output): 0.4492, norm(x): 0.3782, norm(y): 1.0130, norm:1.7250, tok/sec: 102466.54, flops:107.54, batch-reuse:1
@ 2868 train 4.7829 , allloss: 4.7849, dt: 1331.35ms, fracRes: 0.3498, norm(attn): 0.2021, norm(output): 0.4531, norm(x): 0.3794, norm(y): 1.0130, norm:1.8307, tok/sec: 98450.53, flops:103.33, batch-reuse:1
@ 2869 train 4.6979 , allloss: 4.6993, dt: 1326.95ms, fracRes: 0.3496, norm(attn): 0.2002, norm(output): 0.4492, norm(x): 0.3797, norm(y): 1.0130, norm:1.8471, tok/sec: 98776.82, flops:103.67, batch-reuse:1
@ 2870 train 4.7483 , allloss: 4.7505, dt: 1309.00ms, fracRes: 0.3489, norm(attn): 0.2002, norm(output): 0.4590, norm(x): 0.3813, norm(y): 1.0130, norm:1.5439, tok/sec: 100131.14, flops:105.09, batch-reuse:1
@ 2871 train 4.6748 , allloss: 4.6800, dt: 1286.64ms, fracRes: 0.3471, norm(attn): 0.2021, norm(output): 0.4609, norm(x): 0.3821, norm(y): 1.0130, norm:2.0061, tok/sec: 101871.45, flops:106.92, batch-reuse:1
@ 2872 train 4.7438 , allloss: 4.7459, dt: 1297.32ms, fracRes: 0.3488, norm(attn): 0.2021, norm(output): 0.4590, norm(x): 0.3807, norm(y): 1.0130, norm:1.6134, tok/sec: 101032.52, flops:106.04, batch-reuse:1
@ 2873 train 4.8043 , allloss: 4.8059, dt: 1313.44ms, fracRes: 0.3476, norm(attn): 0.2051, norm(output): 0.4609, norm(x): 0.3821, norm(y): 1.0129, norm:2.0465, tok/sec: 99792.60, flops:104.73, batch-reuse:1
@ 2874 train 4.6847 , allloss: 4.6901, dt: 1298.00ms, fracRes: 0.3467, norm(attn): 0.2031, norm(output): 0.4609, norm(x): 0.3827, norm(y): 1.0130, norm:1.8300, tok/sec: 100980.26, flops:105.98, batch-reuse:1
@ 2875 train 4.8311 , allloss: 4.8331, dt: 1334.98ms, fracRes: 0.3485, norm(attn): 0.2012, norm(output): 0.4609, norm(x): 0.3788, norm(y): 1.0130, norm:1.5600, tok/sec: 98182.53, flops:103.04, batch-reuse:1
@ 2876 train 4.7203 , allloss: 4.7232, dt: 1325.53ms, fracRes: 0.3472, norm(attn): 0.2031, norm(output): 0.4570, norm(x): 0.3808, norm(y): 1.0129, norm:1.7246, tok/sec: 98882.99, flops:103.78, batch-reuse:1
@ 2877 train 4.7618 , allloss: 4.7635, dt: 1329.13ms, fracRes: 0.3465, norm(attn): 0.2031, norm(output): 0.4590, norm(x): 0.3825, norm(y): 1.0129, norm:1.7981, tok/sec: 98615.22, flops:103.50, batch-reuse:1
@ 2878 train 4.7007 , allloss: 4.7017, dt: 1290.26ms, fracRes: 0.3470, norm(attn): 0.2021, norm(output): 0.4609, norm(x): 0.3806, norm(y): 1.0130, norm:1.5931, tok/sec: 101585.38, flops:106.62, batch-reuse:1
@ 2879 train 4.6744 , allloss: 4.6788, dt: 1290.40ms, fracRes: 0.3485, norm(attn): 0.2012, norm(output): 0.4629, norm(x): 0.3805, norm(y): 1.0130, norm:1.4914, tok/sec: 101574.87, flops:106.60, batch-reuse:1
@ 2880 train 4.6999 , allloss: 4.7018, dt: 1296.22ms, fracRes: 0.3471, norm(attn): 0.2031, norm(output): 0.4629, norm(x): 0.3820, norm(y): 1.0129, norm:1.5826, tok/sec: 101118.50, flops:106.13, batch-reuse:1
@ 2881 train 4.6878 , allloss: 4.6895, dt: 1281.32ms, fracRes: 0.3469, norm(attn): 0.2031, norm(output): 0.4590, norm(x): 0.3803, norm(y): 1.0129, norm:1.3938, tok/sec: 102294.81, flops:107.36, batch-reuse:1
@ 2882 train 4.6677 , allloss: 4.6698, dt: 1294.07ms, fracRes: 0.3469, norm(attn): 0.2031, norm(output): 0.4531, norm(x): 0.3793, norm(y): 1.0129, norm:1.5828, tok/sec: 101286.99, flops:106.30, batch-reuse:1
@ 2883 train 4.7228 , allloss: 4.7244, dt: 1297.27ms, fracRes: 0.3472, norm(attn): 0.2041, norm(output): 0.4609, norm(x): 0.3810, norm(y): 1.0129, norm:1.3646, tok/sec: 101036.60, flops:106.04, batch-reuse:1
@ 2884 train 4.5665 , allloss: 4.5677, dt: 1279.17ms, fracRes: 0.3471, norm(attn): 0.2051, norm(output): 0.4609, norm(x): 0.3815, norm(y): 1.0129, norm:1.4066, tok/sec: 102466.25, flops:107.54, batch-reuse:1
@ 2885 train 4.5828 , allloss: 4.5852, dt: 1290.96ms, fracRes: 0.3468, norm(attn): 0.2031, norm(output): 0.4609, norm(x): 0.3814, norm(y): 1.0130, norm:1.3936, tok/sec: 101530.32, flops:106.56, batch-reuse:1
@ 2886 train 4.6306 , allloss: 4.6340, dt: 1283.39ms, fracRes: 0.3477, norm(attn): 0.2031, norm(output): 0.4570, norm(x): 0.3795, norm(y): 1.0131, norm:1.3977, tok/sec: 102129.74, flops:107.19, batch-reuse:1
@ 2887 train 4.6343 , allloss: 4.6391, dt: 1292.20ms, fracRes: 0.3449, norm(attn): 0.2080, norm(output): 0.4590, norm(x): 0.3839, norm(y): 1.0129, norm:1.8660, tok/sec: 101433.32, flops:106.46, batch-reuse:1
@ 2888 train 4.6252 , allloss: 4.6270, dt: 1278.24ms, fracRes: 0.3471, norm(attn): 0.2021, norm(output): 0.4609, norm(x): 0.3797, norm(y): 1.0131, norm:1.5998, tok/sec: 102541.15, flops:107.62, batch-reuse:1
@ 2889 train 4.6413 , allloss: 4.6424, dt: 1278.24ms, fracRes: 0.3476, norm(attn): 0.2012, norm(output): 0.4609, norm(x): 0.3806, norm(y): 1.0131, norm:1.8133, tok/sec: 102541.19, flops:107.62, batch-reuse:1
@ 2890 train 4.6777 , allloss: 4.6786, dt: 1290.34ms, fracRes: 0.3488, norm(attn): 0.2031, norm(output): 0.4590, norm(x): 0.3804, norm(y): 1.0130, norm:1.4737, tok/sec: 101579.21, flops:106.61, batch-reuse:1
@ 2891 train 4.6462 , allloss: 4.6480, dt: 1292.02ms, fracRes: 0.3485, norm(attn): 0.2041, norm(output): 0.4570, norm(x): 0.3805, norm(y): 1.0129, norm:1.5556, tok/sec: 101447.51, flops:106.47, batch-reuse:1
@ 2892 train 4.6136 , allloss: 4.6207, dt: 1309.37ms, fracRes: 0.3474, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.3823, norm(y): 1.0129, norm:1.5391, tok/sec: 100103.32, flops:105.06, batch-reuse:1
@ 2893 train 4.5824 , allloss: 4.5847, dt: 1302.99ms, fracRes: 0.3477, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.3813, norm(y): 1.0130, norm:1.4681, tok/sec: 100592.92, flops:105.57, batch-reuse:1
@ 2894 train 4.5893 , allloss: 4.5907, dt: 1310.09ms, fracRes: 0.3471, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.3824, norm(y): 1.0130, norm:1.4941, tok/sec: 100048.05, flops:105.00, batch-reuse:1
@ 2895 train 4.7398 , allloss: 4.7415, dt: 1314.68ms, fracRes: 0.3446, norm(attn): 0.2061, norm(output): 0.4629, norm(x): 0.3848, norm(y): 1.0129, norm:1.5531, tok/sec: 99698.53, flops:104.64, batch-reuse:1
@ 2896 train 4.7118 , allloss: 4.7131, dt: 1295.11ms, fracRes: 0.3439, norm(attn): 0.2041, norm(output): 0.4590, norm(x): 0.3834, norm(y): 1.0130, norm:1.4548, tok/sec: 101205.15, flops:106.22, batch-reuse:1
@ 2897 train 4.6320 , allloss: 4.6344, dt: 1298.52ms, fracRes: 0.3432, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3851, norm(y): 1.0130, norm:1.5312, tok/sec: 100939.28, flops:105.94, batch-reuse:1
@ 2898 train 4.6452 , allloss: 4.6495, dt: 1297.41ms, fracRes: 0.3430, norm(attn): 0.2061, norm(output): 0.4648, norm(x): 0.3869, norm(y): 1.0129, norm:1.4262, tok/sec: 101026.02, flops:106.03, batch-reuse:1
@ 2899 train 4.6553 , allloss: 4.6573, dt: 1292.97ms, fracRes: 0.3439, norm(attn): 0.2041, norm(output): 0.4648, norm(x): 0.3857, norm(y): 1.0130, norm:1.4686, tok/sec: 101373.13, flops:106.39, batch-reuse:1
@ 2900 train 4.6535 , allloss: 4.6551, dt: 1323.11ms, fracRes: 0.3451, norm(attn): 0.2061, norm(output): 0.4648, norm(x): 0.3858, norm(y): 1.0130, norm:1.3766, tok/sec: 99063.85, flops:103.97, batch-reuse:1
@ 2901 train 4.6132 , allloss: 4.6143, dt: 1303.84ms, fracRes: 0.3454, norm(attn): 0.2061, norm(output): 0.4629, norm(x): 0.3839, norm(y): 1.0129, norm:1.5961, tok/sec: 100527.40, flops:105.51, batch-reuse:1
@ 2902 train 4.6666 , allloss: 4.6695, dt: 1287.28ms, fracRes: 0.3492, norm(attn): 0.2031, norm(output): 0.4609, norm(x): 0.3826, norm(y): 1.0130, norm:1.3300, tok/sec: 101821.23, flops:106.86, batch-reuse:1
@ 2903 train 4.7604 , allloss: 4.7690, dt: 1332.12ms, fracRes: 0.3492, norm(attn): 0.2051, norm(output): 0.4609, norm(x): 0.3837, norm(y): 1.0130, norm:1.3728, tok/sec: 98393.84, flops:103.27, batch-reuse:1
@ 2904 train 4.6234 , allloss: 4.6262, dt: 1276.07ms, fracRes: 0.3475, norm(attn): 0.2080, norm(output): 0.4629, norm(x): 0.3821, norm(y): 1.0129, norm:1.5501, tok/sec: 102715.49, flops:107.80, batch-reuse:1
@ 2905 train 4.8456 , allloss: 4.8486, dt: 1278.87ms, fracRes: 0.3488, norm(attn): 0.2051, norm(output): 0.4629, norm(x): 0.3861, norm(y): 1.0129, norm:1.6509, tok/sec: 102490.38, flops:107.57, batch-reuse:1
@ 2906 train 4.6025 , allloss: 4.6051, dt: 1301.14ms, fracRes: 0.3480, norm(attn): 0.2021, norm(output): 0.4648, norm(x): 0.3823, norm(y): 1.0131, norm:1.9193, tok/sec: 100736.42, flops:105.72, batch-reuse:1
@ 2907 train 4.7017 , allloss: 4.7034, dt: 1282.34ms, fracRes: 0.3504, norm(attn): 0.2012, norm(output): 0.4629, norm(x): 0.3805, norm(y): 1.0132, norm:1.5607, tok/sec: 102212.97, flops:107.27, batch-reuse:1
@ 2908 train 4.6162 , allloss: 4.6179, dt: 1297.32ms, fracRes: 0.3483, norm(attn): 0.2031, norm(output): 0.4629, norm(x): 0.3821, norm(y): 1.0130, norm:1.5323, tok/sec: 101032.59, flops:106.04, batch-reuse:1
@ 2909 train 4.6405 , allloss: 4.6459, dt: 1330.73ms, fracRes: 0.3474, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3857, norm(y): 1.0129, norm:1.8443, tok/sec: 98496.49, flops:103.37, batch-reuse:1
@ 2910 train 4.6497 , allloss: 4.6516, dt: 1307.12ms, fracRes: 0.3503, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3830, norm(y): 1.0131, norm:1.7504, tok/sec: 100275.68, flops:105.24, batch-reuse:1
@ 2911 train 4.6484 , allloss: 4.6551, dt: 1298.47ms, fracRes: 0.3489, norm(attn): 0.2021, norm(output): 0.4648, norm(x): 0.3835, norm(y): 1.0131, norm:1.5160, tok/sec: 100943.27, flops:105.94, batch-reuse:1
@ 2912 train 4.6898 , allloss: 4.6972, dt: 1292.59ms, fracRes: 0.3498, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3842, norm(y): 1.0131, norm:1.6255, tok/sec: 101402.94, flops:106.42, batch-reuse:1
@ 2913 train 4.6377 , allloss: 4.6395, dt: 1291.31ms, fracRes: 0.3497, norm(attn): 0.2021, norm(output): 0.4648, norm(x): 0.3839, norm(y): 1.0131, norm:1.5383, tok/sec: 101502.74, flops:106.53, batch-reuse:1
@ 2914 train 4.5648 , allloss: 4.5689, dt: 1279.75ms, fracRes: 0.3479, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3854, norm(y): 1.0130, norm:1.6853, tok/sec: 102420.00, flops:107.49, batch-reuse:1
@ 2915 train 4.5828 , allloss: 4.5852, dt: 1302.04ms, fracRes: 0.3487, norm(attn): 0.2041, norm(output): 0.4648, norm(x): 0.3842, norm(y): 1.0131, norm:1.3845, tok/sec: 100666.56, flops:105.65, batch-reuse:1
@ 2916 train 4.5627 , allloss: 4.5703, dt: 1274.13ms, fracRes: 0.3490, norm(attn): 0.2061, norm(output): 0.4609, norm(x): 0.3824, norm(y): 1.0131, norm:1.7747, tok/sec: 102871.60, flops:107.97, batch-reuse:1
@ 2917 train 4.6459 , allloss: 4.6517, dt: 1311.83ms, fracRes: 0.3489, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3848, norm(y): 1.0131, norm:1.6856, tok/sec: 99915.53, flops:104.86, batch-reuse:1
@ 2918 train 4.7071 , allloss: 4.7129, dt: 1296.84ms, fracRes: 0.3489, norm(attn): 0.2021, norm(output): 0.4648, norm(x): 0.3842, norm(y): 1.0130, norm:1.4784, tok/sec: 101070.30, flops:106.08, batch-reuse:1
@ 2919 train 4.5949 , allloss: 4.6006, dt: 1268.52ms, fracRes: 0.3491, norm(attn): 0.2021, norm(output): 0.4668, norm(x): 0.3847, norm(y): 1.0131, norm:1.4884, tok/sec: 103326.41, flops:108.44, batch-reuse:1
@ 2920 train 4.7188 , allloss: 4.7217, dt: 1278.27ms, fracRes: 0.3486, norm(attn): 0.2021, norm(output): 0.4668, norm(x): 0.3861, norm(y): 1.0130, norm:1.6068, tok/sec: 102538.40, flops:107.62, batch-reuse:1
@ 2921 train 4.6440 , allloss: 4.6490, dt: 1308.83ms, fracRes: 0.3486, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3854, norm(y): 1.0130, norm:1.2039, tok/sec: 100144.68, flops:105.10, batch-reuse:1
@ 2922 train 4.5921 , allloss: 4.5972, dt: 1274.95ms, fracRes: 0.3474, norm(attn): 0.2051, norm(output): 0.4648, norm(x): 0.3860, norm(y): 1.0130, norm:1.4094, tok/sec: 102805.35, flops:107.90, batch-reuse:1
@ 2923 train 4.5797 , allloss: 4.5815, dt: 1293.81ms, fracRes: 0.3490, norm(attn): 0.2041, norm(output): 0.4629, norm(x): 0.3829, norm(y): 1.0131, norm:1.7545, tok/sec: 101307.06, flops:106.32, batch-reuse:1
@ 2924 train 4.6780 , allloss: 4.6956, dt: 1285.77ms, fracRes: 0.3496, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3832, norm(y): 1.0131, norm:1.4069, tok/sec: 101940.17, flops:106.99, batch-reuse:1
@ 2925 train 4.7939 , allloss: 4.8043, dt: 1293.46ms, fracRes: 0.3491, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3882, norm(y): 1.0131, norm:2.0598, tok/sec: 101334.43, flops:106.35, batch-reuse:1
@ 2926 train 4.6287 , allloss: 4.6309, dt: 1312.08ms, fracRes: 0.3492, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3858, norm(y): 1.0131, norm:1.7452, tok/sec: 99896.03, flops:104.84, batch-reuse:1
@ 2927 train 4.5259 , allloss: 4.5288, dt: 1339.80ms, fracRes: 0.3493, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3849, norm(y): 1.0130, norm:1.6768, tok/sec: 97829.76, flops:102.67, batch-reuse:1
@ 2928 train 4.6049 , allloss: 4.6086, dt: 1324.04ms, fracRes: 0.3527, norm(attn): 0.2021, norm(output): 0.4668, norm(x): 0.3815, norm(y): 1.0132, norm:1.6168, tok/sec: 98994.01, flops:103.90, batch-reuse:1
@ 2929 train 4.5925 , allloss: 4.5946, dt: 1339.74ms, fracRes: 0.3512, norm(attn): 0.2021, norm(output): 0.4668, norm(x): 0.3836, norm(y): 1.0132, norm:1.7412, tok/sec: 97834.01, flops:102.68, batch-reuse:1
@ 2930 train 4.5534 , allloss: 4.5557, dt: 1344.50ms, fracRes: 0.3501, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3863, norm(y): 1.0131, norm:1.5394, tok/sec: 97487.19, flops:102.31, batch-reuse:1
@ 2931 train 4.5406 , allloss: 4.5451, dt: 1291.81ms, fracRes: 0.3508, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3859, norm(y): 1.0131, norm:1.6254, tok/sec: 101463.52, flops:106.49, batch-reuse:1
@ 2932 train 4.4770 , allloss: 4.4819, dt: 1311.30ms, fracRes: 0.3511, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3851, norm(y): 1.0131, norm:1.7034, tok/sec: 99955.97, flops:104.91, batch-reuse:1
@ 2933 train 4.5732 , allloss: 4.5797, dt: 1311.27ms, fracRes: 0.3506, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3869, norm(y): 1.0131, norm:1.6316, tok/sec: 99957.93, flops:104.91, batch-reuse:1
@ 2934 train 4.6253 , allloss: 4.6294, dt: 1294.64ms, fracRes: 0.3492, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3869, norm(y): 1.0131, norm:1.5087, tok/sec: 101242.30, flops:106.26, batch-reuse:1
@ 2935 train 4.5331 , allloss: 4.5550, dt: 1290.69ms, fracRes: 0.3474, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3879, norm(y): 1.0131, norm:1.6034, tok/sec: 101551.96, flops:106.58, batch-reuse:1
@ 2936 train 4.4555 , allloss: 4.4593, dt: 1291.10ms, fracRes: 0.3482, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3845, norm(y): 1.0131, norm:1.3820, tok/sec: 101520.03, flops:106.55, batch-reuse:1
@ 2937 train 4.5188 , allloss: 4.5214, dt: 1285.22ms, fracRes: 0.3485, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3857, norm(y): 1.0130, norm:1.6422, tok/sec: 101984.39, flops:107.03, batch-reuse:1
@ 2938 train 4.5312 , allloss: 4.5358, dt: 1332.17ms, fracRes: 0.3502, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3874, norm(y): 1.0131, norm:1.6226, tok/sec: 98390.11, flops:103.26, batch-reuse:1
@ 2939 train 4.5803 , allloss: 4.5826, dt: 1294.59ms, fracRes: 0.3517, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3853, norm(y): 1.0131, norm:1.6114, tok/sec: 101246.27, flops:106.26, batch-reuse:1
@ 2940 train 4.5297 , allloss: 4.5314, dt: 1288.95ms, fracRes: 0.3516, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3845, norm(y): 1.0131, norm:1.3890, tok/sec: 101688.62, flops:106.72, batch-reuse:1
@ 2941 train 4.4343 , allloss: 4.4386, dt: 1323.31ms, fracRes: 0.3495, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3883, norm(y): 1.0130, norm:1.5935, tok/sec: 99048.41, flops:103.95, batch-reuse:1
@ 2942 train 4.5382 , allloss: 4.5395, dt: 1306.77ms, fracRes: 0.3487, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3865, norm(y): 1.0132, norm:1.3922, tok/sec: 100302.58, flops:105.27, batch-reuse:1
@ 2943 train 4.5493 , allloss: 4.5506, dt: 1283.74ms, fracRes: 0.3473, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3877, norm(y): 1.0131, norm:1.7185, tok/sec: 102101.80, flops:107.16, batch-reuse:1
@ 2944 train 4.5950 , allloss: 4.5991, dt: 1287.46ms, fracRes: 0.3462, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3864, norm(y): 1.0131, norm:1.3569, tok/sec: 101806.39, flops:106.85, batch-reuse:1
@ 2945 train 4.5756 , allloss: 4.5777, dt: 1320.25ms, fracRes: 0.3467, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.3860, norm(y): 1.0131, norm:3.1295, tok/sec: 99278.40, flops:104.19, batch-reuse:1
@ 2946 train 4.5301 , allloss: 4.5318, dt: 1314.80ms, fracRes: 0.3476, norm(attn): 0.2080, norm(output): 0.4668, norm(x): 0.3855, norm(y): 1.0132, norm:1.9430, tok/sec: 99689.40, flops:104.63, batch-reuse:1
@ 2947 train 4.5308 , allloss: 4.5331, dt: 1334.23ms, fracRes: 0.3471, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.3856, norm(y): 1.0132, norm:1.5053, tok/sec: 98237.87, flops:103.10, batch-reuse:1
@ 2948 train 4.4524 , allloss: 4.4551, dt: 1281.99ms, fracRes: 0.3467, norm(attn): 0.2090, norm(output): 0.4648, norm(x): 0.3835, norm(y): 1.0132, norm:1.6033, tok/sec: 102241.06, flops:107.30, batch-reuse:1
@ 2949 train 4.4988 , allloss: 4.5070, dt: 1304.08ms, fracRes: 0.3443, norm(attn): 0.2119, norm(output): 0.4668, norm(x): 0.3866, norm(y): 1.0131, norm:1.5244, tok/sec: 100508.97, flops:105.49, batch-reuse:1
@ 2950 train 4.6212 , allloss: 4.6305, dt: 1302.27ms, fracRes: 0.3485, norm(attn): 0.2080, norm(output): 0.4648, norm(x): 0.3850, norm(y): 1.0133, norm:1.8030, tok/sec: 100648.60, flops:105.63, batch-reuse:1
@ 2951 train 4.4843 , allloss: 4.4854, dt: 1296.72ms, fracRes: 0.3526, norm(attn): 0.2051, norm(output): 0.4648, norm(x): 0.3821, norm(y): 1.0135, norm:1.6221, tok/sec: 101079.46, flops:106.08, batch-reuse:1
@ 2952 train 4.6141 , allloss: 4.6153, dt: 1302.91ms, fracRes: 0.3507, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3853, norm(y): 1.0134, norm:1.6192, tok/sec: 100599.51, flops:105.58, batch-reuse:1
@ 2953 train 4.5869 , allloss: 4.5896, dt: 1283.12ms, fracRes: 0.3497, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3848, norm(y): 1.0134, norm:1.4490, tok/sec: 102151.01, flops:107.21, batch-reuse:1
@ 2954 train 4.5594 , allloss: 4.5623, dt: 1313.19ms, fracRes: 0.3501, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3867, norm(y): 1.0133, norm:1.7330, tok/sec: 99811.96, flops:104.75, batch-reuse:1
@ 2955 train 4.5577 , allloss: 4.5654, dt: 1298.86ms, fracRes: 0.3497, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3883, norm(y): 1.0133, norm:1.4810, tok/sec: 100912.88, flops:105.91, batch-reuse:1
@ 2956 train 4.4951 , allloss: 4.4972, dt: 1279.63ms, fracRes: 0.3502, norm(attn): 0.2041, norm(output): 0.4648, norm(x): 0.3843, norm(y): 1.0133, norm:1.4815, tok/sec: 102429.71, flops:107.50, batch-reuse:1
@ 2957 train 4.5771 , allloss: 4.5794, dt: 1309.23ms, fracRes: 0.3481, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3870, norm(y): 1.0132, norm:1.7647, tok/sec: 100113.55, flops:105.07, batch-reuse:1
@ 2958 train 4.5310 , allloss: 4.5335, dt: 1324.85ms, fracRes: 0.3490, norm(attn): 0.2041, norm(output): 0.4648, norm(x): 0.3861, norm(y): 1.0134, norm:1.3697, tok/sec: 98933.80, flops:103.83, batch-reuse:1
@ 2959 train 4.5502 , allloss: 4.5557, dt: 1298.11ms, fracRes: 0.3491, norm(attn): 0.2041, norm(output): 0.4609, norm(x): 0.3833, norm(y): 1.0135, norm:1.4470, tok/sec: 100971.24, flops:105.97, batch-reuse:1
@ 2960 train 4.5282 , allloss: 4.5344, dt: 1283.04ms, fracRes: 0.3484, norm(attn): 0.2051, norm(output): 0.4609, norm(x): 0.3826, norm(y): 1.0134, norm:1.4238, tok/sec: 102157.70, flops:107.22, batch-reuse:1
@ 2961 train 4.4724 , allloss: 4.4767, dt: 1300.47ms, fracRes: 0.3469, norm(attn): 0.2119, norm(output): 0.4648, norm(x): 0.3862, norm(y): 1.0133, norm:1.8245, tok/sec: 100788.24, flops:105.78, batch-reuse:1
@ 2962 train 4.4827 , allloss: 4.4843, dt: 1313.67ms, fracRes: 0.3493, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3844, norm(y): 1.0135, norm:1.4605, tok/sec: 99775.12, flops:104.72, batch-reuse:1
@ 2963 train 4.5594 , allloss: 4.5657, dt: 1304.46ms, fracRes: 0.3498, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3835, norm(y): 1.0135, norm:1.7496, tok/sec: 100480.26, flops:105.46, batch-reuse:1
@ 2964 train 4.5824 , allloss: 4.5864, dt: 1299.58ms, fracRes: 0.3492, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3878, norm(y): 1.0135, norm:1.7044, tok/sec: 100857.28, flops:105.85, batch-reuse:1
@ 2965 train 4.5302 , allloss: 4.5329, dt: 1292.59ms, fracRes: 0.3496, norm(attn): 0.2070, norm(output): 0.4668, norm(x): 0.3876, norm(y): 1.0135, norm:1.5213, tok/sec: 101402.37, flops:106.42, batch-reuse:1
@ 2966 train 4.4646 , allloss: 4.4673, dt: 1289.53ms, fracRes: 0.3511, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3869, norm(y): 1.0134, norm:1.4574, tok/sec: 101643.57, flops:106.68, batch-reuse:1
@ 2967 train 4.5256 , allloss: 4.5295, dt: 1290.31ms, fracRes: 0.3510, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3864, norm(y): 1.0135, norm:1.4084, tok/sec: 101582.14, flops:106.61, batch-reuse:1
@ 2968 train 4.5444 , allloss: 4.5472, dt: 1290.72ms, fracRes: 0.3497, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3872, norm(y): 1.0135, norm:1.5599, tok/sec: 101549.26, flops:106.58, batch-reuse:1
@ 2969 train 4.4722 , allloss: 4.4739, dt: 1296.32ms, fracRes: 0.3496, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3877, norm(y): 1.0135, norm:1.5823, tok/sec: 101110.65, flops:106.12, batch-reuse:1
@ 2970 train 4.4896 , allloss: 4.5016, dt: 1308.57ms, fracRes: 0.3497, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3896, norm(y): 1.0135, norm:1.5911, tok/sec: 100163.93, flops:105.12, batch-reuse:1
@ 2971 train 4.5206 , allloss: 4.5284, dt: 1296.46ms, fracRes: 0.3508, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3871, norm(y): 1.0135, norm:1.4835, tok/sec: 101099.59, flops:106.11, batch-reuse:1
@ 2972 train 4.4140 , allloss: 4.4167, dt: 1290.03ms, fracRes: 0.3496, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3904, norm(y): 1.0134, norm:1.8113, tok/sec: 101604.12, flops:106.64, batch-reuse:1
@ 2973 train 4.5275 , allloss: 4.5296, dt: 1290.82ms, fracRes: 0.3501, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3894, norm(y): 1.0134, norm:1.6900, tok/sec: 101541.61, flops:106.57, batch-reuse:1
@ 2974 train 4.4616 , allloss: 4.4628, dt: 1313.60ms, fracRes: 0.3504, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3883, norm(y): 1.0134, norm:1.6437, tok/sec: 99780.88, flops:104.72, batch-reuse:1
@ 2975 train 4.6117 , allloss: 4.6133, dt: 1303.29ms, fracRes: 0.3510, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3905, norm(y): 1.0135, norm:1.6375, tok/sec: 100570.29, flops:105.55, batch-reuse:1
@ 2976 train 4.6810 , allloss: 4.6865, dt: 1299.36ms, fracRes: 0.3510, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3921, norm(y): 1.0134, norm:1.6266, tok/sec: 100874.31, flops:105.87, batch-reuse:1
@ 2977 train 4.6841 , allloss: 4.6865, dt: 1315.39ms, fracRes: 0.3492, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3913, norm(y): 1.0134, norm:1.4261, tok/sec: 99645.31, flops:104.58, batch-reuse:1
@ 2978 train 4.6909 , allloss: 4.6955, dt: 1330.08ms, fracRes: 0.3532, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3891, norm(y): 1.0136, norm:1.5146, tok/sec: 98544.13, flops:103.42, batch-reuse:1
@ 2979 train 4.7161 , allloss: 4.7178, dt: 1315.46ms, fracRes: 0.3534, norm(attn): 0.2012, norm(output): 0.4668, norm(x): 0.3885, norm(y): 1.0136, norm:1.8527, tok/sec: 99639.96, flops:104.57, batch-reuse:1
@ 2980 train 4.5915 , allloss: 4.5974, dt: 1326.02ms, fracRes: 0.3531, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3934, norm(y): 1.0135, norm:2.2590, tok/sec: 98846.38, flops:103.74, batch-reuse:1
@ 2981 train 4.6480 , allloss: 4.6533, dt: 1284.72ms, fracRes: 0.3530, norm(attn): 0.2061, norm(output): 0.4668, norm(x): 0.3882, norm(y): 1.0135, norm:1.7968, tok/sec: 102023.60, flops:107.08, batch-reuse:1
@ 2982 train 4.7546 , allloss: 4.7572, dt: 1287.98ms, fracRes: 0.3541, norm(attn): 0.2031, norm(output): 0.4648, norm(x): 0.3897, norm(y): 1.0135, norm:1.7587, tok/sec: 101765.30, flops:106.80, batch-reuse:1
@ 2983 train 4.6536 , allloss: 4.6574, dt: 1322.14ms, fracRes: 0.3522, norm(attn): 0.2051, norm(output): 0.4668, norm(x): 0.3911, norm(y): 1.0134, norm:1.6553, tok/sec: 99135.89, flops:104.04, batch-reuse:1
@ 2984 train 4.6665 , allloss: 4.6692, dt: 1324.01ms, fracRes: 0.3519, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3881, norm(y): 1.0134, norm:1.4063, tok/sec: 98996.31, flops:103.90, batch-reuse:1
@ 2985 train 4.7244 , allloss: 4.7269, dt: 1299.51ms, fracRes: 0.3522, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3899, norm(y): 1.0135, norm:1.4176, tok/sec: 100862.73, flops:105.86, batch-reuse:1
@ 2986 train 4.6252 , allloss: 4.6263, dt: 1301.71ms, fracRes: 0.3511, norm(attn): 0.2031, norm(output): 0.4688, norm(x): 0.3908, norm(y): 1.0135, norm:1.6813, tok/sec: 100692.36, flops:105.68, batch-reuse:1
@ 2987 train 4.6997 , allloss: 4.7013, dt: 1289.11ms, fracRes: 0.3505, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3918, norm(y): 1.0134, norm:1.4912, tok/sec: 101676.39, flops:106.71, batch-reuse:1
@ 2988 train 4.7849 , allloss: 4.7954, dt: 1287.81ms, fracRes: 0.3519, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3917, norm(y): 1.0134, norm:1.5977, tok/sec: 101778.64, flops:106.82, batch-reuse:1
@ 2989 train 4.7138 , allloss: 4.7158, dt: 1297.80ms, fracRes: 0.3533, norm(attn): 0.2031, norm(output): 0.4688, norm(x): 0.3905, norm(y): 1.0135, norm:1.7210, tok/sec: 100995.38, flops:106.00, batch-reuse:1
@ 2990 train 4.7425 , allloss: 4.7453, dt: 1283.05ms, fracRes: 0.3527, norm(attn): 0.2031, norm(output): 0.4688, norm(x): 0.3903, norm(y): 1.0135, norm:1.5083, tok/sec: 102156.48, flops:107.22, batch-reuse:1
@ 2991 train 4.6446 , allloss: 4.6468, dt: 1300.04ms, fracRes: 0.3518, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3907, norm(y): 1.0134, norm:1.5684, tok/sec: 100821.75, flops:105.81, batch-reuse:1
@ 2992 train 4.6968 , allloss: 4.6999, dt: 1278.07ms, fracRes: 0.3537, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3898, norm(y): 1.0135, norm:1.4922, tok/sec: 102554.65, flops:107.63, batch-reuse:1
@ 2993 train 4.7066 , allloss: 4.7091, dt: 1282.19ms, fracRes: 0.3526, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3936, norm(y): 1.0135, norm:1.6605, tok/sec: 102225.32, flops:107.29, batch-reuse:1
@ 2994 train 4.7164 , allloss: 4.7175, dt: 1293.30ms, fracRes: 0.3522, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3921, norm(y): 1.0134, norm:1.6659, tok/sec: 101347.21, flops:106.37, batch-reuse:1
@ 2995 train 4.5950 , allloss: 4.5970, dt: 1288.04ms, fracRes: 0.3530, norm(attn): 0.2031, norm(output): 0.4668, norm(x): 0.3912, norm(y): 1.0135, norm:1.4732, tok/sec: 101760.99, flops:106.80, batch-reuse:1
@ 2996 train 4.6275 , allloss: 4.6322, dt: 1294.30ms, fracRes: 0.3539, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3899, norm(y): 1.0136, norm:1.6049, tok/sec: 101268.89, flops:106.28, batch-reuse:1
@ 2997 train 4.6690 , allloss: 4.6736, dt: 1284.73ms, fracRes: 0.3545, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3899, norm(y): 1.0136, norm:1.5229, tok/sec: 102022.92, flops:107.07, batch-reuse:1
@ 2998 train 4.6988 , allloss: 4.7034, dt: 1283.44ms, fracRes: 0.3525, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3914, norm(y): 1.0134, norm:1.4193, tok/sec: 102125.47, flops:107.18, batch-reuse:1
@ 2999 train 4.5869 , allloss: 4.5899, dt: 1296.55ms, fracRes: 0.3498, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3929, norm(y): 1.0134, norm:1.5399, tok/sec: 101093.27, flops:106.10, batch-reuse:1
@ 3000 train 4.7133 , allloss: 4.7163, dt: 1312.84ms, fracRes: 0.3515, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3943, norm(y): 1.0134, norm:1.4948, tok/sec: 99838.88, flops:104.78, batch-reuse:1
@ 3001 train 4.7455 , allloss: 4.7507, dt: 1320.40ms, fracRes: 0.3515, norm(attn): 0.2021, norm(output): 0.4688, norm(x): 0.3905, norm(y): 1.0135, norm:1.5882, tok/sec: 99266.57, flops:104.18, batch-reuse:1
@ 3002 train 4.6295 , allloss: 4.6388, dt: 1316.93ms, fracRes: 0.3504, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3950, norm(y): 1.0135, norm:1.5441, tok/sec: 99528.32, flops:104.46, batch-reuse:1
@ 3003 train 4.6705 , allloss: 4.6754, dt: 1340.29ms, fracRes: 0.3508, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3922, norm(y): 1.0135, norm:1.4364, tok/sec: 97793.58, flops:102.64, batch-reuse:1
@ 3004 train 4.7498 , allloss: 4.7514, dt: 1344.80ms, fracRes: 0.3514, norm(attn): 0.2041, norm(output): 0.4668, norm(x): 0.3897, norm(y): 1.0135, norm:1.9080, tok/sec: 97465.50, flops:102.29, batch-reuse:1
@ 3005 train 4.9358 , allloss: 4.9375, dt: 1316.29ms, fracRes: 0.3521, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3950, norm(y): 1.0134, norm:1.9762, tok/sec: 99576.49, flops:104.51, batch-reuse:1
@ 3006 train 4.6650 , allloss: 4.6658, dt: 1317.52ms, fracRes: 0.3518, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3938, norm(y): 1.0134, norm:1.7350, tok/sec: 99483.81, flops:104.41, batch-reuse:1
@ 3007 train 4.7392 , allloss: 4.7421, dt: 1288.62ms, fracRes: 0.3521, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3932, norm(y): 1.0135, norm:1.7623, tok/sec: 101715.33, flops:106.75, batch-reuse:1
@ 3008 train 4.6670 , allloss: 4.6691, dt: 1305.54ms, fracRes: 0.3514, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3944, norm(y): 1.0135, norm:1.3751, tok/sec: 100397.04, flops:105.37, batch-reuse:1
@ 3009 train 4.6188 , allloss: 4.6199, dt: 1320.40ms, fracRes: 0.3525, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3928, norm(y): 1.0135, norm:1.9866, tok/sec: 99266.73, flops:104.18, batch-reuse:1
@ 3010 train 4.6794 , allloss: 4.6811, dt: 1302.95ms, fracRes: 0.3513, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3954, norm(y): 1.0134, norm:1.6753, tok/sec: 100596.13, flops:105.58, batch-reuse:1
@ 3011 train 4.6903 , allloss: 4.6917, dt: 1302.44ms, fracRes: 0.3507, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3951, norm(y): 1.0135, norm:1.5210, tok/sec: 100635.99, flops:105.62, batch-reuse:1
@ 3012 train 4.7933 , allloss: 4.7992, dt: 1296.33ms, fracRes: 0.3526, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3955, norm(y): 1.0136, norm:1.8429, tok/sec: 101110.23, flops:106.12, batch-reuse:1
@ 3013 train 4.8098 , allloss: 4.8113, dt: 1328.10ms, fracRes: 0.3514, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3973, norm(y): 1.0136, norm:1.6183, tok/sec: 98691.31, flops:103.58, batch-reuse:1
@ 3014 train 4.6562 , allloss: 4.6613, dt: 1305.56ms, fracRes: 0.3487, norm(attn): 0.2051, norm(output): 0.4727, norm(x): 0.3979, norm(y): 1.0135, norm:1.7355, tok/sec: 100395.10, flops:105.37, batch-reuse:1
@ 3015 train 4.6647 , allloss: 4.6665, dt: 1294.84ms, fracRes: 0.3483, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3946, norm(y): 1.0134, norm:1.6232, tok/sec: 101226.51, flops:106.24, batch-reuse:1
@ 3016 train 4.6077 , allloss: 4.6113, dt: 1298.28ms, fracRes: 0.3483, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3941, norm(y): 1.0135, norm:1.3826, tok/sec: 100958.32, flops:105.96, batch-reuse:1
@ 3017 train 4.6099 , allloss: 4.6201, dt: 1285.03ms, fracRes: 0.3494, norm(attn): 0.2080, norm(output): 0.4688, norm(x): 0.3944, norm(y): 1.0135, norm:1.5661, tok/sec: 101999.30, flops:107.05, batch-reuse:1
@ 3018 train 4.6569 , allloss: 4.6589, dt: 1273.91ms, fracRes: 0.3492, norm(attn): 0.2090, norm(output): 0.4707, norm(x): 0.3940, norm(y): 1.0134, norm:1.4523, tok/sec: 102889.54, flops:107.98, batch-reuse:1
@ 3019 train 4.8114 , allloss: 4.8126, dt: 1305.56ms, fracRes: 0.3525, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3934, norm(y): 1.0136, norm:1.5660, tok/sec: 100395.37, flops:105.37, batch-reuse:1
@ 3020 train 4.5983 , allloss: 4.6008, dt: 1280.61ms, fracRes: 0.3513, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3927, norm(y): 1.0135, norm:1.5789, tok/sec: 102351.39, flops:107.42, batch-reuse:1
@ 3021 train 4.6122 , allloss: 4.6135, dt: 1304.35ms, fracRes: 0.3515, norm(attn): 0.2061, norm(output): 0.4688, norm(x): 0.3910, norm(y): 1.0135, norm:1.4476, tok/sec: 100488.15, flops:105.46, batch-reuse:1
@ 3022 train 4.7050 , allloss: 4.7102, dt: 1305.08ms, fracRes: 0.3527, norm(attn): 0.2051, norm(output): 0.4688, norm(x): 0.3933, norm(y): 1.0135, norm:1.5876, tok/sec: 100431.81, flops:105.41, batch-reuse:1
@ 3023 train 4.7451 , allloss: 4.7510, dt: 1315.90ms, fracRes: 0.3536, norm(attn): 0.2021, norm(output): 0.4688, norm(x): 0.3901, norm(y): 1.0137, norm:1.8219, tok/sec: 99606.73, flops:104.54, batch-reuse:1
@ 3024 train 4.6524 , allloss: 4.6550, dt: 1289.30ms, fracRes: 0.3530, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3926, norm(y): 1.0136, norm:1.4557, tok/sec: 101661.29, flops:106.70, batch-reuse:1
@ 3025 train 4.6504 , allloss: 4.6536, dt: 1310.15ms, fracRes: 0.3526, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3933, norm(y): 1.0135, norm:1.4849, tok/sec: 100043.55, flops:105.00, batch-reuse:1
@ 3026 train 4.7227 , allloss: 4.7250, dt: 1298.34ms, fracRes: 0.3523, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3962, norm(y): 1.0135, norm:1.6998, tok/sec: 100953.83, flops:105.95, batch-reuse:1
@ 3027 train 4.7219 , allloss: 4.7234, dt: 1312.56ms, fracRes: 0.3515, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3952, norm(y): 1.0136, norm:1.7296, tok/sec: 99859.54, flops:104.80, batch-reuse:1
@ 3028 train 4.6764 , allloss: 4.6778, dt: 1342.34ms, fracRes: 0.3511, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3947, norm(y): 1.0136, norm:1.4859, tok/sec: 97644.19, flops:102.48, batch-reuse:1
@ 3029 train 4.5612 , allloss: 4.5623, dt: 1337.62ms, fracRes: 0.3513, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3947, norm(y): 1.0136, norm:1.6135, tok/sec: 97989.17, flops:102.84, batch-reuse:1
@ 3030 train 4.6149 , allloss: 4.6192, dt: 1291.10ms, fracRes: 0.3527, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3957, norm(y): 1.0135, norm:1.4866, tok/sec: 101519.82, flops:106.55, batch-reuse:1
@ 3031 train 4.6307 , allloss: 4.6326, dt: 1288.05ms, fracRes: 0.3550, norm(attn): 0.2031, norm(output): 0.4688, norm(x): 0.3914, norm(y): 1.0135, norm:1.3149, tok/sec: 101759.63, flops:106.80, batch-reuse:1
@ 3032 train 4.6517 , allloss: 4.6577, dt: 1301.25ms, fracRes: 0.3535, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3966, norm(y): 1.0134, norm:1.5805, tok/sec: 100728.04, flops:105.72, batch-reuse:1
@ 3033 train 4.5899 , allloss: 4.5916, dt: 1274.34ms, fracRes: 0.3543, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3967, norm(y): 1.0136, norm:1.5056, tok/sec: 102854.66, flops:107.95, batch-reuse:1
@ 3034 train 4.6783 , allloss: 4.6801, dt: 1284.85ms, fracRes: 0.3541, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3963, norm(y): 1.0137, norm:1.5928, tok/sec: 102013.64, flops:107.07, batch-reuse:1
@ 3035 train 4.7083 , allloss: 4.7096, dt: 1281.47ms, fracRes: 0.3544, norm(attn): 0.2021, norm(output): 0.4707, norm(x): 0.3953, norm(y): 1.0137, norm:1.4555, tok/sec: 102282.32, flops:107.35, batch-reuse:1
@ 3036 train 4.6202 , allloss: 4.6227, dt: 1296.17ms, fracRes: 0.3534, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3957, norm(y): 1.0137, norm:1.4954, tok/sec: 101122.22, flops:106.13, batch-reuse:1
@ 3037 train 4.6895 , allloss: 4.6907, dt: 1309.80ms, fracRes: 0.3529, norm(attn): 0.2041, norm(output): 0.4688, norm(x): 0.3950, norm(y): 1.0136, norm:1.6197, tok/sec: 100070.41, flops:105.03, batch-reuse:1
@ 3038 train 4.6502 , allloss: 4.6537, dt: 1278.84ms, fracRes: 0.3508, norm(attn): 0.2061, norm(output): 0.4707, norm(x): 0.3967, norm(y): 1.0134, norm:1.6072, tok/sec: 102492.97, flops:107.57, batch-reuse:1
@ 3039 train 4.8439 , allloss: 4.8503, dt: 1317.03ms, fracRes: 0.3542, norm(attn): 0.2061, norm(output): 0.4707, norm(x): 0.3924, norm(y): 1.0135, norm:1.7309, tok/sec: 99521.22, flops:104.45, batch-reuse:1
@ 3040 train 4.6602 , allloss: 4.6613, dt: 1339.66ms, fracRes: 0.3534, norm(attn): 0.2061, norm(output): 0.4707, norm(x): 0.3939, norm(y): 1.0136, norm:2.4539, tok/sec: 97839.70, flops:102.68, batch-reuse:1
@ 3041 train 4.6900 , allloss: 4.6919, dt: 1308.67ms, fracRes: 0.3516, norm(attn): 0.2070, norm(output): 0.4727, norm(x): 0.3985, norm(y): 1.0135, norm:1.8500, tok/sec: 100156.41, flops:105.12, batch-reuse:1
@ 3042 train 4.5730 , allloss: 4.5864, dt: 1292.14ms, fracRes: 0.3520, norm(attn): 0.2061, norm(output): 0.4707, norm(x): 0.3983, norm(y): 1.0136, norm:1.9114, tok/sec: 101438.06, flops:106.46, batch-reuse:1
@ 3043 train 4.6151 , allloss: 4.6161, dt: 1291.17ms, fracRes: 0.3543, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3959, norm(y): 1.0135, norm:1.4835, tok/sec: 101514.06, flops:106.54, batch-reuse:1
@ 3044 train 4.6660 , allloss: 4.6674, dt: 1316.08ms, fracRes: 0.3552, norm(attn): 0.2061, norm(output): 0.4727, norm(x): 0.3946, norm(y): 1.0135, norm:1.7932, tok/sec: 99592.43, flops:104.52, batch-reuse:1
@ 3045 train 4.8414 , allloss: 4.8433, dt: 1309.33ms, fracRes: 0.3539, norm(attn): 0.2109, norm(output): 0.4727, norm(x): 0.3978, norm(y): 1.0134, norm:2.0309, tok/sec: 100106.44, flops:105.06, batch-reuse:1
@ 3046 train 4.6541 , allloss: 4.6549, dt: 1324.20ms, fracRes: 0.3555, norm(attn): 0.2080, norm(output): 0.4707, norm(x): 0.3964, norm(y): 1.0135, norm:1.7002, tok/sec: 98982.32, flops:103.88, batch-reuse:1
@ 3047 train 4.7001 , allloss: 4.7013, dt: 1319.75ms, fracRes: 0.3560, norm(attn): 0.2061, norm(output): 0.4746, norm(x): 0.3983, norm(y): 1.0135, norm:1.7578, tok/sec: 99315.90, flops:104.23, batch-reuse:1
@ 3048 train 4.5959 , allloss: 4.5996, dt: 1282.57ms, fracRes: 0.3545, norm(attn): 0.2031, norm(output): 0.4727, norm(x): 0.3976, norm(y): 1.0136, norm:1.5102, tok/sec: 102194.84, flops:107.26, batch-reuse:1
@ 3049 train 4.7829 , allloss: 4.7842, dt: 1275.63ms, fracRes: 0.3532, norm(attn): 0.2031, norm(output): 0.4727, norm(x): 0.3976, norm(y): 1.0135, norm:1.5194, tok/sec: 102750.93, flops:107.84, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.7305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1572, 0.4180, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0308, 0.0854, 0.5391, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.0732, 0.2158, 0.1846, 0.3457, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.0742, 0.2852, 0.0801, 0.1660, 0.2422, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2109, 0.0815, 0.0393, 0.0623, 0.4238, 0.1699, 0.0109, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0079, 0.0496, 0.0255, 0.0175, 0.0052, 0.0135, 0.8750, 0.0053, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0270, 0.0698, 0.0349, 0.0250, 0.2871, 0.0513, 0.2412, 0.1797, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0530, 0.0723, 0.1338, 0.1396, 0.0265, 0.1963, 0.1055, 0.1338, 0.1201, 0.0201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0133, 0.0047, 0.0171, 0.0204, 0.0249, 0.0688, 0.0020, 0.0266, 0.7266, 0.0200, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0530, 0.0742, 0.1177, 0.1094, 0.0120, 0.0962, 0.1709, 0.1514, 0.0066, 0.0564, 0.0140, 0.1396, 0.0000, 0.0000, 0.0000],
        [0.0221, 0.0835, 0.0195, 0.0718, 0.0381, 0.0320, 0.5859, 0.0113, 0.0040, 0.0176, 0.0221, 0.0540, 0.0396, 0.0000, 0.0000],
        [0.0530, 0.0209, 0.0618, 0.0282, 0.0256, 0.1768, 0.0366, 0.1387, 0.2363, 0.0254, 0.0356, 0.0334, 0.0233, 0.1045, 0.0000],
        [0.0320, 0.0483, 0.1748, 0.0571, 0.0364, 0.1416, 0.1143, 0.0564, 0.0476, 0.0236, 0.0518, 0.0413, 0.0376, 0.0435, 0.0933]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0054, -0.0259,  0.0510,  ...,  0.0147,  0.0144,  0.0151],
        [ 0.0186,  0.0002,  0.0109,  ..., -0.0089,  0.0226,  0.0014],
        [-0.0381,  0.0094, -0.0106,  ..., -0.0186, -0.0175,  0.0160],
        ...,
        [-0.0336,  0.0109, -0.0587,  ...,  0.0105, -0.0169, -0.0134],
        [ 0.0093, -0.0116,  0.0127,  ...,  0.0360, -0.0154,  0.0146],
        [-0.0197,  0.0039, -0.0324,  ..., -0.0006, -0.0043,  0.0289]], device='cuda:0', requires_grad=True)
K: tensor([ 0.4453,  0.7773, -1.1719,  0.4629, -0.5469, -0.2246, -0.7148, -0.1602, -0.9062, -0.8438, -0.7461,  0.1060, -0.0698, -1.0703, -0.8867,  1.0156, -0.1611,  1.4375, -1.1016, -0.5312, -0.3242, -0.6562, -0.8516,  0.8906, -0.5039,  0.0703,  0.3105, -0.7031, -0.8555,  1.0234,  0.2031, -0.3555,
         0.1875,  0.0554,  0.3027, -0.8477, -0.2002,  0.9336, -1.2422,  0.0151, -0.4824,  0.1455,  0.0471,  0.3945, -0.8906,  0.7617, -0.2266,  0.3770,  1.2109, -0.7266, -0.4023,  0.4062, -0.2520,  2.1094, -0.6367, -0.1533,  0.5859,  0.2021,  0.6562,  0.4004,  0.0574,  0.6680, -0.2363,  0.2490],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0132,  0.0063, -0.0324,  ...,  0.0149,  0.0226,  0.0218],
        [ 0.0208, -0.0221, -0.0293,  ..., -0.0089,  0.0247,  0.0281],
        [-0.0052,  0.0198,  0.0341,  ...,  0.0049,  0.0071, -0.0312],
        ...,
        [ 0.0220,  0.0119,  0.0380,  ..., -0.0008,  0.0188, -0.0224],
        [ 0.0023, -0.0141, -0.0331,  ...,  0.0253, -0.0230, -0.0112],
        [ 0.0341, -0.0074,  0.0277,  ..., -0.0145, -0.0393, -0.0141]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3594, -0.4473, -0.0864, -0.0811, -0.7422,  0.5039, -0.6641,  0.0354, -0.3594, -0.4668,  0.0131, -0.7656,  0.7031, -0.1953, -0.1514, -0.1484, -1.0781,  0.6406,  0.5742, -0.9453,  0.1689,  0.2520, -0.1992,  0.8750, -1.3906, -0.5273,  0.6953,  0.9062, -0.5078,  0.2021, -0.2695,  0.7852,
         0.0688,  0.1445,  0.8203, -0.6484,  0.1396,  0.4375, -0.5117,  0.1514, -0.0520, -1.2969, -0.2754,  0.1807, -0.2715, -0.0630,  0.2178, -0.6953, -0.4531, -0.2275, -0.6758,  0.7305,  0.2207,  1.2188,  0.5625, -0.4512,  0.1387,  0.8555,  0.6328,  1.0781,  0.1797, -0.5547,  0.0189,  0.6328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      0.9922,      0.1089,      1.0469,     -0.3828,      2.0156,      1.4922,      0.0981,      0.0913,     -1.0391,      0.1377,      0.2148,      0.1553,      0.1328,      1.0859],
        [     0.0000,      0.9766,      0.9922,      1.1328,     -0.9844,      1.2578,      2.7031,      0.7344,     -1.8828,     -0.5547,     -0.9219,      1.0469,      1.3516,     -0.9414,      1.0859],
        [     0.0000,      1.0156,      2.8594,      2.4062,     -1.2578,     -0.0664,      0.0781,      1.6875,     -0.5664,      0.2207,     -0.6719,      1.1875,      1.5703,     -0.5664,      1.2031],
        [     0.0000,     -0.9062,      0.1748,      0.0186,      0.6445,      0.8984,     -0.6992,     -0.1738,      2.1406,     -0.0530,      1.2812,     -0.3242,     -1.1016,      1.4062,     -0.2637],
        [     0.0000,     -0.7188,      0.6328,     -0.6406,      0.0938,      0.4707,     -0.1157,      0.6328,      1.0469,     -0.8945,      0.1729,      0.0112,     -0.8008,      0.6289,      0.1104],
        [     0.0000,     -0.9531,     -1.6797,     -1.2188,      0.6992,     -0.2148,     -2.9688,      0.2373,      0.9844,     -0.2070,      1.0859,     -1.1094,     -1.4375,      0.2891,     -0.1216],
        [     0.0000,      1.8359,      1.1719,      0.7969,     -0.4062,      0.5391,      4.7188,     -0.3906,     -3.1719,      0.1748,     -1.3203,      1.0234,      0.8281,     -1.2578,      1.6328],
        [     0.0000,     -1.1484,     -0.1943,     -0.8906,     -1.2266,      1.2188,     -0.5039,      1.0469,      0.7500,     -0.5898,     -0.4492,     -0.1582,     -0.6797,      0.2656,     -0.6523],
        [     0.0000,      0.3066,      0.9258,      0.9688,     -0.6953,      1.3047,      0.6875,      0.9219,      0.8164,     -0.9648,      0.1816,      0.5820,      0.5586,      0.1177,      0.8594],
        [     0.0000,     -1.0312,      0.2539,      0.4277,      0.6289,      1.6484,     -1.8828,      0.6953,      4.0000,      0.4102,      1.7578,     -0.5078,     -0.9648,      1.9141,     -0.4727],
        [     0.0000,      0.3359,      0.7969,      0.7266,     -1.4922,      0.5938,      1.1719,      1.0469,     -2.0781,      0.0635,     -1.3281,      0.9688,      1.7344,     -1.3984,      0.1514],
        [     0.0000,      1.3281,     -0.1211,      1.1797,      0.5430,      0.3711,      3.2812,     -0.6680,     -1.7031,     -0.2256,      0.0006,      0.8945,      0.5859,     -0.7930,      1.6484],
        [     0.0000,     -0.9336,      0.1543,     -0.6328,     -0.7266,      1.2031,     -0.3711,      0.9609,      1.4922,     -0.7383,     -0.3965,     -0.4629,     -0.8242,      0.6758,      0.2168],
        [     0.0000,      0.4160,      1.7031,      0.5820,      0.1260,      1.4922,      1.2734,      0.5703,      0.3965,     -0.3066,      0.4805,      0.2559,      0.1602,      0.3047,      1.0703]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3908],
        [0.3530],
        [0.1854],
        [0.2155],
        [0.1668],
        [0.1850],
        [0.0672],
        [0.0700],
        [0.0902],
        [0.0435],
        [0.0937],
        [0.0484],
        [0.0472],
        [0.0561]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0012,     0.1611,     0.0415,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0461,     0.0532,     0.4668,     0.1250,     0.0045,     0.1553,     0.1465,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0005,     0.0002,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0001,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0530,     0.0287,     0.2734,     0.1455,     0.0017,     0.1357,     0.0444,     0.0002,     0.0239,     0.0894,     0.0009,     0.2021,     0.0011,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0004,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0102, -0.0029,  0.0234,  ..., -0.0033, -0.0239,  0.0019],
        [-0.0189,  0.0243,  0.0077,  ...,  0.0029,  0.0213,  0.0085],
        [-0.0086,  0.0293,  0.0041,  ..., -0.0042, -0.0378,  0.0044],
        ...,
        [ 0.0277, -0.0439, -0.0212,  ...,  0.0089,  0.0132, -0.0026],
        [-0.0584, -0.0452,  0.0174,  ...,  0.0365, -0.0030,  0.0073],
        [ 0.0339, -0.0098,  0.0377,  ...,  0.0483,  0.0084,  0.0499]], device='cuda:0', requires_grad=True)
K: tensor([-1.9297,  2.8750,  2.8281, -3.4844,  0.4375, -3.2656,  0.2441,  2.4531,  4.2812,  3.4688, -1.6172, -2.5938,  3.0625,  0.5664, -0.4004,  3.1875, -1.7500, -4.2812,  2.3125,  3.2344,  0.6797, -1.9844,  1.7891, -2.6094,  3.7188, -3.9219, -3.8750,  1.8594,  1.2578, -0.3984,  2.7969,  1.7891,
         1.2031,  3.2969, -2.3906,  2.8281,  0.5898,  1.6328, -1.4297, -1.9141, -1.7734, -2.8125,  2.8594, -2.5625,  0.4414,  0.5156, -0.4707, -1.7891, -1.6797,  2.0781, -0.4590, -1.2812, -1.5625, -1.9141,  3.2031, -2.1875, -1.2031, -1.1172, -2.3906,  2.4219,  3.3125, -0.7188,  2.2656, -1.5000],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0218,  0.0380,  0.0147,  ...,  0.0119,  0.0030,  0.0374],
        [ 0.0168, -0.0270,  0.0142,  ...,  0.0499, -0.0189,  0.0135],
        [-0.0173,  0.0055, -0.0086,  ..., -0.0090, -0.0167,  0.0032],
        ...,
        [-0.0359,  0.0123,  0.0324,  ..., -0.0123,  0.0158, -0.0019],
        [ 0.0321, -0.0123, -0.0094,  ..., -0.0214, -0.0281,  0.0294],
        [ 0.0147,  0.0155, -0.0273,  ..., -0.0049, -0.0031, -0.0108]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1016,  0.8359, -0.3848,  0.4336, -0.4336,  1.2266, -1.2656, -0.0188,  0.1797, -2.4062,  0.6641,  2.1406, -1.0547, -0.3359, -0.7266, -1.3750,  1.1719,  0.3906, -1.6797, -0.3086, -0.5117,  1.7891, -0.2080,  1.4766,  0.5352,  1.5312,  0.4805,  0.4062, -1.9609,  0.3516,  0.2021, -1.0859,
        -1.6875, -1.5156,  0.2100, -0.8516,  1.4141, -1.0156,  2.6094, -0.3301,  2.0469,  1.4297, -0.7891,  2.5312, -1.4531, -0.6719,  1.7969,  2.4375,  3.4531, -1.2812,  0.5781,  0.9062,  0.1270,  2.8750,  0.4219,  1.2578,  0.9844,  1.2812,  0.8672, -1.0938, -0.0579,  0.3711, -2.9844,  1.1719],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -12.7500,  -9.3125,  -9.6250, -13.8750, -15.8750, -11.8750, -10.6250, -12.6875, -13.0625, -14.9375, -10.3750, -10.8750, -12.4375, -10.5625],
        [  0.0000, -13.9375, -11.0625, -10.8750, -14.1875, -14.6875, -13.1250, -11.8750, -14.2500, -13.6875, -16.1250, -13.5625, -12.6250, -14.1250, -12.0000],
        [  0.0000,  -6.5312,  -1.6016,  -2.9531,  -7.6562,  -7.1562,  -6.1875,  -7.8438,  -6.9062,  -5.3125,  -9.4375,  -2.3750,  -7.3125,  -6.2500,  -2.7188],
        [  0.0000, -11.8750,  -9.8125, -10.1250, -12.5625, -13.1875, -10.6250,  -8.6875, -10.8750, -11.3125, -13.3750, -10.3125,  -9.3750, -10.7500, -11.1875],
        [  0.0000, -13.8750, -10.5625, -10.3125, -13.9375, -17.3750, -12.6875, -11.6875, -13.1875, -14.1250, -15.8125, -10.8750, -11.7500, -13.0000, -11.5625],
        [  0.0000, -11.6250,  -8.6875,  -9.8125, -13.3125, -12.5625, -10.2500,  -9.5000, -11.2500, -11.6250, -15.2500, -11.0625, -10.0625, -11.1875,  -9.7500],
        [  0.0000,   0.1416,   2.3125,   1.0000,  -2.3281,   1.2109,   1.1562,  -3.8438,   0.3340,   0.9844,  -2.8594,   2.0781,  -2.2656,   0.9883,   5.1562],
        [  0.0000, -11.5625,  -7.6250,  -8.5000, -11.8750, -16.1250, -10.7500,  -7.8438,  -9.9375, -10.6875, -13.0625,  -7.1250,  -7.9062,  -9.6250, -11.7500],
        [  0.0000, -10.4375,  -9.2500,  -8.5000, -11.5625, -10.9375,  -8.9375, -10.7500, -10.1875,  -9.6250, -12.4375,  -9.5000,  -9.2500,  -9.7500,  -6.3750],
        [  0.0000, -11.1875,  -9.7500,  -8.8125, -11.6875, -14.3750,  -9.8125,  -8.0625,  -9.4375, -11.1250, -12.1875,  -8.0000,  -7.9062,  -9.1250, -10.5000],
        [  0.0000, -13.2500, -10.3125, -10.6875, -14.1875, -14.3750, -14.1250, -11.4375, -13.9375, -11.4375, -16.1250, -11.8750, -12.2500, -13.9375, -12.0625],
        [  0.0000,  -0.6133,   1.6406,   1.0078,  -3.4688,   0.9414,  -0.1768,  -5.7188,  -0.7930,   0.5234,  -4.0625,   1.3438,  -3.8750,  -0.0864,   5.5938],
        [  0.0000, -12.3125,  -8.3750,  -9.3125, -12.4375, -16.8750, -11.4375,  -8.0625, -10.6250, -11.3125, -13.7500,  -7.9375,  -8.3125, -10.3750, -12.8750],
        [  0.0000, -18.2500, -13.9375, -13.5625, -19.3750, -21.8750, -18.1250, -15.2500, -18.3750, -17.6250, -21.1250, -16.0000, -16.5000, -18.2500, -15.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5466],
        [0.5022],
        [0.4041],
        [0.3490],
        [0.6377],
        [0.5960],
        [0.3037],
        [0.4832],
        [0.3682],
        [0.4906],
        [0.3801],
        [0.2614],
        [0.5038],
        [0.5959]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0356,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0008,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6602,     0.0815,     0.1157,     0.0471,     0.0962,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2393,     0.0339,     0.0515,     0.0211,     0.0231,     0.6289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5000,     0.0104,     0.0173,     0.0029,     0.0050,     0.4316,     0.0327,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0062,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1992,     0.0063,     0.0085,     0.0036,     0.0069,     0.5469,     0.1030,     0.0781,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0000,     0.0000,     0.0001,     0.0021,     0.0000,     0.0001,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0106,     0.0175,     0.0226,     0.0074,     0.0072,     0.2490,     0.1621,     0.1797,     0.1230,     0.1660,     0.0559,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0000,     0.0000,     0.0005,     0.0053,     0.0002,     0.0002,     0.0009,     0.0003,     0.0002,     0.0005,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0001,     0.0000,     0.0001,     0.0067,     0.0000,     0.0002,     0.0006,     0.0003,     0.0001,     0.0001,     0.0004,     0.0000,     0.0000],
        [    0.2637,     0.0033,     0.0040,     0.0015,     0.0042,     0.3438,     0.0403,     0.0400,     0.0286,     0.0544,     0.0150,     0.0091,     0.1543,     0.0369,     0.0000],
        [    0.1797,     0.0152,     0.0061,     0.0030,     0.0219,     0.1943,     0.0503,     0.0540,     0.1152,     0.0259,     0.0354,     0.0126,     0.0796,     0.1152,     0.0923]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0039,  0.0175,  0.0005,  ..., -0.0100, -0.0069,  0.0203],
        [-0.0318,  0.0046, -0.0017,  ...,  0.0149,  0.0349,  0.0118],
        [ 0.0037, -0.0181, -0.0089,  ...,  0.0098,  0.0265,  0.0087],
        ...,
        [ 0.0063, -0.0069, -0.0250,  ...,  0.0428,  0.0096, -0.0064],
        [-0.0004,  0.0208, -0.0284,  ...,  0.0430,  0.0130,  0.0115],
        [ 0.0058, -0.0075,  0.0204,  ..., -0.0722, -0.0310, -0.0145]], device='cuda:0', requires_grad=True)
K: tensor([ 0.5781, -1.4844,  0.5117, -0.9062, -1.1641,  1.0547,  1.2734, -0.6094, -1.9062,  0.7266,  0.4375, -1.5312, -2.2344, -1.1953,  1.1250,  1.8828, -0.6289, -1.1250,  0.7109, -2.0781, -2.0000, -0.3477, -2.0156,  1.4922, -1.6016,  0.6719,  0.7188,  1.7031,  1.6250, -0.9531, -1.3906,  1.2344,
        -1.2422,  1.8203, -1.0078,  1.5391, -1.1328, -0.3574, -1.0859,  1.8828, -0.5781, -1.6562,  1.6875,  1.0938, -0.9219, -1.8438, -0.8711,  1.2656, -0.5547, -0.8906,  0.0508, -1.6094, -2.6719, -2.0781,  1.9453, -1.7422, -2.0312,  0.3652,  1.2969, -1.5391, -1.5000,  0.9023,  2.2500, -1.8047],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0100, -0.0280,  0.0265,  ...,  0.0151, -0.0066,  0.0176],
        [-0.0157, -0.0155,  0.0321,  ..., -0.0066, -0.0295, -0.0248],
        [-0.0294, -0.0117, -0.0097,  ..., -0.0626, -0.0659, -0.0552],
        ...,
        [-0.0306,  0.0008,  0.0378,  ..., -0.0046, -0.0401, -0.0421],
        [ 0.0235,  0.0187, -0.0133,  ..., -0.0681, -0.0261,  0.0116],
        [ 0.0288, -0.0034,  0.0050,  ..., -0.0036,  0.0131,  0.0336]], device='cuda:0', requires_grad=True)
Q: tensor([-0.1260, -1.6406,  1.1719,  1.2891, -0.2090,  0.2314,  0.8516, -0.3691, -0.0197,  0.0050, -1.1094,  0.6992, -0.5391, -0.2314,  0.1436,  0.8125,  0.9727,  2.0781,  0.0996, -0.8125,  0.4336, -0.3652, -0.6172, -0.6914,  0.0835, -1.6406, -0.0164,  0.5508,  0.3574, -0.0835, -0.4609, -0.0757,
         1.0078, -0.0031,  0.8945, -0.1250,  1.7031,  0.4551,  0.8984, -0.1367, -0.7891, -0.7734, -0.7305, -0.8398,  0.1572,  0.0708, -0.1465,  1.3438,  0.7539,  0.6641,  1.9609, -0.8672,  0.4902, -0.2852, -0.2695,  0.6758,  0.2461, -1.1875,  1.9141,  2.4219,  1.2656, -1.6406,  1.0234,  0.0223],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.2969,     -3.4688,     -4.0938,     -3.1094,      0.2891,     -1.4062,     -1.4922,     -0.9727,     -1.9453,     -2.0469,     -3.0312,     -0.9883,     -0.7656,     -0.1123],
        [     0.0000,     -7.1250,     -8.1875,     -8.6875,     -6.0938,     -3.8906,     -6.8125,     -6.4688,     -5.0938,     -6.1562,     -6.5312,     -6.2500,     -4.4375,     -5.2188,     -5.0312],
        [     0.0000,     -9.6875,    -10.9375,    -12.1875,     -8.4375,     -5.2500,     -9.5000,     -7.9688,     -6.7188,     -8.7500,     -9.3125,     -8.5000,     -6.1562,     -7.0312,     -7.7500],
        [     0.0000,     -2.0938,     -1.7422,     -2.6406,     -1.9297,      0.8750,      0.6250,      0.0447,     -0.0762,     -0.7148,     -0.7852,     -1.5781,      0.2539,      0.1973,      1.2656],
        [     0.0000,     -1.9531,     -1.5391,     -2.4375,     -2.3438,      0.9688,      0.0820,     -0.0013,     -0.2930,     -0.6289,     -1.2344,     -1.6328,      0.8086,      0.0452,      1.5391],
        [     0.0000,     -3.8750,     -3.3594,     -5.1562,     -4.5938,     -0.1436,     -2.7188,     -1.2656,     -1.2969,     -1.6641,     -2.8594,     -4.7188,     -1.7031,     -1.1406,     -0.7695],
        [     0.0000,    -10.1250,    -10.3125,    -11.8125,    -10.1875,     -5.0938,    -11.1250,     -8.8750,     -7.7188,     -8.4375,    -10.2500,     -9.8125,     -7.2500,     -7.9688,     -8.0000],
        [     0.0000,     -3.4531,     -3.1562,     -4.0000,     -3.3750,      1.0078,     -0.6602,     -0.9375,     -1.4141,     -0.5820,     -1.8672,     -2.3906,      0.4727,     -1.0469,      1.0547],
        [     0.0000,     -9.8750,    -10.2500,    -11.3750,     -9.2500,     -6.1875,    -10.9375,     -8.9375,     -8.1250,     -9.1250,    -10.0625,     -9.5000,     -7.2188,     -8.5000,     -8.6875],
        [     0.0000,      0.4941,      0.7539,     -0.3574,     -0.3926,      3.1562,      2.7188,      2.8281,      2.4531,      2.7500,      1.6562,      0.0791,      2.7188,      3.0000,      3.6562],
        [     0.0000,     -9.0000,     -9.9375,    -10.4375,     -7.5625,     -5.2188,     -8.6250,     -8.6875,     -6.9688,     -8.1250,     -8.5000,     -7.5312,     -6.3750,     -7.2188,     -6.9688],
        [     0.0000,     -9.3750,     -9.5625,    -10.6250,     -9.6875,     -5.0000,    -10.6250,     -8.7500,     -7.4688,     -8.2500,     -9.7500,     -9.2500,     -7.7188,     -7.8125,     -8.1250],
        [     0.0000,     -4.3750,     -4.1875,     -5.1875,     -4.1250,      0.2656,     -1.8828,     -1.8906,     -2.2188,     -1.5781,     -2.8594,     -3.3750,     -0.5391,     -1.9688,     -0.1387],
        [     0.0000,     -2.4688,     -3.3750,     -4.0938,     -2.1094,      0.0781,     -1.2734,     -1.2031,     -0.4434,     -1.9375,     -1.6250,     -2.6562,     -0.8125,     -0.4434,     -0.6680]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9775],
        [0.9967],
        [0.9997],
        [0.9183],
        [0.7594],
        [0.8377],
        [0.9518],
        [0.7298],
        [0.9860],
        [0.7343],
        [0.9824],
        [0.9645],
        [0.7583],
        [0.8463]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5000, 0.2969, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0459, 0.1621, 0.0554, 0.7383, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2275, 0.1553, 0.1387, 0.3340, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0442, 0.3262, 0.2256, 0.1445, 0.1865, 0.0732, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2432, 0.0796, 0.2178, 0.3301, 0.0635, 0.0278, 0.0374, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.1201, 0.0942, 0.2871, 0.0197, 0.0142, 0.0049, 0.4023, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.0928, 0.1406, 0.3594, 0.0157, 0.0277, 0.0090, 0.1943, 0.0222, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0728, 0.2617, 0.1094, 0.0830, 0.0190, 0.0041, 0.0022, 0.1279, 0.0295, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1543, 0.0713, 0.1123, 0.1079, 0.0161, 0.0167, 0.0071, 0.2051, 0.0476, 0.2256, 0.0371, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0435, 0.1357, 0.0192, 0.2178, 0.1221, 0.0146, 0.0104, 0.0718, 0.0444, 0.2021, 0.0820, 0.0364, 0.0000, 0.0000, 0.0000],
        [0.0383, 0.1406, 0.0272, 0.0488, 0.0091, 0.0173, 0.0024, 0.1128, 0.0403, 0.1504, 0.0297, 0.0967, 0.2871, 0.0000, 0.0000],
        [0.1011, 0.0894, 0.0554, 0.1416, 0.0137, 0.0383, 0.0097, 0.0854, 0.0291, 0.1738, 0.0311, 0.0781, 0.1177, 0.0339, 0.0000],
        [0.0742, 0.1328, 0.0593, 0.1021, 0.0486, 0.0272, 0.0767, 0.0540, 0.0398, 0.0510, 0.0229, 0.0496, 0.0173, 0.0322, 0.2119]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0111,  0.0390,  0.0194,  ...,  0.0224,  0.0412, -0.0330],
        [-0.0093, -0.0691,  0.0078,  ...,  0.0040, -0.0132,  0.0391],
        [ 0.0219,  0.0119, -0.0407,  ..., -0.0058, -0.0158,  0.0270],
        ...,
        [-0.0020,  0.0062, -0.0075,  ..., -0.0262, -0.0447,  0.0228],
        [-0.0006,  0.0199, -0.0373,  ..., -0.0420,  0.0009,  0.0120],
        [-0.0216, -0.0086, -0.0329,  ..., -0.0329, -0.0153, -0.0004]], device='cuda:0', requires_grad=True)
K: tensor([ 1.6797,  0.8438,  0.6250, -1.5000,  0.4473, -0.7734, -1.1328, -0.4648,  0.3379, -1.5156,  1.4141, -0.0356,  0.9180, -1.7344,  2.0625,  0.4531,  0.2480, -1.1953,  1.8047,  0.2578,  0.7891,  1.1172, -0.1777,  1.3828,  1.4141,  1.2734, -2.7188, -1.8984,  2.4688,  0.3418,  0.4004,  1.1406,
        -0.2051,  0.8320, -2.1250, -1.6172,  1.5781,  0.4297,  1.1406, -1.9453,  0.9844, -0.2441, -0.0820,  0.6484,  1.3281,  0.3125,  1.3438,  1.4453,  0.5664,  0.2080,  0.0410, -1.7109,  1.8203,  1.4141,  0.8086,  0.4941, -1.4688, -0.0679, -1.9844,  0.6602,  0.3438, -0.3223, -0.4023,  1.0547],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0051, -0.0191, -0.0361,  ...,  0.0310, -0.0062, -0.0180],
        [-0.0315, -0.0460,  0.0149,  ..., -0.0292, -0.0210, -0.0650],
        [ 0.0256,  0.0078, -0.0181,  ...,  0.0430, -0.0021,  0.0220],
        ...,
        [-0.0163,  0.0269, -0.0046,  ...,  0.0036,  0.0159,  0.0044],
        [ 0.0192,  0.0079, -0.0088,  ..., -0.0140,  0.0075,  0.0167],
        [-0.0139,  0.0442,  0.0014,  ..., -0.0031,  0.0048,  0.0102]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2637,  0.5547, -2.0938,  2.5156, -0.7188, -0.9961, -1.5156, -0.8516,  0.9883,  0.6445,  1.1719,  1.5469, -1.2188, -0.2256,  0.4883, -0.6211, -0.4648,  0.5977,  1.8438,  2.0938, -1.4141, -0.0097, -1.3594, -0.3281,  0.8906,  0.7695, -0.8008,  0.4336,  0.1279, -0.3750,  0.3438, -0.3711,
         0.0260,  1.2891,  0.6758,  0.0537, -2.3594, -1.1797,  0.3516, -0.8750, -1.2656, -0.3320, -0.0952, -0.4297,  0.2158,  1.3516, -0.3535,  1.8125, -0.6719,  3.0781,  0.9531,  0.6602,  1.3281,  2.6562, -1.2031,  0.5391, -1.2891, -0.2930,  0.5117, -0.5742, -0.2676, -0.8711, -0.5117, -0.4863],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.0781,     -1.1797,     -0.8125,     -2.0781,     -3.1406,     -3.1250,     -1.7188,     -3.0312,     -1.9844,     -3.7500,     -2.0469,     -2.0000,     -3.7188,     -1.9453],
        [     0.0000,     -0.5234,     -0.9141,      0.8594,      1.2656,     -1.4531,      0.3633,     -0.3320,     -0.9922,     -1.7422,     -2.4688,     -2.9844,     -0.9883,     -2.2344,     -1.8750],
        [     0.0000,      1.2578,      0.1875,      2.7812,      2.6719,      0.0014,      0.6211,      0.0559,     -0.5391,     -0.3242,     -1.8828,     -2.1250,     -0.0449,     -1.4453,      0.9414],
        [     0.0000,     -0.3809,     -0.4961,      0.3867,     -0.4590,     -1.2266,     -2.3438,      0.1797,     -2.4219,     -0.3281,     -3.0625,     -0.9258,     -0.2715,     -3.3281,      0.3945],
        [     0.0000,      2.0000,      1.6250,      1.1797,      1.4375,      0.5078,      1.7656,      2.6094,      0.8320,      0.5547,     -0.6289,     -0.6289,      0.2832,     -1.0859,      0.9883],
        [     0.0000,     -1.1172,     -0.1104,      0.3086,     -1.3438,     -2.1719,     -1.8750,      1.0625,     -1.7656,     -0.6367,     -3.7656,     -0.7070,     -1.0078,     -3.0469,      0.0801],
        [     0.0000,      0.7227,      0.4805,      1.5938,     -1.0859,     -1.4141,     -2.4688,      1.9297,      0.0075,      1.9062,     -1.6172,      0.6328,      1.1328,     -0.9453,      2.7031],
        [     0.0000,     -0.3887,      0.0245,      0.9688,     -2.1562,     -1.5938,     -2.7188,      0.3516,     -1.8203,      0.5156,     -2.3750,     -0.2949,     -0.3359,     -2.5938,      1.1016],
        [     0.0000,      1.2812,      0.4102,      0.1309,     -1.3359,     -2.8750,     -3.5000,      0.5625,     -0.9023,      1.3906,      1.2266,      2.4219,      2.4688,     -0.5156,      2.0000],
        [     0.0000,     -0.7656,     -0.3164,     -0.3555,     -2.2656,     -2.2188,     -3.0781,      0.2852,     -1.1719,      0.3828,     -1.4219,      1.5156,      1.2812,     -1.2109,      1.2422],
        [     0.0000,      1.1406,     -0.8203,      1.6094,      1.0312,     -1.0938,     -1.4297,      0.4961,      0.0219,      1.5312,      0.6367,     -0.1836,      2.9531,      0.6406,      1.5625],
        [     0.0000,      1.3047,     -0.3398,      0.2461,     -1.4375,     -0.7891,     -2.7500,      1.0781,      0.0500,      1.3672,     -0.2520,      0.9258,      2.0156,      0.8281,      2.8750],
        [     0.0000,     -0.1201,     -0.5977,      0.3398,     -2.0000,     -0.9648,     -2.3438,     -0.1650,     -1.2422,      0.5469,     -1.1797,     -0.2559,      0.1543,     -1.0859,      1.2109],
        [     0.0000,      0.5859,     -0.2246,      0.3164,     -0.4238,     -1.0000,      0.0330,     -0.3184,     -0.6250,     -0.3750,     -1.1719,     -0.4062,     -1.4531,     -0.8320,      1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2000],
        [0.0852],
        [0.0232],
        [0.0946],
        [0.0890],
        [0.1488],
        [0.0736],
        [0.0719],
        [0.0375],
        [0.0452],
        [0.0232],
        [0.0815],
        [0.0396],
        [0.0473]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0120,     0.9141,     0.0737,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.7969,     0.0258,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0103,     0.6133,     0.1191,     0.1865,     0.0728,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.7812,     0.0153,     0.0264,     0.0981,     0.0776,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.4980,     0.0265,     0.1006,     0.0625,     0.0156,     0.2930,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.2500,     0.0070,     0.0342,     0.1738,     0.0276,     0.3281,     0.1777,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0618,     0.2637,     0.0894,     0.0303,     0.0840,     0.0540,     0.1602,     0.2354,     0.0223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0166,     0.2695,     0.0508,     0.0322,     0.0447,     0.0248,     0.0298,     0.0630,     0.0082,     0.4590,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0018,     0.0012,     0.0003,     0.0001,     0.0003,     0.0004,     0.0016,     0.0002,     0.9883,     0.0037,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0157,     0.3359,     0.0284,     0.2168,     0.0645,     0.0110,     0.0183,     0.1011,     0.0182,     0.0820,     0.0260,     0.0815,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.1836,     0.0042,     0.0083,     0.0432,     0.0123,     0.0608,     0.0586,     0.2480,     0.0830,     0.0684,     0.0177,     0.2070,     0.0000,     0.0000],
        [    0.0080,     0.0226,     0.0057,     0.0020,     0.0028,     0.0058,     0.0079,     0.0114,     0.0035,     0.8438,     0.0161,     0.0243,     0.0393,     0.0077,     0.0000],
        [    0.0009,     0.6797,     0.0211,     0.0366,     0.0216,     0.0096,     0.0383,     0.0204,     0.0112,     0.0688,     0.0094,     0.0173,     0.0283,     0.0046,     0.0334]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0212,  0.0172, -0.0080,  ..., -0.0250,  0.0043, -0.0480],
        [ 0.0357,  0.0110,  0.0511,  ..., -0.0667, -0.0279,  0.0040],
        [-0.0025, -0.0105,  0.0283,  ...,  0.0444,  0.0099, -0.0311],
        ...,
        [ 0.0023,  0.0015, -0.0137,  ..., -0.0351, -0.0248,  0.0057],
        [ 0.0195, -0.0188,  0.0373,  ...,  0.0197, -0.0301,  0.0061],
        [-0.0192,  0.0475,  0.0008,  ..., -0.0186,  0.0054,  0.0099]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1025, -0.5742,  2.3125,  1.5469, -1.0234, -0.3320, -0.5742,  2.2344, -1.1484,  0.4551,  0.3613, -0.1650,  0.4512,  0.0237,  1.3438, -2.1406,  0.5352, -1.1562, -0.2285, -0.8516, -3.1562, -0.6680, -0.7500,  1.4141, -0.2178, -1.7734, -1.6172, -1.1094,  0.8867,  0.0320,  0.6484, -0.5703,
        -0.3711,  1.9609,  2.3906,  0.2402,  0.7695,  0.2520,  1.1797, -0.0078, -1.4453, -0.9609,  1.0859,  0.3438,  0.8164, -0.0806,  1.2188,  0.8945, -0.6016,  0.3047,  0.6562,  0.1807, -1.1797, -0.8398,  0.3516,  0.7773, -0.5508, -2.5469, -1.8984, -2.0000,  0.5820,  0.1748,  0.7930, -0.2334],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0002,  0.0339, -0.0197,  ...,  0.0026,  0.0047,  0.0282],
        [-0.0037, -0.0161,  0.0315,  ..., -0.0086, -0.0114,  0.0139],
        [-0.0181,  0.0427, -0.0261,  ...,  0.0200,  0.0122,  0.0114],
        ...,
        [ 0.0085,  0.0348, -0.0088,  ...,  0.0003,  0.0123,  0.0049],
        [ 0.0026,  0.0168, -0.0017,  ...,  0.0248, -0.0289,  0.0258],
        [ 0.0286,  0.0280, -0.0330,  ...,  0.0086,  0.0057, -0.0365]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6406, -0.4082,  0.7969,  2.0781, -1.3516,  0.1152, -0.8359,  0.7930, -0.9414, -2.2500, -2.5938, -0.1299,  0.0107, -0.1963, -0.9688, -1.4609, -1.2109, -0.1953, -0.6172, -0.2383, -1.6406, -2.0938,  0.4883, -0.1162, -0.4844,  0.7891, -0.7109, -0.9414,  0.5117, -0.7617,  4.5312,  0.6406,
         0.3652,  0.8320, -1.5938, -0.0640,  1.6484,  0.2969,  0.5547,  2.4062, -1.5156, -0.1533,  0.7617, -0.2285,  1.0547, -0.4863,  2.4219,  0.2930, -0.2754, -1.4219, -0.5352,  0.4316, -0.2178, -0.9688, -0.1592,  0.6211, -1.1094,  0.0308, -0.7383,  0.3262, -0.1006,  2.6562,  0.2275,  1.2266],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  6.5312,  3.1094,  3.5000,  4.0625,  3.0625,  3.4062,  2.8281,  1.8438,  2.6875, -0.5391,  0.5508,  2.5000,  0.2432,  3.3281],
        [ 0.0000,  4.3438,  1.8125,  3.7656,  3.2812,  2.9688,  2.0938,  2.2500,  2.1094,  1.7500,  0.9414,  1.3125,  1.5391,  0.7734,  1.2578],
        [ 0.0000,  7.1250,  3.6875,  5.6250,  5.9688,  4.3750,  4.9375,  5.0625,  4.5312,  2.9219,  3.0625,  1.5000,  3.4062,  2.7500,  3.7969],
        [ 0.0000,  4.0938,  2.4531,  2.9062,  1.9609,  2.4844,  2.0156,  3.1875,  0.0850,  3.9219, -0.3965,  1.9844,  2.2188, -1.3594,  4.1562],
        [ 0.0000,  6.6250,  2.6875,  3.2188,  4.5312,  4.3125,  5.5312,  4.1875,  4.1875,  3.6719,  1.6719,  1.3906,  2.8750,  1.8906,  4.6562],
        [ 0.0000,  4.9375,  1.9922,  3.3281,  2.8438,  1.4688,  4.4062,  4.4062,  3.2812,  2.7500,  0.8945,  1.7734,  2.2812,  1.4609,  4.0312],
        [ 0.0000,  6.2812,  2.7031,  4.2812,  5.9062,  4.0938,  6.5625,  5.9375,  6.0625,  3.1250,  3.5000,  2.0469,  4.6562,  3.7500,  6.0312],
        [ 0.0000,  1.4531,  0.3672, -0.7109,  0.3066, -0.1328,  0.9531,  1.3359, -1.0156,  3.7500, -0.8320,  0.5039,  1.4844, -1.6328,  3.2031],
        [ 0.0000,  2.7969,  1.1172,  0.6680,  0.9922,  0.4043,  0.5859,  1.3359, -0.7070,  3.3281,  3.6719,  3.0312,  2.5000, -0.3340,  3.1094],
        [ 0.0000, -0.1025, -0.4863, -2.0625, -2.8594, -1.7891, -1.5391, -0.2334, -2.4062,  6.1875,  0.6016,  2.7344,  2.3281, -1.0781,  2.8438],
        [ 0.0000,  3.0625,  0.5898,  2.6250,  1.4062, -0.3555,  0.1523,  1.8594,  0.1455,  1.6484,  0.5000,  1.6406,  1.9766, -0.2754,  2.4844],
        [ 0.0000,  3.6406, -0.1523,  0.5430,  2.1875,  0.9375,  2.5312,  2.5000,  3.9375,  2.8438,  2.6562,  1.3047,  3.7656,  4.2188,  5.2812],
        [ 0.0000,  1.0391, -0.3438, -1.3594, -1.0391, -0.3145, -0.0141,  0.3555, -0.8242,  4.6562,  0.6992,  1.1094,  1.5859, -0.0366,  2.8438],
        [ 0.0000,  6.6562,  3.1875,  3.7344,  3.2031,  2.4062,  3.7812,  3.1562,  2.5469,  4.3750,  2.3750,  2.9844,  3.4844,  1.6641,  3.6406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0483],
        [0.0336],
        [0.0036],
        [0.0870],
        [0.0195],
        [0.0697],
        [0.0188],
        [0.0551],
        [0.1838],
        [0.0425],
        [0.0375],
        [0.0153],
        [0.0356],
        [0.0244]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1484 the:0.0674,:0.1738 and:0.0796om:0.1001 are:0.2695 green:0.0757iced:0.1113)
iced
------
		( the:0.0674,:0.1738 and:0.0796om:0.1001 are:0.2695 green:0.0757iced:0.1113,:0.4043)
, and are eaten.
The first thing you can do is to eat
@ 3050 train 4.7480 , allloss: 4.7496, dt: 1718.39ms, fracRes: 0.3530, norm(attn): 0.2041, norm(output): 0.4727, norm(x): 0.3975, norm(y): 1.0135, norm:1.6646, tok/sec: 76276.05, flops:80.05, batch-reuse:1
@ 3051 train 4.6769 , allloss: 4.6790, dt: 1606.87ms, fracRes: 0.3517, norm(attn): 0.2051, norm(output): 0.4727, norm(x): 0.3970, norm(y): 1.0135, norm:1.5489, tok/sec: 81569.70, flops:85.61, batch-reuse:1
@ 3052 train 4.6252 , allloss: 4.6290, dt: 1298.94ms, fracRes: 0.3524, norm(attn): 0.2061, norm(output): 0.4707, norm(x): 0.3941, norm(y): 1.0135, norm:1.2731, tok/sec: 100906.77, flops:105.90, batch-reuse:1
@ 3053 train 4.6270 , allloss: 4.6293, dt: 1289.72ms, fracRes: 0.3533, norm(attn): 0.2070, norm(output): 0.4727, norm(x): 0.3982, norm(y): 1.0135, norm:1.5622, tok/sec: 101628.20, flops:106.66, batch-reuse:1
@ 3054 train 4.6600 , allloss: 4.6626, dt: 1295.45ms, fracRes: 0.3526, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3969, norm(y): 1.0135, norm:1.2229, tok/sec: 101178.76, flops:106.19, batch-reuse:1
@ 3055 train 4.6106 , allloss: 4.6115, dt: 1289.39ms, fracRes: 0.3555, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3930, norm(y): 1.0137, norm:1.5091, tok/sec: 101654.23, flops:106.69, batch-reuse:1
@ 3056 train 4.6774 , allloss: 4.6783, dt: 1313.30ms, fracRes: 0.3546, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3947, norm(y): 1.0136, norm:1.6120, tok/sec: 99803.45, flops:104.75, batch-reuse:1
@ 3057 train 4.6455 , allloss: 4.6468, dt: 1298.92ms, fracRes: 0.3535, norm(attn): 0.2051, norm(output): 0.4707, norm(x): 0.3957, norm(y): 1.0136, norm:1.5610, tok/sec: 100908.71, flops:105.91, batch-reuse:1
@ 3058 train 4.6636 , allloss: 4.6650, dt: 1339.27ms, fracRes: 0.3518, norm(attn): 0.2051, norm(output): 0.4746, norm(x): 0.3993, norm(y): 1.0135, norm:1.6283, tok/sec: 97868.30, flops:102.71, batch-reuse:1
@ 3059 train 4.6217 , allloss: 4.6286, dt: 1337.92ms, fracRes: 0.3533, norm(attn): 0.2031, norm(output): 0.4727, norm(x): 0.3973, norm(y): 1.0136, norm:1.3248, tok/sec: 97966.96, flops:102.82, batch-reuse:1
@ 3060 train 4.8048 , allloss: 4.8106, dt: 1283.41ms, fracRes: 0.3551, norm(attn): 0.2031, norm(output): 0.4707, norm(x): 0.3952, norm(y): 1.0136, norm:1.5231, tok/sec: 102128.26, flops:107.19, batch-reuse:1
@ 3061 train 4.5673 , allloss: 4.5698, dt: 1313.47ms, fracRes: 0.3590, norm(attn): 0.2041, norm(output): 0.4707, norm(x): 0.3934, norm(y): 1.0136, norm:4.8020, tok/sec: 99790.28, flops:104.73, batch-reuse:1
@ 3062 train 4.6166 , allloss: 4.6179, dt: 1320.57ms, fracRes: 0.3542, norm(attn): 0.2100, norm(output): 0.4707, norm(x): 0.3958, norm(y): 1.0135, norm:2.7679, tok/sec: 99253.77, flops:104.17, batch-reuse:1
@ 3063 train 4.6298 , allloss: 4.6310, dt: 1322.05ms, fracRes: 0.3540, norm(attn): 0.2051, norm(output): 0.4746, norm(x): 0.3960, norm(y): 1.0136, norm:1.8548, tok/sec: 99142.78, flops:104.05, batch-reuse:1
@ 3064 train 4.5790 , allloss: 4.5811, dt: 1306.52ms, fracRes: 0.3551, norm(attn): 0.2031, norm(output): 0.4727, norm(x): 0.3943, norm(y): 1.0137, norm:1.6879, tok/sec: 100321.58, flops:105.29, batch-reuse:1
@ 3065 train 4.6968 , allloss: 4.7002, dt: 1305.56ms, fracRes: 0.3536, norm(attn): 0.2021, norm(output): 0.4746, norm(x): 0.3968, norm(y): 1.0137, norm:1.5062, tok/sec: 100395.21, flops:105.37, batch-reuse:1
@ 3066 train 4.7020 , allloss: 4.7092, dt: 1325.99ms, fracRes: 0.3534, norm(attn): 0.2061, norm(output): 0.4746, norm(x): 0.3971, norm(y): 1.0137, norm:1.7157, tok/sec: 98848.68, flops:103.74, batch-reuse:1
@ 3067 train 4.7237 , allloss: 4.7268, dt: 1333.97ms, fracRes: 0.3524, norm(attn): 0.2041, norm(output): 0.4727, norm(x): 0.3985, norm(y): 1.0136, norm:1.5483, tok/sec: 98257.38, flops:103.12, batch-reuse:1
@ 3068 train 4.6119 , allloss: 4.6195, dt: 1311.63ms, fracRes: 0.3530, norm(attn): 0.2070, norm(output): 0.4727, norm(x): 0.3983, norm(y): 1.0136, norm:1.4806, tok/sec: 99930.44, flops:104.88, batch-reuse:1
@ 3069 train 4.6454 , allloss: 4.6472, dt: 1312.20ms, fracRes: 0.3558, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.3989, norm(y): 1.0136, norm:1.5291, tok/sec: 99886.88, flops:104.83, batch-reuse:1
@ 3070 train 4.6234 , allloss: 4.6265, dt: 1287.65ms, fracRes: 0.3571, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.4015, norm(y): 1.0135, norm:1.7543, tok/sec: 101791.91, flops:106.83, batch-reuse:1
@ 3071 train 4.6341 , allloss: 4.6392, dt: 1302.68ms, fracRes: 0.3577, norm(attn): 0.2041, norm(output): 0.4805, norm(x): 0.4020, norm(y): 1.0136, norm:1.5101, tok/sec: 100617.30, flops:105.60, batch-reuse:1
@ 3072 train 4.6111 , allloss: 4.6168, dt: 1274.29ms, fracRes: 0.3563, norm(attn): 0.2041, norm(output): 0.4766, norm(x): 0.4006, norm(y): 1.0136, norm:1.6534, tok/sec: 102858.57, flops:107.95, batch-reuse:1
@ 3073 train 4.5707 , allloss: 4.5730, dt: 1301.91ms, fracRes: 0.3541, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.3989, norm(y): 1.0136, norm:1.6350, tok/sec: 100676.76, flops:105.66, batch-reuse:1
@ 3074 train 4.5564 , allloss: 4.5579, dt: 1300.49ms, fracRes: 0.3543, norm(attn): 0.2061, norm(output): 0.4746, norm(x): 0.3986, norm(y): 1.0137, norm:1.7060, tok/sec: 100786.93, flops:105.78, batch-reuse:1
@ 3075 train 4.6332 , allloss: 4.6340, dt: 1299.13ms, fracRes: 0.3541, norm(attn): 0.2061, norm(output): 0.4727, norm(x): 0.3979, norm(y): 1.0136, norm:1.6055, tok/sec: 100891.97, flops:105.89, batch-reuse:1
@ 3076 train 4.5617 , allloss: 4.5630, dt: 1289.23ms, fracRes: 0.3520, norm(attn): 0.2070, norm(output): 0.4746, norm(x): 0.3974, norm(y): 1.0135, norm:1.5420, tok/sec: 101667.14, flops:106.70, batch-reuse:1
@ 3077 train 4.5862 , allloss: 4.5874, dt: 1316.84ms, fracRes: 0.3505, norm(attn): 0.2090, norm(output): 0.4824, norm(x): 0.4018, norm(y): 1.0135, norm:1.6098, tok/sec: 99535.31, flops:104.46, batch-reuse:1
@ 3078 train 4.5821 , allloss: 4.5830, dt: 1304.04ms, fracRes: 0.3526, norm(attn): 0.2070, norm(output): 0.4766, norm(x): 0.4006, norm(y): 1.0135, norm:1.5599, tok/sec: 100512.44, flops:105.49, batch-reuse:1
@ 3079 train 4.5366 , allloss: 4.5382, dt: 1287.37ms, fracRes: 0.3521, norm(attn): 0.2070, norm(output): 0.4766, norm(x): 0.4005, norm(y): 1.0135, norm:1.3265, tok/sec: 101813.38, flops:106.86, batch-reuse:1
@ 3080 train 4.6757 , allloss: 4.6778, dt: 1302.92ms, fracRes: 0.3523, norm(attn): 0.2080, norm(output): 0.4844, norm(x): 0.4029, norm(y): 1.0135, norm:1.7037, tok/sec: 100598.39, flops:105.58, batch-reuse:1
@ 3081 train 4.6490 , allloss: 4.6509, dt: 1283.01ms, fracRes: 0.3537, norm(attn): 0.2061, norm(output): 0.4766, norm(x): 0.3983, norm(y): 1.0137, norm:1.4804, tok/sec: 102159.63, flops:107.22, batch-reuse:1
@ 3082 train 4.6566 , allloss: 4.6582, dt: 1323.82ms, fracRes: 0.3532, norm(attn): 0.2070, norm(output): 0.4746, norm(x): 0.4002, norm(y): 1.0136, norm:1.4304, tok/sec: 99010.48, flops:103.91, batch-reuse:1
@ 3083 train 4.5412 , allloss: 4.5439, dt: 1295.90ms, fracRes: 0.3521, norm(attn): 0.2070, norm(output): 0.4785, norm(x): 0.4033, norm(y): 1.0135, norm:1.4143, tok/sec: 101143.43, flops:106.15, batch-reuse:1
@ 3084 train 4.5421 , allloss: 4.5438, dt: 1285.47ms, fracRes: 0.3540, norm(attn): 0.2090, norm(output): 0.4746, norm(x): 0.4010, norm(y): 1.0136, norm:1.2363, tok/sec: 101964.43, flops:107.01, batch-reuse:1
@ 3085 train 4.6565 , allloss: 4.6582, dt: 1302.97ms, fracRes: 0.3560, norm(attn): 0.2061, norm(output): 0.4746, norm(x): 0.4017, norm(y): 1.0136, norm:1.4332, tok/sec: 100594.97, flops:105.58, batch-reuse:1
@ 3086 train 4.5234 , allloss: 4.5287, dt: 1315.26ms, fracRes: 0.3556, norm(attn): 0.2070, norm(output): 0.4883, norm(x): 0.4042, norm(y): 1.0136, norm:1.6323, tok/sec: 99655.01, flops:104.59, batch-reuse:1
@ 3087 train 4.5975 , allloss: 4.5997, dt: 1317.09ms, fracRes: 0.3549, norm(attn): 0.2061, norm(output): 0.4824, norm(x): 0.4022, norm(y): 1.0136, norm:1.4436, tok/sec: 99516.48, flops:104.44, batch-reuse:1
@ 3088 train 4.5981 , allloss: 4.5998, dt: 1290.93ms, fracRes: 0.3530, norm(attn): 0.2061, norm(output): 0.4766, norm(x): 0.3991, norm(y): 1.0135, norm:1.6700, tok/sec: 101533.36, flops:106.56, batch-reuse:1
@ 3089 train 4.6062 , allloss: 4.6080, dt: 1354.22ms, fracRes: 0.3529, norm(attn): 0.2090, norm(output): 0.4727, norm(x): 0.4005, norm(y): 1.0135, norm:1.3667, tok/sec: 96788.01, flops:101.58, batch-reuse:1
@ 3090 train 4.5279 , allloss: 4.5310, dt: 1344.56ms, fracRes: 0.3531, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.4002, norm(y): 1.0136, norm:1.5587, tok/sec: 97482.94, flops:102.31, batch-reuse:1
@ 3091 train 4.7306 , allloss: 4.7329, dt: 1318.93ms, fracRes: 0.3531, norm(attn): 0.2051, norm(output): 0.4785, norm(x): 0.4034, norm(y): 1.0136, norm:1.4580, tok/sec: 99377.19, flops:104.30, batch-reuse:1
@ 3092 train 4.5870 , allloss: 4.5898, dt: 1294.51ms, fracRes: 0.3541, norm(attn): 0.2100, norm(output): 0.4785, norm(x): 0.4015, norm(y): 1.0136, norm:1.4987, tok/sec: 101252.31, flops:106.27, batch-reuse:1
@ 3093 train 4.6109 , allloss: 4.6122, dt: 1312.31ms, fracRes: 0.3548, norm(attn): 0.2090, norm(output): 0.4844, norm(x): 0.4026, norm(y): 1.0135, norm:1.3656, tok/sec: 99878.77, flops:104.82, batch-reuse:1
@ 3094 train 4.5809 , allloss: 4.5825, dt: 1280.80ms, fracRes: 0.3557, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.4006, norm(y): 1.0137, norm:1.5286, tok/sec: 102336.20, flops:107.40, batch-reuse:1
@ 3095 train 4.5995 , allloss: 4.6012, dt: 1282.69ms, fracRes: 0.3562, norm(attn): 0.2041, norm(output): 0.4766, norm(x): 0.3985, norm(y): 1.0136, norm:1.4594, tok/sec: 102185.25, flops:107.25, batch-reuse:1
@ 3096 train 4.6764 , allloss: 4.6778, dt: 1287.71ms, fracRes: 0.3547, norm(attn): 0.2061, norm(output): 0.4883, norm(x): 0.4040, norm(y): 1.0135, norm:1.6508, tok/sec: 101787.16, flops:106.83, batch-reuse:1
@ 3097 train 4.6227 , allloss: 4.6247, dt: 1286.50ms, fracRes: 0.3535, norm(attn): 0.2100, norm(output): 0.4844, norm(x): 0.4039, norm(y): 1.0135, norm:1.6125, tok/sec: 101882.52, flops:106.93, batch-reuse:1
@ 3098 train 4.5930 , allloss: 4.5940, dt: 1290.47ms, fracRes: 0.3547, norm(attn): 0.2041, norm(output): 0.4766, norm(x): 0.3985, norm(y): 1.0137, norm:1.4612, tok/sec: 101568.96, flops:106.60, batch-reuse:1
@ 3099 train 4.6269 , allloss: 4.6303, dt: 1307.17ms, fracRes: 0.3549, norm(attn): 0.2051, norm(output): 0.4766, norm(x): 0.4001, norm(y): 1.0137, norm:1.2735, tok/sec: 100271.55, flops:105.24, batch-reuse:1
@ 3100 train 4.5069 , allloss: 4.5091, dt: 1338.38ms, fracRes: 0.3507, norm(attn): 0.2090, norm(output): 0.4805, norm(x): 0.4036, norm(y): 1.0135, norm:1.3767, tok/sec: 97932.97, flops:102.78, batch-reuse:1
@ 3101 train 4.5423 , allloss: 4.5439, dt: 1328.62ms, fracRes: 0.3506, norm(attn): 0.2080, norm(output): 0.4902, norm(x): 0.4052, norm(y): 1.0135, norm:1.5692, tok/sec: 98653.04, flops:103.54, batch-reuse:1
@ 3102 train 4.6106 , allloss: 4.6121, dt: 1285.32ms, fracRes: 0.3518, norm(attn): 0.2090, norm(output): 0.4824, norm(x): 0.4040, norm(y): 1.0135, norm:1.4184, tok/sec: 101976.35, flops:107.03, batch-reuse:1
@ 3103 train 4.6016 , allloss: 4.6045, dt: 1312.90ms, fracRes: 0.3528, norm(attn): 0.2100, norm(output): 0.4844, norm(x): 0.4035, norm(y): 1.0135, norm:1.5823, tok/sec: 99833.75, flops:104.78, batch-reuse:1
@ 3104 train 4.4822 , allloss: 4.4847, dt: 1291.38ms, fracRes: 0.3543, norm(attn): 0.2061, norm(output): 0.4883, norm(x): 0.4034, norm(y): 1.0138, norm:1.3659, tok/sec: 101497.50, flops:106.52, batch-reuse:1
@ 3105 train 4.6704 , allloss: 4.6723, dt: 1313.91ms, fracRes: 0.3553, norm(attn): 0.2031, norm(output): 0.4922, norm(x): 0.4063, norm(y): 1.0138, norm:1.6019, tok/sec: 99757.48, flops:104.70, batch-reuse:1
@ 3106 train 4.5317 , allloss: 4.5330, dt: 1314.39ms, fracRes: 0.3552, norm(attn): 0.2051, norm(output): 0.4922, norm(x): 0.4043, norm(y): 1.0136, norm:1.4756, tok/sec: 99720.48, flops:104.66, batch-reuse:1
@ 3107 train 4.5196 , allloss: 4.5221, dt: 1297.57ms, fracRes: 0.3567, norm(attn): 0.2070, norm(output): 0.4883, norm(x): 0.4032, norm(y): 1.0137, norm:1.6216, tok/sec: 101013.06, flops:106.02, batch-reuse:1
@ 3108 train 4.6064 , allloss: 4.6137, dt: 1297.68ms, fracRes: 0.3561, norm(attn): 0.2080, norm(output): 0.4922, norm(x): 0.4031, norm(y): 1.0136, norm:1.6867, tok/sec: 101004.97, flops:106.01, batch-reuse:1
@ 3109 train 4.5186 , allloss: 4.5198, dt: 1333.98ms, fracRes: 0.3578, norm(attn): 0.2061, norm(output): 0.4785, norm(x): 0.4002, norm(y): 1.0137, norm:1.8423, tok/sec: 98256.60, flops:103.12, batch-reuse:1
@ 3110 train 4.5283 , allloss: 4.5317, dt: 1285.52ms, fracRes: 0.3570, norm(attn): 0.2051, norm(output): 0.4805, norm(x): 0.4018, norm(y): 1.0137, norm:1.4096, tok/sec: 101960.04, flops:107.01, batch-reuse:1
@ 3111 train 4.6487 , allloss: 4.6520, dt: 1318.25ms, fracRes: 0.3566, norm(attn): 0.2061, norm(output): 0.4922, norm(x): 0.4050, norm(y): 1.0136, norm:1.7350, tok/sec: 99428.95, flops:104.35, batch-reuse:1
@ 3112 train 4.4843 , allloss: 4.4893, dt: 1306.85ms, fracRes: 0.3562, norm(attn): 0.2070, norm(output): 0.4883, norm(x): 0.4030, norm(y): 1.0136, norm:1.5700, tok/sec: 100296.23, flops:105.26, batch-reuse:1
@ 3113 train 4.5246 , allloss: 4.5269, dt: 1305.71ms, fracRes: 0.3551, norm(attn): 0.2061, norm(output): 0.4863, norm(x): 0.4025, norm(y): 1.0136, norm:1.4447, tok/sec: 100383.71, flops:105.35, batch-reuse:1
@ 3114 train 4.5643 , allloss: 4.5661, dt: 1314.16ms, fracRes: 0.3558, norm(attn): 0.2061, norm(output): 0.4883, norm(x): 0.4048, norm(y): 1.0136, norm:1.4977, tok/sec: 99738.12, flops:104.68, batch-reuse:1
@ 3115 train 4.5114 , allloss: 4.5193, dt: 1337.65ms, fracRes: 0.3555, norm(attn): 0.2070, norm(output): 0.4941, norm(x): 0.4063, norm(y): 1.0136, norm:1.5400, tok/sec: 97986.61, flops:102.84, batch-reuse:1
@ 3116 train 4.4956 , allloss: 4.4984, dt: 1328.90ms, fracRes: 0.3559, norm(attn): 0.2070, norm(output): 0.4941, norm(x): 0.4064, norm(y): 1.0137, norm:1.6876, tok/sec: 98632.23, flops:103.52, batch-reuse:1
@ 3117 train 4.5026 , allloss: 4.5048, dt: 1297.22ms, fracRes: 0.3568, norm(attn): 0.2080, norm(output): 0.4941, norm(x): 0.4061, norm(y): 1.0137, norm:1.3565, tok/sec: 101040.89, flops:106.04, batch-reuse:1
@ 3118 train 4.4473 , allloss: 4.4541, dt: 1295.22ms, fracRes: 0.3560, norm(attn): 0.2090, norm(output): 0.4922, norm(x): 0.4026, norm(y): 1.0137, norm:1.3974, tok/sec: 101197.09, flops:106.21, batch-reuse:1
@ 3119 train 4.7583 , allloss: 4.7651, dt: 1266.32ms, fracRes: 0.3588, norm(attn): 0.2070, norm(output): 0.4863, norm(x): 0.4033, norm(y): 1.0136, norm:1.5307, tok/sec: 103506.52, flops:108.63, batch-reuse:1
@ 3120 train 4.5532 , allloss: 4.5545, dt: 1291.75ms, fracRes: 0.3573, norm(attn): 0.2051, norm(output): 0.4922, norm(x): 0.4034, norm(y): 1.0136, norm:1.5750, tok/sec: 101468.22, flops:106.49, batch-reuse:1
@ 3121 train 4.3207 , allloss: 4.3249, dt: 1301.47ms, fracRes: 0.3586, norm(attn): 0.2070, norm(output): 0.4922, norm(x): 0.4044, norm(y): 1.0136, norm:1.8331, tok/sec: 100710.53, flops:105.70, batch-reuse:1
@ 3122 train 4.4714 , allloss: 4.4728, dt: 1298.46ms, fracRes: 0.3560, norm(attn): 0.2070, norm(output): 0.4922, norm(x): 0.4049, norm(y): 1.0136, norm:1.5842, tok/sec: 100944.29, flops:105.94, batch-reuse:1
@ 3123 train 4.6522 , allloss: 4.6539, dt: 1275.76ms, fracRes: 0.3573, norm(attn): 0.2070, norm(output): 0.4824, norm(x): 0.4043, norm(y): 1.0137, norm:1.5322, tok/sec: 102740.22, flops:107.83, batch-reuse:1
@ 3124 train 4.6255 , allloss: 4.6283, dt: 1295.01ms, fracRes: 0.3552, norm(attn): 0.2100, norm(output): 0.4883, norm(x): 0.4040, norm(y): 1.0137, norm:1.5520, tok/sec: 101213.13, flops:106.23, batch-reuse:1
@ 3125 train 4.5575 , allloss: 4.5586, dt: 1314.96ms, fracRes: 0.3533, norm(attn): 0.2100, norm(output): 0.4922, norm(x): 0.4049, norm(y): 1.0136, norm:1.2843, tok/sec: 99677.61, flops:104.61, batch-reuse:1
@ 3126 train 4.3855 , allloss: 4.3874, dt: 1338.88ms, fracRes: 0.3541, norm(attn): 0.2090, norm(output): 0.4922, norm(x): 0.4036, norm(y): 1.0137, norm:1.4287, tok/sec: 97896.45, flops:102.74, batch-reuse:1
@ 3127 train 4.5060 , allloss: 4.5153, dt: 1325.72ms, fracRes: 0.3539, norm(attn): 0.2070, norm(output): 0.4922, norm(x): 0.4056, norm(y): 1.0137, norm:1.6157, tok/sec: 98868.80, flops:103.76, batch-reuse:1
@ 3128 train 4.5033 , allloss: 4.5105, dt: 1303.19ms, fracRes: 0.3537, norm(attn): 0.2100, norm(output): 0.4922, norm(x): 0.4081, norm(y): 1.0136, norm:1.7047, tok/sec: 100577.48, flops:105.56, batch-reuse:1
@ 3129 train 4.3971 , allloss: 4.3995, dt: 1292.40ms, fracRes: 0.3564, norm(attn): 0.2070, norm(output): 0.4902, norm(x): 0.4033, norm(y): 1.0137, norm:2.0143, tok/sec: 101417.32, flops:106.44, batch-reuse:1
@ 3130 train 4.5057 , allloss: 4.5090, dt: 1281.61ms, fracRes: 0.3541, norm(attn): 0.2061, norm(output): 0.4961, norm(x): 0.4081, norm(y): 1.0137, norm:1.6975, tok/sec: 102271.74, flops:107.34, batch-reuse:1
@ 3131 train 4.3952 , allloss: 4.3968, dt: 1291.90ms, fracRes: 0.3513, norm(attn): 0.2100, norm(output): 0.4961, norm(x): 0.4116, norm(y): 1.0136, norm:1.9690, tok/sec: 101456.96, flops:106.48, batch-reuse:1
@ 3132 train 4.4258 , allloss: 4.4280, dt: 1304.07ms, fracRes: 0.3530, norm(attn): 0.2051, norm(output): 0.4980, norm(x): 0.4104, norm(y): 1.0137, norm:1.5150, tok/sec: 100509.91, flops:105.49, batch-reuse:1
@ 3133 train 4.4453 , allloss: 4.4487, dt: 1303.51ms, fracRes: 0.3523, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4127, norm(y): 1.0137, norm:1.8138, tok/sec: 100553.18, flops:105.53, batch-reuse:1
@ 3134 train 4.4309 , allloss: 4.4369, dt: 1333.67ms, fracRes: 0.3524, norm(attn): 0.2090, norm(output): 0.4961, norm(x): 0.4115, norm(y): 1.0136, norm:1.4044, tok/sec: 98278.96, flops:103.15, batch-reuse:1
@ 3135 train 4.4502 , allloss: 4.4539, dt: 1340.42ms, fracRes: 0.3558, norm(attn): 0.2041, norm(output): 0.4941, norm(x): 0.4100, norm(y): 1.0138, norm:1.9327, tok/sec: 97784.43, flops:102.63, batch-reuse:1
@ 3136 train 4.4295 , allloss: 4.4326, dt: 1286.06ms, fracRes: 0.3566, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4108, norm(y): 1.0138, norm:1.6786, tok/sec: 101917.38, flops:106.96, batch-reuse:1
@ 3137 train 4.5043 , allloss: 4.5070, dt: 1315.53ms, fracRes: 0.3553, norm(attn): 0.2041, norm(output): 0.5000, norm(x): 0.4124, norm(y): 1.0137, norm:1.7799, tok/sec: 99634.49, flops:104.57, batch-reuse:1
@ 3138 train 4.5504 , allloss: 4.5534, dt: 1288.99ms, fracRes: 0.3564, norm(attn): 0.2031, norm(output): 0.4961, norm(x): 0.4090, norm(y): 1.0137, norm:1.4404, tok/sec: 101685.44, flops:106.72, batch-reuse:1
@ 3139 train 4.4615 , allloss: 4.4660, dt: 1300.61ms, fracRes: 0.3560, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4089, norm(y): 1.0137, norm:1.4121, tok/sec: 100777.01, flops:105.77, batch-reuse:1
@ 3140 train 4.4938 , allloss: 4.5000, dt: 1281.29ms, fracRes: 0.3570, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4091, norm(y): 1.0138, norm:1.5669, tok/sec: 102296.92, flops:107.36, batch-reuse:1
@ 3141 train 4.5171 , allloss: 4.5215, dt: 1298.69ms, fracRes: 0.3567, norm(attn): 0.2051, norm(output): 0.4941, norm(x): 0.4080, norm(y): 1.0138, norm:1.5068, tok/sec: 100926.46, flops:105.92, batch-reuse:1
@ 3142 train 4.4220 , allloss: 4.4242, dt: 1296.95ms, fracRes: 0.3554, norm(attn): 0.2061, norm(output): 0.4941, norm(x): 0.4086, norm(y): 1.0138, norm:1.6761, tok/sec: 101061.79, flops:106.07, batch-reuse:1
@ 3143 train 4.7790 , allloss: 4.7802, dt: 1308.37ms, fracRes: 0.3570, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4157, norm(y): 1.0137, norm:2.2460, tok/sec: 100179.28, flops:105.14, batch-reuse:1
@ 3144 train 4.5129 , allloss: 4.5152, dt: 1287.22ms, fracRes: 0.3553, norm(attn): 0.2080, norm(output): 0.4902, norm(x): 0.4078, norm(y): 1.0137, norm:1.9875, tok/sec: 101825.47, flops:106.87, batch-reuse:1
@ 3145 train 4.4688 , allloss: 4.4715, dt: 1313.65ms, fracRes: 0.3550, norm(attn): 0.2109, norm(output): 0.4941, norm(x): 0.4094, norm(y): 1.0136, norm:1.4196, tok/sec: 99777.09, flops:104.72, batch-reuse:1
@ 3146 train 4.4484 , allloss: 4.4610, dt: 1316.01ms, fracRes: 0.3549, norm(attn): 0.2061, norm(output): 0.4961, norm(x): 0.4096, norm(y): 1.0137, norm:1.6342, tok/sec: 99598.28, flops:104.53, batch-reuse:1
@ 3147 train 4.4315 , allloss: 4.4349, dt: 1290.84ms, fracRes: 0.3564, norm(attn): 0.2061, norm(output): 0.4980, norm(x): 0.4098, norm(y): 1.0138, norm:1.6388, tok/sec: 101540.09, flops:106.57, batch-reuse:1
@ 3148 train 4.5042 , allloss: 4.5053, dt: 1285.02ms, fracRes: 0.3582, norm(attn): 0.2061, norm(output): 0.4922, norm(x): 0.4060, norm(y): 1.0138, norm:1.9203, tok/sec: 102000.30, flops:107.05, batch-reuse:1
@ 3149 train 4.5377 , allloss: 4.5392, dt: 1282.40ms, fracRes: 0.3575, norm(attn): 0.2061, norm(output): 0.4922, norm(x): 0.4058, norm(y): 1.0137, norm:1.5013, tok/sec: 102208.73, flops:107.27, batch-reuse:1
@ 3150 train 4.5093 , allloss: 4.5146, dt: 1337.55ms, fracRes: 0.3566, norm(attn): 0.2100, norm(output): 0.4941, norm(x): 0.4093, norm(y): 1.0136, norm:1.6782, tok/sec: 97993.75, flops:102.85, batch-reuse:1
@ 3151 train 4.4804 , allloss: 4.4822, dt: 1325.97ms, fracRes: 0.3576, norm(attn): 0.2041, norm(output): 0.4961, norm(x): 0.4083, norm(y): 1.0138, norm:1.4646, tok/sec: 98849.92, flops:103.74, batch-reuse:1
@ 3152 train 4.4892 , allloss: 4.4934, dt: 1298.65ms, fracRes: 0.3575, norm(attn): 0.2031, norm(output): 0.4941, norm(x): 0.4064, norm(y): 1.0139, norm:1.6790, tok/sec: 100929.22, flops:105.93, batch-reuse:1
@ 3153 train 4.4744 , allloss: 4.4755, dt: 1298.09ms, fracRes: 0.3543, norm(attn): 0.2041, norm(output): 0.4961, norm(x): 0.4089, norm(y): 1.0138, norm:1.5325, tok/sec: 100973.25, flops:105.97, batch-reuse:1
@ 3154 train 4.5352 , allloss: 4.5369, dt: 1301.31ms, fracRes: 0.3543, norm(attn): 0.2090, norm(output): 0.4961, norm(x): 0.4090, norm(y): 1.0138, norm:1.7826, tok/sec: 100723.19, flops:105.71, batch-reuse:1
@ 3155 train 4.4027 , allloss: 4.4047, dt: 1311.50ms, fracRes: 0.3540, norm(attn): 0.2080, norm(output): 0.4961, norm(x): 0.4079, norm(y): 1.0138, norm:1.5666, tok/sec: 99940.61, flops:104.89, batch-reuse:1
@ 3156 train 4.4573 , allloss: 4.4588, dt: 1316.70ms, fracRes: 0.3531, norm(attn): 0.2100, norm(output): 0.4961, norm(x): 0.4098, norm(y): 1.0136, norm:1.4437, tok/sec: 99545.93, flops:104.48, batch-reuse:1
@ 3157 train 4.5317 , allloss: 4.5345, dt: 1348.45ms, fracRes: 0.3550, norm(attn): 0.2070, norm(output): 0.4941, norm(x): 0.4104, norm(y): 1.0136, norm:1.2411, tok/sec: 97202.29, flops:102.02, batch-reuse:1
@ 3158 train 4.4632 , allloss: 4.4649, dt: 1318.71ms, fracRes: 0.3565, norm(attn): 0.2041, norm(output): 0.4961, norm(x): 0.4074, norm(y): 1.0138, norm:1.4084, tok/sec: 99394.17, flops:104.32, batch-reuse:1
@ 3159 train 4.4053 , allloss: 4.4074, dt: 1320.68ms, fracRes: 0.3582, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4092, norm(y): 1.0138, norm:1.4572, tok/sec: 99246.21, flops:104.16, batch-reuse:1
@ 3160 train 4.6690 , allloss: 4.6710, dt: 1288.56ms, fracRes: 0.3588, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4115, norm(y): 1.0138, norm:1.4314, tok/sec: 101719.53, flops:106.76, batch-reuse:1
@ 3161 train 4.6192 , allloss: 4.6216, dt: 1313.94ms, fracRes: 0.3585, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4113, norm(y): 1.0137, norm:1.4374, tok/sec: 99754.77, flops:104.69, batch-reuse:1
@ 3162 train 4.5292 , allloss: 4.5322, dt: 1298.25ms, fracRes: 0.3556, norm(attn): 0.2109, norm(output): 0.4961, norm(x): 0.4112, norm(y): 1.0136, norm:1.6130, tok/sec: 100960.84, flops:105.96, batch-reuse:1
@ 3163 train 4.6662 , allloss: 4.6686, dt: 1338.45ms, fracRes: 0.3562, norm(attn): 0.2109, norm(output): 0.4961, norm(x): 0.4132, norm(y): 1.0136, norm:1.3869, tok/sec: 97928.40, flops:102.78, batch-reuse:1
@ 3164 train 4.6088 , allloss: 4.6142, dt: 1315.47ms, fracRes: 0.3589, norm(attn): 0.2080, norm(output): 0.4961, norm(x): 0.4104, norm(y): 1.0138, norm:1.6336, tok/sec: 99638.91, flops:104.57, batch-reuse:1
@ 3165 train 4.5752 , allloss: 4.5808, dt: 1312.97ms, fracRes: 0.3567, norm(attn): 0.2109, norm(output): 0.4980, norm(x): 0.4135, norm(y): 1.0138, norm:1.7236, tok/sec: 99828.29, flops:104.77, batch-reuse:1
@ 3166 train 4.7171 , allloss: 4.7220, dt: 1283.64ms, fracRes: 0.3560, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4129, norm(y): 1.0138, norm:1.5205, tok/sec: 102109.25, flops:107.17, batch-reuse:1
@ 3167 train 4.5581 , allloss: 4.5626, dt: 1301.78ms, fracRes: 0.3573, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4121, norm(y): 1.0138, norm:1.8310, tok/sec: 100686.40, flops:105.67, batch-reuse:1
@ 3168 train 4.6141 , allloss: 4.6168, dt: 1294.58ms, fracRes: 0.3573, norm(attn): 0.2061, norm(output): 0.4961, norm(x): 0.4101, norm(y): 1.0138, norm:1.5186, tok/sec: 101246.85, flops:106.26, batch-reuse:1
@ 3169 train 4.6650 , allloss: 4.6685, dt: 1291.81ms, fracRes: 0.3570, norm(attn): 0.2109, norm(output): 0.4980, norm(x): 0.4123, norm(y): 1.0137, norm:1.7016, tok/sec: 101463.70, flops:106.49, batch-reuse:1
@ 3170 train 4.6187 , allloss: 4.6206, dt: 1282.24ms, fracRes: 0.3567, norm(attn): 0.2148, norm(output): 0.4961, norm(x): 0.4096, norm(y): 1.0136, norm:1.3760, tok/sec: 102220.89, flops:107.28, batch-reuse:1
@ 3171 train 4.6312 , allloss: 4.6348, dt: 1311.65ms, fracRes: 0.3573, norm(attn): 0.2100, norm(output): 0.4980, norm(x): 0.4105, norm(y): 1.0137, norm:1.3168, tok/sec: 99928.95, flops:104.88, batch-reuse:1
@ 3172 train 4.6163 , allloss: 4.6197, dt: 1273.09ms, fracRes: 0.3574, norm(attn): 0.2090, norm(output): 0.4980, norm(x): 0.4133, norm(y): 1.0138, norm:1.4209, tok/sec: 102955.46, flops:108.05, batch-reuse:1
@ 3173 train 4.6112 , allloss: 4.6125, dt: 1294.06ms, fracRes: 0.3570, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4118, norm(y): 1.0139, norm:1.4658, tok/sec: 101287.40, flops:106.30, batch-reuse:1
@ 3174 train 4.6439 , allloss: 4.6450, dt: 1283.50ms, fracRes: 0.3562, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4116, norm(y): 1.0138, norm:1.3348, tok/sec: 102120.62, flops:107.18, batch-reuse:1
@ 3175 train 4.6426 , allloss: 4.6455, dt: 1277.02ms, fracRes: 0.3573, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4125, norm(y): 1.0137, norm:1.3503, tok/sec: 102638.73, flops:107.72, batch-reuse:1
@ 3176 train 4.6191 , allloss: 4.6222, dt: 1316.70ms, fracRes: 0.3580, norm(attn): 0.2061, norm(output): 0.4941, norm(x): 0.4107, norm(y): 1.0137, norm:1.4803, tok/sec: 99545.84, flops:104.48, batch-reuse:1
@ 3177 train 4.5451 , allloss: 4.5475, dt: 1289.58ms, fracRes: 0.3574, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4121, norm(y): 1.0136, norm:1.2422, tok/sec: 101639.45, flops:106.67, batch-reuse:1
@ 3178 train 4.7286 , allloss: 4.7350, dt: 1283.55ms, fracRes: 0.3577, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4134, norm(y): 1.0137, norm:1.4718, tok/sec: 102116.76, flops:107.17, batch-reuse:1
@ 3179 train 4.5660 , allloss: 4.5706, dt: 1287.33ms, fracRes: 0.3585, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4116, norm(y): 1.0138, norm:1.5029, tok/sec: 101817.13, flops:106.86, batch-reuse:1
@ 3180 train 4.6269 , allloss: 4.6281, dt: 1291.65ms, fracRes: 0.3596, norm(attn): 0.2061, norm(output): 0.4980, norm(x): 0.4121, norm(y): 1.0138, norm:1.2897, tok/sec: 101476.80, flops:106.50, batch-reuse:1
@ 3181 train 4.6464 , allloss: 4.6499, dt: 1321.55ms, fracRes: 0.3588, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4118, norm(y): 1.0137, norm:1.5983, tok/sec: 99180.64, flops:104.09, batch-reuse:1
@ 3182 train 4.5675 , allloss: 4.5737, dt: 1287.74ms, fracRes: 0.3621, norm(attn): 0.2119, norm(output): 0.5000, norm(x): 0.4170, norm(y): 1.0137, norm:2.5033, tok/sec: 101784.69, flops:106.82, batch-reuse:1
@ 3183 train 4.6800 , allloss: 4.6817, dt: 1310.77ms, fracRes: 0.3592, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4126, norm(y): 1.0137, norm:1.8395, tok/sec: 99996.51, flops:104.95, batch-reuse:1
@ 3184 train 4.7107 , allloss: 4.7132, dt: 1302.46ms, fracRes: 0.3592, norm(attn): 0.2070, norm(output): 0.4980, norm(x): 0.4121, norm(y): 1.0138, norm:1.5601, tok/sec: 100634.02, flops:105.62, batch-reuse:1
@ 3185 train 4.7485 , allloss: 4.7499, dt: 1302.41ms, fracRes: 0.3572, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4130, norm(y): 1.0138, norm:1.6489, tok/sec: 100638.24, flops:105.62, batch-reuse:1
@ 3186 train 4.6723 , allloss: 4.6735, dt: 1308.10ms, fracRes: 0.3572, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4121, norm(y): 1.0139, norm:1.5227, tok/sec: 100200.38, flops:105.16, batch-reuse:1
@ 3187 train 4.6065 , allloss: 4.6075, dt: 1308.35ms, fracRes: 0.3576, norm(attn): 0.2041, norm(output): 0.4980, norm(x): 0.4102, norm(y): 1.0139, norm:1.5626, tok/sec: 100180.86, flops:105.14, batch-reuse:1
@ 3188 train 4.5406 , allloss: 4.5419, dt: 1307.38ms, fracRes: 0.3568, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4126, norm(y): 1.0138, norm:1.6806, tok/sec: 100255.27, flops:105.22, batch-reuse:1
@ 3189 train 4.5833 , allloss: 4.5851, dt: 1286.46ms, fracRes: 0.3558, norm(attn): 0.2090, norm(output): 0.4980, norm(x): 0.4134, norm(y): 1.0137, norm:1.4269, tok/sec: 101886.01, flops:106.93, batch-reuse:1
@ 3190 train 4.6417 , allloss: 4.6428, dt: 1274.98ms, fracRes: 0.3569, norm(attn): 0.2070, norm(output): 0.4961, norm(x): 0.4106, norm(y): 1.0137, norm:1.7520, tok/sec: 102803.58, flops:107.89, batch-reuse:1
@ 3191 train 4.5514 , allloss: 4.5536, dt: 1310.59ms, fracRes: 0.3571, norm(attn): 0.2061, norm(output): 0.4980, norm(x): 0.4101, norm(y): 1.0139, norm:1.3978, tok/sec: 100010.12, flops:104.96, batch-reuse:1
@ 3192 train 4.5889 , allloss: 4.5912, dt: 1320.77ms, fracRes: 0.3551, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4137, norm(y): 1.0138, norm:1.5449, tok/sec: 99238.79, flops:104.15, batch-reuse:1
@ 3193 train 4.6046 , allloss: 4.6089, dt: 1308.58ms, fracRes: 0.3545, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4144, norm(y): 1.0137, norm:1.4236, tok/sec: 100163.83, flops:105.12, batch-reuse:1
@ 3194 train 4.6016 , allloss: 4.6034, dt: 1305.19ms, fracRes: 0.3544, norm(attn): 0.2100, norm(output): 0.4980, norm(x): 0.4116, norm(y): 1.0137, norm:1.3162, tok/sec: 100424.02, flops:105.40, batch-reuse:1
@ 3195 train 4.6007 , allloss: 4.6022, dt: 1311.15ms, fracRes: 0.3549, norm(attn): 0.2119, norm(output): 0.4980, norm(x): 0.4147, norm(y): 1.0137, norm:1.4735, tok/sec: 99966.87, flops:104.92, batch-reuse:1
@ 3196 train 4.6321 , allloss: 4.6334, dt: 1310.69ms, fracRes: 0.3554, norm(attn): 0.2119, norm(output): 0.4980, norm(x): 0.4125, norm(y): 1.0138, norm:1.5450, tok/sec: 100001.93, flops:104.95, batch-reuse:1
@ 3197 train 4.5983 , allloss: 4.6000, dt: 1293.21ms, fracRes: 0.3558, norm(attn): 0.2090, norm(output): 0.4980, norm(x): 0.4136, norm(y): 1.0137, norm:1.5271, tok/sec: 101353.73, flops:106.37, batch-reuse:1
@ 3198 train 4.5424 , allloss: 4.5437, dt: 1308.18ms, fracRes: 0.3566, norm(attn): 0.2119, norm(output): 0.4980, norm(x): 0.4130, norm(y): 1.0138, norm:1.3347, tok/sec: 100194.06, flops:105.16, batch-reuse:1
@ 3199 train 4.5832 , allloss: 4.5847, dt: 1285.28ms, fracRes: 0.3577, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4130, norm(y): 1.0138, norm:1.5370, tok/sec: 101979.70, flops:107.03, batch-reuse:1
@ 3200 train 4.5916 , allloss: 4.5935, dt: 1284.78ms, fracRes: 0.3584, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4165, norm(y): 1.0139, norm:1.8830, tok/sec: 102018.66, flops:107.07, batch-reuse:1
@ 3201 train 4.6114 , allloss: 4.6130, dt: 1313.60ms, fracRes: 0.3568, norm(attn): 0.2080, norm(output): 0.5000, norm(x): 0.4159, norm(y): 1.0138, norm:1.5494, tok/sec: 99780.68, flops:104.72, batch-reuse:1
@ 3202 train 4.6181 , allloss: 4.6204, dt: 1297.20ms, fracRes: 0.3549, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4167, norm(y): 1.0136, norm:1.7673, tok/sec: 101042.12, flops:106.05, batch-reuse:1
@ 3203 train 4.6706 , allloss: 4.6745, dt: 1279.21ms, fracRes: 0.3558, norm(attn): 0.2080, norm(output): 0.4980, norm(x): 0.4142, norm(y): 1.0137, norm:1.4239, tok/sec: 102463.48, flops:107.54, batch-reuse:1
@ 3204 train 4.5701 , allloss: 4.5713, dt: 1306.31ms, fracRes: 0.3550, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4114, norm(y): 1.0138, norm:1.6366, tok/sec: 100337.21, flops:105.31, batch-reuse:1
@ 3205 train 4.5689 , allloss: 4.5704, dt: 1313.54ms, fracRes: 0.3545, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4153, norm(y): 1.0137, norm:1.6036, tok/sec: 99785.30, flops:104.73, batch-reuse:1
@ 3206 train 4.4696 , allloss: 4.4705, dt: 1310.59ms, fracRes: 0.3543, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4175, norm(y): 1.0138, norm:1.5398, tok/sec: 100009.95, flops:104.96, batch-reuse:1
@ 3207 train 4.6512 , allloss: 4.6537, dt: 1288.01ms, fracRes: 0.3564, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4144, norm(y): 1.0138, norm:1.4139, tok/sec: 101762.84, flops:106.80, batch-reuse:1
@ 3208 train 4.6299 , allloss: 4.6328, dt: 1305.78ms, fracRes: 0.3591, norm(attn): 0.2090, norm(output): 0.4980, norm(x): 0.4134, norm(y): 1.0138, norm:1.4662, tok/sec: 100378.19, flops:105.35, batch-reuse:1
@ 3209 train 4.5936 , allloss: 4.6031, dt: 1310.35ms, fracRes: 0.3592, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4117, norm(y): 1.0138, norm:1.5688, tok/sec: 100028.55, flops:104.98, batch-reuse:1
@ 3210 train 4.5674 , allloss: 4.5687, dt: 1308.58ms, fracRes: 0.3571, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4172, norm(y): 1.0137, norm:1.4731, tok/sec: 100163.54, flops:105.12, batch-reuse:1
@ 3211 train 4.6077 , allloss: 4.6086, dt: 1287.66ms, fracRes: 0.3581, norm(attn): 0.2061, norm(output): 0.5000, norm(x): 0.4144, norm(y): 1.0138, norm:1.4474, tok/sec: 101790.95, flops:106.83, batch-reuse:1
@ 3212 train 4.7528 , allloss: 4.7539, dt: 1309.87ms, fracRes: 0.3582, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4179, norm(y): 1.0137, norm:1.6521, tok/sec: 100064.93, flops:105.02, batch-reuse:1
@ 3213 train 4.6024 , allloss: 4.6044, dt: 1328.98ms, fracRes: 0.3573, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4158, norm(y): 1.0137, norm:1.4448, tok/sec: 98626.03, flops:103.51, batch-reuse:1
@ 3214 train 4.6882 , allloss: 4.6908, dt: 1340.48ms, fracRes: 0.3566, norm(attn): 0.2109, norm(output): 0.4980, norm(x): 0.4146, norm(y): 1.0138, norm:1.5563, tok/sec: 97779.75, flops:102.62, batch-reuse:1
@ 3215 train 4.5683 , allloss: 4.5697, dt: 1349.48ms, fracRes: 0.3557, norm(attn): 0.2148, norm(output): 0.4980, norm(x): 0.4164, norm(y): 1.0137, norm:1.5782, tok/sec: 97127.57, flops:101.94, batch-reuse:1
@ 3216 train 4.5856 , allloss: 4.5876, dt: 1312.70ms, fracRes: 0.3565, norm(attn): 0.2100, norm(output): 0.4980, norm(x): 0.4130, norm(y): 1.0138, norm:1.3886, tok/sec: 99849.13, flops:104.79, batch-reuse:1
@ 3217 train 4.5773 , allloss: 4.5790, dt: 1333.15ms, fracRes: 0.3566, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4150, norm(y): 1.0137, norm:1.5008, tok/sec: 98317.60, flops:103.19, batch-reuse:1
@ 3218 train 4.6493 , allloss: 4.6510, dt: 1335.59ms, fracRes: 0.3562, norm(attn): 0.2129, norm(output): 0.4980, norm(x): 0.4139, norm(y): 1.0137, norm:1.4393, tok/sec: 98137.84, flops:103.00, batch-reuse:1
@ 3219 train 4.6612 , allloss: 4.6655, dt: 1292.14ms, fracRes: 0.3563, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4162, norm(y): 1.0137, norm:1.3660, tok/sec: 101437.76, flops:106.46, batch-reuse:1
@ 3220 train 4.6124 , allloss: 4.6134, dt: 1282.36ms, fracRes: 0.3572, norm(attn): 0.2119, norm(output): 0.5000, norm(x): 0.4156, norm(y): 1.0138, norm:1.5198, tok/sec: 102211.43, flops:107.27, batch-reuse:1
@ 3221 train 4.5430 , allloss: 4.5449, dt: 1300.36ms, fracRes: 0.3567, norm(attn): 0.2100, norm(output): 0.4980, norm(x): 0.4111, norm(y): 1.0139, norm:1.5100, tok/sec: 100796.95, flops:105.79, batch-reuse:1
@ 3222 train 4.5884 , allloss: 4.5913, dt: 1313.31ms, fracRes: 0.3549, norm(attn): 0.2148, norm(output): 0.5000, norm(x): 0.4168, norm(y): 1.0137, norm:1.5149, tok/sec: 99802.52, flops:104.74, batch-reuse:1
@ 3223 train 4.5976 , allloss: 4.6023, dt: 1317.39ms, fracRes: 0.3558, norm(attn): 0.2119, norm(output): 0.5000, norm(x): 0.4130, norm(y): 1.0138, norm:1.5581, tok/sec: 99493.73, flops:104.42, batch-reuse:1
@ 3224 train 4.6170 , allloss: 4.6190, dt: 1324.54ms, fracRes: 0.3560, norm(attn): 0.2119, norm(output): 0.5000, norm(x): 0.4141, norm(y): 1.0138, norm:1.4802, tok/sec: 98956.77, flops:103.86, batch-reuse:1
@ 3225 train 4.6335 , allloss: 4.6356, dt: 1318.86ms, fracRes: 0.3557, norm(attn): 0.2119, norm(output): 0.5000, norm(x): 0.4138, norm(y): 1.0138, norm:1.5504, tok/sec: 99382.51, flops:104.30, batch-reuse:1
@ 3226 train 4.5634 , allloss: 4.5647, dt: 1336.54ms, fracRes: 0.3543, norm(attn): 0.2139, norm(output): 0.5000, norm(x): 0.4154, norm(y): 1.0137, norm:1.6081, tok/sec: 98067.97, flops:102.92, batch-reuse:1
@ 3227 train 4.5388 , allloss: 4.5405, dt: 1314.71ms, fracRes: 0.3555, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4161, norm(y): 1.0137, norm:1.4892, tok/sec: 99696.70, flops:104.63, batch-reuse:1
@ 3228 train 4.4962 , allloss: 4.4973, dt: 1334.27ms, fracRes: 0.3571, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4160, norm(y): 1.0138, norm:1.4246, tok/sec: 98235.18, flops:103.10, batch-reuse:1
@ 3229 train 4.6381 , allloss: 4.6397, dt: 1338.74ms, fracRes: 0.3566, norm(attn): 0.2148, norm(output): 0.5000, norm(x): 0.4160, norm(y): 1.0136, norm:1.5845, tok/sec: 97907.05, flops:102.76, batch-reuse:1
@ 3230 train 4.7382 , allloss: 4.7398, dt: 1311.87ms, fracRes: 0.3583, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4171, norm(y): 1.0138, norm:1.6824, tok/sec: 99912.28, flops:104.86, batch-reuse:1
@ 3231 train 4.5156 , allloss: 4.5169, dt: 1302.78ms, fracRes: 0.3581, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4162, norm(y): 1.0137, norm:1.5121, tok/sec: 100609.38, flops:105.59, batch-reuse:1
@ 3232 train 4.5624 , allloss: 4.5665, dt: 1280.44ms, fracRes: 0.3583, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4164, norm(y): 1.0137, norm:1.6218, tok/sec: 102364.58, flops:107.43, batch-reuse:1
@ 3233 train 4.5778 , allloss: 4.5793, dt: 1295.35ms, fracRes: 0.3605, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4161, norm(y): 1.0139, norm:1.3675, tok/sec: 101186.27, flops:106.20, batch-reuse:1
@ 3234 train 4.7264 , allloss: 4.7278, dt: 1291.50ms, fracRes: 0.3616, norm(attn): 0.2070, norm(output): 0.5039, norm(x): 0.4165, norm(y): 1.0139, norm:1.9180, tok/sec: 101488.37, flops:106.51, batch-reuse:1
@ 3235 train 4.5927 , allloss: 4.5965, dt: 1317.18ms, fracRes: 0.3600, norm(attn): 0.2090, norm(output): 0.5000, norm(x): 0.4166, norm(y): 1.0137, norm:1.8506, tok/sec: 99509.44, flops:104.44, batch-reuse:1
@ 3236 train 4.6563 , allloss: 4.6598, dt: 1291.28ms, fracRes: 0.3560, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4190, norm(y): 1.0136, norm:1.4811, tok/sec: 101505.52, flops:106.53, batch-reuse:1
@ 3237 train 4.5645 , allloss: 4.5659, dt: 1309.85ms, fracRes: 0.3577, norm(attn): 0.2051, norm(output): 0.5039, norm(x): 0.4181, norm(y): 1.0138, norm:1.8540, tok/sec: 100066.77, flops:105.02, batch-reuse:1
@ 3238 train 4.6043 , allloss: 4.6059, dt: 1327.06ms, fracRes: 0.3582, norm(attn): 0.2051, norm(output): 0.5039, norm(x): 0.4176, norm(y): 1.0140, norm:1.8018, tok/sec: 98768.92, flops:103.66, batch-reuse:1
@ 3239 train 4.5954 , allloss: 4.5982, dt: 1306.91ms, fracRes: 0.3589, norm(attn): 0.2051, norm(output): 0.5039, norm(x): 0.4199, norm(y): 1.0139, norm:1.8060, tok/sec: 100291.69, flops:105.26, batch-reuse:1
@ 3240 train 4.6613 , allloss: 4.6660, dt: 1305.71ms, fracRes: 0.3567, norm(attn): 0.2080, norm(output): 0.5039, norm(x): 0.4227, norm(y): 1.0137, norm:1.9435, tok/sec: 100384.04, flops:105.35, batch-reuse:1
@ 3241 train 4.6178 , allloss: 4.6209, dt: 1282.01ms, fracRes: 0.3578, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4184, norm(y): 1.0138, norm:1.6259, tok/sec: 102239.14, flops:107.30, batch-reuse:1
@ 3242 train 4.5898 , allloss: 4.5933, dt: 1276.76ms, fracRes: 0.3599, norm(attn): 0.2061, norm(output): 0.5039, norm(x): 0.4173, norm(y): 1.0140, norm:1.4769, tok/sec: 102660.18, flops:107.74, batch-reuse:1
@ 3243 train 4.5389 , allloss: 4.5416, dt: 1294.82ms, fracRes: 0.3593, norm(attn): 0.2080, norm(output): 0.5039, norm(x): 0.4192, norm(y): 1.0139, norm:1.7132, tok/sec: 101227.96, flops:106.24, batch-reuse:1
@ 3244 train 4.5455 , allloss: 4.5474, dt: 1299.03ms, fracRes: 0.3576, norm(attn): 0.2080, norm(output): 0.5000, norm(x): 0.4185, norm(y): 1.0138, norm:1.5175, tok/sec: 100899.69, flops:105.90, batch-reuse:1
@ 3245 train 4.5574 , allloss: 4.5585, dt: 1298.60ms, fracRes: 0.3588, norm(attn): 0.2090, norm(output): 0.5000, norm(x): 0.4166, norm(y): 1.0139, norm:1.4186, tok/sec: 100933.52, flops:105.93, batch-reuse:1
@ 3246 train 4.5076 , allloss: 4.5092, dt: 1345.55ms, fracRes: 0.3596, norm(attn): 0.2070, norm(output): 0.5000, norm(x): 0.4170, norm(y): 1.0140, norm:1.4704, tok/sec: 97411.72, flops:102.24, batch-reuse:1
@ 3247 train 4.5354 , allloss: 4.5370, dt: 1290.58ms, fracRes: 0.3596, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4171, norm(y): 1.0139, norm:1.3368, tok/sec: 101560.35, flops:106.59, batch-reuse:1
@ 3248 train 4.6341 , allloss: 4.6353, dt: 1316.41ms, fracRes: 0.3586, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4187, norm(y): 1.0138, norm:1.5336, tok/sec: 99568.14, flops:104.50, batch-reuse:1
@ 3249 train 4.5491 , allloss: 4.5503, dt: 1286.93ms, fracRes: 0.3590, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4180, norm(y): 1.0139, norm:1.4093, tok/sec: 101848.58, flops:106.89, batch-reuse:1
@ 3250 train 4.5045 , allloss: 4.5060, dt: 1313.59ms, fracRes: 0.3582, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4170, norm(y): 1.0140, norm:1.2190, tok/sec: 99781.57, flops:104.72, batch-reuse:1
@ 3251 train 4.5031 , allloss: 4.5041, dt: 1306.81ms, fracRes: 0.3559, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4188, norm(y): 1.0139, norm:1.4405, tok/sec: 100299.25, flops:105.27, batch-reuse:1
@ 3252 train 4.5079 , allloss: 4.5093, dt: 1300.69ms, fracRes: 0.3544, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4199, norm(y): 1.0138, norm:1.3675, tok/sec: 100770.75, flops:105.76, batch-reuse:1
@ 3253 train 4.6417 , allloss: 4.6429, dt: 1336.93ms, fracRes: 0.3562, norm(attn): 0.2139, norm(output): 0.5000, norm(x): 0.4182, norm(y): 1.0139, norm:1.6099, tok/sec: 98039.52, flops:102.89, batch-reuse:1
@ 3254 train 4.4510 , allloss: 4.4548, dt: 1339.16ms, fracRes: 0.3559, norm(attn): 0.2139, norm(output): 0.5000, norm(x): 0.4173, norm(y): 1.0139, norm:1.4290, tok/sec: 97876.32, flops:102.72, batch-reuse:1
@ 3255 train 4.5659 , allloss: 4.5681, dt: 1283.80ms, fracRes: 0.3567, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4158, norm(y): 1.0139, norm:1.4302, tok/sec: 102096.93, flops:107.15, batch-reuse:1
@ 3256 train 4.6047 , allloss: 4.6064, dt: 1311.33ms, fracRes: 0.3588, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4180, norm(y): 1.0139, norm:1.3869, tok/sec: 99953.60, flops:104.90, batch-reuse:1
@ 3257 train 4.5169 , allloss: 4.5194, dt: 1312.80ms, fracRes: 0.3591, norm(attn): 0.2100, norm(output): 0.5039, norm(x): 0.4187, norm(y): 1.0138, norm:1.4691, tok/sec: 99841.24, flops:104.79, batch-reuse:1
@ 3258 train 4.5116 , allloss: 4.5130, dt: 1299.58ms, fracRes: 0.3585, norm(attn): 0.2080, norm(output): 0.5000, norm(x): 0.4175, norm(y): 1.0138, norm:1.3437, tok/sec: 100857.49, flops:105.85, batch-reuse:1
@ 3259 train 4.5368 , allloss: 4.5377, dt: 1300.24ms, fracRes: 0.3613, norm(attn): 0.2090, norm(output): 0.5000, norm(x): 0.4166, norm(y): 1.0139, norm:1.6009, tok/sec: 100806.13, flops:105.80, batch-reuse:1
@ 3260 train 4.5396 , allloss: 4.5416, dt: 1297.89ms, fracRes: 0.3616, norm(attn): 0.2100, norm(output): 0.5000, norm(x): 0.4137, norm(y): 1.0139, norm:1.2710, tok/sec: 100988.49, flops:105.99, batch-reuse:1
@ 3261 train 4.5459 , allloss: 4.5484, dt: 1286.04ms, fracRes: 0.3611, norm(attn): 0.2148, norm(output): 0.5000, norm(x): 0.4178, norm(y): 1.0138, norm:1.5827, tok/sec: 101919.29, flops:106.97, batch-reuse:1
@ 3262 train 4.4980 , allloss: 4.4999, dt: 1286.53ms, fracRes: 0.3609, norm(attn): 0.2070, norm(output): 0.5039, norm(x): 0.4163, norm(y): 1.0140, norm:1.5789, tok/sec: 101880.29, flops:106.93, batch-reuse:1
@ 3263 train 4.4896 , allloss: 4.4917, dt: 1297.19ms, fracRes: 0.3620, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4166, norm(y): 1.0140, norm:1.3253, tok/sec: 101043.06, flops:106.05, batch-reuse:1
@ 3264 train 4.5844 , allloss: 4.5910, dt: 1290.70ms, fracRes: 0.3607, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4182, norm(y): 1.0139, norm:1.6162, tok/sec: 101551.44, flops:106.58, batch-reuse:1
@ 3265 train 4.5114 , allloss: 4.5130, dt: 1297.45ms, fracRes: 0.3586, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4171, norm(y): 1.0138, norm:1.3092, tok/sec: 101022.99, flops:106.03, batch-reuse:1
@ 3266 train 4.4677 , allloss: 4.4709, dt: 1281.02ms, fracRes: 0.3589, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4172, norm(y): 1.0139, norm:1.7294, tok/sec: 102318.49, flops:107.39, batch-reuse:1
@ 3267 train 4.4746 , allloss: 4.4774, dt: 1311.37ms, fracRes: 0.3585, norm(attn): 0.2148, norm(output): 0.5000, norm(x): 0.4155, norm(y): 1.0139, norm:1.5788, tok/sec: 99950.73, flops:104.90, batch-reuse:1
@ 3268 train 4.5053 , allloss: 4.5077, dt: 1286.94ms, fracRes: 0.3589, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4205, norm(y): 1.0139, norm:1.6924, tok/sec: 101847.71, flops:106.89, batch-reuse:1
@ 3269 train 4.5031 , allloss: 4.5058, dt: 1296.49ms, fracRes: 0.3601, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4190, norm(y): 1.0140, norm:1.3369, tok/sec: 101097.56, flops:106.10, batch-reuse:1
@ 3270 train 4.4999 , allloss: 4.5037, dt: 1297.88ms, fracRes: 0.3608, norm(attn): 0.2080, norm(output): 0.5039, norm(x): 0.4185, norm(y): 1.0140, norm:1.6817, tok/sec: 100988.98, flops:105.99, batch-reuse:1
@ 3271 train 4.4951 , allloss: 4.4967, dt: 1339.97ms, fracRes: 0.3604, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4190, norm(y): 1.0139, norm:1.3338, tok/sec: 97817.33, flops:102.66, batch-reuse:1
@ 3272 train 4.5324 , allloss: 4.5345, dt: 1321.50ms, fracRes: 0.3605, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4187, norm(y): 1.0138, norm:1.3724, tok/sec: 99184.26, flops:104.10, batch-reuse:1
@ 3273 train 4.5494 , allloss: 4.5504, dt: 1296.01ms, fracRes: 0.3599, norm(attn): 0.2080, norm(output): 0.5000, norm(x): 0.4169, norm(y): 1.0139, norm:1.4131, tok/sec: 101134.91, flops:106.14, batch-reuse:1
@ 3274 train 4.4988 , allloss: 4.5026, dt: 1272.56ms, fracRes: 0.3576, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4212, norm(y): 1.0138, norm:1.4946, tok/sec: 102998.98, flops:108.10, batch-reuse:1
@ 3275 train 4.4994 , allloss: 4.5011, dt: 1290.34ms, fracRes: 0.3576, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4192, norm(y): 1.0139, norm:1.3504, tok/sec: 101579.60, flops:106.61, batch-reuse:1
@ 3276 train 4.5231 , allloss: 4.5250, dt: 1304.36ms, fracRes: 0.3594, norm(attn): 0.2109, norm(output): 0.5000, norm(x): 0.4156, norm(y): 1.0139, norm:1.2846, tok/sec: 100487.25, flops:105.46, batch-reuse:1
@ 3277 train 4.5285 , allloss: 4.5387, dt: 1309.77ms, fracRes: 0.3594, norm(attn): 0.2139, norm(output): 0.5039, norm(x): 0.4183, norm(y): 1.0139, norm:1.3774, tok/sec: 100072.45, flops:105.03, batch-reuse:1
@ 3278 train 4.5290 , allloss: 4.5304, dt: 1305.00ms, fracRes: 0.3592, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4187, norm(y): 1.0139, norm:1.3175, tok/sec: 100438.44, flops:105.41, batch-reuse:1
@ 3279 train 4.5479 , allloss: 4.5517, dt: 1271.05ms, fracRes: 0.3605, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4201, norm(y): 1.0140, norm:1.3569, tok/sec: 103120.85, flops:108.23, batch-reuse:1
@ 3280 train 4.4973 , allloss: 4.4990, dt: 1284.81ms, fracRes: 0.3605, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4209, norm(y): 1.0140, norm:1.4459, tok/sec: 102016.26, flops:107.07, batch-reuse:1
@ 3281 train 4.5103 , allloss: 4.5121, dt: 1304.64ms, fracRes: 0.3605, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4180, norm(y): 1.0139, norm:1.5196, tok/sec: 100466.06, flops:105.44, batch-reuse:1
@ 3282 train 4.4788 , allloss: 4.4806, dt: 1295.24ms, fracRes: 0.3584, norm(attn): 0.2139, norm(output): 0.5039, norm(x): 0.4208, norm(y): 1.0138, norm:1.3459, tok/sec: 101195.41, flops:106.21, batch-reuse:1
@ 3283 train 4.5274 , allloss: 4.5289, dt: 1309.10ms, fracRes: 0.3594, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4206, norm(y): 1.0140, norm:1.3171, tok/sec: 100123.63, flops:105.08, batch-reuse:1
@ 3284 train 4.5248 , allloss: 4.5261, dt: 1329.99ms, fracRes: 0.3606, norm(attn): 0.2080, norm(output): 0.5039, norm(x): 0.4197, norm(y): 1.0140, norm:1.4636, tok/sec: 98550.86, flops:103.43, batch-reuse:1
@ 3285 train 4.4799 , allloss: 4.4809, dt: 1326.28ms, fracRes: 0.3589, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4192, norm(y): 1.0140, norm:1.6377, tok/sec: 98826.70, flops:103.72, batch-reuse:1
@ 3286 train 4.5228 , allloss: 4.5244, dt: 1295.88ms, fracRes: 0.3572, norm(attn): 0.2129, norm(output): 0.5078, norm(x): 0.4222, norm(y): 1.0138, norm:1.3197, tok/sec: 101145.40, flops:106.15, batch-reuse:1
@ 3287 train 4.4518 , allloss: 4.4555, dt: 1310.03ms, fracRes: 0.3572, norm(attn): 0.2168, norm(output): 0.5039, norm(x): 0.4193, norm(y): 1.0139, norm:1.4544, tok/sec: 100052.82, flops:105.01, batch-reuse:1
@ 3288 train 4.6793 , allloss: 4.6814, dt: 1337.21ms, fracRes: 0.3606, norm(attn): 0.2139, norm(output): 0.5000, norm(x): 0.4178, norm(y): 1.0140, norm:1.9320, tok/sec: 98019.26, flops:102.87, batch-reuse:1
@ 3289 train 4.6072 , allloss: 4.6220, dt: 1326.26ms, fracRes: 0.3599, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4208, norm(y): 1.0139, norm:1.8862, tok/sec: 98828.33, flops:103.72, batch-reuse:1
@ 3290 train 4.5949 , allloss: 4.5973, dt: 1366.21ms, fracRes: 0.3596, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4194, norm(y): 1.0139, norm:1.4965, tok/sec: 95938.10, flops:100.69, batch-reuse:1
@ 3291 train 4.4357 , allloss: 4.4382, dt: 1361.23ms, fracRes: 0.3593, norm(attn): 0.2139, norm(output): 0.5039, norm(x): 0.4171, norm(y): 1.0139, norm:1.4766, tok/sec: 96289.48, flops:101.06, batch-reuse:1
@ 3292 train 4.6491 , allloss: 4.6507, dt: 1356.18ms, fracRes: 0.3601, norm(attn): 0.2090, norm(output): 0.5039, norm(x): 0.4179, norm(y): 1.0139, norm:1.8872, tok/sec: 96647.74, flops:101.43, batch-reuse:1
@ 3293 train 4.5981 , allloss: 4.6000, dt: 1301.92ms, fracRes: 0.3609, norm(attn): 0.2100, norm(output): 0.5039, norm(x): 0.4193, norm(y): 1.0139, norm:1.4800, tok/sec: 100676.30, flops:105.66, batch-reuse:1
@ 3294 train 4.5469 , allloss: 4.5495, dt: 1308.98ms, fracRes: 0.3618, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4209, norm(y): 1.0139, norm:1.3867, tok/sec: 100133.22, flops:105.09, batch-reuse:1
@ 3295 train 4.3940 , allloss: 4.3959, dt: 1302.27ms, fracRes: 0.3618, norm(attn): 0.2129, norm(output): 0.5000, norm(x): 0.4178, norm(y): 1.0140, norm:1.3515, tok/sec: 100648.61, flops:105.63, batch-reuse:1
@ 3296 train 4.4351 , allloss: 4.4445, dt: 1303.07ms, fracRes: 0.3611, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4188, norm(y): 1.0140, norm:1.4453, tok/sec: 100587.46, flops:105.57, batch-reuse:1
@ 3297 train 4.3496 , allloss: 4.3561, dt: 1298.16ms, fracRes: 0.3590, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4200, norm(y): 1.0139, norm:1.3343, tok/sec: 100967.44, flops:105.97, batch-reuse:1
@ 3298 train 4.4413 , allloss: 4.4430, dt: 1330.73ms, fracRes: 0.3578, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4188, norm(y): 1.0139, norm:1.4560, tok/sec: 98496.21, flops:103.37, batch-reuse:1
@ 3299 train 4.3630 , allloss: 4.3650, dt: 1307.18ms, fracRes: 0.3574, norm(attn): 0.2139, norm(output): 0.5039, norm(x): 0.4213, norm(y): 1.0139, norm:1.5695, tok/sec: 100271.00, flops:105.24, batch-reuse:1
@ 3300 train 4.4097 , allloss: 4.4117, dt: 1295.48ms, fracRes: 0.3589, norm(attn): 0.2129, norm(output): 0.5039, norm(x): 0.4194, norm(y): 1.0140, norm:1.4048, tok/sec: 101176.10, flops:106.19, batch-reuse:1
@ 3301 train 4.4383 , allloss: 4.4397, dt: 1294.65ms, fracRes: 0.3592, norm(attn): 0.2139, norm(output): 0.5039, norm(x): 0.4192, norm(y): 1.0139, norm:1.4732, tok/sec: 101241.05, flops:106.25, batch-reuse:1
@ 3302 train 4.4145 , allloss: 4.4193, dt: 1284.31ms, fracRes: 0.3578, norm(attn): 0.2168, norm(output): 0.5117, norm(x): 0.4245, norm(y): 1.0138, norm:1.4819, tok/sec: 102056.16, flops:107.11, batch-reuse:1
@ 3303 train 4.3458 , allloss: 4.3487, dt: 1315.95ms, fracRes: 0.3590, norm(attn): 0.2119, norm(output): 0.5078, norm(x): 0.4199, norm(y): 1.0140, norm:1.3938, tok/sec: 99602.23, flops:104.53, batch-reuse:1
@ 3304 train 4.4699 , allloss: 4.4746, dt: 1334.51ms, fracRes: 0.3602, norm(attn): 0.2109, norm(output): 0.5078, norm(x): 0.4203, norm(y): 1.0140, norm:1.5914, tok/sec: 98217.12, flops:103.08, batch-reuse:1
@ 3305 train 4.5053 , allloss: 4.5068, dt: 1282.62ms, fracRes: 0.3591, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4198, norm(y): 1.0140, norm:1.3414, tok/sec: 102190.93, flops:107.25, batch-reuse:1
@ 3306 train 4.3632 , allloss: 4.3648, dt: 1291.29ms, fracRes: 0.3586, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4202, norm(y): 1.0139, norm:1.2375, tok/sec: 101504.79, flops:106.53, batch-reuse:1
@ 3307 train 4.3826 , allloss: 4.3841, dt: 1317.15ms, fracRes: 0.3580, norm(attn): 0.2158, norm(output): 0.5039, norm(x): 0.4213, norm(y): 1.0139, norm:1.6318, tok/sec: 99512.09, flops:104.44, batch-reuse:1
@ 3308 train 4.4637 , allloss: 4.4666, dt: 1342.16ms, fracRes: 0.3592, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4204, norm(y): 1.0140, norm:1.5706, tok/sec: 97657.18, flops:102.49, batch-reuse:1
@ 3309 train 4.4067 , allloss: 4.4099, dt: 1313.06ms, fracRes: 0.3586, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4196, norm(y): 1.0140, norm:1.5663, tok/sec: 99821.75, flops:104.76, batch-reuse:1
@ 3310 train 4.4520 , allloss: 4.4537, dt: 1290.11ms, fracRes: 0.3577, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4207, norm(y): 1.0139, norm:1.4988, tok/sec: 101597.32, flops:106.63, batch-reuse:1
@ 3311 train 4.4864 , allloss: 4.4874, dt: 1307.14ms, fracRes: 0.3595, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4203, norm(y): 1.0140, norm:2.1887, tok/sec: 100273.96, flops:105.24, batch-reuse:1
@ 3312 train 4.4145 , allloss: 4.4173, dt: 1309.38ms, fracRes: 0.3590, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4213, norm(y): 1.0140, norm:1.7517, tok/sec: 100102.46, flops:105.06, batch-reuse:1
@ 3313 train 4.4593 , allloss: 4.4612, dt: 1309.30ms, fracRes: 0.3579, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4194, norm(y): 1.0140, norm:1.5392, tok/sec: 100108.68, flops:105.07, batch-reuse:1
@ 3314 train 4.3941 , allloss: 4.3949, dt: 1305.68ms, fracRes: 0.3595, norm(attn): 0.2148, norm(output): 0.5039, norm(x): 0.4180, norm(y): 1.0140, norm:1.5460, tok/sec: 100386.17, flops:105.36, batch-reuse:1
@ 3315 train 4.5407 , allloss: 4.5426, dt: 1317.03ms, fracRes: 0.3609, norm(attn): 0.2100, norm(output): 0.5039, norm(x): 0.4205, norm(y): 1.0140, norm:1.5247, tok/sec: 99521.02, flops:104.45, batch-reuse:1
@ 3316 train 4.4580 , allloss: 4.4608, dt: 1287.13ms, fracRes: 0.3611, norm(attn): 0.2129, norm(output): 0.5117, norm(x): 0.4244, norm(y): 1.0139, norm:1.6980, tok/sec: 101833.09, flops:106.88, batch-reuse:1
@ 3317 train 4.4466 , allloss: 4.4494, dt: 1280.49ms, fracRes: 0.3612, norm(attn): 0.2090, norm(output): 0.5078, norm(x): 0.4205, norm(y): 1.0141, norm:1.3474, tok/sec: 102360.57, flops:107.43, batch-reuse:1
@ 3318 train 4.2111 , allloss: 4.2131, dt: 1286.88ms, fracRes: 0.3611, norm(attn): 0.2100, norm(output): 0.5039, norm(x): 0.4222, norm(y): 1.0140, norm:1.6543, tok/sec: 101852.84, flops:106.90, batch-reuse:1
@ 3319 train 4.5049 , allloss: 4.5061, dt: 1310.42ms, fracRes: 0.3597, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4211, norm(y): 1.0139, norm:1.4326, tok/sec: 100023.25, flops:104.98, batch-reuse:1
@ 3320 train 4.5210 , allloss: 4.5223, dt: 1317.32ms, fracRes: 0.3603, norm(attn): 0.2119, norm(output): 0.5039, norm(x): 0.4215, norm(y): 1.0139, norm:1.5432, tok/sec: 99498.83, flops:104.43, batch-reuse:1
@ 3321 train 4.4408 , allloss: 4.4421, dt: 1277.53ms, fracRes: 0.3596, norm(attn): 0.2080, norm(output): 0.5078, norm(x): 0.4220, norm(y): 1.0140, norm:1.3321, tok/sec: 102597.72, flops:107.68, batch-reuse:1
@ 3322 train 4.3165 , allloss: 4.3192, dt: 1292.10ms, fracRes: 0.3600, norm(attn): 0.2129, norm(output): 0.5117, norm(x): 0.4230, norm(y): 1.0140, norm:1.6220, tok/sec: 101441.35, flops:106.46, batch-reuse:1
@ 3323 train 4.2784 , allloss: 4.2807, dt: 1290.33ms, fracRes: 0.3604, norm(attn): 0.2109, norm(output): 0.5078, norm(x): 0.4219, norm(y): 1.0140, norm:1.3983, tok/sec: 101580.24, flops:106.61, batch-reuse:1
@ 3324 train 4.3920 , allloss: 4.3940, dt: 1300.23ms, fracRes: 0.3598, norm(attn): 0.2129, norm(output): 0.5117, norm(x): 0.4237, norm(y): 1.0139, norm:1.2727, tok/sec: 100806.50, flops:105.80, batch-reuse:1
@ 3325 train 4.4753 , allloss: 4.4768, dt: 1292.23ms, fracRes: 0.3599, norm(attn): 0.2109, norm(output): 0.5078, norm(x): 0.4210, norm(y): 1.0139, norm:1.5241, tok/sec: 101431.04, flops:106.45, batch-reuse:1
@ 3326 train 4.4014 , allloss: 4.4059, dt: 1330.54ms, fracRes: 0.3610, norm(attn): 0.2119, norm(output): 0.5078, norm(x): 0.4223, norm(y): 1.0139, norm:1.4171, tok/sec: 98510.19, flops:103.39, batch-reuse:1
@ 3327 train 4.3846 , allloss: 4.3863, dt: 1305.54ms, fracRes: 0.3625, norm(attn): 0.2100, norm(output): 0.5117, norm(x): 0.4224, norm(y): 1.0140, norm:1.5941, tok/sec: 100396.91, flops:105.37, batch-reuse:1
@ 3328 train 4.3706 , allloss: 4.3721, dt: 1291.60ms, fracRes: 0.3621, norm(attn): 0.2119, norm(output): 0.5078, norm(x): 0.4205, norm(y): 1.0140, norm:1.3530, tok/sec: 101480.41, flops:106.51, batch-reuse:1
@ 3329 train 4.3479 , allloss: 4.3522, dt: 1276.52ms, fracRes: 0.3611, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4215, norm(y): 1.0139, norm:1.3118, tok/sec: 102679.00, flops:107.76, batch-reuse:1
@ 3330 train 4.3406 , allloss: 4.3419, dt: 1312.56ms, fracRes: 0.3614, norm(attn): 0.2109, norm(output): 0.5039, norm(x): 0.4194, norm(y): 1.0140, norm:1.4329, tok/sec: 99860.01, flops:104.80, batch-reuse:1
@ 3331 train 4.1679 , allloss: 4.1703, dt: 1291.17ms, fracRes: 0.3616, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4209, norm(y): 1.0141, norm:1.5065, tok/sec: 101513.99, flops:106.54, batch-reuse:1
@ 3332 train 4.4145 , allloss: 4.4178, dt: 1320.08ms, fracRes: 0.3602, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4221, norm(y): 1.0140, norm:1.4156, tok/sec: 99291.04, flops:104.21, batch-reuse:1
@ 3333 train 4.3533 , allloss: 4.3548, dt: 1290.60ms, fracRes: 0.3605, norm(attn): 0.2158, norm(output): 0.5117, norm(x): 0.4243, norm(y): 1.0141, norm:1.4870, tok/sec: 101558.68, flops:106.59, batch-reuse:1
@ 3334 train 4.3853 , allloss: 4.3882, dt: 1305.51ms, fracRes: 0.3606, norm(attn): 0.2158, norm(output): 0.5117, norm(x): 0.4252, norm(y): 1.0140, norm:1.6031, tok/sec: 100398.84, flops:105.37, batch-reuse:1
@ 3335 train 4.3466 , allloss: 4.3499, dt: 1348.31ms, fracRes: 0.3611, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4237, norm(y): 1.0140, norm:1.4068, tok/sec: 97212.24, flops:102.03, batch-reuse:1
@ 3336 train 4.4703 , allloss: 4.4722, dt: 1335.56ms, fracRes: 0.3614, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4235, norm(y): 1.0139, norm:1.4554, tok/sec: 98140.42, flops:103.00, batch-reuse:1
@ 3337 train 4.3751 , allloss: 4.3771, dt: 1288.61ms, fracRes: 0.3608, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4237, norm(y): 1.0139, norm:1.3431, tok/sec: 101715.48, flops:106.75, batch-reuse:1
@ 3338 train 4.3370 , allloss: 4.3401, dt: 1314.52ms, fracRes: 0.3597, norm(attn): 0.2158, norm(output): 0.5195, norm(x): 0.4261, norm(y): 1.0140, norm:1.3937, tok/sec: 99711.24, flops:104.65, batch-reuse:1
@ 3339 train 4.3922 , allloss: 4.3940, dt: 1308.72ms, fracRes: 0.3596, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4224, norm(y): 1.0141, norm:1.3633, tok/sec: 100152.89, flops:105.11, batch-reuse:1
@ 3340 train 4.3194 , allloss: 4.3207, dt: 1312.01ms, fracRes: 0.3604, norm(attn): 0.2129, norm(output): 0.5078, norm(x): 0.4207, norm(y): 1.0141, norm:1.2634, tok/sec: 99901.91, flops:104.85, batch-reuse:1
@ 3341 train 4.6462 , allloss: 4.6476, dt: 1340.15ms, fracRes: 0.3593, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4229, norm(y): 1.0140, norm:1.6022, tok/sec: 97804.26, flops:102.65, batch-reuse:1
@ 3342 train 4.5582 , allloss: 4.5593, dt: 1315.68ms, fracRes: 0.3599, norm(attn): 0.2158, norm(output): 0.5117, norm(x): 0.4263, norm(y): 1.0139, norm:2.2939, tok/sec: 99623.15, flops:104.56, batch-reuse:1
@ 3343 train 4.5474 , allloss: 4.5487, dt: 1308.78ms, fracRes: 0.3613, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4265, norm(y): 1.0139, norm:1.7238, tok/sec: 100148.09, flops:105.11, batch-reuse:1
@ 3344 train 4.6224 , allloss: 4.6248, dt: 1300.32ms, fracRes: 0.3622, norm(attn): 0.2109, norm(output): 0.5117, norm(x): 0.4252, norm(y): 1.0140, norm:1.4679, tok/sec: 100799.68, flops:105.79, batch-reuse:1
@ 3345 train 4.5473 , allloss: 4.5492, dt: 1281.25ms, fracRes: 0.3615, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4242, norm(y): 1.0140, norm:1.3807, tok/sec: 102299.83, flops:107.37, batch-reuse:1
@ 3346 train 4.5152 , allloss: 4.5175, dt: 1285.11ms, fracRes: 0.3596, norm(attn): 0.2168, norm(output): 0.5078, norm(x): 0.4240, norm(y): 1.0140, norm:1.5700, tok/sec: 101993.05, flops:107.04, batch-reuse:1
@ 3347 train 4.5373 , allloss: 4.5385, dt: 1310.90ms, fracRes: 0.3587, norm(attn): 0.2158, norm(output): 0.5117, norm(x): 0.4267, norm(y): 1.0139, norm:1.4371, tok/sec: 99986.54, flops:104.94, batch-reuse:1
@ 3348 train 4.5087 , allloss: 4.5110, dt: 1292.31ms, fracRes: 0.3587, norm(attn): 0.2168, norm(output): 0.5078, norm(x): 0.4278, norm(y): 1.0140, norm:1.5733, tok/sec: 101424.92, flops:106.45, batch-reuse:1
@ 3349 train 4.4941 , allloss: 4.4964, dt: 1294.20ms, fracRes: 0.3604, norm(attn): 0.2139, norm(output): 0.5195, norm(x): 0.4279, norm(y): 1.0140, norm:1.6696, tok/sec: 101276.62, flops:106.29, batch-reuse:1
@ 3350 train 4.5394 , allloss: 4.5418, dt: 1307.87ms, fracRes: 0.3598, norm(attn): 0.2148, norm(output): 0.5078, norm(x): 0.4256, norm(y): 1.0140, norm:1.8137, tok/sec: 100217.81, flops:105.18, batch-reuse:1
@ 3351 train 4.6349 , allloss: 4.6365, dt: 1307.35ms, fracRes: 0.3575, norm(attn): 0.2168, norm(output): 0.5195, norm(x): 0.4292, norm(y): 1.0139, norm:1.4519, tok/sec: 100257.49, flops:105.22, batch-reuse:1
@ 3352 train 4.5656 , allloss: 4.5678, dt: 1349.53ms, fracRes: 0.3586, norm(attn): 0.2129, norm(output): 0.5078, norm(x): 0.4268, norm(y): 1.0140, norm:1.5734, tok/sec: 97123.95, flops:101.93, batch-reuse:1
@ 3353 train 4.5971 , allloss: 4.5982, dt: 1325.78ms, fracRes: 0.3595, norm(attn): 0.2119, norm(output): 0.5234, norm(x): 0.4274, norm(y): 1.0140, norm:1.6243, tok/sec: 98864.37, flops:103.76, batch-reuse:1
@ 3354 train 4.5746 , allloss: 4.5768, dt: 1295.28ms, fracRes: 0.3603, norm(attn): 0.2148, norm(output): 0.5195, norm(x): 0.4291, norm(y): 1.0140, norm:1.3402, tok/sec: 101192.06, flops:106.20, batch-reuse:1
@ 3355 train 4.6279 , allloss: 4.6307, dt: 1300.15ms, fracRes: 0.3600, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4282, norm(y): 1.0140, norm:1.3576, tok/sec: 100812.90, flops:105.81, batch-reuse:1
@ 3356 train 4.5546 , allloss: 4.5566, dt: 1315.81ms, fracRes: 0.3598, norm(attn): 0.2158, norm(output): 0.5195, norm(x): 0.4264, norm(y): 1.0141, norm:1.5537, tok/sec: 99613.02, flops:104.55, batch-reuse:1
@ 3357 train 4.5533 , allloss: 4.5550, dt: 1290.01ms, fracRes: 0.3597, norm(attn): 0.2158, norm(output): 0.5078, norm(x): 0.4253, norm(y): 1.0140, norm:1.3658, tok/sec: 101605.02, flops:106.64, batch-reuse:1
@ 3358 train 4.6082 , allloss: 4.6091, dt: 1293.87ms, fracRes: 0.3607, norm(attn): 0.2119, norm(output): 0.5078, norm(x): 0.4244, norm(y): 1.0140, norm:1.5409, tok/sec: 101302.00, flops:106.32, batch-reuse:1
@ 3359 train 4.5366 , allloss: 4.5393, dt: 1312.65ms, fracRes: 0.3611, norm(attn): 0.2109, norm(output): 0.5156, norm(x): 0.4271, norm(y): 1.0140, norm:1.5080, tok/sec: 99853.19, flops:104.80, batch-reuse:1
@ 3360 train 4.5598 , allloss: 4.5615, dt: 1338.18ms, fracRes: 0.3620, norm(attn): 0.2119, norm(output): 0.5156, norm(x): 0.4259, norm(y): 1.0139, norm:1.2663, tok/sec: 97947.74, flops:102.80, batch-reuse:1
@ 3361 train 4.5905 , allloss: 4.5919, dt: 1345.88ms, fracRes: 0.3644, norm(attn): 0.2070, norm(output): 0.5156, norm(x): 0.4245, norm(y): 1.0141, norm:1.3693, tok/sec: 97387.56, flops:102.21, batch-reuse:1
@ 3362 train 4.4852 , allloss: 4.4884, dt: 1327.36ms, fracRes: 0.3635, norm(attn): 0.2100, norm(output): 0.5195, norm(x): 0.4271, norm(y): 1.0140, norm:1.3651, tok/sec: 98746.04, flops:103.64, batch-reuse:1
@ 3363 train 4.5594 , allloss: 4.5607, dt: 1285.34ms, fracRes: 0.3621, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4285, norm(y): 1.0140, norm:1.3383, tok/sec: 101974.36, flops:107.02, batch-reuse:1
@ 3364 train 4.5616 , allloss: 4.5624, dt: 1309.17ms, fracRes: 0.3638, norm(attn): 0.2139, norm(output): 0.5156, norm(x): 0.4245, norm(y): 1.0141, norm:1.5703, tok/sec: 100118.43, flops:105.08, batch-reuse:1
@ 3365 train 4.5376 , allloss: 4.5387, dt: 1328.93ms, fracRes: 0.3635, norm(attn): 0.2119, norm(output): 0.5156, norm(x): 0.4251, norm(y): 1.0142, norm:1.6671, tok/sec: 98630.00, flops:103.51, batch-reuse:1
@ 3366 train 4.6778 , allloss: 4.6805, dt: 1323.43ms, fracRes: 0.3630, norm(attn): 0.2100, norm(output): 0.5234, norm(x): 0.4301, norm(y): 1.0140, norm:1.5732, tok/sec: 99039.52, flops:103.94, batch-reuse:1
@ 3367 train 4.5845 , allloss: 4.5860, dt: 1294.93ms, fracRes: 0.3609, norm(attn): 0.2129, norm(output): 0.5195, norm(x): 0.4274, norm(y): 1.0140, norm:1.7077, tok/sec: 101219.58, flops:106.23, batch-reuse:1
@ 3368 train 4.6415 , allloss: 4.6433, dt: 1297.09ms, fracRes: 0.3603, norm(attn): 0.2139, norm(output): 0.5234, norm(x): 0.4272, norm(y): 1.0140, norm:1.3657, tok/sec: 101050.74, flops:106.05, batch-reuse:1
@ 3369 train 4.5781 , allloss: 4.5795, dt: 1307.86ms, fracRes: 0.3589, norm(attn): 0.2168, norm(output): 0.5234, norm(x): 0.4292, norm(y): 1.0139, norm:1.5322, tok/sec: 100218.81, flops:105.18, batch-reuse:1
@ 3370 train 4.5489 , allloss: 4.5542, dt: 1288.82ms, fracRes: 0.3615, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4273, norm(y): 1.0142, norm:1.4766, tok/sec: 101698.89, flops:106.73, batch-reuse:1
@ 3371 train 4.5300 , allloss: 4.5311, dt: 1306.84ms, fracRes: 0.3615, norm(attn): 0.2109, norm(output): 0.5195, norm(x): 0.4261, norm(y): 1.0142, norm:1.5076, tok/sec: 100296.59, flops:105.26, batch-reuse:1
@ 3372 train 4.5544 , allloss: 4.5555, dt: 1304.19ms, fracRes: 0.3619, norm(attn): 0.2109, norm(output): 0.5117, norm(x): 0.4255, norm(y): 1.0141, norm:1.4540, tok/sec: 100500.98, flops:105.48, batch-reuse:1
@ 3373 train 4.5849 , allloss: 4.5877, dt: 1302.84ms, fracRes: 0.3615, norm(attn): 0.2139, norm(output): 0.5156, norm(x): 0.4267, norm(y): 1.0140, norm:1.4553, tok/sec: 100604.54, flops:105.59, batch-reuse:1
@ 3374 train 4.5179 , allloss: 4.5202, dt: 1309.59ms, fracRes: 0.3621, norm(attn): 0.2148, norm(output): 0.5234, norm(x): 0.4265, norm(y): 1.0140, norm:1.3191, tok/sec: 100086.28, flops:105.04, batch-reuse:1
@ 3375 train 4.4632 , allloss: 4.4642, dt: 1325.93ms, fracRes: 0.3634, norm(attn): 0.2148, norm(output): 0.5156, norm(x): 0.4252, norm(y): 1.0141, norm:1.4255, tok/sec: 98852.53, flops:103.75, batch-reuse:1
@ 3376 train 4.7015 , allloss: 4.7033, dt: 1304.45ms, fracRes: 0.3624, norm(attn): 0.2100, norm(output): 0.5273, norm(x): 0.4299, norm(y): 1.0141, norm:1.3374, tok/sec: 100480.75, flops:105.46, batch-reuse:1
@ 3377 train 4.6782 , allloss: 4.6817, dt: 1284.64ms, fracRes: 0.3657, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4374, norm(y): 1.0141, norm:4.2555, tok/sec: 102030.06, flops:107.08, batch-reuse:1
@ 3378 train 4.6634 , allloss: 4.6662, dt: 1304.78ms, fracRes: 0.3618, norm(attn): 0.2090, norm(output): 0.5234, norm(x): 0.4297, norm(y): 1.0140, norm:1.9838, tok/sec: 100455.29, flops:105.43, batch-reuse:1
@ 3379 train 4.5102 , allloss: 4.5126, dt: 1320.09ms, fracRes: 0.3620, norm(attn): 0.2158, norm(output): 0.5234, norm(x): 0.4276, norm(y): 1.0140, norm:1.5194, tok/sec: 99290.57, flops:104.21, batch-reuse:1
@ 3380 train 4.5762 , allloss: 4.5785, dt: 1310.09ms, fracRes: 0.3632, norm(attn): 0.2148, norm(output): 0.5195, norm(x): 0.4278, norm(y): 1.0140, norm:1.5838, tok/sec: 100048.47, flops:105.00, batch-reuse:1
@ 3381 train 4.5599 , allloss: 4.5614, dt: 1317.38ms, fracRes: 0.3632, norm(attn): 0.2139, norm(output): 0.5195, norm(x): 0.4281, norm(y): 1.0141, norm:1.6401, tok/sec: 99494.44, flops:104.42, batch-reuse:1
@ 3382 train 4.6026 , allloss: 4.6043, dt: 1329.92ms, fracRes: 0.3620, norm(attn): 0.2148, norm(output): 0.5234, norm(x): 0.4308, norm(y): 1.0140, norm:1.6054, tok/sec: 98556.58, flops:103.44, batch-reuse:1
@ 3383 train 4.6007 , allloss: 4.6021, dt: 1334.56ms, fracRes: 0.3613, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4287, norm(y): 1.0141, norm:1.6002, tok/sec: 98213.46, flops:103.08, batch-reuse:1
@ 3384 train 4.5440 , allloss: 4.5456, dt: 1336.02ms, fracRes: 0.3605, norm(attn): 0.2158, norm(output): 0.5234, norm(x): 0.4302, norm(y): 1.0140, norm:1.3888, tok/sec: 98106.33, flops:102.96, batch-reuse:1
@ 3385 train 4.5086 , allloss: 4.5100, dt: 1319.51ms, fracRes: 0.3610, norm(attn): 0.2148, norm(output): 0.5273, norm(x): 0.4316, norm(y): 1.0140, norm:1.5027, tok/sec: 99334.17, flops:104.25, batch-reuse:1
@ 3386 train 4.7144 , allloss: 4.7160, dt: 1300.77ms, fracRes: 0.3633, norm(attn): 0.2139, norm(output): 0.5273, norm(x): 0.4329, norm(y): 1.0141, norm:1.7964, tok/sec: 100764.61, flops:105.75, batch-reuse:1
@ 3387 train 4.5676 , allloss: 4.5695, dt: 1335.67ms, fracRes: 0.3621, norm(attn): 0.2148, norm(output): 0.5273, norm(x): 0.4309, norm(y): 1.0141, norm:1.6042, tok/sec: 98131.95, flops:102.99, batch-reuse:1
@ 3388 train 4.4565 , allloss: 4.4579, dt: 1308.85ms, fracRes: 0.3615, norm(attn): 0.2148, norm(output): 0.5234, norm(x): 0.4293, norm(y): 1.0141, norm:1.4040, tok/sec: 100142.71, flops:105.10, batch-reuse:1
@ 3389 train 4.5075 , allloss: 4.5089, dt: 1296.18ms, fracRes: 0.3619, norm(attn): 0.2119, norm(output): 0.5195, norm(x): 0.4287, norm(y): 1.0141, norm:1.4755, tok/sec: 101121.42, flops:106.13, batch-reuse:1
@ 3390 train 4.6363 , allloss: 4.6375, dt: 1289.67ms, fracRes: 0.3634, norm(attn): 0.2109, norm(output): 0.5234, norm(x): 0.4297, norm(y): 1.0141, norm:1.5345, tok/sec: 101632.52, flops:106.67, batch-reuse:1
@ 3391 train 4.6006 , allloss: 4.6023, dt: 1303.09ms, fracRes: 0.3644, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4274, norm(y): 1.0141, norm:1.4512, tok/sec: 100585.91, flops:105.57, batch-reuse:1
@ 3392 train 4.5125 , allloss: 4.5141, dt: 1288.75ms, fracRes: 0.3632, norm(attn): 0.2119, norm(output): 0.5195, norm(x): 0.4275, norm(y): 1.0141, norm:1.2652, tok/sec: 101704.51, flops:106.74, batch-reuse:1
@ 3393 train 4.6520 , allloss: 4.6532, dt: 1305.20ms, fracRes: 0.3638, norm(attn): 0.2148, norm(output): 0.5195, norm(x): 0.4293, norm(y): 1.0141, norm:1.3307, tok/sec: 100422.82, flops:105.40, batch-reuse:1
@ 3394 train 4.5918 , allloss: 4.5925, dt: 1317.24ms, fracRes: 0.3623, norm(attn): 0.2119, norm(output): 0.5195, norm(x): 0.4281, norm(y): 1.0140, norm:1.4005, tok/sec: 99504.92, flops:104.43, batch-reuse:1
@ 3395 train 4.5452 , allloss: 4.5464, dt: 1321.41ms, fracRes: 0.3617, norm(attn): 0.2148, norm(output): 0.5273, norm(x): 0.4306, norm(y): 1.0140, norm:1.3007, tok/sec: 99191.04, flops:104.10, batch-reuse:1
@ 3396 train 4.5535 , allloss: 4.5551, dt: 1296.62ms, fracRes: 0.3616, norm(attn): 0.2129, norm(output): 0.5273, norm(x): 0.4318, norm(y): 1.0141, norm:1.3905, tok/sec: 101087.27, flops:106.09, batch-reuse:1
@ 3397 train 4.5225 , allloss: 4.5236, dt: 1313.29ms, fracRes: 0.3613, norm(attn): 0.2158, norm(output): 0.5273, norm(x): 0.4310, norm(y): 1.0140, norm:1.3131, tok/sec: 99804.08, flops:104.75, batch-reuse:1
@ 3398 train 4.6214 , allloss: 4.6227, dt: 1325.64ms, fracRes: 0.3634, norm(attn): 0.2129, norm(output): 0.5234, norm(x): 0.4288, norm(y): 1.0140, norm:1.7580, tok/sec: 98874.35, flops:103.77, batch-reuse:1
@ 3399 train 4.5369 , allloss: 4.5386, dt: 1325.67ms, fracRes: 0.3592, norm(attn): 0.2188, norm(output): 0.5273, norm(x): 0.4347, norm(y): 1.0140, norm:1.5055, tok/sec: 98872.34, flops:103.77, batch-reuse:1
@ 3400 train 4.5760 , allloss: 4.5789, dt: 1276.41ms, fracRes: 0.3600, norm(attn): 0.2119, norm(output): 0.5312, norm(x): 0.4361, norm(y): 1.0142, norm:1.6934, tok/sec: 102687.71, flops:107.77, batch-reuse:1
@ 3401 train 4.5500 , allloss: 4.5517, dt: 1309.60ms, fracRes: 0.3596, norm(attn): 0.2119, norm(output): 0.5273, norm(x): 0.4356, norm(y): 1.0142, norm:1.3762, tok/sec: 100085.66, flops:105.04, batch-reuse:1
@ 3402 train 4.5690 , allloss: 4.5725, dt: 1286.88ms, fracRes: 0.3597, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4399, norm(y): 1.0141, norm:1.6832, tok/sec: 101852.77, flops:106.90, batch-reuse:1
@ 3403 train 4.5449 , allloss: 4.5476, dt: 1300.22ms, fracRes: 0.3598, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4382, norm(y): 1.0142, norm:1.6158, tok/sec: 100807.43, flops:105.80, batch-reuse:1
@ 3404 train 4.4995 , allloss: 4.5025, dt: 1296.32ms, fracRes: 0.3600, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4364, norm(y): 1.0143, norm:1.2707, tok/sec: 101110.80, flops:106.12, batch-reuse:1
@ 3405 train 4.5121 , allloss: 4.5155, dt: 1289.89ms, fracRes: 0.3594, norm(attn): 0.2119, norm(output): 0.5312, norm(x): 0.4382, norm(y): 1.0142, norm:1.6089, tok/sec: 101615.09, flops:106.65, batch-reuse:1
@ 3406 train 4.4937 , allloss: 4.4954, dt: 1311.41ms, fracRes: 0.3591, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4366, norm(y): 1.0142, norm:1.2152, tok/sec: 99947.57, flops:104.90, batch-reuse:1
@ 3407 train 4.5275 , allloss: 4.5287, dt: 1330.49ms, fracRes: 0.3596, norm(attn): 0.2109, norm(output): 0.5312, norm(x): 0.4346, norm(y): 1.0142, norm:1.3988, tok/sec: 98514.20, flops:103.39, batch-reuse:1
@ 3408 train 4.5146 , allloss: 4.5155, dt: 1306.98ms, fracRes: 0.3613, norm(attn): 0.2139, norm(output): 0.5273, norm(x): 0.4358, norm(y): 1.0141, norm:1.4475, tok/sec: 100286.15, flops:105.25, batch-reuse:1
@ 3409 train 4.6100 , allloss: 4.6115, dt: 1331.65ms, fracRes: 0.3629, norm(attn): 0.2100, norm(output): 0.5312, norm(x): 0.4382, norm(y): 1.0142, norm:1.4795, tok/sec: 98428.53, flops:103.30, batch-reuse:1
@ 3410 train 4.5876 , allloss: 4.5888, dt: 1339.83ms, fracRes: 0.3635, norm(attn): 0.2090, norm(output): 0.5273, norm(x): 0.4343, norm(y): 1.0143, norm:1.3723, tok/sec: 97827.31, flops:102.67, batch-reuse:1
@ 3411 train 4.5810 , allloss: 4.5822, dt: 1323.07ms, fracRes: 0.3611, norm(attn): 0.2109, norm(output): 0.5273, norm(x): 0.4348, norm(y): 1.0142, norm:1.6400, tok/sec: 99066.67, flops:103.97, batch-reuse:1
@ 3412 train 4.5726 , allloss: 4.5738, dt: 1324.09ms, fracRes: 0.3610, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4381, norm(y): 1.0142, norm:1.4442, tok/sec: 98990.53, flops:103.89, batch-reuse:1
@ 3413 train 4.6317 , allloss: 4.6330, dt: 1321.53ms, fracRes: 0.3606, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4373, norm(y): 1.0141, norm:1.3718, tok/sec: 99181.82, flops:104.09, batch-reuse:1
@ 3414 train 4.5271 , allloss: 4.5282, dt: 1299.47ms, fracRes: 0.3632, norm(attn): 0.2109, norm(output): 0.5234, norm(x): 0.4302, norm(y): 1.0144, norm:1.5510, tok/sec: 100866.00, flops:105.86, batch-reuse:1
@ 3415 train 4.5103 , allloss: 4.5113, dt: 1312.57ms, fracRes: 0.3636, norm(attn): 0.2090, norm(output): 0.5312, norm(x): 0.4331, norm(y): 1.0145, norm:1.6119, tok/sec: 99859.14, flops:104.80, batch-reuse:1
@ 3416 train 4.5837 , allloss: 4.5856, dt: 1314.01ms, fracRes: 0.3627, norm(attn): 0.2100, norm(output): 0.5312, norm(x): 0.4332, norm(y): 1.0144, norm:1.4227, tok/sec: 99749.54, flops:104.69, batch-reuse:1
@ 3417 train 4.4944 , allloss: 4.4985, dt: 1307.38ms, fracRes: 0.3623, norm(attn): 0.2119, norm(output): 0.5273, norm(x): 0.4340, norm(y): 1.0143, norm:1.6279, tok/sec: 100255.80, flops:105.22, batch-reuse:1
@ 3418 train 4.4657 , allloss: 4.4673, dt: 1348.30ms, fracRes: 0.3617, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4350, norm(y): 1.0142, norm:1.5478, tok/sec: 97212.98, flops:102.03, batch-reuse:1
@ 3419 train 4.5150 , allloss: 4.5164, dt: 1293.20ms, fracRes: 0.3624, norm(attn): 0.2129, norm(output): 0.5273, norm(x): 0.4308, norm(y): 1.0143, norm:1.5478, tok/sec: 101355.00, flops:106.37, batch-reuse:1
@ 3420 train 4.5262 , allloss: 4.5275, dt: 1305.97ms, fracRes: 0.3621, norm(attn): 0.2100, norm(output): 0.5312, norm(x): 0.4320, norm(y): 1.0143, norm:1.3536, tok/sec: 100363.77, flops:105.33, batch-reuse:1
@ 3421 train 4.5557 , allloss: 4.5572, dt: 1299.34ms, fracRes: 0.3625, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4359, norm(y): 1.0142, norm:1.4047, tok/sec: 100875.48, flops:105.87, batch-reuse:1
@ 3422 train 4.5563 , allloss: 4.5598, dt: 1285.69ms, fracRes: 0.3637, norm(attn): 0.2090, norm(output): 0.5312, norm(x): 0.4348, norm(y): 1.0143, norm:1.4108, tok/sec: 101946.94, flops:107.00, batch-reuse:1
@ 3423 train 4.5109 , allloss: 4.5134, dt: 1318.57ms, fracRes: 0.3646, norm(attn): 0.2070, norm(output): 0.5312, norm(x): 0.4345, norm(y): 1.0143, norm:1.3119, tok/sec: 99404.88, flops:104.33, batch-reuse:1
@ 3424 train 4.5624 , allloss: 4.5643, dt: 1327.13ms, fracRes: 0.3640, norm(attn): 0.2080, norm(output): 0.5312, norm(x): 0.4343, norm(y): 1.0142, norm:1.3362, tok/sec: 98763.19, flops:103.65, batch-reuse:1
@ 3425 train 4.5483 , allloss: 4.5499, dt: 1310.24ms, fracRes: 0.3643, norm(attn): 0.2090, norm(output): 0.5312, norm(x): 0.4343, norm(y): 1.0142, norm:1.4079, tok/sec: 100036.72, flops:104.99, batch-reuse:1
@ 3426 train 4.5031 , allloss: 4.5041, dt: 1313.78ms, fracRes: 0.3633, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4342, norm(y): 1.0142, norm:1.2688, tok/sec: 99767.44, flops:104.71, batch-reuse:1
@ 3427 train 4.5477 , allloss: 4.5487, dt: 1317.29ms, fracRes: 0.3638, norm(attn): 0.2119, norm(output): 0.5312, norm(x): 0.4336, norm(y): 1.0142, norm:1.4543, tok/sec: 99501.26, flops:104.43, batch-reuse:1
@ 3428 train 4.4582 , allloss: 4.4602, dt: 1308.58ms, fracRes: 0.3623, norm(attn): 0.2119, norm(output): 0.5312, norm(x): 0.4342, norm(y): 1.0142, norm:1.2823, tok/sec: 100163.72, flops:105.12, batch-reuse:1
@ 3429 train 4.4650 , allloss: 4.4677, dt: 1317.87ms, fracRes: 0.3617, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4357, norm(y): 1.0141, norm:1.6297, tok/sec: 99457.81, flops:104.38, batch-reuse:1
@ 3430 train 4.7027 , allloss: 4.7048, dt: 1314.28ms, fracRes: 0.3602, norm(attn): 0.2148, norm(output): 0.5312, norm(x): 0.4347, norm(y): 1.0142, norm:1.4324, tok/sec: 99729.24, flops:104.67, batch-reuse:1
@ 3431 train 4.6605 , allloss: 4.6648, dt: 1291.35ms, fracRes: 0.3619, norm(attn): 0.2109, norm(output): 0.5312, norm(x): 0.4300, norm(y): 1.0142, norm:2.7267, tok/sec: 101500.18, flops:106.53, batch-reuse:1
@ 3432 train 4.4846 , allloss: 4.4886, dt: 1314.76ms, fracRes: 0.3580, norm(attn): 0.2227, norm(output): 0.5273, norm(x): 0.4370, norm(y): 1.0141, norm:2.7999, tok/sec: 99692.97, flops:104.63, batch-reuse:1
@ 3433 train 4.5695 , allloss: 4.5731, dt: 1328.60ms, fracRes: 0.3575, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4380, norm(y): 1.0140, norm:3.1682, tok/sec: 98653.96, flops:103.54, batch-reuse:1
@ 3434 train 4.5482 , allloss: 4.5511, dt: 1335.41ms, fracRes: 0.3626, norm(attn): 0.2119, norm(output): 0.5312, norm(x): 0.4352, norm(y): 1.0143, norm:2.3362, tok/sec: 98151.02, flops:103.01, batch-reuse:1
@ 3435 train 4.5138 , allloss: 4.5169, dt: 1319.19ms, fracRes: 0.3653, norm(attn): 0.2061, norm(output): 0.5312, norm(x): 0.4294, norm(y): 1.0144, norm:2.2232, tok/sec: 99358.19, flops:104.28, batch-reuse:1
@ 3436 train 4.5596 , allloss: 4.5619, dt: 1306.03ms, fracRes: 0.3677, norm(attn): 0.2061, norm(output): 0.5273, norm(x): 0.4288, norm(y): 1.0144, norm:1.8978, tok/sec: 100358.88, flops:105.33, batch-reuse:1
@ 3437 train 4.4940 , allloss: 4.4962, dt: 1299.33ms, fracRes: 0.3687, norm(attn): 0.2061, norm(output): 0.5312, norm(x): 0.4326, norm(y): 1.0144, norm:1.8041, tok/sec: 100876.55, flops:105.87, batch-reuse:1
@ 3438 train 4.5664 , allloss: 4.5678, dt: 1281.77ms, fracRes: 0.3683, norm(attn): 0.2061, norm(output): 0.5391, norm(x): 0.4379, norm(y): 1.0142, norm:1.7518, tok/sec: 102258.82, flops:107.32, batch-reuse:1
@ 3439 train 4.4434 , allloss: 4.4447, dt: 1301.39ms, fracRes: 0.3669, norm(attn): 0.2090, norm(output): 0.5312, norm(x): 0.4359, norm(y): 1.0142, norm:1.5384, tok/sec: 100717.08, flops:105.70, batch-reuse:1
@ 3440 train 4.4123 , allloss: 4.4136, dt: 1280.16ms, fracRes: 0.3649, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4329, norm(y): 1.0143, norm:1.6528, tok/sec: 102386.86, flops:107.46, batch-reuse:1
@ 3441 train 4.5276 , allloss: 4.5291, dt: 1295.63ms, fracRes: 0.3641, norm(attn): 0.2109, norm(output): 0.5312, norm(x): 0.4341, norm(y): 1.0143, norm:1.3693, tok/sec: 101164.57, flops:106.17, batch-reuse:1
@ 3442 train 4.5155 , allloss: 4.5173, dt: 1322.88ms, fracRes: 0.3632, norm(attn): 0.2100, norm(output): 0.5391, norm(x): 0.4390, norm(y): 1.0142, norm:1.6491, tok/sec: 99081.01, flops:103.99, batch-reuse:1
@ 3443 train 4.4852 , allloss: 4.4869, dt: 1288.81ms, fracRes: 0.3629, norm(attn): 0.2080, norm(output): 0.5391, norm(x): 0.4412, norm(y): 1.0143, norm:1.4257, tok/sec: 101699.92, flops:106.74, batch-reuse:1
@ 3444 train 4.4589 , allloss: 4.4597, dt: 1300.30ms, fracRes: 0.3652, norm(attn): 0.2070, norm(output): 0.5312, norm(x): 0.4381, norm(y): 1.0143, norm:1.6538, tok/sec: 100801.40, flops:105.79, batch-reuse:1
@ 3445 train 4.4782 , allloss: 4.4799, dt: 1291.55ms, fracRes: 0.3665, norm(attn): 0.2051, norm(output): 0.5312, norm(x): 0.4357, norm(y): 1.0143, norm:1.4245, tok/sec: 101484.57, flops:106.51, batch-reuse:1
@ 3446 train 4.4983 , allloss: 4.5011, dt: 1319.36ms, fracRes: 0.3669, norm(attn): 0.2061, norm(output): 0.5312, norm(x): 0.4366, norm(y): 1.0143, norm:1.6326, tok/sec: 99345.32, flops:104.26, batch-reuse:1
@ 3447 train 4.5162 , allloss: 4.5177, dt: 1327.78ms, fracRes: 0.3639, norm(attn): 0.2070, norm(output): 0.5312, norm(x): 0.4365, norm(y): 1.0142, norm:1.3801, tok/sec: 98714.85, flops:103.60, batch-reuse:1
@ 3448 train 4.4527 , allloss: 4.4541, dt: 1328.77ms, fracRes: 0.3640, norm(attn): 0.2080, norm(output): 0.5312, norm(x): 0.4372, norm(y): 1.0142, norm:1.4406, tok/sec: 98641.23, flops:103.53, batch-reuse:1
@ 3449 train 4.5024 , allloss: 4.5041, dt: 1350.69ms, fracRes: 0.3639, norm(attn): 0.2109, norm(output): 0.5352, norm(x): 0.4379, norm(y): 1.0142, norm:1.4018, tok/sec: 97040.63, flops:101.85, batch-reuse:1
@ 3450 train 4.4348 , allloss: 4.4368, dt: 1299.26ms, fracRes: 0.3635, norm(attn): 0.2129, norm(output): 0.5352, norm(x): 0.4379, norm(y): 1.0142, norm:1.3185, tok/sec: 100881.84, flops:105.88, batch-reuse:1
@ 3451 train 4.5186 , allloss: 4.5208, dt: 1308.05ms, fracRes: 0.3651, norm(attn): 0.2090, norm(output): 0.5391, norm(x): 0.4386, norm(y): 1.0143, norm:1.3608, tok/sec: 100203.96, flops:105.17, batch-reuse:1
@ 3452 train 4.5053 , allloss: 4.5068, dt: 1302.79ms, fracRes: 0.3663, norm(attn): 0.2080, norm(output): 0.5312, norm(x): 0.4338, norm(y): 1.0144, norm:1.3839, tok/sec: 100608.48, flops:105.59, batch-reuse:1
@ 3453 train 4.5002 , allloss: 4.5021, dt: 1297.14ms, fracRes: 0.3665, norm(attn): 0.2080, norm(output): 0.5352, norm(x): 0.4367, norm(y): 1.0143, norm:1.4173, tok/sec: 101046.63, flops:106.05, batch-reuse:1
@ 3454 train 4.5175 , allloss: 4.5185, dt: 1290.81ms, fracRes: 0.3657, norm(attn): 0.2061, norm(output): 0.5352, norm(x): 0.4362, norm(y): 1.0143, norm:1.6652, tok/sec: 101542.53, flops:106.57, batch-reuse:1
@ 3455 train 4.4852 , allloss: 4.4867, dt: 1298.41ms, fracRes: 0.3649, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4379, norm(y): 1.0142, norm:1.7905, tok/sec: 100948.40, flops:105.95, batch-reuse:1
@ 3456 train 4.4345 , allloss: 4.4367, dt: 1286.36ms, fracRes: 0.3638, norm(attn): 0.2129, norm(output): 0.5312, norm(x): 0.4345, norm(y): 1.0142, norm:1.4534, tok/sec: 101893.47, flops:106.94, batch-reuse:1
@ 3457 train 4.4457 , allloss: 4.4486, dt: 1318.04ms, fracRes: 0.3632, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4376, norm(y): 1.0142, norm:1.6914, tok/sec: 99444.49, flops:104.37, batch-reuse:1
@ 3458 train 4.4061 , allloss: 4.4108, dt: 1312.39ms, fracRes: 0.3636, norm(attn): 0.2148, norm(output): 0.5312, norm(x): 0.4372, norm(y): 1.0143, norm:1.5265, tok/sec: 99872.93, flops:104.82, batch-reuse:1
@ 3459 train 4.4789 , allloss: 4.4806, dt: 1318.90ms, fracRes: 0.3629, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4387, norm(y): 1.0143, norm:1.3797, tok/sec: 99379.72, flops:104.30, batch-reuse:1
@ 3460 train 4.5504 , allloss: 4.5523, dt: 1322.28ms, fracRes: 0.3631, norm(attn): 0.2129, norm(output): 0.5352, norm(x): 0.4390, norm(y): 1.0143, norm:1.4744, tok/sec: 99125.92, flops:104.03, batch-reuse:1
@ 3461 train 4.4471 , allloss: 4.4503, dt: 1301.32ms, fracRes: 0.3633, norm(attn): 0.2100, norm(output): 0.5312, norm(x): 0.4361, norm(y): 1.0142, norm:1.3018, tok/sec: 100722.50, flops:105.71, batch-reuse:1
@ 3462 train 4.4621 , allloss: 4.4640, dt: 1291.93ms, fracRes: 0.3643, norm(attn): 0.2129, norm(output): 0.5352, norm(x): 0.4389, norm(y): 1.0141, norm:1.3442, tok/sec: 101454.14, flops:106.48, batch-reuse:1
@ 3463 train 4.4954 , allloss: 4.4977, dt: 1301.91ms, fracRes: 0.3646, norm(attn): 0.2139, norm(output): 0.5312, norm(x): 0.4390, norm(y): 1.0142, norm:1.2589, tok/sec: 100677.04, flops:105.66, batch-reuse:1
@ 3464 train 4.3326 , allloss: 4.3385, dt: 1311.23ms, fracRes: 0.3636, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4365, norm(y): 1.0143, norm:1.3287, tok/sec: 99960.84, flops:104.91, batch-reuse:1
@ 3465 train 4.4582 , allloss: 4.4606, dt: 1344.39ms, fracRes: 0.3629, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4387, norm(y): 1.0142, norm:1.4052, tok/sec: 97495.54, flops:102.32, batch-reuse:1
@ 3466 train 4.4722 , allloss: 4.4756, dt: 1288.89ms, fracRes: 0.3615, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4380, norm(y): 1.0142, norm:1.3229, tok/sec: 101693.79, flops:106.73, batch-reuse:1
@ 3467 train 4.4924 , allloss: 4.4946, dt: 1304.06ms, fracRes: 0.3620, norm(attn): 0.2158, norm(output): 0.5312, norm(x): 0.4386, norm(y): 1.0142, norm:1.4160, tok/sec: 100510.95, flops:105.49, batch-reuse:1
@ 3468 train 4.4037 , allloss: 4.4058, dt: 1314.59ms, fracRes: 0.3624, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4382, norm(y): 1.0141, norm:1.2944, tok/sec: 99705.87, flops:104.64, batch-reuse:1
@ 3469 train 4.4693 , allloss: 4.4705, dt: 1330.50ms, fracRes: 0.3631, norm(attn): 0.2139, norm(output): 0.5352, norm(x): 0.4391, norm(y): 1.0142, norm:1.3748, tok/sec: 98513.19, flops:103.39, batch-reuse:1
@ 3470 train 4.5606 , allloss: 4.5627, dt: 1311.29ms, fracRes: 0.3640, norm(attn): 0.2139, norm(output): 0.5352, norm(x): 0.4389, norm(y): 1.0142, norm:1.4864, tok/sec: 99956.86, flops:104.91, batch-reuse:1
@ 3471 train 4.4718 , allloss: 4.4733, dt: 1274.36ms, fracRes: 0.3647, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4398, norm(y): 1.0142, norm:1.2814, tok/sec: 102853.41, flops:107.95, batch-reuse:1
@ 3472 train 4.4852 , allloss: 4.4875, dt: 1328.58ms, fracRes: 0.3630, norm(attn): 0.2148, norm(output): 0.5312, norm(x): 0.4388, norm(y): 1.0141, norm:1.6876, tok/sec: 98655.96, flops:103.54, batch-reuse:1
@ 3473 train 4.4065 , allloss: 4.4085, dt: 1329.47ms, fracRes: 0.3635, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4401, norm(y): 1.0142, norm:1.4177, tok/sec: 98589.65, flops:103.47, batch-reuse:1
@ 3474 train 4.4584 , allloss: 4.4661, dt: 1310.19ms, fracRes: 0.3649, norm(attn): 0.2158, norm(output): 0.5312, norm(x): 0.4370, norm(y): 1.0143, norm:1.5384, tok/sec: 100040.53, flops:104.99, batch-reuse:1
@ 3475 train 4.3114 , allloss: 4.3136, dt: 1320.13ms, fracRes: 0.3646, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4352, norm(y): 1.0142, norm:1.3112, tok/sec: 99287.52, flops:104.20, batch-reuse:1
@ 3476 train 4.3980 , allloss: 4.3998, dt: 1311.11ms, fracRes: 0.3648, norm(attn): 0.2139, norm(output): 0.5352, norm(x): 0.4372, norm(y): 1.0142, norm:1.3404, tok/sec: 99969.98, flops:104.92, batch-reuse:1
@ 3477 train 4.3447 , allloss: 4.3457, dt: 1310.02ms, fracRes: 0.3649, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4380, norm(y): 1.0142, norm:1.4599, tok/sec: 100053.69, flops:105.01, batch-reuse:1
@ 3478 train 4.4083 , allloss: 4.4093, dt: 1327.67ms, fracRes: 0.3654, norm(attn): 0.2158, norm(output): 0.5312, norm(x): 0.4365, norm(y): 1.0142, norm:1.3173, tok/sec: 98723.46, flops:103.61, batch-reuse:1
@ 3479 train 4.2983 , allloss: 4.3019, dt: 1340.25ms, fracRes: 0.3649, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4366, norm(y): 1.0142, norm:1.4717, tok/sec: 97797.04, flops:102.64, batch-reuse:1
@ 3480 train 4.4261 , allloss: 4.4303, dt: 1322.94ms, fracRes: 0.3644, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4376, norm(y): 1.0142, norm:1.2016, tok/sec: 99076.06, flops:103.98, batch-reuse:1
@ 3481 train 4.4320 , allloss: 4.4346, dt: 1293.05ms, fracRes: 0.3641, norm(attn): 0.2148, norm(output): 0.5391, norm(x): 0.4396, norm(y): 1.0142, norm:1.4770, tok/sec: 101366.35, flops:106.39, batch-reuse:1
@ 3482 train 4.2983 , allloss: 4.3015, dt: 1293.66ms, fracRes: 0.3627, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4427, norm(y): 1.0143, norm:1.3652, tok/sec: 101319.08, flops:106.34, batch-reuse:1
@ 3483 train 4.3888 , allloss: 4.3943, dt: 1331.10ms, fracRes: 0.3598, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4416, norm(y): 1.0141, norm:1.3992, tok/sec: 98469.13, flops:103.35, batch-reuse:1
@ 3484 train 4.3787 , allloss: 4.3814, dt: 1321.15ms, fracRes: 0.3607, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4410, norm(y): 1.0142, norm:1.1944, tok/sec: 99210.37, flops:104.12, batch-reuse:1
@ 3485 train 4.3556 , allloss: 4.3577, dt: 1296.46ms, fracRes: 0.3622, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4384, norm(y): 1.0143, norm:1.4489, tok/sec: 101099.87, flops:106.11, batch-reuse:1
@ 3486 train 4.3914 , allloss: 4.3954, dt: 1298.72ms, fracRes: 0.3624, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4400, norm(y): 1.0142, norm:1.3708, tok/sec: 100924.31, flops:105.92, batch-reuse:1
@ 3487 train 4.2862 , allloss: 4.2872, dt: 1323.15ms, fracRes: 0.3635, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4385, norm(y): 1.0142, norm:1.3930, tok/sec: 99060.83, flops:103.97, batch-reuse:1
@ 3488 train 4.4044 , allloss: 4.4057, dt: 1308.36ms, fracRes: 0.3626, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4400, norm(y): 1.0141, norm:1.2983, tok/sec: 100180.68, flops:105.14, batch-reuse:1
@ 3489 train 4.3858 , allloss: 4.3877, dt: 1292.25ms, fracRes: 0.3635, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4406, norm(y): 1.0143, norm:1.3618, tok/sec: 101428.98, flops:106.45, batch-reuse:1
@ 3490 train 4.3200 , allloss: 4.3214, dt: 1316.50ms, fracRes: 0.3631, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4398, norm(y): 1.0144, norm:1.3639, tok/sec: 99560.71, flops:104.49, batch-reuse:1
@ 3491 train 4.3154 , allloss: 4.3166, dt: 1344.59ms, fracRes: 0.3623, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4409, norm(y): 1.0143, norm:1.2266, tok/sec: 97480.67, flops:102.31, batch-reuse:1
@ 3492 train 4.3864 , allloss: 4.3873, dt: 1313.85ms, fracRes: 0.3626, norm(attn): 0.2168, norm(output): 0.5312, norm(x): 0.4385, norm(y): 1.0143, norm:1.3367, tok/sec: 99761.54, flops:104.70, batch-reuse:1
@ 3493 train 4.3646 , allloss: 4.3660, dt: 1322.41ms, fracRes: 0.3623, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4387, norm(y): 1.0142, norm:1.3343, tok/sec: 99116.18, flops:104.02, batch-reuse:1
@ 3494 train 4.3461 , allloss: 4.3475, dt: 1294.77ms, fracRes: 0.3620, norm(attn): 0.2188, norm(output): 0.5352, norm(x): 0.4416, norm(y): 1.0141, norm:1.2517, tok/sec: 101232.16, flops:106.25, batch-reuse:1
@ 3495 train 4.3648 , allloss: 4.3690, dt: 1312.10ms, fracRes: 0.3625, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4399, norm(y): 1.0142, norm:1.4459, tok/sec: 99894.79, flops:104.84, batch-reuse:1
@ 3496 train 4.3898 , allloss: 4.3913, dt: 1283.16ms, fracRes: 0.3630, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4398, norm(y): 1.0143, norm:1.3192, tok/sec: 102147.69, flops:107.21, batch-reuse:1
@ 3497 train 4.3347 , allloss: 4.3369, dt: 1304.93ms, fracRes: 0.3630, norm(attn): 0.2168, norm(output): 0.5391, norm(x): 0.4401, norm(y): 1.0143, norm:1.3530, tok/sec: 100443.98, flops:105.42, batch-reuse:1
@ 3498 train 4.3449 , allloss: 4.3468, dt: 1312.07ms, fracRes: 0.3632, norm(attn): 0.2158, norm(output): 0.5352, norm(x): 0.4396, norm(y): 1.0142, norm:1.2216, tok/sec: 99897.10, flops:104.84, batch-reuse:1
@ 3499 train 4.3746 , allloss: 4.3764, dt: 1295.65ms, fracRes: 0.3631, norm(attn): 0.2148, norm(output): 0.5391, norm(x): 0.4393, norm(y): 1.0142, norm:1.3139, tok/sec: 101163.35, flops:106.17, batch-reuse:1
@ 3500 train 4.2901 , allloss: 4.2945, dt: 1301.04ms, fracRes: 0.3647, norm(attn): 0.2139, norm(output): 0.5391, norm(x): 0.4403, norm(y): 1.0144, norm:1.4577, tok/sec: 100744.03, flops:105.73, batch-reuse:1
@ 3501 train 4.2608 , allloss: 4.2635, dt: 1338.95ms, fracRes: 0.3640, norm(attn): 0.2148, norm(output): 0.5352, norm(x): 0.4384, norm(y): 1.0143, norm:1.5088, tok/sec: 97891.43, flops:102.74, batch-reuse:1
@ 3502 train 4.3132 , allloss: 4.3156, dt: 1333.06ms, fracRes: 0.3630, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4398, norm(y): 1.0143, norm:1.3720, tok/sec: 98324.19, flops:103.19, batch-reuse:1
@ 3503 train 4.3451 , allloss: 4.3462, dt: 1299.66ms, fracRes: 0.3618, norm(attn): 0.2148, norm(output): 0.5352, norm(x): 0.4361, norm(y): 1.0143, norm:1.5104, tok/sec: 100850.62, flops:105.84, batch-reuse:1
@ 3504 train 4.3098 , allloss: 4.3117, dt: 1297.34ms, fracRes: 0.3605, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4405, norm(y): 1.0143, norm:1.2529, tok/sec: 101031.51, flops:106.03, batch-reuse:1
@ 3505 train 4.2805 , allloss: 4.2825, dt: 1305.45ms, fracRes: 0.3609, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4423, norm(y): 1.0143, norm:1.5079, tok/sec: 100403.57, flops:105.38, batch-reuse:1
@ 3506 train 4.2223 , allloss: 4.2243, dt: 1344.22ms, fracRes: 0.3624, norm(attn): 0.2188, norm(output): 0.5391, norm(x): 0.4446, norm(y): 1.0144, norm:1.4173, tok/sec: 97507.89, flops:102.34, batch-reuse:1
@ 3507 train 4.3125 , allloss: 4.3142, dt: 1332.23ms, fracRes: 0.3613, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4468, norm(y): 1.0143, norm:1.4339, tok/sec: 98385.41, flops:103.26, batch-reuse:1
@ 3508 train 4.4247 , allloss: 4.4257, dt: 1304.87ms, fracRes: 0.3614, norm(attn): 0.2178, norm(output): 0.5430, norm(x): 0.4447, norm(y): 1.0143, norm:1.3150, tok/sec: 100448.44, flops:105.42, batch-reuse:1
@ 3509 train 4.3594 , allloss: 4.3611, dt: 1311.55ms, fracRes: 0.3631, norm(attn): 0.2168, norm(output): 0.5430, norm(x): 0.4465, norm(y): 1.0143, norm:1.4671, tok/sec: 99936.81, flops:104.89, batch-reuse:1
@ 3510 train 4.3303 , allloss: 4.3336, dt: 1283.32ms, fracRes: 0.3610, norm(attn): 0.2178, norm(output): 0.5469, norm(x): 0.4458, norm(y): 1.0142, norm:1.4561, tok/sec: 102135.03, flops:107.19, batch-reuse:1
@ 3511 train 4.3906 , allloss: 4.3924, dt: 1284.99ms, fracRes: 0.3626, norm(attn): 0.2158, norm(output): 0.5430, norm(x): 0.4436, norm(y): 1.0142, norm:1.8345, tok/sec: 102002.63, flops:107.05, batch-reuse:1
@ 3512 train 4.3924 , allloss: 4.3936, dt: 1313.01ms, fracRes: 0.3596, norm(attn): 0.2227, norm(output): 0.5312, norm(x): 0.4410, norm(y): 1.0144, norm:1.4336, tok/sec: 99825.23, flops:104.77, batch-reuse:1
@ 3513 train 4.3576 , allloss: 4.3596, dt: 1322.91ms, fracRes: 0.3550, norm(attn): 0.2246, norm(output): 0.5312, norm(x): 0.4369, norm(y): 1.0145, norm:1.3908, tok/sec: 99078.63, flops:103.98, batch-reuse:1
@ 3514 train 4.4537 , allloss: 4.4568, dt: 1316.77ms, fracRes: 0.3519, norm(attn): 0.2314, norm(output): 0.5312, norm(x): 0.4351, norm(y): 1.0146, norm:1.4177, tok/sec: 99540.75, flops:104.47, batch-reuse:1
@ 3515 train 4.3428 , allloss: 4.3444, dt: 1331.60ms, fracRes: 0.3563, norm(attn): 0.2295, norm(output): 0.5273, norm(x): 0.4357, norm(y): 1.0145, norm:1.4585, tok/sec: 98431.93, flops:103.31, batch-reuse:1
@ 3516 train 4.4486 , allloss: 4.4502, dt: 1330.63ms, fracRes: 0.3585, norm(attn): 0.2256, norm(output): 0.5273, norm(x): 0.4373, norm(y): 1.0145, norm:1.3808, tok/sec: 98503.76, flops:103.38, batch-reuse:1
@ 3517 train 4.3884 , allloss: 4.3899, dt: 1324.02ms, fracRes: 0.3611, norm(attn): 0.2236, norm(output): 0.5312, norm(x): 0.4399, norm(y): 1.0144, norm:1.5098, tok/sec: 98995.42, flops:103.90, batch-reuse:1
@ 3518 train 4.4206 , allloss: 4.4238, dt: 1317.04ms, fracRes: 0.3625, norm(attn): 0.2227, norm(output): 0.5312, norm(x): 0.4410, norm(y): 1.0145, norm:1.3812, tok/sec: 99519.76, flops:104.45, batch-reuse:1
@ 3519 train 4.2971 , allloss: 4.2993, dt: 1342.34ms, fracRes: 0.3636, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4408, norm(y): 1.0144, norm:1.4187, tok/sec: 97644.14, flops:102.48, batch-reuse:1
@ 3520 train 4.2921 , allloss: 4.2935, dt: 1305.86ms, fracRes: 0.3623, norm(attn): 0.2236, norm(output): 0.5312, norm(x): 0.4440, norm(y): 1.0144, norm:1.5841, tok/sec: 100372.46, flops:105.34, batch-reuse:1
@ 3521 train 4.3446 , allloss: 4.3483, dt: 1331.30ms, fracRes: 0.3628, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4442, norm(y): 1.0144, norm:1.2947, tok/sec: 98454.21, flops:103.33, batch-reuse:1
@ 3522 train 4.4476 , allloss: 4.4496, dt: 1333.47ms, fracRes: 0.3600, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4413, norm(y): 1.0144, norm:1.5397, tok/sec: 98294.04, flops:103.16, batch-reuse:1
@ 3523 train 4.3845 , allloss: 4.3861, dt: 1309.52ms, fracRes: 0.3612, norm(attn): 0.2207, norm(output): 0.5312, norm(x): 0.4415, norm(y): 1.0144, norm:1.8338, tok/sec: 100091.33, flops:105.05, batch-reuse:1
@ 3524 train 4.3953 , allloss: 4.3985, dt: 1317.01ms, fracRes: 0.3631, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4439, norm(y): 1.0143, norm:1.4685, tok/sec: 99522.50, flops:104.45, batch-reuse:1
@ 3525 train 4.3753 , allloss: 4.3785, dt: 1296.87ms, fracRes: 0.3632, norm(attn): 0.2197, norm(output): 0.5312, norm(x): 0.4446, norm(y): 1.0144, norm:1.4377, tok/sec: 101067.99, flops:106.07, batch-reuse:1
@ 3526 train 4.5028 , allloss: 4.5045, dt: 1314.03ms, fracRes: 0.3633, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4448, norm(y): 1.0144, norm:1.4158, tok/sec: 99748.11, flops:104.69, batch-reuse:1
@ 3527 train 4.5303 , allloss: 4.5332, dt: 1345.85ms, fracRes: 0.3634, norm(attn): 0.2178, norm(output): 0.5312, norm(x): 0.4425, norm(y): 1.0145, norm:1.3712, tok/sec: 97389.51, flops:102.21, batch-reuse:1
@ 3528 train 4.5538 , allloss: 4.5558, dt: 1307.38ms, fracRes: 0.3617, norm(attn): 0.2207, norm(output): 0.5312, norm(x): 0.4434, norm(y): 1.0144, norm:1.3245, tok/sec: 100255.80, flops:105.22, batch-reuse:1
@ 3529 train 4.5815 , allloss: 4.5827, dt: 1297.96ms, fracRes: 0.3601, norm(attn): 0.2217, norm(output): 0.5312, norm(x): 0.4443, norm(y): 1.0144, norm:1.5252, tok/sec: 100983.45, flops:105.98, batch-reuse:1
@ 3530 train 4.5749 , allloss: 4.5763, dt: 1293.65ms, fracRes: 0.3612, norm(attn): 0.2197, norm(output): 0.5312, norm(x): 0.4429, norm(y): 1.0145, norm:1.3952, tok/sec: 101319.73, flops:106.34, batch-reuse:1
@ 3531 train 4.7123 , allloss: 4.7141, dt: 1300.14ms, fracRes: 0.3592, norm(attn): 0.2236, norm(output): 0.5312, norm(x): 0.4440, norm(y): 1.0144, norm:1.4702, tok/sec: 100813.86, flops:105.81, batch-reuse:1
@ 3532 train 4.5692 , allloss: 4.5704, dt: 1312.60ms, fracRes: 0.3603, norm(attn): 0.2207, norm(output): 0.5312, norm(x): 0.4415, norm(y): 1.0144, norm:1.5922, tok/sec: 99857.11, flops:104.80, batch-reuse:1
@ 3533 train 4.6803 , allloss: 4.6817, dt: 1283.95ms, fracRes: 0.3617, norm(attn): 0.2207, norm(output): 0.5312, norm(x): 0.4430, norm(y): 1.0145, norm:1.6158, tok/sec: 102085.23, flops:107.14, batch-reuse:1
@ 3534 train 4.4997 , allloss: 4.5031, dt: 1312.76ms, fracRes: 0.3634, norm(attn): 0.2197, norm(output): 0.5312, norm(x): 0.4427, norm(y): 1.0145, norm:1.4962, tok/sec: 99844.90, flops:104.79, batch-reuse:1
@ 3535 train 4.7301 , allloss: 4.7319, dt: 1327.19ms, fracRes: 0.3631, norm(attn): 0.2246, norm(output): 0.5352, norm(x): 0.4491, norm(y): 1.0145, norm:1.7573, tok/sec: 98758.98, flops:103.65, batch-reuse:1
@ 3536 train 4.4871 , allloss: 4.4892, dt: 1291.20ms, fracRes: 0.3637, norm(attn): 0.2236, norm(output): 0.5312, norm(x): 0.4446, norm(y): 1.0145, norm:1.8717, tok/sec: 101511.38, flops:106.54, batch-reuse:1
@ 3537 train 4.5749 , allloss: 4.5770, dt: 1278.64ms, fracRes: 0.3644, norm(attn): 0.2197, norm(output): 0.5352, norm(x): 0.4474, norm(y): 1.0144, norm:1.6118, tok/sec: 102508.59, flops:107.58, batch-reuse:1
@ 3538 train 4.5184 , allloss: 4.5205, dt: 1307.88ms, fracRes: 0.3655, norm(attn): 0.2197, norm(output): 0.5312, norm(x): 0.4432, norm(y): 1.0145, norm:1.5387, tok/sec: 100217.02, flops:105.18, batch-reuse:1
@ 3539 train 4.5056 , allloss: 4.5068, dt: 1298.94ms, fracRes: 0.3669, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4422, norm(y): 1.0145, norm:1.5748, tok/sec: 100906.73, flops:105.90, batch-reuse:1
@ 3540 train 4.5458 , allloss: 4.5471, dt: 1316.10ms, fracRes: 0.3672, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4439, norm(y): 1.0146, norm:1.4614, tok/sec: 99591.26, flops:104.52, batch-reuse:1
@ 3541 train 4.5343 , allloss: 4.5356, dt: 1324.59ms, fracRes: 0.3675, norm(attn): 0.2178, norm(output): 0.5312, norm(x): 0.4441, norm(y): 1.0146, norm:1.4822, tok/sec: 98952.99, flops:103.85, batch-reuse:1
@ 3542 train 4.5424 , allloss: 4.5459, dt: 1290.07ms, fracRes: 0.3659, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4444, norm(y): 1.0145, norm:1.4449, tok/sec: 101600.55, flops:106.63, batch-reuse:1
@ 3543 train 4.6240 , allloss: 4.6255, dt: 1314.13ms, fracRes: 0.3661, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4461, norm(y): 1.0145, norm:1.2065, tok/sec: 99740.65, flops:104.68, batch-reuse:1
@ 3544 train 4.4815 , allloss: 4.4827, dt: 1312.28ms, fracRes: 0.3659, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4442, norm(y): 1.0145, norm:1.3094, tok/sec: 99881.49, flops:104.83, batch-reuse:1
@ 3545 train 4.5006 , allloss: 4.5023, dt: 1325.74ms, fracRes: 0.3654, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4428, norm(y): 1.0144, norm:1.2778, tok/sec: 98867.22, flops:103.76, batch-reuse:1
@ 3546 train 4.4986 , allloss: 4.4998, dt: 1329.51ms, fracRes: 0.3651, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4412, norm(y): 1.0145, norm:1.1878, tok/sec: 98586.40, flops:103.47, batch-reuse:1
@ 3547 train 4.4821 , allloss: 4.4835, dt: 1328.40ms, fracRes: 0.3642, norm(attn): 0.2178, norm(output): 0.5312, norm(x): 0.4426, norm(y): 1.0145, norm:1.3328, tok/sec: 98669.22, flops:103.56, batch-reuse:1
@ 3548 train 4.4531 , allloss: 4.4579, dt: 1278.67ms, fracRes: 0.3624, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4444, norm(y): 1.0145, norm:1.2843, tok/sec: 102506.89, flops:107.58, batch-reuse:1
@ 3549 train 4.4542 , allloss: 4.4557, dt: 1314.78ms, fracRes: 0.3621, norm(attn): 0.2188, norm(output): 0.5312, norm(x): 0.4428, norm(y): 1.0145, norm:1.3164, tok/sec: 99691.46, flops:104.63, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1426, 0.8594, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.3086, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0238, 0.0923, 0.5195, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0486, 0.1289, 0.0820, 0.3125, 0.4277, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1074, 0.2812, 0.1035, 0.1846, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.1099, 0.0400, 0.1162, 0.2910, 0.1924, 0.0308, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0352, 0.1914, 0.0129, 0.0089, 0.0242, 0.5977, 0.0618, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0552, 0.0630, 0.0581, 0.0679, 0.0427, 0.3223, 0.0703, 0.1680, 0.1533, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0386, 0.0845, 0.1084, 0.1338, 0.0430, 0.2041, 0.1035, 0.0938, 0.1689, 0.0221, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0038, 0.0327, 0.0109, 0.1216, 0.0645, 0.1260, 0.0064, 0.0103, 0.4023, 0.0143, 0.2070, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.0471, 0.1514, 0.0693, 0.0142, 0.0986, 0.1079, 0.2178, 0.0120, 0.0723, 0.0164, 0.1060, 0.0000, 0.0000, 0.0000],
        [0.0898, 0.0500, 0.0586, 0.0393, 0.0396, 0.0315, 0.3105, 0.0598, 0.0088, 0.0457, 0.0166, 0.0635, 0.1865, 0.0000, 0.0000],
        [0.0410, 0.0447, 0.0544, 0.0576, 0.0381, 0.1738, 0.0442, 0.1377, 0.1777, 0.0256, 0.0532, 0.0491, 0.0193, 0.0825, 0.0000],
        [0.0215, 0.0757, 0.1123, 0.0894, 0.0645, 0.1289, 0.0718, 0.0388, 0.0457, 0.0249, 0.1016, 0.0457, 0.0221, 0.0376, 0.1191]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0030, -0.0239,  0.0504,  ...,  0.0119,  0.0114,  0.0179],
        [ 0.0198, -0.0003,  0.0092,  ..., -0.0048,  0.0249,  0.0013],
        [-0.0348,  0.0118, -0.0115,  ..., -0.0216, -0.0130,  0.0174],
        ...,
        [-0.0360,  0.0091, -0.0590,  ...,  0.0109, -0.0158, -0.0150],
        [ 0.0119, -0.0144,  0.0124,  ...,  0.0356, -0.0178,  0.0142],
        [-0.0233,  0.0047, -0.0316,  ...,  0.0007, -0.0034,  0.0244]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1807,  0.3984, -1.6172,  0.5078, -0.6211, -0.2734, -0.9609,  0.0879, -0.8516, -0.7617, -0.9609, -0.0859,  0.0684, -1.3516, -1.1016,  1.2031, -0.4316,  1.6094, -0.9375, -0.4941, -0.1309, -0.8164, -1.3516,  1.2109, -0.3770,  0.2617,  0.5703, -0.7383, -0.7500,  1.0547,  0.2852, -0.1177,
         0.4531, -0.1572,  0.4160, -0.8086,  0.0315,  0.8750, -1.4062, -0.0640, -0.4727, -0.1060,  0.3008,  0.1611, -1.0547,  0.7812, -0.2090,  0.5820,  0.8984, -0.1641, -0.3809,  0.4141, -0.1279,  2.3906, -0.4805, -0.0479,  0.7852,  0.3535,  0.6953,  0.1279,  0.0991,  0.8242, -0.5078,  0.6016],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0145,  0.0079, -0.0330,  ...,  0.0148,  0.0272,  0.0184],
        [ 0.0202, -0.0221, -0.0328,  ..., -0.0077,  0.0274,  0.0269],
        [-0.0052,  0.0198,  0.0357,  ...,  0.0038,  0.0084, -0.0346],
        ...,
        [ 0.0219,  0.0106,  0.0388,  ..., -0.0007,  0.0194, -0.0237],
        [ 0.0043, -0.0172, -0.0341,  ...,  0.0254, -0.0217, -0.0102],
        [ 0.0316, -0.0098,  0.0296,  ..., -0.0138, -0.0406, -0.0174]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4023, -0.3906,  0.0261, -0.1172, -0.9531,  0.5078, -0.9570,  0.1768, -0.8359, -0.6445, -0.2676, -0.8672,  0.4668, -0.1865, -0.3047,  0.4570, -1.0547,  0.5117,  0.5312, -0.8438,  0.0281,  0.0835, -0.5312,  0.9922, -1.2344, -0.7461,  0.9492,  0.9570, -0.6875,  0.0250, -0.3359,  0.7031,
         0.1377, -0.0718,  0.7383, -0.3535, -0.0596,  0.4355, -0.7773, -0.0110, -0.0957, -1.1094, -0.1299,  0.2344, -0.3926, -0.1816,  0.2637, -0.5156, -0.4902, -0.1943, -0.7031,  0.7500,  0.4141,  1.3672,  0.4570, -0.6562,  0.2285,  0.3555,  0.6992,  1.1172, -0.0369, -0.5273,  0.1904,  0.7578],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  1.7969,  0.0947,  1.8750,  0.4570,  2.2812,  1.6562,  0.1826,  0.3516, -0.6992,  0.9922,  0.7344,  0.2256,  0.2734,  1.5625],
        [ 0.0000,  0.7734,  1.3516,  1.0859, -0.8008,  1.3516,  2.2188,  0.8047, -1.2422, -0.4883, -0.3926,  0.8789,  1.3906, -0.6797,  1.0859],
        [ 0.0000,  1.3516,  3.0781,  2.7188, -0.9062,  0.3750,  0.5625,  1.3125, -0.1826,  0.3359, -0.0393,  1.3125,  1.4688, -0.2490,  1.3438],
        [ 0.0000,  0.9727,  0.5234,  1.8594,  2.1719,  1.9609,  0.7461, -0.0403,  2.5625,  0.6133,  2.8281,  1.0469, -1.0469,  1.9062,  1.1250],
        [ 0.0000, -0.1245,  0.8398, -0.1631,  0.4160,  0.5039,  0.5703,  0.4062,  0.7539, -0.6797,  0.4512,  0.1846, -0.9375,  0.6641,  0.6914],
        [ 0.0000, -0.6875, -1.6953, -0.6328,  0.2871, -0.1318, -1.9609,  0.2344,  0.3613, -0.3965,  0.5312, -0.8906, -1.0547, -0.2051, -0.5664],
        [ 0.0000, -0.6836,  1.0078, -1.6875, -2.0625, -1.0625,  2.1406, -0.1235, -3.5312, -0.5312, -3.1094, -0.5820,  0.8555, -1.8281,  0.1914],
        [ 0.0000,  0.1279,  0.0488,  0.2090, -0.2578,  1.7578,  0.2441,  1.1094,  1.0234, -0.2393,  0.5039,  0.6055, -0.6875,  0.5469,  0.4336],
        [ 0.0000,  0.7812,  1.0312,  1.2422,  0.1060,  1.6641,  0.9844,  0.8867,  1.4766, -0.5586,  0.9844,  0.9414,  0.3047,  0.7383,  1.4688],
        [ 0.0000,  2.1406,  1.0391,  3.4531,  2.8125,  3.4844,  0.5156,  0.9844,  4.6562,  1.3125,  3.9844,  1.7812, -0.7148,  2.7344,  1.6250],
        [ 0.0000, -0.6094,  0.5586, -0.2217, -1.8125,  0.1299,  0.2158,  0.9219, -1.9766, -0.1816, -1.6719,  0.1982,  1.5000, -1.5234, -0.3223],
        [ 0.0000, -0.5859, -0.4297, -0.8281, -0.8242, -1.0469,  1.2344, -0.4082, -2.3281, -0.6797, -1.6875, -0.3535,  0.7305, -1.4766,  0.4648],
        [ 0.0000,  0.0864,  0.2793,  0.3379, -0.0747,  1.4453,  0.0757,  1.2109,  1.4688, -0.4707,  0.2598,  0.1797, -0.7578,  0.6992,  1.0625],
        [ 0.0000,  1.2578,  1.6484,  1.4297,  1.1016,  1.7969,  1.2031,  0.5938,  0.7539,  0.1455,  1.5547,  0.7539,  0.0287,  0.5586,  1.7109]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3598],
        [0.3669],
        [0.1694],
        [0.1958],
        [0.1777],
        [0.1817],
        [0.0947],
        [0.0672],
        [0.0971],
        [0.0348],
        [0.1120],
        [0.0658],
        [0.0504],
        [0.0558]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1406,     0.0101,     0.7422,     0.1074,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0006,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7500,     0.0048,     0.2217,     0.0126,     0.0003,     0.0017,     0.0087,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0003,     0.0001,     0.0000,     0.0002,     0.0003,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0006,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.7539,     0.0033,     0.1875,     0.0315,     0.0001,     0.0028,     0.0025,     0.0003,     0.0005,     0.0096,     0.0000,     0.0054,     0.0008,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0092,     -0.0049,      0.0245,  ...,     -0.0062,     -0.0230,      0.0000],
        [    -0.0222,      0.0208,      0.0074,  ...,      0.0030,      0.0193,      0.0064],
        [    -0.0079,      0.0286,      0.0039,  ...,     -0.0032,     -0.0371,      0.0058],
        ...,
        [     0.0263,     -0.0426,     -0.0210,  ...,      0.0126,      0.0107,     -0.0016],
        [    -0.0552,     -0.0449,      0.0167,  ...,      0.0422,     -0.0033,      0.0083],
        [     0.0352,     -0.0070,      0.0373,  ...,      0.0487,      0.0109,      0.0444]], device='cuda:0', requires_grad=True)
K: tensor([-2.0312,  2.8906,  3.3125, -3.4844, -0.3105, -3.1406,  0.5430,  2.2344,  4.7188,  4.0938, -1.8281, -2.4688,  3.2500,  0.4805, -0.1494,  3.7188, -2.1875, -4.5000,  2.4531,  2.9062,  0.8789, -1.7188,  1.6172, -2.9219,  3.5781, -4.1250, -3.9688,  2.2656,  0.8242, -0.3848,  2.4375,  1.6016,
         1.1797,  3.7656, -2.3281,  2.6562,  0.9258,  1.4141, -1.7812, -1.6719, -1.3750, -2.7031,  2.9844, -2.6094, -0.1582, -0.0757, -0.8203, -2.0938, -2.0000,  2.3750, -0.1328, -1.2656, -1.2188, -2.2656,  3.5781, -2.0781, -0.9492, -1.8438, -2.3438,  2.6562,  3.0156, -0.4707,  2.1875, -1.8438],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0184,  0.0398,  0.0149,  ...,  0.0150,  0.0024,  0.0398],
        [ 0.0161, -0.0259,  0.0161,  ...,  0.0505, -0.0185,  0.0110],
        [-0.0142,  0.0056, -0.0098,  ..., -0.0103, -0.0189,  0.0026],
        ...,
        [-0.0382,  0.0113,  0.0316,  ..., -0.0093,  0.0164, -0.0013],
        [ 0.0306, -0.0139, -0.0091,  ..., -0.0220, -0.0260,  0.0299],
        [ 0.0100,  0.0133, -0.0313,  ..., -0.0025, -0.0061, -0.0100]], device='cuda:0', requires_grad=True)
Q: tensor([-1.5234,  0.7344, -0.4082,  0.4746, -0.4609,  1.5469, -1.3984,  0.1235,  0.1738, -2.4375,  0.8555,  2.7969, -1.0078, -0.4883, -1.1875, -1.4062,  1.1875,  0.3320, -1.5391,  0.0396, -0.5273,  1.5859, -0.1758,  1.3984,  0.5156,  1.7109,  0.4082,  0.0491, -2.1250,  0.0245,  0.5273, -1.0391,
        -1.9766, -0.6484,  0.1865, -0.8711,  1.2109, -0.4824,  2.6875, -0.2236,  1.9375,  1.4844, -0.6289,  2.7188, -1.3359, -0.3789,  1.0000,  2.2031,  3.3750, -1.0391,  0.7344,  0.5781,  0.2139,  3.0000,  0.2949,  1.0625,  1.2891,  1.3359,  0.9688, -0.9766,  0.0245,  0.1582, -2.8125,  1.3281],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -15.8750, -11.7500, -11.6250, -14.8125, -18.5000, -13.4375, -13.4375, -16.0000, -15.4375, -17.6250, -12.0625, -12.7500, -15.6875, -13.3750],
        [  0.0000, -16.3750, -12.1875, -11.5625, -15.0000, -16.8750, -15.9375, -14.7500, -17.6250, -14.5625, -18.0000, -13.2500, -15.5625, -17.5000, -15.7500],
        [  0.0000,  -2.6250,   1.6641,  -0.2715,  -4.0312,  -4.4688,  -1.5234,  -4.1562,  -4.2812,  -2.9062,  -5.6562,  -0.7148,  -3.0938,  -3.3906,   1.1406],
        [  0.0000,  -9.8750,  -7.4062,  -7.9688, -10.1875, -11.0000,  -7.9062,  -7.3125,  -9.3750,  -9.5625, -11.1875,  -7.8750,  -7.6250,  -9.0000,  -8.9375],
        [  0.0000, -12.1875,  -8.5000,  -8.5000, -11.2500, -16.0000, -10.0000, -10.1250, -12.0000, -11.9375, -13.6875,  -7.9688,  -9.5625, -11.5625, -10.0000],
        [  0.0000, -11.4375,  -7.8750,  -9.2500, -13.0000, -13.3125, -10.2500,  -9.3750, -11.7500, -11.0000, -14.8750, -10.5000,  -9.8125, -11.3750, -10.2500],
        [  0.0000,  -5.0625,  -1.2188,  -4.0938,  -7.6875,  -6.0625,  -4.4375,  -6.6250,  -6.5000,  -4.1875,  -9.5625,  -4.1875,  -5.4062,  -5.7812,  -0.6523],
        [  0.0000, -13.3750,  -9.5625, -10.1250, -11.7500, -17.5000, -10.0625,  -9.0625, -11.5625, -12.4375, -14.1250,  -9.3125,  -8.1875, -11.0625, -12.3125],
        [  0.0000, -12.2500,  -9.6250,  -8.5625, -12.7500, -13.1250, -10.5000, -11.3750, -12.4375, -10.3125, -14.1250,  -9.6875, -10.4375, -11.8750,  -8.3750],
        [  0.0000, -10.7500,  -9.5000,  -8.1875,  -9.8750, -13.5625,  -8.7500,  -7.9688,  -8.8125, -10.6875, -10.9375,  -6.6562,  -7.4062,  -8.3125,  -9.4375],
        [  0.0000, -10.8125,  -7.4375,  -8.1250, -11.1875, -12.0625, -11.5000,  -9.9375, -12.0000,  -8.9375, -13.3750,  -8.8125, -10.3750, -11.6250, -10.0625],
        [  0.0000,  -5.4375,  -1.3906,  -3.1719,  -8.8125,  -5.5938,  -5.7188,  -7.8125,  -7.3125,  -4.3750, -10.0625,  -4.9375,  -6.8125,  -6.5938,  -0.1562],
        [  0.0000, -13.9375, -10.3750, -10.8750, -12.1250, -17.7500, -10.6250,  -9.0625, -12.0000, -12.8125, -14.5000, -10.0000,  -8.5000, -11.5625, -13.4375],
        [  0.0000, -19.0000, -14.2500, -13.0625, -18.6250, -21.7500, -18.1250, -16.7500, -19.5000, -17.6250, -20.8750, -15.8125, -17.6250, -19.2500, -15.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6437],
        [0.5253],
        [0.3310],
        [0.3673],
        [0.5271],
        [0.5818],
        [0.4037],
        [0.4865],
        [0.3704],
        [0.5149],
        [0.3666],
        [0.3353],
        [0.4852],
        [0.5631]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0012,     0.0018,     0.0003,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4219,     0.0200,     0.0337,     0.0109,     0.0056,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4531,     0.0156,     0.0228,     0.0038,     0.0044,     0.3457,     0.1562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3965,     0.0096,     0.0096,     0.0056,     0.0052,     0.4023,     0.1118,     0.0305,     0.0282,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0210,     0.0679,     0.0286,     0.0214,     0.0172,     0.2139,     0.2832,     0.1318,     0.1211,     0.0332,     0.0610,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4941,     0.0053,     0.0057,     0.0027,     0.0033,     0.2930,     0.0674,     0.0177,     0.0188,     0.0187,     0.0119,     0.0069,     0.0317,     0.0227,     0.0000],
        [    0.8125,     0.0008,     0.0009,     0.0001,     0.0007,     0.1021,     0.0122,     0.0039,     0.0098,     0.0020,     0.0023,     0.0008,     0.0074,     0.0113,     0.0320]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0037,      0.0175,      0.0006,  ...,     -0.0127,     -0.0030,      0.0207],
        [    -0.0331,      0.0030,     -0.0000,  ...,      0.0153,      0.0314,      0.0104],
        [     0.0040,     -0.0200,     -0.0082,  ...,      0.0112,      0.0248,      0.0074],
        ...,
        [     0.0041,     -0.0050,     -0.0258,  ...,      0.0408,      0.0061,     -0.0101],
        [    -0.0010,      0.0222,     -0.0285,  ...,      0.0427,      0.0116,      0.0088],
        [     0.0080,     -0.0080,      0.0191,  ...,     -0.0724,     -0.0293,     -0.0130]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3730, -1.5547,  0.3223, -1.1016, -1.2969,  1.5859,  0.6484, -0.0874, -2.0625,  0.9453,  0.1748, -1.3828, -2.2969, -0.8047,  0.9414,  2.2656, -0.8242, -1.3594,  0.9492, -2.5625, -2.2812, -0.6797, -1.6953,  1.8672, -1.1172,  0.8164,  0.9023,  2.1562,  1.6484, -1.1875, -1.8516,  1.5703,
        -1.2109,  1.7188, -0.9453,  1.5391, -1.1172, -0.3633, -1.3047,  2.0781, -0.3555, -1.5078,  1.8984,  1.6797, -0.9453, -1.8516, -0.9336,  1.8516, -1.2891, -1.2891, -0.3652, -2.0781, -2.7969, -2.1875,  2.0000, -1.6016, -1.7891,  0.4258,  1.2969, -1.6875, -2.3125,  1.1016,  2.5938, -1.9766],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0096, -0.0252,  0.0260,  ...,  0.0152, -0.0111,  0.0191],
        [-0.0152, -0.0154,  0.0318,  ..., -0.0072, -0.0297, -0.0251],
        [-0.0283, -0.0125, -0.0114,  ..., -0.0598, -0.0658, -0.0555],
        ...,
        [-0.0295,  0.0008,  0.0377,  ..., -0.0015, -0.0381, -0.0402],
        [ 0.0258,  0.0172, -0.0168,  ..., -0.0659, -0.0242,  0.0133],
        [ 0.0281, -0.0035,  0.0037,  ..., -0.0065,  0.0125,  0.0333]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6133, -1.8594,  1.4844,  2.0938,  0.0767, -0.0425,  1.1562, -1.2969, -0.1260,  0.6094, -1.2344,  0.7852, -0.7305, -1.0703,  0.6016,  0.4805,  1.0078,  2.2344,  0.4434, -0.5156,  0.6836,  0.3750, -0.5781, -1.1250, -0.7539, -1.6172, -0.0245,  0.1611,  0.0889, -0.3574,  0.2207, -0.1045,
         1.4141, -0.3926,  1.1094, -0.5312,  2.3750, -0.6211,  1.5625, -0.7617, -1.3047, -0.1641, -1.3281, -1.1328, -0.5352,  0.3691, -0.1641,  1.0469,  0.8164,  1.2969,  2.2500, -0.1855,  0.1289, -0.1748, -0.6328, -0.0601,  0.9375, -1.6406,  1.9531,  2.8438,  1.6172, -2.0781,  0.7383,  0.6328],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -8.7500,     -8.4375,    -10.5625,     -8.8750,     -4.1875,     -6.1875,     -7.3750,     -5.9375,     -8.5625,     -7.8750,     -8.8125,     -7.3750,     -5.8438,     -5.4375],
        [     0.0000,    -15.7500,    -15.1250,    -18.6250,    -14.5000,    -10.1875,    -13.5625,    -14.4375,    -11.5625,    -14.3750,    -14.5625,    -14.4375,    -12.1875,    -11.5625,    -12.3125],
        [     0.0000,    -18.2500,    -17.8750,    -22.1250,    -16.7500,    -11.3750,    -15.1250,    -16.2500,    -13.1250,    -17.5000,    -17.2500,    -16.5000,    -14.1875,    -13.1250,    -14.3750],
        [     0.0000,     -6.7188,     -6.3125,     -8.1250,     -6.8125,     -3.3906,     -3.9531,     -5.0938,     -4.6562,     -6.6562,     -5.9688,     -6.7188,     -5.3438,     -4.5625,     -3.5000],
        [     0.0000,     -3.0469,     -2.5156,     -3.6562,     -4.3125,      0.1895,     -0.9961,     -1.9141,     -2.0625,     -2.3906,     -2.9375,     -3.5000,     -1.6797,     -1.7969,      0.0781],
        [     0.0000,     -3.3594,     -2.9844,     -4.7812,     -4.6250,     -0.2715,     -1.0625,     -1.4609,     -2.0156,     -2.7500,     -2.8125,     -4.6875,     -2.1562,     -1.7734,     -0.2949],
        [     0.0000,    -14.3750,    -13.4375,    -16.8750,    -14.4375,     -8.5000,    -12.8125,    -13.0000,    -11.0000,    -13.2500,    -14.0625,    -13.8750,    -11.3750,    -10.9375,    -11.3125],
        [     0.0000,     -3.7188,     -3.7188,     -4.2500,     -4.3438,      0.0143,     -1.2656,     -2.5625,     -2.6406,     -2.5312,     -2.9688,     -3.5625,     -2.0938,     -2.4375,     -0.1396],
        [     0.0000,    -17.6250,    -16.1250,    -20.3750,    -16.7500,    -11.7500,    -15.2500,    -15.5000,    -13.5625,    -17.1250,    -16.8750,    -17.0000,    -13.9375,    -13.5625,    -14.3125],
        [     0.0000,      1.1719,      0.3066,      0.0186,     -0.2021,      2.3125,      2.5938,      1.8359,      1.7500,      0.4609,      1.0703,     -0.4961,      0.5234,      1.8984,      2.6719],
        [     0.0000,    -16.2500,    -15.6875,    -18.6250,    -14.5000,    -10.8750,    -14.0000,    -15.5625,    -12.0625,    -15.4375,    -15.3125,    -14.4375,    -13.3125,    -12.1250,    -12.8750],
        [     0.0000,    -13.6250,    -12.6875,    -15.6250,    -13.5625,     -8.2500,    -12.1250,    -12.5000,    -10.3750,    -12.8750,    -13.2500,    -13.1250,    -11.3750,    -10.3750,    -10.7500],
        [     0.0000,     -4.5312,     -4.4688,     -5.1875,     -5.0000,     -0.5195,     -1.9922,     -3.3281,     -3.2656,     -3.2812,     -3.7188,     -4.2812,     -2.7500,     -3.0781,     -0.8711],
        [     0.0000,     -6.9062,     -6.8125,     -8.8125,     -7.0000,     -2.0781,     -4.1875,     -5.3438,     -4.4062,     -6.0000,     -5.8438,     -6.9688,     -4.6875,     -4.2812,     -3.2344]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9896],
        [0.9997],
        [1.0000],
        [0.9701],
        [0.7822],
        [0.8287],
        [0.9814],
        [0.7704],
        [0.9990],
        [0.8070],
        [0.9964],
        [0.9788],
        [0.7829],
        [0.8328]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9844, 0.0165, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6328, 0.2354, 0.1328, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1050, 0.2930, 0.0488, 0.5508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.2441, 0.0981, 0.1396, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0645, 0.4766, 0.1680, 0.0864, 0.1475, 0.0569, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.1060, 0.1797, 0.1299, 0.0386, 0.0190, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.1797, 0.0918, 0.1016, 0.0161, 0.0125, 0.0109, 0.3633, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2344, 0.1914, 0.1182, 0.1963, 0.0139, 0.0278, 0.0115, 0.1875, 0.0186, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.3848, 0.0693, 0.0520, 0.0188, 0.0074, 0.0099, 0.1201, 0.0645, 0.0669, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.0801, 0.0518, 0.0522, 0.0147, 0.0188, 0.0114, 0.2305, 0.0576, 0.2598, 0.0311, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.1187, 0.0164, 0.1660, 0.1953, 0.0217, 0.0167, 0.1045, 0.0442, 0.0635, 0.0718, 0.0601, 0.0000, 0.0000, 0.0000],
        [0.0298, 0.1924, 0.0242, 0.0284, 0.0140, 0.0164, 0.0043, 0.1475, 0.0486, 0.0601, 0.0269, 0.0586, 0.3496, 0.0000, 0.0000],
        [0.0796, 0.1426, 0.0430, 0.0776, 0.0119, 0.0312, 0.0097, 0.0608, 0.0231, 0.2676, 0.0459, 0.0635, 0.1147, 0.0297, 0.0000],
        [0.0623, 0.0942, 0.0403, 0.0381, 0.0317, 0.0232, 0.0928, 0.0549, 0.0332, 0.1021, 0.0278, 0.0479, 0.0134, 0.0242, 0.3145]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0107,  0.0416,  0.0176,  ...,  0.0216,  0.0420, -0.0363],
        [-0.0073, -0.0665,  0.0018,  ...,  0.0047, -0.0164,  0.0384],
        [ 0.0205,  0.0119, -0.0461,  ..., -0.0066, -0.0143,  0.0234],
        ...,
        [ 0.0002,  0.0067, -0.0121,  ..., -0.0252, -0.0453,  0.0197],
        [ 0.0012,  0.0205, -0.0327,  ..., -0.0405, -0.0023,  0.0090],
        [-0.0245, -0.0062, -0.0321,  ..., -0.0302, -0.0186, -0.0067]], device='cuda:0', requires_grad=True)
K: tensor([ 1.8438,  0.7617,  0.4512, -1.0703,  0.9062, -0.9727, -1.3672, -0.4609,  0.2520, -1.0469,  1.3750,  0.2441,  0.6367, -1.5156,  1.8984,  0.4863,  0.4688, -1.0703,  1.3359,  0.3594,  0.5000,  1.4062,  0.0830,  1.0938,  1.4531,  0.8672, -2.8594, -1.6953,  2.5469,  0.3496,  0.6250,  0.8867,
        -0.3711,  0.6641, -1.6719, -1.8672,  1.2500,  0.5117,  0.8125, -1.9453,  0.6211, -0.1108,  0.3945,  0.3652,  1.9453,  0.1631,  1.2500,  1.2344,  0.5156,  0.5859,  0.2871, -1.6094,  1.5938,  1.1562,  0.5000,  0.5742, -1.2734, -0.1279, -1.4141,  0.4062, -0.3359, -0.2422, -0.7617,  1.0391],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0048, -0.0200, -0.0352,  ...,  0.0315, -0.0082, -0.0181],
        [-0.0306, -0.0448,  0.0157,  ..., -0.0313, -0.0201, -0.0627],
        [ 0.0243,  0.0074, -0.0183,  ...,  0.0468, -0.0045,  0.0214],
        ...,
        [-0.0177,  0.0279, -0.0024,  ...,  0.0064,  0.0157,  0.0067],
        [ 0.0186,  0.0085, -0.0074,  ..., -0.0148,  0.0068,  0.0176],
        [-0.0160,  0.0439, -0.0008,  ..., -0.0010,  0.0032,  0.0099]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7344,  1.0391, -2.2344,  3.3281, -0.1553, -1.8594, -1.7266, -0.6602,  1.2422,  0.6523,  1.1406,  2.0156, -1.1953, -0.2061,  0.4219, -0.6211,  0.1387,  0.8594,  2.0156,  1.6328, -1.2734, -0.4453, -1.5000,  0.0811,  0.9922,  0.6758, -0.8359,  0.3848, -0.0172, -1.0938,  0.6992, -1.1953,
        -0.3848,  1.2344,  0.8008, -0.5977, -2.3281, -0.8008,  0.3555, -0.5781, -1.2891, -0.4336,  0.4316, -0.6797, -0.1377,  1.1562, -0.3379,  1.6328, -0.8125,  3.6406,  1.0391,  0.8438,  1.5703,  2.4688, -1.3438,  0.8047, -0.8164,  0.1445,  0.7070, -0.0225, -0.5820, -0.5195, -0.2949, -0.4160],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -4.0938, -3.5469, -3.0625, -4.1562, -4.5938, -3.3906, -2.8750, -5.0938, -3.6875, -5.4688, -3.2031, -3.2031, -5.5625, -3.3281],
        [ 0.0000, -0.9883, -1.5625,  0.4980,  0.7344, -2.0312,  0.6602, -1.0078, -2.0781, -3.2500, -2.2188, -2.6562, -0.9805, -2.8594, -2.6406],
        [ 0.0000,  1.0312, -0.7695,  1.6562,  2.3125, -0.3809,  0.8516, -0.2773, -0.7578, -1.0547, -1.3281, -1.7656,  0.7969, -1.3281,  0.6445],
        [ 0.0000, -0.3457, -1.2578, -0.9102, -0.6914, -1.6406, -2.5312,  0.8320, -2.8906, -0.5195, -3.3125, -0.7734,  0.2324, -3.5625,  0.6016],
        [ 0.0000,  2.0000,  0.9570,  0.2910,  0.8281, -0.1245,  0.6641,  2.8438,  0.0220,  0.5312, -0.7852,  0.2734,  0.2734, -1.2656,  1.2734],
        [ 0.0000, -1.5391, -1.0078, -1.3281, -2.5469, -3.2500, -2.6094,  0.7969, -3.1875, -1.1094, -4.9062,  0.0117, -1.0547, -4.2500,  0.5430],
        [ 0.0000, -0.2197, -0.8906, -0.7930, -2.6406, -2.8906, -3.0156,  0.4824, -1.9141, -0.7500, -2.7188, -0.2520,  0.3184, -2.3125,  1.3281],
        [ 0.0000, -0.2012, -0.6836, -0.1758, -2.8281, -2.1250, -3.0156, -0.2227, -2.5312,  0.5820, -2.1875, -0.2812, -0.2285, -2.7500,  1.5469],
        [ 0.0000,  0.6172, -1.0938, -1.3828, -2.4062, -3.3281, -3.0312, -0.5430, -1.1719, -1.1250, -0.0081,  0.4863,  0.9297, -1.0391,  0.4219],
        [ 0.0000, -0.8672, -1.3125, -1.2969, -2.5625, -2.3281, -2.8281,  0.1865, -1.2031,  0.3086, -1.8203,  0.8164,  0.5430, -1.3672,  1.0547],
        [ 0.0000, -0.0271, -2.0000,  0.3086,  0.4727, -1.7266, -1.9844, -0.1533, -1.0078, -0.6523, -0.5312, -0.7070,  3.0469, -0.7109,  0.3125],
        [ 0.0000,  1.8672, -0.2100, -0.0464, -0.7500, -0.5977, -1.9375,  1.6016,  0.4902,  0.7031, -0.1006,  0.6758,  2.4688,  0.9766,  3.2500],
        [ 0.0000,  0.5781, -0.6211, -0.0288, -1.9062, -0.9336, -2.1094, -0.2734, -1.2422,  1.2109, -0.5547, -0.2275,  0.3633, -0.9922,  2.0000],
        [ 0.0000,  0.4121, -0.4336, -0.4922, -0.6719, -0.9883,  0.3984, -0.1235, -0.6328,  0.4941, -0.8047, -0.2656, -1.5391, -0.9492,  1.6172]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2593],
        [0.0922],
        [0.0390],
        [0.0847],
        [0.0384],
        [0.0898],
        [0.0317],
        [0.0392],
        [0.0319],
        [0.0323],
        [0.0205],
        [0.0139],
        [0.0126],
        [0.0404]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0815,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0664,     0.7188,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0099,     0.7266,     0.0635,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0569,     0.4707,     0.2021,     0.1128,     0.1572,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.5352,     0.0153,     0.0139,     0.2285,     0.2031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0132,     0.4492,     0.0454,     0.0747,     0.0869,     0.0181,     0.3125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.4316,     0.0135,     0.0339,     0.0723,     0.0461,     0.2559,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0825,     0.1631,     0.1758,     0.0165,     0.0791,     0.0481,     0.1729,     0.2402,     0.0212,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.3496,     0.0508,     0.0226,     0.0908,     0.0361,     0.0388,     0.0801,     0.0211,     0.3027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0045,     0.0055,     0.0004,     0.0004,     0.0008,     0.0016,     0.0044,     0.0005,     0.9766,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0199,     0.1514,     0.0312,     0.0977,     0.0623,     0.0188,     0.0737,     0.3965,     0.0457,     0.0317,     0.0143,     0.0571,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.3438,     0.0081,     0.0115,     0.0420,     0.0118,     0.0503,     0.0388,     0.1904,     0.0315,     0.0337,     0.0461,     0.1826,     0.0000,     0.0000],
        [    0.0056,     0.0159,     0.0128,     0.0011,     0.0055,     0.0034,     0.0074,     0.0151,     0.0031,     0.8359,     0.0170,     0.0244,     0.0496,     0.0030,     0.0000],
        [    0.0007,     0.5234,     0.0198,     0.0359,     0.1543,     0.0248,     0.1123,     0.0388,     0.0099,     0.0173,     0.0062,     0.0109,     0.0195,     0.0056,     0.0197]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0234,  0.0215, -0.0097,  ..., -0.0276,  0.0047, -0.0472],
        [ 0.0362,  0.0122,  0.0473,  ..., -0.0699, -0.0284,  0.0048],
        [-0.0069, -0.0106,  0.0295,  ...,  0.0417,  0.0062, -0.0322],
        ...,
        [-0.0017,  0.0014, -0.0147,  ..., -0.0305, -0.0259,  0.0028],
        [ 0.0187, -0.0239,  0.0398,  ...,  0.0216, -0.0333,  0.0101],
        [-0.0303,  0.0418, -0.0011,  ..., -0.0182,  0.0033,  0.0122]], device='cuda:0', requires_grad=True)
K: tensor([     0.2773,     -0.4434,      2.2188,      1.2578,     -0.6953,      0.1216,     -0.2949,      2.0625,     -1.3984,      0.5820,      0.9102,      0.2676,      0.9922,     -0.1348,      1.5312,     -1.3906,      0.3848,     -1.1328,     -0.3164,     -0.9102,     -2.8438,     -0.9570,
            -0.7773,      1.4453,      0.0669,     -2.1406,     -1.2891,     -0.5859,      0.7812,     -0.2734,      1.1406,     -0.4336,     -0.7031,      2.0625,      3.1094,      0.2891,      0.3398,     -0.0025,      1.5078,     -0.2090,     -1.2344,     -1.1172,      1.0078,      0.8203,
             0.6211,      0.6289,      0.9180,      1.0859,     -0.2373,     -0.0067,      0.9375,      0.3340,     -1.3047,     -1.2734,     -0.1602,      0.7070,     -0.8398,     -2.6250,     -1.6328,     -2.0938,      0.7930,      0.4355,      0.5039,      0.1572], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0007,  0.0338, -0.0178,  ...,  0.0022,  0.0039,  0.0277],
        [-0.0048, -0.0200,  0.0316,  ..., -0.0080, -0.0103,  0.0138],
        [-0.0147,  0.0496, -0.0249,  ...,  0.0212,  0.0108,  0.0104],
        ...,
        [ 0.0070,  0.0337, -0.0070,  ...,  0.0048,  0.0167,  0.0112],
        [ 0.0073,  0.0178, -0.0023,  ...,  0.0240, -0.0298,  0.0286],
        [ 0.0306,  0.0336, -0.0325,  ...,  0.0130,  0.0094, -0.0312]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6953, -0.0981,  0.9141,  2.4531, -0.9688, -0.0156, -0.5977,  1.0078, -0.5391, -2.0625, -2.2656, -0.4707, -0.3145, -0.4082, -0.7344, -1.0859, -1.5156, -0.2451, -0.4824,  0.1172, -1.5156, -1.8438,  0.3438,  0.0223, -0.0613, -0.4355, -0.5703, -0.7656,  0.5078, -0.7852,  4.0625,  0.9297,
         0.3613,  0.9102, -1.0469,  0.1582,  1.0547,  0.6953,  0.8008,  2.2500, -1.5391, -0.4785,  0.6992, -0.3438,  1.2734, -0.3145,  1.6641, -0.1777,  0.1406, -0.9531, -0.4102,  0.1787, -0.0928, -0.9219, -0.2158,  0.7109, -0.9453,  0.1562, -0.5547,  0.1484, -0.1504,  2.2969,  0.5156,  1.8750],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  2.4219,  0.2070, -0.3027,  1.9453,  0.5195,  1.4297,  0.1807, -1.0547,  0.3516, -3.3438, -1.3359,  0.0854, -1.8125,  0.9102],
        [ 0.0000,  2.3750,  1.1641,  1.8672,  2.1250,  1.7422,  1.4375,  1.7734,  0.7578,  0.9141, -0.7578,  0.2100,  1.3438, -0.2490,  0.6758],
        [ 0.0000,  4.3125,  1.8594,  3.0156,  3.9375,  2.2500,  2.7344,  3.1875,  2.3594,  0.5508,  0.0123, -0.2441,  2.3594,  1.4219,  1.1797],
        [ 0.0000,  2.1094,  1.2656,  0.6797,  1.0156,  1.8203,  1.3984,  1.7109, -2.0938,  2.1406, -2.8125,  0.8789,  1.4531, -3.3906,  2.5469],
        [ 0.0000,  4.8125,  1.2422,  1.1484,  3.9531,  3.8281,  5.2812,  3.1719,  2.9844,  2.0781,  0.6367,  0.8945,  2.1719,  1.9609,  4.0312],
        [ 0.0000,  3.5312,  1.2422,  1.7344,  1.8828,  0.3145,  3.1719,  2.8594,  0.9531,  0.6523, -1.3047,  0.9648,  1.8125,  0.5156,  2.3750],
        [ 0.0000,  5.0938,  1.6406,  2.5625,  3.3125,  2.8594,  4.5625,  4.0000,  3.7344,  1.4922,  1.4844,  1.8438,  3.3281,  2.7500,  4.4688],
        [ 0.0000,  0.6836,  0.7617, -1.6094, -0.0381, -0.5352,  0.7422,  1.0703, -1.3594,  4.1562, -0.0635,  0.7266,  1.7031, -1.9531,  2.8594],
        [ 0.0000,  3.6562,  1.7344,  0.9219,  2.3125,  1.3906,  1.4609,  2.1875,  0.8555,  3.5156,  3.5625,  3.2188,  2.6719,  0.1318,  2.5625],
        [ 0.0000,  1.5312,  1.7109, -0.9766, -0.8711, -0.1777,  0.4629,  1.5000, -0.7188,  6.9062,  1.2188,  3.1094,  3.3594, -0.6758,  3.3750],
        [ 0.0000,  2.0312,  0.4492,  1.5859,  1.1406, -0.0557,  1.3047,  2.9844,  0.8281,  0.4629, -0.3301,  1.0547,  2.5781,  0.2656,  1.2266],
        [ 0.0000,  3.6406, -0.1108,  0.2432,  1.5391,  0.2656,  1.7188,  1.4531,  3.0469,  1.2500,  1.3125,  1.6328,  3.0000,  3.4844,  3.4375],
        [ 0.0000,  1.0312,  0.8242, -1.6484, -0.0311, -0.5078,  0.2754,  0.9883, -0.5859,  5.0000,  1.1094,  1.4688,  2.1719, -0.6250,  2.9844],
        [ 0.0000,  6.5938,  3.3125,  3.9062,  5.3750,  3.5469,  5.0625,  3.9844,  2.6250,  3.1875,  2.1562,  2.7188,  3.2969,  2.0469,  3.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2273],
        [0.0704],
        [0.0108],
        [0.1699],
        [0.0142],
        [0.0525],
        [0.0126],
        [0.0312],
        [0.0458],
        [0.0125],
        [0.0240],
        [0.0082],
        [0.0080],
        [0.0078]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1475 a:0.1187,:0.2256 white:0.0645atoes:0.2773 are:0.4082 green:0.0471urch:0.0776)
urch
------
		( a:0.1187,:0.2256 white:0.0645atoes:0.2773 are:0.4082 green:0.0471urch:0.0776ins:0.4082)
ins, and they are white, and are white. They are white,
@ 3550 train 4.5275 , allloss: 4.5291, dt: 1760.72ms, fracRes: 0.3628, norm(attn): 0.2197, norm(output): 0.5312, norm(x): 0.4431, norm(y): 1.0145, norm:1.2183, tok/sec: 74442.25, flops:78.13, batch-reuse:1
@ 3551 train 4.6473 , allloss: 4.6493, dt: 1306.02ms, fracRes: 0.3655, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4419, norm(y): 1.0146, norm:1.3577, tok/sec: 100360.07, flops:105.33, batch-reuse:1
@ 3552 train 4.5363 , allloss: 4.5392, dt: 1293.34ms, fracRes: 0.3637, norm(attn): 0.2188, norm(output): 0.5352, norm(x): 0.4443, norm(y): 1.0145, norm:1.3019, tok/sec: 101343.75, flops:106.36, batch-reuse:1
@ 3553 train 4.5008 , allloss: 4.5064, dt: 1299.16ms, fracRes: 0.3646, norm(attn): 0.2168, norm(output): 0.5352, norm(x): 0.4429, norm(y): 1.0146, norm:1.3883, tok/sec: 100889.64, flops:105.89, batch-reuse:1
@ 3554 train 4.4809 , allloss: 4.4819, dt: 1276.96ms, fracRes: 0.3630, norm(attn): 0.2188, norm(output): 0.5352, norm(x): 0.4418, norm(y): 1.0145, norm:1.3487, tok/sec: 102644.15, flops:107.73, batch-reuse:1
@ 3555 train 4.5473 , allloss: 4.5489, dt: 1287.69ms, fracRes: 0.3623, norm(attn): 0.2188, norm(output): 0.5352, norm(x): 0.4429, norm(y): 1.0144, norm:1.6079, tok/sec: 101788.69, flops:106.83, batch-reuse:1
@ 3556 train 4.5040 , allloss: 4.5053, dt: 1282.90ms, fracRes: 0.3632, norm(attn): 0.2197, norm(output): 0.5352, norm(x): 0.4437, norm(y): 1.0144, norm:1.3449, tok/sec: 102168.29, flops:107.23, batch-reuse:1
@ 3557 train 4.6633 , allloss: 4.6649, dt: 1315.39ms, fracRes: 0.3653, norm(attn): 0.2207, norm(output): 0.5391, norm(x): 0.4477, norm(y): 1.0145, norm:1.6040, tok/sec: 99645.29, flops:104.58, batch-reuse:1
@ 3558 train 4.4198 , allloss: 4.4210, dt: 1333.94ms, fracRes: 0.3632, norm(attn): 0.2217, norm(output): 0.5391, norm(x): 0.4458, norm(y): 1.0145, norm:1.3057, tok/sec: 98259.66, flops:103.13, batch-reuse:1
@ 3559 train 4.5179 , allloss: 4.5192, dt: 1320.94ms, fracRes: 0.3655, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4474, norm(y): 1.0145, norm:1.5356, tok/sec: 99226.18, flops:104.14, batch-reuse:1
@ 3560 train 4.4863 , allloss: 4.4872, dt: 1328.98ms, fracRes: 0.3652, norm(attn): 0.2168, norm(output): 0.5391, norm(x): 0.4463, norm(y): 1.0145, norm:1.8449, tok/sec: 98626.35, flops:103.51, batch-reuse:1
@ 3561 train 4.5294 , allloss: 4.5314, dt: 1301.68ms, fracRes: 0.3645, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4468, norm(y): 1.0145, norm:1.2083, tok/sec: 100694.87, flops:105.68, batch-reuse:1
@ 3562 train 4.5143 , allloss: 4.5165, dt: 1317.64ms, fracRes: 0.3660, norm(attn): 0.2178, norm(output): 0.5352, norm(x): 0.4443, norm(y): 1.0145, norm:1.6954, tok/sec: 99475.14, flops:104.40, batch-reuse:1
@ 3563 train 4.5296 , allloss: 4.5308, dt: 1341.17ms, fracRes: 0.3660, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4443, norm(y): 1.0145, norm:1.3839, tok/sec: 97729.81, flops:102.57, batch-reuse:1
@ 3564 train 4.4956 , allloss: 4.4966, dt: 1296.49ms, fracRes: 0.3654, norm(attn): 0.2178, norm(output): 0.5391, norm(x): 0.4447, norm(y): 1.0145, norm:1.2456, tok/sec: 101097.69, flops:106.10, batch-reuse:1
@ 3565 train 4.5090 , allloss: 4.5102, dt: 1315.30ms, fracRes: 0.3660, norm(attn): 0.2168, norm(output): 0.5430, norm(x): 0.4449, norm(y): 1.0146, norm:1.4675, tok/sec: 99651.61, flops:104.59, batch-reuse:1
@ 3566 train 4.4842 , allloss: 4.4872, dt: 1339.93ms, fracRes: 0.3659, norm(attn): 0.2168, norm(output): 0.5430, norm(x): 0.4493, norm(y): 1.0146, norm:1.6535, tok/sec: 97819.74, flops:102.66, batch-reuse:1
@ 3567 train 4.5736 , allloss: 4.5755, dt: 1330.72ms, fracRes: 0.3661, norm(attn): 0.2148, norm(output): 0.5391, norm(x): 0.4459, norm(y): 1.0146, norm:1.3436, tok/sec: 98496.95, flops:103.37, batch-reuse:1
@ 3568 train 4.4455 , allloss: 4.4474, dt: 1322.71ms, fracRes: 0.3649, norm(attn): 0.2188, norm(output): 0.5391, norm(x): 0.4473, norm(y): 1.0144, norm:1.4854, tok/sec: 99093.88, flops:104.00, batch-reuse:1
@ 3569 train 4.5615 , allloss: 4.5634, dt: 1294.51ms, fracRes: 0.3644, norm(attn): 0.2158, norm(output): 0.5430, norm(x): 0.4483, norm(y): 1.0144, norm:1.3364, tok/sec: 101252.37, flops:106.27, batch-reuse:1
@ 3570 train 4.5443 , allloss: 4.5465, dt: 1291.09ms, fracRes: 0.3649, norm(attn): 0.2168, norm(output): 0.5430, norm(x): 0.4477, norm(y): 1.0145, norm:1.5063, tok/sec: 101520.63, flops:106.55, batch-reuse:1
@ 3571 train 4.5159 , allloss: 4.5172, dt: 1309.49ms, fracRes: 0.3648, norm(attn): 0.2158, norm(output): 0.5391, norm(x): 0.4424, norm(y): 1.0145, norm:1.4419, tok/sec: 100093.86, flops:105.05, batch-reuse:1
@ 3572 train 4.4889 , allloss: 4.4903, dt: 1302.85ms, fracRes: 0.3653, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4484, norm(y): 1.0144, norm:1.3800, tok/sec: 100603.91, flops:105.59, batch-reuse:1
@ 3573 train 4.5429 , allloss: 4.5441, dt: 1299.75ms, fracRes: 0.3658, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4503, norm(y): 1.0144, norm:1.4827, tok/sec: 100844.39, flops:105.84, batch-reuse:1
@ 3574 train 4.4351 , allloss: 4.4370, dt: 1283.57ms, fracRes: 0.3658, norm(attn): 0.2178, norm(output): 0.5508, norm(x): 0.4472, norm(y): 1.0144, norm:1.3968, tok/sec: 102115.04, flops:107.17, batch-reuse:1
@ 3575 train 4.4306 , allloss: 4.4320, dt: 1311.63ms, fracRes: 0.3663, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4500, norm(y): 1.0144, norm:1.2837, tok/sec: 99930.62, flops:104.88, batch-reuse:1
@ 3576 train 4.4048 , allloss: 4.4066, dt: 1312.88ms, fracRes: 0.3657, norm(attn): 0.2178, norm(output): 0.5469, norm(x): 0.4473, norm(y): 1.0145, norm:1.3712, tok/sec: 99835.67, flops:104.78, batch-reuse:1
@ 3577 train 4.5835 , allloss: 4.5853, dt: 1316.67ms, fracRes: 0.3657, norm(attn): 0.2168, norm(output): 0.5469, norm(x): 0.4483, norm(y): 1.0145, norm:1.5292, tok/sec: 99547.84, flops:104.48, batch-reuse:1
@ 3578 train 4.5100 , allloss: 4.5214, dt: 1309.01ms, fracRes: 0.3645, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4492, norm(y): 1.0145, norm:1.4625, tok/sec: 100130.65, flops:105.09, batch-reuse:1
@ 3579 train 4.4733 , allloss: 4.4744, dt: 1316.58ms, fracRes: 0.3646, norm(attn): 0.2188, norm(output): 0.5430, norm(x): 0.4470, norm(y): 1.0145, norm:1.4592, tok/sec: 99554.58, flops:104.48, batch-reuse:1
@ 3580 train 4.5073 , allloss: 4.5135, dt: 1309.14ms, fracRes: 0.3650, norm(attn): 0.2168, norm(output): 0.5391, norm(x): 0.4452, norm(y): 1.0145, norm:1.2761, tok/sec: 100120.87, flops:105.08, batch-reuse:1
@ 3581 train 4.4631 , allloss: 4.4649, dt: 1328.53ms, fracRes: 0.3619, norm(attn): 0.2197, norm(output): 0.5547, norm(x): 0.4516, norm(y): 1.0143, norm:1.4278, tok/sec: 98659.68, flops:103.55, batch-reuse:1
@ 3582 train 4.4851 , allloss: 4.4872, dt: 1332.68ms, fracRes: 0.3644, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4487, norm(y): 1.0146, norm:1.2968, tok/sec: 98351.89, flops:103.22, batch-reuse:1
@ 3583 train 4.5990 , allloss: 4.5998, dt: 1332.53ms, fracRes: 0.3655, norm(attn): 0.2148, norm(output): 0.5469, norm(x): 0.4483, norm(y): 1.0147, norm:1.6568, tok/sec: 98363.24, flops:103.23, batch-reuse:1
@ 3584 train 4.4914 , allloss: 4.4925, dt: 1311.08ms, fracRes: 0.3646, norm(attn): 0.2158, norm(output): 0.5469, norm(x): 0.4489, norm(y): 1.0146, norm:1.3872, tok/sec: 99972.56, flops:104.92, batch-reuse:1
@ 3585 train 4.4802 , allloss: 4.4816, dt: 1308.93ms, fracRes: 0.3644, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4499, norm(y): 1.0145, norm:1.2103, tok/sec: 100136.49, flops:105.10, batch-reuse:1
@ 3586 train 4.4037 , allloss: 4.4046, dt: 1313.22ms, fracRes: 0.3642, norm(attn): 0.2188, norm(output): 0.5469, norm(x): 0.4500, norm(y): 1.0144, norm:1.3222, tok/sec: 99809.72, flops:104.75, batch-reuse:1
@ 3587 train 4.5116 , allloss: 4.5146, dt: 1276.61ms, fracRes: 0.3660, norm(attn): 0.2188, norm(output): 0.5469, norm(x): 0.4491, norm(y): 1.0145, norm:1.2472, tok/sec: 102671.83, flops:107.76, batch-reuse:1
@ 3588 train 4.4666 , allloss: 4.4684, dt: 1288.45ms, fracRes: 0.3659, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4486, norm(y): 1.0145, norm:1.4075, tok/sec: 101728.49, flops:106.77, batch-reuse:1
@ 3589 train 4.5560 , allloss: 4.5572, dt: 1302.23ms, fracRes: 0.3664, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4493, norm(y): 1.0144, norm:1.2427, tok/sec: 100652.08, flops:105.64, batch-reuse:1
@ 3590 train 4.3780 , allloss: 4.3805, dt: 1287.58ms, fracRes: 0.3654, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4503, norm(y): 1.0144, norm:1.3138, tok/sec: 101797.32, flops:106.84, batch-reuse:1
@ 3591 train 4.4784 , allloss: 4.4801, dt: 1296.37ms, fracRes: 0.3647, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4523, norm(y): 1.0145, norm:1.4639, tok/sec: 101106.92, flops:106.11, batch-reuse:1
@ 3592 train 4.3739 , allloss: 4.3760, dt: 1313.60ms, fracRes: 0.3626, norm(attn): 0.2207, norm(output): 0.5547, norm(x): 0.4499, norm(y): 1.0145, norm:1.3157, tok/sec: 99781.02, flops:104.72, batch-reuse:1
@ 3593 train 4.5423 , allloss: 4.5447, dt: 1313.33ms, fracRes: 0.3621, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4501, norm(y): 1.0145, norm:1.3377, tok/sec: 99801.58, flops:104.74, batch-reuse:1
@ 3594 train 4.4463 , allloss: 4.4476, dt: 1287.23ms, fracRes: 0.3627, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4497, norm(y): 1.0145, norm:1.2968, tok/sec: 101824.60, flops:106.87, batch-reuse:1
@ 3595 train 4.5137 , allloss: 4.5147, dt: 1290.60ms, fracRes: 0.3638, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4519, norm(y): 1.0144, norm:1.2991, tok/sec: 101559.11, flops:106.59, batch-reuse:1
@ 3596 train 4.4777 , allloss: 4.4787, dt: 1300.75ms, fracRes: 0.3644, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4517, norm(y): 1.0144, norm:1.4311, tok/sec: 100766.65, flops:105.76, batch-reuse:1
@ 3597 train 4.4717 , allloss: 4.4731, dt: 1320.03ms, fracRes: 0.3666, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4495, norm(y): 1.0145, norm:1.2678, tok/sec: 99294.41, flops:104.21, batch-reuse:1
@ 3598 train 4.4826 , allloss: 4.4845, dt: 1314.56ms, fracRes: 0.3674, norm(attn): 0.2158, norm(output): 0.5508, norm(x): 0.4483, norm(y): 1.0146, norm:1.4892, tok/sec: 99707.51, flops:104.64, batch-reuse:1
@ 3599 train 4.4603 , allloss: 4.4616, dt: 1321.21ms, fracRes: 0.3677, norm(attn): 0.2158, norm(output): 0.5547, norm(x): 0.4495, norm(y): 1.0145, norm:1.5338, tok/sec: 99205.82, flops:104.12, batch-reuse:1
@ 3600 train 4.3907 , allloss: 4.3925, dt: 1305.81ms, fracRes: 0.3674, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4507, norm(y): 1.0145, norm:1.2217, tok/sec: 100375.68, flops:105.35, batch-reuse:1
@ 3601 train 4.4857 , allloss: 4.4874, dt: 1336.98ms, fracRes: 0.3656, norm(attn): 0.2178, norm(output): 0.5508, norm(x): 0.4496, norm(y): 1.0144, norm:1.4993, tok/sec: 98036.02, flops:102.89, batch-reuse:1
@ 3602 train 4.5153 , allloss: 4.5168, dt: 1318.88ms, fracRes: 0.3657, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4498, norm(y): 1.0144, norm:1.3710, tok/sec: 99381.16, flops:104.30, batch-reuse:1
@ 3603 train 4.5125 , allloss: 4.5144, dt: 1309.76ms, fracRes: 0.3655, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4496, norm(y): 1.0146, norm:1.5205, tok/sec: 100073.38, flops:105.03, batch-reuse:1
@ 3604 train 4.4860 , allloss: 4.4879, dt: 1292.00ms, fracRes: 0.3656, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4482, norm(y): 1.0146, norm:1.2579, tok/sec: 101449.10, flops:106.47, batch-reuse:1
@ 3605 train 4.4630 , allloss: 4.4639, dt: 1291.46ms, fracRes: 0.3639, norm(attn): 0.2188, norm(output): 0.5430, norm(x): 0.4468, norm(y): 1.0145, norm:1.4312, tok/sec: 101491.33, flops:106.52, batch-reuse:1
@ 3606 train 4.4258 , allloss: 4.4269, dt: 1316.08ms, fracRes: 0.3620, norm(attn): 0.2207, norm(output): 0.5508, norm(x): 0.4471, norm(y): 1.0144, norm:1.1793, tok/sec: 99592.81, flops:104.52, batch-reuse:1
@ 3607 train 4.4818 , allloss: 4.4829, dt: 1293.77ms, fracRes: 0.3628, norm(attn): 0.2188, norm(output): 0.5469, norm(x): 0.4484, norm(y): 1.0144, norm:1.4238, tok/sec: 101310.47, flops:106.33, batch-reuse:1
@ 3608 train 4.5082 , allloss: 4.5098, dt: 1311.44ms, fracRes: 0.3632, norm(attn): 0.2188, norm(output): 0.5469, norm(x): 0.4487, norm(y): 1.0145, norm:1.4858, tok/sec: 99945.43, flops:104.89, batch-reuse:1
@ 3609 train 4.5222 , allloss: 4.5272, dt: 1322.69ms, fracRes: 0.3637, norm(attn): 0.2197, norm(output): 0.5547, norm(x): 0.4515, norm(y): 1.0144, norm:1.3042, tok/sec: 99094.88, flops:104.00, batch-reuse:1
@ 3610 train 4.3982 , allloss: 4.4005, dt: 1301.14ms, fracRes: 0.3669, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4557, norm(y): 1.0145, norm:1.6713, tok/sec: 100736.33, flops:105.72, batch-reuse:1
@ 3611 train 4.4894 , allloss: 4.4909, dt: 1341.42ms, fracRes: 0.3664, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4509, norm(y): 1.0144, norm:1.3731, tok/sec: 97711.40, flops:102.55, batch-reuse:1
@ 3612 train 4.5180 , allloss: 4.5193, dt: 1303.92ms, fracRes: 0.3670, norm(attn): 0.2158, norm(output): 0.5508, norm(x): 0.4478, norm(y): 1.0145, norm:1.4927, tok/sec: 100521.47, flops:105.50, batch-reuse:1
@ 3613 train 4.4582 , allloss: 4.4594, dt: 1303.33ms, fracRes: 0.3665, norm(attn): 0.2178, norm(output): 0.5469, norm(x): 0.4483, norm(y): 1.0145, norm:1.2850, tok/sec: 100567.09, flops:105.55, batch-reuse:1
@ 3614 train 4.4892 , allloss: 4.4911, dt: 1298.29ms, fracRes: 0.3659, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4490, norm(y): 1.0145, norm:1.3031, tok/sec: 100957.52, flops:105.96, batch-reuse:1
@ 3615 train 4.4571 , allloss: 4.4583, dt: 1328.81ms, fracRes: 0.3651, norm(attn): 0.2178, norm(output): 0.5508, norm(x): 0.4489, norm(y): 1.0145, norm:1.3314, tok/sec: 98638.86, flops:103.52, batch-reuse:1
@ 3616 train 4.3759 , allloss: 4.3775, dt: 1313.34ms, fracRes: 0.3657, norm(attn): 0.2178, norm(output): 0.5508, norm(x): 0.4484, norm(y): 1.0145, norm:1.1945, tok/sec: 99800.53, flops:104.74, batch-reuse:1
@ 3617 train 4.4151 , allloss: 4.4164, dt: 1293.98ms, fracRes: 0.3651, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4476, norm(y): 1.0145, norm:1.4017, tok/sec: 101293.64, flops:106.31, batch-reuse:1
@ 3618 train 4.3499 , allloss: 4.3510, dt: 1313.83ms, fracRes: 0.3649, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4504, norm(y): 1.0145, norm:1.2554, tok/sec: 99763.20, flops:104.70, batch-reuse:1
@ 3619 train 4.4201 , allloss: 4.4211, dt: 1290.52ms, fracRes: 0.3652, norm(attn): 0.2168, norm(output): 0.5508, norm(x): 0.4486, norm(y): 1.0146, norm:1.2393, tok/sec: 101565.00, flops:106.59, batch-reuse:1
@ 3620 train 4.4738 , allloss: 4.4750, dt: 1296.87ms, fracRes: 0.3674, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4512, norm(y): 1.0145, norm:1.3411, tok/sec: 101068.33, flops:106.07, batch-reuse:1
@ 3621 train 4.4193 , allloss: 4.4207, dt: 1300.71ms, fracRes: 0.3647, norm(attn): 0.2197, norm(output): 0.5430, norm(x): 0.4502, norm(y): 1.0144, norm:1.6025, tok/sec: 100769.56, flops:105.76, batch-reuse:1
@ 3622 train 4.4884 , allloss: 4.4894, dt: 1300.18ms, fracRes: 0.3662, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4518, norm(y): 1.0145, norm:1.3785, tok/sec: 100810.53, flops:105.80, batch-reuse:1
@ 3623 train 4.4796 , allloss: 4.4809, dt: 1337.05ms, fracRes: 0.3660, norm(attn): 0.2148, norm(output): 0.5547, norm(x): 0.4503, norm(y): 1.0146, norm:1.3803, tok/sec: 98031.07, flops:102.89, batch-reuse:1
@ 3624 train 4.3445 , allloss: 4.3456, dt: 1335.65ms, fracRes: 0.3645, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4505, norm(y): 1.0145, norm:1.3493, tok/sec: 98133.29, flops:102.99, batch-reuse:1
@ 3625 train 4.4760 , allloss: 4.4775, dt: 1334.03ms, fracRes: 0.3657, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4509, norm(y): 1.0145, norm:1.1763, tok/sec: 98252.44, flops:103.12, batch-reuse:1
@ 3626 train 4.3830 , allloss: 4.3844, dt: 1330.05ms, fracRes: 0.3665, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4517, norm(y): 1.0146, norm:1.2206, tok/sec: 98546.67, flops:103.43, batch-reuse:1
@ 3627 train 4.4592 , allloss: 4.4609, dt: 1332.06ms, fracRes: 0.3658, norm(attn): 0.2168, norm(output): 0.5586, norm(x): 0.4527, norm(y): 1.0145, norm:1.5086, tok/sec: 98398.17, flops:103.27, batch-reuse:1
@ 3628 train 4.5012 , allloss: 4.5025, dt: 1315.56ms, fracRes: 0.3655, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4520, norm(y): 1.0145, norm:1.2471, tok/sec: 99632.07, flops:104.57, batch-reuse:1
@ 3629 train 4.4098 , allloss: 4.4110, dt: 1314.99ms, fracRes: 0.3656, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4522, norm(y): 1.0145, norm:1.4398, tok/sec: 99675.08, flops:104.61, batch-reuse:1
@ 3630 train 4.3583 , allloss: 4.3601, dt: 1297.19ms, fracRes: 0.3659, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4534, norm(y): 1.0145, norm:1.4226, tok/sec: 101042.69, flops:106.05, batch-reuse:1
@ 3631 train 4.4012 , allloss: 4.4029, dt: 1306.14ms, fracRes: 0.3667, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4504, norm(y): 1.0146, norm:1.3450, tok/sec: 100350.38, flops:105.32, batch-reuse:1
@ 3632 train 4.4096 , allloss: 4.4113, dt: 1295.91ms, fracRes: 0.3688, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4507, norm(y): 1.0147, norm:1.4692, tok/sec: 101143.02, flops:106.15, batch-reuse:1
@ 3633 train 4.5040 , allloss: 4.5058, dt: 1299.03ms, fracRes: 0.3668, norm(attn): 0.2158, norm(output): 0.5586, norm(x): 0.4530, norm(y): 1.0146, norm:1.2787, tok/sec: 100899.71, flops:105.90, batch-reuse:1
@ 3634 train 4.3327 , allloss: 4.3344, dt: 1314.52ms, fracRes: 0.3655, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4525, norm(y): 1.0146, norm:1.4035, tok/sec: 99710.93, flops:104.65, batch-reuse:1
@ 3635 train 4.4139 , allloss: 4.4156, dt: 1340.54ms, fracRes: 0.3652, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4564, norm(y): 1.0145, norm:1.5357, tok/sec: 97775.35, flops:102.62, batch-reuse:1
@ 3636 train 4.3693 , allloss: 4.3709, dt: 1328.86ms, fracRes: 0.3647, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4542, norm(y): 1.0145, norm:1.3765, tok/sec: 98634.69, flops:103.52, batch-reuse:1
@ 3637 train 4.4584 , allloss: 4.4602, dt: 1312.47ms, fracRes: 0.3653, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4516, norm(y): 1.0145, norm:1.4809, tok/sec: 99866.81, flops:104.81, batch-reuse:1
@ 3638 train 4.4276 , allloss: 4.4299, dt: 1310.39ms, fracRes: 0.3642, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4522, norm(y): 1.0145, norm:1.2828, tok/sec: 100025.22, flops:104.98, batch-reuse:1
@ 3639 train 4.4587 , allloss: 4.4609, dt: 1291.54ms, fracRes: 0.3643, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4534, norm(y): 1.0145, norm:1.3900, tok/sec: 101484.81, flops:106.51, batch-reuse:1
@ 3640 train 4.3805 , allloss: 4.3829, dt: 1311.26ms, fracRes: 0.3658, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4522, norm(y): 1.0145, norm:1.2715, tok/sec: 99958.86, flops:104.91, batch-reuse:1
@ 3641 train 4.4331 , allloss: 4.4342, dt: 1317.32ms, fracRes: 0.3661, norm(attn): 0.2188, norm(output): 0.5508, norm(x): 0.4528, norm(y): 1.0145, norm:1.3668, tok/sec: 99498.70, flops:104.43, batch-reuse:1
@ 3642 train 4.6045 , allloss: 4.6055, dt: 1334.98ms, fracRes: 0.3663, norm(attn): 0.2158, norm(output): 0.5586, norm(x): 0.4531, norm(y): 1.0145, norm:1.3072, tok/sec: 98182.71, flops:103.04, batch-reuse:1
@ 3643 train 4.4177 , allloss: 4.4193, dt: 1339.28ms, fracRes: 0.3659, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4539, norm(y): 1.0146, norm:1.3939, tok/sec: 97867.52, flops:102.71, batch-reuse:1
@ 3644 train 4.4949 , allloss: 4.4966, dt: 1314.10ms, fracRes: 0.3654, norm(attn): 0.2168, norm(output): 0.5586, norm(x): 0.4527, norm(y): 1.0146, norm:1.3408, tok/sec: 99742.46, flops:104.68, batch-reuse:1
@ 3645 train 4.4239 , allloss: 4.4262, dt: 1303.40ms, fracRes: 0.3648, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4516, norm(y): 1.0146, norm:1.2643, tok/sec: 100561.94, flops:105.54, batch-reuse:1
@ 3646 train 4.3959 , allloss: 4.3973, dt: 1302.38ms, fracRes: 0.3655, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4523, norm(y): 1.0146, norm:1.3340, tok/sec: 100640.18, flops:105.62, batch-reuse:1
@ 3647 train 4.4251 , allloss: 4.4263, dt: 1320.47ms, fracRes: 0.3650, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4524, norm(y): 1.0145, norm:1.2422, tok/sec: 99261.66, flops:104.18, batch-reuse:1
@ 3648 train 4.4791 , allloss: 4.4807, dt: 1300.04ms, fracRes: 0.3650, norm(attn): 0.2178, norm(output): 0.5547, norm(x): 0.4524, norm(y): 1.0146, norm:1.2551, tok/sec: 100821.79, flops:105.81, batch-reuse:1
@ 3649 train 4.4787 , allloss: 4.4804, dt: 1307.86ms, fracRes: 0.3656, norm(attn): 0.2168, norm(output): 0.5586, norm(x): 0.4555, norm(y): 1.0146, norm:1.4301, tok/sec: 100218.59, flops:105.18, batch-reuse:1
@ 3650 train 4.4863 , allloss: 4.4921, dt: 1345.04ms, fracRes: 0.3662, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4541, norm(y): 1.0146, norm:1.1985, tok/sec: 97448.05, flops:102.27, batch-reuse:1
@ 3651 train 4.4438 , allloss: 4.4462, dt: 1345.18ms, fracRes: 0.3650, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4560, norm(y): 1.0145, norm:1.4006, tok/sec: 97438.15, flops:102.26, batch-reuse:1
@ 3652 train 4.3673 , allloss: 4.3683, dt: 1342.56ms, fracRes: 0.3650, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4515, norm(y): 1.0146, norm:1.2675, tok/sec: 97628.51, flops:102.46, batch-reuse:1
@ 3653 train 4.3930 , allloss: 4.3943, dt: 1338.62ms, fracRes: 0.3655, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4541, norm(y): 1.0147, norm:1.4492, tok/sec: 97915.92, flops:102.76, batch-reuse:1
@ 3654 train 4.5200 , allloss: 4.5220, dt: 1344.39ms, fracRes: 0.3651, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4550, norm(y): 1.0146, norm:1.4187, tok/sec: 97495.59, flops:102.32, batch-reuse:1
@ 3655 train 4.5254 , allloss: 4.5266, dt: 1315.43ms, fracRes: 0.3653, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4549, norm(y): 1.0145, norm:1.3814, tok/sec: 99642.29, flops:104.58, batch-reuse:1
@ 3656 train 4.5009 , allloss: 4.5024, dt: 1281.61ms, fracRes: 0.3642, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4551, norm(y): 1.0145, norm:1.4297, tok/sec: 102271.38, flops:107.34, batch-reuse:1
@ 3657 train 4.4978 , allloss: 4.4995, dt: 1293.00ms, fracRes: 0.3663, norm(attn): 0.2168, norm(output): 0.5547, norm(x): 0.4513, norm(y): 1.0146, norm:1.2910, tok/sec: 101370.63, flops:106.39, batch-reuse:1
@ 3658 train 4.3779 , allloss: 4.3787, dt: 1284.71ms, fracRes: 0.3641, norm(attn): 0.2188, norm(output): 0.5547, norm(x): 0.4521, norm(y): 1.0146, norm:1.2241, tok/sec: 102024.70, flops:107.08, batch-reuse:1
@ 3659 train 4.4582 , allloss: 4.4596, dt: 1308.77ms, fracRes: 0.3634, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4571, norm(y): 1.0145, norm:1.4256, tok/sec: 100149.31, flops:105.11, batch-reuse:1
@ 3660 train 4.3077 , allloss: 4.3093, dt: 1292.73ms, fracRes: 0.3636, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4562, norm(y): 1.0145, norm:1.4197, tok/sec: 101391.57, flops:106.41, batch-reuse:1
@ 3661 train 4.3448 , allloss: 4.3460, dt: 1320.26ms, fracRes: 0.3636, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4564, norm(y): 1.0145, norm:1.3703, tok/sec: 99277.68, flops:104.19, batch-reuse:1
@ 3662 train 4.1992 , allloss: 4.2018, dt: 1308.69ms, fracRes: 0.3645, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4554, norm(y): 1.0145, norm:1.1998, tok/sec: 100154.87, flops:105.11, batch-reuse:1
@ 3663 train 4.2840 , allloss: 4.2860, dt: 1306.44ms, fracRes: 0.3653, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4549, norm(y): 1.0145, norm:1.3919, tok/sec: 100327.86, flops:105.30, batch-reuse:1
@ 3664 train 4.3482 , allloss: 4.3495, dt: 1290.61ms, fracRes: 0.3646, norm(attn): 0.2168, norm(output): 0.5586, norm(x): 0.4570, norm(y): 1.0145, norm:1.1249, tok/sec: 101558.38, flops:106.59, batch-reuse:1
@ 3665 train 4.3716 , allloss: 4.3729, dt: 1295.15ms, fracRes: 0.3640, norm(attn): 0.2168, norm(output): 0.5625, norm(x): 0.4595, norm(y): 1.0145, norm:1.5097, tok/sec: 101202.55, flops:106.21, batch-reuse:1
@ 3666 train 4.2482 , allloss: 4.2490, dt: 1290.40ms, fracRes: 0.3657, norm(attn): 0.2168, norm(output): 0.5625, norm(x): 0.4568, norm(y): 1.0146, norm:1.3054, tok/sec: 101574.48, flops:106.60, batch-reuse:1
@ 3667 train 4.3509 , allloss: 4.3520, dt: 1283.92ms, fracRes: 0.3660, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4579, norm(y): 1.0146, norm:1.3784, tok/sec: 102087.64, flops:107.14, batch-reuse:1
@ 3668 train 4.3544 , allloss: 4.3557, dt: 1313.96ms, fracRes: 0.3658, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4551, norm(y): 1.0145, norm:1.4819, tok/sec: 99753.77, flops:104.69, batch-reuse:1
@ 3669 train 4.4257 , allloss: 4.4274, dt: 1296.74ms, fracRes: 0.3673, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4581, norm(y): 1.0145, norm:1.6511, tok/sec: 101078.42, flops:106.08, batch-reuse:1
@ 3670 train 4.3977 , allloss: 4.4012, dt: 1303.90ms, fracRes: 0.3669, norm(attn): 0.2168, norm(output): 0.5625, norm(x): 0.4576, norm(y): 1.0145, norm:1.5022, tok/sec: 100523.36, flops:105.50, batch-reuse:1
@ 3671 train 4.2612 , allloss: 4.2626, dt: 1312.39ms, fracRes: 0.3673, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4551, norm(y): 1.0145, norm:1.2941, tok/sec: 99872.42, flops:104.82, batch-reuse:1
@ 3672 train 4.3386 , allloss: 4.3401, dt: 1302.08ms, fracRes: 0.3678, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4537, norm(y): 1.0146, norm:1.3050, tok/sec: 100663.65, flops:105.65, batch-reuse:1
@ 3673 train 4.3220 , allloss: 4.3273, dt: 1315.17ms, fracRes: 0.3664, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4551, norm(y): 1.0145, norm:1.3134, tok/sec: 99661.89, flops:104.60, batch-reuse:1
@ 3674 train 4.2817 , allloss: 4.2830, dt: 1322.22ms, fracRes: 0.3652, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4580, norm(y): 1.0145, norm:1.3404, tok/sec: 99130.58, flops:104.04, batch-reuse:1
@ 3675 train 4.3621 , allloss: 4.3630, dt: 1323.63ms, fracRes: 0.3660, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4561, norm(y): 1.0147, norm:1.3996, tok/sec: 99024.86, flops:103.93, batch-reuse:1
@ 3676 train 4.3788 , allloss: 4.3802, dt: 1287.41ms, fracRes: 0.3652, norm(attn): 0.2168, norm(output): 0.5625, norm(x): 0.4562, norm(y): 1.0147, norm:1.2515, tok/sec: 101810.42, flops:106.85, batch-reuse:1
@ 3677 train 4.3366 , allloss: 4.3380, dt: 1317.80ms, fracRes: 0.3647, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4569, norm(y): 1.0146, norm:1.4388, tok/sec: 99462.58, flops:104.39, batch-reuse:1
@ 3678 train 4.3412 , allloss: 4.3423, dt: 1332.41ms, fracRes: 0.3659, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4562, norm(y): 1.0146, norm:1.3072, tok/sec: 98372.22, flops:103.24, batch-reuse:1
@ 3679 train 4.2854 , allloss: 4.2863, dt: 1339.28ms, fracRes: 0.3668, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4568, norm(y): 1.0147, norm:1.5615, tok/sec: 97867.71, flops:102.71, batch-reuse:1
@ 3680 train 4.2267 , allloss: 4.2280, dt: 1341.77ms, fracRes: 0.3661, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4566, norm(y): 1.0146, norm:1.1875, tok/sec: 97685.64, flops:102.52, batch-reuse:1
@ 3681 train 4.2725 , allloss: 4.2741, dt: 1344.56ms, fracRes: 0.3669, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4539, norm(y): 1.0147, norm:1.4400, tok/sec: 97483.09, flops:102.31, batch-reuse:1
@ 3682 train 4.2170 , allloss: 4.2191, dt: 1332.17ms, fracRes: 0.3690, norm(attn): 0.2178, norm(output): 0.5586, norm(x): 0.4545, norm(y): 1.0147, norm:1.2850, tok/sec: 98389.63, flops:103.26, batch-reuse:1
@ 3683 train 4.3434 , allloss: 4.3454, dt: 1319.37ms, fracRes: 0.3685, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4568, norm(y): 1.0147, norm:1.2776, tok/sec: 99344.69, flops:104.26, batch-reuse:1
@ 3684 train 4.3950 , allloss: 4.3960, dt: 1344.96ms, fracRes: 0.3683, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4541, norm(y): 1.0146, norm:1.3218, tok/sec: 97453.89, flops:102.28, batch-reuse:1
@ 3685 train 4.2536 , allloss: 4.2544, dt: 1329.18ms, fracRes: 0.3683, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4533, norm(y): 1.0146, norm:1.3727, tok/sec: 98611.30, flops:103.49, batch-reuse:1
@ 3686 train 4.2683 , allloss: 4.2698, dt: 1290.67ms, fracRes: 0.3669, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4570, norm(y): 1.0146, norm:1.3060, tok/sec: 101553.24, flops:106.58, batch-reuse:1
@ 3687 train 4.3172 , allloss: 4.3188, dt: 1316.75ms, fracRes: 0.3664, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4580, norm(y): 1.0146, norm:1.2869, tok/sec: 99541.80, flops:104.47, batch-reuse:1
@ 3688 train 4.3763 , allloss: 4.3772, dt: 1295.03ms, fracRes: 0.3673, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4578, norm(y): 1.0146, norm:1.2662, tok/sec: 101211.49, flops:106.22, batch-reuse:1
@ 3689 train 4.3755 , allloss: 4.3766, dt: 1317.02ms, fracRes: 0.3665, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4610, norm(y): 1.0145, norm:1.5532, tok/sec: 99522.01, flops:104.45, batch-reuse:1
@ 3690 train 4.2556 , allloss: 4.2572, dt: 1339.08ms, fracRes: 0.3669, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4558, norm(y): 1.0146, norm:1.3425, tok/sec: 97882.12, flops:102.73, batch-reuse:1
@ 3691 train 4.3583 , allloss: 4.3592, dt: 1313.97ms, fracRes: 0.3672, norm(attn): 0.2168, norm(output): 0.5586, norm(x): 0.4582, norm(y): 1.0146, norm:1.2695, tok/sec: 99752.65, flops:104.69, batch-reuse:1
@ 3692 train 4.3125 , allloss: 4.3134, dt: 1335.55ms, fracRes: 0.3679, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4587, norm(y): 1.0147, norm:1.3457, tok/sec: 98140.56, flops:103.00, batch-reuse:1
@ 3693 train 4.3569 , allloss: 4.3583, dt: 1337.79ms, fracRes: 0.3662, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4562, norm(y): 1.0145, norm:1.2956, tok/sec: 97976.60, flops:102.83, batch-reuse:1
@ 3694 train 4.3364 , allloss: 4.3380, dt: 1330.50ms, fracRes: 0.3664, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4558, norm(y): 1.0146, norm:1.3019, tok/sec: 98513.28, flops:103.39, batch-reuse:1
@ 3695 train 4.3199 , allloss: 4.3210, dt: 1345.15ms, fracRes: 0.3661, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4550, norm(y): 1.0146, norm:1.2677, tok/sec: 97440.68, flops:102.27, batch-reuse:1
@ 3696 train 4.3426 , allloss: 4.3441, dt: 1341.42ms, fracRes: 0.3663, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4565, norm(y): 1.0146, norm:1.2292, tok/sec: 97711.18, flops:102.55, batch-reuse:1
@ 3697 train 4.3155 , allloss: 4.3165, dt: 1319.84ms, fracRes: 0.3657, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4557, norm(y): 1.0147, norm:1.3685, tok/sec: 99308.76, flops:104.23, batch-reuse:1
@ 3698 train 4.4171 , allloss: 4.4181, dt: 1324.38ms, fracRes: 0.3669, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4583, norm(y): 1.0147, norm:1.1877, tok/sec: 98968.81, flops:103.87, batch-reuse:1
@ 3699 train 4.2208 , allloss: 4.2219, dt: 1338.30ms, fracRes: 0.3670, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4556, norm(y): 1.0147, norm:1.4611, tok/sec: 97939.42, flops:102.79, batch-reuse:1
@ 3700 train 4.3311 , allloss: 4.3325, dt: 1313.00ms, fracRes: 0.3659, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4568, norm(y): 1.0146, norm:1.3323, tok/sec: 99826.26, flops:104.77, batch-reuse:1
@ 3701 train 4.3839 , allloss: 4.3857, dt: 1339.69ms, fracRes: 0.3673, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4558, norm(y): 1.0146, norm:1.1963, tok/sec: 97837.77, flops:102.68, batch-reuse:1
@ 3702 train 4.3252 , allloss: 4.3259, dt: 1300.05ms, fracRes: 0.3684, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4541, norm(y): 1.0147, norm:1.3518, tok/sec: 100820.40, flops:105.81, batch-reuse:1
@ 3703 train 4.2619 , allloss: 4.2634, dt: 1286.29ms, fracRes: 0.3693, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4558, norm(y): 1.0147, norm:1.1833, tok/sec: 101899.08, flops:106.94, batch-reuse:1
@ 3704 train 4.2742 , allloss: 4.2758, dt: 1297.24ms, fracRes: 0.3677, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4602, norm(y): 1.0146, norm:1.4032, tok/sec: 101038.87, flops:106.04, batch-reuse:1
@ 3705 train 4.3632 , allloss: 4.3669, dt: 1317.85ms, fracRes: 0.3676, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4593, norm(y): 1.0145, norm:1.1818, tok/sec: 99458.69, flops:104.38, batch-reuse:1
@ 3706 train 4.3033 , allloss: 4.3054, dt: 1307.77ms, fracRes: 0.3687, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4584, norm(y): 1.0146, norm:1.5334, tok/sec: 100225.67, flops:105.19, batch-reuse:1
@ 3707 train 4.4504 , allloss: 4.4528, dt: 1301.39ms, fracRes: 0.3679, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4616, norm(y): 1.0146, norm:1.2906, tok/sec: 100716.75, flops:105.70, batch-reuse:1
@ 3708 train 4.4801 , allloss: 4.4832, dt: 1311.03ms, fracRes: 0.3657, norm(attn): 0.2207, norm(output): 0.5586, norm(x): 0.4609, norm(y): 1.0146, norm:1.4617, tok/sec: 99976.42, flops:104.93, batch-reuse:1
@ 3709 train 4.4757 , allloss: 4.4773, dt: 1309.81ms, fracRes: 0.3650, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4604, norm(y): 1.0146, norm:1.1514, tok/sec: 100069.24, flops:105.02, batch-reuse:1
@ 3710 train 4.5157 , allloss: 4.5184, dt: 1315.44ms, fracRes: 0.3654, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4605, norm(y): 1.0146, norm:1.2824, tok/sec: 99641.39, flops:104.58, batch-reuse:1
@ 3711 train 4.5499 , allloss: 4.5515, dt: 1344.89ms, fracRes: 0.3654, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4591, norm(y): 1.0146, norm:1.2893, tok/sec: 97459.57, flops:102.29, batch-reuse:1
@ 3712 train 4.5218 , allloss: 4.5236, dt: 1318.24ms, fracRes: 0.3652, norm(attn): 0.2227, norm(output): 0.5586, norm(x): 0.4618, norm(y): 1.0146, norm:1.4787, tok/sec: 99429.84, flops:104.35, batch-reuse:1
@ 3713 train 4.6014 , allloss: 4.6031, dt: 1336.73ms, fracRes: 0.3678, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4600, norm(y): 1.0147, norm:1.5626, tok/sec: 98054.21, flops:102.91, batch-reuse:1
@ 3714 train 4.5305 , allloss: 4.5345, dt: 1300.54ms, fracRes: 0.3672, norm(attn): 0.2197, norm(output): 0.5586, norm(x): 0.4602, norm(y): 1.0147, norm:1.6458, tok/sec: 100782.83, flops:105.77, batch-reuse:1
@ 3715 train 4.5253 , allloss: 4.5271, dt: 1301.12ms, fracRes: 0.3675, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4603, norm(y): 1.0147, norm:1.3984, tok/sec: 100738.03, flops:105.73, batch-reuse:1
@ 3716 train 4.4533 , allloss: 4.4550, dt: 1295.59ms, fracRes: 0.3677, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4584, norm(y): 1.0147, norm:1.3445, tok/sec: 101167.80, flops:106.18, batch-reuse:1
@ 3717 train 4.4631 , allloss: 4.4641, dt: 1311.73ms, fracRes: 0.3658, norm(attn): 0.2217, norm(output): 0.5586, norm(x): 0.4596, norm(y): 1.0146, norm:1.4297, tok/sec: 99922.92, flops:104.87, batch-reuse:1
@ 3718 train 4.4456 , allloss: 4.4466, dt: 1316.47ms, fracRes: 0.3666, norm(attn): 0.2217, norm(output): 0.5625, norm(x): 0.4607, norm(y): 1.0146, norm:1.4087, tok/sec: 99563.18, flops:104.49, batch-reuse:1
@ 3719 train 4.5029 , allloss: 4.5040, dt: 1313.01ms, fracRes: 0.3687, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4588, norm(y): 1.0147, norm:1.1942, tok/sec: 99825.27, flops:104.77, batch-reuse:1
@ 3720 train 4.4255 , allloss: 4.4265, dt: 1312.81ms, fracRes: 0.3697, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4598, norm(y): 1.0147, norm:1.5672, tok/sec: 99841.17, flops:104.79, batch-reuse:1
@ 3721 train 4.4491 , allloss: 4.4501, dt: 1312.92ms, fracRes: 0.3689, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4639, norm(y): 1.0147, norm:1.3257, tok/sec: 99832.74, flops:104.78, batch-reuse:1
@ 3722 train 4.3901 , allloss: 4.3919, dt: 1283.88ms, fracRes: 0.3687, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4613, norm(y): 1.0147, norm:1.3021, tok/sec: 102090.52, flops:107.15, batch-reuse:1
@ 3723 train 4.4881 , allloss: 4.4900, dt: 1313.69ms, fracRes: 0.3671, norm(attn): 0.2188, norm(output): 0.5586, norm(x): 0.4597, norm(y): 1.0146, norm:1.3647, tok/sec: 99774.16, flops:104.71, batch-reuse:1
@ 3724 train 4.5111 , allloss: 4.5139, dt: 1294.23ms, fracRes: 0.3674, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4631, norm(y): 1.0145, norm:1.3419, tok/sec: 101273.91, flops:106.29, batch-reuse:1
@ 3725 train 4.5037 , allloss: 4.5050, dt: 1313.39ms, fracRes: 0.3675, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4634, norm(y): 1.0146, norm:1.2437, tok/sec: 99796.87, flops:104.74, batch-reuse:1
@ 3726 train 4.5187 , allloss: 4.5210, dt: 1334.13ms, fracRes: 0.3677, norm(attn): 0.2178, norm(output): 0.5625, norm(x): 0.4635, norm(y): 1.0147, norm:1.5221, tok/sec: 98245.29, flops:103.11, batch-reuse:1
@ 3727 train 4.4854 , allloss: 4.4873, dt: 1337.97ms, fracRes: 0.3677, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4624, norm(y): 1.0148, norm:1.4084, tok/sec: 97963.21, flops:102.81, batch-reuse:1
@ 3728 train 4.4524 , allloss: 4.4541, dt: 1331.71ms, fracRes: 0.3672, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4617, norm(y): 1.0147, norm:1.3890, tok/sec: 98423.72, flops:103.30, batch-reuse:1
@ 3729 train 4.4757 , allloss: 4.4772, dt: 1322.13ms, fracRes: 0.3658, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4671, norm(y): 1.0146, norm:1.2585, tok/sec: 99137.29, flops:104.05, batch-reuse:1
@ 3730 train 4.5130 , allloss: 4.5147, dt: 1281.64ms, fracRes: 0.3661, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4648, norm(y): 1.0148, norm:1.4419, tok/sec: 102268.70, flops:107.33, batch-reuse:1
@ 3731 train 4.4304 , allloss: 4.4331, dt: 1307.34ms, fracRes: 0.3656, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4651, norm(y): 1.0148, norm:1.3209, tok/sec: 100258.91, flops:105.22, batch-reuse:1
@ 3732 train 4.5096 , allloss: 4.5117, dt: 1302.58ms, fracRes: 0.3648, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4655, norm(y): 1.0147, norm:1.2857, tok/sec: 100625.07, flops:105.61, batch-reuse:1
@ 3733 train 4.5251 , allloss: 4.5262, dt: 1323.72ms, fracRes: 0.3648, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4637, norm(y): 1.0147, norm:1.5007, tok/sec: 99017.55, flops:103.92, batch-reuse:1
@ 3734 train 4.4908 , allloss: 4.4924, dt: 1333.76ms, fracRes: 0.3646, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4631, norm(y): 1.0146, norm:1.3899, tok/sec: 98272.69, flops:103.14, batch-reuse:1
@ 3735 train 4.5688 , allloss: 4.5704, dt: 1337.15ms, fracRes: 0.3685, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4642, norm(y): 1.0148, norm:1.3238, tok/sec: 98023.37, flops:102.88, batch-reuse:1
@ 3736 train 4.5632 , allloss: 4.5659, dt: 1337.97ms, fracRes: 0.3684, norm(attn): 0.2148, norm(output): 0.5664, norm(x): 0.4637, norm(y): 1.0149, norm:1.3821, tok/sec: 97963.45, flops:102.81, batch-reuse:1
@ 3737 train 4.4494 , allloss: 4.4518, dt: 1334.91ms, fracRes: 0.3672, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4653, norm(y): 1.0148, norm:1.3158, tok/sec: 98188.09, flops:103.05, batch-reuse:1
@ 3738 train 4.4402 , allloss: 4.4419, dt: 1338.62ms, fracRes: 0.3678, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4644, norm(y): 1.0147, norm:1.4979, tok/sec: 97915.72, flops:102.76, batch-reuse:1
@ 3739 train 4.4523 , allloss: 4.4537, dt: 1339.94ms, fracRes: 0.3672, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4639, norm(y): 1.0147, norm:1.3774, tok/sec: 97819.27, flops:102.66, batch-reuse:1
@ 3740 train 4.5378 , allloss: 4.5389, dt: 1338.78ms, fracRes: 0.3681, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4599, norm(y): 1.0147, norm:1.4146, tok/sec: 97904.12, flops:102.75, batch-reuse:1
@ 3741 train 4.6579 , allloss: 4.6589, dt: 1335.99ms, fracRes: 0.3677, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4662, norm(y): 1.0147, norm:1.6498, tok/sec: 98108.33, flops:102.97, batch-reuse:1
@ 3742 train 4.4213 , allloss: 4.4225, dt: 1324.04ms, fracRes: 0.3678, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4643, norm(y): 1.0147, norm:1.4210, tok/sec: 98994.26, flops:103.90, batch-reuse:1
@ 3743 train 4.4873 , allloss: 4.4882, dt: 1317.94ms, fracRes: 0.3688, norm(attn): 0.2158, norm(output): 0.5625, norm(x): 0.4629, norm(y): 1.0147, norm:1.4179, tok/sec: 99452.10, flops:104.38, batch-reuse:1
@ 3744 train 4.6814 , allloss: 4.6823, dt: 1342.04ms, fracRes: 0.3693, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4650, norm(y): 1.0146, norm:1.3862, tok/sec: 97666.15, flops:102.50, batch-reuse:1
@ 3745 train 4.4994 , allloss: 4.5004, dt: 1299.87ms, fracRes: 0.3687, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4689, norm(y): 1.0146, norm:1.5107, tok/sec: 100834.73, flops:105.83, batch-reuse:1
@ 3746 train 4.4589 , allloss: 4.4600, dt: 1311.01ms, fracRes: 0.3709, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4660, norm(y): 1.0147, norm:1.3843, tok/sec: 99977.58, flops:104.93, batch-reuse:1
@ 3747 train 4.4589 , allloss: 4.4605, dt: 1313.55ms, fracRes: 0.3704, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4641, norm(y): 1.0148, norm:1.5705, tok/sec: 99784.21, flops:104.73, batch-reuse:1
@ 3748 train 4.4630 , allloss: 4.4654, dt: 1289.48ms, fracRes: 0.3679, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4650, norm(y): 1.0148, norm:1.3566, tok/sec: 101647.33, flops:106.68, batch-reuse:1
@ 3749 train 4.4972 , allloss: 4.4985, dt: 1311.81ms, fracRes: 0.3657, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4645, norm(y): 1.0147, norm:1.5650, tok/sec: 99916.87, flops:104.86, batch-reuse:1
@ 3750 train 4.5128 , allloss: 4.5138, dt: 1274.78ms, fracRes: 0.3667, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4617, norm(y): 1.0147, norm:1.3074, tok/sec: 102819.19, flops:107.91, batch-reuse:1
@ 3751 train 4.5135 , allloss: 4.5144, dt: 1308.99ms, fracRes: 0.3675, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4602, norm(y): 1.0148, norm:1.4725, tok/sec: 100131.83, flops:105.09, batch-reuse:1
@ 3752 train 4.4012 , allloss: 4.4023, dt: 1311.77ms, fracRes: 0.3682, norm(attn): 0.2227, norm(output): 0.5664, norm(x): 0.4669, norm(y): 1.0147, norm:1.4806, tok/sec: 99919.61, flops:104.87, batch-reuse:1
@ 3753 train 4.4977 , allloss: 4.4984, dt: 1305.53ms, fracRes: 0.3666, norm(attn): 0.2227, norm(output): 0.5664, norm(x): 0.4647, norm(y): 1.0147, norm:1.5126, tok/sec: 100397.90, flops:105.37, batch-reuse:1
@ 3754 train 4.4483 , allloss: 4.4497, dt: 1343.36ms, fracRes: 0.3667, norm(attn): 0.2188, norm(output): 0.5625, norm(x): 0.4606, norm(y): 1.0147, norm:1.5432, tok/sec: 97570.62, flops:102.40, batch-reuse:1
@ 3755 train 4.4589 , allloss: 4.4611, dt: 1343.83ms, fracRes: 0.3659, norm(attn): 0.2217, norm(output): 0.5664, norm(x): 0.4620, norm(y): 1.0147, norm:1.4406, tok/sec: 97535.81, flops:102.37, batch-reuse:1
@ 3756 train 4.5438 , allloss: 4.5455, dt: 1343.30ms, fracRes: 0.3653, norm(attn): 0.2207, norm(output): 0.5625, norm(x): 0.4628, norm(y): 1.0146, norm:1.5077, tok/sec: 97574.80, flops:102.41, batch-reuse:1
@ 3757 train 4.4764 , allloss: 4.4772, dt: 1352.08ms, fracRes: 0.3683, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4604, norm(y): 1.0148, norm:1.4436, tok/sec: 96941.22, flops:101.74, batch-reuse:1
@ 3758 train 4.4570 , allloss: 4.4585, dt: 1337.40ms, fracRes: 0.3688, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4594, norm(y): 1.0148, norm:1.3746, tok/sec: 98004.86, flops:102.86, batch-reuse:1
@ 3759 train 4.4955 , allloss: 4.4977, dt: 1272.89ms, fracRes: 0.3693, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4603, norm(y): 1.0148, norm:1.4572, tok/sec: 102971.85, flops:108.07, batch-reuse:1
@ 3760 train 4.5134 , allloss: 4.5145, dt: 1303.66ms, fracRes: 0.3694, norm(attn): 0.2148, norm(output): 0.5664, norm(x): 0.4596, norm(y): 1.0147, norm:1.2998, tok/sec: 100541.80, flops:105.52, batch-reuse:1
@ 3761 train 4.5758 , allloss: 4.5769, dt: 1320.87ms, fracRes: 0.3703, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4626, norm(y): 1.0148, norm:1.7025, tok/sec: 99231.88, flops:104.15, batch-reuse:1
@ 3762 train 4.3554 , allloss: 4.3593, dt: 1335.81ms, fracRes: 0.3697, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4630, norm(y): 1.0148, norm:1.5016, tok/sec: 98121.87, flops:102.98, batch-reuse:1
@ 3763 train 4.5386 , allloss: 4.5394, dt: 1307.61ms, fracRes: 0.3687, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4624, norm(y): 1.0147, norm:1.5895, tok/sec: 100237.87, flops:105.20, batch-reuse:1
@ 3764 train 4.4726 , allloss: 4.4737, dt: 1298.13ms, fracRes: 0.3665, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4622, norm(y): 1.0146, norm:1.1676, tok/sec: 100969.95, flops:105.97, batch-reuse:1
@ 3765 train 4.4427 , allloss: 4.4439, dt: 1304.43ms, fracRes: 0.3663, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4629, norm(y): 1.0147, norm:1.3094, tok/sec: 100482.39, flops:105.46, batch-reuse:1
@ 3766 train 4.4057 , allloss: 4.4073, dt: 1342.90ms, fracRes: 0.3670, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4628, norm(y): 1.0147, norm:1.1454, tok/sec: 97603.79, flops:102.44, batch-reuse:1
@ 3767 train 4.4478 , allloss: 4.4489, dt: 1339.81ms, fracRes: 0.3676, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4641, norm(y): 1.0146, norm:1.2611, tok/sec: 97829.10, flops:102.67, batch-reuse:1
@ 3768 train 4.4203 , allloss: 4.4231, dt: 1286.62ms, fracRes: 0.3679, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4636, norm(y): 1.0147, norm:1.2863, tok/sec: 101873.45, flops:106.92, batch-reuse:1
@ 3769 train 4.6283 , allloss: 4.6294, dt: 1288.09ms, fracRes: 0.3683, norm(attn): 0.2168, norm(output): 0.5664, norm(x): 0.4626, norm(y): 1.0148, norm:1.1875, tok/sec: 101757.22, flops:106.80, batch-reuse:1
@ 3770 train 4.4858 , allloss: 4.4865, dt: 1300.72ms, fracRes: 0.3677, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4622, norm(y): 1.0147, norm:1.3650, tok/sec: 100769.01, flops:105.76, batch-reuse:1
@ 3771 train 4.4692 , allloss: 4.4702, dt: 1311.80ms, fracRes: 0.3676, norm(attn): 0.2197, norm(output): 0.5625, norm(x): 0.4616, norm(y): 1.0147, norm:1.2354, tok/sec: 99917.45, flops:104.87, batch-reuse:1
@ 3772 train 4.4874 , allloss: 4.4882, dt: 1300.44ms, fracRes: 0.3661, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4623, norm(y): 1.0146, norm:1.2206, tok/sec: 100790.24, flops:105.78, batch-reuse:1
@ 3773 train 4.4884 , allloss: 4.4894, dt: 1327.47ms, fracRes: 0.3673, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4615, norm(y): 1.0148, norm:1.2091, tok/sec: 98738.13, flops:103.63, batch-reuse:1
@ 3774 train 4.4537 , allloss: 4.4554, dt: 1314.89ms, fracRes: 0.3678, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4621, norm(y): 1.0148, norm:1.4218, tok/sec: 99682.74, flops:104.62, batch-reuse:1
@ 3775 train 4.4698 , allloss: 4.4736, dt: 1322.48ms, fracRes: 0.3688, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4641, norm(y): 1.0147, norm:1.2650, tok/sec: 99110.66, flops:104.02, batch-reuse:1
@ 3776 train 4.5223 , allloss: 4.5243, dt: 1279.14ms, fracRes: 0.3688, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4672, norm(y): 1.0146, norm:1.6210, tok/sec: 102468.85, flops:107.54, batch-reuse:1
@ 3777 train 4.4772 , allloss: 4.4781, dt: 1292.05ms, fracRes: 0.3705, norm(attn): 0.2178, norm(output): 0.5664, norm(x): 0.4623, norm(y): 1.0147, norm:1.3240, tok/sec: 101444.94, flops:106.47, batch-reuse:1
@ 3778 train 4.4469 , allloss: 4.4474, dt: 1287.36ms, fracRes: 0.3697, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4611, norm(y): 1.0147, norm:1.3212, tok/sec: 101814.48, flops:106.86, batch-reuse:1
@ 3779 train 4.3886 , allloss: 4.3895, dt: 1308.29ms, fracRes: 0.3681, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4648, norm(y): 1.0147, norm:1.3829, tok/sec: 100186.03, flops:105.15, batch-reuse:1
@ 3780 train 4.4778 , allloss: 4.4799, dt: 1309.09ms, fracRes: 0.3671, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4638, norm(y): 1.0147, norm:1.3436, tok/sec: 100124.41, flops:105.08, batch-reuse:1
@ 3781 train 4.3659 , allloss: 4.3673, dt: 1300.34ms, fracRes: 0.3678, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4627, norm(y): 1.0148, norm:1.2764, tok/sec: 100798.50, flops:105.79, batch-reuse:1
@ 3782 train 4.6384 , allloss: 4.6418, dt: 1327.38ms, fracRes: 0.3660, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4640, norm(y): 1.0147, norm:1.8209, tok/sec: 98744.97, flops:103.63, batch-reuse:1
@ 3783 train 4.3967 , allloss: 4.3987, dt: 1321.55ms, fracRes: 0.3647, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4636, norm(y): 1.0147, norm:1.4738, tok/sec: 99180.75, flops:104.09, batch-reuse:1
@ 3784 train 4.4532 , allloss: 4.4553, dt: 1308.19ms, fracRes: 0.3660, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4591, norm(y): 1.0147, norm:1.2061, tok/sec: 100193.13, flops:105.15, batch-reuse:1
@ 3785 train 4.4371 , allloss: 4.4389, dt: 1311.94ms, fracRes: 0.3664, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4612, norm(y): 1.0147, norm:1.2713, tok/sec: 99906.85, flops:104.85, batch-reuse:1
@ 3786 train 4.4468 , allloss: 4.4484, dt: 1306.83ms, fracRes: 0.3668, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4648, norm(y): 1.0147, norm:1.2298, tok/sec: 100297.51, flops:105.26, batch-reuse:1
@ 3787 train 4.4639 , allloss: 4.4653, dt: 1313.69ms, fracRes: 0.3679, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4643, norm(y): 1.0148, norm:1.2840, tok/sec: 99774.29, flops:104.71, batch-reuse:1
@ 3788 train 4.4414 , allloss: 4.4426, dt: 1304.73ms, fracRes: 0.3674, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4609, norm(y): 1.0148, norm:1.4182, tok/sec: 100459.14, flops:105.43, batch-reuse:1
@ 3789 train 4.4719 , allloss: 4.4732, dt: 1314.66ms, fracRes: 0.3672, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4641, norm(y): 1.0147, norm:1.2465, tok/sec: 99700.60, flops:104.64, batch-reuse:1
@ 3790 train 4.5462 , allloss: 4.5482, dt: 1317.30ms, fracRes: 0.3665, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4665, norm(y): 1.0147, norm:1.5493, tok/sec: 99500.47, flops:104.43, batch-reuse:1
@ 3791 train 4.4417 , allloss: 4.4460, dt: 1332.91ms, fracRes: 0.3651, norm(attn): 0.2236, norm(output): 0.5664, norm(x): 0.4713, norm(y): 1.0146, norm:1.6446, tok/sec: 98335.13, flops:103.20, batch-reuse:1
@ 3792 train 4.5381 , allloss: 4.5395, dt: 1293.35ms, fracRes: 0.3658, norm(attn): 0.2197, norm(output): 0.5703, norm(x): 0.4681, norm(y): 1.0147, norm:1.5855, tok/sec: 101343.04, flops:106.36, batch-reuse:1
@ 3793 train 4.4922 , allloss: 4.4937, dt: 1295.40ms, fracRes: 0.3655, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4657, norm(y): 1.0147, norm:1.1848, tok/sec: 101182.41, flops:106.19, batch-reuse:1
@ 3794 train 4.4261 , allloss: 4.4302, dt: 1290.09ms, fracRes: 0.3648, norm(attn): 0.2217, norm(output): 0.5664, norm(x): 0.4650, norm(y): 1.0147, norm:1.2780, tok/sec: 101598.88, flops:106.63, batch-reuse:1
@ 3795 train 4.3872 , allloss: 4.3904, dt: 1307.16ms, fracRes: 0.3662, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4661, norm(y): 1.0148, norm:1.3981, tok/sec: 100272.01, flops:105.24, batch-reuse:1
@ 3796 train 4.4992 , allloss: 4.5016, dt: 1339.63ms, fracRes: 0.3668, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4674, norm(y): 1.0148, norm:1.0651, tok/sec: 97842.23, flops:102.69, batch-reuse:1
@ 3797 train 4.5310 , allloss: 4.5333, dt: 1342.25ms, fracRes: 0.3684, norm(attn): 0.2178, norm(output): 0.5742, norm(x): 0.4695, norm(y): 1.0148, norm:1.6675, tok/sec: 97650.88, flops:102.49, batch-reuse:1
@ 3798 train 4.4444 , allloss: 4.4456, dt: 1323.64ms, fracRes: 0.3675, norm(attn): 0.2197, norm(output): 0.5703, norm(x): 0.4670, norm(y): 1.0147, norm:1.2931, tok/sec: 99024.23, flops:103.93, batch-reuse:1
@ 3799 train 4.4437 , allloss: 4.4448, dt: 1316.41ms, fracRes: 0.3671, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4654, norm(y): 1.0147, norm:1.2521, tok/sec: 99567.90, flops:104.50, batch-reuse:1
@ 3800 train 4.4190 , allloss: 4.4208, dt: 1311.60ms, fracRes: 0.3679, norm(attn): 0.2197, norm(output): 0.5664, norm(x): 0.4640, norm(y): 1.0147, norm:1.2081, tok/sec: 99932.84, flops:104.88, batch-reuse:1
@ 3801 train 4.3857 , allloss: 4.3872, dt: 1319.54ms, fracRes: 0.3670, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4637, norm(y): 1.0147, norm:1.1517, tok/sec: 99331.53, flops:104.25, batch-reuse:1
@ 3802 train 4.4278 , allloss: 4.4289, dt: 1303.88ms, fracRes: 0.3664, norm(attn): 0.2188, norm(output): 0.5664, norm(x): 0.4634, norm(y): 1.0147, norm:1.1499, tok/sec: 100524.33, flops:105.50, batch-reuse:1
@ 3803 train 4.4275 , allloss: 4.4287, dt: 1316.43ms, fracRes: 0.3663, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4648, norm(y): 1.0147, norm:1.2928, tok/sec: 99566.28, flops:104.50, batch-reuse:1
@ 3804 train 4.3812 , allloss: 4.3827, dt: 1320.67ms, fracRes: 0.3661, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4667, norm(y): 1.0148, norm:1.2298, tok/sec: 99246.28, flops:104.16, batch-reuse:1
@ 3805 train 4.5015 , allloss: 4.5029, dt: 1311.76ms, fracRes: 0.3677, norm(attn): 0.2168, norm(output): 0.5703, norm(x): 0.4645, norm(y): 1.0148, norm:1.1903, tok/sec: 99920.49, flops:104.87, batch-reuse:1
@ 3806 train 4.4267 , allloss: 4.4274, dt: 1322.32ms, fracRes: 0.3672, norm(attn): 0.2188, norm(output): 0.5703, norm(x): 0.4672, norm(y): 1.0147, norm:1.2270, tok/sec: 99122.38, flops:104.03, batch-reuse:1
@ 3807 train 4.3525 , allloss: 4.3534, dt: 1306.54ms, fracRes: 0.3676, norm(attn): 0.2207, norm(output): 0.5664, norm(x): 0.4665, norm(y): 1.0148, norm:1.3339, tok/sec: 100319.60, flops:105.29, batch-reuse:1
@ 3808 train 4.4008 , allloss: 4.4027, dt: 1304.09ms, fracRes: 0.3682, norm(attn): 0.2188, norm(output): 0.5703, norm(x): 0.4680, norm(y): 1.0149, norm:1.2052, tok/sec: 100508.71, flops:105.49, batch-reuse:1
@ 3809 train 4.3658 , allloss: 4.3681, dt: 1304.56ms, fracRes: 0.3660, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4707, norm(y): 1.0147, norm:1.1698, tok/sec: 100472.05, flops:105.45, batch-reuse:1
@ 3810 train 4.3638 , allloss: 4.3651, dt: 1291.26ms, fracRes: 0.3672, norm(attn): 0.2217, norm(output): 0.5742, norm(x): 0.4718, norm(y): 1.0147, norm:1.1870, tok/sec: 101506.94, flops:106.53, batch-reuse:1
@ 3811 train 4.3381 , allloss: 4.3491, dt: 1294.71ms, fracRes: 0.3674, norm(attn): 0.2227, norm(output): 0.5703, norm(x): 0.4714, norm(y): 1.0147, norm:1.3475, tok/sec: 101236.84, flops:106.25, batch-reuse:1
@ 3812 train 4.3636 , allloss: 4.3648, dt: 1289.69ms, fracRes: 0.3682, norm(attn): 0.2197, norm(output): 0.5703, norm(x): 0.4699, norm(y): 1.0148, norm:1.1667, tok/sec: 101630.87, flops:106.66, batch-reuse:1
@ 3813 train 4.2520 , allloss: 4.2564, dt: 1308.66ms, fracRes: 0.3675, norm(attn): 0.2227, norm(output): 0.5742, norm(x): 0.4683, norm(y): 1.0147, norm:1.2234, tok/sec: 100157.26, flops:105.12, batch-reuse:1
@ 3814 train 4.4276 , allloss: 4.4283, dt: 1642.46ms, fracRes: 0.3669, norm(attn): 0.2207, norm(output): 0.5742, norm(x): 0.4686, norm(y): 1.0147, norm:1.2213, tok/sec: 79802.24, flops:83.75, batch-reuse:1
@ 3815 train 4.3798 , allloss: 4.3815, dt: 1308.11ms, fracRes: 0.3672, norm(attn): 0.2256, norm(output): 0.5742, norm(x): 0.4697, norm(y): 1.0148, norm:1.3124, tok/sec: 100199.71, flops:105.16, batch-reuse:1
@ 3816 train 4.4270 , allloss: 4.4288, dt: 1297.43ms, fracRes: 0.3656, norm(attn): 0.2227, norm(output): 0.5742, norm(x): 0.4688, norm(y): 1.0148, norm:1.4181, tok/sec: 101023.96, flops:106.03, batch-reuse:1
@ 3817 train 4.4133 , allloss: 4.4155, dt: 1290.40ms, fracRes: 0.3662, norm(attn): 0.2188, norm(output): 0.5703, norm(x): 0.4646, norm(y): 1.0148, norm:1.1133, tok/sec: 101574.89, flops:106.60, batch-reuse:1
@ 3818 train 4.4239 , allloss: 4.4292, dt: 1306.43ms, fracRes: 0.3656, norm(attn): 0.2217, norm(output): 0.5703, norm(x): 0.4669, norm(y): 1.0146, norm:1.1705, tok/sec: 100328.72, flops:105.30, batch-reuse:1
@ 3819 train 4.3998 , allloss: 4.4009, dt: 1306.08ms, fracRes: 0.3660, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4695, norm(y): 1.0147, norm:1.3114, tok/sec: 100355.51, flops:105.32, batch-reuse:1
@ 3820 train 4.4592 , allloss: 4.4608, dt: 1286.49ms, fracRes: 0.3665, norm(attn): 0.2168, norm(output): 0.5781, norm(x): 0.4693, norm(y): 1.0149, norm:1.2501, tok/sec: 101883.74, flops:106.93, batch-reuse:1
@ 3821 train 4.4646 , allloss: 4.4660, dt: 1306.23ms, fracRes: 0.3668, norm(attn): 0.2188, norm(output): 0.5781, norm(x): 0.4675, norm(y): 1.0149, norm:1.2191, tok/sec: 100343.84, flops:105.31, batch-reuse:1
@ 3822 train 4.3357 , allloss: 4.3369, dt: 1289.14ms, fracRes: 0.3658, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4672, norm(y): 1.0148, norm:1.3640, tok/sec: 101674.32, flops:106.71, batch-reuse:1
@ 3823 train 4.4189 , allloss: 4.4200, dt: 1294.21ms, fracRes: 0.3661, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4685, norm(y): 1.0147, norm:1.2855, tok/sec: 101275.74, flops:106.29, batch-reuse:1
@ 3824 train 4.3513 , allloss: 4.3536, dt: 1295.64ms, fracRes: 0.3665, norm(attn): 0.2197, norm(output): 0.5703, norm(x): 0.4677, norm(y): 1.0148, norm:1.2412, tok/sec: 101164.22, flops:106.17, batch-reuse:1
@ 3825 train 4.3586 , allloss: 4.3598, dt: 1299.69ms, fracRes: 0.3673, norm(attn): 0.2197, norm(output): 0.5781, norm(x): 0.4714, norm(y): 1.0148, norm:1.2186, tok/sec: 100848.72, flops:105.84, batch-reuse:1
@ 3826 train 4.4160 , allloss: 4.4168, dt: 1295.49ms, fracRes: 0.3659, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4698, norm(y): 1.0147, norm:1.1507, tok/sec: 101175.41, flops:106.19, batch-reuse:1
@ 3827 train 4.3746 , allloss: 4.3761, dt: 1307.79ms, fracRes: 0.3669, norm(attn): 0.2197, norm(output): 0.5742, norm(x): 0.4700, norm(y): 1.0147, norm:1.2799, tok/sec: 100224.39, flops:105.19, batch-reuse:1
@ 3828 train 4.3342 , allloss: 4.3359, dt: 1317.64ms, fracRes: 0.3682, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4679, norm(y): 1.0148, norm:1.2258, tok/sec: 99475.14, flops:104.40, batch-reuse:1
@ 3829 train 4.3802 , allloss: 4.3810, dt: 1299.68ms, fracRes: 0.3682, norm(attn): 0.2197, norm(output): 0.5742, norm(x): 0.4704, norm(y): 1.0148, norm:1.2016, tok/sec: 100849.11, flops:105.84, batch-reuse:1
@ 3830 train 4.4496 , allloss: 4.4509, dt: 1299.89ms, fracRes: 0.3687, norm(attn): 0.2197, norm(output): 0.5820, norm(x): 0.4740, norm(y): 1.0147, norm:1.4654, tok/sec: 100833.27, flops:105.83, batch-reuse:1
@ 3831 train 4.2773 , allloss: 4.2786, dt: 1294.58ms, fracRes: 0.3675, norm(attn): 0.2197, norm(output): 0.5742, norm(x): 0.4720, norm(y): 1.0147, norm:1.3762, tok/sec: 101247.04, flops:106.26, batch-reuse:1
@ 3832 train 4.2913 , allloss: 4.2962, dt: 1295.07ms, fracRes: 0.3679, norm(attn): 0.2207, norm(output): 0.5781, norm(x): 0.4748, norm(y): 1.0148, norm:1.5367, tok/sec: 101208.15, flops:106.22, batch-reuse:1
@ 3833 train 4.3488 , allloss: 4.3506, dt: 1309.12ms, fracRes: 0.3668, norm(attn): 0.2217, norm(output): 0.5742, norm(x): 0.4713, norm(y): 1.0148, norm:1.2961, tok/sec: 100122.44, flops:105.08, batch-reuse:1
@ 3834 train 4.3826 , allloss: 4.3853, dt: 1304.74ms, fracRes: 0.3672, norm(attn): 0.2188, norm(output): 0.5781, norm(x): 0.4699, norm(y): 1.0148, norm:1.3470, tok/sec: 100458.17, flops:105.43, batch-reuse:1
@ 3835 train 4.3039 , allloss: 4.3052, dt: 1316.11ms, fracRes: 0.3689, norm(attn): 0.2217, norm(output): 0.5742, norm(x): 0.4714, norm(y): 1.0148, norm:1.3396, tok/sec: 99590.49, flops:104.52, batch-reuse:1
@ 3836 train 4.3619 , allloss: 4.3635, dt: 1332.54ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5781, norm(x): 0.4739, norm(y): 1.0148, norm:1.2679, tok/sec: 98362.80, flops:103.23, batch-reuse:1
@ 3837 train 4.4713 , allloss: 4.4736, dt: 1326.28ms, fracRes: 0.3686, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4718, norm(y): 1.0148, norm:1.2568, tok/sec: 98826.68, flops:103.72, batch-reuse:1
@ 3838 train 4.3496 , allloss: 4.3505, dt: 1279.62ms, fracRes: 0.3690, norm(attn): 0.2197, norm(output): 0.5820, norm(x): 0.4721, norm(y): 1.0148, norm:1.3418, tok/sec: 102430.76, flops:107.50, batch-reuse:1
@ 3839 train 4.3458 , allloss: 4.3485, dt: 1290.36ms, fracRes: 0.3695, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4719, norm(y): 1.0148, norm:1.2288, tok/sec: 101578.08, flops:106.61, batch-reuse:1
@ 3840 train 4.4820 , allloss: 4.4846, dt: 1291.52ms, fracRes: 0.3698, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4696, norm(y): 1.0148, norm:1.4736, tok/sec: 101486.93, flops:106.51, batch-reuse:1
@ 3841 train 4.3761 , allloss: 4.3773, dt: 1313.16ms, fracRes: 0.3673, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4701, norm(y): 1.0147, norm:1.1971, tok/sec: 99814.07, flops:104.76, batch-reuse:1
@ 3842 train 4.3043 , allloss: 4.3049, dt: 1339.16ms, fracRes: 0.3676, norm(attn): 0.2227, norm(output): 0.5664, norm(x): 0.4658, norm(y): 1.0148, norm:1.2907, tok/sec: 97876.00, flops:102.72, batch-reuse:1
@ 3843 train 4.4171 , allloss: 4.4183, dt: 1316.07ms, fracRes: 0.3677, norm(attn): 0.2207, norm(output): 0.5703, norm(x): 0.4684, norm(y): 1.0148, norm:1.5256, tok/sec: 99593.19, flops:104.52, batch-reuse:1
@ 3844 train 4.3553 , allloss: 4.3565, dt: 1290.10ms, fracRes: 0.3663, norm(attn): 0.2207, norm(output): 0.5781, norm(x): 0.4718, norm(y): 1.0148, norm:1.2868, tok/sec: 101598.43, flops:106.63, batch-reuse:1
@ 3845 train 4.3289 , allloss: 4.3303, dt: 1286.87ms, fracRes: 0.3663, norm(attn): 0.2217, norm(output): 0.5742, norm(x): 0.4724, norm(y): 1.0149, norm:1.4618, tok/sec: 101853.39, flops:106.90, batch-reuse:1
@ 3846 train 4.1676 , allloss: 4.1687, dt: 1299.92ms, fracRes: 0.3668, norm(attn): 0.2236, norm(output): 0.5820, norm(x): 0.4745, norm(y): 1.0148, norm:1.5398, tok/sec: 100830.80, flops:105.82, batch-reuse:1
@ 3847 train 4.4363 , allloss: 4.4377, dt: 1323.02ms, fracRes: 0.3683, norm(attn): 0.2188, norm(output): 0.5742, norm(x): 0.4714, norm(y): 1.0148, norm:1.2239, tok/sec: 99070.44, flops:103.98, batch-reuse:1
@ 3848 train 4.3383 , allloss: 4.3405, dt: 1297.40ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5742, norm(x): 0.4696, norm(y): 1.0147, norm:1.4029, tok/sec: 101027.02, flops:106.03, batch-reuse:1
@ 3849 train 4.2495 , allloss: 4.2517, dt: 1300.14ms, fracRes: 0.3690, norm(attn): 0.2197, norm(output): 0.5820, norm(x): 0.4702, norm(y): 1.0149, norm:1.5023, tok/sec: 100813.43, flops:105.81, batch-reuse:1
@ 3850 train 4.3329 , allloss: 4.3352, dt: 1304.52ms, fracRes: 0.3691, norm(attn): 0.2188, norm(output): 0.5820, norm(x): 0.4695, norm(y): 1.0149, norm:1.2353, tok/sec: 100475.21, flops:105.45, batch-reuse:1
@ 3851 train 4.3110 , allloss: 4.3124, dt: 1309.18ms, fracRes: 0.3683, norm(attn): 0.2188, norm(output): 0.5820, norm(x): 0.4708, norm(y): 1.0149, norm:1.4082, tok/sec: 100117.34, flops:105.08, batch-reuse:1
@ 3852 train 4.2471 , allloss: 4.2490, dt: 1347.04ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5781, norm(x): 0.4699, norm(y): 1.0149, norm:1.2183, tok/sec: 97303.89, flops:102.12, batch-reuse:1
@ 3853 train 4.3195 , allloss: 4.3205, dt: 1342.64ms, fracRes: 0.3687, norm(attn): 0.2217, norm(output): 0.5820, norm(x): 0.4700, norm(y): 1.0149, norm:1.3756, tok/sec: 97622.57, flops:102.46, batch-reuse:1
@ 3854 train 4.2946 , allloss: 4.2956, dt: 1328.15ms, fracRes: 0.3668, norm(attn): 0.2217, norm(output): 0.5781, norm(x): 0.4704, norm(y): 1.0148, norm:1.2395, tok/sec: 98687.45, flops:103.57, batch-reuse:1
@ 3855 train 4.2217 , allloss: 4.2231, dt: 1345.88ms, fracRes: 0.3676, norm(attn): 0.2217, norm(output): 0.5781, norm(x): 0.4700, norm(y): 1.0148, norm:1.3872, tok/sec: 97387.87, flops:102.21, batch-reuse:1
@ 3856 train 4.2551 , allloss: 4.2565, dt: 1317.93ms, fracRes: 0.3678, norm(attn): 0.2197, norm(output): 0.5781, norm(x): 0.4689, norm(y): 1.0148, norm:1.2036, tok/sec: 99452.82, flops:104.38, batch-reuse:1
@ 3857 train 4.1565 , allloss: 4.1585, dt: 1297.32ms, fracRes: 0.3677, norm(attn): 0.2207, norm(output): 0.5742, norm(x): 0.4714, norm(y): 1.0147, norm:1.3159, tok/sec: 101033.20, flops:106.04, batch-reuse:1
@ 3858 train 4.2711 , allloss: 4.2725, dt: 1329.06ms, fracRes: 0.3675, norm(attn): 0.2217, norm(output): 0.5820, norm(x): 0.4700, norm(y): 1.0148, norm:1.5049, tok/sec: 98620.30, flops:103.50, batch-reuse:1
@ 3859 train 4.2302 , allloss: 4.2322, dt: 1326.51ms, fracRes: 0.3681, norm(attn): 0.2207, norm(output): 0.5742, norm(x): 0.4671, norm(y): 1.0148, norm:1.3303, tok/sec: 98809.48, flops:103.70, batch-reuse:1
@ 3860 train 4.3312 , allloss: 4.3327, dt: 1321.25ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5781, norm(x): 0.4694, norm(y): 1.0149, norm:1.6147, tok/sec: 99203.12, flops:104.12, batch-reuse:1
@ 3861 train 4.3410 , allloss: 4.3424, dt: 1344.27ms, fracRes: 0.3675, norm(attn): 0.2217, norm(output): 0.5781, norm(x): 0.4718, norm(y): 1.0148, norm:1.5100, tok/sec: 97504.19, flops:102.33, batch-reuse:1
@ 3862 train 4.3304 , allloss: 4.3312, dt: 1304.36ms, fracRes: 0.3690, norm(attn): 0.2207, norm(output): 0.5742, norm(x): 0.4695, norm(y): 1.0148, norm:1.4153, tok/sec: 100487.97, flops:105.46, batch-reuse:1
@ 3863 train 4.3308 , allloss: 4.3317, dt: 1275.99ms, fracRes: 0.3711, norm(attn): 0.2197, norm(output): 0.5820, norm(x): 0.4697, norm(y): 1.0149, norm:1.3506, tok/sec: 102721.69, flops:107.81, batch-reuse:1
@ 3864 train 4.2971 , allloss: 4.2979, dt: 1303.55ms, fracRes: 0.3703, norm(attn): 0.2217, norm(output): 0.5781, norm(x): 0.4721, norm(y): 1.0149, norm:1.4720, tok/sec: 100550.02, flops:105.53, batch-reuse:1
@ 3865 train 4.3525 , allloss: 4.3535, dt: 1301.72ms, fracRes: 0.3711, norm(attn): 0.2207, norm(output): 0.5820, norm(x): 0.4696, norm(y): 1.0149, norm:1.1766, tok/sec: 100691.16, flops:105.68, batch-reuse:1
@ 3866 train 4.2567 , allloss: 4.2587, dt: 1332.95ms, fracRes: 0.3706, norm(attn): 0.2207, norm(output): 0.5820, norm(x): 0.4702, norm(y): 1.0149, norm:1.3935, tok/sec: 98332.30, flops:103.20, batch-reuse:1
@ 3867 train 4.2442 , allloss: 4.2466, dt: 1344.50ms, fracRes: 0.3684, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4741, norm(y): 1.0148, norm:1.2568, tok/sec: 97487.24, flops:102.31, batch-reuse:1
@ 3868 train 4.1905 , allloss: 4.1935, dt: 1340.71ms, fracRes: 0.3683, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4726, norm(y): 1.0149, norm:1.3564, tok/sec: 97763.04, flops:102.60, batch-reuse:1
@ 3869 train 4.1999 , allloss: 4.2012, dt: 1338.83ms, fracRes: 0.3687, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4725, norm(y): 1.0149, norm:1.3088, tok/sec: 97900.46, flops:102.75, batch-reuse:1
@ 3870 train 4.2427 , allloss: 4.2440, dt: 1330.46ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4727, norm(y): 1.0149, norm:1.4013, tok/sec: 98516.00, flops:103.39, batch-reuse:1
@ 3871 train 4.3343 , allloss: 4.3365, dt: 1310.91ms, fracRes: 0.3682, norm(attn): 0.2207, norm(output): 0.5820, norm(x): 0.4695, norm(y): 1.0150, norm:1.3744, tok/sec: 99985.76, flops:104.94, batch-reuse:1
@ 3872 train 4.3347 , allloss: 4.3369, dt: 1323.65ms, fracRes: 0.3669, norm(attn): 0.2197, norm(output): 0.5820, norm(x): 0.4688, norm(y): 1.0149, norm:1.3281, tok/sec: 99022.91, flops:103.93, batch-reuse:1
@ 3873 train 4.2656 , allloss: 4.2670, dt: 1298.37ms, fracRes: 0.3661, norm(attn): 0.2246, norm(output): 0.5820, norm(x): 0.4707, norm(y): 1.0148, norm:1.1201, tok/sec: 100951.22, flops:105.95, batch-reuse:1
@ 3874 train 4.2738 , allloss: 4.2748, dt: 1306.58ms, fracRes: 0.3681, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4727, norm(y): 1.0149, norm:1.2371, tok/sec: 100316.85, flops:105.28, batch-reuse:1
@ 3875 train 4.2336 , allloss: 4.2345, dt: 1290.90ms, fracRes: 0.3692, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4710, norm(y): 1.0149, norm:1.1991, tok/sec: 101535.74, flops:106.56, batch-reuse:1
@ 3876 train 4.2791 , allloss: 4.2803, dt: 1317.70ms, fracRes: 0.3692, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4730, norm(y): 1.0148, norm:1.4863, tok/sec: 99470.06, flops:104.40, batch-reuse:1
@ 3877 train 4.3284 , allloss: 4.3295, dt: 1308.23ms, fracRes: 0.3701, norm(attn): 0.2188, norm(output): 0.5820, norm(x): 0.4699, norm(y): 1.0148, norm:1.2200, tok/sec: 100190.12, flops:105.15, batch-reuse:1
@ 3878 train 4.2347 , allloss: 4.2356, dt: 1328.01ms, fracRes: 0.3696, norm(attn): 0.2207, norm(output): 0.5820, norm(x): 0.4715, norm(y): 1.0148, norm:1.1437, tok/sec: 98698.12, flops:103.59, batch-reuse:1
@ 3879 train 4.2922 , allloss: 4.2930, dt: 1327.64ms, fracRes: 0.3687, norm(attn): 0.2227, norm(output): 0.5859, norm(x): 0.4714, norm(y): 1.0148, norm:1.3711, tok/sec: 98725.73, flops:103.61, batch-reuse:1
@ 3880 train 4.4087 , allloss: 4.4104, dt: 1288.45ms, fracRes: 0.3679, norm(attn): 0.2227, norm(output): 0.5859, norm(x): 0.4748, norm(y): 1.0148, norm:1.3393, tok/sec: 101728.09, flops:106.77, batch-reuse:1
@ 3881 train 4.3176 , allloss: 4.3196, dt: 1323.45ms, fracRes: 0.3684, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4749, norm(y): 1.0149, norm:1.2071, tok/sec: 99038.04, flops:103.94, batch-reuse:1
@ 3882 train 4.2909 , allloss: 4.2919, dt: 1324.75ms, fracRes: 0.3674, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4744, norm(y): 1.0149, norm:1.4425, tok/sec: 98941.26, flops:103.84, batch-reuse:1
@ 3883 train 4.2132 , allloss: 4.2161, dt: 1323.44ms, fracRes: 0.3679, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4736, norm(y): 1.0149, norm:1.2543, tok/sec: 99039.04, flops:103.94, batch-reuse:1
@ 3884 train 4.2947 , allloss: 4.2965, dt: 1310.90ms, fracRes: 0.3689, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4705, norm(y): 1.0149, norm:1.3042, tok/sec: 99985.93, flops:104.94, batch-reuse:1
@ 3885 train 4.3605 , allloss: 4.3623, dt: 1291.08ms, fracRes: 0.3678, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4726, norm(y): 1.0149, norm:1.1987, tok/sec: 101521.51, flops:106.55, batch-reuse:1
@ 3886 train 4.2680 , allloss: 4.2697, dt: 1287.34ms, fracRes: 0.3670, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4710, norm(y): 1.0150, norm:1.4965, tok/sec: 101816.19, flops:106.86, batch-reuse:1
@ 3887 train 4.2502 , allloss: 4.2520, dt: 1310.74ms, fracRes: 0.3677, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4729, norm(y): 1.0150, norm:1.2016, tok/sec: 99998.31, flops:104.95, batch-reuse:1
@ 3888 train 4.3489 , allloss: 4.3501, dt: 1298.75ms, fracRes: 0.3675, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4723, norm(y): 1.0148, norm:1.2038, tok/sec: 100921.57, flops:105.92, batch-reuse:1
@ 3889 train 4.3002 , allloss: 4.3030, dt: 1288.87ms, fracRes: 0.3672, norm(attn): 0.2227, norm(output): 0.5859, norm(x): 0.4741, norm(y): 1.0148, norm:1.2379, tok/sec: 101694.92, flops:106.73, batch-reuse:1
@ 3890 train 4.2981 , allloss: 4.3027, dt: 1312.22ms, fracRes: 0.3696, norm(attn): 0.2227, norm(output): 0.5859, norm(x): 0.4749, norm(y): 1.0150, norm:1.3508, tok/sec: 99885.74, flops:104.83, batch-reuse:1
@ 3891 train 4.1940 , allloss: 4.1959, dt: 1305.63ms, fracRes: 0.3685, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4711, norm(y): 1.0149, norm:1.1767, tok/sec: 100389.54, flops:105.36, batch-reuse:1
@ 3892 train 4.3202 , allloss: 4.3220, dt: 1311.31ms, fracRes: 0.3679, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4742, norm(y): 1.0149, norm:1.4099, tok/sec: 99954.84, flops:104.90, batch-reuse:1
@ 3893 train 4.3253 , allloss: 4.3271, dt: 1341.43ms, fracRes: 0.3680, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4734, norm(y): 1.0149, norm:1.1177, tok/sec: 97710.50, flops:102.55, batch-reuse:1
@ 3894 train 4.4943 , allloss: 4.4956, dt: 1335.74ms, fracRes: 0.3696, norm(attn): 0.2188, norm(output): 0.5859, norm(x): 0.4751, norm(y): 1.0149, norm:1.2578, tok/sec: 98126.86, flops:102.99, batch-reuse:1
@ 3895 train 4.4423 , allloss: 4.4442, dt: 1320.93ms, fracRes: 0.3683, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4747, norm(y): 1.0148, norm:1.3133, tok/sec: 99226.86, flops:104.14, batch-reuse:1
@ 3896 train 4.4132 , allloss: 4.4157, dt: 1305.30ms, fracRes: 0.3690, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4738, norm(y): 1.0148, norm:1.2114, tok/sec: 100415.23, flops:105.39, batch-reuse:1
@ 3897 train 4.3909 , allloss: 4.3938, dt: 1301.47ms, fracRes: 0.3684, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4738, norm(y): 1.0148, norm:1.2613, tok/sec: 100711.06, flops:105.70, batch-reuse:1
@ 3898 train 4.5355 , allloss: 4.5369, dt: 1287.00ms, fracRes: 0.3693, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4782, norm(y): 1.0149, norm:1.2981, tok/sec: 101842.86, flops:106.89, batch-reuse:1
@ 3899 train 4.4371 , allloss: 4.4383, dt: 1309.85ms, fracRes: 0.3690, norm(attn): 0.2188, norm(output): 0.5859, norm(x): 0.4752, norm(y): 1.0149, norm:1.1944, tok/sec: 100066.59, flops:105.02, batch-reuse:1
@ 3900 train 4.3704 , allloss: 4.3715, dt: 1308.01ms, fracRes: 0.3689, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4762, norm(y): 1.0149, norm:1.3074, tok/sec: 100207.12, flops:105.17, batch-reuse:1
@ 3901 train 4.4365 , allloss: 4.4377, dt: 1316.24ms, fracRes: 0.3685, norm(attn): 0.2217, norm(output): 0.5859, norm(x): 0.4771, norm(y): 1.0149, norm:1.4616, tok/sec: 99580.87, flops:104.51, batch-reuse:1
@ 3902 train 4.3532 , allloss: 4.3547, dt: 1308.83ms, fracRes: 0.3691, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4746, norm(y): 1.0149, norm:1.2922, tok/sec: 100144.13, flops:105.10, batch-reuse:1
@ 3903 train 4.3422 , allloss: 4.3441, dt: 1294.47ms, fracRes: 0.3689, norm(attn): 0.2236, norm(output): 0.5859, norm(x): 0.4755, norm(y): 1.0149, norm:1.4044, tok/sec: 101255.33, flops:106.27, batch-reuse:1
@ 3904 train 4.5247 , allloss: 4.5265, dt: 1300.90ms, fracRes: 0.3686, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4765, norm(y): 1.0149, norm:1.4991, tok/sec: 100755.14, flops:105.74, batch-reuse:1
@ 3905 train 4.4662 , allloss: 4.4678, dt: 1311.45ms, fracRes: 0.3680, norm(attn): 0.2227, norm(output): 0.5859, norm(x): 0.4777, norm(y): 1.0149, norm:1.2854, tok/sec: 99944.55, flops:104.89, batch-reuse:1
@ 3906 train 4.5124 , allloss: 4.5133, dt: 1319.47ms, fracRes: 0.3678, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4750, norm(y): 1.0148, norm:1.4297, tok/sec: 99337.00, flops:104.26, batch-reuse:1
@ 3907 train 4.4516 , allloss: 4.4529, dt: 1293.81ms, fracRes: 0.3677, norm(attn): 0.2227, norm(output): 0.5898, norm(x): 0.4767, norm(y): 1.0147, norm:1.2813, tok/sec: 101307.00, flops:106.32, batch-reuse:1
@ 3908 train 4.4371 , allloss: 4.4384, dt: 1308.74ms, fracRes: 0.3679, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4724, norm(y): 1.0149, norm:1.1666, tok/sec: 100151.04, flops:105.11, batch-reuse:1
@ 3909 train 4.3841 , allloss: 4.3856, dt: 1339.57ms, fracRes: 0.3676, norm(attn): 0.2256, norm(output): 0.5820, norm(x): 0.4735, norm(y): 1.0149, norm:1.3562, tok/sec: 97846.15, flops:102.69, batch-reuse:1
@ 3910 train 4.4969 , allloss: 4.4988, dt: 1313.41ms, fracRes: 0.3702, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4764, norm(y): 1.0149, norm:1.2873, tok/sec: 99795.06, flops:104.74, batch-reuse:1
@ 3911 train 4.4803 , allloss: 4.4813, dt: 1353.07ms, fracRes: 0.3697, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4740, norm(y): 1.0149, norm:1.1895, tok/sec: 96870.35, flops:101.67, batch-reuse:1
@ 3912 train 4.3749 , allloss: 4.3758, dt: 1314.45ms, fracRes: 0.3696, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4735, norm(y): 1.0149, norm:1.2917, tok/sec: 99716.43, flops:104.65, batch-reuse:1
@ 3913 train 4.4898 , allloss: 4.4908, dt: 1295.61ms, fracRes: 0.3692, norm(attn): 0.2227, norm(output): 0.5898, norm(x): 0.4758, norm(y): 1.0148, norm:1.3587, tok/sec: 101166.27, flops:106.18, batch-reuse:1
@ 3914 train 4.5028 , allloss: 4.5039, dt: 1307.45ms, fracRes: 0.3699, norm(attn): 0.2188, norm(output): 0.5898, norm(x): 0.4740, norm(y): 1.0150, norm:1.1253, tok/sec: 100249.84, flops:105.21, batch-reuse:1
@ 3915 train 4.4513 , allloss: 4.4527, dt: 1298.63ms, fracRes: 0.3707, norm(attn): 0.2207, norm(output): 0.5859, norm(x): 0.4717, norm(y): 1.0151, norm:1.2075, tok/sec: 100931.07, flops:105.93, batch-reuse:1
@ 3916 train 4.5111 , allloss: 4.5119, dt: 1292.95ms, fracRes: 0.3702, norm(attn): 0.2188, norm(output): 0.5898, norm(x): 0.4748, norm(y): 1.0150, norm:1.4026, tok/sec: 101374.72, flops:106.39, batch-reuse:1
@ 3917 train 4.5892 , allloss: 4.5901, dt: 1320.28ms, fracRes: 0.3694, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4751, norm(y): 1.0150, norm:1.1713, tok/sec: 99275.87, flops:104.19, batch-reuse:1
@ 3918 train 4.4403 , allloss: 4.4413, dt: 1296.58ms, fracRes: 0.3700, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4751, norm(y): 1.0150, norm:1.4952, tok/sec: 101090.61, flops:106.10, batch-reuse:1
@ 3919 train 4.4632 , allloss: 4.4642, dt: 1306.09ms, fracRes: 0.3690, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4761, norm(y): 1.0148, norm:1.1479, tok/sec: 100354.25, flops:105.32, batch-reuse:1
@ 3920 train 4.4013 , allloss: 4.4026, dt: 1328.95ms, fracRes: 0.3706, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4790, norm(y): 1.0149, norm:1.3845, tok/sec: 98628.42, flops:103.51, batch-reuse:1
@ 3921 train 4.4881 , allloss: 4.4910, dt: 1338.53ms, fracRes: 0.3709, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4775, norm(y): 1.0150, norm:1.3064, tok/sec: 97922.33, flops:102.77, batch-reuse:1
@ 3922 train 4.4520 , allloss: 4.4534, dt: 1341.22ms, fracRes: 0.3705, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4782, norm(y): 1.0149, norm:1.4914, tok/sec: 97726.20, flops:102.57, batch-reuse:1
@ 3923 train 4.4055 , allloss: 4.4067, dt: 1332.63ms, fracRes: 0.3696, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4766, norm(y): 1.0149, norm:1.1543, tok/sec: 98356.15, flops:103.23, batch-reuse:1
@ 3924 train 4.4757 , allloss: 4.4770, dt: 1316.67ms, fracRes: 0.3690, norm(attn): 0.2207, norm(output): 0.5977, norm(x): 0.4784, norm(y): 1.0149, norm:1.5380, tok/sec: 99548.05, flops:104.48, batch-reuse:1
@ 3925 train 4.5231 , allloss: 4.5251, dt: 1287.10ms, fracRes: 0.3687, norm(attn): 0.2188, norm(output): 0.6016, norm(x): 0.4794, norm(y): 1.0149, norm:1.3274, tok/sec: 101834.77, flops:106.88, batch-reuse:1
@ 3926 train 4.4450 , allloss: 4.4462, dt: 1272.48ms, fracRes: 0.3696, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4752, norm(y): 1.0149, norm:1.3247, tok/sec: 103005.41, flops:108.11, batch-reuse:1
@ 3927 train 4.3860 , allloss: 4.3871, dt: 1285.98ms, fracRes: 0.3703, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4739, norm(y): 1.0149, norm:1.2741, tok/sec: 101923.75, flops:106.97, batch-reuse:1
@ 3928 train 4.4073 , allloss: 4.4089, dt: 1299.55ms, fracRes: 0.3684, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4760, norm(y): 1.0149, norm:1.2844, tok/sec: 100859.38, flops:105.85, batch-reuse:1
@ 3929 train 4.3954 , allloss: 4.3965, dt: 1291.73ms, fracRes: 0.3703, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4759, norm(y): 1.0150, norm:1.3547, tok/sec: 101470.45, flops:106.50, batch-reuse:1
@ 3930 train 4.4371 , allloss: 4.4383, dt: 1291.71ms, fracRes: 0.3709, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4767, norm(y): 1.0152, norm:1.2430, tok/sec: 101471.78, flops:106.50, batch-reuse:1
@ 3931 train 4.3591 , allloss: 4.3600, dt: 1295.47ms, fracRes: 0.3688, norm(attn): 0.2197, norm(output): 0.5859, norm(x): 0.4747, norm(y): 1.0151, norm:1.1997, tok/sec: 101177.14, flops:106.19, batch-reuse:1
@ 3932 train 4.3628 , allloss: 4.3638, dt: 1309.77ms, fracRes: 0.3697, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4797, norm(y): 1.0149, norm:1.2498, tok/sec: 100072.18, flops:105.03, batch-reuse:1
@ 3933 train 4.4413 , allloss: 4.4421, dt: 1325.18ms, fracRes: 0.3704, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4794, norm(y): 1.0150, norm:1.2053, tok/sec: 98908.63, flops:103.81, batch-reuse:1
@ 3934 train 4.4740 , allloss: 4.4747, dt: 1288.69ms, fracRes: 0.3703, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4782, norm(y): 1.0149, norm:1.3165, tok/sec: 101709.20, flops:106.75, batch-reuse:1
@ 3935 train 4.4621 , allloss: 4.4632, dt: 1310.98ms, fracRes: 0.3704, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4791, norm(y): 1.0149, norm:1.1684, tok/sec: 99980.49, flops:104.93, batch-reuse:1
@ 3936 train 4.4289 , allloss: 4.4300, dt: 1303.84ms, fracRes: 0.3701, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4787, norm(y): 1.0149, norm:1.3351, tok/sec: 100527.48, flops:105.51, batch-reuse:1
@ 3937 train 4.4320 , allloss: 4.4333, dt: 1310.50ms, fracRes: 0.3702, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4787, norm(y): 1.0150, norm:1.2197, tok/sec: 100016.59, flops:104.97, batch-reuse:1
@ 3938 train 4.3665 , allloss: 4.3680, dt: 1305.72ms, fracRes: 0.3697, norm(attn): 0.2227, norm(output): 0.5977, norm(x): 0.4788, norm(y): 1.0150, norm:1.1712, tok/sec: 100383.07, flops:105.35, batch-reuse:1
@ 3939 train 4.4561 , allloss: 4.4605, dt: 1329.66ms, fracRes: 0.3694, norm(attn): 0.2217, norm(output): 0.5938, norm(x): 0.4809, norm(y): 1.0149, norm:1.2638, tok/sec: 98575.42, flops:103.46, batch-reuse:1
@ 3940 train 4.4049 , allloss: 4.4059, dt: 1275.28ms, fracRes: 0.3685, norm(attn): 0.2207, norm(output): 0.5898, norm(x): 0.4758, norm(y): 1.0149, norm:1.0874, tok/sec: 102778.92, flops:107.87, batch-reuse:1
@ 3941 train 4.4118 , allloss: 4.4127, dt: 1282.97ms, fracRes: 0.3696, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4788, norm(y): 1.0149, norm:1.4116, tok/sec: 102162.56, flops:107.22, batch-reuse:1
@ 3942 train 4.3537 , allloss: 4.3550, dt: 1279.38ms, fracRes: 0.3698, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4782, norm(y): 1.0149, norm:1.0411, tok/sec: 102449.62, flops:107.52, batch-reuse:1
@ 3943 train 4.4342 , allloss: 4.4351, dt: 1291.96ms, fracRes: 0.3720, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4763, norm(y): 1.0150, norm:1.2893, tok/sec: 101451.70, flops:106.48, batch-reuse:1
@ 3944 train 4.2960 , allloss: 4.2992, dt: 1320.67ms, fracRes: 0.3729, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4798, norm(y): 1.0150, norm:1.2525, tok/sec: 99246.50, flops:104.16, batch-reuse:1
@ 3945 train 4.5293 , allloss: 4.5312, dt: 1293.21ms, fracRes: 0.3729, norm(attn): 0.2197, norm(output): 0.5898, norm(x): 0.4751, norm(y): 1.0150, norm:1.2540, tok/sec: 101353.73, flops:106.37, batch-reuse:1
@ 3946 train 4.3711 , allloss: 4.3720, dt: 1296.07ms, fracRes: 0.3722, norm(attn): 0.2207, norm(output): 0.5898, norm(x): 0.4750, norm(y): 1.0149, norm:1.5225, tok/sec: 101130.50, flops:106.14, batch-reuse:1
@ 3947 train 4.3942 , allloss: 4.3953, dt: 1324.58ms, fracRes: 0.3706, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4757, norm(y): 1.0150, norm:1.2911, tok/sec: 98953.90, flops:103.85, batch-reuse:1
@ 3948 train 4.4072 , allloss: 4.4086, dt: 1301.07ms, fracRes: 0.3683, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4783, norm(y): 1.0149, norm:1.3040, tok/sec: 100741.51, flops:105.73, batch-reuse:1
@ 3949 train 4.3901 , allloss: 4.3909, dt: 1317.39ms, fracRes: 0.3687, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4768, norm(y): 1.0149, norm:1.3468, tok/sec: 99493.37, flops:104.42, batch-reuse:1
@ 3950 train 4.4520 , allloss: 4.4534, dt: 1344.22ms, fracRes: 0.3696, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4770, norm(y): 1.0150, norm:1.4239, tok/sec: 97507.96, flops:102.34, batch-reuse:1
@ 3951 train 4.3963 , allloss: 4.3974, dt: 1331.32ms, fracRes: 0.3706, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4765, norm(y): 1.0150, norm:1.2525, tok/sec: 98452.40, flops:103.33, batch-reuse:1
@ 3952 train 4.4422 , allloss: 4.4436, dt: 1294.60ms, fracRes: 0.3702, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4794, norm(y): 1.0149, norm:1.1584, tok/sec: 101245.00, flops:106.26, batch-reuse:1
@ 3953 train 4.4972 , allloss: 4.4987, dt: 1315.99ms, fracRes: 0.3706, norm(attn): 0.2197, norm(output): 0.5977, norm(x): 0.4801, norm(y): 1.0150, norm:1.6124, tok/sec: 99599.87, flops:104.53, batch-reuse:1
@ 3954 train 4.4512 , allloss: 4.4524, dt: 1345.29ms, fracRes: 0.3701, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4797, norm(y): 1.0151, norm:1.3573, tok/sec: 97430.42, flops:102.26, batch-reuse:1
@ 3955 train 4.3884 , allloss: 4.3893, dt: 1287.21ms, fracRes: 0.3699, norm(attn): 0.2188, norm(output): 0.5938, norm(x): 0.4795, norm(y): 1.0150, norm:1.4135, tok/sec: 101826.21, flops:106.87, batch-reuse:1
@ 3956 train 4.3619 , allloss: 4.3664, dt: 1303.88ms, fracRes: 0.3698, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4809, norm(y): 1.0149, norm:1.5051, tok/sec: 100524.68, flops:105.50, batch-reuse:1
@ 3957 train 4.4449 , allloss: 4.4467, dt: 1313.31ms, fracRes: 0.3699, norm(attn): 0.2207, norm(output): 0.5977, norm(x): 0.4821, norm(y): 1.0149, norm:1.4315, tok/sec: 99802.69, flops:104.74, batch-reuse:1
@ 3958 train 4.4012 , allloss: 4.4025, dt: 1277.98ms, fracRes: 0.3702, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4795, norm(y): 1.0149, norm:1.1321, tok/sec: 102561.66, flops:107.64, batch-reuse:1
@ 3959 train 4.4537 , allloss: 4.4549, dt: 1314.39ms, fracRes: 0.3722, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4797, norm(y): 1.0150, norm:1.3776, tok/sec: 99720.57, flops:104.66, batch-reuse:1
@ 3960 train 4.3845 , allloss: 4.3855, dt: 1335.60ms, fracRes: 0.3702, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4808, norm(y): 1.0150, norm:1.4119, tok/sec: 98137.24, flops:103.00, batch-reuse:1
@ 3961 train 4.3683 , allloss: 4.3693, dt: 1307.38ms, fracRes: 0.3696, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4845, norm(y): 1.0150, norm:1.3881, tok/sec: 100255.84, flops:105.22, batch-reuse:1
@ 3962 train 4.4445 , allloss: 4.4455, dt: 1298.29ms, fracRes: 0.3714, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4826, norm(y): 1.0150, norm:1.2976, tok/sec: 100957.78, flops:105.96, batch-reuse:1
@ 3963 train 4.3816 , allloss: 4.3830, dt: 1305.24ms, fracRes: 0.3704, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4771, norm(y): 1.0149, norm:1.2413, tok/sec: 100419.50, flops:105.39, batch-reuse:1
@ 3964 train 4.3668 , allloss: 4.3680, dt: 1318.74ms, fracRes: 0.3711, norm(attn): 0.2207, norm(output): 0.5938, norm(x): 0.4769, norm(y): 1.0149, norm:1.1751, tok/sec: 99391.71, flops:104.31, batch-reuse:1
@ 3965 train 4.3906 , allloss: 4.3932, dt: 1329.10ms, fracRes: 0.3704, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4795, norm(y): 1.0150, norm:1.3905, tok/sec: 98617.38, flops:103.50, batch-reuse:1
@ 3966 train 4.4614 , allloss: 4.4628, dt: 1308.39ms, fracRes: 0.3685, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4798, norm(y): 1.0150, norm:1.4587, tok/sec: 100178.20, flops:105.14, batch-reuse:1
@ 3967 train 4.4700 , allloss: 4.4720, dt: 1292.90ms, fracRes: 0.3687, norm(attn): 0.2197, norm(output): 0.5938, norm(x): 0.4773, norm(y): 1.0151, norm:1.2304, tok/sec: 101378.20, flops:106.40, batch-reuse:1
@ 3968 train 4.4322 , allloss: 4.4331, dt: 1309.61ms, fracRes: 0.3699, norm(attn): 0.2188, norm(output): 0.5898, norm(x): 0.4778, norm(y): 1.0150, norm:1.3009, tok/sec: 100084.97, flops:105.04, batch-reuse:1
@ 3969 train 4.4613 , allloss: 4.4626, dt: 1306.52ms, fracRes: 0.3700, norm(attn): 0.2207, norm(output): 0.5977, norm(x): 0.4781, norm(y): 1.0150, norm:1.2018, tok/sec: 100321.30, flops:105.29, batch-reuse:1
@ 3970 train 4.3937 , allloss: 4.3944, dt: 1313.06ms, fracRes: 0.3710, norm(attn): 0.2207, norm(output): 0.5898, norm(x): 0.4766, norm(y): 1.0150, norm:1.3388, tok/sec: 99821.64, flops:104.76, batch-reuse:1
@ 3971 train 4.4022 , allloss: 4.4031, dt: 1311.45ms, fracRes: 0.3708, norm(attn): 0.2207, norm(output): 0.5898, norm(x): 0.4778, norm(y): 1.0149, norm:1.1757, tok/sec: 99944.63, flops:104.89, batch-reuse:1
@ 3972 train 4.4216 , allloss: 4.4224, dt: 1335.97ms, fracRes: 0.3715, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4851, norm(y): 1.0149, norm:1.5159, tok/sec: 98110.05, flops:102.97, batch-reuse:1
@ 3973 train 4.3689 , allloss: 4.3703, dt: 1312.30ms, fracRes: 0.3699, norm(attn): 0.2207, norm(output): 0.5977, norm(x): 0.4829, norm(y): 1.0149, norm:1.3284, tok/sec: 99879.62, flops:104.83, batch-reuse:1
@ 3974 train 4.4589 , allloss: 4.4604, dt: 1339.74ms, fracRes: 0.3703, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4807, norm(y): 1.0150, norm:1.0994, tok/sec: 97834.06, flops:102.68, batch-reuse:1
@ 3975 train 4.3533 , allloss: 4.3541, dt: 1332.58ms, fracRes: 0.3712, norm(attn): 0.2266, norm(output): 0.5938, norm(x): 0.4769, norm(y): 1.0150, norm:1.4302, tok/sec: 98359.34, flops:103.23, batch-reuse:1
@ 3976 train 4.4462 , allloss: 4.4474, dt: 1329.62ms, fracRes: 0.3707, norm(attn): 0.2217, norm(output): 0.5898, norm(x): 0.4770, norm(y): 1.0150, norm:1.3989, tok/sec: 98578.71, flops:103.46, batch-reuse:1
@ 3977 train 4.1398 , allloss: 4.1418, dt: 1308.75ms, fracRes: 0.3722, norm(attn): 0.2275, norm(output): 0.5898, norm(x): 0.4757, norm(y): 1.0150, norm:1.2463, tok/sec: 100150.71, flops:105.11, batch-reuse:1
@ 3978 train 4.3837 , allloss: 4.3852, dt: 1333.22ms, fracRes: 0.3707, norm(attn): 0.2217, norm(output): 0.5938, norm(x): 0.4772, norm(y): 1.0150, norm:1.1585, tok/sec: 98312.66, flops:103.18, batch-reuse:1
@ 3979 train 4.4205 , allloss: 4.4214, dt: 1321.61ms, fracRes: 0.3695, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4816, norm(y): 1.0150, norm:1.4595, tok/sec: 99176.02, flops:104.09, batch-reuse:1
@ 3980 train 4.3633 , allloss: 4.3643, dt: 1291.90ms, fracRes: 0.3689, norm(attn): 0.2236, norm(output): 0.6016, norm(x): 0.4826, norm(y): 1.0151, norm:1.3624, tok/sec: 101456.91, flops:106.48, batch-reuse:1
@ 3981 train 4.4008 , allloss: 4.4020, dt: 1312.53ms, fracRes: 0.3684, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4837, norm(y): 1.0150, norm:1.3761, tok/sec: 99861.97, flops:104.81, batch-reuse:1
@ 3982 train 4.4023 , allloss: 4.4036, dt: 1340.50ms, fracRes: 0.3705, norm(attn): 0.2227, norm(output): 0.5977, norm(x): 0.4793, norm(y): 1.0150, norm:1.2316, tok/sec: 97778.78, flops:102.62, batch-reuse:1
@ 3983 train 4.4096 , allloss: 4.4111, dt: 1292.47ms, fracRes: 0.3716, norm(attn): 0.2227, norm(output): 0.5938, norm(x): 0.4787, norm(y): 1.0149, norm:1.1692, tok/sec: 101412.34, flops:106.43, batch-reuse:1
@ 3984 train 4.3927 , allloss: 4.3937, dt: 1308.05ms, fracRes: 0.3708, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4807, norm(y): 1.0149, norm:1.2947, tok/sec: 100203.82, flops:105.17, batch-reuse:1
@ 3985 train 4.4377 , allloss: 4.4386, dt: 1317.59ms, fracRes: 0.3715, norm(attn): 0.2197, norm(output): 0.6016, norm(x): 0.4789, norm(y): 1.0150, norm:1.4392, tok/sec: 99478.49, flops:104.40, batch-reuse:1
@ 3986 train 4.3081 , allloss: 4.3089, dt: 1304.03ms, fracRes: 0.3726, norm(attn): 0.2197, norm(output): 0.5977, norm(x): 0.4806, norm(y): 1.0151, norm:1.2134, tok/sec: 100512.97, flops:105.49, batch-reuse:1
@ 3987 train 4.2542 , allloss: 4.2554, dt: 1278.78ms, fracRes: 0.3717, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4788, norm(y): 1.0150, norm:1.3769, tok/sec: 102497.33, flops:107.57, batch-reuse:1
@ 3988 train 4.3354 , allloss: 4.3366, dt: 1291.28ms, fracRes: 0.3718, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4774, norm(y): 1.0150, norm:1.2946, tok/sec: 101505.16, flops:106.53, batch-reuse:1
@ 3989 train 4.3749 , allloss: 4.3758, dt: 1319.96ms, fracRes: 0.3734, norm(attn): 0.2197, norm(output): 0.6016, norm(x): 0.4770, norm(y): 1.0151, norm:1.0845, tok/sec: 99300.06, flops:104.22, batch-reuse:1
@ 3990 train 4.3108 , allloss: 4.3117, dt: 1293.52ms, fracRes: 0.3722, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4808, norm(y): 1.0151, norm:1.2083, tok/sec: 101329.43, flops:106.35, batch-reuse:1
@ 3991 train 4.3638 , allloss: 4.3733, dt: 1294.91ms, fracRes: 0.3706, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4816, norm(y): 1.0150, norm:1.3039, tok/sec: 101220.55, flops:106.23, batch-reuse:1
@ 3992 train 4.3883 , allloss: 4.3889, dt: 1317.85ms, fracRes: 0.3706, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4821, norm(y): 1.0150, norm:1.2480, tok/sec: 99458.60, flops:104.38, batch-reuse:1
@ 3993 train 4.3614 , allloss: 4.3623, dt: 1314.18ms, fracRes: 0.3701, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4820, norm(y): 1.0150, norm:1.0928, tok/sec: 99736.36, flops:104.68, batch-reuse:1
@ 3994 train 4.3690 , allloss: 4.3701, dt: 1314.83ms, fracRes: 0.3711, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4810, norm(y): 1.0150, norm:1.2381, tok/sec: 99687.77, flops:104.62, batch-reuse:1
@ 3995 train 4.3519 , allloss: 4.3529, dt: 1290.90ms, fracRes: 0.3699, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4817, norm(y): 1.0149, norm:1.2581, tok/sec: 101535.06, flops:106.56, batch-reuse:1
@ 3996 train 4.4024 , allloss: 4.4042, dt: 1308.43ms, fracRes: 0.3696, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4826, norm(y): 1.0150, norm:1.1080, tok/sec: 100174.91, flops:105.14, batch-reuse:1
@ 3997 train 4.3324 , allloss: 4.3335, dt: 1310.44ms, fracRes: 0.3688, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4812, norm(y): 1.0150, norm:1.2709, tok/sec: 100021.47, flops:104.97, batch-reuse:1
@ 3998 train 4.3058 , allloss: 4.3067, dt: 1313.30ms, fracRes: 0.3696, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4827, norm(y): 1.0152, norm:1.3336, tok/sec: 99803.18, flops:104.75, batch-reuse:1
@ 3999 train 4.3738 , allloss: 4.3750, dt: 1296.34ms, fracRes: 0.3694, norm(attn): 0.2197, norm(output): 0.6016, norm(x): 0.4819, norm(y): 1.0152, norm:1.2925, tok/sec: 101109.15, flops:106.12, batch-reuse:1
@ 4000 val 4.3534
@ 4000 train 4.3535 , allloss: 4.3544, dt: 1894.46ms, fracRes: 0.3679, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4809, norm(y): 1.0150, norm:1.1994, tok/sec: 69187.13, flops:72.61, batch-reuse:1
@ 4001 train 4.2486 , allloss: 4.2500, dt: 1308.02ms, fracRes: 0.3681, norm(attn): 0.2246, norm(output): 0.6016, norm(x): 0.4824, norm(y): 1.0150, norm:1.3488, tok/sec: 100206.19, flops:105.17, batch-reuse:1
@ 4002 train 4.3273 , allloss: 4.3287, dt: 1274.54ms, fracRes: 0.3684, norm(attn): 0.2266, norm(output): 0.6016, norm(x): 0.4809, norm(y): 1.0150, norm:1.3950, tok/sec: 102838.62, flops:107.93, batch-reuse:1
@ 4003 train 4.4041 , allloss: 4.4103, dt: 1301.37ms, fracRes: 0.3700, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4809, norm(y): 1.0151, norm:1.4261, tok/sec: 100718.17, flops:105.71, batch-reuse:1
@ 4004 train 4.2646 , allloss: 4.2681, dt: 1311.90ms, fracRes: 0.3701, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4843, norm(y): 1.0151, norm:1.2731, tok/sec: 99909.83, flops:104.86, batch-reuse:1
@ 4005 train 4.5912 , allloss: 4.5951, dt: 1315.51ms, fracRes: 0.3742, norm(attn): 0.2207, norm(output): 0.6094, norm(x): 0.4898, norm(y): 1.0151, norm:2.4391, tok/sec: 99635.75, flops:104.57, batch-reuse:1
@ 4006 train 4.4252 , allloss: 4.4311, dt: 1339.42ms, fracRes: 0.3716, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4837, norm(y): 1.0151, norm:1.8050, tok/sec: 97857.21, flops:102.70, batch-reuse:1
@ 4007 train 4.4010 , allloss: 4.4019, dt: 1344.94ms, fracRes: 0.3727, norm(attn): 0.2188, norm(output): 0.6016, norm(x): 0.4833, norm(y): 1.0150, norm:1.3931, tok/sec: 97455.69, flops:102.28, batch-reuse:1
@ 4008 train 4.3980 , allloss: 4.4029, dt: 1307.93ms, fracRes: 0.3709, norm(attn): 0.2246, norm(output): 0.6016, norm(x): 0.4844, norm(y): 1.0148, norm:1.3562, tok/sec: 100213.11, flops:105.18, batch-reuse:1
@ 4009 train 4.3393 , allloss: 4.3403, dt: 1304.08ms, fracRes: 0.3701, norm(attn): 0.2246, norm(output): 0.6055, norm(x): 0.4849, norm(y): 1.0149, norm:1.2620, tok/sec: 100509.34, flops:105.49, batch-reuse:1
@ 4010 train 4.3612 , allloss: 4.3650, dt: 1310.44ms, fracRes: 0.3713, norm(attn): 0.2246, norm(output): 0.6016, norm(x): 0.4845, norm(y): 1.0151, norm:1.5573, tok/sec: 100021.05, flops:104.97, batch-reuse:1
@ 4011 train 4.3900 , allloss: 4.3956, dt: 1303.76ms, fracRes: 0.3716, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4816, norm(y): 1.0151, norm:1.4123, tok/sec: 100534.20, flops:105.51, batch-reuse:1
@ 4012 train 4.3922 , allloss: 4.3933, dt: 1306.65ms, fracRes: 0.3700, norm(attn): 0.2236, norm(output): 0.6016, norm(x): 0.4820, norm(y): 1.0151, norm:1.4100, tok/sec: 100311.16, flops:105.28, batch-reuse:1
@ 4013 train 4.4250 , allloss: 4.4268, dt: 1307.57ms, fracRes: 0.3691, norm(attn): 0.2217, norm(output): 0.6016, norm(x): 0.4832, norm(y): 1.0150, norm:1.2040, tok/sec: 100240.85, flops:105.20, batch-reuse:1
@ 4014 train 4.4870 , allloss: 4.4894, dt: 1314.38ms, fracRes: 0.3714, norm(attn): 0.2207, norm(output): 0.6016, norm(x): 0.4813, norm(y): 1.0152, norm:1.5744, tok/sec: 99721.47, flops:104.66, batch-reuse:1
@ 4015 train 4.3648 , allloss: 4.3654, dt: 1334.49ms, fracRes: 0.3719, norm(attn): 0.2188, norm(output): 0.6055, norm(x): 0.4824, norm(y): 1.0152, norm:1.3338, tok/sec: 98219.07, flops:103.08, batch-reuse:1
@ 4016 train 4.4165 , allloss: 4.4177, dt: 1304.66ms, fracRes: 0.3723, norm(attn): 0.2188, norm(output): 0.6055, norm(x): 0.4843, norm(y): 1.0151, norm:1.4754, tok/sec: 100464.85, flops:105.44, batch-reuse:1
@ 4017 train 4.3500 , allloss: 4.3516, dt: 1336.45ms, fracRes: 0.3733, norm(attn): 0.2188, norm(output): 0.6055, norm(x): 0.4834, norm(y): 1.0150, norm:1.2286, tok/sec: 98074.74, flops:102.93, batch-reuse:1
@ 4018 train 4.3730 , allloss: 4.3739, dt: 1285.70ms, fracRes: 0.3747, norm(attn): 0.2188, norm(output): 0.6055, norm(x): 0.4783, norm(y): 1.0151, norm:1.1626, tok/sec: 101946.34, flops:106.99, batch-reuse:1
@ 4019 train 4.4958 , allloss: 4.4979, dt: 1313.77ms, fracRes: 0.3749, norm(attn): 0.2197, norm(output): 0.6016, norm(x): 0.4818, norm(y): 1.0151, norm:1.2183, tok/sec: 99767.98, flops:104.71, batch-reuse:1
@ 4020 train 4.3432 , allloss: 4.3442, dt: 1329.51ms, fracRes: 0.3730, norm(attn): 0.2207, norm(output): 0.6055, norm(x): 0.4842, norm(y): 1.0150, norm:1.2100, tok/sec: 98586.58, flops:103.47, batch-reuse:1
@ 4021 train 4.3517 , allloss: 4.3522, dt: 1318.68ms, fracRes: 0.3716, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4837, norm(y): 1.0151, norm:1.4092, tok/sec: 99396.65, flops:104.32, batch-reuse:1
@ 4022 train 4.2109 , allloss: 4.2121, dt: 1283.42ms, fracRes: 0.3716, norm(attn): 0.2236, norm(output): 0.6055, norm(x): 0.4850, norm(y): 1.0151, norm:1.1654, tok/sec: 102127.27, flops:107.18, batch-reuse:1
@ 4023 train 4.4606 , allloss: 4.4624, dt: 1301.79ms, fracRes: 0.3703, norm(attn): 0.2197, norm(output): 0.6055, norm(x): 0.4847, norm(y): 1.0151, norm:1.4613, tok/sec: 100685.65, flops:105.67, batch-reuse:1
@ 4024 train 4.4312 , allloss: 4.4350, dt: 1337.51ms, fracRes: 0.3690, norm(attn): 0.2217, norm(output): 0.6055, norm(x): 0.4842, norm(y): 1.0150, norm:1.2093, tok/sec: 97997.14, flops:102.85, batch-reuse:1
@ 4025 train 4.3392 , allloss: 4.3404, dt: 1332.03ms, fracRes: 0.3694, norm(attn): 0.2227, norm(output): 0.6016, norm(x): 0.4808, norm(y): 1.0151, norm:1.2345, tok/sec: 98399.95, flops:103.27, batch-reuse:1
@ 4026 train 4.2606 , allloss: 4.2621, dt: 1356.98ms, fracRes: 0.3695, norm(attn): 0.2256, norm(output): 0.6016, norm(x): 0.4821, norm(y): 1.0151, norm:1.1326, tok/sec: 96591.04, flops:101.37, batch-reuse:1
@ 4027 train 4.3369 , allloss: 4.3385, dt: 1336.40ms, fracRes: 0.3692, norm(attn): 0.2266, norm(output): 0.6055, norm(x): 0.4848, norm(y): 1.0151, norm:1.2374, tok/sec: 98078.71, flops:102.94, batch-reuse:1
@ 4028 train 4.3574 , allloss: 4.3591, dt: 1332.28ms, fracRes: 0.3686, norm(attn): 0.2246, norm(output): 0.6055, norm(x): 0.4876, norm(y): 1.0150, norm:1.1529, tok/sec: 98381.87, flops:103.25, batch-reuse:1
@ 4029 train 4.3504 , allloss: 4.3518, dt: 1316.38ms, fracRes: 0.3709, norm(attn): 0.2217, norm(output): 0.6055, norm(x): 0.4859, norm(y): 1.0151, norm:1.3134, tok/sec: 99570.18, flops:104.50, batch-reuse:1
@ 4030 train 4.1926 , allloss: 4.1934, dt: 1313.68ms, fracRes: 0.3719, norm(attn): 0.2227, norm(output): 0.6094, norm(x): 0.4855, norm(y): 1.0151, norm:1.3237, tok/sec: 99775.05, flops:104.72, batch-reuse:1
@ 4031 train 4.2481 , allloss: 4.2498, dt: 1305.77ms, fracRes: 0.3730, norm(attn): 0.2207, norm(output): 0.6055, norm(x): 0.4863, norm(y): 1.0151, norm:1.2253, tok/sec: 100379.28, flops:105.35, batch-reuse:1
@ 4032 train 4.2294 , allloss: 4.2311, dt: 1329.43ms, fracRes: 0.3733, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4842, norm(y): 1.0151, norm:1.2899, tok/sec: 98592.94, flops:103.48, batch-reuse:1
@ 4033 train 4.2808 , allloss: 4.2821, dt: 1312.80ms, fracRes: 0.3729, norm(attn): 0.2246, norm(output): 0.6094, norm(x): 0.4847, norm(y): 1.0151, norm:1.2724, tok/sec: 99841.38, flops:104.79, batch-reuse:1
@ 4034 train 4.2458 , allloss: 4.2476, dt: 1307.32ms, fracRes: 0.3731, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4866, norm(y): 1.0151, norm:1.2800, tok/sec: 100260.16, flops:105.22, batch-reuse:1
@ 4035 train 4.2575 , allloss: 4.2586, dt: 1338.53ms, fracRes: 0.3728, norm(attn): 0.2207, norm(output): 0.6055, norm(x): 0.4819, norm(y): 1.0152, norm:1.2140, tok/sec: 97922.48, flops:102.77, batch-reuse:1
@ 4036 train 4.1912 , allloss: 4.1922, dt: 1316.84ms, fracRes: 0.3723, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4833, norm(y): 1.0151, norm:1.3795, tok/sec: 99535.47, flops:104.46, batch-reuse:1
@ 4037 train 4.2327 , allloss: 4.2344, dt: 1281.31ms, fracRes: 0.3712, norm(attn): 0.2217, norm(output): 0.6094, norm(x): 0.4844, norm(y): 1.0151, norm:1.1431, tok/sec: 102294.96, flops:107.36, batch-reuse:1
@ 4038 train 4.2347 , allloss: 4.2369, dt: 1283.21ms, fracRes: 0.3716, norm(attn): 0.2236, norm(output): 0.6094, norm(x): 0.4823, norm(y): 1.0151, norm:1.5080, tok/sec: 102143.74, flops:107.20, batch-reuse:1
@ 4039 train 4.2038 , allloss: 4.2055, dt: 1298.41ms, fracRes: 0.3711, norm(attn): 0.2246, norm(output): 0.6055, norm(x): 0.4832, norm(y): 1.0151, norm:1.2210, tok/sec: 100947.86, flops:105.95, batch-reuse:1
@ 4040 train 4.2467 , allloss: 4.2485, dt: 1321.17ms, fracRes: 0.3698, norm(attn): 0.2227, norm(output): 0.6133, norm(x): 0.4873, norm(y): 1.0150, norm:1.4829, tok/sec: 99209.03, flops:104.12, batch-reuse:1
@ 4041 train 4.1668 , allloss: 4.1678, dt: 1323.11ms, fracRes: 0.3692, norm(attn): 0.2266, norm(output): 0.6055, norm(x): 0.4852, norm(y): 1.0150, norm:1.3071, tok/sec: 99063.28, flops:103.97, batch-reuse:1
@ 4042 train 4.2671 , allloss: 4.2685, dt: 1311.97ms, fracRes: 0.3692, norm(attn): 0.2275, norm(output): 0.6055, norm(x): 0.4861, norm(y): 1.0150, norm:1.4137, tok/sec: 99904.76, flops:104.85, batch-reuse:1
@ 4043 train 4.2686 , allloss: 4.2704, dt: 1341.06ms, fracRes: 0.3696, norm(attn): 0.2246, norm(output): 0.6133, norm(x): 0.4863, norm(y): 1.0150, norm:1.1779, tok/sec: 97737.74, flops:102.58, batch-reuse:1
@ 4044 train 4.2867 , allloss: 4.2883, dt: 1315.28ms, fracRes: 0.3709, norm(attn): 0.2207, norm(output): 0.6172, norm(x): 0.4864, norm(y): 1.0152, norm:1.2993, tok/sec: 99653.51, flops:104.59, batch-reuse:1
@ 4045 train 4.2322 , allloss: 4.2346, dt: 1320.57ms, fracRes: 0.3714, norm(attn): 0.2207, norm(output): 0.6133, norm(x): 0.4834, norm(y): 1.0152, norm:1.2660, tok/sec: 99254.47, flops:104.17, batch-reuse:1
@ 4046 train 4.2786 , allloss: 4.2797, dt: 1334.81ms, fracRes: 0.3720, norm(attn): 0.2227, norm(output): 0.6133, norm(x): 0.4867, norm(y): 1.0151, norm:1.1861, tok/sec: 98195.46, flops:103.06, batch-reuse:1
@ 4047 train 4.3434 , allloss: 4.3485, dt: 1289.16ms, fracRes: 0.3717, norm(attn): 0.2227, norm(output): 0.6133, norm(x): 0.4862, norm(y): 1.0150, norm:1.2165, tok/sec: 101672.16, flops:106.71, batch-reuse:1
@ 4048 train 4.2551 , allloss: 4.2570, dt: 1308.65ms, fracRes: 0.3723, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4856, norm(y): 1.0152, norm:1.2605, tok/sec: 100158.12, flops:105.12, batch-reuse:1
@ 4049 train 4.1867 , allloss: 4.1880, dt: 1331.95ms, fracRes: 0.3724, norm(attn): 0.2275, norm(output): 0.6016, norm(x): 0.4835, norm(y): 1.0152, norm:1.1876, tok/sec: 98405.99, flops:103.28, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0413,     0.9570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1562,     0.5000,     0.3438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0182,     0.1328,     0.3398,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.1299,     0.0396,     0.6719,     0.1572,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0527,     0.1934,     0.2656,     0.1934,     0.1465,     0.1484,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1436,     0.0996,     0.0320,     0.1211,     0.3457,     0.2168,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3340,     0.0228,     0.1157,     0.0034,     0.0111,     0.0464,     0.4277,     0.0391,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.1611,     0.0635,     0.2363,     0.0378,     0.1826,     0.0532,     0.1040,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.1416,     0.0967,     0.2012,     0.0391,     0.1611,     0.1543,     0.0444,     0.1309,     0.0142,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0493,     0.0071,     0.5859,     0.0325,     0.0288,     0.0037,     0.0040,     0.1934,     0.0042,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1377,     0.0613,     0.0757,     0.0576,     0.0238,     0.1797,     0.1147,     0.1377,     0.0199,     0.0723,     0.0383,     0.0811,     0.0000,     0.0000,     0.0000],
        [    0.3613,     0.0278,     0.0344,     0.0089,     0.0364,     0.0425,     0.1943,     0.0537,     0.0095,     0.0469,     0.0159,     0.0264,     0.1426,     0.0000,     0.0000],
        [    0.0111,     0.0996,     0.0549,     0.1729,     0.0312,     0.1094,     0.0403,     0.0757,     0.1494,     0.0156,     0.0579,     0.0742,     0.0147,     0.0933,     0.0000],
        [    0.0088,     0.1060,     0.0757,     0.1533,     0.0635,     0.0967,     0.0569,     0.0261,     0.0537,     0.0170,     0.0986,     0.0508,     0.0170,     0.0452,     0.1309]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0014, -0.0197,  0.0487,  ...,  0.0085,  0.0090,  0.0202],
        [ 0.0207, -0.0009,  0.0064,  ..., -0.0041,  0.0261,  0.0068],
        [-0.0338,  0.0106, -0.0102,  ..., -0.0245, -0.0134,  0.0171],
        ...,
        [-0.0400,  0.0066, -0.0624,  ...,  0.0095, -0.0144, -0.0168],
        [ 0.0057, -0.0157,  0.0072,  ...,  0.0332, -0.0148,  0.0123],
        [-0.0286,  0.0042, -0.0317,  ...,  0.0024, -0.0025,  0.0198]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1582,  0.2305, -1.5859,  0.9844, -0.8594, -0.0562, -1.2578,  0.3965, -1.0859, -0.5469, -1.2891, -0.1738,  0.0547, -1.6562, -1.1406,  1.3672, -0.6406,  1.5391, -0.6914, -0.5312,  0.1807, -1.0391, -1.5625,  1.4688,  0.0500,  0.3066,  0.8594, -0.6836, -0.8203,  1.0625,  0.0532,  0.0728,
         0.6641, -0.3359,  0.5703, -0.4961, -0.0089,  0.7656, -1.5000, -0.4043, -0.8359, -0.4355,  0.6211, -0.0806, -1.2812,  0.6289,  0.0349,  0.7656,  0.7266,  0.1191, -0.5117,  0.4375,  0.0165,  2.6250, -0.1289, -0.2021,  1.1016,  0.2441,  0.8984, -0.0991, -0.1953,  1.0156, -0.6680,  0.8672],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0143,  0.0128, -0.0297,  ...,  0.0152,  0.0277,  0.0133],
        [ 0.0185, -0.0226, -0.0335,  ..., -0.0045,  0.0302,  0.0293],
        [-0.0030,  0.0241,  0.0346,  ...,  0.0024,  0.0075, -0.0345],
        ...,
        [ 0.0205,  0.0100,  0.0344,  ..., -0.0018,  0.0168, -0.0246],
        [ 0.0057, -0.0183, -0.0320,  ...,  0.0251, -0.0196, -0.0088],
        [ 0.0287, -0.0093,  0.0284,  ..., -0.0115, -0.0463, -0.0210]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.3945, -0.4531,  0.0020, -0.0085, -0.9453,  0.4316, -1.1328,  0.2637, -1.1094, -0.4980, -0.4277, -0.7617,  0.4922, -0.3730, -0.6602,  0.5469, -1.0156,  0.5977,  0.3887, -0.9023,  0.1016, -0.0564, -0.8359,  1.1953, -1.0391, -0.9023,  1.2812,  0.9297, -0.7031,  0.1523, -0.4434,  0.7578,
         0.2051, -0.3125,  0.6875, -0.1562, -0.1982,  0.5234, -0.9961,  0.1040, -0.1934, -1.0000, -0.0248, -0.1143, -0.5547, -0.2354,  0.2949, -0.2891, -0.4668, -0.0630, -0.7227,  0.8125,  0.5078,  1.5391,  0.5234, -0.6875,  0.3262,  0.1182,  0.7500,  1.0391, -0.0640, -0.4297,  0.1826,  0.9297],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      3.1406,      0.5977,      3.2188,      1.2266,      2.9688,      2.4062,      0.7070,      1.3047,     -0.3477,      1.8203,      1.7266,      0.7344,      1.2031,      2.4531],
        [     0.0000,      1.1641,      0.7891,      1.2188,     -0.3262,      1.6328,      1.8516,      0.4453,     -0.4707,     -0.5859,      0.4355,      0.5625,      0.7734,     -0.4336,      0.7656],
        [     0.0000,      1.9844,      2.9219,      3.3281,     -0.2891,      1.0938,      1.0625,      1.4531,      0.5273,      0.7188,      0.5625,      1.8281,      1.6406,      0.4336,      1.5312],
        [     0.0000,      3.9219,      2.7344,      5.5625,      4.1250,      3.5000,      2.9844,      1.4609,      4.6562,      1.9531,      5.0312,      3.8125,      0.7344,      4.3750,      4.0000],
        [     0.0000,      1.2969,      1.6172,      1.2969,      1.0234,      1.0391,      1.5781,      0.3359,      1.2031,     -0.2656,      1.4766,      1.0078,     -0.6211,      1.3359,      1.6641],
        [     0.0000,     -0.3672,     -1.5078,     -0.1748,      0.8750,      0.4082,     -1.2344,      0.1250,      0.4023,     -0.1553,      0.8750,     -0.5781,     -1.1562,      0.2871,      0.0261],
        [     0.0000,     -2.6719,     -1.0547,     -4.5625,     -3.4062,     -1.9688,      0.2490,     -2.1406,     -4.4688,     -2.0938,     -4.0938,     -3.0938,     -1.2344,     -3.6719,     -2.3594],
        [     0.0000,      2.4062,      1.4766,      2.7969,      0.9570,      2.5312,      1.3047,      1.9688,      2.3125,      0.6875,      1.9531,      2.4688,      0.5117,      2.0625,      2.3906],
        [     0.0000,      2.0938,      1.7109,      2.4375,      0.8008,      2.2188,      2.1719,      0.9336,      2.0156,     -0.2051,      1.8984,      1.7344,      0.6797,      1.5000,      2.3594],
        [     0.0000,      5.9375,      4.0000,      8.4375,      5.5000,      5.4062,      3.3438,      3.4219,      7.3125,      3.4531,      6.5312,      5.6562,      1.9609,      6.1875,      5.4688],
        [     0.0000,     -0.8125,     -0.6016,     -0.8750,     -1.7578,      0.2637,     -0.1875,     -0.0004,     -1.9375,     -0.6484,     -1.2812,     -0.5352,      0.4316,     -1.8516,     -0.9805],
        [     0.0000,     -2.5625,     -2.3438,     -3.7031,     -2.2969,     -2.1406,     -0.6172,     -1.9062,     -3.6406,     -2.0469,     -3.1250,     -2.6094,     -0.9297,     -3.4219,     -1.9453],
        [     0.0000,      2.1875,      1.6016,      2.7344,      1.0312,      2.2812,      1.2891,      1.9141,      2.5938,      0.3340,      1.6484,      1.8906,      0.2793,      2.1250,      2.8906],
        [     0.0000,      2.4844,      2.1562,      2.8594,      1.9766,      2.3906,      1.8672,      1.0938,      1.8125,      0.6562,      2.4219,      1.7578,      0.6602,      1.6406,      2.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3543],
        [0.3725],
        [0.1862],
        [0.2152],
        [0.1960],
        [0.1744],
        [0.1214],
        [0.0771],
        [0.0933],
        [0.0329],
        [0.1272],
        [0.0962],
        [0.0534],
        [0.0580]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2109,     0.0065,     0.6445,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5078,     0.0132,     0.4395,     0.0273,     0.0004,     0.0008,     0.0064,     0.0069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0052,     0.1157,     0.0225,     0.0001,     0.0019,     0.0014,     0.0013,     0.0006,     0.0110,     0.0000,     0.0140,     0.0010,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0075, -0.0097,  0.0233,  ..., -0.0070, -0.0199, -0.0048],
        [-0.0229,  0.0184,  0.0055,  ...,  0.0045,  0.0226,  0.0078],
        [-0.0058,  0.0276,  0.0040,  ..., -0.0039, -0.0377,  0.0057],
        ...,
        [ 0.0268, -0.0426, -0.0203,  ...,  0.0117,  0.0093,  0.0002],
        [-0.0515, -0.0407,  0.0174,  ...,  0.0466, -0.0048,  0.0099],
        [ 0.0380, -0.0057,  0.0371,  ...,  0.0527,  0.0131,  0.0449]], device='cuda:0', requires_grad=True)
K: tensor([-2.1719,  2.7344,  3.3438, -3.7500, -0.5430, -3.2500,  0.5469,  2.1094,  4.9688,  4.1250, -1.5625, -2.1875,  3.2031,  0.6680,  0.0177,  3.7969, -2.0938, -5.0625,  2.4844,  3.0625,  0.7695, -1.8984,  1.8047, -2.6562,  3.5469, -4.3438, -3.9062,  2.6406,  0.5430, -0.6367,  2.6094,  1.6719,
         0.7227,  3.9844, -2.0938,  2.9375,  0.8086,  1.5156, -1.8125, -1.5312, -1.3203, -2.6406,  3.1875, -2.4219, -0.3887, -0.0850, -1.0312, -2.1250, -1.9062,  2.6250,  0.0178, -1.6250, -1.3359, -2.3594,  3.9531, -2.3906, -0.6172, -2.2969, -2.5312,  3.1875,  2.9375, -0.3965,  1.9453, -1.6797],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0162,  0.0416,  0.0148,  ...,  0.0174,  0.0021,  0.0408],
        [ 0.0145, -0.0261,  0.0175,  ...,  0.0491, -0.0199,  0.0104],
        [-0.0134,  0.0063, -0.0111,  ..., -0.0115, -0.0206,  0.0024],
        ...,
        [-0.0410,  0.0114,  0.0308,  ..., -0.0091,  0.0149, -0.0030],
        [ 0.0304, -0.0138, -0.0084,  ..., -0.0194, -0.0244,  0.0322],
        [ 0.0084,  0.0128, -0.0344,  ...,  0.0016, -0.0094, -0.0126]], device='cuda:0', requires_grad=True)
Q: tensor([-1.1328,  0.4863, -0.5859,  0.1797, -0.6641,  1.6406, -1.9609, -0.2168, -0.1133, -2.6250,  1.0547,  2.6562, -1.0859, -0.4922, -1.0156, -1.7500,  1.1875,  0.8672, -1.5156, -0.2236, -0.5703,  1.5859, -0.1309,  1.5703,  0.6016,  1.8281,  0.8281,  0.3555, -1.8438, -0.1787,  0.5117, -1.2734,
        -2.2188, -1.1562,  0.2344, -1.1172,  1.5469, -0.6289,  3.0312, -0.0186,  2.1875,  1.8516, -0.5195,  2.7344, -1.4922, -0.3906,  1.3203,  2.3906,  3.3906, -1.5469,  1.1484,  0.7695,  0.2139,  2.8906, -0.2559,  1.2656,  1.6016,  1.6328,  1.4609, -0.4316, -0.2100,  0.5273, -2.7344,  1.5078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000, -13.3750, -10.5625, -11.1875, -14.1250, -18.6250, -13.3750, -13.0625, -15.6250, -15.0625, -17.6250, -12.1250, -11.5000, -15.1250, -12.6250],
        [  0.0000, -17.8750, -14.1250, -14.3125, -17.2500, -21.2500, -20.0000, -18.3750, -21.5000, -17.7500, -22.3750, -16.0000, -17.5000, -21.2500, -18.7500],
        [  0.0000,  -3.4844,   1.1172,  -0.4375,  -4.3750,  -6.6562,  -3.7344,  -4.6250,  -5.9688,  -3.5000,  -7.0625,  -1.2188,  -4.7500,  -5.3125,   0.2500],
        [  0.0000,  -9.1250,  -7.8438,  -8.5625, -11.9375, -11.9375,  -9.8750,  -9.0000, -10.7500, -10.3750, -13.2500,  -8.3750,  -9.5000, -10.4375,  -9.5000],
        [  0.0000, -10.0625,  -7.9062,  -8.6875, -11.5000, -17.2500, -11.4375, -10.5625, -12.3125, -11.5000, -15.1250,  -7.6562, -10.1250, -11.8750, -10.3750],
        [  0.0000, -10.9375,  -7.9688,  -9.6250, -14.8750, -16.1250, -12.6875, -10.6875, -13.1250, -11.8125, -16.8750, -10.0000, -11.3125, -12.8125, -12.4375],
        [  0.0000,  -3.6406,  -0.1436,  -2.9219,  -7.2812,  -6.4688,  -4.3750,  -4.3125,  -5.3125,  -2.4375,  -8.6250,  -1.7969,  -4.2812,  -4.8125,  -0.9492],
        [  0.0000, -13.5625, -10.1875, -11.8125, -14.1250, -18.8750, -13.5000, -11.4375, -14.0625, -13.5625, -16.7500, -12.1250, -11.3750, -13.5000, -14.0000],
        [  0.0000, -10.9375,  -9.4375,  -8.5625, -13.0625, -12.8750, -11.4375, -10.7500, -12.5625,  -9.7500, -14.2500, -10.1875, -10.5000, -12.1875,  -8.6250],
        [  0.0000, -10.6875,  -9.8750,  -8.8125, -11.6875, -15.3750, -11.8750, -10.5625, -11.1250, -11.5625, -13.7500,  -7.7812, -10.4375, -10.5625, -10.4375],
        [  0.0000, -13.3750, -10.5000, -11.3750, -15.1250, -17.1250, -16.8750, -14.3125, -16.7500, -12.6875, -18.5000, -11.6875, -15.0000, -16.5000, -14.1875],
        [  0.0000,  -5.0625,  -1.9609,  -3.6094,  -9.2500,  -6.0625,  -6.3750,  -6.4375,  -7.2188,  -4.3125, -10.1875,  -4.0938,  -6.6875,  -6.9375,  -1.9219],
        [  0.0000, -13.7500, -10.7500, -12.5000, -14.4375, -18.6250, -13.8125, -11.4375, -14.1875, -13.6875, -16.8750, -12.6875, -11.6250, -13.6875, -14.8125],
        [  0.0000, -19.3750, -15.3750, -15.0625, -20.3750, -24.8750, -21.3750, -19.2500, -22.2500, -19.8750, -24.1250, -18.3750, -19.5000, -22.0000, -17.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6339],
        [0.5430],
        [0.4121],
        [0.4087],
        [0.5813],
        [0.6809],
        [0.4202],
        [0.5402],
        [0.4090],
        [0.5710],
        [0.4379],
        [0.3994],
        [0.5258],
        [0.6442]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0012,     0.0029,     0.0004,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7461,     0.0056,     0.0095,     0.0012,     0.0008,     0.2383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3379,     0.0214,     0.0200,     0.0018,     0.0023,     0.5273,     0.0898,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9023,     0.0007,     0.0012,     0.0003,     0.0004,     0.0806,     0.0054,     0.0041,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0035,     0.0620,     0.0125,     0.0040,     0.0067,     0.3164,     0.2988,     0.0752,     0.1934,     0.0107,     0.0151,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0006,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    0.9102,     0.0005,     0.0009,     0.0002,     0.0004,     0.0618,     0.0041,     0.0031,     0.0033,     0.0021,     0.0007,     0.0030,     0.0072,     0.0036,     0.0000],
        [    0.8164,     0.0012,     0.0014,     0.0003,     0.0010,     0.0986,     0.0061,     0.0067,     0.0160,     0.0027,     0.0019,     0.0021,     0.0125,     0.0178,     0.0135]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0052,  0.0175, -0.0029,  ..., -0.0131,  0.0006,  0.0217],
        [-0.0340,  0.0040,  0.0006,  ...,  0.0159,  0.0303,  0.0077],
        [ 0.0020, -0.0187, -0.0077,  ...,  0.0100,  0.0239,  0.0052],
        ...,
        [ 0.0029, -0.0052, -0.0256,  ...,  0.0385,  0.0072, -0.0109],
        [-0.0023,  0.0214, -0.0322,  ...,  0.0410,  0.0095,  0.0060],
        [ 0.0095, -0.0099,  0.0175,  ..., -0.0706, -0.0284, -0.0105]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1992, -1.6484,  0.2578, -1.5078, -1.4609,  1.8906,  0.8672, -0.1973, -2.1875,  1.1328,  0.4902, -1.4297, -2.6719, -0.7891,  1.3281,  2.3750, -1.0625, -1.4922,  0.9727, -2.7031, -2.4375, -0.9258, -1.9219,  2.3125, -1.3516,  1.1719,  0.9023,  2.2031,  1.6641, -1.5078, -1.7969,  1.5547,
        -1.4609,  1.6172, -0.9219,  1.7891, -1.3125, -0.0693, -1.4922,  2.2344, -0.3477, -1.6016,  2.0938,  2.1562, -0.9844, -2.1406, -1.0938,  2.0469, -1.2891, -1.4141, -0.4980, -2.2969, -3.0938, -2.6719,  2.1719, -1.6719, -2.0469,  0.8086,  1.7031, -1.7734, -2.4219,  1.4375,  2.6875, -2.3125],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0093, -0.0228,  0.0269,  ...,  0.0173, -0.0085,  0.0156],
        [-0.0141, -0.0144,  0.0303,  ..., -0.0090, -0.0276, -0.0250],
        [-0.0283, -0.0119, -0.0124,  ..., -0.0560, -0.0641, -0.0574],
        ...,
        [-0.0294,  0.0007,  0.0385,  ..., -0.0016, -0.0374, -0.0390],
        [ 0.0252,  0.0171, -0.0168,  ..., -0.0648, -0.0238,  0.0128],
        [ 0.0283, -0.0027,  0.0024,  ..., -0.0048,  0.0123,  0.0329]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.2773, -1.7812,  1.0391,  1.6797,  0.0835, -0.0767,  0.6328, -0.8906,  0.0835,  0.5625, -1.5625,  0.8789, -0.3984, -0.7227,  0.2910,  0.6172,  1.3594,  2.3438,  0.2080, -0.6523,  0.6016,  0.3086, -0.2480, -0.9883, -0.2354, -1.4688,  0.1108,  0.2559,  0.1318, -0.1982,  0.0410, -0.2412,
         1.1641, -0.3594,  1.2344, -0.5938,  2.2500, -0.2168,  1.6797, -0.7891, -1.0859,  0.0398, -1.0625, -1.1406, -0.4473,  0.1348, -0.0884,  0.9102,  0.7812,  1.1328,  2.3281, -0.5156,  0.2598, -0.2852, -0.3301,  0.2041,  0.8984, -1.7812,  1.5312,  2.4844,  1.5000, -1.8438,  0.6836,  0.6875],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.8750,  -7.2500,  -9.1875,  -8.6875,  -3.9531,  -6.7188,  -6.7812,  -5.7500,  -7.9375,  -8.0000,  -7.4688,  -7.0312,  -5.7188,  -6.2812],
        [  0.0000, -10.8750,  -9.7500, -11.6250, -10.3750,  -7.5312, -10.5625,  -9.1250,  -8.6875,  -8.8750, -10.0625,  -9.5000,  -7.1562,  -8.4375,  -9.4375],
        [  0.0000, -13.1250, -11.8750, -13.9375, -12.3750,  -8.7500, -12.2500, -10.7500, -10.5000, -11.3125, -12.3750, -11.2500,  -9.1875, -10.2500, -11.3125],
        [  0.0000,  -6.6875,  -5.8438,  -7.7812,  -7.2500,  -3.4844,  -4.7188,  -5.0938,  -5.0312,  -6.6562,  -6.6562,  -6.0312,  -5.2188,  -5.0312,  -4.4062],
        [  0.0000,  -4.9062,  -4.3750,  -6.4688,  -6.8750,  -1.1406,  -3.5312,  -3.6719,  -3.5156,  -4.6250,  -6.1562,  -4.5000,  -2.7344,  -3.3906,  -2.8125],
        [  0.0000,  -2.7656,  -2.8281,  -5.2500,  -5.0000,   0.4414,  -1.3281,  -1.5000,  -1.1641,  -3.0781,  -3.7344,  -3.9375,  -1.8438,  -1.1484,  -1.2266],
        [  0.0000, -11.6875,  -9.8750, -12.2500, -12.5000,  -7.5625, -11.9375, -10.1875, -10.2500, -10.3750, -12.1875, -11.2500,  -9.1875, -10.0625, -11.0625],
        [  0.0000,  -7.0938,  -6.6562,  -8.0625,  -7.6875,  -2.4219,  -5.1250,  -5.4062,  -5.2812,  -5.9062,  -7.0000,  -5.5625,  -4.7188,  -5.2188,  -4.3125],
        [  0.0000, -12.8750, -10.4375, -12.8750, -12.7500,  -9.6875, -12.6875, -10.6250, -11.4375, -11.8750, -12.6250, -12.4375,  -9.6875, -11.3125, -11.9375],
        [  0.0000,   2.8750,   1.2734,   0.1226,   0.6484,   4.5000,   4.4375,   3.0625,   4.0000,   1.1172,   1.4688,   1.2969,   1.8672,   3.9219,   3.8594],
        [  0.0000, -13.1250, -11.4375, -12.8125, -11.8125,  -9.9375, -12.8750, -12.0000, -11.2500, -11.3750, -12.0625, -11.1250, -10.1250, -11.0625, -11.5000],
        [  0.0000, -10.8125,  -9.0000, -10.5625, -11.0625,  -7.4062, -11.0625,  -9.8125,  -9.4375,  -9.9375, -10.6875, -10.5000,  -9.6875,  -9.3750, -10.0000],
        [  0.0000,  -7.4062,  -6.8750,  -8.3125,  -7.8125,  -2.6875,  -5.4062,  -5.6875,  -5.5938,  -6.0625,  -7.1562,  -5.7188,  -4.8438,  -5.5312,  -4.4688],
        [  0.0000,  -6.5000,  -6.3438,  -8.0625,  -6.7188,  -2.1094,  -4.9062,  -4.8125,  -3.9375,  -5.6875,  -6.0625,  -5.9688,  -4.1875,  -3.8281,  -4.0938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9984],
        [0.9997],
        [1.0000],
        [0.9974],
        [0.9089],
        [0.8709],
        [0.9909],
        [0.8409],
        [0.9993],
        [0.8177],
        [0.9971],
        [0.9896],
        [0.8529],
        [0.9167]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9336, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.7383, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.4434, 0.0302, 0.4883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1729, 0.3574, 0.0947, 0.1777, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0425, 0.5352, 0.0757, 0.0767, 0.2139, 0.0579, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3379, 0.2021, 0.1562, 0.1553, 0.0728, 0.0267, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1738, 0.1602, 0.0781, 0.1904, 0.0289, 0.0140, 0.0120, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1523, 0.2354, 0.0884, 0.2432, 0.0330, 0.0461, 0.0208, 0.1631, 0.0186, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.3809, 0.0522, 0.1152, 0.0386, 0.0092, 0.0121, 0.1465, 0.0630, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2051, 0.0796, 0.0276, 0.0620, 0.0310, 0.0344, 0.0142, 0.2734, 0.0544, 0.1572, 0.0601, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0525, 0.1338, 0.0130, 0.1973, 0.1777, 0.0175, 0.0129, 0.0942, 0.0242, 0.0728, 0.1187, 0.0850, 0.0000, 0.0000, 0.0000],
        [0.0366, 0.1079, 0.0244, 0.0361, 0.0178, 0.0223, 0.0086, 0.2002, 0.0442, 0.1143, 0.0306, 0.0854, 0.2715, 0.0000, 0.0000],
        [0.0835, 0.1553, 0.0386, 0.1172, 0.0317, 0.0527, 0.0214, 0.0544, 0.0254, 0.1768, 0.0767, 0.0581, 0.0728, 0.0352, 0.0000],
        [0.0420, 0.1309, 0.0354, 0.0742, 0.0737, 0.0454, 0.1299, 0.0601, 0.0449, 0.0713, 0.0508, 0.0505, 0.0254, 0.0452, 0.1201]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0110,  0.0431,  0.0137,  ...,  0.0218,  0.0424, -0.0393],
        [-0.0043, -0.0691, -0.0004,  ...,  0.0052, -0.0177,  0.0391],
        [ 0.0206,  0.0141, -0.0490,  ..., -0.0062, -0.0109,  0.0195],
        ...,
        [ 0.0025,  0.0088, -0.0161,  ..., -0.0244, -0.0468,  0.0174],
        [ 0.0013,  0.0180, -0.0323,  ..., -0.0387, -0.0047,  0.0105],
        [-0.0270, -0.0049, -0.0307,  ..., -0.0276, -0.0204, -0.0077]], device='cuda:0', requires_grad=True)
K: tensor([ 1.6484,  0.6914, -0.3418, -1.0547,  0.7695, -0.8516, -1.3047, -0.1309, -0.0078, -1.0312,  1.0078, -0.0356,  0.5938, -1.1094,  1.9453,  0.2891,  0.4277, -0.7109,  0.6953,  0.6641,  0.6719,  1.7969,  0.0190,  1.1172,  1.1250,  0.5195, -2.5938, -1.8672,  2.4062,  0.9844,  0.1279,  0.8359,
        -0.1885,  0.4629, -1.4688, -1.7500,  1.0703,  0.4688,  0.8594, -2.1875,  0.4434, -0.0525,  0.3594,  0.1553,  1.8984, -0.1299,  0.9922,  1.1250,  0.1367,  0.2520,  0.5742, -1.5781,  0.7266,  0.5391,  0.4922,  0.4219, -0.5898, -0.3457, -1.6875, -0.1245, -0.3555, -0.4375, -0.6055,  0.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0045, -0.0215, -0.0344,  ...,  0.0333, -0.0109, -0.0185],
        [-0.0309, -0.0435,  0.0167,  ..., -0.0344, -0.0188, -0.0600],
        [ 0.0233,  0.0062, -0.0195,  ...,  0.0505, -0.0066,  0.0200],
        ...,
        [-0.0170,  0.0273,  0.0001,  ...,  0.0081,  0.0142,  0.0052],
        [ 0.0190,  0.0086, -0.0073,  ..., -0.0157,  0.0072,  0.0188],
        [-0.0166,  0.0420, -0.0014,  ..., -0.0003,  0.0013,  0.0119]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5781,  1.4688, -2.1406,  3.0469, -0.2285, -2.2656, -1.7109, -0.7852,  1.2188,  0.1465,  0.9648,  2.0469, -1.6172, -0.3301,  0.5742, -1.0234,  0.1992,  0.9492,  2.1719,  0.9766, -1.1406, -0.6250, -1.5625,  0.1924,  0.5039,  1.0156, -1.0234,  0.5898, -0.4668, -1.6641,  0.8438, -1.7344,
        -0.0452,  1.0078,  0.4766, -1.1328, -2.0625, -0.6992,  0.6641, -1.0234, -1.2656, -0.5586,  0.2500, -0.6367, -0.2412,  1.5859, -0.2676,  1.1406, -0.5273,  3.8594,  1.1797,  0.5391,  1.9688,  2.2812, -0.7188,  1.0547, -0.4805,  0.2334,  0.1387,  0.0898, -0.5156, -0.6602, -0.1680, -0.7461],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.6250, -2.6094, -2.2344, -3.1562, -3.9219, -3.0156, -2.5000, -4.3750, -2.7500, -4.4375, -1.9766, -2.7812, -4.7812, -2.7188],
        [ 0.0000,  1.5234, -0.4531,  2.5312,  2.2031, -0.5039,  1.4609, -0.7812, -0.4141, -1.8047, -0.5273, -1.1250,  0.1807, -1.0000, -1.1719],
        [ 0.0000,  2.4844, -0.2070,  2.5781,  2.8594,  0.2910,  1.4141, -0.5586,  0.3496, -0.3457,  0.0100, -0.9961,  0.9609, -0.3262,  0.7734],
        [ 0.0000,  0.7305, -0.6016,  0.0253,  0.1299, -0.5234, -1.1953,  1.2031, -1.9297,  0.4805, -1.8750,  0.2178,  0.1973, -2.8125,  0.6250],
        [ 0.0000,  2.5312,  0.5781,  0.5898,  1.6094,  0.3066,  1.3438,  2.7031,  0.8477,  0.5039,  0.1729,  0.3105,  0.3613, -0.2520,  0.7344],
        [ 0.0000, -0.5117, -0.7734, -0.7773, -1.5391, -2.5312, -1.9062,  0.9141, -2.2656, -0.3125, -3.5781,  0.9180, -0.8984, -3.3594,  0.4746],
        [ 0.0000, -0.0820, -0.8008,  0.0913, -1.7969, -2.5156, -2.6719,  0.6719, -1.7578,  0.3574, -2.0156,  0.5117,  0.6055, -1.9609,  1.4453],
        [ 0.0000,  0.4375, -0.5430,  0.4688, -1.5234, -1.1953, -1.9922,  0.0693, -2.1094,  0.9609, -1.2422,  0.2812, -0.1543, -2.2344,  0.9883],
        [ 0.0000,  1.5234, -0.4609,  0.3301, -0.7656, -2.2031, -1.9219,  0.5742, -0.2734,  0.1797,  1.5703,  1.4922,  1.7891, -0.1367,  0.5273],
        [ 0.0000, -0.9453, -2.0156, -1.1953, -1.8906, -1.7891, -2.6719,  0.2871, -1.3281, -0.2656, -1.2266,  0.9609,  0.5273, -1.4531, -0.0374],
        [ 0.0000,  0.9336, -1.3984,  1.3281,  1.2188, -1.1016, -1.3984,  0.5859, -0.7734,  0.3262,  0.8164,  0.4824,  2.9531, -0.7617,  0.3613],
        [ 0.0000,  1.0781, -0.4062, -0.0146, -0.7188, -0.4941, -1.4453,  1.6953,  0.1846,  1.1406, -0.1797,  0.8477,  2.0000,  0.6055,  2.3125],
        [ 0.0000,  0.6250, -0.7695,  0.3418, -0.9648, -0.4590, -1.3672, -0.4238, -1.1875,  0.7539, -0.0820, -0.3594, -0.1348, -0.8633,  0.7344],
        [ 0.0000,  1.1406, -0.1709,  0.5664,  0.5625,  0.0757,  1.1328,  0.3574,  0.0659,  0.5273,  0.1904,  0.1855, -0.5039,  0.0703,  1.0547]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1870],
        [0.0214],
        [0.0116],
        [0.0329],
        [0.0189],
        [0.0520],
        [0.0258],
        [0.0250],
        [0.0137],
        [0.0322],
        [0.0125],
        [0.0111],
        [0.0133],
        [0.0171]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0172,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0388,     0.8867,     0.0737,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.8477,     0.0459,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.8125,     0.0376,     0.0327,     0.1152,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.5586,     0.0315,     0.0175,     0.2461,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0425,     0.6094,     0.0825,     0.0258,     0.1035,     0.0123,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.7148,     0.0164,     0.0199,     0.1094,     0.0179,     0.0640,     0.0583,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0415,     0.2158,     0.1299,     0.0149,     0.0967,     0.0835,     0.1157,     0.2197,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0080,     0.3418,     0.0359,     0.0113,     0.0996,     0.0260,     0.0344,     0.1099,     0.0967,     0.2373,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.0106,     0.0067,     0.0005,     0.0006,     0.0011,     0.0017,     0.0095,     0.0046,     0.9336,     0.0291,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0129,     0.3359,     0.0430,     0.0708,     0.1162,     0.0093,     0.0527,     0.1680,     0.1201,     0.0183,     0.0189,     0.0342,     0.0000,     0.0000,     0.0000],
        [    0.0078,     0.1689,     0.0187,     0.0062,     0.0454,     0.0053,     0.0240,     0.0200,     0.3691,     0.0311,     0.0447,     0.0796,     0.1797,     0.0000,     0.0000],
        [    0.0075,     0.0170,     0.0129,     0.0009,     0.0076,     0.0063,     0.0070,     0.0162,     0.0179,     0.7617,     0.0237,     0.0182,     0.0786,     0.0242,     0.0000],
        [    0.0015,     0.4883,     0.0198,     0.0240,     0.1758,     0.0309,     0.0918,     0.0513,     0.0452,     0.0103,     0.0137,     0.0084,     0.0145,     0.0155,     0.0093]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0255,  0.0250, -0.0115,  ..., -0.0261,  0.0035, -0.0437],
        [ 0.0361,  0.0157,  0.0472,  ..., -0.0726, -0.0291,  0.0063],
        [-0.0073, -0.0062,  0.0329,  ...,  0.0386,  0.0029, -0.0326],
        ...,
        [-0.0012,  0.0021, -0.0109,  ..., -0.0290, -0.0253,  0.0039],
        [ 0.0188, -0.0256,  0.0421,  ...,  0.0216, -0.0381,  0.0102],
        [-0.0343,  0.0381,  0.0003,  ..., -0.0165,  0.0020,  0.0100]], device='cuda:0', requires_grad=True)
K: tensor([     0.3281,     -0.6602,      2.0625,      1.5547,     -0.5430,     -0.0498,     -1.1719,      1.9531,     -1.3125,      0.3574,      0.4941,      0.3066,      1.4453,     -0.1768,      0.8945,     -0.1885,      0.2715,     -1.1875,     -1.1328,     -1.2031,     -2.7812,     -1.2734,
            -1.0938,      0.5078,      0.1113,     -1.6719,     -1.1641,     -0.5391,      0.9141,     -0.3477,      1.3047,     -0.5820,     -0.8398,      2.0312,      3.0312,      0.0028,      0.4824,     -0.0510,      1.2500,      0.2256,     -1.1250,     -0.7031,      0.4043,      0.3281,
             0.3750,      0.8672,      1.3672,      0.9180,     -0.5859,      0.1060,      1.8984,      0.6953,     -1.0781,     -1.5391,     -0.2598,      0.6523,     -0.7344,     -2.3594,     -1.3203,     -1.7812,      0.8828,      0.0177,      0.7852,      0.0981], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[ 0.0021,  0.0343, -0.0169,  ...,  0.0038,  0.0024,  0.0254],
        [-0.0058, -0.0222,  0.0305,  ..., -0.0092, -0.0087,  0.0131],
        [-0.0108,  0.0551, -0.0215,  ...,  0.0230,  0.0097,  0.0102],
        ...,
        [ 0.0044,  0.0315, -0.0065,  ...,  0.0073,  0.0180,  0.0141],
        [ 0.0124,  0.0182, -0.0036,  ...,  0.0244, -0.0309,  0.0308],
        [ 0.0356,  0.0363, -0.0302,  ...,  0.0164,  0.0131, -0.0269]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5352,  0.6523,  0.7852,  1.9766, -0.7422,  0.4980, -0.4688,  1.2031, -0.1279, -2.4844, -2.2969, -0.4102, -0.3340, -0.4316, -0.9258, -0.5938, -1.4922,  0.4297, -0.7461,  0.3594, -1.0781, -1.8125,  0.4727, -0.2002,  0.4609, -0.0674, -0.0796, -0.1689,  0.0598, -0.9727,  4.1250,  1.1172,
         0.6133,  0.6953, -1.0000,  0.0342,  0.9922,  1.0234,  0.9297,  1.9609, -1.2109, -0.9609, -0.2695, -0.3926,  1.5391, -0.0603,  1.1016, -0.3750,  0.6484, -0.7305, -0.8594,  0.2656,  0.5039, -0.7969, -0.6172,  0.4023, -0.3496,  0.7461, -0.4746,  0.6172, -0.7227,  2.3281,  0.2910,  2.6094],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.0625,      0.3262,      0.5820,      3.0312,      1.1328,      1.7812,      0.7773,      0.8906,     -0.2500,     -2.5625,     -1.4375,     -0.1079,     -0.2949,      0.6953],
        [     0.0000,      3.1250,      0.6406,      1.6562,      2.8594,      1.4922,      1.8359,      0.9688,      1.9922,      0.5703,     -0.4004,     -0.2246,      0.5742,      0.4980,      0.5469],
        [     0.0000,      4.4688,      1.5625,      2.3125,      4.1562,      1.6719,      2.6719,      1.9219,      3.2812,      0.0933,      0.0036,     -0.3184,      1.3516,      1.7891,      0.8359],
        [     0.0000,      6.1875,      3.1250,      3.0000,      4.2500,      4.1250,      4.1250,      4.0625,      1.5703,      2.8594,     -1.3516,      1.6719,      1.5391,     -0.4238,      3.2188],
        [     0.0000,      4.5000,      1.6250,      1.0312,      3.6875,      3.1094,      4.0938,      2.4375,      2.6250,      1.3672,     -0.1904,      0.0981,      0.7461,      1.2344,      3.1875],
        [     0.0000,      2.6562,      0.6641,     -0.5000,      0.8906,     -1.2344,      1.0781,      1.3516,      0.5039,     -0.4570,     -2.1875,     -0.4453,     -0.3438,     -0.5859,      1.1953],
        [     0.0000,      6.9062,      3.1250,      3.3125,      5.0312,      3.2188,      4.5000,      4.4062,      5.1250,      1.8438,      1.3125,      2.6250,      2.8594,      3.2656,      3.6562],
        [     0.0000,      1.6484,      1.1406,     -1.0234,      0.8398,      0.6953,      1.0234,      1.6641,      0.6758,      4.3750,      0.5508,      0.7227,      2.2500,      0.2520,      3.7969],
        [     0.0000,      3.7500,      1.5078,      0.3457,      2.5312,      1.1797,      1.4609,      2.6250,      2.5000,      3.3906,      4.4062,      2.7969,      3.5469,      1.5234,      2.5156],
        [     0.0000,      1.6016,      1.1406,     -1.4219,     -1.2812,     -0.6484,     -0.2178,      1.4844,      0.7695,      6.0625,      2.6094,      2.7031,      3.1875,      0.8203,      2.5938],
        [     0.0000,      3.2656,      1.2031,      1.7031,      2.2031,     -0.3242,      1.4062,      2.5625,      2.2344,      0.3477,      0.3828,      0.9766,      1.8672,      1.1406,      1.0938],
        [     0.0000,      3.0781,      0.8711,     -0.2275,      1.7656,     -0.3809,      1.1250,      0.9453,      3.8594,      1.3906,      1.7500,      2.3281,      3.1406,      4.3438,      2.7812],
        [     0.0000,      0.8203,      0.5508,     -2.0625,      0.0102,     -0.1738,     -0.0640,      0.7695,      0.8750,      4.6250,      1.1484,      0.8867,      2.3438,      1.1719,      3.6250],
        [     0.0000,      5.8125,      2.5938,      2.7969,      4.7812,      3.0469,      4.1250,      3.5625,      3.4219,      1.9453,      2.2344,      1.7422,      2.2969,      2.3594,      1.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1824],
        [0.0496],
        [0.0176],
        [0.0384],
        [0.0238],
        [0.0947],
        [0.0195],
        [0.0168],
        [0.0273],
        [0.0153],
        [0.0196],
        [0.0130],
        [0.0108],
        [0.0071]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0859 a:0.0996,:0.2412 and:0.0645atoes:0.1445 are:0.3516 green:0.0540ery:0.2197)
ery
------
		( a:0.0996,:0.2412 and:0.0645atoes:0.1445 are:0.3516 green:0.0540ery:0.2197the:0.1660)
the ones that are the same.
- The best way to get rid
@ 4050 train 4.2434 , allloss: 4.2446, dt: 1750.51ms, fracRes: 0.3711, norm(attn): 0.2246, norm(output): 0.6016, norm(x): 0.4816, norm(y): 1.0151, norm:1.2896, tok/sec: 74876.62, flops:78.58, batch-reuse:1
@ 4051 train 4.2325 , allloss: 4.2338, dt: 1335.82ms, fracRes: 0.3714, norm(attn): 0.2256, norm(output): 0.6094, norm(x): 0.4856, norm(y): 1.0150, norm:1.3369, tok/sec: 98121.13, flops:102.98, batch-reuse:1
@ 4052 train 4.1492 , allloss: 4.1506, dt: 1286.40ms, fracRes: 0.3709, norm(attn): 0.2266, norm(output): 0.6055, norm(x): 0.4878, norm(y): 1.0150, norm:1.1368, tok/sec: 101890.86, flops:106.94, batch-reuse:1
@ 4053 train 4.1641 , allloss: 4.1655, dt: 1296.47ms, fracRes: 0.3712, norm(attn): 0.2256, norm(output): 0.6094, norm(x): 0.4846, norm(y): 1.0151, norm:1.1974, tok/sec: 101098.85, flops:106.11, batch-reuse:1
@ 4054 train 4.2981 , allloss: 4.3001, dt: 1308.89ms, fracRes: 0.3726, norm(attn): 0.2256, norm(output): 0.6133, norm(x): 0.4861, norm(y): 1.0151, norm:1.3739, tok/sec: 100139.77, flops:105.10, batch-reuse:1
@ 4055 train 4.3390 , allloss: 4.3404, dt: 1331.14ms, fracRes: 0.3727, norm(attn): 0.2256, norm(output): 0.6133, norm(x): 0.4859, norm(y): 1.0151, norm:1.2152, tok/sec: 98465.74, flops:103.34, batch-reuse:1
@ 4056 train 4.3635 , allloss: 4.3644, dt: 1324.33ms, fracRes: 0.3732, norm(attn): 0.2207, norm(output): 0.6094, norm(x): 0.4834, norm(y): 1.0153, norm:1.2379, tok/sec: 98972.55, flops:103.87, batch-reuse:1
@ 4057 train 4.1783 , allloss: 4.1792, dt: 1323.67ms, fracRes: 0.3721, norm(attn): 0.2246, norm(output): 0.6094, norm(x): 0.4821, norm(y): 1.0153, norm:1.3023, tok/sec: 99021.42, flops:103.92, batch-reuse:1
@ 4058 train 4.3413 , allloss: 4.3428, dt: 1336.44ms, fracRes: 0.3699, norm(attn): 0.2275, norm(output): 0.6094, norm(x): 0.4853, norm(y): 1.0151, norm:1.2626, tok/sec: 98075.69, flops:102.93, batch-reuse:1
@ 4059 train 4.1967 , allloss: 4.2012, dt: 1300.18ms, fracRes: 0.3683, norm(attn): 0.2305, norm(output): 0.6094, norm(x): 0.4848, norm(y): 1.0150, norm:1.2203, tok/sec: 100810.42, flops:105.80, batch-reuse:1
@ 4060 train 4.1829 , allloss: 4.1839, dt: 1288.73ms, fracRes: 0.3681, norm(attn): 0.2314, norm(output): 0.6016, norm(x): 0.4827, norm(y): 1.0151, norm:1.2477, tok/sec: 101705.94, flops:106.74, batch-reuse:1
@ 4061 train 4.2818 , allloss: 4.2837, dt: 1338.39ms, fracRes: 0.3703, norm(attn): 0.2246, norm(output): 0.6016, norm(x): 0.4834, norm(y): 1.0152, norm:1.2945, tok/sec: 97932.53, flops:102.78, batch-reuse:1
@ 4062 train 4.2238 , allloss: 4.2253, dt: 1326.03ms, fracRes: 0.3706, norm(attn): 0.2266, norm(output): 0.6094, norm(x): 0.4832, norm(y): 1.0152, norm:1.1903, tok/sec: 98845.60, flops:103.74, batch-reuse:1
@ 4063 train 4.1988 , allloss: 4.1998, dt: 1340.94ms, fracRes: 0.3697, norm(attn): 0.2246, norm(output): 0.6094, norm(x): 0.4850, norm(y): 1.0150, norm:1.3020, tok/sec: 97746.15, flops:102.59, batch-reuse:1
@ 4064 train 4.2546 , allloss: 4.2563, dt: 1323.18ms, fracRes: 0.3701, norm(attn): 0.2266, norm(output): 0.6133, norm(x): 0.4861, norm(y): 1.0151, norm:1.2510, tok/sec: 99057.96, flops:103.96, batch-reuse:1
@ 4065 train 4.2502 , allloss: 4.2513, dt: 1310.23ms, fracRes: 0.3712, norm(attn): 0.2236, norm(output): 0.6094, norm(x): 0.4848, norm(y): 1.0151, norm:1.1414, tok/sec: 100037.62, flops:104.99, batch-reuse:1
@ 4066 train 4.1395 , allloss: 4.1408, dt: 1307.01ms, fracRes: 0.3726, norm(attn): 0.2256, norm(output): 0.6055, norm(x): 0.4840, norm(y): 1.0152, norm:1.2510, tok/sec: 100284.01, flops:105.25, batch-reuse:1
@ 4067 train 4.2993 , allloss: 4.3008, dt: 1295.75ms, fracRes: 0.3725, norm(attn): 0.2266, norm(output): 0.6094, norm(x): 0.4860, norm(y): 1.0151, norm:1.3980, tok/sec: 101155.03, flops:106.16, batch-reuse:1
@ 4068 train 4.1764 , allloss: 4.1776, dt: 1293.42ms, fracRes: 0.3723, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4826, norm(y): 1.0151, norm:1.2096, tok/sec: 101337.65, flops:106.36, batch-reuse:1
@ 4069 train 4.3236 , allloss: 4.3300, dt: 1329.18ms, fracRes: 0.3736, norm(attn): 0.2236, norm(output): 0.6094, norm(x): 0.4865, norm(y): 1.0151, norm:1.2676, tok/sec: 98610.86, flops:103.49, batch-reuse:1
@ 4070 train 4.3085 , allloss: 4.3096, dt: 1327.22ms, fracRes: 0.3737, norm(attn): 0.2236, norm(output): 0.6094, norm(x): 0.4845, norm(y): 1.0151, norm:1.2785, tok/sec: 98756.57, flops:103.65, batch-reuse:1
@ 4071 train 4.2056 , allloss: 4.2066, dt: 1305.46ms, fracRes: 0.3719, norm(attn): 0.2227, norm(output): 0.6055, norm(x): 0.4838, norm(y): 1.0151, norm:1.1175, tok/sec: 100403.16, flops:105.37, batch-reuse:1
@ 4072 train 4.2212 , allloss: 4.2221, dt: 1287.82ms, fracRes: 0.3705, norm(attn): 0.2266, norm(output): 0.6133, norm(x): 0.4886, norm(y): 1.0151, norm:1.4954, tok/sec: 101778.23, flops:106.82, batch-reuse:1
@ 4073 train 4.2289 , allloss: 4.2298, dt: 1295.64ms, fracRes: 0.3691, norm(attn): 0.2266, norm(output): 0.6133, norm(x): 0.4894, norm(y): 1.0151, norm:1.1707, tok/sec: 101163.59, flops:106.17, batch-reuse:1
@ 4074 train 4.3129 , allloss: 4.3137, dt: 1297.63ms, fracRes: 0.3692, norm(attn): 0.2256, norm(output): 0.6055, norm(x): 0.4875, norm(y): 1.0150, norm:1.1968, tok/sec: 101008.46, flops:106.01, batch-reuse:1
@ 4075 train 4.2196 , allloss: 4.2205, dt: 1282.86ms, fracRes: 0.3685, norm(attn): 0.2266, norm(output): 0.6094, norm(x): 0.4881, norm(y): 1.0150, norm:1.5474, tok/sec: 102171.90, flops:107.23, batch-reuse:1
@ 4076 train 4.3945 , allloss: 4.3958, dt: 1299.67ms, fracRes: 0.3699, norm(attn): 0.2256, norm(output): 0.6172, norm(x): 0.4904, norm(y): 1.0151, norm:1.5033, tok/sec: 100850.51, flops:105.84, batch-reuse:1
@ 4077 train 4.4022 , allloss: 4.4037, dt: 1302.50ms, fracRes: 0.3704, norm(attn): 0.2266, norm(output): 0.6133, norm(x): 0.4908, norm(y): 1.0152, norm:1.3707, tok/sec: 100631.15, flops:105.61, batch-reuse:1
@ 4078 train 4.3697 , allloss: 4.3722, dt: 1308.34ms, fracRes: 0.3707, norm(attn): 0.2227, norm(output): 0.6094, norm(x): 0.4890, norm(y): 1.0152, norm:1.4712, tok/sec: 100181.96, flops:105.14, batch-reuse:1
@ 4079 train 4.4136 , allloss: 4.4156, dt: 1283.72ms, fracRes: 0.3705, norm(attn): 0.2227, norm(output): 0.6133, norm(x): 0.4862, norm(y): 1.0152, norm:1.1080, tok/sec: 102103.17, flops:107.16, batch-reuse:1
@ 4080 train 4.5976 , allloss: 4.5991, dt: 1294.84ms, fracRes: 0.3705, norm(attn): 0.2256, norm(output): 0.6133, norm(x): 0.4893, norm(y): 1.0150, norm:1.4564, tok/sec: 101226.27, flops:106.24, batch-reuse:1
@ 4081 train 4.4184 , allloss: 4.4208, dt: 1336.71ms, fracRes: 0.3715, norm(attn): 0.2246, norm(output): 0.6133, norm(x): 0.4881, norm(y): 1.0151, norm:1.3883, tok/sec: 98055.92, flops:102.91, batch-reuse:1
@ 4082 train 4.4153 , allloss: 4.4169, dt: 1330.59ms, fracRes: 0.3713, norm(attn): 0.2246, norm(output): 0.6172, norm(x): 0.4890, norm(y): 1.0151, norm:1.2943, tok/sec: 98506.87, flops:103.38, batch-reuse:1
@ 4083 train 4.4861 , allloss: 4.4884, dt: 1328.25ms, fracRes: 0.3722, norm(attn): 0.2236, norm(output): 0.6172, norm(x): 0.4919, norm(y): 1.0152, norm:1.3661, tok/sec: 98680.42, flops:103.57, batch-reuse:1
@ 4084 train 4.4934 , allloss: 4.4957, dt: 1297.64ms, fracRes: 0.3716, norm(attn): 0.2197, norm(output): 0.6172, norm(x): 0.4897, norm(y): 1.0152, norm:1.3754, tok/sec: 101008.13, flops:106.01, batch-reuse:1
@ 4085 train 4.3276 , allloss: 4.3287, dt: 1288.74ms, fracRes: 0.3709, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4927, norm(y): 1.0152, norm:1.3507, tok/sec: 101705.77, flops:106.74, batch-reuse:1
@ 4086 train 4.3878 , allloss: 4.3892, dt: 1298.41ms, fracRes: 0.3725, norm(attn): 0.2227, norm(output): 0.6211, norm(x): 0.4919, norm(y): 1.0151, norm:1.4343, tok/sec: 100948.29, flops:105.95, batch-reuse:1
@ 4087 train 4.4101 , allloss: 4.4122, dt: 1322.05ms, fracRes: 0.3744, norm(attn): 0.2236, norm(output): 0.6172, norm(x): 0.4920, norm(y): 1.0151, norm:1.2104, tok/sec: 99142.67, flops:104.05, batch-reuse:1
@ 4088 train 4.3879 , allloss: 4.3892, dt: 1320.12ms, fracRes: 0.3744, norm(attn): 0.2227, norm(output): 0.6133, norm(x): 0.4859, norm(y): 1.0152, norm:1.2676, tok/sec: 99288.01, flops:104.20, batch-reuse:1
@ 4089 train 4.3784 , allloss: 4.3802, dt: 1326.28ms, fracRes: 0.3736, norm(attn): 0.2207, norm(output): 0.6133, norm(x): 0.4885, norm(y): 1.0151, norm:1.1771, tok/sec: 98826.94, flops:103.72, batch-reuse:1
@ 4090 train 4.4800 , allloss: 4.4818, dt: 1311.53ms, fracRes: 0.3734, norm(attn): 0.2227, norm(output): 0.6094, norm(x): 0.4892, norm(y): 1.0151, norm:1.0496, tok/sec: 99937.89, flops:104.89, batch-reuse:1
@ 4091 train 4.4497 , allloss: 4.4516, dt: 1296.57ms, fracRes: 0.3737, norm(attn): 0.2236, norm(output): 0.6133, norm(x): 0.4893, norm(y): 1.0151, norm:1.1106, tok/sec: 101091.22, flops:106.10, batch-reuse:1
@ 4092 train 4.4286 , allloss: 4.4308, dt: 1289.31ms, fracRes: 0.3736, norm(attn): 0.2246, norm(output): 0.6133, norm(x): 0.4902, norm(y): 1.0152, norm:1.2664, tok/sec: 101660.19, flops:106.69, batch-reuse:1
@ 4093 train 4.5338 , allloss: 4.5351, dt: 1276.91ms, fracRes: 0.3725, norm(attn): 0.2227, norm(output): 0.6172, norm(x): 0.4908, norm(y): 1.0151, norm:1.3369, tok/sec: 102647.41, flops:107.73, batch-reuse:1
@ 4094 train 4.3518 , allloss: 4.3532, dt: 1305.57ms, fracRes: 0.3711, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4942, norm(y): 1.0151, norm:1.3121, tok/sec: 100394.62, flops:105.37, batch-reuse:1
@ 4095 train 4.3718 , allloss: 4.3723, dt: 1314.41ms, fracRes: 0.3713, norm(attn): 0.2256, norm(output): 0.6172, norm(x): 0.4904, norm(y): 1.0151, norm:1.4378, tok/sec: 99719.20, flops:104.66, batch-reuse:1
@ 4096 train 4.4517 , allloss: 4.4533, dt: 1317.11ms, fracRes: 0.3712, norm(attn): 0.2246, norm(output): 0.6172, norm(x): 0.4930, norm(y): 1.0151, norm:1.4183, tok/sec: 99514.86, flops:104.44, batch-reuse:1
@ 4097 train 4.4284 , allloss: 4.4298, dt: 1328.07ms, fracRes: 0.3707, norm(attn): 0.2266, norm(output): 0.6133, norm(x): 0.4905, norm(y): 1.0151, norm:1.2891, tok/sec: 98693.55, flops:103.58, batch-reuse:1
@ 4098 train 4.2999 , allloss: 4.3015, dt: 1307.17ms, fracRes: 0.3708, norm(attn): 0.2285, norm(output): 0.6211, norm(x): 0.4910, norm(y): 1.0151, norm:1.3783, tok/sec: 100271.77, flops:105.24, batch-reuse:1
@ 4099 train 4.4523 , allloss: 4.4545, dt: 1306.77ms, fracRes: 0.3727, norm(attn): 0.2227, norm(output): 0.6172, norm(x): 0.4865, norm(y): 1.0152, norm:1.3303, tok/sec: 100302.25, flops:105.27, batch-reuse:1
@ 4100 train 4.4829 , allloss: 4.4844, dt: 1313.48ms, fracRes: 0.3719, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4914, norm(y): 1.0152, norm:1.5424, tok/sec: 99789.68, flops:104.73, batch-reuse:1
@ 4101 train 4.4949 , allloss: 4.4960, dt: 1284.57ms, fracRes: 0.3730, norm(attn): 0.2227, norm(output): 0.6211, norm(x): 0.4914, norm(y): 1.0152, norm:1.5981, tok/sec: 102035.72, flops:107.09, batch-reuse:1
@ 4102 train 4.3991 , allloss: 4.4004, dt: 1306.62ms, fracRes: 0.3724, norm(attn): 0.2246, norm(output): 0.6172, norm(x): 0.4918, norm(y): 1.0151, norm:1.1877, tok/sec: 100313.54, flops:105.28, batch-reuse:1
@ 4103 train 4.4394 , allloss: 4.4411, dt: 1293.86ms, fracRes: 0.3729, norm(attn): 0.2236, norm(output): 0.6133, norm(x): 0.4905, norm(y): 1.0152, norm:1.3980, tok/sec: 101303.45, flops:106.32, batch-reuse:1
@ 4104 train 4.3885 , allloss: 4.3899, dt: 1284.96ms, fracRes: 0.3728, norm(attn): 0.2227, norm(output): 0.6172, norm(x): 0.4878, norm(y): 1.0152, norm:1.2634, tok/sec: 102004.50, flops:107.06, batch-reuse:1
@ 4105 train 4.4324 , allloss: 4.4338, dt: 1288.01ms, fracRes: 0.3733, norm(attn): 0.2246, norm(output): 0.6172, norm(x): 0.4887, norm(y): 1.0151, norm:1.4209, tok/sec: 101763.23, flops:106.80, batch-reuse:1
@ 4106 train 4.5089 , allloss: 4.5110, dt: 1302.48ms, fracRes: 0.3724, norm(attn): 0.2236, norm(output): 0.6172, norm(x): 0.4927, norm(y): 1.0151, norm:1.2571, tok/sec: 100632.38, flops:105.62, batch-reuse:1
@ 4107 train 4.3178 , allloss: 4.3188, dt: 1334.01ms, fracRes: 0.3729, norm(attn): 0.2236, norm(output): 0.6172, norm(x): 0.4898, norm(y): 1.0152, norm:1.2321, tok/sec: 98254.41, flops:103.12, batch-reuse:1
@ 4108 train 4.4118 , allloss: 4.4130, dt: 1310.70ms, fracRes: 0.3720, norm(attn): 0.2217, norm(output): 0.6211, norm(x): 0.4903, norm(y): 1.0153, norm:1.1593, tok/sec: 100001.57, flops:104.95, batch-reuse:1
@ 4109 train 4.5054 , allloss: 4.5065, dt: 1284.35ms, fracRes: 0.3724, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4926, norm(y): 1.0152, norm:1.2266, tok/sec: 102052.94, flops:107.11, batch-reuse:1
@ 4110 train 4.3919 , allloss: 4.3935, dt: 1300.29ms, fracRes: 0.3713, norm(attn): 0.2275, norm(output): 0.6211, norm(x): 0.4916, norm(y): 1.0151, norm:1.2813, tok/sec: 100801.81, flops:105.79, batch-reuse:1
@ 4111 train 4.3924 , allloss: 4.3937, dt: 1312.18ms, fracRes: 0.3711, norm(attn): 0.2285, norm(output): 0.6133, norm(x): 0.4891, norm(y): 1.0152, norm:1.0774, tok/sec: 99888.68, flops:104.84, batch-reuse:1
@ 4112 train 4.3972 , allloss: 4.3987, dt: 1286.43ms, fracRes: 0.3712, norm(attn): 0.2275, norm(output): 0.6172, norm(x): 0.4922, norm(y): 1.0152, norm:1.2442, tok/sec: 101888.54, flops:106.93, batch-reuse:1
@ 4113 train 4.3554 , allloss: 4.3563, dt: 1322.32ms, fracRes: 0.3718, norm(attn): 0.2227, norm(output): 0.6172, norm(x): 0.4903, norm(y): 1.0152, norm:1.1637, tok/sec: 99122.45, flops:104.03, batch-reuse:1
@ 4114 train 4.4927 , allloss: 4.4941, dt: 1278.30ms, fracRes: 0.3724, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4965, norm(y): 1.0151, norm:1.3013, tok/sec: 102536.10, flops:107.61, batch-reuse:1
@ 4115 train 4.3359 , allloss: 4.3370, dt: 1283.01ms, fracRes: 0.3723, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4933, norm(y): 1.0151, norm:1.2300, tok/sec: 102159.54, flops:107.22, batch-reuse:1
@ 4116 train 4.4571 , allloss: 4.4585, dt: 1277.81ms, fracRes: 0.3735, norm(attn): 0.2217, norm(output): 0.6172, norm(x): 0.4894, norm(y): 1.0153, norm:1.2716, tok/sec: 102575.68, flops:107.66, batch-reuse:1
@ 4117 train 4.3272 , allloss: 4.3301, dt: 1309.03ms, fracRes: 0.3742, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4898, norm(y): 1.0153, norm:1.2021, tok/sec: 100128.88, flops:105.09, batch-reuse:1
@ 4118 train 4.5097 , allloss: 4.5110, dt: 1292.11ms, fracRes: 0.3723, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4966, norm(y): 1.0151, norm:1.2605, tok/sec: 101440.04, flops:106.46, batch-reuse:1
@ 4119 train 4.4841 , allloss: 4.4850, dt: 1290.43ms, fracRes: 0.3735, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4965, norm(y): 1.0151, norm:1.4126, tok/sec: 101572.53, flops:106.60, batch-reuse:1
@ 4120 train 4.3813 , allloss: 4.3825, dt: 1310.76ms, fracRes: 0.3721, norm(attn): 0.2227, norm(output): 0.6211, norm(x): 0.4979, norm(y): 1.0151, norm:1.3009, tok/sec: 99996.60, flops:104.95, batch-reuse:1
@ 4121 train 4.3600 , allloss: 4.3627, dt: 1291.28ms, fracRes: 0.3708, norm(attn): 0.2256, norm(output): 0.6211, norm(x): 0.4973, norm(y): 1.0151, norm:1.2563, tok/sec: 101505.69, flops:106.53, batch-reuse:1
@ 4122 train 4.4841 , allloss: 4.4850, dt: 1292.86ms, fracRes: 0.3721, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4970, norm(y): 1.0152, norm:1.3137, tok/sec: 101381.06, flops:106.40, batch-reuse:1
@ 4123 train 4.4382 , allloss: 4.4393, dt: 1289.84ms, fracRes: 0.3739, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4945, norm(y): 1.0153, norm:1.3737, tok/sec: 101618.47, flops:106.65, batch-reuse:1
@ 4124 train 4.3826 , allloss: 4.3836, dt: 1309.70ms, fracRes: 0.3735, norm(attn): 0.2227, norm(output): 0.6250, norm(x): 0.4952, norm(y): 1.0153, norm:1.3097, tok/sec: 100078.26, flops:105.03, batch-reuse:1
@ 4125 train 4.3954 , allloss: 4.3964, dt: 1332.99ms, fracRes: 0.3724, norm(attn): 0.2256, norm(output): 0.6211, norm(x): 0.4938, norm(y): 1.0152, norm:1.2214, tok/sec: 98329.01, flops:103.20, batch-reuse:1
@ 4126 train 4.2730 , allloss: 4.2740, dt: 1310.72ms, fracRes: 0.3722, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4925, norm(y): 1.0152, norm:1.2071, tok/sec: 100000.02, flops:104.95, batch-reuse:1
@ 4127 train 4.4272 , allloss: 4.4283, dt: 1283.05ms, fracRes: 0.3727, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4925, norm(y): 1.0152, norm:1.3199, tok/sec: 102156.67, flops:107.22, batch-reuse:1
@ 4128 train 4.3401 , allloss: 4.3410, dt: 1306.41ms, fracRes: 0.3726, norm(attn): 0.2207, norm(output): 0.6211, norm(x): 0.4919, norm(y): 1.0152, norm:1.3533, tok/sec: 100329.56, flops:105.30, batch-reuse:1
@ 4129 train 4.3831 , allloss: 4.3837, dt: 1286.61ms, fracRes: 0.3720, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4918, norm(y): 1.0152, norm:1.1848, tok/sec: 101873.96, flops:106.92, batch-reuse:1
@ 4130 train 4.5265 , allloss: 4.5273, dt: 1305.95ms, fracRes: 0.3715, norm(attn): 0.2266, norm(output): 0.6172, norm(x): 0.4936, norm(y): 1.0151, norm:1.2312, tok/sec: 100365.50, flops:105.34, batch-reuse:1
@ 4131 train 4.3350 , allloss: 4.3364, dt: 1294.48ms, fracRes: 0.3720, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4908, norm(y): 1.0151, norm:1.1353, tok/sec: 101254.94, flops:106.27, batch-reuse:1
@ 4132 train 4.3566 , allloss: 4.3578, dt: 1290.28ms, fracRes: 0.3719, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4926, norm(y): 1.0152, norm:1.1057, tok/sec: 101583.83, flops:106.61, batch-reuse:1
@ 4133 train 4.3780 , allloss: 4.3790, dt: 1288.95ms, fracRes: 0.3737, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4918, norm(y): 1.0153, norm:1.3970, tok/sec: 101689.01, flops:106.72, batch-reuse:1
@ 4134 train 4.4864 , allloss: 4.4873, dt: 1308.40ms, fracRes: 0.3724, norm(attn): 0.2256, norm(output): 0.6211, norm(x): 0.4916, norm(y): 1.0153, norm:1.0685, tok/sec: 100177.58, flops:105.14, batch-reuse:1
@ 4135 train 4.4002 , allloss: 4.4010, dt: 1306.71ms, fracRes: 0.3710, norm(attn): 0.2314, norm(output): 0.6211, norm(x): 0.4942, norm(y): 1.0152, norm:1.2297, tok/sec: 100306.53, flops:105.27, batch-reuse:1
@ 4136 train 4.4349 , allloss: 4.4358, dt: 1297.21ms, fracRes: 0.3721, norm(attn): 0.2295, norm(output): 0.6211, norm(x): 0.4921, norm(y): 1.0152, norm:1.2212, tok/sec: 101041.32, flops:106.04, batch-reuse:1
@ 4137 train 4.3970 , allloss: 4.3983, dt: 1306.48ms, fracRes: 0.3706, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4921, norm(y): 1.0151, norm:1.0259, tok/sec: 100324.63, flops:105.29, batch-reuse:1
@ 4138 train 4.4670 , allloss: 4.4680, dt: 1298.53ms, fracRes: 0.3709, norm(attn): 0.2295, norm(output): 0.6211, norm(x): 0.4940, norm(y): 1.0152, norm:1.3680, tok/sec: 100939.14, flops:105.94, batch-reuse:1
@ 4139 train 4.4178 , allloss: 4.4187, dt: 1310.34ms, fracRes: 0.3708, norm(attn): 0.2285, norm(output): 0.6211, norm(x): 0.4925, norm(y): 1.0152, norm:1.2828, tok/sec: 100029.32, flops:104.98, batch-reuse:1
@ 4140 train 4.5723 , allloss: 4.5730, dt: 1340.87ms, fracRes: 0.3710, norm(attn): 0.2275, norm(output): 0.6211, norm(x): 0.4909, norm(y): 1.0153, norm:1.2628, tok/sec: 97751.40, flops:102.59, batch-reuse:1
@ 4141 train 4.3849 , allloss: 4.3859, dt: 1336.87ms, fracRes: 0.3699, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4920, norm(y): 1.0152, norm:1.2905, tok/sec: 98043.98, flops:102.90, batch-reuse:1
@ 4142 train 4.3821 , allloss: 4.3836, dt: 1311.54ms, fracRes: 0.3698, norm(attn): 0.2295, norm(output): 0.6211, norm(x): 0.4949, norm(y): 1.0151, norm:1.3898, tok/sec: 99937.58, flops:104.89, batch-reuse:1
@ 4143 train 4.4190 , allloss: 4.4210, dt: 1341.92ms, fracRes: 0.3721, norm(attn): 0.2207, norm(output): 0.6250, norm(x): 0.4957, norm(y): 1.0153, norm:1.3365, tok/sec: 97675.07, flops:102.51, batch-reuse:1
@ 4144 train 4.4187 , allloss: 4.4197, dt: 1300.27ms, fracRes: 0.3739, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4927, norm(y): 1.0154, norm:1.2976, tok/sec: 100803.64, flops:105.80, batch-reuse:1
@ 4145 train 4.3711 , allloss: 4.3722, dt: 1305.70ms, fracRes: 0.3736, norm(attn): 0.2207, norm(output): 0.6211, norm(x): 0.4951, norm(y): 1.0154, norm:1.3386, tok/sec: 100384.68, flops:105.36, batch-reuse:1
@ 4146 train 4.3853 , allloss: 4.3865, dt: 1310.16ms, fracRes: 0.3740, norm(attn): 0.2207, norm(output): 0.6250, norm(x): 0.4957, norm(y): 1.0153, norm:1.3289, tok/sec: 100042.44, flops:105.00, batch-reuse:1
@ 4147 train 4.5520 , allloss: 4.5535, dt: 1286.74ms, fracRes: 0.3741, norm(attn): 0.2207, norm(output): 0.6211, norm(x): 0.4938, norm(y): 1.0153, norm:1.7676, tok/sec: 101863.90, flops:106.91, batch-reuse:1
@ 4148 train 4.4248 , allloss: 4.4268, dt: 1314.79ms, fracRes: 0.3735, norm(attn): 0.2227, norm(output): 0.6250, norm(x): 0.4991, norm(y): 1.0153, norm:1.8112, tok/sec: 99690.34, flops:104.63, batch-reuse:1
@ 4149 train 4.4682 , allloss: 4.4697, dt: 1319.70ms, fracRes: 0.3742, norm(attn): 0.2207, norm(output): 0.6211, norm(x): 0.4934, norm(y): 1.0153, norm:1.2914, tok/sec: 99319.40, flops:104.24, batch-reuse:1
@ 4150 train 4.3484 , allloss: 4.3488, dt: 1313.52ms, fracRes: 0.3725, norm(attn): 0.2256, norm(output): 0.6211, norm(x): 0.4890, norm(y): 1.0153, norm:1.5210, tok/sec: 99786.73, flops:104.73, batch-reuse:1
@ 4151 train 4.3807 , allloss: 4.3814, dt: 1302.05ms, fracRes: 0.3726, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4937, norm(y): 1.0152, norm:1.5013, tok/sec: 100665.64, flops:105.65, batch-reuse:1
@ 4152 train 4.3334 , allloss: 4.3346, dt: 1315.85ms, fracRes: 0.3721, norm(attn): 0.2285, norm(output): 0.6211, norm(x): 0.4975, norm(y): 1.0152, norm:1.3915, tok/sec: 99609.94, flops:104.54, batch-reuse:1
@ 4153 train 4.3332 , allloss: 4.3344, dt: 1330.28ms, fracRes: 0.3725, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4959, norm(y): 1.0153, norm:1.3738, tok/sec: 98529.56, flops:103.41, batch-reuse:1
@ 4154 train 4.4027 , allloss: 4.4034, dt: 1299.86ms, fracRes: 0.3726, norm(attn): 0.2285, norm(output): 0.6211, norm(x): 0.4933, norm(y): 1.0153, norm:1.2833, tok/sec: 100835.59, flops:105.83, batch-reuse:1
@ 4155 train 4.4025 , allloss: 4.4045, dt: 1288.21ms, fracRes: 0.3706, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4915, norm(y): 1.0152, norm:1.2958, tok/sec: 101747.47, flops:106.79, batch-reuse:1
@ 4156 train 4.3778 , allloss: 4.3796, dt: 1311.10ms, fracRes: 0.3696, norm(attn): 0.2314, norm(output): 0.6211, norm(x): 0.4947, norm(y): 1.0151, norm:1.1790, tok/sec: 99970.76, flops:104.92, batch-reuse:1
@ 4157 train 4.3732 , allloss: 4.3758, dt: 1333.87ms, fracRes: 0.3725, norm(attn): 0.2256, norm(output): 0.6211, norm(x): 0.4957, norm(y): 1.0152, norm:1.1602, tok/sec: 98264.68, flops:103.13, batch-reuse:1
@ 4158 train 4.2991 , allloss: 4.3006, dt: 1334.04ms, fracRes: 0.3735, norm(attn): 0.2236, norm(output): 0.6211, norm(x): 0.4936, norm(y): 1.0153, norm:1.2400, tok/sec: 98252.28, flops:103.12, batch-reuse:1
@ 4159 train 4.4356 , allloss: 4.4367, dt: 1302.36ms, fracRes: 0.3746, norm(attn): 0.2207, norm(output): 0.6211, norm(x): 0.4925, norm(y): 1.0152, norm:1.1778, tok/sec: 100641.59, flops:105.63, batch-reuse:1
@ 4160 train 4.4163 , allloss: 4.4176, dt: 1305.15ms, fracRes: 0.3741, norm(attn): 0.2227, norm(output): 0.6211, norm(x): 0.4932, norm(y): 1.0153, norm:1.3202, tok/sec: 100427.03, flops:105.40, batch-reuse:1
@ 4161 train 4.3497 , allloss: 4.3512, dt: 1330.57ms, fracRes: 0.3740, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4933, norm(y): 1.0152, norm:1.1522, tok/sec: 98508.18, flops:103.39, batch-reuse:1
@ 4162 train 4.3524 , allloss: 4.3543, dt: 1337.39ms, fracRes: 0.3739, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4925, norm(y): 1.0152, norm:1.3168, tok/sec: 98005.96, flops:102.86, batch-reuse:1
@ 4163 train 4.3089 , allloss: 4.3103, dt: 1333.34ms, fracRes: 0.3745, norm(attn): 0.2246, norm(output): 0.6211, norm(x): 0.4924, norm(y): 1.0152, norm:1.1746, tok/sec: 98303.65, flops:103.17, batch-reuse:1
@ 4164 train 4.4051 , allloss: 4.4075, dt: 1312.95ms, fracRes: 0.3732, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4965, norm(y): 1.0152, norm:1.2907, tok/sec: 99830.13, flops:104.77, batch-reuse:1
@ 4165 train 4.3968 , allloss: 4.3978, dt: 1303.53ms, fracRes: 0.3733, norm(attn): 0.2236, norm(output): 0.6250, norm(x): 0.4968, norm(y): 1.0152, norm:1.1752, tok/sec: 100551.86, flops:105.53, batch-reuse:1
@ 4166 train 4.3758 , allloss: 4.3769, dt: 1331.02ms, fracRes: 0.3736, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4955, norm(y): 1.0153, norm:1.2244, tok/sec: 98474.99, flops:103.35, batch-reuse:1
@ 4167 train 4.3139 , allloss: 4.3152, dt: 1323.79ms, fracRes: 0.3729, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4931, norm(y): 1.0152, norm:1.1038, tok/sec: 99012.98, flops:103.92, batch-reuse:1
@ 4168 train 4.3042 , allloss: 4.3062, dt: 1342.60ms, fracRes: 0.3713, norm(attn): 0.2314, norm(output): 0.6211, norm(x): 0.4957, norm(y): 1.0152, norm:1.2390, tok/sec: 97625.15, flops:102.46, batch-reuse:1
@ 4169 train 4.3779 , allloss: 4.3792, dt: 1343.64ms, fracRes: 0.3697, norm(attn): 0.2334, norm(output): 0.6250, norm(x): 0.4969, norm(y): 1.0151, norm:1.2886, tok/sec: 97549.95, flops:102.38, batch-reuse:1
@ 4170 train 4.3357 , allloss: 4.3366, dt: 1314.56ms, fracRes: 0.3697, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4942, norm(y): 1.0152, norm:1.3418, tok/sec: 99707.93, flops:104.65, batch-reuse:1
@ 4171 train 4.2923 , allloss: 4.2938, dt: 1329.23ms, fracRes: 0.3697, norm(attn): 0.2295, norm(output): 0.6211, norm(x): 0.4957, norm(y): 1.0152, norm:1.3216, tok/sec: 98607.78, flops:103.49, batch-reuse:1
@ 4172 train 4.3254 , allloss: 4.3267, dt: 1322.58ms, fracRes: 0.3699, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4965, norm(y): 1.0152, norm:1.0637, tok/sec: 99103.56, flops:104.01, batch-reuse:1
@ 4173 train 4.2841 , allloss: 4.2852, dt: 1302.79ms, fracRes: 0.3699, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4966, norm(y): 1.0152, norm:1.2871, tok/sec: 100608.50, flops:105.59, batch-reuse:1
@ 4174 train 4.3279 , allloss: 4.3287, dt: 1318.11ms, fracRes: 0.3712, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4953, norm(y): 1.0151, norm:1.2808, tok/sec: 99439.22, flops:104.36, batch-reuse:1
@ 4175 train 4.2875 , allloss: 4.2888, dt: 1317.27ms, fracRes: 0.3717, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4957, norm(y): 1.0151, norm:1.0794, tok/sec: 99502.61, flops:104.43, batch-reuse:1
@ 4176 train 4.2537 , allloss: 4.2546, dt: 1352.58ms, fracRes: 0.3714, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4974, norm(y): 1.0152, norm:1.1512, tok/sec: 96905.48, flops:101.70, batch-reuse:1
@ 4177 train 4.2321 , allloss: 4.2331, dt: 1326.14ms, fracRes: 0.3726, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4956, norm(y): 1.0153, norm:1.3475, tok/sec: 98836.95, flops:103.73, batch-reuse:1
@ 4178 train 4.3500 , allloss: 4.3515, dt: 1277.50ms, fracRes: 0.3737, norm(attn): 0.2207, norm(output): 0.6250, norm(x): 0.4981, norm(y): 1.0153, norm:1.1619, tok/sec: 102600.65, flops:107.68, batch-reuse:1
@ 4179 train 4.3522 , allloss: 4.3530, dt: 1306.40ms, fracRes: 0.3734, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4966, norm(y): 1.0152, norm:1.3523, tok/sec: 100331.06, flops:105.30, batch-reuse:1
@ 4180 train 4.2857 , allloss: 4.2866, dt: 1282.87ms, fracRes: 0.3727, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4950, norm(y): 1.0152, norm:1.2084, tok/sec: 102170.72, flops:107.23, batch-reuse:1
@ 4181 train 4.3152 , allloss: 4.3163, dt: 1331.13ms, fracRes: 0.3706, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4993, norm(y): 1.0151, norm:1.1302, tok/sec: 98466.93, flops:103.34, batch-reuse:1
@ 4182 train 4.2781 , allloss: 4.2790, dt: 1323.83ms, fracRes: 0.3698, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4980, norm(y): 1.0152, norm:1.2554, tok/sec: 99009.59, flops:103.91, batch-reuse:1
@ 4183 train 4.2887 , allloss: 4.2904, dt: 1291.71ms, fracRes: 0.3711, norm(attn): 0.2256, norm(output): 0.6250, norm(x): 0.4985, norm(y): 1.0153, norm:1.1934, tok/sec: 101471.70, flops:106.50, batch-reuse:1
@ 4184 train 4.3234 , allloss: 4.3247, dt: 1320.44ms, fracRes: 0.3707, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4965, norm(y): 1.0153, norm:1.1430, tok/sec: 99264.09, flops:104.18, batch-reuse:1
@ 4185 train 4.3427 , allloss: 4.3441, dt: 1298.88ms, fracRes: 0.3708, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4980, norm(y): 1.0152, norm:1.1978, tok/sec: 100911.82, flops:105.91, batch-reuse:1
@ 4186 train 4.4155 , allloss: 4.4173, dt: 1312.27ms, fracRes: 0.3720, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4986, norm(y): 1.0152, norm:1.1764, tok/sec: 99881.62, flops:104.83, batch-reuse:1
@ 4187 train 4.3302 , allloss: 4.3310, dt: 1290.44ms, fracRes: 0.3732, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4943, norm(y): 1.0153, norm:1.1907, tok/sec: 101571.19, flops:106.60, batch-reuse:1
@ 4188 train 4.3289 , allloss: 4.3317, dt: 1285.57ms, fracRes: 0.3734, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4971, norm(y): 1.0152, norm:1.0510, tok/sec: 101956.26, flops:107.01, batch-reuse:1
@ 4189 train 4.2821 , allloss: 4.2831, dt: 1332.23ms, fracRes: 0.3744, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4969, norm(y): 1.0153, norm:1.2819, tok/sec: 98385.35, flops:103.26, batch-reuse:1
@ 4190 train 4.2407 , allloss: 4.2418, dt: 1359.84ms, fracRes: 0.3750, norm(attn): 0.2256, norm(output): 0.6250, norm(x): 0.4958, norm(y): 1.0153, norm:1.1933, tok/sec: 96387.61, flops:101.16, batch-reuse:1
@ 4191 train 4.2907 , allloss: 4.2917, dt: 1347.12ms, fracRes: 0.3744, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4955, norm(y): 1.0152, norm:1.3690, tok/sec: 97297.71, flops:102.12, batch-reuse:1
@ 4192 train 4.3013 , allloss: 4.3022, dt: 1310.65ms, fracRes: 0.3741, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4948, norm(y): 1.0152, norm:1.2377, tok/sec: 100005.42, flops:104.96, batch-reuse:1
@ 4193 train 4.2709 , allloss: 4.2720, dt: 1310.50ms, fracRes: 0.3736, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4947, norm(y): 1.0153, norm:1.2506, tok/sec: 100017.12, flops:104.97, batch-reuse:1
@ 4194 train 4.1971 , allloss: 4.1986, dt: 1312.25ms, fracRes: 0.3729, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4974, norm(y): 1.0153, norm:1.3101, tok/sec: 99883.54, flops:104.83, batch-reuse:1
@ 4195 train 4.2361 , allloss: 4.2397, dt: 1309.32ms, fracRes: 0.3706, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4949, norm(y): 1.0153, norm:1.2365, tok/sec: 100106.73, flops:105.06, batch-reuse:1
@ 4196 train 4.3770 , allloss: 4.3790, dt: 1294.75ms, fracRes: 0.3714, norm(attn): 0.2266, norm(output): 0.6211, norm(x): 0.4935, norm(y): 1.0153, norm:1.1129, tok/sec: 101233.74, flops:106.25, batch-reuse:1
@ 4197 train 4.2783 , allloss: 4.2802, dt: 1296.11ms, fracRes: 0.3717, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4942, norm(y): 1.0152, norm:1.2103, tok/sec: 101127.17, flops:106.13, batch-reuse:1
@ 4198 train 4.3268 , allloss: 4.3290, dt: 1294.98ms, fracRes: 0.3723, norm(attn): 0.2324, norm(output): 0.6250, norm(x): 0.4964, norm(y): 1.0151, norm:1.1695, tok/sec: 101215.83, flops:106.23, batch-reuse:1
@ 4199 train 4.3996 , allloss: 4.4009, dt: 1294.27ms, fracRes: 0.3728, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4968, norm(y): 1.0153, norm:1.3594, tok/sec: 101270.97, flops:106.29, batch-reuse:1
@ 4200 train 4.4217 , allloss: 4.4225, dt: 1313.66ms, fracRes: 0.3732, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4981, norm(y): 1.0154, norm:1.2424, tok/sec: 99776.40, flops:104.72, batch-reuse:1
@ 4201 train 4.2962 , allloss: 4.2972, dt: 1304.96ms, fracRes: 0.3718, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4954, norm(y): 1.0153, norm:1.2067, tok/sec: 100441.06, flops:105.41, batch-reuse:1
@ 4202 train 4.3016 , allloss: 4.3041, dt: 1292.88ms, fracRes: 0.3719, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4966, norm(y): 1.0153, norm:1.2156, tok/sec: 101379.54, flops:106.40, batch-reuse:1
@ 4203 train 4.1144 , allloss: 4.1166, dt: 1281.63ms, fracRes: 0.3730, norm(attn): 0.2324, norm(output): 0.6250, norm(x): 0.5004, norm(y): 1.0153, norm:1.5399, tok/sec: 102269.76, flops:107.33, batch-reuse:1
@ 4204 train 4.3391 , allloss: 4.3427, dt: 1322.46ms, fracRes: 0.3723, norm(attn): 0.2314, norm(output): 0.6211, norm(x): 0.4967, norm(y): 1.0152, norm:1.1397, tok/sec: 99112.57, flops:104.02, batch-reuse:1
@ 4205 train 4.2500 , allloss: 4.2520, dt: 1347.03ms, fracRes: 0.3710, norm(attn): 0.2334, norm(output): 0.6250, norm(x): 0.4976, norm(y): 1.0151, norm:1.2525, tok/sec: 97304.60, flops:102.12, batch-reuse:1
@ 4206 train 4.3270 , allloss: 4.3284, dt: 1330.97ms, fracRes: 0.3703, norm(attn): 0.2324, norm(output): 0.6250, norm(x): 0.4974, norm(y): 1.0152, norm:1.1092, tok/sec: 98478.53, flops:103.36, batch-reuse:1
@ 4207 train 4.3747 , allloss: 4.3775, dt: 1294.71ms, fracRes: 0.3709, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4989, norm(y): 1.0153, norm:1.2414, tok/sec: 101236.20, flops:106.25, batch-reuse:1
@ 4208 train 4.2788 , allloss: 4.2804, dt: 1303.84ms, fracRes: 0.3719, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4963, norm(y): 1.0153, norm:1.1706, tok/sec: 100527.57, flops:105.51, batch-reuse:1
@ 4209 train 4.3689 , allloss: 4.3701, dt: 1294.23ms, fracRes: 0.3715, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4959, norm(y): 1.0153, norm:1.1626, tok/sec: 101274.44, flops:106.29, batch-reuse:1
@ 4210 train 4.4436 , allloss: 4.4447, dt: 1299.86ms, fracRes: 0.3708, norm(attn): 0.2344, norm(output): 0.6250, norm(x): 0.4970, norm(y): 1.0151, norm:1.0801, tok/sec: 100835.25, flops:105.83, batch-reuse:1
@ 4211 train 4.2247 , allloss: 4.2265, dt: 1306.54ms, fracRes: 0.3723, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4954, norm(y): 1.0151, norm:1.2295, tok/sec: 100319.73, flops:105.29, batch-reuse:1
@ 4212 train 4.2642 , allloss: 4.2675, dt: 1291.39ms, fracRes: 0.3714, norm(attn): 0.2305, norm(output): 0.6211, norm(x): 0.4945, norm(y): 1.0152, norm:1.3714, tok/sec: 101497.16, flops:106.52, batch-reuse:1
@ 4213 train 4.1524 , allloss: 4.1533, dt: 1308.68ms, fracRes: 0.3716, norm(attn): 0.2314, norm(output): 0.6250, norm(x): 0.4938, norm(y): 1.0153, norm:1.1427, tok/sec: 100155.77, flops:105.12, batch-reuse:1
@ 4214 train 4.2238 , allloss: 4.2274, dt: 1319.49ms, fracRes: 0.3729, norm(attn): 0.2256, norm(output): 0.6250, norm(x): 0.4949, norm(y): 1.0153, norm:1.4482, tok/sec: 99335.39, flops:104.25, batch-reuse:1
@ 4215 train 4.2132 , allloss: 4.2160, dt: 1276.88ms, fracRes: 0.3721, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4960, norm(y): 1.0152, norm:1.1201, tok/sec: 102649.88, flops:107.73, batch-reuse:1
@ 4216 train 4.2016 , allloss: 4.2025, dt: 1281.87ms, fracRes: 0.3719, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4959, norm(y): 1.0152, norm:1.2509, tok/sec: 102250.76, flops:107.31, batch-reuse:1
@ 4217 train 4.2246 , allloss: 4.2255, dt: 1323.04ms, fracRes: 0.3716, norm(attn): 0.2295, norm(output): 0.6211, norm(x): 0.4944, norm(y): 1.0153, norm:1.1114, tok/sec: 99068.83, flops:103.97, batch-reuse:1
@ 4218 train 4.1880 , allloss: 4.1894, dt: 1308.70ms, fracRes: 0.3723, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4969, norm(y): 1.0153, norm:1.2715, tok/sec: 100154.62, flops:105.11, batch-reuse:1
@ 4219 train 4.2498 , allloss: 4.2513, dt: 1315.06ms, fracRes: 0.3728, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4969, norm(y): 1.0153, norm:1.2210, tok/sec: 99669.97, flops:104.61, batch-reuse:1
@ 4220 train 4.1683 , allloss: 4.1698, dt: 1348.22ms, fracRes: 0.3731, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4968, norm(y): 1.0154, norm:1.2215, tok/sec: 97218.74, flops:102.03, batch-reuse:1
@ 4221 train 4.3171 , allloss: 4.3200, dt: 1341.20ms, fracRes: 0.3715, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4951, norm(y): 1.0153, norm:1.1207, tok/sec: 97727.33, flops:102.57, batch-reuse:1
@ 4222 train 4.1502 , allloss: 4.1513, dt: 1312.87ms, fracRes: 0.3700, norm(attn): 0.2324, norm(output): 0.6211, norm(x): 0.4940, norm(y): 1.0152, norm:1.1233, tok/sec: 99836.13, flops:104.78, batch-reuse:1
@ 4223 train 4.2543 , allloss: 4.2558, dt: 1299.89ms, fracRes: 0.3725, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4956, norm(y): 1.0153, norm:1.3376, tok/sec: 100833.13, flops:105.83, batch-reuse:1
@ 4224 train 4.1293 , allloss: 4.1301, dt: 1306.67ms, fracRes: 0.3710, norm(attn): 0.2314, norm(output): 0.6250, norm(x): 0.4946, norm(y): 1.0153, norm:1.1329, tok/sec: 100309.82, flops:105.28, batch-reuse:1
@ 4225 train 4.2674 , allloss: 4.2681, dt: 1307.62ms, fracRes: 0.3716, norm(attn): 0.2285, norm(output): 0.6211, norm(x): 0.4954, norm(y): 1.0153, norm:1.2199, tok/sec: 100237.43, flops:105.20, batch-reuse:1
@ 4226 train 4.2899 , allloss: 4.2906, dt: 1302.13ms, fracRes: 0.3731, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4980, norm(y): 1.0153, norm:1.2118, tok/sec: 100659.60, flops:105.64, batch-reuse:1
@ 4227 train 4.2378 , allloss: 4.2389, dt: 1334.47ms, fracRes: 0.3713, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4993, norm(y): 1.0151, norm:1.1821, tok/sec: 98220.63, flops:103.08, batch-reuse:1
@ 4228 train 4.4330 , allloss: 4.4338, dt: 1314.50ms, fracRes: 0.3735, norm(attn): 0.2246, norm(output): 0.6250, norm(x): 0.4991, norm(y): 1.0153, norm:1.4550, tok/sec: 99712.61, flops:104.65, batch-reuse:1
@ 4229 train 4.3042 , allloss: 4.3049, dt: 1324.13ms, fracRes: 0.3744, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4982, norm(y): 1.0153, norm:1.4328, tok/sec: 98986.95, flops:103.89, batch-reuse:1
@ 4230 train 4.2192 , allloss: 4.2201, dt: 1305.68ms, fracRes: 0.3710, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4994, norm(y): 1.0152, norm:1.2648, tok/sec: 100385.78, flops:105.36, batch-reuse:1
@ 4231 train 4.2131 , allloss: 4.2140, dt: 1313.03ms, fracRes: 0.3722, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.5002, norm(y): 1.0153, norm:1.3677, tok/sec: 99824.03, flops:104.77, batch-reuse:1
@ 4232 train 4.2745 , allloss: 4.2755, dt: 1338.39ms, fracRes: 0.3725, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4991, norm(y): 1.0153, norm:1.2577, tok/sec: 97932.90, flops:102.78, batch-reuse:1
@ 4233 train 4.2448 , allloss: 4.2465, dt: 1318.33ms, fracRes: 0.3725, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5003, norm(y): 1.0153, norm:1.3303, tok/sec: 99422.91, flops:104.35, batch-reuse:1
@ 4234 train 4.2465 , allloss: 4.2478, dt: 1289.89ms, fracRes: 0.3712, norm(attn): 0.2305, norm(output): 0.6289, norm(x): 0.5020, norm(y): 1.0153, norm:1.2288, tok/sec: 101615.11, flops:106.65, batch-reuse:1
@ 4235 train 4.2486 , allloss: 4.2494, dt: 1301.83ms, fracRes: 0.3705, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5025, norm(y): 1.0153, norm:1.3357, tok/sec: 100682.53, flops:105.67, batch-reuse:1
@ 4236 train 4.3819 , allloss: 4.3827, dt: 1307.12ms, fracRes: 0.3716, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5078, norm(y): 1.0152, norm:1.4533, tok/sec: 100275.39, flops:105.24, batch-reuse:1
@ 4237 train 4.2417 , allloss: 4.2427, dt: 1294.66ms, fracRes: 0.3733, norm(attn): 0.2295, norm(output): 0.6289, norm(x): 0.5082, norm(y): 1.0153, norm:1.9026, tok/sec: 101240.85, flops:106.25, batch-reuse:1
@ 4238 train 4.2548 , allloss: 4.2557, dt: 1293.72ms, fracRes: 0.3730, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5072, norm(y): 1.0152, norm:1.4002, tok/sec: 101314.00, flops:106.33, batch-reuse:1
@ 4239 train 4.2110 , allloss: 4.2124, dt: 1278.68ms, fracRes: 0.3729, norm(attn): 0.2266, norm(output): 0.6289, norm(x): 0.5038, norm(y): 1.0152, norm:1.3597, tok/sec: 102505.84, flops:107.58, batch-reuse:1
@ 4240 train 4.2485 , allloss: 4.2497, dt: 1294.32ms, fracRes: 0.3746, norm(attn): 0.2236, norm(output): 0.6289, norm(x): 0.5039, norm(y): 1.0153, norm:1.2072, tok/sec: 101267.08, flops:106.28, batch-reuse:1
@ 4241 train 4.2590 , allloss: 4.2610, dt: 1317.10ms, fracRes: 0.3754, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4992, norm(y): 1.0155, norm:1.3519, tok/sec: 99515.42, flops:104.44, batch-reuse:1
@ 4242 train 4.3569 , allloss: 4.3582, dt: 1281.53ms, fracRes: 0.3736, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4980, norm(y): 1.0154, norm:1.3144, tok/sec: 102277.85, flops:107.34, batch-reuse:1
@ 4243 train 4.2095 , allloss: 4.2108, dt: 1304.80ms, fracRes: 0.3742, norm(attn): 0.2266, norm(output): 0.6250, norm(x): 0.4966, norm(y): 1.0154, norm:1.3961, tok/sec: 100453.71, flops:105.43, batch-reuse:1
@ 4244 train 4.0669 , allloss: 4.0705, dt: 1286.18ms, fracRes: 0.3725, norm(attn): 0.2324, norm(output): 0.6250, norm(x): 0.4980, norm(y): 1.0153, norm:1.3033, tok/sec: 101908.26, flops:106.95, batch-reuse:1
@ 4245 train 4.1813 , allloss: 4.1825, dt: 1305.20ms, fracRes: 0.3719, norm(attn): 0.2285, norm(output): 0.6250, norm(x): 0.4946, norm(y): 1.0153, norm:1.1785, tok/sec: 100422.77, flops:105.40, batch-reuse:1
@ 4246 train 4.5101 , allloss: 4.5139, dt: 1308.73ms, fracRes: 0.3746, norm(attn): 0.2275, norm(output): 0.6250, norm(x): 0.4953, norm(y): 1.0153, norm:1.7591, tok/sec: 100152.08, flops:105.11, batch-reuse:1
@ 4247 train 4.2659 , allloss: 4.2666, dt: 1311.00ms, fracRes: 0.3733, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.4982, norm(y): 1.0152, norm:1.3549, tok/sec: 99978.89, flops:104.93, batch-reuse:1
@ 4248 train 4.2785 , allloss: 4.2795, dt: 1317.42ms, fracRes: 0.3735, norm(attn): 0.2305, norm(output): 0.6289, norm(x): 0.5002, norm(y): 1.0152, norm:1.2514, tok/sec: 99491.66, flops:104.42, batch-reuse:1
@ 4249 train 4.2612 , allloss: 4.2620, dt: 1322.98ms, fracRes: 0.3742, norm(attn): 0.2295, norm(output): 0.6250, norm(x): 0.4965, norm(y): 1.0154, norm:1.2372, tok/sec: 99073.38, flops:103.98, batch-reuse:1
@ 4250 train 4.1573 , allloss: 4.1587, dt: 1320.76ms, fracRes: 0.3754, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5008, norm(y): 1.0154, norm:1.1882, tok/sec: 99239.58, flops:104.15, batch-reuse:1
@ 4251 train 4.2590 , allloss: 4.2600, dt: 1307.60ms, fracRes: 0.3752, norm(attn): 0.2236, norm(output): 0.6289, norm(x): 0.5037, norm(y): 1.0153, norm:1.2353, tok/sec: 100238.64, flops:105.20, batch-reuse:1
@ 4252 train 4.1146 , allloss: 4.1156, dt: 1309.33ms, fracRes: 0.3751, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5019, norm(y): 1.0152, norm:1.3886, tok/sec: 100106.14, flops:105.06, batch-reuse:1
@ 4253 train 4.1780 , allloss: 4.1791, dt: 1296.31ms, fracRes: 0.3751, norm(attn): 0.2256, norm(output): 0.6289, norm(x): 0.5016, norm(y): 1.0152, norm:1.0643, tok/sec: 101111.42, flops:106.12, batch-reuse:1
@ 4254 train 4.2213 , allloss: 4.2222, dt: 1303.26ms, fracRes: 0.3765, norm(attn): 0.2246, norm(output): 0.6289, norm(x): 0.5023, norm(y): 1.0153, norm:1.1569, tok/sec: 100572.66, flops:105.55, batch-reuse:1
@ 4255 train 4.2042 , allloss: 4.2051, dt: 1299.95ms, fracRes: 0.3761, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5021, norm(y): 1.0154, norm:1.2063, tok/sec: 100828.48, flops:105.82, batch-reuse:1
@ 4256 train 4.1092 , allloss: 4.1101, dt: 1313.05ms, fracRes: 0.3760, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5042, norm(y): 1.0154, norm:1.1961, tok/sec: 99822.89, flops:104.77, batch-reuse:1
@ 4257 train 4.1354 , allloss: 4.1363, dt: 1320.19ms, fracRes: 0.3735, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5037, norm(y): 1.0153, norm:1.2410, tok/sec: 99282.41, flops:104.20, batch-reuse:1
@ 4258 train 4.3157 , allloss: 4.3170, dt: 1314.06ms, fracRes: 0.3714, norm(attn): 0.2305, norm(output): 0.6289, norm(x): 0.5036, norm(y): 1.0153, norm:1.3128, tok/sec: 99745.94, flops:104.69, batch-reuse:1
@ 4259 train 4.2751 , allloss: 4.2769, dt: 1303.32ms, fracRes: 0.3711, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5012, norm(y): 1.0153, norm:1.2319, tok/sec: 100567.75, flops:105.55, batch-reuse:1
@ 4260 train 4.3526 , allloss: 4.3536, dt: 1324.30ms, fracRes: 0.3700, norm(attn): 0.2344, norm(output): 0.6289, norm(x): 0.5039, norm(y): 1.0152, norm:1.1817, tok/sec: 98974.57, flops:103.88, batch-reuse:1
@ 4261 train 4.4888 , allloss: 4.4903, dt: 1323.19ms, fracRes: 0.3705, norm(attn): 0.2334, norm(output): 0.6289, norm(x): 0.5041, norm(y): 1.0152, norm:1.1668, tok/sec: 99057.31, flops:103.96, batch-reuse:1
@ 4262 train 4.3600 , allloss: 4.3611, dt: 1307.63ms, fracRes: 0.3726, norm(attn): 0.2314, norm(output): 0.6289, norm(x): 0.5050, norm(y): 1.0154, norm:1.1373, tok/sec: 100236.61, flops:105.20, batch-reuse:1
@ 4263 train 4.4167 , allloss: 4.4181, dt: 1295.76ms, fracRes: 0.3747, norm(attn): 0.2256, norm(output): 0.6289, norm(x): 0.5023, norm(y): 1.0154, norm:1.3692, tok/sec: 101154.58, flops:106.16, batch-reuse:1
@ 4264 train 4.5586 , allloss: 4.5602, dt: 1312.29ms, fracRes: 0.3740, norm(attn): 0.2266, norm(output): 0.6328, norm(x): 0.5053, norm(y): 1.0154, norm:1.3324, tok/sec: 99880.44, flops:104.83, batch-reuse:1
@ 4265 train 4.5070 , allloss: 4.5082, dt: 1326.06ms, fracRes: 0.3748, norm(attn): 0.2275, norm(output): 0.6328, norm(x): 0.5063, norm(y): 1.0153, norm:1.4535, tok/sec: 98842.95, flops:103.74, batch-reuse:1
@ 4266 train 4.3704 , allloss: 4.3718, dt: 1280.59ms, fracRes: 0.3733, norm(attn): 0.2324, norm(output): 0.6289, norm(x): 0.5036, norm(y): 1.0152, norm:1.4369, tok/sec: 102353.20, flops:107.42, batch-reuse:1
@ 4267 train 4.4486 , allloss: 4.4494, dt: 1289.73ms, fracRes: 0.3745, norm(attn): 0.2305, norm(output): 0.6250, norm(x): 0.5047, norm(y): 1.0152, norm:1.1920, tok/sec: 101627.67, flops:106.66, batch-reuse:1
@ 4268 train 4.4557 , allloss: 4.4568, dt: 1320.41ms, fracRes: 0.3756, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5027, norm(y): 1.0153, norm:1.3589, tok/sec: 99266.51, flops:104.18, batch-reuse:1
@ 4269 train 4.4706 , allloss: 4.4717, dt: 1322.70ms, fracRes: 0.3756, norm(attn): 0.2295, norm(output): 0.6328, norm(x): 0.5049, norm(y): 1.0153, norm:1.4550, tok/sec: 99094.11, flops:104.00, batch-reuse:1
@ 4270 train 4.5781 , allloss: 4.5786, dt: 1320.82ms, fracRes: 0.3746, norm(attn): 0.2373, norm(output): 0.6250, norm(x): 0.5046, norm(y): 1.0153, norm:2.1376, tok/sec: 99235.16, flops:104.15, batch-reuse:1
@ 4271 train 4.3340 , allloss: 4.3352, dt: 1338.41ms, fracRes: 0.3760, norm(attn): 0.2285, norm(output): 0.6367, norm(x): 0.5067, norm(y): 1.0154, norm:1.6334, tok/sec: 97931.19, flops:102.78, batch-reuse:1
@ 4272 train 4.4636 , allloss: 4.4646, dt: 1337.63ms, fracRes: 0.3761, norm(attn): 0.2266, norm(output): 0.6328, norm(x): 0.5053, norm(y): 1.0154, norm:1.5376, tok/sec: 97988.60, flops:102.84, batch-reuse:1
@ 4273 train 4.4542 , allloss: 4.4553, dt: 1309.15ms, fracRes: 0.3731, norm(attn): 0.2285, norm(output): 0.6328, norm(x): 0.5054, norm(y): 1.0153, norm:1.5002, tok/sec: 100120.15, flops:105.08, batch-reuse:1
@ 4274 train 4.4194 , allloss: 4.4206, dt: 1317.25ms, fracRes: 0.3715, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5089, norm(y): 1.0151, norm:1.5535, tok/sec: 99503.95, flops:104.43, batch-reuse:1
@ 4275 train 4.3361 , allloss: 4.3375, dt: 1287.41ms, fracRes: 0.3759, norm(attn): 0.2236, norm(output): 0.6367, norm(x): 0.5055, norm(y): 1.0155, norm:1.3206, tok/sec: 101810.72, flops:106.85, batch-reuse:1
@ 4276 train 4.3511 , allloss: 4.3520, dt: 1301.27ms, fracRes: 0.3785, norm(attn): 0.2256, norm(output): 0.6406, norm(x): 0.5058, norm(y): 1.0156, norm:1.2900, tok/sec: 100726.14, flops:105.71, batch-reuse:1
@ 4277 train 4.4221 , allloss: 4.4233, dt: 1317.15ms, fracRes: 0.3775, norm(attn): 0.2207, norm(output): 0.6406, norm(x): 0.5065, norm(y): 1.0155, norm:1.2418, tok/sec: 99511.85, flops:104.44, batch-reuse:1
@ 4278 train 4.4118 , allloss: 4.4130, dt: 1305.92ms, fracRes: 0.3780, norm(attn): 0.2227, norm(output): 0.6328, norm(x): 0.5046, norm(y): 1.0155, norm:1.3075, tok/sec: 100367.86, flops:105.34, batch-reuse:1
@ 4279 train 4.4100 , allloss: 4.4112, dt: 1294.36ms, fracRes: 0.3774, norm(attn): 0.2246, norm(output): 0.6328, norm(x): 0.5059, norm(y): 1.0154, norm:1.1402, tok/sec: 101263.58, flops:106.28, batch-reuse:1
@ 4280 train 4.2748 , allloss: 4.2766, dt: 1322.89ms, fracRes: 0.3768, norm(attn): 0.2275, norm(output): 0.6328, norm(x): 0.5062, norm(y): 1.0154, norm:1.1868, tok/sec: 99079.93, flops:103.99, batch-reuse:1
@ 4281 train 4.3824 , allloss: 4.3836, dt: 1326.42ms, fracRes: 0.3757, norm(attn): 0.2266, norm(output): 0.6289, norm(x): 0.5055, norm(y): 1.0154, norm:1.1959, tok/sec: 98816.23, flops:103.71, batch-reuse:1
@ 4282 train 4.4071 , allloss: 4.4085, dt: 1296.95ms, fracRes: 0.3754, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5051, norm(y): 1.0154, norm:1.3260, tok/sec: 101061.96, flops:106.07, batch-reuse:1
@ 4283 train 4.5063 , allloss: 4.5078, dt: 1302.67ms, fracRes: 0.3744, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5048, norm(y): 1.0153, norm:1.3018, tok/sec: 100618.27, flops:105.60, batch-reuse:1
@ 4284 train 4.4012 , allloss: 4.4024, dt: 1334.26ms, fracRes: 0.3729, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5074, norm(y): 1.0152, norm:1.1438, tok/sec: 98236.04, flops:103.10, batch-reuse:1
@ 4285 train 4.3305 , allloss: 4.3329, dt: 1329.97ms, fracRes: 0.3735, norm(attn): 0.2285, norm(output): 0.6289, norm(x): 0.5078, norm(y): 1.0153, norm:1.4252, tok/sec: 98552.64, flops:103.43, batch-reuse:1
@ 4286 train 4.4298 , allloss: 4.4316, dt: 1302.31ms, fracRes: 0.3731, norm(attn): 0.2266, norm(output): 0.6289, norm(x): 0.5050, norm(y): 1.0154, norm:1.1727, tok/sec: 100646.03, flops:105.63, batch-reuse:1
@ 4287 train 4.3573 , allloss: 4.3584, dt: 1312.85ms, fracRes: 0.3722, norm(attn): 0.2295, norm(output): 0.6328, norm(x): 0.5069, norm(y): 1.0154, norm:1.1779, tok/sec: 99837.56, flops:104.78, batch-reuse:1
@ 4288 train 4.3472 , allloss: 4.3483, dt: 1339.36ms, fracRes: 0.3730, norm(attn): 0.2314, norm(output): 0.6328, norm(x): 0.5072, norm(y): 1.0154, norm:1.2222, tok/sec: 97861.63, flops:102.71, batch-reuse:1
@ 4289 train 4.4388 , allloss: 4.4400, dt: 1343.74ms, fracRes: 0.3730, norm(attn): 0.2324, norm(output): 0.6328, norm(x): 0.5094, norm(y): 1.0154, norm:1.2327, tok/sec: 97542.56, flops:102.37, batch-reuse:1
@ 4290 train 4.3482 , allloss: 4.3493, dt: 1318.09ms, fracRes: 0.3740, norm(attn): 0.2305, norm(output): 0.6289, norm(x): 0.5064, norm(y): 1.0153, norm:1.2773, tok/sec: 99440.73, flops:104.36, batch-reuse:1
@ 4291 train 4.3822 , allloss: 4.3849, dt: 1319.76ms, fracRes: 0.3740, norm(attn): 0.2324, norm(output): 0.6289, norm(x): 0.5081, norm(y): 1.0153, norm:1.2765, tok/sec: 99315.16, flops:104.23, batch-reuse:1
@ 4292 train 4.4800 , allloss: 4.4811, dt: 1293.87ms, fracRes: 0.3743, norm(attn): 0.2295, norm(output): 0.6289, norm(x): 0.5057, norm(y): 1.0153, norm:1.1738, tok/sec: 101302.18, flops:106.32, batch-reuse:1
@ 4293 train 4.3806 , allloss: 4.3815, dt: 1290.43ms, fracRes: 0.3746, norm(attn): 0.2295, norm(output): 0.6289, norm(x): 0.5063, norm(y): 1.0153, norm:1.2391, tok/sec: 101572.70, flops:106.60, batch-reuse:1
@ 4294 train 4.2545 , allloss: 4.2552, dt: 1293.09ms, fracRes: 0.3751, norm(attn): 0.2324, norm(output): 0.6328, norm(x): 0.5095, norm(y): 1.0153, norm:1.2894, tok/sec: 101363.26, flops:106.38, batch-reuse:1
@ 4295 train 4.4818 , allloss: 4.4830, dt: 1293.64ms, fracRes: 0.3759, norm(attn): 0.2266, norm(output): 0.6328, norm(x): 0.5087, norm(y): 1.0154, norm:1.2436, tok/sec: 101320.13, flops:106.34, batch-reuse:1
@ 4296 train 4.3782 , allloss: 4.3790, dt: 1308.93ms, fracRes: 0.3768, norm(attn): 0.2275, norm(output): 0.6289, norm(x): 0.5042, norm(y): 1.0154, norm:1.3417, tok/sec: 100136.52, flops:105.10, batch-reuse:1
@ 4297 train 4.4222 , allloss: 4.4232, dt: 1341.38ms, fracRes: 0.3771, norm(attn): 0.2246, norm(output): 0.6289, norm(x): 0.5064, norm(y): 1.0155, norm:1.1864, tok/sec: 97714.56, flops:102.55, batch-reuse:1
@ 4298 train 4.4170 , allloss: 4.4180, dt: 1337.32ms, fracRes: 0.3755, norm(attn): 0.2285, norm(output): 0.6328, norm(x): 0.5081, norm(y): 1.0153, norm:1.2505, tok/sec: 98010.98, flops:102.86, batch-reuse:1
@ 4299 train 4.4195 , allloss: 4.4210, dt: 1292.14ms, fracRes: 0.3748, norm(attn): 0.2285, norm(output): 0.6367, norm(x): 0.5088, norm(y): 1.0153, norm:1.2402, tok/sec: 101437.91, flops:106.46, batch-reuse:1
@ 4300 train 4.3743 , allloss: 4.3752, dt: 1291.98ms, fracRes: 0.3747, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5063, norm(y): 1.0153, norm:1.1199, tok/sec: 101450.69, flops:106.47, batch-reuse:1
@ 4301 train 4.2560 , allloss: 4.2572, dt: 1293.28ms, fracRes: 0.3731, norm(attn): 0.2334, norm(output): 0.6328, norm(x): 0.5047, norm(y): 1.0154, norm:1.1753, tok/sec: 101348.48, flops:106.37, batch-reuse:1
@ 4302 train 4.3187 , allloss: 4.3203, dt: 1294.25ms, fracRes: 0.3736, norm(attn): 0.2314, norm(output): 0.6367, norm(x): 0.5063, norm(y): 1.0154, norm:1.1898, tok/sec: 101272.85, flops:106.29, batch-reuse:1
@ 4303 train 4.4251 , allloss: 4.4261, dt: 1311.91ms, fracRes: 0.3750, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5037, norm(y): 1.0154, norm:1.2156, tok/sec: 99909.06, flops:104.86, batch-reuse:1
@ 4304 train 4.2896 , allloss: 4.2907, dt: 1316.86ms, fracRes: 0.3747, norm(attn): 0.2334, norm(output): 0.6406, norm(x): 0.5068, norm(y): 1.0153, norm:1.3417, tok/sec: 99533.83, flops:104.46, batch-reuse:1
@ 4305 train 4.3792 , allloss: 4.3803, dt: 1302.96ms, fracRes: 0.3750, norm(attn): 0.2295, norm(output): 0.6406, norm(x): 0.5074, norm(y): 1.0154, norm:1.1742, tok/sec: 100595.81, flops:105.58, batch-reuse:1
@ 4306 train 4.4246 , allloss: 4.4255, dt: 1310.54ms, fracRes: 0.3762, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5028, norm(y): 1.0154, norm:1.2122, tok/sec: 100013.94, flops:104.97, batch-reuse:1
@ 4307 train 4.3201 , allloss: 4.3209, dt: 1302.05ms, fracRes: 0.3768, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5039, norm(y): 1.0154, norm:1.1068, tok/sec: 100666.09, flops:105.65, batch-reuse:1
@ 4308 train 4.2617 , allloss: 4.2625, dt: 1290.88ms, fracRes: 0.3752, norm(attn): 0.2324, norm(output): 0.6367, norm(x): 0.5070, norm(y): 1.0153, norm:1.3647, tok/sec: 101537.30, flops:106.57, batch-reuse:1
@ 4309 train 4.3219 , allloss: 4.3238, dt: 1282.29ms, fracRes: 0.3756, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5067, norm(y): 1.0153, norm:1.1359, tok/sec: 102217.43, flops:107.28, batch-reuse:1
@ 4310 train 4.3543 , allloss: 4.3567, dt: 1293.98ms, fracRes: 0.3755, norm(attn): 0.2314, norm(output): 0.6328, norm(x): 0.5048, norm(y): 1.0153, norm:1.2320, tok/sec: 101293.45, flops:106.31, batch-reuse:1
@ 4311 train 4.4120 , allloss: 4.4142, dt: 1293.75ms, fracRes: 0.3753, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5073, norm(y): 1.0154, norm:1.3080, tok/sec: 101311.80, flops:106.33, batch-reuse:1
@ 4312 train 4.3567 , allloss: 4.3593, dt: 1309.14ms, fracRes: 0.3760, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5104, norm(y): 1.0154, norm:1.4657, tok/sec: 100120.44, flops:105.08, batch-reuse:1
@ 4313 train 4.3383 , allloss: 4.3393, dt: 1311.37ms, fracRes: 0.3755, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5085, norm(y): 1.0153, norm:1.2711, tok/sec: 99950.51, flops:104.90, batch-reuse:1
@ 4314 train 4.3822 , allloss: 4.3833, dt: 1287.70ms, fracRes: 0.3754, norm(attn): 0.2266, norm(output): 0.6406, norm(x): 0.5090, norm(y): 1.0154, norm:1.3476, tok/sec: 101787.33, flops:106.83, batch-reuse:1
@ 4315 train 4.3775 , allloss: 4.3787, dt: 1298.22ms, fracRes: 0.3755, norm(attn): 0.2275, norm(output): 0.6406, norm(x): 0.5075, norm(y): 1.0153, norm:1.3736, tok/sec: 100962.58, flops:105.96, batch-reuse:1
@ 4316 train 4.4060 , allloss: 4.4079, dt: 1313.92ms, fracRes: 0.3747, norm(attn): 0.2305, norm(output): 0.6406, norm(x): 0.5097, norm(y): 1.0153, norm:1.3383, tok/sec: 99756.80, flops:104.70, batch-reuse:1
@ 4317 train 4.3910 , allloss: 4.3918, dt: 1303.07ms, fracRes: 0.3758, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5053, norm(y): 1.0154, norm:1.1392, tok/sec: 100587.44, flops:105.57, batch-reuse:1
@ 4318 train 4.3496 , allloss: 4.3506, dt: 1305.76ms, fracRes: 0.3743, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5053, norm(y): 1.0154, norm:1.3457, tok/sec: 100379.48, flops:105.35, batch-reuse:1
@ 4319 train 4.4010 , allloss: 4.4017, dt: 1308.01ms, fracRes: 0.3740, norm(attn): 0.2324, norm(output): 0.6328, norm(x): 0.5061, norm(y): 1.0154, norm:1.2020, tok/sec: 100207.16, flops:105.17, batch-reuse:1
@ 4320 train 4.3797 , allloss: 4.3806, dt: 1302.48ms, fracRes: 0.3748, norm(attn): 0.2324, norm(output): 0.6367, norm(x): 0.5078, norm(y): 1.0154, norm:1.3750, tok/sec: 100632.46, flops:105.62, batch-reuse:1
@ 4321 train 4.3426 , allloss: 4.3437, dt: 1316.24ms, fracRes: 0.3730, norm(attn): 0.2334, norm(output): 0.6328, norm(x): 0.5078, norm(y): 1.0154, norm:1.0873, tok/sec: 99580.85, flops:104.51, batch-reuse:1
@ 4322 train 4.3753 , allloss: 4.3761, dt: 1321.36ms, fracRes: 0.3724, norm(attn): 0.2344, norm(output): 0.6328, norm(x): 0.5076, norm(y): 1.0154, norm:1.3147, tok/sec: 99194.51, flops:104.11, batch-reuse:1
@ 4323 train 4.4056 , allloss: 4.4065, dt: 1301.40ms, fracRes: 0.3731, norm(attn): 0.2334, norm(output): 0.6289, norm(x): 0.5065, norm(y): 1.0154, norm:1.1174, tok/sec: 100715.81, flops:105.70, batch-reuse:1
@ 4324 train 4.3555 , allloss: 4.3569, dt: 1310.15ms, fracRes: 0.3740, norm(attn): 0.2334, norm(output): 0.6367, norm(x): 0.5076, norm(y): 1.0154, norm:1.2007, tok/sec: 100043.68, flops:105.00, batch-reuse:1
@ 4325 train 4.4527 , allloss: 4.4540, dt: 1321.77ms, fracRes: 0.3754, norm(attn): 0.2305, norm(output): 0.6328, norm(x): 0.5062, norm(y): 1.0154, norm:1.1345, tok/sec: 99164.11, flops:104.07, batch-reuse:1
@ 4326 train 4.4333 , allloss: 4.4349, dt: 1337.92ms, fracRes: 0.3765, norm(attn): 0.2266, norm(output): 0.6328, norm(x): 0.5047, norm(y): 1.0155, norm:1.2341, tok/sec: 97967.00, flops:102.82, batch-reuse:1
@ 4327 train 4.3465 , allloss: 4.3481, dt: 1345.27ms, fracRes: 0.3762, norm(attn): 0.2295, norm(output): 0.6367, norm(x): 0.5036, norm(y): 1.0154, norm:1.2694, tok/sec: 97431.51, flops:102.26, batch-reuse:1
@ 4328 train 4.3204 , allloss: 4.3221, dt: 1330.98ms, fracRes: 0.3750, norm(attn): 0.2305, norm(output): 0.6367, norm(x): 0.5070, norm(y): 1.0154, norm:1.0908, tok/sec: 98477.67, flops:103.35, batch-reuse:1
@ 4329 train 4.3379 , allloss: 4.3387, dt: 1302.31ms, fracRes: 0.3731, norm(attn): 0.2295, norm(output): 0.6367, norm(x): 0.5049, norm(y): 1.0153, norm:0.9992, tok/sec: 100645.46, flops:105.63, batch-reuse:1
@ 4330 train 4.3388 , allloss: 4.3394, dt: 1314.35ms, fracRes: 0.3723, norm(attn): 0.2324, norm(output): 0.6367, norm(x): 0.5078, norm(y): 1.0153, norm:1.1211, tok/sec: 99723.74, flops:104.66, batch-reuse:1
@ 4331 train 4.3694 , allloss: 4.3707, dt: 1326.60ms, fracRes: 0.3726, norm(attn): 0.2314, norm(output): 0.6367, norm(x): 0.5056, norm(y): 1.0154, norm:1.0642, tok/sec: 98802.59, flops:103.70, batch-reuse:1
@ 4332 train 4.2355 , allloss: 4.2364, dt: 1303.35ms, fracRes: 0.3733, norm(attn): 0.2334, norm(output): 0.6367, norm(x): 0.5065, norm(y): 1.0154, norm:1.1456, tok/sec: 100565.17, flops:105.55, batch-reuse:1
@ 4333 train 4.3907 , allloss: 4.3917, dt: 1324.37ms, fracRes: 0.3730, norm(attn): 0.2314, norm(output): 0.6328, norm(x): 0.5061, norm(y): 1.0153, norm:1.1046, tok/sec: 98969.54, flops:103.87, batch-reuse:1
@ 4334 train 4.3264 , allloss: 4.3278, dt: 1302.36ms, fracRes: 0.3750, norm(attn): 0.2334, norm(output): 0.6289, norm(x): 0.5059, norm(y): 1.0154, norm:1.2155, tok/sec: 100642.04, flops:105.63, batch-reuse:1
@ 4335 train 4.3502 , allloss: 4.3515, dt: 1335.84ms, fracRes: 0.3740, norm(attn): 0.2334, norm(output): 0.6328, norm(x): 0.5055, norm(y): 1.0153, norm:1.0455, tok/sec: 98119.29, flops:102.98, batch-reuse:1
@ 4336 train 4.3488 , allloss: 4.3500, dt: 1305.12ms, fracRes: 0.3736, norm(attn): 0.2334, norm(output): 0.6289, norm(x): 0.5038, norm(y): 1.0153, norm:1.1504, tok/sec: 100428.71, flops:105.40, batch-reuse:1
@ 4337 train 4.3680 , allloss: 4.3699, dt: 1291.48ms, fracRes: 0.3739, norm(attn): 0.2314, norm(output): 0.6328, norm(x): 0.5046, norm(y): 1.0154, norm:1.1740, tok/sec: 101490.06, flops:106.52, batch-reuse:1
@ 4338 train 4.2591 , allloss: 4.2601, dt: 1316.28ms, fracRes: 0.3742, norm(attn): 0.2305, norm(output): 0.6406, norm(x): 0.5069, norm(y): 1.0154, norm:1.1277, tok/sec: 99577.80, flops:104.51, batch-reuse:1
@ 4339 train 4.3548 , allloss: 4.3561, dt: 1347.07ms, fracRes: 0.3739, norm(attn): 0.2305, norm(output): 0.6406, norm(x): 0.5061, norm(y): 1.0154, norm:1.1776, tok/sec: 97301.23, flops:102.12, batch-reuse:1
@ 4340 train 4.3274 , allloss: 4.3286, dt: 1303.71ms, fracRes: 0.3734, norm(attn): 0.2305, norm(output): 0.6406, norm(x): 0.5058, norm(y): 1.0154, norm:1.1882, tok/sec: 100537.83, flops:105.52, batch-reuse:1
@ 4341 train 4.4107 , allloss: 4.4130, dt: 1313.62ms, fracRes: 0.3750, norm(attn): 0.2295, norm(output): 0.6445, norm(x): 0.5088, norm(y): 1.0154, norm:1.0453, tok/sec: 99778.92, flops:104.72, batch-reuse:1
@ 4342 train 4.3461 , allloss: 4.3503, dt: 1338.91ms, fracRes: 0.3732, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5086, norm(y): 1.0153, norm:1.1898, tok/sec: 97894.37, flops:102.74, batch-reuse:1
@ 4343 train 4.4068 , allloss: 4.4097, dt: 1316.02ms, fracRes: 0.3751, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5092, norm(y): 1.0154, norm:1.2773, tok/sec: 99597.00, flops:104.53, batch-reuse:1
@ 4344 train 4.4322 , allloss: 4.4345, dt: 1309.72ms, fracRes: 0.3750, norm(attn): 0.2285, norm(output): 0.6445, norm(x): 0.5089, norm(y): 1.0155, norm:1.3494, tok/sec: 100076.17, flops:105.03, batch-reuse:1
@ 4345 train 4.2893 , allloss: 4.2905, dt: 1340.36ms, fracRes: 0.3749, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5091, norm(y): 1.0154, norm:1.0873, tok/sec: 97788.66, flops:102.63, batch-reuse:1
@ 4346 train 4.3635 , allloss: 4.3646, dt: 1298.98ms, fracRes: 0.3748, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5071, norm(y): 1.0153, norm:1.1253, tok/sec: 100904.05, flops:105.90, batch-reuse:1
@ 4347 train 4.3398 , allloss: 4.3412, dt: 1309.87ms, fracRes: 0.3738, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5096, norm(y): 1.0153, norm:1.2578, tok/sec: 100065.04, flops:105.02, batch-reuse:1
@ 4348 train 4.5096 , allloss: 4.5141, dt: 1310.77ms, fracRes: 0.3751, norm(attn): 0.2295, norm(output): 0.6484, norm(x): 0.5127, norm(y): 1.0154, norm:1.1787, tok/sec: 99996.42, flops:104.95, batch-reuse:1
@ 4349 train 4.4401 , allloss: 4.4418, dt: 1278.99ms, fracRes: 0.3737, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5104, norm(y): 1.0154, norm:1.1953, tok/sec: 102480.56, flops:107.56, batch-reuse:1
@ 4350 train 4.3088 , allloss: 4.3100, dt: 1312.92ms, fracRes: 0.3733, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5100, norm(y): 1.0154, norm:1.4067, tok/sec: 99832.68, flops:104.78, batch-reuse:1
@ 4351 train 4.4367 , allloss: 4.4385, dt: 1327.42ms, fracRes: 0.3713, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5100, norm(y): 1.0152, norm:1.2252, tok/sec: 98741.97, flops:103.63, batch-reuse:1
@ 4352 train 4.3050 , allloss: 4.3073, dt: 1298.78ms, fracRes: 0.3704, norm(attn): 0.2344, norm(output): 0.6367, norm(x): 0.5113, norm(y): 1.0153, norm:1.2749, tok/sec: 100919.18, flops:105.92, batch-reuse:1
@ 4353 train 4.3221 , allloss: 4.3234, dt: 1313.04ms, fracRes: 0.3706, norm(attn): 0.2363, norm(output): 0.6328, norm(x): 0.5097, norm(y): 1.0153, norm:1.2269, tok/sec: 99823.51, flops:104.77, batch-reuse:1
@ 4354 train 4.2864 , allloss: 4.2880, dt: 1333.26ms, fracRes: 0.3727, norm(attn): 0.2344, norm(output): 0.6328, norm(x): 0.5065, norm(y): 1.0154, norm:1.2496, tok/sec: 98309.58, flops:103.18, batch-reuse:1
@ 4355 train 4.2949 , allloss: 4.2963, dt: 1326.84ms, fracRes: 0.3744, norm(attn): 0.2324, norm(output): 0.6367, norm(x): 0.5068, norm(y): 1.0154, norm:1.2486, tok/sec: 98785.02, flops:103.68, batch-reuse:1
@ 4356 train 4.3198 , allloss: 4.3207, dt: 1336.25ms, fracRes: 0.3753, norm(attn): 0.2324, norm(output): 0.6406, norm(x): 0.5105, norm(y): 1.0155, norm:1.3165, tok/sec: 98089.20, flops:102.95, batch-reuse:1
@ 4357 train 4.3185 , allloss: 4.3197, dt: 1337.12ms, fracRes: 0.3740, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5106, norm(y): 1.0154, norm:1.2966, tok/sec: 98025.67, flops:102.88, batch-reuse:1
@ 4358 train 4.3801 , allloss: 4.3812, dt: 1335.37ms, fracRes: 0.3738, norm(attn): 0.2354, norm(output): 0.6367, norm(x): 0.5046, norm(y): 1.0154, norm:1.3458, tok/sec: 98154.29, flops:103.01, batch-reuse:1
@ 4359 train 4.2853 , allloss: 4.2884, dt: 1316.86ms, fracRes: 0.3749, norm(attn): 0.2295, norm(output): 0.6367, norm(x): 0.5066, norm(y): 1.0153, norm:1.3663, tok/sec: 99533.80, flops:104.46, batch-reuse:1
@ 4360 train 4.5606 , allloss: 4.5617, dt: 1305.08ms, fracRes: 0.3750, norm(attn): 0.2285, norm(output): 0.6406, norm(x): 0.5104, norm(y): 1.0153, norm:1.5433, tok/sec: 100432.09, flops:105.41, batch-reuse:1
@ 4361 train 4.3943 , allloss: 4.3950, dt: 1292.35ms, fracRes: 0.3736, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5135, norm(y): 1.0153, norm:1.5296, tok/sec: 101421.79, flops:106.44, batch-reuse:1
@ 4362 train 4.3689 , allloss: 4.3738, dt: 1308.85ms, fracRes: 0.3732, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5147, norm(y): 1.0154, norm:1.2201, tok/sec: 100143.00, flops:105.10, batch-reuse:1
@ 4363 train 4.3180 , allloss: 4.3188, dt: 1310.02ms, fracRes: 0.3723, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5126, norm(y): 1.0154, norm:1.3171, tok/sec: 100053.45, flops:105.01, batch-reuse:1
@ 4364 train 4.3450 , allloss: 4.3465, dt: 1298.25ms, fracRes: 0.3717, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5104, norm(y): 1.0154, norm:1.2728, tok/sec: 100960.21, flops:105.96, batch-reuse:1
@ 4365 train 4.3104 , allloss: 4.3123, dt: 1312.38ms, fracRes: 0.3717, norm(attn): 0.2354, norm(output): 0.6445, norm(x): 0.5144, norm(y): 1.0153, norm:1.2025, tok/sec: 99873.27, flops:104.82, batch-reuse:1
@ 4366 train 4.3346 , allloss: 4.3406, dt: 1314.67ms, fracRes: 0.3735, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5170, norm(y): 1.0154, norm:1.2369, tok/sec: 99699.65, flops:104.64, batch-reuse:1
@ 4367 train 4.2556 , allloss: 4.2662, dt: 1310.36ms, fracRes: 0.3737, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5116, norm(y): 1.0154, norm:1.2405, tok/sec: 100027.51, flops:104.98, batch-reuse:1
@ 4368 train 4.3705 , allloss: 4.3756, dt: 1318.55ms, fracRes: 0.3743, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5125, norm(y): 1.0154, norm:1.1459, tok/sec: 99405.85, flops:104.33, batch-reuse:1
@ 4369 train 4.2695 , allloss: 4.2714, dt: 1309.48ms, fracRes: 0.3745, norm(attn): 0.2324, norm(output): 0.6367, norm(x): 0.5086, norm(y): 1.0155, norm:1.1862, tok/sec: 100095.06, flops:105.05, batch-reuse:1
@ 4370 train 4.2155 , allloss: 4.2177, dt: 1290.83ms, fracRes: 0.3731, norm(attn): 0.2354, norm(output): 0.6406, norm(x): 0.5111, norm(y): 1.0154, norm:1.1150, tok/sec: 101540.52, flops:106.57, batch-reuse:1
@ 4371 train 4.3114 , allloss: 4.3131, dt: 1306.86ms, fracRes: 0.3736, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5112, norm(y): 1.0154, norm:1.1937, tok/sec: 100295.44, flops:105.26, batch-reuse:1
@ 4372 train 4.2782 , allloss: 4.2789, dt: 1304.46ms, fracRes: 0.3736, norm(attn): 0.2334, norm(output): 0.6328, norm(x): 0.5076, norm(y): 1.0154, norm:1.0999, tok/sec: 100479.63, flops:105.46, batch-reuse:1
@ 4373 train 4.3119 , allloss: 4.3129, dt: 1278.01ms, fracRes: 0.3723, norm(attn): 0.2334, norm(output): 0.6367, norm(x): 0.5127, norm(y): 1.0153, norm:1.2558, tok/sec: 102559.53, flops:107.64, batch-reuse:1
@ 4374 train 4.3710 , allloss: 4.3719, dt: 1290.80ms, fracRes: 0.3732, norm(attn): 0.2314, norm(output): 0.6406, norm(x): 0.5094, norm(y): 1.0154, norm:1.1431, tok/sec: 101543.22, flops:106.57, batch-reuse:1
@ 4375 train 4.2856 , allloss: 4.2870, dt: 1298.87ms, fracRes: 0.3747, norm(attn): 0.2295, norm(output): 0.6445, norm(x): 0.5109, norm(y): 1.0154, norm:1.0831, tok/sec: 100912.14, flops:105.91, batch-reuse:1
@ 4376 train 4.3506 , allloss: 4.3523, dt: 1287.63ms, fracRes: 0.3755, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5126, norm(y): 1.0154, norm:1.1231, tok/sec: 101793.30, flops:106.83, batch-reuse:1
@ 4377 train 4.3645 , allloss: 4.3656, dt: 1294.68ms, fracRes: 0.3753, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5132, norm(y): 1.0154, norm:1.3254, tok/sec: 101239.28, flops:106.25, batch-reuse:1
@ 4378 train 4.2490 , allloss: 4.2504, dt: 1284.41ms, fracRes: 0.3735, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5133, norm(y): 1.0154, norm:1.1469, tok/sec: 102048.20, flops:107.10, batch-reuse:1
@ 4379 train 4.2689 , allloss: 4.2697, dt: 1306.51ms, fracRes: 0.3737, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5123, norm(y): 1.0155, norm:1.1431, tok/sec: 100322.02, flops:105.29, batch-reuse:1
@ 4380 train 4.3034 , allloss: 4.3048, dt: 1337.26ms, fracRes: 0.3749, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5136, norm(y): 1.0155, norm:1.1908, tok/sec: 98015.01, flops:102.87, batch-reuse:1
@ 4381 train 4.3066 , allloss: 4.3077, dt: 1323.78ms, fracRes: 0.3747, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5147, norm(y): 1.0154, norm:1.1926, tok/sec: 99013.66, flops:103.92, batch-reuse:1
@ 4382 train 4.3612 , allloss: 4.3620, dt: 1339.77ms, fracRes: 0.3759, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5104, norm(y): 1.0154, norm:1.1360, tok/sec: 97831.76, flops:102.68, batch-reuse:1
@ 4383 train 4.2840 , allloss: 4.2850, dt: 1317.69ms, fracRes: 0.3754, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5099, norm(y): 1.0154, norm:1.1428, tok/sec: 99471.11, flops:104.40, batch-reuse:1
@ 4384 train 4.3140 , allloss: 4.3151, dt: 1316.87ms, fracRes: 0.3758, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5146, norm(y): 1.0154, norm:1.2348, tok/sec: 99533.18, flops:104.46, batch-reuse:1
@ 4385 train 4.3358 , allloss: 4.3374, dt: 1307.84ms, fracRes: 0.3758, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5149, norm(y): 1.0154, norm:1.2492, tok/sec: 100219.96, flops:105.18, batch-reuse:1
@ 4386 train 4.2916 , allloss: 4.2928, dt: 1297.75ms, fracRes: 0.3757, norm(attn): 0.2275, norm(output): 0.6484, norm(x): 0.5123, norm(y): 1.0154, norm:1.2214, tok/sec: 100999.50, flops:106.00, batch-reuse:1
@ 4387 train 4.3780 , allloss: 4.3791, dt: 1303.72ms, fracRes: 0.3770, norm(attn): 0.2266, norm(output): 0.6484, norm(x): 0.5118, norm(y): 1.0154, norm:1.3168, tok/sec: 100536.72, flops:105.52, batch-reuse:1
@ 4388 train 4.3729 , allloss: 4.3749, dt: 1283.79ms, fracRes: 0.3756, norm(attn): 0.2266, norm(output): 0.6523, norm(x): 0.5122, norm(y): 1.0154, norm:1.2011, tok/sec: 102098.07, flops:107.15, batch-reuse:1
@ 4389 train 4.3102 , allloss: 4.3112, dt: 1286.08ms, fracRes: 0.3750, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5138, norm(y): 1.0154, norm:1.2685, tok/sec: 101915.74, flops:106.96, batch-reuse:1
@ 4390 train 4.3036 , allloss: 4.3047, dt: 1305.52ms, fracRes: 0.3761, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5126, norm(y): 1.0154, norm:1.2177, tok/sec: 100398.60, flops:105.37, batch-reuse:1
@ 4391 train 4.2104 , allloss: 4.2115, dt: 1280.62ms, fracRes: 0.3747, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5128, norm(y): 1.0154, norm:1.1527, tok/sec: 102350.32, flops:107.42, batch-reuse:1
@ 4392 train 4.2331 , allloss: 4.2361, dt: 1307.96ms, fracRes: 0.3749, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5148, norm(y): 1.0153, norm:1.2845, tok/sec: 100211.27, flops:105.17, batch-reuse:1
@ 4393 train 4.3070 , allloss: 4.3080, dt: 1353.65ms, fracRes: 0.3732, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5125, norm(y): 1.0154, norm:1.2250, tok/sec: 96828.55, flops:101.62, batch-reuse:1
@ 4394 train 4.3811 , allloss: 4.3823, dt: 1346.94ms, fracRes: 0.3737, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5150, norm(y): 1.0154, norm:1.0632, tok/sec: 97310.80, flops:102.13, batch-reuse:1
@ 4395 train 4.1735 , allloss: 4.1750, dt: 1351.32ms, fracRes: 0.3722, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5143, norm(y): 1.0154, norm:1.0670, tok/sec: 96995.58, flops:101.80, batch-reuse:1
@ 4396 train 4.2774 , allloss: 4.2786, dt: 1321.00ms, fracRes: 0.3729, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5119, norm(y): 1.0154, norm:1.0516, tok/sec: 99221.90, flops:104.14, batch-reuse:1
@ 4397 train 4.1334 , allloss: 4.1345, dt: 1289.97ms, fracRes: 0.3726, norm(attn): 0.2334, norm(output): 0.6406, norm(x): 0.5120, norm(y): 1.0154, norm:1.1410, tok/sec: 101608.74, flops:106.64, batch-reuse:1
@ 4398 train 4.0763 , allloss: 4.0771, dt: 1312.33ms, fracRes: 0.3737, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5121, norm(y): 1.0155, norm:1.0411, tok/sec: 99877.55, flops:104.82, batch-reuse:1
@ 4399 train 4.1294 , allloss: 4.1301, dt: 1316.60ms, fracRes: 0.3757, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5133, norm(y): 1.0155, norm:1.2866, tok/sec: 99553.23, flops:104.48, batch-reuse:1
@ 4400 train 4.1746 , allloss: 4.1755, dt: 1306.67ms, fracRes: 0.3736, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5099, norm(y): 1.0154, norm:1.2782, tok/sec: 100309.75, flops:105.28, batch-reuse:1
@ 4401 train 4.0940 , allloss: 4.0949, dt: 1301.85ms, fracRes: 0.3721, norm(attn): 0.2373, norm(output): 0.6445, norm(x): 0.5108, norm(y): 1.0153, norm:1.1546, tok/sec: 100681.04, flops:105.67, batch-reuse:1
@ 4402 train 4.2457 , allloss: 4.2466, dt: 1293.15ms, fracRes: 0.3729, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5120, norm(y): 1.0154, norm:1.2634, tok/sec: 101358.85, flops:106.38, batch-reuse:1
@ 4403 train 4.2245 , allloss: 4.2253, dt: 1281.66ms, fracRes: 0.3727, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5107, norm(y): 1.0155, norm:1.2133, tok/sec: 102267.10, flops:107.33, batch-reuse:1
@ 4404 train 4.1874 , allloss: 4.1884, dt: 1298.79ms, fracRes: 0.3725, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5108, norm(y): 1.0155, norm:1.1107, tok/sec: 100918.88, flops:105.92, batch-reuse:1
@ 4405 train 4.2479 , allloss: 4.2491, dt: 1316.46ms, fracRes: 0.3732, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5105, norm(y): 1.0155, norm:1.2003, tok/sec: 99564.15, flops:104.49, batch-reuse:1
@ 4406 train 4.1531 , allloss: 4.1543, dt: 1309.67ms, fracRes: 0.3721, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5108, norm(y): 1.0154, norm:1.1049, tok/sec: 100079.83, flops:105.04, batch-reuse:1
@ 4407 train 4.2388 , allloss: 4.2403, dt: 1295.29ms, fracRes: 0.3721, norm(attn): 0.2295, norm(output): 0.6484, norm(x): 0.5147, norm(y): 1.0154, norm:1.2518, tok/sec: 101191.09, flops:106.20, batch-reuse:1
@ 4408 train 4.1706 , allloss: 4.1720, dt: 1322.07ms, fracRes: 0.3735, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5125, norm(y): 1.0154, norm:1.1282, tok/sec: 99141.17, flops:104.05, batch-reuse:1
@ 4409 train 4.1517 , allloss: 4.1525, dt: 1318.11ms, fracRes: 0.3750, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5117, norm(y): 1.0154, norm:1.1167, tok/sec: 99439.08, flops:104.36, batch-reuse:1
@ 4410 train 4.1468 , allloss: 4.1479, dt: 1307.32ms, fracRes: 0.3753, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5110, norm(y): 1.0154, norm:1.2666, tok/sec: 100260.12, flops:105.22, batch-reuse:1
@ 4411 train 4.1234 , allloss: 4.1244, dt: 1343.30ms, fracRes: 0.3756, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5139, norm(y): 1.0154, norm:1.1044, tok/sec: 97574.34, flops:102.41, batch-reuse:1
@ 4412 train 4.2414 , allloss: 4.2425, dt: 1341.67ms, fracRes: 0.3743, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5126, norm(y): 1.0155, norm:1.1252, tok/sec: 97692.91, flops:102.53, batch-reuse:1
@ 4413 train 4.2049 , allloss: 4.2059, dt: 1345.34ms, fracRes: 0.3735, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5113, norm(y): 1.0155, norm:1.1522, tok/sec: 97426.98, flops:102.25, batch-reuse:1
@ 4414 train 4.0983 , allloss: 4.1021, dt: 1343.34ms, fracRes: 0.3732, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5142, norm(y): 1.0154, norm:1.2047, tok/sec: 97571.94, flops:102.40, batch-reuse:1
@ 4415 train 4.1213 , allloss: 4.1234, dt: 1335.79ms, fracRes: 0.3732, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5116, norm(y): 1.0154, norm:1.0603, tok/sec: 98122.86, flops:102.98, batch-reuse:1
@ 4416 train 4.1337 , allloss: 4.1352, dt: 1334.66ms, fracRes: 0.3736, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5111, norm(y): 1.0154, norm:1.2397, tok/sec: 98206.42, flops:103.07, batch-reuse:1
@ 4417 train 4.1614 , allloss: 4.1629, dt: 1315.85ms, fracRes: 0.3746, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5143, norm(y): 1.0154, norm:1.0761, tok/sec: 99609.90, flops:104.54, batch-reuse:1
@ 4418 train 4.1041 , allloss: 4.1059, dt: 1330.94ms, fracRes: 0.3753, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5162, norm(y): 1.0154, norm:1.1976, tok/sec: 98481.13, flops:103.36, batch-reuse:1
@ 4419 train 4.1147 , allloss: 4.1161, dt: 1305.89ms, fracRes: 0.3752, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5139, norm(y): 1.0155, norm:1.2362, tok/sec: 100369.69, flops:105.34, batch-reuse:1
@ 4420 train 4.1517 , allloss: 4.1545, dt: 1320.57ms, fracRes: 0.3751, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5136, norm(y): 1.0155, norm:1.2660, tok/sec: 99254.04, flops:104.17, batch-reuse:1
@ 4421 train 4.2362 , allloss: 4.2373, dt: 1314.89ms, fracRes: 0.3743, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5150, norm(y): 1.0154, norm:1.2512, tok/sec: 99683.01, flops:104.62, batch-reuse:1
@ 4422 train 4.1070 , allloss: 4.1079, dt: 1292.96ms, fracRes: 0.3727, norm(attn): 0.2334, norm(output): 0.6562, norm(x): 0.5151, norm(y): 1.0153, norm:1.0675, tok/sec: 101373.58, flops:106.39, batch-reuse:1
@ 4423 train 4.1281 , allloss: 4.1294, dt: 1285.81ms, fracRes: 0.3747, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5133, norm(y): 1.0155, norm:1.0668, tok/sec: 101937.19, flops:106.98, batch-reuse:1
@ 4424 train 4.1597 , allloss: 4.1606, dt: 1312.50ms, fracRes: 0.3747, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5133, norm(y): 1.0155, norm:1.1780, tok/sec: 99864.42, flops:104.81, batch-reuse:1
@ 4425 train 4.2278 , allloss: 4.2288, dt: 1343.49ms, fracRes: 0.3746, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5152, norm(y): 1.0155, norm:1.5108, tok/sec: 97560.87, flops:102.39, batch-reuse:1
@ 4426 train 4.4846 , allloss: 4.4857, dt: 1289.87ms, fracRes: 0.3767, norm(attn): 0.2305, norm(output): 0.6562, norm(x): 0.5230, norm(y): 1.0155, norm:1.8519, tok/sec: 101616.63, flops:106.65, batch-reuse:1
@ 4427 train 4.2104 , allloss: 4.2140, dt: 1320.13ms, fracRes: 0.3756, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5109, norm(y): 1.0155, norm:1.4856, tok/sec: 99287.40, flops:104.20, batch-reuse:1
@ 4428 train 4.2160 , allloss: 4.2178, dt: 1295.83ms, fracRes: 0.3746, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5149, norm(y): 1.0155, norm:1.3321, tok/sec: 101148.94, flops:106.16, batch-reuse:1
@ 4429 train 4.2354 , allloss: 4.2368, dt: 1306.72ms, fracRes: 0.3728, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5116, norm(y): 1.0153, norm:1.3259, tok/sec: 100306.11, flops:105.27, batch-reuse:1
@ 4430 train 4.2418 , allloss: 4.2426, dt: 1318.43ms, fracRes: 0.3745, norm(attn): 0.2295, norm(output): 0.6445, norm(x): 0.5117, norm(y): 1.0154, norm:1.3461, tok/sec: 99415.33, flops:104.34, batch-reuse:1
@ 4431 train 4.3513 , allloss: 4.3521, dt: 1284.77ms, fracRes: 0.3754, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5132, norm(y): 1.0155, norm:1.1278, tok/sec: 102019.76, flops:107.07, batch-reuse:1
@ 4432 train 4.3752 , allloss: 4.3760, dt: 1300.07ms, fracRes: 0.3754, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5166, norm(y): 1.0155, norm:1.5925, tok/sec: 100819.52, flops:105.81, batch-reuse:1
@ 4433 train 4.1239 , allloss: 4.1244, dt: 1316.38ms, fracRes: 0.3751, norm(attn): 0.2354, norm(output): 0.6445, norm(x): 0.5113, norm(y): 1.0154, norm:1.2906, tok/sec: 99570.01, flops:104.50, batch-reuse:1
@ 4434 train 4.1691 , allloss: 4.1699, dt: 1305.73ms, fracRes: 0.3746, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5123, norm(y): 1.0154, norm:1.1934, tok/sec: 100382.10, flops:105.35, batch-reuse:1
@ 4435 train 4.1670 , allloss: 4.1679, dt: 1295.10ms, fracRes: 0.3745, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5116, norm(y): 1.0154, norm:1.1126, tok/sec: 101205.73, flops:106.22, batch-reuse:1
@ 4436 train 4.1677 , allloss: 4.1691, dt: 1303.78ms, fracRes: 0.3762, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5120, norm(y): 1.0155, norm:1.2298, tok/sec: 100532.24, flops:105.51, batch-reuse:1
@ 4437 train 4.1381 , allloss: 4.1426, dt: 1289.60ms, fracRes: 0.3759, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5137, norm(y): 1.0156, norm:1.2545, tok/sec: 101637.54, flops:106.67, batch-reuse:1
@ 4438 train 4.1917 , allloss: 4.1926, dt: 1296.63ms, fracRes: 0.3753, norm(attn): 0.2314, norm(output): 0.6445, norm(x): 0.5090, norm(y): 1.0155, norm:1.2846, tok/sec: 101086.48, flops:106.09, batch-reuse:1
@ 4439 train 4.2242 , allloss: 4.2247, dt: 1289.28ms, fracRes: 0.3756, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5129, norm(y): 1.0155, norm:1.1984, tok/sec: 101663.12, flops:106.70, batch-reuse:1
@ 4440 train 4.2095 , allloss: 4.2103, dt: 1308.57ms, fracRes: 0.3761, norm(attn): 0.2305, norm(output): 0.6484, norm(x): 0.5156, norm(y): 1.0155, norm:1.3389, tok/sec: 100163.98, flops:105.12, batch-reuse:1
@ 4441 train 4.3082 , allloss: 4.3109, dt: 1310.44ms, fracRes: 0.3757, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5151, norm(y): 1.0155, norm:1.5351, tok/sec: 100021.27, flops:104.97, batch-reuse:1
@ 4442 train 4.1896 , allloss: 4.1904, dt: 1309.93ms, fracRes: 0.3754, norm(attn): 0.2334, norm(output): 0.6445, norm(x): 0.5102, norm(y): 1.0156, norm:1.1816, tok/sec: 100060.37, flops:105.02, batch-reuse:1
@ 4443 train 4.2339 , allloss: 4.2351, dt: 1296.58ms, fracRes: 0.3750, norm(attn): 0.2324, norm(output): 0.6445, norm(x): 0.5140, norm(y): 1.0155, norm:1.3554, tok/sec: 101090.46, flops:106.10, batch-reuse:1
@ 4444 train 4.2219 , allloss: 4.2234, dt: 1304.35ms, fracRes: 0.3733, norm(attn): 0.2334, norm(output): 0.6602, norm(x): 0.5222, norm(y): 1.0153, norm:1.7221, tok/sec: 100488.21, flops:105.46, batch-reuse:1
@ 4445 train 4.3261 , allloss: 4.3281, dt: 1327.70ms, fracRes: 0.3747, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5177, norm(y): 1.0155, norm:1.5366, tok/sec: 98721.14, flops:103.61, batch-reuse:1
@ 4446 train 4.4097 , allloss: 4.4116, dt: 1345.95ms, fracRes: 0.3752, norm(attn): 0.2305, norm(output): 0.6445, norm(x): 0.5107, norm(y): 1.0156, norm:1.2421, tok/sec: 97382.53, flops:102.20, batch-reuse:1
@ 4447 train 4.3280 , allloss: 4.3302, dt: 1322.97ms, fracRes: 0.3751, norm(attn): 0.2344, norm(output): 0.6445, norm(x): 0.5105, norm(y): 1.0156, norm:1.2747, tok/sec: 99073.81, flops:103.98, batch-reuse:1
@ 4448 train 4.2135 , allloss: 4.2144, dt: 1312.83ms, fracRes: 0.3743, norm(attn): 0.2354, norm(output): 0.6445, norm(x): 0.5137, norm(y): 1.0155, norm:1.2909, tok/sec: 99838.97, flops:104.78, batch-reuse:1
@ 4449 train 4.4223 , allloss: 4.4244, dt: 1311.51ms, fracRes: 0.3739, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5187, norm(y): 1.0155, norm:1.2511, tok/sec: 99939.96, flops:104.89, batch-reuse:1
@ 4450 train 4.3211 , allloss: 4.3220, dt: 1330.65ms, fracRes: 0.3735, norm(attn): 0.2354, norm(output): 0.6484, norm(x): 0.5180, norm(y): 1.0155, norm:1.3975, tok/sec: 98502.16, flops:103.38, batch-reuse:1
@ 4451 train 4.4812 , allloss: 4.4825, dt: 1310.19ms, fracRes: 0.3725, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5149, norm(y): 1.0154, norm:1.2068, tok/sec: 100040.53, flops:104.99, batch-reuse:1
@ 4452 train 4.2929 , allloss: 4.2941, dt: 1331.83ms, fracRes: 0.3737, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5153, norm(y): 1.0155, norm:1.2522, tok/sec: 98414.78, flops:103.29, batch-reuse:1
@ 4453 train 4.3457 , allloss: 4.3476, dt: 1332.49ms, fracRes: 0.3745, norm(attn): 0.2363, norm(output): 0.6484, norm(x): 0.5180, norm(y): 1.0155, norm:1.2945, tok/sec: 98365.85, flops:103.24, batch-reuse:1
@ 4454 train 4.2817 , allloss: 4.2850, dt: 1293.52ms, fracRes: 0.3746, norm(attn): 0.2344, norm(output): 0.6523, norm(x): 0.5175, norm(y): 1.0154, norm:1.3946, tok/sec: 101329.74, flops:106.35, batch-reuse:1
@ 4455 train 4.2911 , allloss: 4.2923, dt: 1309.81ms, fracRes: 0.3760, norm(attn): 0.2314, norm(output): 0.6562, norm(x): 0.5173, norm(y): 1.0154, norm:1.1268, tok/sec: 100069.57, flops:105.02, batch-reuse:1
@ 4456 train 4.3630 , allloss: 4.3646, dt: 1295.65ms, fracRes: 0.3763, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5169, norm(y): 1.0154, norm:1.1075, tok/sec: 101163.25, flops:106.17, batch-reuse:1
@ 4457 train 4.3832 , allloss: 4.3850, dt: 1296.92ms, fracRes: 0.3769, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5166, norm(y): 1.0154, norm:1.1718, tok/sec: 101063.79, flops:106.07, batch-reuse:1
@ 4458 train 4.2247 , allloss: 4.2256, dt: 1298.43ms, fracRes: 0.3757, norm(attn): 0.2314, norm(output): 0.6484, norm(x): 0.5171, norm(y): 1.0155, norm:1.2044, tok/sec: 100946.22, flops:105.94, batch-reuse:1
@ 4459 train 4.2686 , allloss: 4.2700, dt: 1295.25ms, fracRes: 0.3761, norm(attn): 0.2324, norm(output): 0.6602, norm(x): 0.5207, norm(y): 1.0155, norm:1.2852, tok/sec: 101194.44, flops:106.21, batch-reuse:1
@ 4460 train 4.3891 , allloss: 4.3901, dt: 1312.08ms, fracRes: 0.3756, norm(attn): 0.2344, norm(output): 0.6602, norm(x): 0.5237, norm(y): 1.0154, norm:1.2610, tok/sec: 99896.61, flops:104.84, batch-reuse:1
@ 4461 train 4.3247 , allloss: 4.3262, dt: 1299.92ms, fracRes: 0.3745, norm(attn): 0.2354, norm(output): 0.6562, norm(x): 0.5218, norm(y): 1.0154, norm:1.3817, tok/sec: 100831.20, flops:105.82, batch-reuse:1
@ 4462 train 4.3625 , allloss: 4.3635, dt: 1304.04ms, fracRes: 0.3744, norm(attn): 0.2324, norm(output): 0.6523, norm(x): 0.5204, norm(y): 1.0154, norm:1.1473, tok/sec: 100512.33, flops:105.49, batch-reuse:1
@ 4463 train 4.3426 , allloss: 4.3434, dt: 1338.79ms, fracRes: 0.3741, norm(attn): 0.2324, norm(output): 0.6523, norm(x): 0.5171, norm(y): 1.0154, norm:1.1685, tok/sec: 97903.67, flops:102.75, batch-reuse:1
@ 4464 train 4.2910 , allloss: 4.2922, dt: 1304.87ms, fracRes: 0.3757, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5179, norm(y): 1.0155, norm:1.2043, tok/sec: 100448.00, flops:105.42, batch-reuse:1
@ 4465 train 4.3148 , allloss: 4.3163, dt: 1299.19ms, fracRes: 0.3740, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5194, norm(y): 1.0155, norm:1.2992, tok/sec: 100887.23, flops:105.88, batch-reuse:1
@ 4466 train 4.3050 , allloss: 4.3066, dt: 1312.31ms, fracRes: 0.3741, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5202, norm(y): 1.0155, norm:1.1471, tok/sec: 99879.11, flops:104.82, batch-reuse:1
@ 4467 train 4.2868 , allloss: 4.2879, dt: 1313.64ms, fracRes: 0.3744, norm(attn): 0.2314, norm(output): 0.6641, norm(x): 0.5184, norm(y): 1.0156, norm:1.0953, tok/sec: 99777.62, flops:104.72, batch-reuse:1
@ 4468 train 4.2767 , allloss: 4.2781, dt: 1294.06ms, fracRes: 0.3728, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5203, norm(y): 1.0155, norm:1.1032, tok/sec: 101287.35, flops:106.30, batch-reuse:1
@ 4469 train 4.3067 , allloss: 4.3084, dt: 1316.35ms, fracRes: 0.3737, norm(attn): 0.2314, norm(output): 0.6602, norm(x): 0.5196, norm(y): 1.0155, norm:1.3961, tok/sec: 99572.01, flops:104.50, batch-reuse:1
@ 4470 train 4.3886 , allloss: 4.3900, dt: 1323.60ms, fracRes: 0.3750, norm(attn): 0.2344, norm(output): 0.6562, norm(x): 0.5165, norm(y): 1.0155, norm:1.3667, tok/sec: 99027.00, flops:103.93, batch-reuse:1
@ 4471 train 4.2623 , allloss: 4.2640, dt: 1322.77ms, fracRes: 0.3754, norm(attn): 0.2334, norm(output): 0.6562, norm(x): 0.5195, norm(y): 1.0155, norm:1.2324, tok/sec: 99088.99, flops:104.00, batch-reuse:1
@ 4472 train 4.2610 , allloss: 4.2649, dt: 1309.24ms, fracRes: 0.3763, norm(attn): 0.2314, norm(output): 0.6641, norm(x): 0.5185, norm(y): 1.0156, norm:1.6494, tok/sec: 100113.16, flops:105.07, batch-reuse:1
@ 4473 train 4.3837 , allloss: 4.3859, dt: 1296.57ms, fracRes: 0.3776, norm(attn): 0.2305, norm(output): 0.6562, norm(x): 0.5200, norm(y): 1.0156, norm:1.4922, tok/sec: 101091.15, flops:106.10, batch-reuse:1
@ 4474 train 4.3418 , allloss: 4.3426, dt: 1304.95ms, fracRes: 0.3782, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5130, norm(y): 1.0156, norm:1.4102, tok/sec: 100441.91, flops:105.42, batch-reuse:1
@ 4475 train 4.2174 , allloss: 4.2184, dt: 1283.24ms, fracRes: 0.3774, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5143, norm(y): 1.0156, norm:1.4049, tok/sec: 102141.79, flops:107.20, batch-reuse:1
@ 4476 train 4.2660 , allloss: 4.2668, dt: 1307.24ms, fracRes: 0.3783, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5214, norm(y): 1.0155, norm:1.4096, tok/sec: 100265.92, flops:105.23, batch-reuse:1
@ 4477 train 4.3504 , allloss: 4.3516, dt: 1308.53ms, fracRes: 0.3746, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5216, norm(y): 1.0153, norm:1.3853, tok/sec: 100167.27, flops:105.13, batch-reuse:1
@ 4478 train 4.2359 , allloss: 4.2369, dt: 1328.39ms, fracRes: 0.3743, norm(attn): 0.2344, norm(output): 0.6523, norm(x): 0.5180, norm(y): 1.0154, norm:1.3525, tok/sec: 98670.07, flops:103.56, batch-reuse:1
@ 4479 train 4.2337 , allloss: 4.2351, dt: 1311.06ms, fracRes: 0.3748, norm(attn): 0.2324, norm(output): 0.6562, norm(x): 0.5183, norm(y): 1.0155, norm:1.2173, tok/sec: 99973.74, flops:104.92, batch-reuse:1
@ 4480 train 4.3289 , allloss: 4.3304, dt: 1287.01ms, fracRes: 0.3754, norm(attn): 0.2324, norm(output): 0.6562, norm(x): 0.5203, norm(y): 1.0155, norm:1.1720, tok/sec: 101842.31, flops:106.89, batch-reuse:1
@ 4481 train 4.3326 , allloss: 4.3345, dt: 1300.85ms, fracRes: 0.3750, norm(attn): 0.2334, norm(output): 0.6562, norm(x): 0.5212, norm(y): 1.0154, norm:1.2661, tok/sec: 100758.76, flops:105.75, batch-reuse:1
@ 4482 train 4.4019 , allloss: 4.4027, dt: 1320.30ms, fracRes: 0.3750, norm(attn): 0.2334, norm(output): 0.6523, norm(x): 0.5177, norm(y): 1.0154, norm:1.2504, tok/sec: 99274.36, flops:104.19, batch-reuse:1
@ 4483 train 4.3974 , allloss: 4.3988, dt: 1288.74ms, fracRes: 0.3756, norm(attn): 0.2324, norm(output): 0.6562, norm(x): 0.5192, norm(y): 1.0154, norm:1.0951, tok/sec: 101705.79, flops:106.74, batch-reuse:1
@ 4484 train 4.2459 , allloss: 4.2470, dt: 1310.90ms, fracRes: 0.3754, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5230, norm(y): 1.0155, norm:1.2392, tok/sec: 99986.51, flops:104.94, batch-reuse:1
@ 4485 train 4.3688 , allloss: 4.3701, dt: 1303.86ms, fracRes: 0.3752, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5221, norm(y): 1.0155, norm:1.3115, tok/sec: 100526.37, flops:105.50, batch-reuse:1
@ 4486 train 4.2982 , allloss: 4.2997, dt: 1307.06ms, fracRes: 0.3756, norm(attn): 0.2305, norm(output): 0.6680, norm(x): 0.5222, norm(y): 1.0156, norm:1.4159, tok/sec: 100280.04, flops:105.25, batch-reuse:1
@ 4487 train 4.3567 , allloss: 4.3575, dt: 1317.03ms, fracRes: 0.3763, norm(attn): 0.2334, norm(output): 0.6602, norm(x): 0.5190, norm(y): 1.0156, norm:1.4226, tok/sec: 99520.63, flops:104.45, batch-reuse:1
@ 4488 train 4.3721 , allloss: 4.3728, dt: 1342.27ms, fracRes: 0.3765, norm(attn): 0.2324, norm(output): 0.6602, norm(x): 0.5188, norm(y): 1.0155, norm:1.1819, tok/sec: 97649.15, flops:102.48, batch-reuse:1
@ 4489 train 4.3784 , allloss: 4.3798, dt: 1302.05ms, fracRes: 0.3746, norm(attn): 0.2305, norm(output): 0.6641, norm(x): 0.5201, norm(y): 1.0154, norm:1.1797, tok/sec: 100665.85, flops:105.65, batch-reuse:1
@ 4490 train 4.3615 , allloss: 4.3623, dt: 1319.26ms, fracRes: 0.3756, norm(attn): 0.2305, norm(output): 0.6641, norm(x): 0.5227, norm(y): 1.0155, norm:1.2123, tok/sec: 99352.71, flops:104.27, batch-reuse:1
@ 4491 train 4.3167 , allloss: 4.3174, dt: 1352.34ms, fracRes: 0.3756, norm(attn): 0.2314, norm(output): 0.6562, norm(x): 0.5203, norm(y): 1.0155, norm:1.0908, tok/sec: 96922.03, flops:101.72, batch-reuse:1
@ 4492 train 4.3900 , allloss: 4.3912, dt: 1326.05ms, fracRes: 0.3761, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5233, norm(y): 1.0155, norm:1.1675, tok/sec: 98844.09, flops:103.74, batch-reuse:1
@ 4493 train 4.2690 , allloss: 4.2699, dt: 1316.70ms, fracRes: 0.3752, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5205, norm(y): 1.0155, norm:1.1898, tok/sec: 99545.85, flops:104.48, batch-reuse:1
@ 4494 train 4.3478 , allloss: 4.3490, dt: 1313.19ms, fracRes: 0.3783, norm(attn): 0.2305, norm(output): 0.6641, norm(x): 0.5211, norm(y): 1.0156, norm:1.2268, tok/sec: 99811.87, flops:104.75, batch-reuse:1
@ 4495 train 4.3549 , allloss: 4.3560, dt: 1334.08ms, fracRes: 0.3761, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5204, norm(y): 1.0155, norm:1.3853, tok/sec: 98248.86, flops:103.11, batch-reuse:1
@ 4496 train 4.3931 , allloss: 4.3941, dt: 1296.24ms, fracRes: 0.3757, norm(attn): 0.2324, norm(output): 0.6562, norm(x): 0.5166, norm(y): 1.0155, norm:1.1742, tok/sec: 101117.39, flops:106.12, batch-reuse:1
@ 4497 train 4.3805 , allloss: 4.3815, dt: 1286.66ms, fracRes: 0.3756, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5157, norm(y): 1.0155, norm:1.0810, tok/sec: 101870.26, flops:106.91, batch-reuse:1
@ 4498 train 4.3373 , allloss: 4.3382, dt: 1297.21ms, fracRes: 0.3753, norm(attn): 0.2334, norm(output): 0.6523, norm(x): 0.5180, norm(y): 1.0155, norm:1.0181, tok/sec: 101041.54, flops:106.04, batch-reuse:1
@ 4499 train 4.3679 , allloss: 4.3689, dt: 1301.28ms, fracRes: 0.3774, norm(attn): 0.2324, norm(output): 0.6602, norm(x): 0.5185, norm(y): 1.0155, norm:1.1197, tok/sec: 100725.53, flops:105.71, batch-reuse:1
@ 4500 train 4.2698 , allloss: 4.2712, dt: 1287.76ms, fracRes: 0.3778, norm(attn): 0.2344, norm(output): 0.6562, norm(x): 0.5214, norm(y): 1.0155, norm:1.1240, tok/sec: 101782.83, flops:106.82, batch-reuse:1
@ 4501 train 4.2847 , allloss: 4.2856, dt: 1290.55ms, fracRes: 0.3774, norm(attn): 0.2334, norm(output): 0.6562, norm(x): 0.5208, norm(y): 1.0155, norm:0.9570, tok/sec: 101563.03, flops:106.59, batch-reuse:1
@ 4502 train 4.3334 , allloss: 4.3339, dt: 1317.29ms, fracRes: 0.3776, norm(attn): 0.2324, norm(output): 0.6484, norm(x): 0.5182, norm(y): 1.0155, norm:1.1609, tok/sec: 99501.60, flops:104.43, batch-reuse:1
@ 4503 train 4.3228 , allloss: 4.3238, dt: 1333.33ms, fracRes: 0.3760, norm(attn): 0.2334, norm(output): 0.6484, norm(x): 0.5171, norm(y): 1.0155, norm:1.0128, tok/sec: 98304.48, flops:103.17, batch-reuse:1
@ 4504 train 4.2237 , allloss: 4.2244, dt: 1327.44ms, fracRes: 0.3745, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5173, norm(y): 1.0155, norm:1.1012, tok/sec: 98740.61, flops:103.63, batch-reuse:1
@ 4505 train 4.3029 , allloss: 4.3038, dt: 1288.74ms, fracRes: 0.3750, norm(attn): 0.2344, norm(output): 0.6484, norm(x): 0.5186, norm(y): 1.0156, norm:1.3399, tok/sec: 101705.36, flops:106.74, batch-reuse:1
@ 4506 train 4.3564 , allloss: 4.3572, dt: 1301.54ms, fracRes: 0.3727, norm(attn): 0.2344, norm(output): 0.6602, norm(x): 0.5228, norm(y): 1.0155, norm:1.0765, tok/sec: 100705.31, flops:105.69, batch-reuse:1
@ 4507 train 4.3512 , allloss: 4.3518, dt: 1295.00ms, fracRes: 0.3734, norm(attn): 0.2334, norm(output): 0.6602, norm(x): 0.5201, norm(y): 1.0155, norm:1.0884, tok/sec: 101214.14, flops:106.23, batch-reuse:1
@ 4508 train 4.2713 , allloss: 4.2721, dt: 1313.31ms, fracRes: 0.3746, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5225, norm(y): 1.0155, norm:1.3024, tok/sec: 99802.90, flops:104.75, batch-reuse:1
@ 4509 train 4.3470 , allloss: 4.3481, dt: 1286.65ms, fracRes: 0.3730, norm(attn): 0.2363, norm(output): 0.6641, norm(x): 0.5231, norm(y): 1.0154, norm:1.1788, tok/sec: 101870.51, flops:106.92, batch-reuse:1
@ 4510 train 4.3487 , allloss: 4.3496, dt: 1310.70ms, fracRes: 0.3747, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5202, norm(y): 1.0155, norm:1.1300, tok/sec: 100001.42, flops:104.95, batch-reuse:1
@ 4511 train 4.2213 , allloss: 4.2225, dt: 1311.79ms, fracRes: 0.3745, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5190, norm(y): 1.0156, norm:1.1289, tok/sec: 99918.09, flops:104.87, batch-reuse:1
@ 4512 train 4.3087 , allloss: 4.3093, dt: 1327.66ms, fracRes: 0.3751, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5210, norm(y): 1.0156, norm:1.0707, tok/sec: 98724.22, flops:103.61, batch-reuse:1
@ 4513 train 4.3105 , allloss: 4.3117, dt: 1307.85ms, fracRes: 0.3754, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5221, norm(y): 1.0156, norm:1.1821, tok/sec: 100219.67, flops:105.18, batch-reuse:1
@ 4514 train 4.2647 , allloss: 4.2654, dt: 1339.52ms, fracRes: 0.3755, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5212, norm(y): 1.0156, norm:1.1514, tok/sec: 97850.20, flops:102.70, batch-reuse:1
@ 4515 train 4.3352 , allloss: 4.3360, dt: 1343.97ms, fracRes: 0.3763, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5261, norm(y): 1.0155, norm:1.1860, tok/sec: 97525.93, flops:102.36, batch-reuse:1
@ 4516 train 4.2784 , allloss: 4.2809, dt: 1312.68ms, fracRes: 0.3762, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5269, norm(y): 1.0155, norm:1.1371, tok/sec: 99850.43, flops:104.79, batch-reuse:1
@ 4517 train 4.2911 , allloss: 4.2917, dt: 1315.96ms, fracRes: 0.3769, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5290, norm(y): 1.0156, norm:1.2037, tok/sec: 99601.49, flops:104.53, batch-reuse:1
@ 4518 train 4.3170 , allloss: 4.3178, dt: 1312.68ms, fracRes: 0.3761, norm(attn): 0.2314, norm(output): 0.6641, norm(x): 0.5252, norm(y): 1.0156, norm:1.0761, tok/sec: 99850.99, flops:104.80, batch-reuse:1
@ 4519 train 4.3577 , allloss: 4.3588, dt: 1340.00ms, fracRes: 0.3771, norm(attn): 0.2305, norm(output): 0.6641, norm(x): 0.5252, norm(y): 1.0157, norm:1.1236, tok/sec: 97815.16, flops:102.66, batch-reuse:1
@ 4520 train 4.3959 , allloss: 4.3970, dt: 1313.81ms, fracRes: 0.3756, norm(attn): 0.2314, norm(output): 0.6641, norm(x): 0.5233, norm(y): 1.0156, norm:1.0524, tok/sec: 99764.83, flops:104.71, batch-reuse:1
@ 4521 train 4.3609 , allloss: 4.3619, dt: 1286.74ms, fracRes: 0.3744, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5214, norm(y): 1.0155, norm:1.0257, tok/sec: 101863.60, flops:106.91, batch-reuse:1
@ 4522 train 4.4069 , allloss: 4.4077, dt: 1291.36ms, fracRes: 0.3731, norm(attn): 0.2324, norm(output): 0.6641, norm(x): 0.5207, norm(y): 1.0155, norm:1.0898, tok/sec: 101499.46, flops:106.53, batch-reuse:1
@ 4523 train 4.3819 , allloss: 4.3829, dt: 1288.49ms, fracRes: 0.3721, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5227, norm(y): 1.0155, norm:1.0087, tok/sec: 101725.20, flops:106.76, batch-reuse:1
@ 4524 train 4.3152 , allloss: 4.3162, dt: 1313.56ms, fracRes: 0.3717, norm(attn): 0.2363, norm(output): 0.6641, norm(x): 0.5244, norm(y): 1.0155, norm:1.1304, tok/sec: 99783.52, flops:104.72, batch-reuse:1
@ 4525 train 4.3028 , allloss: 4.3037, dt: 1346.06ms, fracRes: 0.3714, norm(attn): 0.2344, norm(output): 0.6562, norm(x): 0.5220, norm(y): 1.0156, norm:1.0239, tok/sec: 97374.87, flops:102.20, batch-reuse:1
@ 4526 train 4.4174 , allloss: 4.4183, dt: 1296.94ms, fracRes: 0.3735, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5298, norm(y): 1.0155, norm:1.2432, tok/sec: 101062.38, flops:106.07, batch-reuse:1
@ 4527 train 4.2525 , allloss: 4.2529, dt: 1320.27ms, fracRes: 0.3757, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5264, norm(y): 1.0156, norm:1.1661, tok/sec: 99276.68, flops:104.19, batch-reuse:1
@ 4528 train 4.3041 , allloss: 4.3047, dt: 1287.12ms, fracRes: 0.3760, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5225, norm(y): 1.0156, norm:1.1946, tok/sec: 101833.34, flops:106.88, batch-reuse:1
@ 4529 train 4.3279 , allloss: 4.3289, dt: 1280.30ms, fracRes: 0.3753, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5257, norm(y): 1.0155, norm:1.1579, tok/sec: 102376.15, flops:107.45, batch-reuse:1
@ 4530 train 4.2929 , allloss: 4.2937, dt: 1309.89ms, fracRes: 0.3765, norm(attn): 0.2305, norm(output): 0.6641, norm(x): 0.5225, norm(y): 1.0157, norm:1.1610, tok/sec: 100063.43, flops:105.02, batch-reuse:1
@ 4531 train 4.3378 , allloss: 4.3385, dt: 1327.16ms, fracRes: 0.3775, norm(attn): 0.2314, norm(output): 0.6680, norm(x): 0.5232, norm(y): 1.0158, norm:1.2559, tok/sec: 98761.40, flops:103.65, batch-reuse:1
@ 4532 train 4.3384 , allloss: 4.3390, dt: 1293.85ms, fracRes: 0.3774, norm(attn): 0.2305, norm(output): 0.6680, norm(x): 0.5221, norm(y): 1.0157, norm:1.3058, tok/sec: 101304.18, flops:106.32, batch-reuse:1
@ 4533 train 4.3739 , allloss: 4.3750, dt: 1310.81ms, fracRes: 0.3773, norm(attn): 0.2314, norm(output): 0.6719, norm(x): 0.5261, norm(y): 1.0156, norm:1.2440, tok/sec: 99993.29, flops:104.94, batch-reuse:1
@ 4534 train 4.3895 , allloss: 4.3912, dt: 1292.80ms, fracRes: 0.3773, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5249, norm(y): 1.0155, norm:1.1098, tok/sec: 101386.18, flops:106.41, batch-reuse:1
@ 4535 train 4.3938 , allloss: 4.3943, dt: 1338.62ms, fracRes: 0.3770, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5208, norm(y): 1.0156, norm:1.2470, tok/sec: 97915.79, flops:102.76, batch-reuse:1
@ 4536 train 4.3829 , allloss: 4.3834, dt: 1331.67ms, fracRes: 0.3768, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5234, norm(y): 1.0156, norm:1.2178, tok/sec: 98427.01, flops:103.30, batch-reuse:1
@ 4537 train 4.2998 , allloss: 4.3005, dt: 1302.07ms, fracRes: 0.3749, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5271, norm(y): 1.0155, norm:1.0431, tok/sec: 100664.32, flops:105.65, batch-reuse:1
@ 4538 train 4.3040 , allloss: 4.3045, dt: 1330.23ms, fracRes: 0.3765, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5228, norm(y): 1.0156, norm:0.9983, tok/sec: 98533.35, flops:103.41, batch-reuse:1
@ 4539 train 4.3072 , allloss: 4.3079, dt: 1335.47ms, fracRes: 0.3766, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5257, norm(y): 1.0157, norm:1.2407, tok/sec: 98147.07, flops:103.01, batch-reuse:1
@ 4540 train 4.2488 , allloss: 4.2496, dt: 1335.57ms, fracRes: 0.3756, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5226, norm(y): 1.0157, norm:1.0787, tok/sec: 98139.33, flops:103.00, batch-reuse:1
@ 4541 train 4.2928 , allloss: 4.2937, dt: 1331.92ms, fracRes: 0.3744, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5233, norm(y): 1.0156, norm:1.1421, tok/sec: 98408.65, flops:103.28, batch-reuse:1
@ 4542 train 4.1046 , allloss: 4.1055, dt: 1320.35ms, fracRes: 0.3758, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5265, norm(y): 1.0157, norm:1.1770, tok/sec: 99270.85, flops:104.19, batch-reuse:1
@ 4543 train 4.3034 , allloss: 4.3041, dt: 1348.53ms, fracRes: 0.3735, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5229, norm(y): 1.0156, norm:1.1492, tok/sec: 97196.17, flops:102.01, batch-reuse:1
@ 4544 train 4.3006 , allloss: 4.3013, dt: 1344.51ms, fracRes: 0.3737, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5206, norm(y): 1.0156, norm:1.1069, tok/sec: 97486.79, flops:102.31, batch-reuse:1
@ 4545 train 4.2807 , allloss: 4.2819, dt: 1335.88ms, fracRes: 0.3738, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5243, norm(y): 1.0156, norm:1.1350, tok/sec: 98116.38, flops:102.97, batch-reuse:1
@ 4546 train 4.2011 , allloss: 4.2019, dt: 1335.96ms, fracRes: 0.3742, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5250, norm(y): 1.0155, norm:1.0752, tok/sec: 98111.06, flops:102.97, batch-reuse:1
@ 4547 train 4.3211 , allloss: 4.3220, dt: 1341.96ms, fracRes: 0.3741, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5227, norm(y): 1.0155, norm:1.1363, tok/sec: 97672.08, flops:102.51, batch-reuse:1
@ 4548 train 4.3087 , allloss: 4.3094, dt: 1326.77ms, fracRes: 0.3745, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5221, norm(y): 1.0156, norm:1.2167, tok/sec: 98790.25, flops:103.68, batch-reuse:1
@ 4549 train 4.2217 , allloss: 4.2225, dt: 1322.12ms, fracRes: 0.3751, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5251, norm(y): 1.0156, norm:1.0745, tok/sec: 99137.41, flops:104.05, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0130,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1543,     0.3750,     0.4707,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.1191,     0.3457,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1011,     0.0383,     0.7422,     0.1167,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0369,     0.1953,     0.3203,     0.2295,     0.0981,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0289,     0.1318,     0.0157,     0.1836,     0.3926,     0.2109,     0.0361,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6914,     0.0091,     0.0776,     0.0011,     0.0033,     0.0145,     0.1650,     0.0374,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.1758,     0.0981,     0.3047,     0.0278,     0.1758,     0.0525,     0.0903,     0.0703,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.1167,     0.1592,     0.2051,     0.0302,     0.1416,     0.1553,     0.0583,     0.1094,     0.0128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0461,     0.0064,     0.7539,     0.0391,     0.0286,     0.0033,     0.0012,     0.0757,     0.0031,     0.0427,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1738,     0.0593,     0.0835,     0.0566,     0.0177,     0.1406,     0.0811,     0.2188,     0.0231,     0.0527,     0.0371,     0.0557,     0.0000,     0.0000,     0.0000],
        [    0.6875,     0.0106,     0.0178,     0.0030,     0.0117,     0.0142,     0.0659,     0.0449,     0.0062,     0.0173,     0.0087,     0.0038,     0.1069,     0.0000,     0.0000],
        [    0.0040,     0.1113,     0.0698,     0.2090,     0.0233,     0.1001,     0.0332,     0.0757,     0.0718,     0.0146,     0.0292,     0.1875,     0.0161,     0.0542,     0.0000],
        [    0.0032,     0.0942,     0.0737,     0.1777,     0.0649,     0.0967,     0.0454,     0.0225,     0.0461,     0.0143,     0.0801,     0.0918,     0.0114,     0.0396,     0.1387]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0016, -0.0142,  0.0469,  ...,  0.0031,  0.0085,  0.0218],
        [ 0.0226, -0.0027,  0.0035,  ..., -0.0037,  0.0284,  0.0110],
        [-0.0351,  0.0134, -0.0096,  ..., -0.0299, -0.0124,  0.0147],
        ...,
        [-0.0392,  0.0085, -0.0627,  ...,  0.0119, -0.0133, -0.0147],
        [ 0.0030, -0.0142,  0.0083,  ...,  0.0362, -0.0153,  0.0107],
        [-0.0295,  0.0054, -0.0307,  ...,  0.0022, -0.0029,  0.0180]], device='cuda:0', requires_grad=True)
K: tensor([     0.0019,      0.1533,     -1.6094,      1.2578,     -0.9922,      0.0889,     -1.3828,      0.5312,     -1.2891,     -0.2031,     -1.3750,     -0.1943,     -0.0447,     -1.7812,     -1.2109,      1.4219,     -0.7695,      1.4766,     -0.4434,     -0.7148,      0.3945,     -1.2734,
            -1.6953,      1.5078,      0.2832,      0.1094,      1.0469,     -0.5469,     -0.9258,      0.9727,     -0.2100,      0.1982,      0.8867,     -0.4375,      0.6289,     -0.2988,     -0.2129,      0.7969,     -1.5781,     -0.5078,     -1.0234,     -0.7070,      0.7891,     -0.2197,
            -1.5156,      0.6016,      0.2393,      0.9570,      0.4473,      0.3438,     -0.6875,      0.4980,      0.1660,      2.6875,      0.0767,     -0.3789,      1.3203,      0.0403,      1.1406,     -0.2734,     -0.3105,      1.0781,     -0.7539,      0.9766], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0158,  0.0155, -0.0336,  ...,  0.0150,  0.0329,  0.0120],
        [ 0.0185, -0.0240, -0.0350,  ..., -0.0045,  0.0311,  0.0288],
        [-0.0026,  0.0203,  0.0349,  ...,  0.0002,  0.0086, -0.0350],
        ...,
        [ 0.0163,  0.0102,  0.0339,  ...,  0.0005,  0.0149, -0.0283],
        [ 0.0078, -0.0151, -0.0342,  ...,  0.0226, -0.0199, -0.0014],
        [ 0.0228, -0.0106,  0.0287,  ..., -0.0080, -0.0458, -0.0259]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6250, -0.4551,  0.0771,  0.0942, -1.0703,  0.5273, -1.3047,  0.2930, -1.5078, -0.5547, -0.5430, -0.7969,  0.4883, -0.4043, -0.8750,  0.9023, -1.0391,  0.7188,  0.2188, -0.9883,  0.0664, -0.0317, -1.1250,  1.5078, -0.8281, -1.0469,  1.4922,  0.9844, -0.6914,  0.1030, -0.5977,  0.8867,
         0.3359, -0.5273,  0.6992,  0.0952, -0.3184,  0.6016, -1.2344,  0.1001, -0.3613, -1.0469,  0.0664, -0.1973, -0.6328, -0.2500,  0.4414, -0.1245, -0.4648, -0.0442, -0.8594,  0.8906,  0.5625,  1.6406,  0.4336, -0.8164,  0.3613, -0.3535,  0.8672,  1.0469, -0.1592, -0.2422,  0.2617,  0.9727],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      4.3438,      2.1875,      4.5625,      2.2344,      3.9844,      3.5781,      1.7656,      2.2500,      0.4648,      2.6094,      3.5625,      1.6406,      2.0938,      3.6406],
        [     0.0000,      0.8867,      1.1172,      1.1172,     -0.7461,      1.2891,      1.3438,      1.0781,     -0.5273,     -0.8477,      0.0010,      0.4238,      1.0312,     -0.6328,      0.5156],
        [     0.0000,      2.9219,      3.9844,      4.4062,      0.5547,      2.0469,      2.0781,      2.1562,      1.4922,      1.3594,      1.2344,      3.2031,      2.3594,      1.3047,      2.3750],
        [     0.0000,      6.0625,      5.0938,      8.0625,      6.2188,      5.7500,      5.0000,      3.1250,      6.2188,      3.9531,      6.4688,      7.4688,      2.4219,      6.0625,      6.2188],
        [     0.0000,      1.6641,      2.1562,      1.8281,      0.9766,      1.1641,      1.5078,      1.0391,      0.9844,      0.1953,      1.0156,      1.8672,      0.1299,      1.2188,      1.8984],
        [     0.0000,      1.5156,     -0.6055,      1.8516,      2.6094,      1.9844,      0.2266,      0.5391,      1.9375,      0.7188,      2.6250,      1.0625,     -0.7656,      1.6953,      1.5781],
        [     0.0000,     -4.3438,     -2.1875,     -6.4688,     -5.3438,     -3.8750,     -1.4297,     -2.9219,     -5.6875,     -3.8438,     -5.3750,     -5.7188,     -1.9922,     -5.0938,     -4.0625],
        [     0.0000,      3.6562,      3.0781,      4.2188,      1.8125,      3.6562,      2.4531,      3.0000,      2.7500,      1.7578,      2.4688,      4.6250,      1.7109,      2.7031,      3.6250],
        [     0.0000,      2.3438,      2.6562,      2.9219,      0.9961,      2.5469,      2.6406,      1.6562,      2.2812,      0.1387,      1.9766,      2.6406,      1.3203,      1.7734,      2.7344],
        [     0.0000,      8.9375,      6.9688,     11.7500,      8.7500,      8.4375,      6.2812,      5.2500,      9.4375,      6.2188,      8.8750,     10.5000,      3.7031,      8.6875,      8.6250],
        [     0.0000,     -1.0703,     -0.7305,     -1.1172,     -2.2812,     -0.2119,     -0.7617,      0.2324,     -2.0156,     -1.1953,     -1.5391,     -1.1406,      0.4590,     -2.1875,     -1.3906],
        [     0.0000,     -4.1875,     -3.6562,     -5.4375,     -4.0938,     -3.8750,     -2.3438,     -2.7344,     -4.7188,     -3.6875,     -4.3750,     -5.1875,     -1.8594,     -4.7500,     -3.6250],
        [     0.0000,      3.3281,      2.8594,      3.9688,      1.7656,      3.2188,      2.1250,      2.9531,      2.8906,      1.3047,      1.9922,      3.8594,      1.3984,      2.6094,      3.9531],
        [     0.0000,      3.3906,      3.1406,      4.0312,      3.0156,      3.4219,      2.6562,      1.9531,      2.6719,      1.5000,      3.2188,      3.3594,      1.2734,      2.5156,      3.7656]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3462],
        [0.3887],
        [0.1936],
        [0.2393],
        [0.2414],
        [0.1514],
        [0.1648],
        [0.0895],
        [0.0964],
        [0.0320],
        [0.1479],
        [0.1404],
        [0.0613],
        [0.0543]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0688,     0.0031,     0.8945,     0.0322,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0003,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0009,     0.0002,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0006,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0654,     0.0070,     0.9062,     0.0074,     0.0025,     0.0002,     0.0077,     0.0019,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0003,     0.0008,     0.0015,     0.0001,     0.0001,     0.0001,     0.0001,     0.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0012,     0.0654,     0.0055,     0.0001,     0.0003,     0.0002,     0.0001,     0.0000,     0.0058,     0.0000,     0.0143,     0.0003,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0042, -0.0124,  0.0235,  ..., -0.0084, -0.0218, -0.0080],
        [-0.0242,  0.0187,  0.0047,  ...,  0.0044,  0.0229,  0.0063],
        [-0.0053,  0.0267,  0.0044,  ..., -0.0054, -0.0385,  0.0094],
        ...,
        [ 0.0274, -0.0427, -0.0202,  ...,  0.0104,  0.0111,  0.0032],
        [-0.0487, -0.0394,  0.0175,  ...,  0.0468, -0.0062,  0.0084],
        [ 0.0381, -0.0065,  0.0367,  ...,  0.0561,  0.0156,  0.0445]], device='cuda:0', requires_grad=True)
K: tensor([-2.0625,  2.5781,  3.7500, -3.2344, -1.5156, -3.2188,  0.2520,  1.9844,  5.4688,  3.5625, -1.7344, -2.2969,  3.6875,  0.2734,  0.1641,  4.0625, -2.0312, -4.9375,  2.7344,  2.8438,  1.3203, -0.9414,  1.8828, -2.0781,  3.6562, -4.2500, -3.8281,  3.1562,  0.4902, -0.7930,  2.1719,  1.3594,
         0.9023,  4.1562, -1.8281,  3.0156,  1.5859,  0.8398, -1.9219, -0.9414, -0.9219, -2.8750,  3.0938, -2.4375, -0.6602, -0.0757, -1.2344, -2.4531, -2.1875,  2.7969,  0.1533, -1.2422, -0.8516, -2.6875,  3.6094, -2.0781,  0.1689, -2.5781, -2.0156,  3.3438,  2.8906,  0.0928,  2.0469, -1.7734],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0152,  0.0422,  0.0152,  ...,  0.0167,  0.0004,  0.0385],
        [ 0.0149, -0.0277,  0.0182,  ...,  0.0497, -0.0194,  0.0077],
        [-0.0147,  0.0065, -0.0122,  ..., -0.0128, -0.0214,  0.0023],
        ...,
        [-0.0403,  0.0103,  0.0299,  ..., -0.0090,  0.0144, -0.0036],
        [ 0.0304, -0.0125, -0.0100,  ..., -0.0200, -0.0242,  0.0330],
        [ 0.0073,  0.0095, -0.0329,  ...,  0.0080, -0.0110, -0.0147]], device='cuda:0', requires_grad=True)
Q: tensor([-0.8438,  0.4121, -0.6055,  0.0135, -0.4434,  1.1953, -1.6172,  0.0811, -0.0483, -2.3906,  1.1328,  2.7969, -0.8438, -0.4824, -1.0938, -1.7188,  1.0312,  1.0938, -1.7656, -0.1943, -0.2441,  0.8164, -0.2812,  1.4844,  0.3613,  1.5312,  0.6914, -0.1748, -1.3594, -0.7773,  0.6992, -0.5391,
        -2.0781, -0.9062, -0.0718, -0.9219,  1.3359, -0.6133,  2.3906, -0.2559,  2.1406,  1.8828, -0.6836,  2.3281, -1.4922, -0.5352,  0.8750,  1.9453,  3.1562, -1.5391,  0.8984,  0.3438,  0.1514,  3.0312, -0.3613,  0.9180,  1.5547,  1.0859,  1.1719, -0.6094, -0.6484,  0.0114, -2.4844,  1.2422],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -8.0000,  -5.9375,  -7.0000,  -7.6875, -12.8125,  -7.7188,  -8.8750, -10.6250,  -9.7500, -10.8125,  -8.3750,  -7.2812, -10.1875,  -7.3125],
        [  0.0000, -12.2500, -10.8750, -10.3750, -12.2500, -16.5000, -16.2500, -16.1250, -18.0000, -13.0000, -17.3750, -13.0000, -14.8125, -17.7500, -14.5625],
        [  0.0000,  -3.0781,   2.5625,  -0.7578,  -2.2188,  -5.1250,  -2.1719,  -4.3750,  -5.8750,  -3.4375,  -4.4062,  -1.0938,  -3.0469,  -4.8125,   0.8750],
        [  0.0000,  -8.0625,  -7.4062,  -9.0000, -10.3750, -10.0625,  -9.5000,  -9.1250, -10.5625,  -9.8750, -11.7500,  -8.6875, -10.0625,  -9.9375,  -8.8125],
        [  0.0000,  -8.4375,  -7.0312,  -8.6250,  -8.8125, -14.8125,  -9.8125,  -9.5000, -11.2500, -10.1875, -12.3125,  -7.0938,  -9.9375, -10.7500,  -9.1250],
        [  0.0000,  -9.4375,  -7.4688,  -9.3125, -13.1250, -14.5625, -12.1250, -11.2500, -13.4375, -10.3750, -14.9375, -10.1875, -12.1875, -12.8125, -11.7500],
        [  0.0000,  -2.2344,   2.6250,  -2.1875,  -3.2812,  -5.8125,  -2.1406,  -3.5312,  -4.1875,  -0.2119,  -4.9688,   0.4277,  -2.4062,  -3.3281,   0.1816],
        [  0.0000, -11.1875,  -8.3125, -11.1875, -11.2500, -15.8750, -11.1250, -10.3750, -13.0625, -11.6875, -13.6250, -11.9375, -10.1250, -12.5000, -11.5625],
        [  0.0000,  -8.1875,  -7.0938,  -6.5000,  -9.8125,  -9.0625,  -8.9375,  -9.0000, -10.0625,  -7.0312, -10.4375,  -7.8438,  -8.3750,  -9.6250,  -5.2812],
        [  0.0000, -11.9375, -11.3125, -10.0000, -11.2500, -16.5000, -13.6250, -12.0625, -13.1250, -12.7500, -14.1250,  -9.4375, -12.5000, -12.5625, -13.0000],
        [  0.0000, -10.4375,  -8.7500,  -9.5625, -12.3125, -14.0000, -14.2500, -13.0000, -15.1250, -10.2500, -15.3125, -10.0000, -12.7500, -14.6875, -11.9375],
        [  0.0000,  -6.6250,  -2.6250,  -5.0938,  -8.8125,  -7.8750,  -8.3750,  -9.3125,  -9.8750,  -5.0625, -10.8750,  -4.1562,  -7.9375,  -9.2500,  -3.2969],
        [  0.0000, -12.3750, -10.1875, -12.6875, -12.5625, -17.0000, -12.9375, -11.6250, -14.5625, -13.0000, -15.1250, -13.6250, -11.6875, -14.1250, -13.7500],
        [  0.0000, -16.7500, -14.8750, -13.3750, -18.1250, -21.2500, -19.8750, -19.0000, -21.0000, -17.7500, -21.3750, -17.5000, -19.0000, -20.7500, -15.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6258],
        [0.6044],
        [0.4249],
        [0.5056],
        [0.6205],
        [0.7020],
        [0.3229],
        [0.5661],
        [0.3676],
        [0.6626],
        [0.4794],
        [0.4784],
        [0.5935],
        [0.7601]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4004,     0.0222,     0.0564,     0.0023,     0.0007,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0771,     0.0674,     0.0693,     0.0021,     0.0017,     0.6602,     0.1226,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0008,     0.0014,     0.0002,     0.0002,     0.0840,     0.0036,     0.0022,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2520,     0.0488,     0.0238,     0.0032,     0.0056,     0.4062,     0.1099,     0.0393,     0.0918,     0.0097,     0.0095,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9336,     0.0004,     0.0009,     0.0001,     0.0001,     0.0540,     0.0020,     0.0012,     0.0010,     0.0013,     0.0002,     0.0012,     0.0039,     0.0010,     0.0000],
        [    0.3398,     0.0101,     0.0072,     0.0009,     0.0020,     0.3770,     0.0294,     0.0222,     0.0513,     0.0085,     0.0046,     0.0043,     0.0354,     0.0525,     0.0537]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0060,  0.0174, -0.0021,  ..., -0.0158,  0.0062,  0.0219],
        [-0.0348,  0.0054,  0.0006,  ...,  0.0149,  0.0282,  0.0077],
        [ 0.0003, -0.0171, -0.0075,  ...,  0.0084,  0.0214,  0.0037],
        ...,
        [ 0.0013, -0.0038, -0.0238,  ...,  0.0360,  0.0072, -0.0121],
        [-0.0051,  0.0217, -0.0298,  ...,  0.0394,  0.0095,  0.0024],
        [ 0.0120, -0.0099,  0.0152,  ..., -0.0672, -0.0271, -0.0089]], device='cuda:0', requires_grad=True)
K: tensor([ 0.1157, -1.8672,  0.2891, -1.4531, -1.6719,  2.1719,  1.1719, -0.4277, -2.3125,  1.3359,  0.4004, -1.6797, -2.7500, -0.6953,  1.3984,  2.4688, -1.2266, -1.4844,  0.9141, -2.9844, -2.4062, -1.2812, -2.1875,  2.4531, -1.4375,  1.3594,  0.9609,  2.4844,  2.2188, -1.6641, -1.6016,  1.8203,
        -1.4219,  1.3984, -0.9102,  1.9688, -1.2422,  0.3574, -1.4844,  2.0938, -0.1953, -1.7500,  2.0938,  2.2031, -1.1016, -2.3594, -1.0312,  2.0625, -1.6328, -1.5781, -0.3496, -2.3281, -3.2812, -3.1406,  2.5938, -1.8125, -2.0312,  0.9453,  2.0625, -1.5156, -2.4062,  1.7188,  2.9375, -2.5312],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0078, -0.0194,  0.0277,  ...,  0.0159, -0.0132,  0.0145],
        [-0.0129, -0.0138,  0.0323,  ..., -0.0081, -0.0295, -0.0268],
        [-0.0268, -0.0108, -0.0098,  ..., -0.0488, -0.0646, -0.0606],
        ...,
        [-0.0272, -0.0003,  0.0402,  ...,  0.0018, -0.0377, -0.0389],
        [ 0.0252,  0.0152, -0.0178,  ..., -0.0622, -0.0193,  0.0137],
        [ 0.0265, -0.0021,  0.0014,  ..., -0.0066,  0.0130,  0.0333]], device='cuda:0', requires_grad=True)
Q: tensor([     0.3223,     -1.8984,      0.3574,      1.5781,     -0.0703,      0.0601,      0.5156,     -0.9297,     -0.0159,      0.7422,     -1.6250,      0.5781,     -0.4414,     -0.6406,      0.3125,      1.1328,      1.1484,      2.1719,      0.1089,     -0.7305,      0.5312,      0.3789,
            -0.2715,     -0.4629,     -0.1523,     -1.1094,      0.2988,      0.5625,      0.0996,      0.0549,     -0.2949,      0.0131,      0.9453,     -0.5508,      1.1719,     -0.0018,      2.0625,     -0.3926,      1.5469,     -0.6250,     -1.0859,     -0.2754,     -0.9688,     -1.0312,
            -0.6680,      0.1348,     -0.0190,      0.8711,      0.3320,      0.9922,      2.0312,     -1.1328,      0.2393,     -0.7422,      0.0586,      0.1152,      0.7734,     -1.5781,      1.1328,      2.0781,      1.2109,     -1.5391,      0.9062,      0.6797], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -9.0625,  -8.0625, -11.3125, -10.8750,  -4.7188,  -7.8438,  -8.5625,  -7.5000,  -9.6875, -10.5000,  -9.8125,  -8.5000,  -7.6562,  -7.7500],
        [  0.0000, -12.6250, -11.0625, -14.8750, -13.5000,  -8.0625, -12.0000, -11.2500, -10.7500, -10.6250, -13.2500, -12.3750,  -8.5000, -10.7500, -11.3125],
        [  0.0000, -17.8750, -16.0000, -20.6250, -18.6250, -11.0625, -16.2500, -16.1250, -15.3125, -16.1250, -18.8750, -16.8750, -13.1250, -15.4375, -15.9375],
        [  0.0000, -10.0625,  -8.8750, -12.1250, -11.1875,  -5.8438,  -8.1875,  -9.2500,  -8.6250, -10.1250, -10.8125, -10.0625,  -8.7500,  -8.6875,  -7.8438],
        [  0.0000,  -2.8906,  -1.9609,  -5.1875,  -6.2812,   0.2578,  -2.0938,  -1.6875,  -2.8281,  -3.2031,  -5.3125,  -3.7656,  -1.6875,  -2.6562,  -1.6250],
        [  0.0000,  -0.1348,  -0.1050,  -3.5938,  -3.8281,   2.1406,   0.4648,   0.3555,  -0.3633,  -1.5938,  -2.5312,  -2.5781,  -0.6289,  -0.3203,  -0.1299],
        [  0.0000, -16.3750, -13.0625, -18.8750, -19.1250,  -9.5000, -15.8125, -14.8750, -15.5625, -14.9375, -19.1250, -16.6250, -12.7500, -15.7500, -15.8125],
        [  0.0000,  -7.0312,  -6.4688,  -8.5000,  -8.6250,  -2.3750,  -5.5312,  -6.0000,  -6.2188,  -6.0938,  -8.1250,  -6.0625,  -4.9688,  -6.1562,  -4.5938],
        [  0.0000, -16.8750, -13.6875, -19.1250, -18.3750, -11.3750, -15.8125, -15.0000, -15.6250, -16.3750, -18.6250, -17.6250, -13.1250, -15.8125, -15.8125],
        [  0.0000,  -1.6406,  -2.3594,  -4.3750,  -3.7969,   0.4824,  -0.8281,  -1.8516,  -1.0078,  -3.2500,  -3.2812,  -3.3281,  -2.6719,  -1.0234,  -1.0781],
        [  0.0000, -14.7500, -13.1875, -15.9375, -14.3750, -10.0000, -13.5000, -14.1875, -12.6250, -13.3125, -14.8125, -13.6250, -11.7500, -12.6875, -12.6875],
        [  0.0000, -11.7500,  -9.5625, -13.0625, -13.5625,  -7.5000, -11.3750, -11.1250, -11.0000, -11.5625, -13.5000, -12.5000, -10.3125, -11.1250, -11.0625],
        [  0.0000,  -7.7188,  -7.0000,  -9.2500,  -9.1250,  -2.8438,  -6.1250,  -6.6875,  -6.8125,  -6.6250,  -8.7500,  -6.6562,  -5.4688,  -6.7812,  -5.2188],
        [  0.0000,  -3.5156,  -3.8438,  -6.0000,  -5.1250,   0.1055,  -2.4531,  -2.7344,  -1.8906,  -3.6875,  -4.3125,  -4.3750,  -2.2656,  -1.8672,  -1.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9987],
        [1.0000],
        [1.0000],
        [0.9997],
        [0.8726],
        [0.8251],
        [0.9997],
        [0.8720],
        [1.0000],
        [0.8703],
        [0.9977],
        [0.9951],
        [0.8999],
        [0.8441]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9648, 0.0361, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.7266, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0474, 0.2891, 0.0342, 0.6289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2754, 0.2490, 0.0894, 0.1943, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.4434, 0.1069, 0.1104, 0.1973, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5859, 0.0583, 0.1357, 0.1514, 0.0267, 0.0151, 0.0269, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3008, 0.0815, 0.0869, 0.1816, 0.0327, 0.0175, 0.0195, 0.2793, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.1079, 0.1064, 0.2930, 0.0232, 0.0405, 0.0102, 0.1885, 0.0057, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.3184, 0.0410, 0.0840, 0.0581, 0.0132, 0.0223, 0.2012, 0.0923, 0.0825, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2188, 0.0903, 0.0364, 0.0728, 0.0327, 0.0422, 0.0102, 0.2012, 0.0498, 0.1982, 0.0476, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0369, 0.0938, 0.0074, 0.0771, 0.2490, 0.0176, 0.0201, 0.1055, 0.0635, 0.0236, 0.2637, 0.0415, 0.0000, 0.0000, 0.0000],
        [0.0337, 0.0972, 0.0262, 0.0344, 0.0374, 0.0320, 0.0137, 0.1396, 0.0297, 0.0408, 0.0302, 0.0435, 0.4414, 0.0000, 0.0000],
        [0.0825, 0.1226, 0.0464, 0.1426, 0.0396, 0.0708, 0.0167, 0.0525, 0.0113, 0.1338, 0.0732, 0.0513, 0.1338, 0.0233, 0.0000],
        [0.0225, 0.1680, 0.0393, 0.0762, 0.0664, 0.0684, 0.0879, 0.0452, 0.0444, 0.0869, 0.0344, 0.0312, 0.0302, 0.0454, 0.1533]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0114,  0.0427,  0.0117,  ...,  0.0223,  0.0434, -0.0416],
        [-0.0048, -0.0691,  0.0010,  ...,  0.0077, -0.0176,  0.0406],
        [ 0.0184,  0.0159, -0.0496,  ..., -0.0060, -0.0071,  0.0165],
        ...,
        [ 0.0016,  0.0071, -0.0185,  ..., -0.0232, -0.0452,  0.0173],
        [ 0.0005,  0.0206, -0.0333,  ..., -0.0374, -0.0069,  0.0107],
        [-0.0245, -0.0037, -0.0270,  ..., -0.0278, -0.0186, -0.0101]], device='cuda:0', requires_grad=True)
K: tensor([ 1.8750,  0.7383,  0.0276, -1.3516,  1.1719, -0.8984, -0.9375, -0.4180, -0.3730, -1.2109,  1.1250,  0.1143,  0.7734, -1.5938,  1.9453,  0.2715,  0.6758, -0.3574,  0.6758,  0.9570,  0.7578,  1.3828,  0.3105,  0.5234,  1.0625,  0.3828, -2.5938, -1.9766,  2.2656,  0.6992, -0.1943,  0.5273,
         0.2412, -0.0586, -0.7578, -2.0938,  1.0859,  0.9180,  0.6484, -2.1719,  0.4941,  0.0674,  0.5508,  0.6719,  1.8125, -0.0549,  0.5195,  1.0781,  0.3086,  0.4531,  0.6016, -1.5547,  0.7656,  0.4180,  0.4629,  0.4766, -0.4668,  0.1523, -1.8203,  0.1270, -0.5742, -0.0197, -1.0391,  0.6289],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0045, -0.0220, -0.0344,  ...,  0.0350, -0.0135, -0.0172],
        [-0.0311, -0.0420,  0.0174,  ..., -0.0381, -0.0166, -0.0585],
        [ 0.0231,  0.0047, -0.0203,  ...,  0.0531, -0.0077,  0.0208],
        ...,
        [-0.0172,  0.0273,  0.0007,  ...,  0.0084,  0.0126,  0.0052],
        [ 0.0202,  0.0084, -0.0049,  ..., -0.0142,  0.0088,  0.0202],
        [-0.0163,  0.0424, -0.0029,  ...,  0.0008,  0.0008,  0.0130]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.4922,  1.4375, -2.1250,  2.7188, -0.3047, -2.8906, -2.1250, -1.2188,  1.0469,  0.3086,  0.8398,  1.8750, -1.4141, -0.6094,  0.8516, -0.8320,  0.0393,  1.0703,  2.3906,  0.5781, -1.5156, -0.4414, -1.6797,  0.2471,  0.4727,  1.2266, -1.3047,  0.2344, -0.1426, -1.5234,  0.8164, -1.6016,
        -0.5156,  1.3594,  0.4062, -1.6328, -1.9141, -0.5156,  1.2578, -1.2578, -1.4531, -0.6719,  0.1758, -0.2598, -0.0060,  1.3906, -0.2695,  1.4531, -0.6641,  3.6250,  0.9375,  0.6797,  2.1406,  3.0469, -0.6953,  0.7500, -1.2891, -0.0947, -0.3262, -0.1602, -0.2441, -0.7227, -0.2930, -0.6289],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -3.2812,     -3.3906,     -3.0469,     -3.9688,     -4.5938,     -3.5625,     -3.2500,     -5.0625,     -3.1250,     -4.8750,     -2.5625,     -2.2344,     -5.2500,     -2.6562],
        [     0.0000,      1.6406,     -0.0415,      2.4688,      2.5625,     -0.4453,      1.3594,      0.4355,      0.1089,     -1.3984,      0.0869,     -1.2031,      1.7344,     -0.2754,     -1.0781],
        [     0.0000,      1.8047,     -0.3281,      2.5938,      3.4531,      0.5469,      1.1250,      0.0933,      1.0078,     -0.2734,      0.3926,     -0.7812,      2.4531,      0.4199,      0.8633],
        [     0.0000,     -0.1040,     -1.1250,     -0.3496,     -0.3633,     -0.7383,     -2.1562,      0.4297,     -2.3438,     -0.1855,     -2.1406,      0.1953,      1.2500,     -2.9844,      0.2246],
        [     0.0000,      1.7188,      0.2930,      0.3262,      0.9062,     -0.2188,      0.5352,      2.3906,     -0.0182,     -0.3008,     -0.4004,     -0.0864,      0.9961,     -0.8359,      0.2100],
        [     0.0000,     -2.3125,     -1.4609,     -1.3516,     -3.0781,     -3.6562,     -3.0781,     -0.3711,     -3.4219,     -1.4766,     -5.2500,      0.4297,     -0.6445,     -4.8125,     -0.7695],
        [     0.0000,     -1.3047,     -1.2422,     -0.5000,     -2.2188,     -2.8438,     -2.7344,     -0.0718,     -2.6562,     -0.7461,     -2.6562,     -0.0017,      1.1016,     -2.8125,      0.0679],
        [     0.0000,     -0.7305,     -0.7422,      0.2695,     -2.2656,     -1.7109,     -3.0938,     -0.1719,     -3.6719,      0.3613,     -2.1719,      0.2256,      0.4824,     -3.4844,      0.3945],
        [     0.0000,      1.2969,     -0.7500,     -0.0311,     -0.3984,     -1.8750,     -1.3594,      0.8438,      0.0649,     -0.0508,      2.5625,      1.7109,      2.4062,      0.5625,      0.2656],
        [     0.0000,     -0.8867,     -1.7969,     -1.1016,     -1.9062,     -1.6484,     -3.0625,     -0.0869,     -1.4844,     -0.1025,     -1.5312,      1.0469,      0.9102,     -1.5000,      0.2910],
        [     0.0000,      0.9297,     -1.6094,      0.7383,      1.9062,     -0.7422,     -0.6055,      1.0469,      0.5391,     -0.4492,      1.9688,      0.1152,      3.7188,      0.5078,     -0.0005],
        [     0.0000,      1.0547,     -0.2500,      0.0227,      0.1055,     -0.0557,     -0.8984,      1.4219,     -0.1270,      0.1904,     -0.1099,      0.2559,      2.5781,      0.5898,      1.7266],
        [     0.0000,      0.3926,     -0.5781,      0.5430,     -0.7383,     -0.1533,     -1.6016,     -0.4551,     -1.9922,      0.4824,     -0.1226,     -0.4805,      0.4805,     -1.2656,      0.9492],
        [     0.0000,      2.0156,      0.5586,      1.2266,      1.0859,      1.1094,      1.3672,      0.6992,      0.6797,      1.3516,      0.4277,      0.3301,      0.2949,      0.7031,      1.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2148],
        [0.0229],
        [0.0208],
        [0.0473],
        [0.0315],
        [0.0847],
        [0.0330],
        [0.0251],
        [0.0105],
        [0.0269],
        [0.0083],
        [0.0092],
        [0.0112],
        [0.0079]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0437,     0.9570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0525,     0.6992,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.7578,     0.0752,     0.1553,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0076,     0.6758,     0.1377,     0.0522,     0.1289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0242,     0.4375,     0.0991,     0.0369,     0.2178,     0.1846,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0139,     0.4180,     0.0728,     0.0168,     0.0806,     0.0065,     0.3926,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.3516,     0.0135,     0.0305,     0.1235,     0.0154,     0.4043,     0.0601,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0167,     0.1738,     0.0540,     0.0162,     0.0645,     0.0796,     0.2188,     0.2773,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.4219,     0.0300,     0.0149,     0.0679,     0.0233,     0.0981,     0.0845,     0.0850,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.0425,     0.0070,     0.0013,     0.0024,     0.0043,     0.0089,     0.0226,     0.0099,     0.8320,     0.0664,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.2139,     0.0273,     0.0603,     0.1162,     0.0101,     0.1621,     0.1001,     0.1631,     0.0298,     0.0845,     0.0273,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.2100,     0.0065,     0.0046,     0.0674,     0.0052,     0.1465,     0.0184,     0.2617,     0.0254,     0.0369,     0.0378,     0.1748,     0.0000,     0.0000],
        [    0.0015,     0.0298,     0.0053,     0.0010,     0.0074,     0.0095,     0.0157,     0.0197,     0.0150,     0.7070,     0.0272,     0.0229,     0.1157,     0.0214,     0.0000],
        [    0.0006,     0.4941,     0.0204,     0.0270,     0.1406,     0.0208,     0.1611,     0.0310,     0.0349,     0.0093,     0.0145,     0.0048,     0.0054,     0.0186,     0.0161]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0266,  0.0274, -0.0130,  ..., -0.0267,  0.0083, -0.0399],
        [ 0.0374,  0.0127,  0.0461,  ..., -0.0720, -0.0240,  0.0063],
        [-0.0077, -0.0060,  0.0326,  ...,  0.0385,  0.0017, -0.0319],
        ...,
        [-0.0012,  0.0038, -0.0120,  ..., -0.0250, -0.0278,  0.0022],
        [ 0.0227, -0.0274,  0.0454,  ...,  0.0184, -0.0408,  0.0092],
        [-0.0359,  0.0374,  0.0020,  ..., -0.0164,  0.0009,  0.0090]], device='cuda:0', requires_grad=True)
K: tensor([ 0.3984, -0.5195,  1.8594,  1.2031, -0.9531, -0.0552, -0.9922,  2.1719, -1.4297,  0.7109,  0.0166,  0.1079,  1.4375,  0.3438,  0.8555, -0.7031, -0.0410, -1.1875, -1.1094, -0.9688, -2.6250, -1.1719, -0.6250,  1.0859,  0.7539, -1.9375, -1.1875, -1.0547,  0.4434, -0.5664,  1.9609, -0.6719,
        -0.7773,  1.6641,  3.1562, -0.4883,  0.6719,  0.2246,  1.8359,  0.5391, -0.8633, -1.1250,  0.6445,  0.4551,  0.3691,  0.4980,  1.2422,  1.1328, -0.7891,  0.3125,  1.2188,  0.8320, -1.4844, -1.5391,  0.1982,  0.8477, -0.7852, -2.6562, -0.9922, -1.9688,  1.1172,  0.2393,  0.7812,  0.2490],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0029,  0.0342, -0.0169,  ...,  0.0036,  0.0008,  0.0240],
        [-0.0069, -0.0236,  0.0291,  ..., -0.0102, -0.0073,  0.0120],
        [-0.0069,  0.0604, -0.0182,  ...,  0.0248,  0.0051,  0.0098],
        ...,
        [ 0.0033,  0.0305, -0.0082,  ...,  0.0073,  0.0183,  0.0130],
        [ 0.0154,  0.0201, -0.0035,  ...,  0.0231, -0.0299,  0.0349],
        [ 0.0396,  0.0363, -0.0313,  ...,  0.0175,  0.0131, -0.0289]], device='cuda:0', requires_grad=True)
Q: tensor([     0.4453,      0.6328,      1.0703,      1.5938,     -0.9336,      0.2002,     -0.4004,      1.3516,     -0.4590,     -2.4062,     -2.4062,     -0.3438,      0.0236,     -0.5742,     -0.9258,     -1.0312,     -1.6094,      0.0036,     -0.6797,      0.1738,     -1.2109,     -1.6719,
             0.4473,     -0.0513,      0.2129,     -0.1226,      0.4121,     -0.5312,      0.3516,     -0.9766,      4.4062,      1.2266,      0.1885,      1.0234,     -0.9844,     -0.1934,      1.2031,      0.8086,      1.1719,      2.3125,     -1.7734,     -0.4766,      0.0232,     -0.2139,
             1.8516,     -0.2559,      1.0391,     -0.0342,      0.4863,     -0.6680,     -0.6094,      0.2598,      0.0020,     -0.5078,     -0.0103,      0.2676,     -0.7266,      0.6289,     -0.4219,      0.2373,     -0.9258,      2.0469,      0.0364,      2.2344], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  3.0781, -0.1729, -0.8789,  2.1406, -0.4453,  1.5781,  0.0566,  0.9531, -0.6094, -1.6484, -1.3047, -0.8398,  0.4941, -0.1904],
        [ 0.0000,  2.5938,  1.5625,  2.5156,  2.5000,  1.2031,  2.6562,  1.7266,  2.5312,  0.8516,  1.0859,  0.3652,  0.5586,  1.3750,  0.7969],
        [ 0.0000,  4.1250,  1.8125,  2.5312,  3.6406,  0.8711,  3.1719,  1.4297,  3.5000,  0.4707,  1.0234, -0.3809,  1.1328,  2.3438,  1.2344],
        [ 0.0000,  4.4688,  2.8906,  1.9219,  2.8281,  3.1406,  3.9062,  2.9219,  1.5938,  2.2969, -0.5195,  2.0156,  1.2969, -0.0190,  2.7656],
        [ 0.0000,  2.8906,  1.4141,  0.4199,  2.2031,  2.0312,  4.1875,  1.2734,  2.0781,  0.8633, -0.1299,  0.0452,  0.1982,  1.2031,  2.6875],
        [ 0.0000,  3.4062,  1.6562,  0.1982,  1.7578, -0.7500,  3.3438,  1.7969,  1.1953,  0.7344, -1.3438,  0.8945, -0.0508,  0.1621,  1.5781],
        [ 0.0000,  6.9688,  3.7188,  4.5312,  5.9375,  3.8594,  7.1250,  5.2188,  7.5625,  3.8906,  4.1562,  3.0156,  4.2812,  5.7188,  3.5156],
        [ 0.0000,  2.3438,  1.1719, -0.0281,  1.3516,  1.5625,  2.5781,  2.8125,  1.7812,  4.5312,  1.7578,  1.5781,  3.3125,  1.3281,  4.2188],
        [ 0.0000,  4.5000,  1.8672,  1.1641,  2.6875,  1.6094,  3.0469,  2.8906,  2.9062,  3.5938,  5.1562,  2.3906,  3.5469,  1.9922,  2.1719],
        [ 0.0000,  2.7656,  0.9570, -0.7266, -0.1152,  0.4629,  1.1875,  2.1250,  1.3047,  5.7188,  3.2031,  4.2188,  3.2500,  1.1094,  3.7188],
        [ 0.0000,  3.8438,  1.7891,  2.5781,  3.2344,  0.7930,  3.5625,  3.0938,  3.5781,  1.8750,  2.9219,  1.7891,  3.2656,  2.8281,  1.5938],
        [ 0.0000,  4.0625,  0.5742,  0.2275,  2.9219,  0.3633,  3.6875,  1.6172,  4.2812,  1.9453,  2.3125,  2.3438,  3.8750,  4.8750,  3.2812],
        [ 0.0000,  2.9531,  1.2344, -0.4727,  1.5703,  1.8125,  2.3125,  2.5469,  2.2656,  6.1250,  2.8750,  2.6875,  4.3125,  2.6250,  5.7500],
        [ 0.0000,  6.7500,  3.5625,  3.8281,  5.5000,  3.5781,  5.6250,  3.9688,  4.0938,  2.7656,  3.2188,  2.1094,  2.2344,  3.4688,  3.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2360],
        [0.0361],
        [0.0176],
        [0.0842],
        [0.0412],
        [0.0554],
        [0.0059],
        [0.0066],
        [0.0091],
        [0.0101],
        [0.0058],
        [0.0057],
        [0.0032],
        [0.0050]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1025 a:0.1484,:0.3066 white:0.0618atoes:0.4668 are:0.3418 a:0.0654ich:0.1641)
ich
------
		( a:0.1484,:0.3066 white:0.0618atoes:0.4668 are:0.3418 a:0.0654ich:0.1641thy:0.1582)
thy greens, and they are a great source of vitamin D.
The
@ 4550 train 4.3336 , allloss: 4.3342, dt: 1744.95ms, fracRes: 0.3746, norm(attn): 0.2334, norm(output): 0.6602, norm(x): 0.5249, norm(y): 1.0156, norm:1.2900, tok/sec: 75114.91, flops:78.83, batch-reuse:1
@ 4551 train 4.2299 , allloss: 4.2304, dt: 1322.68ms, fracRes: 0.3752, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5262, norm(y): 1.0156, norm:1.2385, tok/sec: 99095.65, flops:104.00, batch-reuse:1
@ 4552 train 4.3726 , allloss: 4.3735, dt: 1300.51ms, fracRes: 0.3757, norm(attn): 0.2324, norm(output): 0.6680, norm(x): 0.5267, norm(y): 1.0156, norm:1.1004, tok/sec: 100785.27, flops:105.78, batch-reuse:1
@ 4553 train 4.2213 , allloss: 4.2228, dt: 1279.36ms, fracRes: 0.3755, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5227, norm(y): 1.0156, norm:1.1617, tok/sec: 102451.05, flops:107.52, batch-reuse:1
@ 4554 train 4.4266 , allloss: 4.4274, dt: 1292.85ms, fracRes: 0.3746, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5220, norm(y): 1.0156, norm:1.1300, tok/sec: 101382.46, flops:106.40, batch-reuse:1
@ 4555 train 4.2823 , allloss: 4.2832, dt: 1305.65ms, fracRes: 0.3725, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5248, norm(y): 1.0155, norm:1.3045, tok/sec: 100388.04, flops:105.36, batch-reuse:1
@ 4556 train 4.3605 , allloss: 4.3611, dt: 1317.57ms, fracRes: 0.3728, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5266, norm(y): 1.0155, norm:1.1253, tok/sec: 99479.73, flops:104.41, batch-reuse:1
@ 4557 train 4.2294 , allloss: 4.2312, dt: 1344.15ms, fracRes: 0.3747, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5239, norm(y): 1.0157, norm:1.4429, tok/sec: 97512.99, flops:102.34, batch-reuse:1
@ 4558 train 4.2406 , allloss: 4.2415, dt: 1336.48ms, fracRes: 0.3743, norm(attn): 0.2354, norm(output): 0.6641, norm(x): 0.5219, norm(y): 1.0156, norm:1.1278, tok/sec: 98072.89, flops:102.93, batch-reuse:1
@ 4559 train 4.3172 , allloss: 4.3183, dt: 1315.07ms, fracRes: 0.3745, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5248, norm(y): 1.0155, norm:1.3660, tok/sec: 99669.01, flops:104.60, batch-reuse:1
@ 4560 train 4.3044 , allloss: 4.3054, dt: 1302.24ms, fracRes: 0.3750, norm(attn): 0.2363, norm(output): 0.6641, norm(x): 0.5239, norm(y): 1.0155, norm:1.1538, tok/sec: 100650.90, flops:105.63, batch-reuse:1
@ 4561 train 4.4170 , allloss: 4.4185, dt: 1328.35ms, fracRes: 0.3753, norm(attn): 0.2334, norm(output): 0.6641, norm(x): 0.5220, norm(y): 1.0156, norm:1.1920, tok/sec: 98672.98, flops:103.56, batch-reuse:1
@ 4562 train 4.3678 , allloss: 4.3720, dt: 1309.99ms, fracRes: 0.3758, norm(attn): 0.2344, norm(output): 0.6641, norm(x): 0.5219, norm(y): 1.0156, norm:1.1743, tok/sec: 100055.39, flops:105.01, batch-reuse:1
@ 4563 train 4.3011 , allloss: 4.3019, dt: 1353.37ms, fracRes: 0.3745, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5254, norm(y): 1.0156, norm:1.2928, tok/sec: 96848.70, flops:101.64, batch-reuse:1
@ 4564 train 4.3110 , allloss: 4.3129, dt: 1334.67ms, fracRes: 0.3738, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5284, norm(y): 1.0156, norm:1.2029, tok/sec: 98205.28, flops:103.07, batch-reuse:1
@ 4565 train 4.2923 , allloss: 4.2931, dt: 1318.48ms, fracRes: 0.3742, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5300, norm(y): 1.0156, norm:1.2307, tok/sec: 99411.14, flops:104.33, batch-reuse:1
@ 4566 train 4.2762 , allloss: 4.2774, dt: 1306.70ms, fracRes: 0.3745, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5254, norm(y): 1.0156, norm:1.1317, tok/sec: 100307.92, flops:105.28, batch-reuse:1
@ 4567 train 4.2998 , allloss: 4.3014, dt: 1305.76ms, fracRes: 0.3757, norm(attn): 0.2314, norm(output): 0.6680, norm(x): 0.5284, norm(y): 1.0156, norm:1.1809, tok/sec: 100379.95, flops:105.35, batch-reuse:1
@ 4568 train 4.2818 , allloss: 4.2835, dt: 1326.19ms, fracRes: 0.3757, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5275, norm(y): 1.0156, norm:1.1789, tok/sec: 98833.47, flops:103.73, batch-reuse:1
@ 4569 train 4.2559 , allloss: 4.2574, dt: 1318.57ms, fracRes: 0.3767, norm(attn): 0.2314, norm(output): 0.6719, norm(x): 0.5250, norm(y): 1.0157, norm:1.0964, tok/sec: 99404.99, flops:104.33, batch-reuse:1
@ 4570 train 4.2428 , allloss: 4.2438, dt: 1285.48ms, fracRes: 0.3760, norm(attn): 0.2334, norm(output): 0.6719, norm(x): 0.5252, norm(y): 1.0157, norm:1.2659, tok/sec: 101963.33, flops:107.01, batch-reuse:1
@ 4571 train 4.3868 , allloss: 4.3882, dt: 1314.60ms, fracRes: 0.3753, norm(attn): 0.2324, norm(output): 0.6758, norm(x): 0.5260, norm(y): 1.0156, norm:1.0761, tok/sec: 99705.20, flops:104.64, batch-reuse:1
@ 4572 train 4.2700 , allloss: 4.2708, dt: 1306.46ms, fracRes: 0.3769, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5246, norm(y): 1.0156, norm:1.3209, tok/sec: 100325.69, flops:105.29, batch-reuse:1
@ 4573 train 4.2826 , allloss: 4.2836, dt: 1334.12ms, fracRes: 0.3751, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5241, norm(y): 1.0155, norm:1.2612, tok/sec: 98246.37, flops:103.11, batch-reuse:1
@ 4574 train 4.2567 , allloss: 4.2576, dt: 1320.19ms, fracRes: 0.3770, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5283, norm(y): 1.0157, norm:1.3329, tok/sec: 99282.84, flops:104.20, batch-reuse:1
@ 4575 train 4.2994 , allloss: 4.3002, dt: 1290.41ms, fracRes: 0.3736, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5278, norm(y): 1.0156, norm:1.2894, tok/sec: 101574.12, flops:106.60, batch-reuse:1
@ 4576 train 4.2886 , allloss: 4.2912, dt: 1289.38ms, fracRes: 0.3734, norm(attn): 0.2354, norm(output): 0.6758, norm(x): 0.5254, norm(y): 1.0157, norm:1.1193, tok/sec: 101654.73, flops:106.69, batch-reuse:1
@ 4577 train 4.2448 , allloss: 4.2456, dt: 1589.22ms, fracRes: 0.3749, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5274, norm(y): 1.0158, norm:1.3200, tok/sec: 82475.91, flops:86.56, batch-reuse:1
@ 4578 train 4.2528 , allloss: 4.2539, dt: 1344.19ms, fracRes: 0.3729, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5276, norm(y): 1.0156, norm:1.1929, tok/sec: 97510.22, flops:102.34, batch-reuse:1
@ 4579 train 4.2353 , allloss: 4.2364, dt: 1338.42ms, fracRes: 0.3734, norm(attn): 0.2354, norm(output): 0.6719, norm(x): 0.5285, norm(y): 1.0155, norm:1.1126, tok/sec: 97930.70, flops:102.78, batch-reuse:1
@ 4580 train 4.4113 , allloss: 4.4120, dt: 1319.37ms, fracRes: 0.3757, norm(attn): 0.2324, norm(output): 0.6758, norm(x): 0.5274, norm(y): 1.0156, norm:1.2659, tok/sec: 99344.09, flops:104.26, batch-reuse:1
@ 4581 train 4.2182 , allloss: 4.2191, dt: 1311.58ms, fracRes: 0.3775, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5303, norm(y): 1.0158, norm:1.2481, tok/sec: 99934.33, flops:104.88, batch-reuse:1
@ 4582 train 4.1874 , allloss: 4.1886, dt: 1336.46ms, fracRes: 0.3785, norm(attn): 0.2324, norm(output): 0.6836, norm(x): 0.5299, norm(y): 1.0158, norm:1.1814, tok/sec: 98074.13, flops:102.93, batch-reuse:1
@ 4583 train 4.3190 , allloss: 4.3197, dt: 1308.54ms, fracRes: 0.3783, norm(attn): 0.2305, norm(output): 0.6797, norm(x): 0.5270, norm(y): 1.0157, norm:1.1965, tok/sec: 100166.85, flops:105.13, batch-reuse:1
@ 4584 train 4.3440 , allloss: 4.3448, dt: 1309.89ms, fracRes: 0.3783, norm(attn): 0.2314, norm(output): 0.6758, norm(x): 0.5281, norm(y): 1.0156, norm:1.1698, tok/sec: 100063.25, flops:105.02, batch-reuse:1
@ 4585 train 4.0961 , allloss: 4.0966, dt: 1316.64ms, fracRes: 0.3787, norm(attn): 0.2324, norm(output): 0.6719, norm(x): 0.5253, norm(y): 1.0156, norm:1.1258, tok/sec: 99550.67, flops:104.48, batch-reuse:1
@ 4586 train 4.1570 , allloss: 4.1577, dt: 1283.21ms, fracRes: 0.3783, norm(attn): 0.2314, norm(output): 0.6680, norm(x): 0.5251, norm(y): 1.0157, norm:1.2373, tok/sec: 102143.76, flops:107.20, batch-reuse:1
@ 4587 train 4.1636 , allloss: 4.1645, dt: 1275.74ms, fracRes: 0.3753, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5277, norm(y): 1.0156, norm:1.2318, tok/sec: 102742.25, flops:107.83, batch-reuse:1
@ 4588 train 4.1827 , allloss: 4.1835, dt: 1297.94ms, fracRes: 0.3752, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5274, norm(y): 1.0156, norm:1.0855, tok/sec: 100984.97, flops:105.99, batch-reuse:1
@ 4589 train 4.1299 , allloss: 4.1306, dt: 1307.57ms, fracRes: 0.3754, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5245, norm(y): 1.0156, norm:1.2424, tok/sec: 100241.20, flops:105.21, batch-reuse:1
@ 4590 train 4.0864 , allloss: 4.0872, dt: 1307.39ms, fracRes: 0.3745, norm(attn): 0.2354, norm(output): 0.6719, norm(x): 0.5254, norm(y): 1.0156, norm:1.0462, tok/sec: 100254.82, flops:105.22, batch-reuse:1
@ 4591 train 4.1403 , allloss: 4.1415, dt: 1337.64ms, fracRes: 0.3755, norm(attn): 0.2344, norm(output): 0.6719, norm(x): 0.5278, norm(y): 1.0157, norm:1.1443, tok/sec: 97987.44, flops:102.84, batch-reuse:1
@ 4592 train 4.2894 , allloss: 4.2918, dt: 1302.47ms, fracRes: 0.3758, norm(attn): 0.2314, norm(output): 0.6797, norm(x): 0.5292, norm(y): 1.0157, norm:1.2186, tok/sec: 100633.34, flops:105.62, batch-reuse:1
@ 4593 train 4.1095 , allloss: 4.1100, dt: 1313.21ms, fracRes: 0.3766, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5287, norm(y): 1.0157, norm:1.2169, tok/sec: 99810.35, flops:104.75, batch-reuse:1
@ 4594 train 4.2401 , allloss: 4.2406, dt: 1324.52ms, fracRes: 0.3759, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5260, norm(y): 1.0156, norm:1.0670, tok/sec: 98957.94, flops:103.86, batch-reuse:1
@ 4595 train 4.1706 , allloss: 4.1715, dt: 1312.76ms, fracRes: 0.3757, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5303, norm(y): 1.0155, norm:1.0629, tok/sec: 99844.81, flops:104.79, batch-reuse:1
@ 4596 train 4.2217 , allloss: 4.2234, dt: 1320.04ms, fracRes: 0.3763, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5308, norm(y): 1.0156, norm:1.1945, tok/sec: 99293.75, flops:104.21, batch-reuse:1
@ 4597 train 4.1838 , allloss: 4.1849, dt: 1285.22ms, fracRes: 0.3762, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5274, norm(y): 1.0156, norm:1.1308, tok/sec: 101983.76, flops:107.03, batch-reuse:1
@ 4598 train 4.1280 , allloss: 4.1287, dt: 1292.42ms, fracRes: 0.3765, norm(attn): 0.2344, norm(output): 0.6719, norm(x): 0.5294, norm(y): 1.0157, norm:1.2522, tok/sec: 101416.11, flops:106.44, batch-reuse:1
@ 4599 train 4.1799 , allloss: 4.1807, dt: 1283.21ms, fracRes: 0.3757, norm(attn): 0.2344, norm(output): 0.6719, norm(x): 0.5268, norm(y): 1.0157, norm:1.0694, tok/sec: 102143.90, flops:107.20, batch-reuse:1
@ 4600 train 4.1393 , allloss: 4.1403, dt: 1316.08ms, fracRes: 0.3750, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5280, norm(y): 1.0157, norm:1.2063, tok/sec: 99592.49, flops:104.52, batch-reuse:1
@ 4601 train 4.1646 , allloss: 4.1664, dt: 1322.16ms, fracRes: 0.3761, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5270, norm(y): 1.0157, norm:1.1129, tok/sec: 99135.02, flops:104.04, batch-reuse:1
@ 4602 train 4.0563 , allloss: 4.0576, dt: 1326.73ms, fracRes: 0.3745, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5287, norm(y): 1.0156, norm:1.2648, tok/sec: 98793.41, flops:103.69, batch-reuse:1
@ 4603 train 4.0697 , allloss: 4.0708, dt: 1324.79ms, fracRes: 0.3740, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5269, norm(y): 1.0156, norm:1.1001, tok/sec: 98937.77, flops:103.84, batch-reuse:1
@ 4604 train 4.1912 , allloss: 4.1922, dt: 1308.90ms, fracRes: 0.3741, norm(attn): 0.2344, norm(output): 0.6719, norm(x): 0.5276, norm(y): 1.0156, norm:1.0314, tok/sec: 100139.09, flops:105.10, batch-reuse:1
@ 4605 train 4.2036 , allloss: 4.2044, dt: 1302.80ms, fracRes: 0.3752, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5305, norm(y): 1.0156, norm:1.0786, tok/sec: 100607.56, flops:105.59, batch-reuse:1
@ 4606 train 4.1443 , allloss: 4.1453, dt: 1317.92ms, fracRes: 0.3745, norm(attn): 0.2354, norm(output): 0.6758, norm(x): 0.5289, norm(y): 1.0156, norm:1.1516, tok/sec: 99453.35, flops:104.38, batch-reuse:1
@ 4607 train 4.3399 , allloss: 4.3407, dt: 1326.49ms, fracRes: 0.3748, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5306, norm(y): 1.0157, norm:1.1844, tok/sec: 98811.01, flops:103.70, batch-reuse:1
@ 4608 train 4.1029 , allloss: 4.1038, dt: 1298.11ms, fracRes: 0.3751, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5254, norm(y): 1.0157, norm:1.1564, tok/sec: 100971.08, flops:105.97, batch-reuse:1
@ 4609 train 4.0719 , allloss: 4.0751, dt: 1303.35ms, fracRes: 0.3743, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5272, norm(y): 1.0156, norm:1.1135, tok/sec: 100565.41, flops:105.55, batch-reuse:1
@ 4610 train 4.1516 , allloss: 4.1538, dt: 1312.04ms, fracRes: 0.3747, norm(attn): 0.2354, norm(output): 0.6719, norm(x): 0.5296, norm(y): 1.0156, norm:1.1545, tok/sec: 99899.17, flops:104.85, batch-reuse:1
@ 4611 train 4.1323 , allloss: 4.1329, dt: 1304.18ms, fracRes: 0.3749, norm(attn): 0.2373, norm(output): 0.6680, norm(x): 0.5272, norm(y): 1.0156, norm:1.0786, tok/sec: 100501.43, flops:105.48, batch-reuse:1
@ 4612 train 4.1486 , allloss: 4.1500, dt: 1324.43ms, fracRes: 0.3765, norm(attn): 0.2354, norm(output): 0.6758, norm(x): 0.5311, norm(y): 1.0158, norm:1.2046, tok/sec: 98964.96, flops:103.87, batch-reuse:1
@ 4613 train 4.1075 , allloss: 4.1085, dt: 1308.25ms, fracRes: 0.3738, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5316, norm(y): 1.0156, norm:1.3730, tok/sec: 100188.93, flops:105.15, batch-reuse:1
@ 4614 train 4.1365 , allloss: 4.1371, dt: 1286.96ms, fracRes: 0.3746, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5318, norm(y): 1.0156, norm:1.2010, tok/sec: 101846.54, flops:106.89, batch-reuse:1
@ 4615 train 4.1653 , allloss: 4.1680, dt: 1296.67ms, fracRes: 0.3761, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5266, norm(y): 1.0157, norm:1.2238, tok/sec: 101083.38, flops:106.09, batch-reuse:1
@ 4616 train 4.1750 , allloss: 4.1760, dt: 1320.21ms, fracRes: 0.3774, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5230, norm(y): 1.0157, norm:1.1000, tok/sec: 99281.00, flops:104.20, batch-reuse:1
@ 4617 train 4.2102 , allloss: 4.2117, dt: 1290.75ms, fracRes: 0.3778, norm(attn): 0.2334, norm(output): 0.6719, norm(x): 0.5275, norm(y): 1.0157, norm:0.9822, tok/sec: 101546.99, flops:106.58, batch-reuse:1
@ 4618 train 4.1206 , allloss: 4.1217, dt: 1309.57ms, fracRes: 0.3773, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5300, norm(y): 1.0157, norm:1.1871, tok/sec: 100087.61, flops:105.04, batch-reuse:1
@ 4619 train 4.1670 , allloss: 4.1676, dt: 1314.57ms, fracRes: 0.3785, norm(attn): 0.2324, norm(output): 0.6836, norm(x): 0.5314, norm(y): 1.0158, norm:1.2719, tok/sec: 99707.02, flops:104.64, batch-reuse:1
@ 4620 train 4.1923 , allloss: 4.1931, dt: 1315.58ms, fracRes: 0.3777, norm(attn): 0.2324, norm(output): 0.6797, norm(x): 0.5293, norm(y): 1.0158, norm:1.1696, tok/sec: 99630.93, flops:104.56, batch-reuse:1
@ 4621 train 4.0812 , allloss: 4.0819, dt: 1317.93ms, fracRes: 0.3762, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5300, norm(y): 1.0157, norm:1.2135, tok/sec: 99453.15, flops:104.38, batch-reuse:1
@ 4622 train 4.1322 , allloss: 4.1332, dt: 1307.41ms, fracRes: 0.3743, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5302, norm(y): 1.0156, norm:0.9962, tok/sec: 100253.21, flops:105.22, batch-reuse:1
@ 4623 train 4.1678 , allloss: 4.1705, dt: 1302.49ms, fracRes: 0.3750, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5290, norm(y): 1.0157, norm:1.2840, tok/sec: 100631.92, flops:105.62, batch-reuse:1
@ 4624 train 4.1177 , allloss: 4.1195, dt: 1332.10ms, fracRes: 0.3763, norm(attn): 0.2363, norm(output): 0.6680, norm(x): 0.5255, norm(y): 1.0158, norm:0.9310, tok/sec: 98394.92, flops:103.27, batch-reuse:1
@ 4625 train 4.1128 , allloss: 4.1137, dt: 1317.64ms, fracRes: 0.3760, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5269, norm(y): 1.0158, norm:1.3401, tok/sec: 99474.54, flops:104.40, batch-reuse:1
@ 4626 train 4.1106 , allloss: 4.1114, dt: 1279.43ms, fracRes: 0.3761, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5285, norm(y): 1.0157, norm:1.1691, tok/sec: 102445.89, flops:107.52, batch-reuse:1
@ 4627 train 4.2163 , allloss: 4.2173, dt: 1299.79ms, fracRes: 0.3775, norm(attn): 0.2354, norm(output): 0.6758, norm(x): 0.5270, norm(y): 1.0157, norm:1.0783, tok/sec: 100841.06, flops:105.83, batch-reuse:1
@ 4628 train 3.9879 , allloss: 3.9886, dt: 1294.26ms, fracRes: 0.3774, norm(attn): 0.2402, norm(output): 0.6641, norm(x): 0.5216, norm(y): 1.0156, norm:1.5090, tok/sec: 101271.49, flops:106.29, batch-reuse:1
@ 4629 train 4.2611 , allloss: 4.2619, dt: 1313.70ms, fracRes: 0.3787, norm(attn): 0.2344, norm(output): 0.6719, norm(x): 0.5304, norm(y): 1.0156, norm:1.3403, tok/sec: 99773.43, flops:104.71, batch-reuse:1
@ 4630 train 4.1991 , allloss: 4.2001, dt: 1333.91ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6680, norm(x): 0.5297, norm(y): 1.0155, norm:1.1956, tok/sec: 98261.52, flops:103.13, batch-reuse:1
@ 4631 train 4.3013 , allloss: 4.3023, dt: 1320.20ms, fracRes: 0.3777, norm(attn): 0.2334, norm(output): 0.6758, norm(x): 0.5293, norm(y): 1.0156, norm:1.2565, tok/sec: 99281.57, flops:104.20, batch-reuse:1
@ 4632 train 4.3526 , allloss: 4.3553, dt: 1319.56ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5299, norm(y): 1.0157, norm:1.2496, tok/sec: 99330.29, flops:104.25, batch-reuse:1
@ 4633 train 4.2752 , allloss: 4.2771, dt: 1306.17ms, fracRes: 0.3768, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5328, norm(y): 1.0157, norm:1.2579, tok/sec: 100348.55, flops:105.32, batch-reuse:1
@ 4634 train 4.3070 , allloss: 4.3085, dt: 1311.09ms, fracRes: 0.3761, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5335, norm(y): 1.0157, norm:1.0426, tok/sec: 99971.69, flops:104.92, batch-reuse:1
@ 4635 train 4.3017 , allloss: 4.3024, dt: 1326.32ms, fracRes: 0.3746, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5300, norm(y): 1.0156, norm:1.1839, tok/sec: 98823.55, flops:103.72, batch-reuse:1
@ 4636 train 4.2565 , allloss: 4.2575, dt: 1320.21ms, fracRes: 0.3742, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5325, norm(y): 1.0157, norm:1.1589, tok/sec: 99281.43, flops:104.20, batch-reuse:1
@ 4637 train 4.1495 , allloss: 4.1502, dt: 1284.81ms, fracRes: 0.3739, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5326, norm(y): 1.0157, norm:1.0735, tok/sec: 102016.88, flops:107.07, batch-reuse:1
@ 4638 train 4.2877 , allloss: 4.2883, dt: 1306.65ms, fracRes: 0.3736, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5338, norm(y): 1.0157, norm:1.0351, tok/sec: 100311.34, flops:105.28, batch-reuse:1
@ 4639 train 4.3084 , allloss: 4.3091, dt: 1309.12ms, fracRes: 0.3743, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5322, norm(y): 1.0157, norm:1.1448, tok/sec: 100122.39, flops:105.08, batch-reuse:1
@ 4640 train 4.2967 , allloss: 4.2977, dt: 1314.44ms, fracRes: 0.3742, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5328, norm(y): 1.0157, norm:1.0808, tok/sec: 99716.92, flops:104.65, batch-reuse:1
@ 4641 train 4.2855 , allloss: 4.2863, dt: 1295.48ms, fracRes: 0.3750, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5311, norm(y): 1.0157, norm:0.9987, tok/sec: 101176.47, flops:106.19, batch-reuse:1
@ 4642 train 4.2711 , allloss: 4.2717, dt: 1303.90ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5329, norm(y): 1.0158, norm:1.3524, tok/sec: 100523.23, flops:105.50, batch-reuse:1
@ 4643 train 4.4202 , allloss: 4.4210, dt: 1311.77ms, fracRes: 0.3792, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5369, norm(y): 1.0158, norm:1.3813, tok/sec: 99919.74, flops:104.87, batch-reuse:1
@ 4644 train 4.3132 , allloss: 4.3140, dt: 1290.64ms, fracRes: 0.3774, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5358, norm(y): 1.0157, norm:1.3514, tok/sec: 101555.68, flops:106.58, batch-reuse:1
@ 4645 train 4.3385 , allloss: 4.3400, dt: 1317.26ms, fracRes: 0.3751, norm(attn): 0.2383, norm(output): 0.6797, norm(x): 0.5357, norm(y): 1.0156, norm:1.4283, tok/sec: 99503.30, flops:104.43, batch-reuse:1
@ 4646 train 4.3608 , allloss: 4.3617, dt: 1343.35ms, fracRes: 0.3763, norm(attn): 0.2373, norm(output): 0.6758, norm(x): 0.5321, norm(y): 1.0157, norm:1.3022, tok/sec: 97571.21, flops:102.40, batch-reuse:1
@ 4647 train 4.3284 , allloss: 4.3302, dt: 1346.28ms, fracRes: 0.3759, norm(attn): 0.2344, norm(output): 0.6758, norm(x): 0.5310, norm(y): 1.0157, norm:1.2496, tok/sec: 97358.55, flops:102.18, batch-reuse:1
@ 4648 train 4.3345 , allloss: 4.3360, dt: 1344.84ms, fracRes: 0.3744, norm(attn): 0.2383, norm(output): 0.6758, norm(x): 0.5349, norm(y): 1.0156, norm:1.0847, tok/sec: 97462.91, flops:102.29, batch-reuse:1
@ 4649 train 4.3158 , allloss: 4.3167, dt: 1283.31ms, fracRes: 0.3742, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5323, norm(y): 1.0157, norm:1.3432, tok/sec: 102135.96, flops:107.19, batch-reuse:1
@ 4650 train 4.2208 , allloss: 4.2212, dt: 1272.74ms, fracRes: 0.3750, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5320, norm(y): 1.0159, norm:1.0921, tok/sec: 102984.24, flops:108.08, batch-reuse:1
@ 4651 train 4.3070 , allloss: 4.3078, dt: 1306.68ms, fracRes: 0.3751, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5368, norm(y): 1.0158, norm:1.1988, tok/sec: 100309.07, flops:105.28, batch-reuse:1
@ 4652 train 4.3287 , allloss: 4.3299, dt: 1315.68ms, fracRes: 0.3752, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5363, norm(y): 1.0157, norm:1.1167, tok/sec: 99623.26, flops:104.56, batch-reuse:1
@ 4653 train 4.3381 , allloss: 4.3390, dt: 1296.36ms, fracRes: 0.3770, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5346, norm(y): 1.0157, norm:1.1997, tok/sec: 101107.64, flops:106.11, batch-reuse:1
@ 4654 train 4.3271 , allloss: 4.3279, dt: 1285.52ms, fracRes: 0.3761, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5340, norm(y): 1.0157, norm:1.2238, tok/sec: 101960.48, flops:107.01, batch-reuse:1
@ 4655 train 4.3156 , allloss: 4.3164, dt: 1301.06ms, fracRes: 0.3766, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5335, norm(y): 1.0157, norm:1.0971, tok/sec: 100742.79, flops:105.73, batch-reuse:1
@ 4656 train 4.2323 , allloss: 4.2330, dt: 1309.77ms, fracRes: 0.3778, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5322, norm(y): 1.0158, norm:1.2003, tok/sec: 100072.27, flops:105.03, batch-reuse:1
@ 4657 train 4.2603 , allloss: 4.2615, dt: 1341.24ms, fracRes: 0.3767, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5316, norm(y): 1.0157, norm:1.1746, tok/sec: 97724.38, flops:102.56, batch-reuse:1
@ 4658 train 4.3905 , allloss: 4.3914, dt: 1340.46ms, fracRes: 0.3769, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5317, norm(y): 1.0157, norm:1.1169, tok/sec: 97781.37, flops:102.62, batch-reuse:1
@ 4659 train 4.3020 , allloss: 4.3035, dt: 1329.64ms, fracRes: 0.3772, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5352, norm(y): 1.0157, norm:1.2018, tok/sec: 98576.85, flops:103.46, batch-reuse:1
@ 4660 train 4.2344 , allloss: 4.2354, dt: 1281.58ms, fracRes: 0.3750, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5350, norm(y): 1.0157, norm:1.0762, tok/sec: 102273.38, flops:107.34, batch-reuse:1
@ 4661 train 4.2565 , allloss: 4.2572, dt: 1309.83ms, fracRes: 0.3753, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5333, norm(y): 1.0158, norm:1.3807, tok/sec: 100067.57, flops:105.02, batch-reuse:1
@ 4662 train 4.3304 , allloss: 4.3312, dt: 1338.09ms, fracRes: 0.3751, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5333, norm(y): 1.0158, norm:1.1718, tok/sec: 97954.74, flops:102.81, batch-reuse:1
@ 4663 train 4.2839 , allloss: 4.2848, dt: 1324.37ms, fracRes: 0.3762, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5315, norm(y): 1.0158, norm:1.2225, tok/sec: 98969.06, flops:103.87, batch-reuse:1
@ 4664 train 4.1980 , allloss: 4.1989, dt: 1313.26ms, fracRes: 0.3763, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5331, norm(y): 1.0157, norm:1.2988, tok/sec: 99806.22, flops:104.75, batch-reuse:1
@ 4665 train 4.3198 , allloss: 4.3219, dt: 1348.36ms, fracRes: 0.3771, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5331, norm(y): 1.0157, norm:1.0701, tok/sec: 97208.68, flops:102.02, batch-reuse:1
@ 4666 train 4.2416 , allloss: 4.2423, dt: 1313.11ms, fracRes: 0.3792, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5296, norm(y): 1.0159, norm:1.1992, tok/sec: 99817.85, flops:104.76, batch-reuse:1
@ 4667 train 4.3445 , allloss: 4.3459, dt: 1341.77ms, fracRes: 0.3788, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5295, norm(y): 1.0159, norm:1.1446, tok/sec: 97685.91, flops:102.52, batch-reuse:1
@ 4668 train 4.2799 , allloss: 4.2808, dt: 1292.16ms, fracRes: 0.3760, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5328, norm(y): 1.0158, norm:1.1094, tok/sec: 101436.11, flops:106.46, batch-reuse:1
@ 4669 train 4.2914 , allloss: 4.2923, dt: 1313.07ms, fracRes: 0.3748, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5369, norm(y): 1.0158, norm:1.0723, tok/sec: 99821.01, flops:104.76, batch-reuse:1
@ 4670 train 4.3391 , allloss: 4.3402, dt: 1315.71ms, fracRes: 0.3762, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5331, norm(y): 1.0159, norm:1.1392, tok/sec: 99620.48, flops:104.55, batch-reuse:1
@ 4671 train 4.2393 , allloss: 4.2401, dt: 1300.40ms, fracRes: 0.3770, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5328, norm(y): 1.0159, norm:1.1154, tok/sec: 100793.66, flops:105.78, batch-reuse:1
@ 4672 train 4.3920 , allloss: 4.3928, dt: 1283.47ms, fracRes: 0.3778, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5364, norm(y): 1.0158, norm:1.1474, tok/sec: 102123.18, flops:107.18, batch-reuse:1
@ 4673 train 4.2319 , allloss: 4.2327, dt: 1275.04ms, fracRes: 0.3781, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5343, norm(y): 1.0158, norm:1.0093, tok/sec: 102798.24, flops:107.89, batch-reuse:1
@ 4674 train 4.2962 , allloss: 4.2987, dt: 1279.55ms, fracRes: 0.3793, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5340, norm(y): 1.0158, norm:1.2767, tok/sec: 102435.93, flops:107.51, batch-reuse:1
@ 4675 train 4.2717 , allloss: 4.2733, dt: 1324.68ms, fracRes: 0.3770, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5325, norm(y): 1.0158, norm:1.1426, tok/sec: 98946.05, flops:103.85, batch-reuse:1
@ 4676 train 4.3367 , allloss: 4.3382, dt: 1331.36ms, fracRes: 0.3759, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5375, norm(y): 1.0157, norm:1.1029, tok/sec: 98449.57, flops:103.32, batch-reuse:1
@ 4677 train 4.3746 , allloss: 4.3759, dt: 1294.06ms, fracRes: 0.3765, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5359, norm(y): 1.0158, norm:1.2816, tok/sec: 101287.65, flops:106.30, batch-reuse:1
@ 4678 train 4.2590 , allloss: 4.2604, dt: 1302.77ms, fracRes: 0.3766, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5330, norm(y): 1.0159, norm:1.1073, tok/sec: 100610.60, flops:105.59, batch-reuse:1
@ 4679 train 4.3891 , allloss: 4.3899, dt: 1284.70ms, fracRes: 0.3750, norm(attn): 0.2324, norm(output): 0.6836, norm(x): 0.5304, norm(y): 1.0159, norm:1.0357, tok/sec: 102025.17, flops:107.08, batch-reuse:1
@ 4680 train 4.5640 , allloss: 4.5645, dt: 1306.61ms, fracRes: 0.3769, norm(attn): 0.2334, norm(output): 0.6797, norm(x): 0.5317, norm(y): 1.0159, norm:1.1627, tok/sec: 100314.18, flops:105.28, batch-reuse:1
@ 4681 train 4.2693 , allloss: 4.2701, dt: 1306.42ms, fracRes: 0.3761, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5358, norm(y): 1.0158, norm:1.3739, tok/sec: 100329.28, flops:105.30, batch-reuse:1
@ 4682 train 4.1935 , allloss: 4.1952, dt: 1294.62ms, fracRes: 0.3760, norm(attn): 0.2383, norm(output): 0.6797, norm(x): 0.5384, norm(y): 1.0158, norm:1.3057, tok/sec: 101243.85, flops:106.26, batch-reuse:1
@ 4683 train 4.2886 , allloss: 4.2900, dt: 1310.93ms, fracRes: 0.3767, norm(attn): 0.2354, norm(output): 0.6719, norm(x): 0.5312, norm(y): 1.0158, norm:1.1289, tok/sec: 99984.02, flops:104.94, batch-reuse:1
@ 4684 train 4.3357 , allloss: 4.3364, dt: 1340.18ms, fracRes: 0.3763, norm(attn): 0.2344, norm(output): 0.6680, norm(x): 0.5278, norm(y): 1.0158, norm:1.2945, tok/sec: 97801.79, flops:102.64, batch-reuse:1
@ 4685 train 4.2519 , allloss: 4.2525, dt: 1328.18ms, fracRes: 0.3764, norm(attn): 0.2363, norm(output): 0.6719, norm(x): 0.5311, norm(y): 1.0158, norm:1.2057, tok/sec: 98685.20, flops:103.57, batch-reuse:1
@ 4686 train 4.3587 , allloss: 4.3598, dt: 1307.99ms, fracRes: 0.3751, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5337, norm(y): 1.0159, norm:1.4463, tok/sec: 100208.40, flops:105.17, batch-reuse:1
@ 4687 train 4.2083 , allloss: 4.2098, dt: 1286.67ms, fracRes: 0.3762, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5364, norm(y): 1.0160, norm:1.3375, tok/sec: 101869.51, flops:106.91, batch-reuse:1
@ 4688 train 4.2434 , allloss: 4.2440, dt: 1296.44ms, fracRes: 0.3751, norm(attn): 0.2393, norm(output): 0.6797, norm(x): 0.5337, norm(y): 1.0158, norm:1.1610, tok/sec: 101101.67, flops:106.11, batch-reuse:1
@ 4689 train 4.2266 , allloss: 4.2278, dt: 1301.51ms, fracRes: 0.3757, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5311, norm(y): 1.0158, norm:1.1165, tok/sec: 100707.87, flops:105.69, batch-reuse:1
@ 4690 train 4.1989 , allloss: 4.2001, dt: 1312.77ms, fracRes: 0.3766, norm(attn): 0.2373, norm(output): 0.6797, norm(x): 0.5332, norm(y): 1.0158, norm:1.0925, tok/sec: 99843.72, flops:104.79, batch-reuse:1
@ 4691 train 4.2854 , allloss: 4.2867, dt: 1328.36ms, fracRes: 0.3759, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5378, norm(y): 1.0158, norm:1.2538, tok/sec: 98671.81, flops:103.56, batch-reuse:1
@ 4692 train 4.3359 , allloss: 4.3363, dt: 1265.92ms, fracRes: 0.3755, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5327, norm(y): 1.0158, norm:1.2297, tok/sec: 103538.66, flops:108.67, batch-reuse:1
@ 4693 train 4.3248 , allloss: 4.3297, dt: 1285.76ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5306, norm(y): 1.0159, norm:1.3025, tok/sec: 101941.40, flops:106.99, batch-reuse:1
@ 4694 train 4.3181 , allloss: 4.3189, dt: 1286.78ms, fracRes: 0.3764, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5327, norm(y): 1.0158, norm:1.1660, tok/sec: 101860.45, flops:106.90, batch-reuse:1
@ 4695 train 4.3258 , allloss: 4.3269, dt: 1322.38ms, fracRes: 0.3760, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5362, norm(y): 1.0158, norm:1.0513, tok/sec: 99118.05, flops:104.03, batch-reuse:1
@ 4696 train 4.2152 , allloss: 4.2165, dt: 1304.84ms, fracRes: 0.3752, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5344, norm(y): 1.0157, norm:1.0993, tok/sec: 100450.71, flops:105.42, batch-reuse:1
@ 4697 train 4.2301 , allloss: 4.2310, dt: 1316.56ms, fracRes: 0.3756, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5319, norm(y): 1.0159, norm:1.0728, tok/sec: 99556.44, flops:104.49, batch-reuse:1
@ 4698 train 4.2882 , allloss: 4.2890, dt: 1288.93ms, fracRes: 0.3755, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5338, norm(y): 1.0159, norm:1.1437, tok/sec: 101690.72, flops:106.73, batch-reuse:1
@ 4699 train 4.2117 , allloss: 4.2131, dt: 1278.70ms, fracRes: 0.3753, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5339, norm(y): 1.0158, norm:1.1081, tok/sec: 102504.12, flops:107.58, batch-reuse:1
@ 4700 train 4.2650 , allloss: 4.2694, dt: 1295.34ms, fracRes: 0.3742, norm(attn): 0.2393, norm(output): 0.6797, norm(x): 0.5336, norm(y): 1.0157, norm:1.1015, tok/sec: 101187.50, flops:106.20, batch-reuse:1
@ 4701 train 4.2317 , allloss: 4.2327, dt: 1316.83ms, fracRes: 0.3765, norm(attn): 0.2383, norm(output): 0.6797, norm(x): 0.5329, norm(y): 1.0158, norm:1.3066, tok/sec: 99535.87, flops:104.46, batch-reuse:1
@ 4702 train 4.2945 , allloss: 4.2957, dt: 1296.00ms, fracRes: 0.3765, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5334, norm(y): 1.0158, norm:1.0975, tok/sec: 101135.62, flops:106.14, batch-reuse:1
@ 4703 train 4.3523 , allloss: 4.3536, dt: 1292.45ms, fracRes: 0.3781, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5336, norm(y): 1.0159, norm:1.1272, tok/sec: 101413.69, flops:106.44, batch-reuse:1
@ 4704 train 4.2154 , allloss: 4.2163, dt: 1302.51ms, fracRes: 0.3779, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5335, norm(y): 1.0159, norm:1.2660, tok/sec: 100630.02, flops:105.61, batch-reuse:1
@ 4705 train 4.2862 , allloss: 4.2870, dt: 1278.01ms, fracRes: 0.3785, norm(attn): 0.2334, norm(output): 0.6797, norm(x): 0.5322, norm(y): 1.0158, norm:0.9701, tok/sec: 102559.07, flops:107.64, batch-reuse:1
@ 4706 train 4.3555 , allloss: 4.3566, dt: 1310.38ms, fracRes: 0.3784, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5394, norm(y): 1.0158, norm:1.1025, tok/sec: 100026.26, flops:104.98, batch-reuse:1
@ 4707 train 4.2515 , allloss: 4.2522, dt: 1308.56ms, fracRes: 0.3789, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5376, norm(y): 1.0159, norm:1.0978, tok/sec: 100165.11, flops:105.13, batch-reuse:1
@ 4708 train 4.2676 , allloss: 4.2684, dt: 1286.10ms, fracRes: 0.3770, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5345, norm(y): 1.0158, norm:1.1984, tok/sec: 101914.38, flops:106.96, batch-reuse:1
@ 4709 train 4.3332 , allloss: 4.3339, dt: 1314.54ms, fracRes: 0.3757, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5337, norm(y): 1.0157, norm:0.9485, tok/sec: 99709.39, flops:104.65, batch-reuse:1
@ 4710 train 4.2405 , allloss: 4.2414, dt: 1314.05ms, fracRes: 0.3759, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5375, norm(y): 1.0158, norm:1.2538, tok/sec: 99746.26, flops:104.69, batch-reuse:1
@ 4711 train 4.2956 , allloss: 4.2974, dt: 1297.96ms, fracRes: 0.3760, norm(attn): 0.2383, norm(output): 0.6797, norm(x): 0.5346, norm(y): 1.0158, norm:1.2192, tok/sec: 100983.15, flops:105.98, batch-reuse:1
@ 4712 train 4.3234 , allloss: 4.3241, dt: 1312.07ms, fracRes: 0.3750, norm(attn): 0.2393, norm(output): 0.6797, norm(x): 0.5310, norm(y): 1.0158, norm:1.1389, tok/sec: 99897.14, flops:104.84, batch-reuse:1
@ 4713 train 4.2609 , allloss: 4.2616, dt: 1317.12ms, fracRes: 0.3749, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5341, norm(y): 1.0159, norm:1.1166, tok/sec: 99514.30, flops:104.44, batch-reuse:1
@ 4714 train 4.2873 , allloss: 4.2882, dt: 1322.64ms, fracRes: 0.3747, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5347, norm(y): 1.0158, norm:1.1582, tok/sec: 99098.87, flops:104.01, batch-reuse:1
@ 4715 train 4.2154 , allloss: 4.2161, dt: 1320.01ms, fracRes: 0.3750, norm(attn): 0.2412, norm(output): 0.6836, norm(x): 0.5406, norm(y): 1.0158, norm:1.2599, tok/sec: 99296.11, flops:104.21, batch-reuse:1
@ 4716 train 4.3079 , allloss: 4.3088, dt: 1322.71ms, fracRes: 0.3745, norm(attn): 0.2432, norm(output): 0.6836, norm(x): 0.5386, norm(y): 1.0157, norm:1.1398, tok/sec: 99093.67, flops:104.00, batch-reuse:1
@ 4717 train 4.3270 , allloss: 4.3299, dt: 1300.33ms, fracRes: 0.3748, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5366, norm(y): 1.0157, norm:1.3894, tok/sec: 100798.79, flops:105.79, batch-reuse:1
@ 4718 train 4.3409 , allloss: 4.3431, dt: 1307.65ms, fracRes: 0.3767, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5374, norm(y): 1.0158, norm:1.1399, tok/sec: 100234.47, flops:105.20, batch-reuse:1
@ 4719 train 4.2146 , allloss: 4.2173, dt: 1314.63ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5367, norm(y): 1.0158, norm:1.0637, tok/sec: 99702.23, flops:104.64, batch-reuse:1
@ 4720 train 4.2200 , allloss: 4.2228, dt: 1317.43ms, fracRes: 0.3783, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5343, norm(y): 1.0159, norm:1.1825, tok/sec: 99490.42, flops:104.42, batch-reuse:1
@ 4721 train 4.2403 , allloss: 4.2412, dt: 1299.26ms, fracRes: 0.3780, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5358, norm(y): 1.0158, norm:1.1155, tok/sec: 100882.12, flops:105.88, batch-reuse:1
@ 4722 train 4.2175 , allloss: 4.2188, dt: 1298.84ms, fracRes: 0.3806, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5358, norm(y): 1.0158, norm:1.1578, tok/sec: 100914.33, flops:105.91, batch-reuse:1
@ 4723 train 4.3167 , allloss: 4.3175, dt: 1335.01ms, fracRes: 0.3813, norm(attn): 0.2324, norm(output): 0.6875, norm(x): 0.5373, norm(y): 1.0159, norm:1.0663, tok/sec: 98180.31, flops:103.04, batch-reuse:1
@ 4724 train 4.1921 , allloss: 4.1933, dt: 1335.06ms, fracRes: 0.3809, norm(attn): 0.2324, norm(output): 0.6875, norm(x): 0.5365, norm(y): 1.0160, norm:1.3112, tok/sec: 98176.96, flops:103.04, batch-reuse:1
@ 4725 train 4.2688 , allloss: 4.2696, dt: 1338.60ms, fracRes: 0.3800, norm(attn): 0.2324, norm(output): 0.6875, norm(x): 0.5370, norm(y): 1.0160, norm:1.0915, tok/sec: 97916.88, flops:102.77, batch-reuse:1
@ 4726 train 4.3411 , allloss: 4.3419, dt: 1340.41ms, fracRes: 0.3773, norm(attn): 0.2334, norm(output): 0.6875, norm(x): 0.5360, norm(y): 1.0160, norm:1.1600, tok/sec: 97785.35, flops:102.63, batch-reuse:1
@ 4727 train 4.1893 , allloss: 4.1898, dt: 1302.72ms, fracRes: 0.3751, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5359, norm(y): 1.0160, norm:1.1127, tok/sec: 100613.84, flops:105.60, batch-reuse:1
@ 4728 train 4.3188 , allloss: 4.3199, dt: 1300.90ms, fracRes: 0.3749, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5361, norm(y): 1.0159, norm:1.2434, tok/sec: 100754.88, flops:105.74, batch-reuse:1
@ 4729 train 4.2386 , allloss: 4.2394, dt: 1331.10ms, fracRes: 0.3746, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5357, norm(y): 1.0158, norm:1.1168, tok/sec: 98469.04, flops:103.35, batch-reuse:1
@ 4730 train 4.2656 , allloss: 4.2666, dt: 1336.98ms, fracRes: 0.3754, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5386, norm(y): 1.0159, norm:1.2570, tok/sec: 98036.18, flops:102.89, batch-reuse:1
@ 4731 train 4.3069 , allloss: 4.3080, dt: 1294.57ms, fracRes: 0.3749, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5385, norm(y): 1.0159, norm:1.2740, tok/sec: 101247.41, flops:106.26, batch-reuse:1
@ 4732 train 4.2874 , allloss: 4.2959, dt: 1300.69ms, fracRes: 0.3750, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5367, norm(y): 1.0160, norm:1.4142, tok/sec: 100771.17, flops:105.76, batch-reuse:1
@ 4733 train 4.3768 , allloss: 4.4452, dt: 1284.74ms, fracRes: 0.3698, norm(attn): 0.2471, norm(output): 0.6875, norm(x): 0.5442, norm(y): 1.0161, norm:2.6748, tok/sec: 102022.28, flops:107.07, batch-reuse:1
@ 4734 train 4.1841 , allloss: 4.1859, dt: 1298.28ms, fracRes: 0.3747, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5373, norm(y): 1.0160, norm:1.1904, tok/sec: 100958.12, flops:105.96, batch-reuse:1
@ 4735 train 4.2487 , allloss: 4.2496, dt: 1311.60ms, fracRes: 0.3757, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5352, norm(y): 1.0161, norm:0.9925, tok/sec: 99933.05, flops:104.88, batch-reuse:1
@ 4736 train 4.1769 , allloss: 4.1781, dt: 1302.39ms, fracRes: 0.3768, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5355, norm(y): 1.0161, norm:1.1406, tok/sec: 100639.90, flops:105.62, batch-reuse:1
@ 4737 train 4.2093 , allloss: 4.2104, dt: 1344.29ms, fracRes: 0.3767, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5351, norm(y): 1.0161, norm:1.0726, tok/sec: 97503.08, flops:102.33, batch-reuse:1
@ 4738 train 4.3146 , allloss: 4.3154, dt: 1332.53ms, fracRes: 0.3786, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5357, norm(y): 1.0162, norm:1.0665, tok/sec: 98363.28, flops:103.23, batch-reuse:1
@ 4739 train 4.1723 , allloss: 4.1731, dt: 1326.34ms, fracRes: 0.3780, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5345, norm(y): 1.0162, norm:1.2177, tok/sec: 98822.26, flops:103.72, batch-reuse:1
@ 4740 train 4.2808 , allloss: 4.2814, dt: 1280.51ms, fracRes: 0.3784, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5372, norm(y): 1.0162, norm:1.0643, tok/sec: 102359.56, flops:107.43, batch-reuse:1
@ 4741 train 4.3097 , allloss: 4.3107, dt: 1311.00ms, fracRes: 0.3783, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5370, norm(y): 1.0163, norm:1.1342, tok/sec: 99978.58, flops:104.93, batch-reuse:1
@ 4742 train 4.2148 , allloss: 4.2155, dt: 1326.69ms, fracRes: 0.3764, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5403, norm(y): 1.0162, norm:1.1016, tok/sec: 98795.92, flops:103.69, batch-reuse:1
@ 4743 train 4.3773 , allloss: 4.3782, dt: 1300.64ms, fracRes: 0.3761, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5419, norm(y): 1.0161, norm:1.0673, tok/sec: 100774.70, flops:105.76, batch-reuse:1
@ 4744 train 4.2633 , allloss: 4.2662, dt: 1300.24ms, fracRes: 0.3779, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5430, norm(y): 1.0163, norm:1.5931, tok/sec: 100806.13, flops:105.80, batch-reuse:1
@ 4745 train 4.2796 , allloss: 4.2820, dt: 1306.50ms, fracRes: 0.3761, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5413, norm(y): 1.0162, norm:1.6414, tok/sec: 100322.64, flops:105.29, batch-reuse:1
@ 4746 train 4.3061 , allloss: 4.3086, dt: 1291.91ms, fracRes: 0.3774, norm(attn): 0.2314, norm(output): 0.6836, norm(x): 0.5385, norm(y): 1.0163, norm:1.3869, tok/sec: 101455.82, flops:106.48, batch-reuse:1
@ 4747 train 4.2580 , allloss: 4.2589, dt: 1298.25ms, fracRes: 0.3783, norm(attn): 0.2334, norm(output): 0.6875, norm(x): 0.5413, norm(y): 1.0163, norm:1.1756, tok/sec: 100960.77, flops:105.96, batch-reuse:1
@ 4748 train 4.2432 , allloss: 4.2453, dt: 1316.32ms, fracRes: 0.3794, norm(attn): 0.2314, norm(output): 0.6875, norm(x): 0.5380, norm(y): 1.0164, norm:1.2341, tok/sec: 99574.29, flops:104.51, batch-reuse:1
@ 4749 train 4.2028 , allloss: 4.2037, dt: 1319.64ms, fracRes: 0.3805, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5398, norm(y): 1.0164, norm:1.1770, tok/sec: 99323.99, flops:104.24, batch-reuse:1
@ 4750 train 4.3219 , allloss: 4.3234, dt: 1292.34ms, fracRes: 0.3804, norm(attn): 0.2314, norm(output): 0.6836, norm(x): 0.5362, norm(y): 1.0164, norm:1.2323, tok/sec: 101422.15, flops:106.44, batch-reuse:1
@ 4751 train 4.1408 , allloss: 4.1420, dt: 1317.65ms, fracRes: 0.3809, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5325, norm(y): 1.0165, norm:1.0870, tok/sec: 99474.06, flops:104.40, batch-reuse:1
@ 4752 train 4.2201 , allloss: 4.2210, dt: 1349.50ms, fracRes: 0.3805, norm(attn): 0.2334, norm(output): 0.6680, norm(x): 0.5274, norm(y): 1.0165, norm:1.0990, tok/sec: 97126.04, flops:101.94, batch-reuse:1
@ 4753 train 4.1305 , allloss: 4.1320, dt: 1345.80ms, fracRes: 0.3794, norm(attn): 0.2354, norm(output): 0.6719, norm(x): 0.5295, norm(y): 1.0164, norm:1.1209, tok/sec: 97393.19, flops:102.22, batch-reuse:1
@ 4754 train 4.2618 , allloss: 4.2662, dt: 1339.23ms, fracRes: 0.3770, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5342, norm(y): 1.0163, norm:1.2198, tok/sec: 97871.37, flops:102.72, batch-reuse:1
@ 4755 train 4.1807 , allloss: 4.1821, dt: 1310.76ms, fracRes: 0.3759, norm(attn): 0.2393, norm(output): 0.6758, norm(x): 0.5338, norm(y): 1.0163, norm:1.1153, tok/sec: 99996.86, flops:104.95, batch-reuse:1
@ 4756 train 4.1905 , allloss: 4.1915, dt: 1322.71ms, fracRes: 0.3764, norm(attn): 0.2373, norm(output): 0.6758, norm(x): 0.5316, norm(y): 1.0164, norm:1.2108, tok/sec: 99093.60, flops:104.00, batch-reuse:1
@ 4757 train 4.1115 , allloss: 4.1125, dt: 1304.94ms, fracRes: 0.3772, norm(attn): 0.2373, norm(output): 0.6758, norm(x): 0.5340, norm(y): 1.0164, norm:1.1192, tok/sec: 100443.28, flops:105.42, batch-reuse:1
@ 4758 train 4.3079 , allloss: 4.3093, dt: 1299.54ms, fracRes: 0.3770, norm(attn): 0.2354, norm(output): 0.6758, norm(x): 0.5355, norm(y): 1.0164, norm:1.1076, tok/sec: 100860.01, flops:105.85, batch-reuse:1
@ 4759 train 4.1527 , allloss: 4.1539, dt: 1321.26ms, fracRes: 0.3772, norm(attn): 0.2363, norm(output): 0.6758, norm(x): 0.5364, norm(y): 1.0165, norm:1.1014, tok/sec: 99202.01, flops:104.11, batch-reuse:1
@ 4760 train 4.1632 , allloss: 4.1639, dt: 1301.23ms, fracRes: 0.3772, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5401, norm(y): 1.0164, norm:1.2522, tok/sec: 100729.11, flops:105.72, batch-reuse:1
@ 4761 train 4.3080 , allloss: 4.3096, dt: 1294.45ms, fracRes: 0.3765, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5404, norm(y): 1.0164, norm:1.1381, tok/sec: 101257.18, flops:106.27, batch-reuse:1
@ 4762 train 4.2453 , allloss: 4.2460, dt: 1303.81ms, fracRes: 0.3773, norm(attn): 0.2334, norm(output): 0.6836, norm(x): 0.5385, norm(y): 1.0165, norm:1.0892, tok/sec: 100530.18, flops:105.51, batch-reuse:1
@ 4763 train 4.2479 , allloss: 4.2486, dt: 1324.92ms, fracRes: 0.3776, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5390, norm(y): 1.0164, norm:1.0771, tok/sec: 98928.47, flops:103.83, batch-reuse:1
@ 4764 train 4.2707 , allloss: 4.2720, dt: 1316.48ms, fracRes: 0.3774, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5415, norm(y): 1.0164, norm:1.1098, tok/sec: 99562.53, flops:104.49, batch-reuse:1
@ 4765 train 4.2150 , allloss: 4.2162, dt: 1333.26ms, fracRes: 0.3779, norm(attn): 0.2344, norm(output): 0.6797, norm(x): 0.5366, norm(y): 1.0164, norm:0.9760, tok/sec: 98309.54, flops:103.18, batch-reuse:1
@ 4766 train 4.2607 , allloss: 4.2620, dt: 1315.90ms, fracRes: 0.3780, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5390, norm(y): 1.0165, norm:1.1178, tok/sec: 99606.51, flops:104.54, batch-reuse:1
@ 4767 train 4.2329 , allloss: 4.2335, dt: 1288.53ms, fracRes: 0.3769, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5401, norm(y): 1.0164, norm:1.1311, tok/sec: 101721.79, flops:106.76, batch-reuse:1
@ 4768 train 4.0482 , allloss: 4.0495, dt: 1311.92ms, fracRes: 0.3766, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5408, norm(y): 1.0165, norm:1.1968, tok/sec: 99908.16, flops:104.86, batch-reuse:1
@ 4769 train 4.2118 , allloss: 4.2124, dt: 1298.00ms, fracRes: 0.3768, norm(attn): 0.2354, norm(output): 0.6797, norm(x): 0.5336, norm(y): 1.0165, norm:1.0492, tok/sec: 100979.74, flops:105.98, batch-reuse:1
@ 4770 train 4.1602 , allloss: 4.1613, dt: 1308.92ms, fracRes: 0.3780, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5373, norm(y): 1.0165, norm:1.2223, tok/sec: 100137.65, flops:105.10, batch-reuse:1
@ 4771 train 4.2619 , allloss: 4.2635, dt: 1293.43ms, fracRes: 0.3783, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5411, norm(y): 1.0164, norm:1.2070, tok/sec: 101337.14, flops:106.36, batch-reuse:1
@ 4772 train 4.1416 , allloss: 4.1427, dt: 1297.93ms, fracRes: 0.3775, norm(attn): 0.2402, norm(output): 0.6758, norm(x): 0.5383, norm(y): 1.0163, norm:1.1063, tok/sec: 100985.53, flops:105.99, batch-reuse:1
@ 4773 train 4.0946 , allloss: 4.0952, dt: 1290.07ms, fracRes: 0.3788, norm(attn): 0.2393, norm(output): 0.6797, norm(x): 0.5386, norm(y): 1.0164, norm:1.0803, tok/sec: 101600.98, flops:106.63, batch-reuse:1
@ 4774 train 4.1709 , allloss: 4.1716, dt: 1295.01ms, fracRes: 0.3777, norm(attn): 0.2373, norm(output): 0.6797, norm(x): 0.5390, norm(y): 1.0164, norm:1.0682, tok/sec: 101212.91, flops:106.22, batch-reuse:1
@ 4775 train 4.0737 , allloss: 4.0745, dt: 1307.33ms, fracRes: 0.3768, norm(attn): 0.2373, norm(output): 0.6797, norm(x): 0.5364, norm(y): 1.0164, norm:1.1451, tok/sec: 100259.64, flops:105.22, batch-reuse:1
@ 4776 train 4.0700 , allloss: 4.0707, dt: 1339.73ms, fracRes: 0.3766, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5420, norm(y): 1.0164, norm:1.0567, tok/sec: 97834.36, flops:102.68, batch-reuse:1
@ 4777 train 4.0223 , allloss: 4.0230, dt: 1331.95ms, fracRes: 0.3768, norm(attn): 0.2363, norm(output): 0.6797, norm(x): 0.5400, norm(y): 1.0164, norm:1.1678, tok/sec: 98406.45, flops:103.28, batch-reuse:1
@ 4778 train 4.1011 , allloss: 4.1021, dt: 1275.94ms, fracRes: 0.3770, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5400, norm(y): 1.0164, norm:1.1731, tok/sec: 102726.03, flops:107.81, batch-reuse:1
@ 4779 train 4.1361 , allloss: 4.1367, dt: 1283.80ms, fracRes: 0.3758, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5404, norm(y): 1.0164, norm:1.1402, tok/sec: 102096.98, flops:107.15, batch-reuse:1
@ 4780 train 4.1991 , allloss: 4.1996, dt: 1296.08ms, fracRes: 0.3757, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5421, norm(y): 1.0164, norm:1.1526, tok/sec: 101129.79, flops:106.14, batch-reuse:1
@ 4781 train 4.0543 , allloss: 4.0553, dt: 1307.58ms, fracRes: 0.3754, norm(attn): 0.2402, norm(output): 0.6836, norm(x): 0.5423, norm(y): 1.0163, norm:1.1998, tok/sec: 100239.79, flops:105.20, batch-reuse:1
@ 4782 train 4.1366 , allloss: 4.1377, dt: 1333.89ms, fracRes: 0.3755, norm(attn): 0.2393, norm(output): 0.6836, norm(x): 0.5415, norm(y): 1.0163, norm:0.9987, tok/sec: 98263.31, flops:103.13, batch-reuse:1
@ 4783 train 4.0937 , allloss: 4.0948, dt: 1344.48ms, fracRes: 0.3764, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5417, norm(y): 1.0164, norm:1.1589, tok/sec: 97488.68, flops:102.32, batch-reuse:1
@ 4784 train 4.1868 , allloss: 4.1885, dt: 1290.99ms, fracRes: 0.3762, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5413, norm(y): 1.0163, norm:1.0583, tok/sec: 101527.90, flops:106.56, batch-reuse:1
@ 4785 train 4.1550 , allloss: 4.1566, dt: 1286.97ms, fracRes: 0.3783, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5444, norm(y): 1.0163, norm:1.1717, tok/sec: 101845.35, flops:106.89, batch-reuse:1
@ 4786 train 4.2111 , allloss: 4.2119, dt: 1327.30ms, fracRes: 0.3769, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5430, norm(y): 1.0163, norm:1.1673, tok/sec: 98751.11, flops:103.64, batch-reuse:1
@ 4787 train 4.1433 , allloss: 4.1442, dt: 1313.87ms, fracRes: 0.3751, norm(attn): 0.2412, norm(output): 0.6875, norm(x): 0.5401, norm(y): 1.0163, norm:1.3251, tok/sec: 99759.98, flops:104.70, batch-reuse:1
@ 4788 train 4.0935 , allloss: 4.0944, dt: 1305.78ms, fracRes: 0.3779, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5410, norm(y): 1.0164, norm:1.4849, tok/sec: 100377.99, flops:105.35, batch-reuse:1
@ 4789 train 4.2565 , allloss: 4.2577, dt: 1334.82ms, fracRes: 0.3781, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5427, norm(y): 1.0163, norm:1.1834, tok/sec: 98194.53, flops:103.06, batch-reuse:1
@ 4790 train 4.1409 , allloss: 4.1414, dt: 1307.11ms, fracRes: 0.3779, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5410, norm(y): 1.0163, norm:1.1411, tok/sec: 100276.30, flops:105.24, batch-reuse:1
@ 4791 train 4.1166 , allloss: 4.1176, dt: 1308.93ms, fracRes: 0.3780, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5392, norm(y): 1.0163, norm:1.0475, tok/sec: 100136.49, flops:105.10, batch-reuse:1
@ 4792 train 4.1232 , allloss: 4.1240, dt: 1319.37ms, fracRes: 0.3784, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5425, norm(y): 1.0163, norm:1.0332, tok/sec: 99344.27, flops:104.26, batch-reuse:1
@ 4793 train 4.1458 , allloss: 4.1464, dt: 1316.43ms, fracRes: 0.3770, norm(attn): 0.2363, norm(output): 0.6836, norm(x): 0.5400, norm(y): 1.0163, norm:1.1503, tok/sec: 99565.97, flops:104.50, batch-reuse:1
@ 4794 train 4.0717 , allloss: 4.0726, dt: 1316.11ms, fracRes: 0.3759, norm(attn): 0.2383, norm(output): 0.6836, norm(x): 0.5412, norm(y): 1.0162, norm:1.0751, tok/sec: 99590.16, flops:104.52, batch-reuse:1
@ 4795 train 4.1242 , allloss: 4.1248, dt: 1295.54ms, fracRes: 0.3763, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5461, norm(y): 1.0163, norm:1.0298, tok/sec: 101171.37, flops:106.18, batch-reuse:1
@ 4796 train 4.1198 , allloss: 4.1209, dt: 1310.41ms, fracRes: 0.3770, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5420, norm(y): 1.0163, norm:1.2621, tok/sec: 100023.49, flops:104.98, batch-reuse:1
@ 4797 train 4.1714 , allloss: 4.1722, dt: 1329.13ms, fracRes: 0.3770, norm(attn): 0.2383, norm(output): 0.6875, norm(x): 0.5424, norm(y): 1.0163, norm:1.0433, tok/sec: 98615.17, flops:103.50, batch-reuse:1
@ 4798 train 4.1584 , allloss: 4.1592, dt: 1339.06ms, fracRes: 0.3760, norm(attn): 0.2354, norm(output): 0.6836, norm(x): 0.5394, norm(y): 1.0163, norm:1.0916, tok/sec: 97883.60, flops:102.73, batch-reuse:1
@ 4799 train 4.0562 , allloss: 4.0573, dt: 1352.08ms, fracRes: 0.3749, norm(attn): 0.2383, norm(output): 0.6875, norm(x): 0.5446, norm(y): 1.0162, norm:1.1781, tok/sec: 96941.19, flops:101.74, batch-reuse:1
@ 4800 train 4.1514 , allloss: 4.1524, dt: 1347.61ms, fracRes: 0.3753, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5459, norm(y): 1.0162, norm:1.1529, tok/sec: 97262.48, flops:102.08, batch-reuse:1
@ 4801 train 4.1625 , allloss: 4.1633, dt: 1283.80ms, fracRes: 0.3769, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5454, norm(y): 1.0163, norm:1.2090, tok/sec: 102096.85, flops:107.15, batch-reuse:1
@ 4802 train 4.0138 , allloss: 4.0145, dt: 1301.59ms, fracRes: 0.3771, norm(attn): 0.2373, norm(output): 0.6875, norm(x): 0.5435, norm(y): 1.0163, norm:1.1308, tok/sec: 100701.18, flops:105.69, batch-reuse:1
@ 4803 train 4.0551 , allloss: 4.0562, dt: 1283.38ms, fracRes: 0.3791, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5468, norm(y): 1.0164, norm:1.4306, tok/sec: 102129.99, flops:107.19, batch-reuse:1
@ 4804 train 4.1606 , allloss: 4.1612, dt: 1310.80ms, fracRes: 0.3766, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5415, norm(y): 1.0163, norm:1.1841, tok/sec: 99994.15, flops:104.95, batch-reuse:1
@ 4805 train 4.2326 , allloss: 4.2334, dt: 1345.98ms, fracRes: 0.3773, norm(attn): 0.2334, norm(output): 0.6875, norm(x): 0.5415, norm(y): 1.0163, norm:1.3039, tok/sec: 97380.25, flops:102.20, batch-reuse:1
@ 4806 train 4.1486 , allloss: 4.1493, dt: 1331.80ms, fracRes: 0.3771, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5453, norm(y): 1.0162, norm:1.0658, tok/sec: 98417.34, flops:103.29, batch-reuse:1
@ 4807 train 4.1110 , allloss: 4.1118, dt: 1292.41ms, fracRes: 0.3768, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5429, norm(y): 1.0162, norm:1.0829, tok/sec: 101416.91, flops:106.44, batch-reuse:1
@ 4808 train 4.2429 , allloss: 4.2434, dt: 1272.83ms, fracRes: 0.3777, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5389, norm(y): 1.0162, norm:1.0583, tok/sec: 102976.66, flops:108.08, batch-reuse:1
@ 4809 train 4.0858 , allloss: 4.0864, dt: 1286.70ms, fracRes: 0.3778, norm(attn): 0.2373, norm(output): 0.6836, norm(x): 0.5390, norm(y): 1.0163, norm:1.2014, tok/sec: 101866.77, flops:106.91, batch-reuse:1
@ 4810 train 4.2239 , allloss: 4.2246, dt: 1290.55ms, fracRes: 0.3773, norm(attn): 0.2344, norm(output): 0.6836, norm(x): 0.5383, norm(y): 1.0163, norm:1.6676, tok/sec: 101562.88, flops:106.59, batch-reuse:1
@ 4811 train 4.1645 , allloss: 4.1651, dt: 1294.36ms, fracRes: 0.3754, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5470, norm(y): 1.0162, norm:1.3216, tok/sec: 101263.65, flops:106.28, batch-reuse:1
@ 4812 train 4.1817 , allloss: 4.1826, dt: 1300.12ms, fracRes: 0.3763, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5527, norm(y): 1.0163, norm:1.3815, tok/sec: 100815.43, flops:105.81, batch-reuse:1
@ 4813 train 4.0607 , allloss: 4.0627, dt: 1343.03ms, fracRes: 0.3737, norm(attn): 0.2393, norm(output): 0.6914, norm(x): 0.5516, norm(y): 1.0162, norm:1.2274, tok/sec: 97594.52, flops:102.43, batch-reuse:1
@ 4814 train 4.1392 , allloss: 4.1414, dt: 1341.60ms, fracRes: 0.3745, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5527, norm(y): 1.0163, norm:1.2771, tok/sec: 97698.31, flops:102.54, batch-reuse:1
@ 4815 train 4.1358 , allloss: 4.1381, dt: 1325.29ms, fracRes: 0.3739, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5489, norm(y): 1.0163, norm:1.2542, tok/sec: 98900.55, flops:103.80, batch-reuse:1
@ 4816 train 4.1107 , allloss: 4.1122, dt: 1300.04ms, fracRes: 0.3739, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5508, norm(y): 1.0163, norm:1.2911, tok/sec: 100821.57, flops:105.81, batch-reuse:1
@ 4817 train 4.1489 , allloss: 4.1505, dt: 1351.66ms, fracRes: 0.3751, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5517, norm(y): 1.0164, norm:1.1831, tok/sec: 96970.96, flops:101.77, batch-reuse:1
@ 4818 train 4.0747 , allloss: 4.0759, dt: 1327.21ms, fracRes: 0.3764, norm(attn): 0.2354, norm(output): 0.6953, norm(x): 0.5488, norm(y): 1.0165, norm:1.1393, tok/sec: 98757.23, flops:103.65, batch-reuse:1
@ 4819 train 4.1199 , allloss: 4.1216, dt: 1354.48ms, fracRes: 0.3767, norm(attn): 0.2344, norm(output): 0.6953, norm(x): 0.5478, norm(y): 1.0165, norm:1.0868, tok/sec: 96768.93, flops:101.56, batch-reuse:1
@ 4820 train 4.1341 , allloss: 4.1348, dt: 1329.54ms, fracRes: 0.3758, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5460, norm(y): 1.0164, norm:1.1204, tok/sec: 98584.14, flops:103.47, batch-reuse:1
@ 4821 train 4.3084 , allloss: 4.3097, dt: 1333.27ms, fracRes: 0.3773, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5464, norm(y): 1.0163, norm:1.0489, tok/sec: 98308.58, flops:103.18, batch-reuse:1
@ 4822 train 4.1707 , allloss: 4.1719, dt: 1303.39ms, fracRes: 0.3786, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5463, norm(y): 1.0163, norm:1.2639, tok/sec: 100562.60, flops:105.54, batch-reuse:1
@ 4823 train 4.2593 , allloss: 4.2601, dt: 1299.09ms, fracRes: 0.3778, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5467, norm(y): 1.0163, norm:1.1844, tok/sec: 100895.30, flops:105.89, batch-reuse:1
@ 4824 train 4.2761 , allloss: 4.2770, dt: 1331.63ms, fracRes: 0.3772, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5497, norm(y): 1.0162, norm:1.1647, tok/sec: 98429.46, flops:103.30, batch-reuse:1
@ 4825 train 4.3452 , allloss: 4.3460, dt: 1311.05ms, fracRes: 0.3792, norm(attn): 0.2334, norm(output): 0.6914, norm(x): 0.5458, norm(y): 1.0163, norm:1.1885, tok/sec: 99974.91, flops:104.93, batch-reuse:1
@ 4826 train 4.2723 , allloss: 4.2731, dt: 1320.28ms, fracRes: 0.3796, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5450, norm(y): 1.0163, norm:1.1262, tok/sec: 99275.69, flops:104.19, batch-reuse:1
@ 4827 train 4.2636 , allloss: 4.2644, dt: 1305.93ms, fracRes: 0.3788, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5471, norm(y): 1.0163, norm:1.1828, tok/sec: 100366.47, flops:105.34, batch-reuse:1
@ 4828 train 4.2557 , allloss: 4.2566, dt: 1291.19ms, fracRes: 0.3783, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5449, norm(y): 1.0164, norm:1.1022, tok/sec: 101512.51, flops:106.54, batch-reuse:1
@ 4829 train 4.4450 , allloss: 4.4460, dt: 1283.90ms, fracRes: 0.3788, norm(attn): 0.2314, norm(output): 0.6914, norm(x): 0.5483, norm(y): 1.0163, norm:1.2864, tok/sec: 102088.95, flops:107.14, batch-reuse:1
@ 4830 train 4.3167 , allloss: 4.3174, dt: 1318.50ms, fracRes: 0.3782, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5430, norm(y): 1.0163, norm:1.2854, tok/sec: 99409.61, flops:104.33, batch-reuse:1
@ 4831 train 4.2074 , allloss: 4.2080, dt: 1308.60ms, fracRes: 0.3784, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5438, norm(y): 1.0163, norm:1.2284, tok/sec: 100162.28, flops:105.12, batch-reuse:1
@ 4832 train 4.3460 , allloss: 4.3468, dt: 1343.35ms, fracRes: 0.3782, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5468, norm(y): 1.0163, norm:1.2649, tok/sec: 97571.16, flops:102.40, batch-reuse:1
@ 4833 train 4.2713 , allloss: 4.2742, dt: 1304.50ms, fracRes: 0.3784, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5429, norm(y): 1.0163, norm:1.1797, tok/sec: 100476.60, flops:105.45, batch-reuse:1
@ 4834 train 4.3669 , allloss: 4.3677, dt: 1341.58ms, fracRes: 0.3784, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5447, norm(y): 1.0163, norm:1.1971, tok/sec: 97699.73, flops:102.54, batch-reuse:1
@ 4835 train 4.2754 , allloss: 4.2762, dt: 1283.17ms, fracRes: 0.3769, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5459, norm(y): 1.0162, norm:1.1724, tok/sec: 102147.07, flops:107.21, batch-reuse:1
@ 4836 train 4.2396 , allloss: 4.2408, dt: 1317.60ms, fracRes: 0.3765, norm(attn): 0.2402, norm(output): 0.6914, norm(x): 0.5470, norm(y): 1.0162, norm:1.1783, tok/sec: 99477.84, flops:104.40, batch-reuse:1
@ 4837 train 4.2948 , allloss: 4.2961, dt: 1330.42ms, fracRes: 0.3777, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5487, norm(y): 1.0163, norm:1.1375, tok/sec: 98519.16, flops:103.40, batch-reuse:1
@ 4838 train 4.2962 , allloss: 4.2974, dt: 1297.05ms, fracRes: 0.3771, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5501, norm(y): 1.0163, norm:1.2413, tok/sec: 101054.00, flops:106.06, batch-reuse:1
@ 4839 train 4.2541 , allloss: 4.2550, dt: 1299.94ms, fracRes: 0.3769, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5505, norm(y): 1.0163, norm:1.0847, tok/sec: 100829.21, flops:105.82, batch-reuse:1
@ 4840 train 4.3168 , allloss: 4.3175, dt: 1312.25ms, fracRes: 0.3786, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5444, norm(y): 1.0164, norm:1.2430, tok/sec: 99883.32, flops:104.83, batch-reuse:1
@ 4841 train 4.3456 , allloss: 4.3464, dt: 1314.58ms, fracRes: 0.3776, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5442, norm(y): 1.0163, norm:1.2482, tok/sec: 99706.68, flops:104.64, batch-reuse:1
@ 4842 train 4.2995 , allloss: 4.3007, dt: 1335.60ms, fracRes: 0.3774, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5449, norm(y): 1.0163, norm:1.2649, tok/sec: 98136.89, flops:103.00, batch-reuse:1
@ 4843 train 4.3263 , allloss: 4.3271, dt: 1309.56ms, fracRes: 0.3771, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5467, norm(y): 1.0162, norm:1.1659, tok/sec: 100088.32, flops:105.04, batch-reuse:1
@ 4844 train 4.2119 , allloss: 4.2129, dt: 1314.57ms, fracRes: 0.3774, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5476, norm(y): 1.0162, norm:1.1511, tok/sec: 99707.35, flops:104.64, batch-reuse:1
@ 4845 train 4.1886 , allloss: 4.1893, dt: 1287.79ms, fracRes: 0.3764, norm(attn): 0.2383, norm(output): 0.6875, norm(x): 0.5465, norm(y): 1.0162, norm:1.1051, tok/sec: 101780.64, flops:106.82, batch-reuse:1
@ 4846 train 4.3185 , allloss: 4.3198, dt: 1293.91ms, fracRes: 0.3758, norm(attn): 0.2383, norm(output): 0.6914, norm(x): 0.5486, norm(y): 1.0162, norm:1.0979, tok/sec: 101299.27, flops:106.32, batch-reuse:1
@ 4847 train 4.3051 , allloss: 4.3059, dt: 1302.28ms, fracRes: 0.3751, norm(attn): 0.2383, norm(output): 0.6914, norm(x): 0.5486, norm(y): 1.0161, norm:1.0606, tok/sec: 100648.43, flops:105.63, batch-reuse:1
@ 4848 train 4.2320 , allloss: 4.2327, dt: 1287.94ms, fracRes: 0.3755, norm(attn): 0.2402, norm(output): 0.6914, norm(x): 0.5491, norm(y): 1.0162, norm:1.0810, tok/sec: 101768.64, flops:106.81, batch-reuse:1
@ 4849 train 4.3384 , allloss: 4.3395, dt: 1307.64ms, fracRes: 0.3751, norm(attn): 0.2412, norm(output): 0.6914, norm(x): 0.5493, norm(y): 1.0162, norm:1.1693, tok/sec: 100235.24, flops:105.20, batch-reuse:1
@ 4850 train 4.5417 , allloss: 4.5426, dt: 1314.25ms, fracRes: 0.3780, norm(attn): 0.2344, norm(output): 0.6875, norm(x): 0.5474, norm(y): 1.0163, norm:1.1501, tok/sec: 99731.21, flops:104.67, batch-reuse:1
@ 4851 train 4.2411 , allloss: 4.2419, dt: 1324.20ms, fracRes: 0.3786, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5495, norm(y): 1.0162, norm:1.1617, tok/sec: 98981.78, flops:103.88, batch-reuse:1
@ 4852 train 4.3033 , allloss: 4.3049, dt: 1309.02ms, fracRes: 0.3797, norm(attn): 0.2334, norm(output): 0.6914, norm(x): 0.5479, norm(y): 1.0162, norm:1.1087, tok/sec: 100129.77, flops:105.09, batch-reuse:1
@ 4853 train 4.2262 , allloss: 4.2273, dt: 1313.31ms, fracRes: 0.3811, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5491, norm(y): 1.0163, norm:1.0338, tok/sec: 99802.83, flops:104.74, batch-reuse:1
@ 4854 train 4.1653 , allloss: 4.1662, dt: 1317.96ms, fracRes: 0.3817, norm(attn): 0.2393, norm(output): 0.6875, norm(x): 0.5469, norm(y): 1.0164, norm:1.4498, tok/sec: 99450.92, flops:104.38, batch-reuse:1
@ 4855 train 4.3837 , allloss: 4.3851, dt: 1300.76ms, fracRes: 0.3825, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5471, norm(y): 1.0164, norm:1.3588, tok/sec: 100765.54, flops:105.76, batch-reuse:1
@ 4856 train 4.2978 , allloss: 4.2986, dt: 1309.42ms, fracRes: 0.3798, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5469, norm(y): 1.0163, norm:1.0790, tok/sec: 100099.53, flops:105.06, batch-reuse:1
@ 4857 train 4.2198 , allloss: 4.2219, dt: 1336.99ms, fracRes: 0.3784, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5476, norm(y): 1.0163, norm:1.1342, tok/sec: 98035.23, flops:102.89, batch-reuse:1
@ 4858 train 4.2801 , allloss: 4.2809, dt: 1329.59ms, fracRes: 0.3780, norm(attn): 0.2344, norm(output): 0.6914, norm(x): 0.5457, norm(y): 1.0163, norm:1.1798, tok/sec: 98580.69, flops:103.46, batch-reuse:1
@ 4859 train 4.3117 , allloss: 4.3140, dt: 1322.40ms, fracRes: 0.3773, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5479, norm(y): 1.0163, norm:1.4577, tok/sec: 99117.07, flops:104.03, batch-reuse:1
@ 4860 train 4.2481 , allloss: 4.2494, dt: 1338.77ms, fracRes: 0.3776, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5504, norm(y): 1.0162, norm:1.2942, tok/sec: 97904.50, flops:102.75, batch-reuse:1
@ 4861 train 4.2428 , allloss: 4.2437, dt: 1317.80ms, fracRes: 0.3788, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5459, norm(y): 1.0163, norm:1.1811, tok/sec: 99462.77, flops:104.39, batch-reuse:1
@ 4862 train 4.2876 , allloss: 4.2886, dt: 1329.73ms, fracRes: 0.3790, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5483, norm(y): 1.0163, norm:1.2070, tok/sec: 98570.74, flops:103.45, batch-reuse:1
@ 4863 train 4.4098 , allloss: 4.4108, dt: 1328.46ms, fracRes: 0.3784, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5497, norm(y): 1.0162, norm:1.1920, tok/sec: 98664.85, flops:103.55, batch-reuse:1
@ 4864 train 4.3045 , allloss: 4.3061, dt: 1349.49ms, fracRes: 0.3788, norm(attn): 0.2402, norm(output): 0.6914, norm(x): 0.5499, norm(y): 1.0162, norm:1.1869, tok/sec: 97127.27, flops:101.94, batch-reuse:1
@ 4865 train 4.2052 , allloss: 4.2063, dt: 1318.70ms, fracRes: 0.3792, norm(attn): 0.2383, norm(output): 0.6914, norm(x): 0.5487, norm(y): 1.0162, norm:1.1319, tok/sec: 99395.05, flops:104.32, batch-reuse:1
@ 4866 train 4.3198 , allloss: 4.3208, dt: 1312.99ms, fracRes: 0.3786, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5459, norm(y): 1.0162, norm:1.1497, tok/sec: 99827.42, flops:104.77, batch-reuse:1
@ 4867 train 4.2315 , allloss: 4.2320, dt: 1335.89ms, fracRes: 0.3792, norm(attn): 0.2334, norm(output): 0.6953, norm(x): 0.5493, norm(y): 1.0162, norm:1.1595, tok/sec: 98116.21, flops:102.97, batch-reuse:1
@ 4868 train 4.1949 , allloss: 4.1965, dt: 1344.00ms, fracRes: 0.3778, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5469, norm(y): 1.0163, norm:1.0712, tok/sec: 97523.51, flops:102.35, batch-reuse:1
@ 4869 train 4.2448 , allloss: 4.2461, dt: 1310.82ms, fracRes: 0.3783, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5456, norm(y): 1.0164, norm:1.1285, tok/sec: 99992.07, flops:104.94, batch-reuse:1
@ 4870 train 4.2331 , allloss: 4.2344, dt: 1314.21ms, fracRes: 0.3794, norm(attn): 0.2354, norm(output): 0.6875, norm(x): 0.5448, norm(y): 1.0163, norm:1.0146, tok/sec: 99734.36, flops:104.67, batch-reuse:1
@ 4871 train 4.3382 , allloss: 4.3415, dt: 1328.18ms, fracRes: 0.3796, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5470, norm(y): 1.0162, norm:1.1739, tok/sec: 98685.56, flops:103.57, batch-reuse:1
@ 4872 train 4.2799 , allloss: 4.2807, dt: 1332.41ms, fracRes: 0.3789, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5480, norm(y): 1.0162, norm:1.3226, tok/sec: 98371.90, flops:103.24, batch-reuse:1
@ 4873 train 4.1198 , allloss: 4.1206, dt: 1295.93ms, fracRes: 0.3798, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5473, norm(y): 1.0164, norm:1.0959, tok/sec: 101141.48, flops:106.15, batch-reuse:1
@ 4874 train 4.2884 , allloss: 4.2893, dt: 1315.05ms, fracRes: 0.3802, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5442, norm(y): 1.0164, norm:1.2461, tok/sec: 99670.98, flops:104.61, batch-reuse:1
@ 4875 train 4.3165 , allloss: 4.3235, dt: 1295.48ms, fracRes: 0.3793, norm(attn): 0.2383, norm(output): 0.6875, norm(x): 0.5460, norm(y): 1.0163, norm:1.3008, tok/sec: 101176.69, flops:106.19, batch-reuse:1
@ 4876 train 4.3010 , allloss: 4.3020, dt: 1332.27ms, fracRes: 0.3779, norm(attn): 0.2412, norm(output): 0.6914, norm(x): 0.5482, norm(y): 1.0162, norm:1.1667, tok/sec: 98382.57, flops:103.25, batch-reuse:1
@ 4877 train 4.3143 , allloss: 4.3155, dt: 1323.27ms, fracRes: 0.3806, norm(attn): 0.2383, norm(output): 0.6914, norm(x): 0.5493, norm(y): 1.0163, norm:1.1033, tok/sec: 99051.91, flops:103.96, batch-reuse:1
@ 4878 train 4.1495 , allloss: 4.1511, dt: 1320.43ms, fracRes: 0.3801, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5455, norm(y): 1.0163, norm:1.0923, tok/sec: 99264.38, flops:104.18, batch-reuse:1
@ 4879 train 4.2689 , allloss: 4.2709, dt: 1308.48ms, fracRes: 0.3781, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5477, norm(y): 1.0163, norm:1.1700, tok/sec: 100171.34, flops:105.13, batch-reuse:1
@ 4880 train 4.2097 , allloss: 4.2114, dt: 1305.14ms, fracRes: 0.3774, norm(attn): 0.2412, norm(output): 0.6914, norm(x): 0.5519, norm(y): 1.0162, norm:1.1602, tok/sec: 100427.41, flops:105.40, batch-reuse:1
@ 4881 train 4.3258 , allloss: 4.3273, dt: 1296.64ms, fracRes: 0.3777, norm(attn): 0.2363, norm(output): 0.6953, norm(x): 0.5521, norm(y): 1.0162, norm:1.0321, tok/sec: 101085.70, flops:106.09, batch-reuse:1
@ 4882 train 4.3717 , allloss: 4.3827, dt: 1306.16ms, fracRes: 0.3778, norm(attn): 0.2363, norm(output): 0.6875, norm(x): 0.5452, norm(y): 1.0163, norm:1.2910, tok/sec: 100349.30, flops:105.32, batch-reuse:1
@ 4883 train 4.2312 , allloss: 4.2347, dt: 1311.25ms, fracRes: 0.3774, norm(attn): 0.2393, norm(output): 0.6914, norm(x): 0.5461, norm(y): 1.0163, norm:1.0984, tok/sec: 99959.60, flops:104.91, batch-reuse:1
@ 4884 train 4.1660 , allloss: 4.1715, dt: 1351.33ms, fracRes: 0.3769, norm(attn): 0.2412, norm(output): 0.6914, norm(x): 0.5503, norm(y): 1.0162, norm:1.1169, tok/sec: 96995.08, flops:101.80, batch-reuse:1
@ 4885 train 4.4594 , allloss: 4.4605, dt: 1318.03ms, fracRes: 0.3771, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5493, norm(y): 1.0161, norm:1.2654, tok/sec: 99445.38, flops:104.37, batch-reuse:1
@ 4886 train 4.1892 , allloss: 4.1915, dt: 1336.56ms, fracRes: 0.3774, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5511, norm(y): 1.0162, norm:1.1260, tok/sec: 98066.57, flops:102.92, batch-reuse:1
@ 4887 train 4.3531 , allloss: 4.3641, dt: 1323.11ms, fracRes: 0.3791, norm(attn): 0.2363, norm(output): 0.6992, norm(x): 0.5556, norm(y): 1.0162, norm:1.2040, tok/sec: 99063.70, flops:103.97, batch-reuse:1
@ 4888 train 4.2005 , allloss: 4.2076, dt: 1314.55ms, fracRes: 0.3772, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5507, norm(y): 1.0161, norm:1.2730, tok/sec: 99708.33, flops:104.65, batch-reuse:1
@ 4889 train 4.2301 , allloss: 4.2321, dt: 1312.29ms, fracRes: 0.3770, norm(attn): 0.2383, norm(output): 0.6914, norm(x): 0.5504, norm(y): 1.0162, norm:1.1632, tok/sec: 99880.22, flops:104.83, batch-reuse:1
@ 4890 train 4.2224 , allloss: 4.2232, dt: 1318.93ms, fracRes: 0.3769, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5521, norm(y): 1.0163, norm:1.1595, tok/sec: 99377.21, flops:104.30, batch-reuse:1
@ 4891 train 4.2550 , allloss: 4.2557, dt: 1311.83ms, fracRes: 0.3759, norm(attn): 0.2373, norm(output): 0.6914, norm(x): 0.5519, norm(y): 1.0162, norm:1.1417, tok/sec: 99915.31, flops:104.86, batch-reuse:1
@ 4892 train 4.2809 , allloss: 4.2825, dt: 1287.96ms, fracRes: 0.3766, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5547, norm(y): 1.0162, norm:1.0625, tok/sec: 101766.87, flops:106.81, batch-reuse:1
@ 4893 train 4.2604 , allloss: 4.2624, dt: 1291.14ms, fracRes: 0.3779, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5515, norm(y): 1.0162, norm:1.0799, tok/sec: 101516.86, flops:106.54, batch-reuse:1
@ 4894 train 4.3181 , allloss: 4.3192, dt: 1278.01ms, fracRes: 0.3809, norm(attn): 0.2354, norm(output): 0.6953, norm(x): 0.5534, norm(y): 1.0164, norm:1.2420, tok/sec: 102559.34, flops:107.64, batch-reuse:1
@ 4895 train 4.2416 , allloss: 4.2494, dt: 1289.96ms, fracRes: 0.3788, norm(attn): 0.2373, norm(output): 0.6953, norm(x): 0.5531, norm(y): 1.0162, norm:1.1290, tok/sec: 101609.06, flops:106.64, batch-reuse:1
@ 4896 train 4.3095 , allloss: 4.3105, dt: 1288.98ms, fracRes: 0.3785, norm(attn): 0.2354, norm(output): 0.6914, norm(x): 0.5478, norm(y): 1.0162, norm:1.0588, tok/sec: 101686.89, flops:106.72, batch-reuse:1
@ 4897 train 4.2869 , allloss: 4.2877, dt: 1293.23ms, fracRes: 0.3777, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5501, norm(y): 1.0162, norm:1.1501, tok/sec: 101352.46, flops:106.37, batch-reuse:1
@ 4898 train 4.2908 , allloss: 4.2917, dt: 1334.49ms, fracRes: 0.3777, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.5533, norm(y): 1.0162, norm:1.1638, tok/sec: 98218.63, flops:103.08, batch-reuse:1
@ 4899 train 4.2895 , allloss: 4.2940, dt: 1317.34ms, fracRes: 0.3768, norm(attn): 0.2373, norm(output): 0.6992, norm(x): 0.5529, norm(y): 1.0161, norm:1.0926, tok/sec: 99497.66, flops:104.42, batch-reuse:1
@ 4900 train 4.2190 , allloss: 4.2202, dt: 1344.17ms, fracRes: 0.3776, norm(attn): 0.2383, norm(output): 0.6992, norm(x): 0.5511, norm(y): 1.0161, norm:1.1521, tok/sec: 97511.23, flops:102.34, batch-reuse:1
@ 4901 train 4.2813 , allloss: 4.2825, dt: 1295.63ms, fracRes: 0.3781, norm(attn): 0.2402, norm(output): 0.6953, norm(x): 0.5495, norm(y): 1.0162, norm:1.0647, tok/sec: 101164.78, flops:106.17, batch-reuse:1
@ 4902 train 4.0267 , allloss: 4.0275, dt: 1318.38ms, fracRes: 0.3781, norm(attn): 0.2393, norm(output): 0.6953, norm(x): 0.5489, norm(y): 1.0163, norm:1.0239, tok/sec: 99418.98, flops:104.34, batch-reuse:1
@ 4903 train 4.1288 , allloss: 4.1336, dt: 1334.15ms, fracRes: 0.3764, norm(attn): 0.2432, norm(output): 0.6953, norm(x): 0.5529, norm(y): 1.0161, norm:1.1195, tok/sec: 98243.77, flops:103.11, batch-reuse:1
@ 4904 train 4.2271 , allloss: 4.2284, dt: 1310.42ms, fracRes: 0.3773, norm(attn): 0.2383, norm(output): 0.6992, norm(x): 0.5540, norm(y): 1.0162, norm:1.1739, tok/sec: 100023.24, flops:104.98, batch-reuse:1
@ 4905 train 4.1971 , allloss: 4.1999, dt: 1319.57ms, fracRes: 0.3778, norm(attn): 0.2354, norm(output): 0.6953, norm(x): 0.5478, norm(y): 1.0162, norm:1.1157, tok/sec: 99329.09, flops:104.25, batch-reuse:1
@ 4906 train 4.2896 , allloss: 4.2907, dt: 1341.35ms, fracRes: 0.3783, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5485, norm(y): 1.0162, norm:1.1040, tok/sec: 97716.49, flops:102.56, batch-reuse:1
@ 4907 train 4.3287 , allloss: 4.3300, dt: 1327.44ms, fracRes: 0.3780, norm(attn): 0.2363, norm(output): 0.6914, norm(x): 0.5467, norm(y): 1.0162, norm:1.2266, tok/sec: 98740.09, flops:103.63, batch-reuse:1
@ 4908 train 4.3095 , allloss: 4.3112, dt: 1309.89ms, fracRes: 0.3786, norm(attn): 0.2363, norm(output): 0.6953, norm(x): 0.5510, norm(y): 1.0162, norm:1.1070, tok/sec: 100063.73, flops:105.02, batch-reuse:1
@ 4909 train 4.2165 , allloss: 4.2178, dt: 1326.75ms, fracRes: 0.3786, norm(attn): 0.2354, norm(output): 0.6992, norm(x): 0.5506, norm(y): 1.0162, norm:1.1090, tok/sec: 98791.75, flops:103.68, batch-reuse:1
@ 4910 train 4.1885 , allloss: 4.1908, dt: 1311.66ms, fracRes: 0.3811, norm(attn): 0.2354, norm(output): 0.7070, norm(x): 0.5591, norm(y): 1.0164, norm:1.7280, tok/sec: 99928.20, flops:104.88, batch-reuse:1
@ 4911 train 4.1968 , allloss: 4.1991, dt: 1310.79ms, fracRes: 0.3778, norm(attn): 0.2373, norm(output): 0.7031, norm(x): 0.5564, norm(y): 1.0162, norm:1.5502, tok/sec: 99994.53, flops:104.95, batch-reuse:1
@ 4912 train 4.3360 , allloss: 4.3369, dt: 1328.03ms, fracRes: 0.3780, norm(attn): 0.2354, norm(output): 0.6953, norm(x): 0.5501, norm(y): 1.0162, norm:1.1650, tok/sec: 98696.38, flops:103.58, batch-reuse:1
@ 4913 train 4.2844 , allloss: 4.2849, dt: 1300.16ms, fracRes: 0.3792, norm(attn): 0.2383, norm(output): 0.6953, norm(x): 0.5510, norm(y): 1.0162, norm:1.5478, tok/sec: 100812.32, flops:105.80, batch-reuse:1
@ 4914 train 4.2479 , allloss: 4.2485, dt: 1291.43ms, fracRes: 0.3790, norm(attn): 0.2402, norm(output): 0.6914, norm(x): 0.5451, norm(y): 1.0162, norm:1.7516, tok/sec: 101493.94, flops:106.52, batch-reuse:1
@ 4915 train 4.2276 , allloss: 4.2285, dt: 1303.06ms, fracRes: 0.3785, norm(attn): 0.2393, norm(output): 0.6953, norm(x): 0.5511, norm(y): 1.0162, norm:1.2793, tok/sec: 100588.19, flops:105.57, batch-reuse:1
@ 4916 train 4.2273 , allloss: 4.2292, dt: 1297.27ms, fracRes: 0.3778, norm(attn): 0.2441, norm(output): 0.6992, norm(x): 0.5554, norm(y): 1.0162, norm:1.3838, tok/sec: 101036.57, flops:106.04, batch-reuse:1
@ 4917 train 4.1501 , allloss: 4.1514, dt: 1285.77ms, fracRes: 0.3780, norm(attn): 0.2393, norm(output): 0.6953, norm(x): 0.5492, norm(y): 1.0162, norm:1.2071, tok/sec: 101940.36, flops:106.99, batch-reuse:1
@ 4918 train 4.1681 , allloss: 4.1705, dt: 1311.79ms, fracRes: 0.3791, norm(attn): 0.2363, norm(output): 0.6992, norm(x): 0.5471, norm(y): 1.0163, norm:1.2925, tok/sec: 99918.18, flops:104.87, batch-reuse:1
@ 4919 train 4.1929 , allloss: 4.1938, dt: 1306.12ms, fracRes: 0.3794, norm(attn): 0.2363, norm(output): 0.6953, norm(x): 0.5484, norm(y): 1.0163, norm:1.2106, tok/sec: 100351.85, flops:105.32, batch-reuse:1
@ 4920 train 4.1927 , allloss: 4.1932, dt: 1327.13ms, fracRes: 0.3799, norm(attn): 0.2373, norm(output): 0.6992, norm(x): 0.5482, norm(y): 1.0163, norm:1.1652, tok/sec: 98763.21, flops:103.65, batch-reuse:1
@ 4921 train 4.1959 , allloss: 4.1978, dt: 1329.41ms, fracRes: 0.3786, norm(attn): 0.2373, norm(output): 0.7031, norm(x): 0.5523, norm(y): 1.0162, norm:1.2002, tok/sec: 98594.14, flops:103.48, batch-reuse:1
@ 4922 train 4.1409 , allloss: 4.1422, dt: 1335.41ms, fracRes: 0.3775, norm(attn): 0.2373, norm(output): 0.6992, norm(x): 0.5508, norm(y): 1.0162, norm:1.0516, tok/sec: 98150.91, flops:103.01, batch-reuse:1
@ 4923 train 4.1841 , allloss: 4.1849, dt: 1334.95ms, fracRes: 0.3785, norm(attn): 0.2354, norm(output): 0.6992, norm(x): 0.5513, norm(y): 1.0161, norm:1.1332, tok/sec: 98185.04, flops:103.05, batch-reuse:1
@ 4924 train 4.1960 , allloss: 4.1970, dt: 1326.00ms, fracRes: 0.3791, norm(attn): 0.2373, norm(output): 0.7031, norm(x): 0.5525, norm(y): 1.0162, norm:1.0454, tok/sec: 98847.65, flops:103.74, batch-reuse:1
@ 4925 train 4.1523 , allloss: 4.1536, dt: 1315.38ms, fracRes: 0.3786, norm(attn): 0.2393, norm(output): 0.6992, norm(x): 0.5527, norm(y): 1.0162, norm:1.0083, tok/sec: 99645.67, flops:104.58, batch-reuse:1
@ 4926 train 4.2279 , allloss: 4.2304, dt: 1305.25ms, fracRes: 0.3791, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5555, norm(y): 1.0162, norm:1.0677, tok/sec: 100418.70, flops:105.39, batch-reuse:1
@ 4927 train 4.3195 , allloss: 4.3217, dt: 1290.85ms, fracRes: 0.3794, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5536, norm(y): 1.0162, norm:1.0855, tok/sec: 101539.41, flops:106.57, batch-reuse:1
@ 4928 train 4.1033 , allloss: 4.1064, dt: 1315.34ms, fracRes: 0.3790, norm(attn): 0.2412, norm(output): 0.7031, norm(x): 0.5558, norm(y): 1.0162, norm:1.1352, tok/sec: 99648.77, flops:104.58, batch-reuse:1
@ 4929 train 4.1271 , allloss: 4.1276, dt: 1338.75ms, fracRes: 0.3794, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5538, norm(y): 1.0162, norm:1.2043, tok/sec: 97906.35, flops:102.75, batch-reuse:1
@ 4930 train 4.1568 , allloss: 4.1599, dt: 1304.53ms, fracRes: 0.3793, norm(attn): 0.2383, norm(output): 0.6953, norm(x): 0.5512, norm(y): 1.0162, norm:1.0674, tok/sec: 100474.67, flops:105.45, batch-reuse:1
@ 4931 train 4.2023 , allloss: 4.2033, dt: 1299.47ms, fracRes: 0.3784, norm(attn): 0.2412, norm(output): 0.6953, norm(x): 0.5520, norm(y): 1.0162, norm:1.1006, tok/sec: 100865.72, flops:105.86, batch-reuse:1
@ 4932 train 4.2097 , allloss: 4.2109, dt: 1289.95ms, fracRes: 0.3785, norm(attn): 0.2383, norm(output): 0.6953, norm(x): 0.5504, norm(y): 1.0162, norm:1.0653, tok/sec: 101609.92, flops:106.64, batch-reuse:1
@ 4933 train 4.1784 , allloss: 4.1792, dt: 1308.45ms, fracRes: 0.3789, norm(attn): 0.2402, norm(output): 0.7031, norm(x): 0.5532, norm(y): 1.0161, norm:1.1603, tok/sec: 100173.32, flops:105.13, batch-reuse:1
@ 4934 train 4.1693 , allloss: 4.1705, dt: 1328.89ms, fracRes: 0.3793, norm(attn): 0.2402, norm(output): 0.6992, norm(x): 0.5518, norm(y): 1.0161, norm:1.0190, tok/sec: 98632.69, flops:103.52, batch-reuse:1
@ 4935 train 4.2075 , allloss: 4.2083, dt: 1312.76ms, fracRes: 0.3816, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5512, norm(y): 1.0163, norm:1.2669, tok/sec: 99844.67, flops:104.79, batch-reuse:1
@ 4936 train 4.2075 , allloss: 4.2084, dt: 1308.60ms, fracRes: 0.3817, norm(attn): 0.2354, norm(output): 0.7070, norm(x): 0.5539, norm(y): 1.0164, norm:1.0879, tok/sec: 100161.90, flops:105.12, batch-reuse:1
@ 4937 train 4.2052 , allloss: 4.2057, dt: 1300.38ms, fracRes: 0.3802, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5514, norm(y): 1.0162, norm:1.2980, tok/sec: 100795.36, flops:105.79, batch-reuse:1
@ 4938 train 4.1763 , allloss: 4.1788, dt: 1283.85ms, fracRes: 0.3798, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.5521, norm(y): 1.0161, norm:1.0620, tok/sec: 102092.97, flops:107.15, batch-reuse:1
@ 4939 train 4.2592 , allloss: 4.2602, dt: 1309.67ms, fracRes: 0.3801, norm(attn): 0.2354, norm(output): 0.7031, norm(x): 0.5518, norm(y): 1.0161, norm:1.0708, tok/sec: 100079.96, flops:105.04, batch-reuse:1
@ 4940 train 4.1244 , allloss: 4.1252, dt: 1308.38ms, fracRes: 0.3787, norm(attn): 0.2383, norm(output): 0.7031, norm(x): 0.5507, norm(y): 1.0161, norm:1.0828, tok/sec: 100179.09, flops:105.14, batch-reuse:1
@ 4941 train 4.1907 , allloss: 4.1915, dt: 1310.43ms, fracRes: 0.3782, norm(attn): 0.2383, norm(output): 0.7031, norm(x): 0.5521, norm(y): 1.0162, norm:1.0051, tok/sec: 100022.27, flops:104.98, batch-reuse:1
@ 4942 train 4.1773 , allloss: 4.1785, dt: 1342.42ms, fracRes: 0.3785, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5549, norm(y): 1.0162, norm:1.0542, tok/sec: 97638.81, flops:102.47, batch-reuse:1
@ 4943 train 4.2657 , allloss: 4.2672, dt: 1345.05ms, fracRes: 0.3792, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5535, norm(y): 1.0163, norm:1.0218, tok/sec: 97447.90, flops:102.27, batch-reuse:1
@ 4944 train 4.1363 , allloss: 4.1369, dt: 1310.06ms, fracRes: 0.3802, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5542, norm(y): 1.0163, norm:1.0077, tok/sec: 100050.72, flops:105.01, batch-reuse:1
@ 4945 train 4.2073 , allloss: 4.2079, dt: 1289.23ms, fracRes: 0.3801, norm(attn): 0.2354, norm(output): 0.7109, norm(x): 0.5590, norm(y): 1.0162, norm:1.1103, tok/sec: 101666.54, flops:106.70, batch-reuse:1
@ 4946 train 4.1464 , allloss: 4.1472, dt: 1310.62ms, fracRes: 0.3783, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5552, norm(y): 1.0161, norm:0.9720, tok/sec: 100007.33, flops:104.96, batch-reuse:1
@ 4947 train 4.1872 , allloss: 4.1883, dt: 1348.54ms, fracRes: 0.3788, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5526, norm(y): 1.0161, norm:1.0668, tok/sec: 97195.58, flops:102.01, batch-reuse:1
@ 4948 train 4.1773 , allloss: 4.1781, dt: 1341.39ms, fracRes: 0.3780, norm(attn): 0.2412, norm(output): 0.6992, norm(x): 0.5525, norm(y): 1.0161, norm:1.1118, tok/sec: 97713.63, flops:102.55, batch-reuse:1
@ 4949 train 4.1043 , allloss: 4.1051, dt: 1341.85ms, fracRes: 0.3766, norm(attn): 0.2432, norm(output): 0.7031, norm(x): 0.5540, norm(y): 1.0160, norm:1.0995, tok/sec: 97680.40, flops:102.52, batch-reuse:1
@ 4950 train 4.1336 , allloss: 4.1344, dt: 1324.07ms, fracRes: 0.3773, norm(attn): 0.2451, norm(output): 0.7031, norm(x): 0.5512, norm(y): 1.0161, norm:1.0313, tok/sec: 98991.73, flops:103.89, batch-reuse:1
@ 4951 train 4.0593 , allloss: 4.0609, dt: 1321.51ms, fracRes: 0.3795, norm(attn): 0.2402, norm(output): 0.7031, norm(x): 0.5508, norm(y): 1.0162, norm:1.0535, tok/sec: 99183.43, flops:104.09, batch-reuse:1
@ 4952 train 4.1829 , allloss: 4.1839, dt: 1337.99ms, fracRes: 0.3794, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5562, norm(y): 1.0162, norm:1.0059, tok/sec: 97961.62, flops:102.81, batch-reuse:1
@ 4953 train 4.0713 , allloss: 4.0719, dt: 1310.93ms, fracRes: 0.3807, norm(attn): 0.2402, norm(output): 0.7070, norm(x): 0.5558, norm(y): 1.0163, norm:1.1255, tok/sec: 99983.80, flops:104.93, batch-reuse:1
@ 4954 train 4.2027 , allloss: 4.2043, dt: 1309.62ms, fracRes: 0.3801, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5567, norm(y): 1.0162, norm:1.1161, tok/sec: 100084.26, flops:105.04, batch-reuse:1
@ 4955 train 4.2471 , allloss: 4.2479, dt: 1335.34ms, fracRes: 0.3804, norm(attn): 0.2354, norm(output): 0.7070, norm(x): 0.5551, norm(y): 1.0163, norm:1.2663, tok/sec: 98156.03, flops:103.02, batch-reuse:1
@ 4956 train 4.1614 , allloss: 4.1621, dt: 1326.54ms, fracRes: 0.3794, norm(attn): 0.2383, norm(output): 0.7031, norm(x): 0.5527, norm(y): 1.0163, norm:1.1631, tok/sec: 98807.10, flops:103.70, batch-reuse:1
@ 4957 train 4.2565 , allloss: 4.2575, dt: 1310.95ms, fracRes: 0.3809, norm(attn): 0.2354, norm(output): 0.7031, norm(x): 0.5579, norm(y): 1.0163, norm:1.2950, tok/sec: 99982.38, flops:104.93, batch-reuse:1
@ 4958 train 4.1699 , allloss: 4.1704, dt: 1343.09ms, fracRes: 0.3791, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5537, norm(y): 1.0162, norm:1.1397, tok/sec: 97589.95, flops:102.42, batch-reuse:1
@ 4959 train 4.2503 , allloss: 4.2508, dt: 1345.05ms, fracRes: 0.3788, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.5531, norm(y): 1.0162, norm:1.0622, tok/sec: 97447.59, flops:102.27, batch-reuse:1
@ 4960 train 4.2138 , allloss: 4.2145, dt: 1339.73ms, fracRes: 0.3798, norm(attn): 0.2373, norm(output): 0.7031, norm(x): 0.5508, norm(y): 1.0161, norm:1.1337, tok/sec: 97834.38, flops:102.68, batch-reuse:1
@ 4961 train 4.1405 , allloss: 4.1412, dt: 1343.92ms, fracRes: 0.3810, norm(attn): 0.2383, norm(output): 0.7031, norm(x): 0.5527, norm(y): 1.0162, norm:1.0141, tok/sec: 97529.44, flops:102.36, batch-reuse:1
@ 4962 train 4.1539 , allloss: 4.1547, dt: 1304.08ms, fracRes: 0.3806, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5516, norm(y): 1.0162, norm:1.0850, tok/sec: 100509.41, flops:105.49, batch-reuse:1
@ 4963 train 4.1815 , allloss: 4.1822, dt: 1335.67ms, fracRes: 0.3806, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5563, norm(y): 1.0161, norm:0.9532, tok/sec: 98131.90, flops:102.99, batch-reuse:1
@ 4964 train 4.0741 , allloss: 4.0753, dt: 1339.09ms, fracRes: 0.3816, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5557, norm(y): 1.0162, norm:1.0265, tok/sec: 97881.44, flops:102.73, batch-reuse:1
@ 4965 train 4.1034 , allloss: 4.1045, dt: 1339.42ms, fracRes: 0.3803, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5515, norm(y): 1.0162, norm:1.0529, tok/sec: 97857.54, flops:102.70, batch-reuse:1
@ 4966 train 4.1675 , allloss: 4.1694, dt: 1289.74ms, fracRes: 0.3813, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5527, norm(y): 1.0162, norm:1.0909, tok/sec: 101626.34, flops:106.66, batch-reuse:1
@ 4967 train 4.0497 , allloss: 4.0512, dt: 1303.48ms, fracRes: 0.3790, norm(attn): 0.2412, norm(output): 0.7070, norm(x): 0.5515, norm(y): 1.0161, norm:1.2144, tok/sec: 100555.65, flops:105.54, batch-reuse:1
@ 4968 train 4.0841 , allloss: 4.0862, dt: 1342.32ms, fracRes: 0.3777, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5521, norm(y): 1.0161, norm:1.0894, tok/sec: 97645.52, flops:102.48, batch-reuse:1
@ 4969 train 4.1138 , allloss: 4.1149, dt: 1310.08ms, fracRes: 0.3775, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5539, norm(y): 1.0162, norm:1.1979, tok/sec: 100048.90, flops:105.00, batch-reuse:1
@ 4970 train 4.2479 , allloss: 4.2488, dt: 1299.99ms, fracRes: 0.3776, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5528, norm(y): 1.0162, norm:1.0328, tok/sec: 100825.10, flops:105.82, batch-reuse:1
@ 4971 train 4.0981 , allloss: 4.1006, dt: 1286.89ms, fracRes: 0.3769, norm(attn): 0.2412, norm(output): 0.7031, norm(x): 0.5547, norm(y): 1.0161, norm:1.1511, tok/sec: 101851.48, flops:106.90, batch-reuse:1
@ 4972 train 4.0954 , allloss: 4.0960, dt: 1313.80ms, fracRes: 0.3771, norm(attn): 0.2412, norm(output): 0.7070, norm(x): 0.5527, norm(y): 1.0161, norm:1.1605, tok/sec: 99765.78, flops:104.71, batch-reuse:1
@ 4973 train 4.0623 , allloss: 4.0633, dt: 1314.12ms, fracRes: 0.3789, norm(attn): 0.2432, norm(output): 0.6992, norm(x): 0.5510, norm(y): 1.0162, norm:1.0576, tok/sec: 99741.10, flops:104.68, batch-reuse:1
@ 4974 train 4.0857 , allloss: 4.0872, dt: 1337.72ms, fracRes: 0.3787, norm(attn): 0.2402, norm(output): 0.6992, norm(x): 0.5525, norm(y): 1.0162, norm:1.2124, tok/sec: 97981.54, flops:102.83, batch-reuse:1
@ 4975 train 4.1946 , allloss: 4.1954, dt: 1292.25ms, fracRes: 0.3790, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5514, norm(y): 1.0162, norm:1.0874, tok/sec: 101429.39, flops:106.45, batch-reuse:1
@ 4976 train 4.1084 , allloss: 4.1095, dt: 1296.24ms, fracRes: 0.3790, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5566, norm(y): 1.0162, norm:1.2093, tok/sec: 101117.14, flops:106.12, batch-reuse:1
@ 4977 train 4.1783 , allloss: 4.1800, dt: 1316.91ms, fracRes: 0.3788, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5554, norm(y): 1.0161, norm:1.0116, tok/sec: 99530.07, flops:104.46, batch-reuse:1
@ 4978 train 4.0212 , allloss: 4.0238, dt: 1324.10ms, fracRes: 0.3801, norm(attn): 0.2402, norm(output): 0.7031, norm(x): 0.5522, norm(y): 1.0163, norm:1.1815, tok/sec: 98989.45, flops:103.89, batch-reuse:1
@ 4979 train 4.1014 , allloss: 4.1019, dt: 1339.71ms, fracRes: 0.3801, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5509, norm(y): 1.0163, norm:1.1188, tok/sec: 97836.26, flops:102.68, batch-reuse:1
@ 4980 train 4.0855 , allloss: 4.0862, dt: 1314.23ms, fracRes: 0.3790, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.5513, norm(y): 1.0162, norm:1.0252, tok/sec: 99733.07, flops:104.67, batch-reuse:1
@ 4981 train 4.2241 , allloss: 4.2280, dt: 1320.90ms, fracRes: 0.3776, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5539, norm(y): 1.0161, norm:0.9874, tok/sec: 99229.60, flops:104.14, batch-reuse:1
@ 4982 train 4.1338 , allloss: 4.1349, dt: 1345.40ms, fracRes: 0.3769, norm(attn): 0.2402, norm(output): 0.7070, norm(x): 0.5574, norm(y): 1.0161, norm:1.0776, tok/sec: 97422.42, flops:102.25, batch-reuse:1
@ 4983 train 4.0894 , allloss: 4.0920, dt: 1342.85ms, fracRes: 0.3773, norm(attn): 0.2383, norm(output): 0.7109, norm(x): 0.5552, norm(y): 1.0162, norm:0.9523, tok/sec: 97607.23, flops:102.44, batch-reuse:1
@ 4984 train 4.1027 , allloss: 4.1032, dt: 1335.24ms, fracRes: 0.3781, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5545, norm(y): 1.0163, norm:1.0928, tok/sec: 98163.63, flops:103.02, batch-reuse:1
@ 4985 train 4.0897 , allloss: 4.0902, dt: 1337.18ms, fracRes: 0.3795, norm(attn): 0.2373, norm(output): 0.7188, norm(x): 0.5571, norm(y): 1.0162, norm:1.1329, tok/sec: 98020.90, flops:102.87, batch-reuse:1
@ 4986 train 4.1011 , allloss: 4.1018, dt: 1307.38ms, fracRes: 0.3774, norm(attn): 0.2393, norm(output): 0.7109, norm(x): 0.5604, norm(y): 1.0161, norm:1.2270, tok/sec: 100255.51, flops:105.22, batch-reuse:1
@ 4987 train 4.1770 , allloss: 4.1779, dt: 1321.94ms, fracRes: 0.3781, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5570, norm(y): 1.0162, norm:0.9922, tok/sec: 99151.52, flops:104.06, batch-reuse:1
@ 4988 train 3.9987 , allloss: 3.9993, dt: 1314.97ms, fracRes: 0.3779, norm(attn): 0.2412, norm(output): 0.7070, norm(x): 0.5530, norm(y): 1.0162, norm:1.2495, tok/sec: 99676.91, flops:104.61, batch-reuse:1
@ 4989 train 4.2408 , allloss: 4.2416, dt: 1309.38ms, fracRes: 0.3787, norm(attn): 0.2363, norm(output): 0.7148, norm(x): 0.5605, norm(y): 1.0162, norm:1.1842, tok/sec: 100101.97, flops:105.06, batch-reuse:1
@ 4990 train 4.1339 , allloss: 4.1352, dt: 1307.88ms, fracRes: 0.3777, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5568, norm(y): 1.0162, norm:1.1048, tok/sec: 100216.95, flops:105.18, batch-reuse:1
@ 4991 train 4.1047 , allloss: 4.1057, dt: 1331.24ms, fracRes: 0.3773, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5560, norm(y): 1.0162, norm:1.0638, tok/sec: 98458.36, flops:103.33, batch-reuse:1
@ 4992 train 4.1220 , allloss: 4.1233, dt: 1316.45ms, fracRes: 0.3789, norm(attn): 0.2383, norm(output): 0.7109, norm(x): 0.5577, norm(y): 1.0162, norm:1.3036, tok/sec: 99565.05, flops:104.50, batch-reuse:1
@ 4993 train 4.1255 , allloss: 4.1267, dt: 1313.37ms, fracRes: 0.3793, norm(attn): 0.2363, norm(output): 0.7109, norm(x): 0.5563, norm(y): 1.0161, norm:1.1015, tok/sec: 99798.39, flops:104.74, batch-reuse:1
@ 4994 train 4.1022 , allloss: 4.1032, dt: 1287.76ms, fracRes: 0.3804, norm(attn): 0.2344, norm(output): 0.7070, norm(x): 0.5540, norm(y): 1.0161, norm:1.2896, tok/sec: 101783.09, flops:106.82, batch-reuse:1
@ 4995 train 4.0386 , allloss: 4.0398, dt: 1308.96ms, fracRes: 0.3816, norm(attn): 0.2363, norm(output): 0.7031, norm(x): 0.5540, norm(y): 1.0162, norm:1.1490, tok/sec: 100134.61, flops:105.09, batch-reuse:1
@ 4996 train 4.1575 , allloss: 4.1585, dt: 1333.42ms, fracRes: 0.3811, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5545, norm(y): 1.0161, norm:1.0520, tok/sec: 98297.54, flops:103.17, batch-reuse:1
@ 4997 train 4.0800 , allloss: 4.0811, dt: 1334.90ms, fracRes: 0.3792, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5540, norm(y): 1.0160, norm:1.1827, tok/sec: 98188.69, flops:103.05, batch-reuse:1
@ 4998 train 4.1631 , allloss: 4.1641, dt: 1332.66ms, fracRes: 0.3799, norm(attn): 0.2383, norm(output): 0.7188, norm(x): 0.5588, norm(y): 1.0161, norm:1.2264, tok/sec: 98353.74, flops:103.22, batch-reuse:1
@ 4999 train 4.0332 , allloss: 4.0343, dt: 1325.16ms, fracRes: 0.3794, norm(attn): 0.2402, norm(output): 0.7109, norm(x): 0.5549, norm(y): 1.0162, norm:1.0388, tok/sec: 98910.26, flops:103.81, batch-reuse:1
@ 5000 train 4.0953 , allloss: 4.0962, dt: 2317.58ms, fracRes: 0.3784, norm(attn): 0.2422, norm(output): 0.7227, norm(x): 0.5571, norm(y): 1.0161, norm:1.1986, tok/sec: 56555.66, flops:59.36, batch-reuse:1
@ 5001 train 3.9940 , allloss: 3.9946, dt: 1333.84ms, fracRes: 0.3767, norm(attn): 0.2441, norm(output): 0.7070, norm(x): 0.5557, norm(y): 1.0161, norm:1.0635, tok/sec: 98266.54, flops:103.13, batch-reuse:1
@ 5002 train 4.2309 , allloss: 4.2318, dt: 1311.94ms, fracRes: 0.3778, norm(attn): 0.2432, norm(output): 0.7109, norm(x): 0.5535, norm(y): 1.0162, norm:1.1429, tok/sec: 99907.28, flops:104.85, batch-reuse:1
@ 5003 train 4.0804 , allloss: 4.0812, dt: 1307.54ms, fracRes: 0.3791, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5534, norm(y): 1.0162, norm:1.1353, tok/sec: 100243.23, flops:105.21, batch-reuse:1
@ 5004 train 4.2051 , allloss: 4.2061, dt: 1307.10ms, fracRes: 0.3775, norm(attn): 0.2402, norm(output): 0.7148, norm(x): 0.5582, norm(y): 1.0161, norm:1.1406, tok/sec: 100276.83, flops:105.24, batch-reuse:1
@ 5005 train 4.0647 , allloss: 4.0653, dt: 1310.16ms, fracRes: 0.3779, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5562, norm(y): 1.0162, norm:1.1803, tok/sec: 100042.95, flops:105.00, batch-reuse:1
@ 5006 train 4.1617 , allloss: 4.1625, dt: 1339.41ms, fracRes: 0.3780, norm(attn): 0.2373, norm(output): 0.7070, norm(x): 0.5546, norm(y): 1.0161, norm:1.0767, tok/sec: 97858.13, flops:102.70, batch-reuse:1
@ 5007 train 4.1154 , allloss: 4.1163, dt: 1327.15ms, fracRes: 0.3791, norm(attn): 0.2402, norm(output): 0.7109, norm(x): 0.5540, norm(y): 1.0162, norm:1.1461, tok/sec: 98761.93, flops:103.65, batch-reuse:1
@ 5008 train 4.2023 , allloss: 4.2032, dt: 1313.00ms, fracRes: 0.3794, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5582, norm(y): 1.0161, norm:1.2442, tok/sec: 99825.97, flops:104.77, batch-reuse:1
@ 5009 train 4.0316 , allloss: 4.0327, dt: 1303.85ms, fracRes: 0.3786, norm(attn): 0.2402, norm(output): 0.7070, norm(x): 0.5545, norm(y): 1.0162, norm:1.0588, tok/sec: 100526.92, flops:105.50, batch-reuse:1
@ 5010 train 4.1424 , allloss: 4.1433, dt: 1309.92ms, fracRes: 0.3796, norm(attn): 0.2373, norm(output): 0.7109, norm(x): 0.5553, norm(y): 1.0162, norm:1.2620, tok/sec: 100061.23, flops:105.02, batch-reuse:1
@ 5011 train 4.0807 , allloss: 4.0816, dt: 1284.46ms, fracRes: 0.3802, norm(attn): 0.2363, norm(output): 0.7070, norm(x): 0.5540, norm(y): 1.0162, norm:1.0656, tok/sec: 102044.72, flops:107.10, batch-reuse:1
@ 5012 train 4.1614 , allloss: 4.1621, dt: 1308.29ms, fracRes: 0.3797, norm(attn): 0.2383, norm(output): 0.7070, norm(x): 0.5579, norm(y): 1.0162, norm:1.2080, tok/sec: 100185.83, flops:105.15, batch-reuse:1
@ 5013 train 4.3341 , allloss: 4.3348, dt: 1293.51ms, fracRes: 0.3793, norm(attn): 0.2402, norm(output): 0.7148, norm(x): 0.5585, norm(y): 1.0161, norm:1.1350, tok/sec: 101330.62, flops:106.35, batch-reuse:1
@ 5014 train 4.2781 , allloss: 4.2795, dt: 1284.54ms, fracRes: 0.3803, norm(attn): 0.2402, norm(output): 0.7109, norm(x): 0.5618, norm(y): 1.0161, norm:1.1426, tok/sec: 102038.28, flops:107.09, batch-reuse:1
@ 5015 train 4.2107 , allloss: 4.2122, dt: 1312.47ms, fracRes: 0.3797, norm(attn): 0.2402, norm(output): 0.7188, norm(x): 0.5591, norm(y): 1.0162, norm:1.2328, tok/sec: 99866.38, flops:104.81, batch-reuse:1
@ 5016 train 4.2094 , allloss: 4.2102, dt: 1337.97ms, fracRes: 0.3779, norm(attn): 0.2441, norm(output): 0.7109, norm(x): 0.5598, norm(y): 1.0161, norm:1.0657, tok/sec: 97963.30, flops:102.81, batch-reuse:1
@ 5017 train 4.2854 , allloss: 4.2865, dt: 1339.06ms, fracRes: 0.3776, norm(attn): 0.2441, norm(output): 0.7109, norm(x): 0.5607, norm(y): 1.0162, norm:1.4436, tok/sec: 97883.39, flops:102.73, batch-reuse:1
@ 5018 train 4.2537 , allloss: 4.2554, dt: 1336.44ms, fracRes: 0.3766, norm(attn): 0.2471, norm(output): 0.7109, norm(x): 0.5570, norm(y): 1.0162, norm:1.0912, tok/sec: 98075.58, flops:102.93, batch-reuse:1
@ 5019 train 4.2523 , allloss: 4.2536, dt: 1318.91ms, fracRes: 0.3777, norm(attn): 0.2432, norm(output): 0.7070, norm(x): 0.5557, norm(y): 1.0163, norm:1.2447, tok/sec: 99378.66, flops:104.30, batch-reuse:1
@ 5020 train 4.2545 , allloss: 4.2557, dt: 1288.48ms, fracRes: 0.3786, norm(attn): 0.2412, norm(output): 0.7070, norm(x): 0.5549, norm(y): 1.0162, norm:1.0500, tok/sec: 101725.80, flops:106.76, batch-reuse:1
@ 5021 train 4.2565 , allloss: 4.2576, dt: 1329.87ms, fracRes: 0.3794, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5567, norm(y): 1.0161, norm:1.2080, tok/sec: 98559.71, flops:103.44, batch-reuse:1
@ 5022 train 4.3105 , allloss: 4.3113, dt: 1336.20ms, fracRes: 0.3808, norm(attn): 0.2422, norm(output): 0.7070, norm(x): 0.5575, norm(y): 1.0161, norm:1.1668, tok/sec: 98093.33, flops:102.95, batch-reuse:1
@ 5023 train 4.3225 , allloss: 4.3242, dt: 1314.25ms, fracRes: 0.3813, norm(attn): 0.2402, norm(output): 0.7148, norm(x): 0.5588, norm(y): 1.0161, norm:1.1621, tok/sec: 99731.50, flops:104.67, batch-reuse:1
@ 5024 train 4.3173 , allloss: 4.3182, dt: 1327.92ms, fracRes: 0.3823, norm(attn): 0.2383, norm(output): 0.7188, norm(x): 0.5579, norm(y): 1.0162, norm:1.1106, tok/sec: 98704.39, flops:103.59, batch-reuse:1
@ 5025 train 4.2485 , allloss: 4.2493, dt: 1313.28ms, fracRes: 0.3804, norm(attn): 0.2412, norm(output): 0.7070, norm(x): 0.5565, norm(y): 1.0162, norm:1.2069, tok/sec: 99805.21, flops:104.75, batch-reuse:1
@ 5026 train 4.2396 , allloss: 4.2407, dt: 1309.23ms, fracRes: 0.3789, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5602, norm(y): 1.0161, norm:1.0463, tok/sec: 100113.95, flops:105.07, batch-reuse:1
@ 5027 train 4.2047 , allloss: 4.2055, dt: 1300.62ms, fracRes: 0.3802, norm(attn): 0.2422, norm(output): 0.7227, norm(x): 0.5632, norm(y): 1.0162, norm:1.2075, tok/sec: 100776.20, flops:105.77, batch-reuse:1
@ 5028 train 4.2559 , allloss: 4.2567, dt: 1288.72ms, fracRes: 0.3807, norm(attn): 0.2402, norm(output): 0.7109, norm(x): 0.5566, norm(y): 1.0163, norm:1.2568, tok/sec: 101707.28, flops:106.74, batch-reuse:1
@ 5029 train 4.2163 , allloss: 4.2180, dt: 1300.21ms, fracRes: 0.3809, norm(attn): 0.2461, norm(output): 0.7070, norm(x): 0.5555, norm(y): 1.0162, norm:1.1115, tok/sec: 100808.42, flops:105.80, batch-reuse:1
@ 5030 train 4.2766 , allloss: 4.2789, dt: 1308.33ms, fracRes: 0.3794, norm(attn): 0.2471, norm(output): 0.7109, norm(x): 0.5587, norm(y): 1.0161, norm:1.0415, tok/sec: 100182.62, flops:105.14, batch-reuse:1
@ 5031 train 4.2776 , allloss: 4.2796, dt: 1305.83ms, fracRes: 0.3806, norm(attn): 0.2393, norm(output): 0.7109, norm(x): 0.5598, norm(y): 1.0162, norm:1.1492, tok/sec: 100374.57, flops:105.34, batch-reuse:1
@ 5032 train 4.1892 , allloss: 4.1903, dt: 1314.32ms, fracRes: 0.3803, norm(attn): 0.2422, norm(output): 0.7188, norm(x): 0.5581, norm(y): 1.0162, norm:1.2299, tok/sec: 99725.89, flops:104.66, batch-reuse:1
@ 5033 train 4.1523 , allloss: 4.1528, dt: 1341.25ms, fracRes: 0.3797, norm(attn): 0.2451, norm(output): 0.7188, norm(x): 0.5615, norm(y): 1.0162, norm:1.0879, tok/sec: 97723.89, flops:102.56, batch-reuse:1
@ 5034 train 4.2860 , allloss: 4.2870, dt: 1299.60ms, fracRes: 0.3797, norm(attn): 0.2402, norm(output): 0.7188, norm(x): 0.5610, norm(y): 1.0162, norm:1.1120, tok/sec: 100855.75, flops:105.85, batch-reuse:1
@ 5035 train 4.5238 , allloss: 4.5249, dt: 1321.55ms, fracRes: 0.3812, norm(attn): 0.2402, norm(output): 0.7188, norm(x): 0.5621, norm(y): 1.0162, norm:1.3171, tok/sec: 99180.53, flops:104.09, batch-reuse:1
@ 5036 train 4.2008 , allloss: 4.2015, dt: 1308.08ms, fracRes: 0.3804, norm(attn): 0.2373, norm(output): 0.7266, norm(x): 0.5571, norm(y): 1.0162, norm:1.3693, tok/sec: 100201.53, flops:105.16, batch-reuse:1
@ 5037 train 4.2880 , allloss: 4.2889, dt: 1291.54ms, fracRes: 0.3791, norm(attn): 0.2441, norm(output): 0.7109, norm(x): 0.5599, norm(y): 1.0162, norm:1.1833, tok/sec: 101485.17, flops:106.51, batch-reuse:1
@ 5038 train 4.2576 , allloss: 4.2583, dt: 1290.10ms, fracRes: 0.3783, norm(attn): 0.2441, norm(output): 0.7070, norm(x): 0.5586, norm(y): 1.0161, norm:1.1410, tok/sec: 101598.32, flops:106.63, batch-reuse:1
@ 5039 train 4.2246 , allloss: 4.2255, dt: 1320.58ms, fracRes: 0.3801, norm(attn): 0.2432, norm(output): 0.7148, norm(x): 0.5592, norm(y): 1.0162, norm:1.2198, tok/sec: 99253.11, flops:104.17, batch-reuse:1
@ 5040 train 4.3272 , allloss: 4.3281, dt: 1309.43ms, fracRes: 0.3809, norm(attn): 0.2393, norm(output): 0.7070, norm(x): 0.5552, norm(y): 1.0162, norm:1.1203, tok/sec: 100098.32, flops:105.06, batch-reuse:1
@ 5041 train 4.3007 , allloss: 4.3015, dt: 1299.31ms, fracRes: 0.3806, norm(attn): 0.2422, norm(output): 0.7070, norm(x): 0.5572, norm(y): 1.0162, norm:1.1343, tok/sec: 100878.01, flops:105.87, batch-reuse:1
@ 5042 train 4.4290 , allloss: 4.4298, dt: 1316.69ms, fracRes: 0.3806, norm(attn): 0.2402, norm(output): 0.7148, norm(x): 0.5614, norm(y): 1.0162, norm:1.0773, tok/sec: 99546.43, flops:104.48, batch-reuse:1
@ 5043 train 4.2244 , allloss: 4.2251, dt: 1290.09ms, fracRes: 0.3814, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5606, norm(y): 1.0163, norm:1.5774, tok/sec: 101598.84, flops:106.63, batch-reuse:1
@ 5044 train 4.2119 , allloss: 4.2125, dt: 1313.15ms, fracRes: 0.3814, norm(attn): 0.2412, norm(output): 0.7188, norm(x): 0.5581, norm(y): 1.0163, norm:1.1509, tok/sec: 99814.86, flops:104.76, batch-reuse:1
@ 5045 train 4.1601 , allloss: 4.1610, dt: 1347.39ms, fracRes: 0.3808, norm(attn): 0.2432, norm(output): 0.7188, norm(x): 0.5587, norm(y): 1.0163, norm:1.2105, tok/sec: 97278.60, flops:102.10, batch-reuse:1
@ 5046 train 4.3229 , allloss: 4.3238, dt: 1323.87ms, fracRes: 0.3798, norm(attn): 0.2422, norm(output): 0.7109, norm(x): 0.5591, norm(y): 1.0161, norm:1.0820, tok/sec: 99006.94, flops:103.91, batch-reuse:1
@ 5047 train 4.2747 , allloss: 4.2757, dt: 1295.12ms, fracRes: 0.3800, norm(attn): 0.2461, norm(output): 0.7070, norm(x): 0.5565, norm(y): 1.0161, norm:1.0077, tok/sec: 101204.32, flops:106.22, batch-reuse:1
@ 5048 train 4.1319 , allloss: 4.1331, dt: 1303.68ms, fracRes: 0.3811, norm(attn): 0.2461, norm(output): 0.7070, norm(x): 0.5548, norm(y): 1.0163, norm:1.0581, tok/sec: 100540.31, flops:105.52, batch-reuse:1
@ 5049 train 4.1932 , allloss: 4.1945, dt: 1329.51ms, fracRes: 0.3805, norm(attn): 0.2441, norm(output): 0.7188, norm(x): 0.5555, norm(y): 1.0163, norm:1.1639, tok/sec: 98586.47, flops:103.47, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1602,     0.4102,     0.4297,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0084,     0.1348,     0.3555,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1699,     0.0220,     0.7227,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0266,     0.2617,     0.1611,     0.2578,     0.1592,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0126,     0.1719,     0.0176,     0.2002,     0.3750,     0.1885,     0.0330,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0007,     0.0129,     0.0001,     0.0006,     0.0021,     0.0369,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.2871,     0.0640,     0.3203,     0.0337,     0.1641,     0.0427,     0.0250,     0.0618,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0114,     0.1367,     0.1387,     0.2021,     0.0388,     0.1348,     0.1572,     0.0547,     0.1084,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0791,     0.0029,     0.7773,     0.0165,     0.0148,     0.0010,     0.0001,     0.0437,     0.0010,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2578,     0.0381,     0.0806,     0.0369,     0.0155,     0.0986,     0.0918,     0.2559,     0.0167,     0.0486,     0.0226,     0.0376,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.0012,     0.0041,     0.0004,     0.0030,     0.0028,     0.0203,     0.0354,     0.0012,     0.0063,     0.0010,     0.0005,     0.0713,     0.0000,     0.0000],
        [    0.0024,     0.1846,     0.0510,     0.2266,     0.0300,     0.0977,     0.0291,     0.0283,     0.0610,     0.0165,     0.0608,     0.1553,     0.0079,     0.0483,     0.0000],
        [    0.0016,     0.1196,     0.0723,     0.1895,     0.0527,     0.0850,     0.0400,     0.0134,     0.0464,     0.0129,     0.0933,     0.1089,     0.0083,     0.0388,     0.1172]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0018, -0.0128,  0.0450,  ...,  0.0027,  0.0082,  0.0236],
        [ 0.0218, -0.0022,  0.0017,  ..., -0.0025,  0.0285,  0.0138],
        [-0.0343,  0.0126, -0.0104,  ..., -0.0294, -0.0106,  0.0116],
        ...,
        [-0.0377,  0.0081, -0.0638,  ...,  0.0110, -0.0158, -0.0183],
        [ 0.0009, -0.0125,  0.0081,  ...,  0.0404, -0.0163,  0.0095],
        [-0.0286,  0.0054, -0.0316,  ...,  0.0007, -0.0032,  0.0161]], device='cuda:0', requires_grad=True)
K: tensor([     0.0209,      0.1074,     -1.6094,      1.4375,     -0.9883,     -0.0044,     -1.5078,      0.5859,     -1.4141,     -0.2080,     -1.3750,     -0.1367,     -0.0366,     -1.7812,     -1.2969,      1.4688,     -0.7734,      1.2891,     -0.3809,     -0.8555,      0.6250,     -1.3438,
            -1.8281,      1.5000,      0.2598,      0.0002,      1.1719,     -0.4414,     -1.0000,      1.0156,     -0.2539,      0.2246,      0.9062,     -0.4141,      0.5625,     -0.2871,     -0.3203,      0.8594,     -1.6172,     -0.5625,     -1.0078,     -0.7148,      0.8516,     -0.4199,
            -1.6016,      0.6562,      0.3008,      0.9648,      0.2773,      0.4473,     -0.7930,      0.6172,      0.2012,      2.7812,      0.2891,     -0.4668,      1.4219,     -0.0933,      1.2266,     -0.3750,     -0.5938,      1.3594,     -0.7773,      1.0703], device='cuda:0',
       dtype=torch.bfloat16)
Qweights
tensor([[-0.0171,  0.0179, -0.0340,  ...,  0.0164,  0.0309,  0.0091],
        [ 0.0162, -0.0267, -0.0353,  ..., -0.0018,  0.0320,  0.0274],
        [-0.0021,  0.0240,  0.0366,  ..., -0.0020,  0.0093, -0.0352],
        ...,
        [ 0.0181,  0.0109,  0.0366,  ...,  0.0037,  0.0157, -0.0313],
        [ 0.0088, -0.0220, -0.0347,  ...,  0.0215, -0.0179,  0.0011],
        [ 0.0221, -0.0091,  0.0290,  ..., -0.0109, -0.0458, -0.0278]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.5742, -0.4102,  0.0237,  0.0762, -1.0156,  0.5859, -1.3828,  0.3066, -1.6797, -0.5742, -0.5898, -0.6602,  0.4414, -0.4258, -1.0625,  0.9570, -0.9336,  0.7930,  0.0786, -1.1875, -0.0549, -0.0688, -1.1875,  1.5781, -0.6367, -1.3203,  1.5156,  1.0078, -0.6094,  0.2637, -0.6016,  0.9297,
         0.4121, -0.5508,  0.6992,  0.1572, -0.4062,  0.6758, -1.2031,  0.0889, -0.4395, -1.0547,  0.2227, -0.4336, -0.7383, -0.2871,  0.5156,  0.1040, -0.5508,  0.0703, -0.8359,  0.8438,  0.5430,  1.5938,  0.4863, -0.7734,  0.4023, -0.5352,  0.9102,  1.0859, -0.1270, -0.2871,  0.1777,  1.0078],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,      5.2188,      2.8125,      5.3438,      3.1406,      4.6562,      4.2188,      1.9062,      3.2188,      1.1484,      3.9531,      4.3125,      1.8281,      3.0625,      4.3125],
        [     0.0000,      0.9375,      0.9883,      1.0625,     -0.4941,      1.2578,      1.4531,      1.1797,     -0.3066,     -0.8633,      0.1094,      0.5273,      1.0703,     -0.3809,      0.7578],
        [     0.0000,      2.7812,      3.7500,      4.0938,      0.5352,      1.8594,      1.9453,      1.9219,      1.4922,      1.5000,      1.1953,      3.1094,      2.2188,      1.3984,      2.1875],
        [     0.0000,      8.8750,      6.8125,     10.3125,      8.1250,      7.6875,      6.6562,      3.2188,      8.2500,      5.5938,      9.3750,      9.6875,      3.0000,      8.0000,      7.9062],
        [     0.0000,      2.2812,      1.7969,      2.2656,      1.7891,      1.6094,      1.6641,      0.7148,      1.5938,      0.5703,      2.0781,      2.0625,     -0.0491,      1.7734,      2.2969],
        [     0.0000,      2.6094,      0.3301,      2.7656,      3.3906,      2.7031,      0.9609,      0.6953,      2.9375,      1.1875,      3.6719,      2.1406,     -0.5664,      2.5938,      2.3438],
        [     0.0000,     -7.1875,     -4.2500,     -9.0625,     -7.2812,     -6.0625,     -3.2031,     -3.1094,     -7.7500,     -5.2812,     -8.3125,     -8.1875,     -2.4219,     -6.9375,     -5.8750],
        [     0.0000,      5.0312,      3.5156,      5.1250,      2.8750,      4.4688,      3.1250,      2.5781,      3.4844,      2.5312,      4.0938,      5.2500,      1.5781,      3.4375,      4.4062],
        [     0.0000,      2.4844,      2.5000,      2.8750,      1.2266,      2.4688,      2.6250,      1.5703,      2.2500,      0.4141,      2.1094,      2.5469,      1.4141,      1.8594,      2.7812],
        [     0.0000,     12.8750,      9.5625,     15.1250,     11.3125,     11.1875,      8.4375,      5.8125,     12.2500,      8.5000,     12.6875,     13.9375,      4.7188,     11.3125,     10.9375],
        [     0.0000,     -1.9062,     -1.1562,     -1.9375,     -2.8125,     -0.9570,     -1.0312,     -0.0063,     -2.7344,     -1.6641,     -2.4375,     -1.9219,      0.2354,     -2.7500,     -1.8125],
        [     0.0000,     -6.5625,     -5.3438,     -7.6875,     -5.6562,     -5.7188,     -3.7344,     -3.1875,     -6.5625,     -4.9062,     -6.7500,     -7.3438,     -2.4844,     -6.3750,     -5.0625],
        [     0.0000,      4.3438,      3.0469,      4.5312,      2.5156,      3.6875,      2.4844,      2.4531,      3.2344,      1.9141,      3.2188,      4.1562,      1.1797,      2.9844,      4.5000],
        [     0.0000,      4.3125,      3.8125,      4.7812,      3.5000,      3.9844,      3.2188,      2.1406,      3.3750,      2.0938,      4.0625,      4.2188,      1.6484,      3.2031,      4.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3388],
        [0.3604],
        [0.2377],
        [0.2602],
        [0.3116],
        [0.1612],
        [0.1980],
        [0.0974],
        [0.1081],
        [0.0376],
        [0.1501],
        [0.1673],
        [0.0681],
        [0.0546]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1592,     0.0020,     0.7773,     0.0605,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0007,     0.0026,     0.0004,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0004,     0.0010,     0.0005,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9609,     0.0040,     0.0288,     0.0047,     0.0002,     0.0002,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2402,     0.0038,     0.7148,     0.0320,     0.0018,     0.0012,     0.0022,     0.0036,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0004,     0.0007,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0004,     0.0005,     0.0000,     0.0001,     0.0002,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0012,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0006,     0.0000,     0.0000,     0.0000],
        [    0.5312,     0.0034,     0.2334,     0.0540,     0.0002,     0.0029,     0.0006,     0.0012,     0.0011,     0.0238,     0.0002,     0.1475,     0.0015,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0030, -0.0160,  0.0234,  ..., -0.0088, -0.0222, -0.0096],
        [-0.0261,  0.0199,  0.0065,  ...,  0.0076,  0.0198,  0.0066],
        [-0.0022,  0.0260,  0.0046,  ..., -0.0066, -0.0419,  0.0087],
        ...,
        [ 0.0258, -0.0436, -0.0205,  ...,  0.0103,  0.0095,  0.0053],
        [-0.0480, -0.0379,  0.0170,  ...,  0.0475, -0.0053,  0.0086],
        [ 0.0351, -0.0029,  0.0356,  ...,  0.0613,  0.0150,  0.0459]], device='cuda:0', requires_grad=True)
K: tensor([-1.8906,  2.6875,  3.8281, -3.0156, -1.9609, -2.8906,  0.3613,  1.3672,  5.2500,  3.6562, -1.8359, -2.2812,  3.4844,  0.1455,  0.5234,  4.4062, -1.7812, -5.1250,  3.0000,  2.9375,  1.5547, -0.1787,  1.8828, -2.2344,  3.7656, -4.0938, -3.6719,  3.5938,  0.4883, -0.3848,  2.0781,  1.0000,
         0.7070,  4.3438, -1.4297,  3.0312,  1.9219,  0.3027, -1.7188, -0.4102, -0.4609, -2.6875,  2.9375, -2.1250, -0.9961, -0.2969, -1.4219, -2.0312, -2.0781,  2.8281,  0.1226, -0.7695, -0.8320, -2.8594,  3.8438, -1.6484,  0.8984, -2.2500, -1.7578,  3.4531,  2.8438,  0.6914,  1.9688, -1.7344],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0135,  0.0434,  0.0127,  ...,  0.0175,  0.0023,  0.0394],
        [ 0.0126, -0.0281,  0.0199,  ...,  0.0487, -0.0211,  0.0058],
        [-0.0157,  0.0075, -0.0131,  ..., -0.0118, -0.0216,  0.0014],
        ...,
        [-0.0411,  0.0107,  0.0290,  ..., -0.0092,  0.0137, -0.0043],
        [ 0.0319, -0.0125, -0.0094,  ..., -0.0210, -0.0221,  0.0343],
        [ 0.0036,  0.0089, -0.0350,  ...,  0.0074, -0.0122, -0.0136]], device='cuda:0', requires_grad=True)
Q: tensor([-0.6016,  0.5508, -0.0059, -0.1582, -0.1953,  0.9688, -1.3594,  0.2461,  0.2871, -2.1719,  0.9258,  2.2969, -0.4590, -0.4277, -0.9805, -1.3125,  0.4277,  0.7617, -1.4297,  0.0654,  0.2051,  0.6250, -0.0231,  0.9805,  0.4102,  1.1328,  0.3945, -0.4160, -1.1406, -0.8164,  1.0391, -0.3965,
        -1.5781, -0.2988, -0.3535, -0.5898,  1.1797, -0.6016,  1.5078, -0.4180,  1.9766,  1.5703, -0.2891,  2.1094, -1.5859, -0.5664,  0.2676,  1.5078,  2.7188, -1.0859,  0.7656,  0.2930,  0.0522,  2.5781, -0.3867,  0.8047,  1.3203,  0.5742,  0.9688, -0.0977, -0.8125, -0.1650, -2.1875,  0.9414],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.0938,  -3.8281,  -5.5938,  -5.8438, -10.0000,  -4.9375,  -6.1875,  -7.0938,  -7.7500,  -7.9062,  -5.2188,  -3.9688,  -6.7188,  -4.5000],
        [  0.0000,  -8.6250,  -6.4062,  -7.8750,  -8.6875, -12.3125, -11.0000, -11.9375, -13.3125,  -9.3125, -12.3750,  -8.2500,  -9.9375, -13.1875,  -9.9375],
        [  0.0000,  -4.4062,   1.5859,  -0.9688,  -2.5625,  -4.0312,  -3.3594,  -3.5469,  -4.7188,  -3.2344,  -5.3750,  -1.3281,  -2.8281,  -3.7031,   0.4492],
        [  0.0000,  -7.2500,  -5.9375,  -7.7188,  -8.8125,  -8.4375,  -8.1250,  -7.5312,  -8.5625,  -8.2500, -10.5000,  -5.7812,  -8.2500,  -8.0625,  -7.6250],
        [  0.0000,  -7.7500,  -6.9062,  -7.6875,  -7.7812, -12.5000,  -7.8438,  -8.0625,  -8.8125,  -9.3750, -10.4375,  -5.3438,  -7.1875,  -8.4375,  -7.3125],
        [  0.0000,  -5.4688,  -3.5000,  -5.3125,  -8.4375,  -8.3125,  -6.3750,  -6.5625,  -7.1875,  -5.6562,  -9.3750,  -4.3438,  -6.3125,  -6.9375,  -6.7188],
        [  0.0000,  -4.1562,   1.0938,  -2.0156,  -4.8750,  -5.2500,  -4.6875,  -4.1875,  -3.7656,  -0.7656,  -6.0312,  -0.1816,  -3.7812,  -2.9844,  -1.1250],
        [  0.0000, -13.3125,  -9.5000, -13.0000, -12.6875, -16.2500, -12.0625, -11.1875, -14.5625, -13.6250, -15.1875, -13.0000, -10.4375, -14.0625, -13.0000],
        [  0.0000,  -9.0625,  -7.9375,  -7.2188, -10.3125, -10.5000,  -9.8125,  -9.4375, -10.0000,  -7.7188, -10.6875,  -7.0625,  -8.8750,  -9.6875,  -7.3125],
        [  0.0000,  -9.6250,  -8.4375,  -7.9375,  -7.5312, -12.3125,  -9.6250,  -8.5000,  -8.8125,  -9.5625, -10.3750,  -5.1875,  -7.6562,  -8.3750,  -9.6875],
        [  0.0000,  -9.7500,  -6.7500,  -8.3125, -11.1250, -13.1250, -12.3125, -11.5000, -13.5625,  -9.4375, -13.4375,  -7.4375, -11.2500, -13.1875, -11.3125],
        [  0.0000,  -5.0312,  -0.8203,  -2.2812,  -7.6875,  -5.2188,  -6.7188,  -6.0938,  -6.1875,  -3.0938,  -8.0625,  -1.2812,  -5.8750,  -5.6875,  -2.6719],
        [  0.0000, -14.1875, -10.6250, -14.1250, -13.8125, -17.1250, -13.3125, -12.0625, -15.9375, -14.6875, -16.3750, -14.1250, -11.6875, -15.5000, -14.5625],
        [  0.0000, -11.9375, -10.0000,  -9.9375, -12.4375, -15.0625, -12.8125, -13.0625, -14.3750, -13.2500, -14.4375, -11.9375, -12.3750, -14.3125, -10.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6460],
        [0.5748],
        [0.4732],
        [0.5191],
        [0.5877],
        [0.5820],
        [0.3907],
        [0.6408],
        [0.3908],
        [0.5612],
        [0.4722],
        [0.4547],
        [0.6217],
        [0.6314]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4355,     0.0227,     0.0742,     0.0021,     0.0006,     0.4648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1235,     0.0457,     0.0430,     0.0012,     0.0010,     0.7031,     0.0820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5664,     0.0104,     0.0112,     0.0017,     0.0019,     0.3418,     0.0222,     0.0269,     0.0154,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3438,     0.0265,     0.0134,     0.0012,     0.0035,     0.4141,     0.0659,     0.0294,     0.0781,     0.0183,     0.0041,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7148,     0.0041,     0.0055,     0.0007,     0.0009,     0.1904,     0.0099,     0.0100,     0.0083,     0.0120,     0.0006,     0.0080,     0.0247,     0.0084,     0.0000],
        [    0.8320,     0.0009,     0.0005,     0.0001,     0.0002,     0.1240,     0.0023,     0.0011,     0.0159,     0.0014,     0.0002,     0.0003,     0.0030,     0.0142,     0.0047]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0026,  0.0197, -0.0038,  ..., -0.0142,  0.0103,  0.0234],
        [-0.0387,  0.0067,  0.0027,  ...,  0.0134,  0.0274,  0.0073],
        [-0.0021, -0.0156, -0.0063,  ...,  0.0072,  0.0185,  0.0041],
        ...,
        [-0.0013, -0.0062, -0.0235,  ...,  0.0343,  0.0092, -0.0155],
        [-0.0079,  0.0218, -0.0306,  ...,  0.0360,  0.0106,  0.0009],
        [ 0.0143, -0.0087,  0.0119,  ..., -0.0678, -0.0285, -0.0052]], device='cuda:0', requires_grad=True)
K: tensor([-0.3828, -1.8516, -0.0188, -1.5000, -1.4609,  1.9531,  1.0781, -0.5039, -2.1875,  1.4688,  0.1167, -1.6719, -2.6094, -0.5938,  1.2891,  2.5781, -1.2812, -1.2812,  0.6758, -3.0781, -2.2656, -1.0156, -2.2969,  2.2500, -1.1797,  1.4297,  1.0938,  2.4844,  1.9766, -1.7812, -1.3594,  1.8047,
        -1.1953,  0.8984, -0.3711,  1.9453, -1.0938,  0.0654, -1.1016,  2.0156, -0.0933, -1.3906,  2.0781,  1.9609, -0.9062, -2.2812, -0.7773,  2.1094, -1.7422, -1.7188, -0.5625, -2.6094, -3.1719, -3.2344,  2.4844, -1.7500, -1.8125,  1.0859,  2.0469, -1.5156, -2.4219,  1.9141,  3.2344, -2.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0070, -0.0168,  0.0257,  ...,  0.0142, -0.0171,  0.0152],
        [-0.0125, -0.0126,  0.0311,  ..., -0.0080, -0.0290, -0.0268],
        [-0.0257, -0.0100, -0.0090,  ..., -0.0470, -0.0666, -0.0624],
        ...,
        [-0.0260, -0.0002,  0.0414,  ...,  0.0043, -0.0386, -0.0370],
        [ 0.0227,  0.0128, -0.0159,  ..., -0.0619, -0.0185,  0.0122],
        [ 0.0250, -0.0017,  0.0021,  ..., -0.0067,  0.0126,  0.0298]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.1543, -1.4453, -0.2891,  1.7969,  0.3926, -0.1064,  0.1797, -0.4668,  0.4902,  0.5977, -1.7578,  0.7695, -0.1846, -0.1768,  0.1807,  0.8281,  0.9102,  2.5312, -0.1650, -0.5977,  0.7188,  0.4883,  0.0664, -0.6758,  0.3125, -1.4688,  0.0591,  0.2344, -0.0554,  0.3828,  0.0508, -0.2500,
         1.4062, -0.7305,  1.3984, -0.5391,  2.2656, -0.0811,  1.7344, -0.8711, -0.6875,  0.1357, -1.4375, -1.2422, -0.4375,  0.1875,  0.1553,  0.5586,  0.6367,  1.2891,  2.4688, -0.9531,  0.1865, -0.2285, -0.2793,  0.4395,  1.0469, -1.6016,  1.0234,  2.7031,  1.5234, -2.1094,  0.3809,  1.0000],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -6.9688,  -6.6250,  -9.4375,  -8.8125,  -3.2969,  -6.2188,  -7.1250,  -4.9062,  -7.1875,  -9.2500,  -8.4375,  -6.9062,  -5.1875,  -6.3125],
        [  0.0000, -11.3125, -10.6250, -13.3125, -11.7500,  -7.4062, -10.6250, -11.1875,  -8.0625,  -9.5625, -12.0000, -12.0625,  -8.1875,  -8.3125, -10.3125],
        [  0.0000, -14.5000, -13.7500, -16.7500, -14.4375,  -8.5625, -12.6250, -13.8750, -10.1875, -12.9375, -15.6875, -14.6875, -10.9375, -10.5625, -12.7500],
        [  0.0000, -10.8750,  -9.6875, -12.6875, -11.5000,  -6.8125,  -9.1250, -10.3750,  -8.1875, -10.2500, -12.1250, -11.3125,  -9.1875,  -8.5000,  -8.6875],
        [  0.0000,  -2.9531,  -1.7656,  -5.3438,  -6.5625,   0.0640,  -2.6875,  -1.5781,  -3.5000,  -2.5312,  -6.3438,  -2.9688,  -1.0859,  -3.3438,  -1.9453],
        [  0.0000,  -0.9961,  -1.0547,  -4.6250,  -4.8125,   1.7422,  -0.4062,  -0.1885,  -1.0938,  -1.4375,  -3.6250,  -3.1250,  -0.9492,  -1.0625,  -0.9609],
        [  0.0000, -14.0625, -12.0000, -16.5000, -16.2500,  -7.8750, -13.0000, -13.8125, -11.4375, -12.8750, -17.0000, -15.7500, -11.6875, -11.8750, -14.0000],
        [  0.0000,  -4.0000,  -3.9219,  -5.8125,  -5.6875,  -0.5039,  -3.2344,  -3.0469,  -3.6094,  -3.0781,  -5.9688,  -3.3438,  -2.4375,  -3.5469,  -2.2031],
        [  0.0000, -14.0000, -11.6875, -15.8125, -15.0000,  -9.3125, -12.5625, -13.1250, -11.0625, -13.5625, -15.7500, -15.8750, -11.1250, -11.5000, -13.1250],
        [  0.0000,  -2.5625,  -3.2500,  -5.6562,  -4.5938,   0.1846,  -1.6484,  -2.4531,  -1.4844,  -2.9375,  -4.4375,  -4.1562,  -2.7969,  -1.5391,  -1.9219],
        [  0.0000, -15.7500, -14.3750, -16.7500, -14.5625, -10.8750, -14.2500, -16.2500, -11.5625, -14.2500, -16.1250, -15.8750, -12.8125, -12.0000, -13.6875],
        [  0.0000, -15.7500, -13.4375, -16.7500, -16.3750, -10.4375, -14.8750, -16.1250, -12.2500, -14.9375, -17.6250, -17.5000, -14.3750, -12.8125, -14.9375],
        [  0.0000,  -5.1562,  -4.8750,  -6.9375,  -6.6875,  -1.3281,  -4.2812,  -4.2812,  -4.4688,  -4.0938,  -7.0625,  -4.5000,  -3.3750,  -4.4375,  -3.2188],
        [  0.0000,  -6.8125,  -7.3438,  -9.5625,  -8.1250,  -1.8984,  -5.9062,  -6.6562,  -3.9531,  -6.3750,  -8.2500,  -8.0625,  -5.6250,  -4.0625,  -5.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9873],
        [1.0000],
        [1.0000],
        [0.9984],
        [0.8667],
        [0.8393],
        [0.9967],
        [0.7974],
        [1.0000],
        [0.8596],
        [0.9987],
        [0.9951],
        [0.8259],
        [0.9216]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9453, 0.0532, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2031, 0.6719, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1196, 0.4355, 0.0403, 0.4043, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.4199, 0.0845, 0.1040, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.4258, 0.0977, 0.0703, 0.1982, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.0732, 0.0967, 0.0469, 0.0262, 0.0220, 0.0099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3496, 0.0884, 0.1084, 0.1328, 0.0559, 0.0449, 0.0099, 0.2090, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.1279, 0.1357, 0.1934, 0.0267, 0.0535, 0.0063, 0.1846, 0.0055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1826, 0.3320, 0.0427, 0.0532, 0.0598, 0.0178, 0.0134, 0.1147, 0.0557, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2656, 0.0771, 0.0295, 0.0381, 0.0383, 0.0304, 0.0074, 0.1855, 0.0442, 0.2480, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0564, 0.0850, 0.0078, 0.0776, 0.2910, 0.0422, 0.0181, 0.1138, 0.0442, 0.0359, 0.2080, 0.0197, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0640, 0.0339, 0.0332, 0.0364, 0.0574, 0.0103, 0.1543, 0.0366, 0.1030, 0.0249, 0.0713, 0.3145, 0.0000, 0.0000],
        [0.0913, 0.0786, 0.0498, 0.0854, 0.0309, 0.0708, 0.0097, 0.0547, 0.0086, 0.2754, 0.0500, 0.0859, 0.0952, 0.0132, 0.0000],
        [0.1172, 0.0645, 0.0249, 0.0542, 0.0342, 0.0435, 0.0283, 0.0479, 0.0203, 0.2471, 0.0302, 0.0486, 0.0454, 0.0175, 0.1758]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0114,  0.0418,  0.0069,  ...,  0.0254,  0.0433, -0.0420],
        [-0.0030, -0.0680,  0.0040,  ...,  0.0093, -0.0139,  0.0401],
        [ 0.0177,  0.0174, -0.0485,  ..., -0.0045, -0.0054,  0.0139],
        ...,
        [ 0.0012,  0.0048, -0.0208,  ..., -0.0197, -0.0474,  0.0141],
        [ 0.0028,  0.0201, -0.0295,  ..., -0.0386, -0.0059,  0.0096],
        [-0.0285, -0.0026, -0.0291,  ..., -0.0253, -0.0194, -0.0099]], device='cuda:0', requires_grad=True)
K: tensor([ 1.7812,  0.9648, -0.3281, -1.1406,  1.2188, -1.1250, -1.1250, -0.1875, -0.1807, -1.3125,  0.8164,  0.2891,  0.5977, -1.6953,  2.0938,  0.2383,  0.5938, -0.5977,  0.3457,  0.5039,  1.0859,  1.2344,  0.4805,  0.7461,  0.9258,  0.7930, -2.6094, -1.9297,  2.0625,  0.8398, -0.3398,  0.6406,
         0.1992, -0.2852, -0.9219, -1.7734,  0.7578,  0.8945,  0.2012, -2.3125,  0.7188, -0.1689,  0.1797,  0.4062,  2.3438,  0.3301,  0.5273,  1.3047,  0.6055,  0.1338,  1.0234, -1.7344,  0.5898,  0.5469,  0.6367,  0.6328, -0.2578,  0.4258, -1.9844, -0.2637, -0.3457,  0.1045, -0.8438,  0.6680],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0036, -0.0233, -0.0334,  ...,  0.0380, -0.0154, -0.0160],
        [-0.0306, -0.0408,  0.0182,  ..., -0.0427, -0.0154, -0.0582],
        [ 0.0219,  0.0026, -0.0206,  ...,  0.0554, -0.0071,  0.0204],
        ...,
        [-0.0164,  0.0269,  0.0003,  ...,  0.0094,  0.0114,  0.0033],
        [ 0.0212,  0.0082, -0.0030,  ..., -0.0119,  0.0092,  0.0184],
        [-0.0151,  0.0421, -0.0047,  ...,  0.0011, -0.0018,  0.0129]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.0962,  1.1641, -1.7266,  2.7188, -0.6211, -2.9844, -1.6094, -0.7461,  1.1328,  0.8438,  0.9844,  1.5000, -1.4219, -1.0391,  0.2812, -1.1016, -0.6172,  1.0312,  2.1719,  0.7617, -1.8359, -0.6211, -2.5000,  0.0300,  0.4688,  0.7422, -0.9258,  0.1416, -0.2031, -1.8594,  0.5820, -1.3516,
        -0.6211,  1.1562,  0.5977, -1.0703, -2.5625, -1.5703,  1.3438, -0.8867, -1.1328, -0.6211,  0.2832, -0.3301, -0.1631,  1.1016,  0.0144,  1.4453, -1.0859,  3.2500,  1.3281,  0.7656,  1.5234,  2.9375, -0.5078,  0.3887, -1.3125, -0.2832,  0.1113, -0.3945, -0.1670, -0.9844,  0.0806, -1.1016],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000, -2.8750, -3.1406, -3.3750, -3.6562, -3.9688, -3.7500, -3.2344, -4.4375, -2.5469, -4.0312, -2.4688, -2.2344, -4.7812, -2.2969],
        [ 0.0000,  1.1953, -0.4863,  1.5703,  2.7188,  0.0781,  0.7031,  0.0125,  0.2070, -1.8359,  0.2148, -2.0625,  0.8008, -0.6172, -1.0000],
        [ 0.0000,  1.2969, -1.0859,  1.2188,  3.1719,  1.1484,  0.5664, -0.3301,  1.0156, -0.3145,  0.0082, -1.8203,  1.2031,  0.0615,  0.3809],
        [ 0.0000,  0.6758, -0.9258, -0.7188, -0.1797, -0.1069, -1.8438,  0.7305, -0.9883,  0.9922, -1.6719,  0.4629,  1.0156, -2.1094,  0.5977],
        [ 0.0000,  1.8047,  0.3359,  0.0056,  1.0469,  0.6914,  0.4961,  1.9141,  0.8594,  0.4199,  0.2910, -0.3223,  0.6250, -0.1729,  0.4824],
        [ 0.0000, -2.2969, -2.0156, -2.7344, -3.3281, -3.5000, -4.2812, -0.8516, -3.4688, -0.8555, -4.9375, -0.3418, -1.1953, -4.8438, -0.3770],
        [ 0.0000, -1.3750, -1.1719, -0.9648, -1.8359, -2.0469, -3.5625, -0.5156, -2.8906, -0.2129, -2.8594, -0.3105,  0.2578, -3.1406,  0.2871],
        [ 0.0000, -0.7305, -0.6680, -0.3203, -2.2969, -1.6016, -3.7500, -0.3633, -3.8750,  0.9883, -2.4688,  0.5469, -0.0118, -3.8750,  0.3320],
        [ 0.0000,  0.6016, -1.4531, -1.2266, -1.1172, -2.3281, -2.6094, -0.4629, -1.1875, -0.3535,  1.7031,  0.6211,  1.0625, -0.9570, -0.3770],
        [ 0.0000, -1.2344, -2.2031, -1.9453, -1.9375, -2.1719, -3.5938, -0.3574, -1.7969, -0.0708, -2.0000,  1.1094,  0.5781, -1.9766, -0.2402],
        [ 0.0000,  0.4102, -1.9766,  0.3164,  1.6406, -0.2891, -1.1406,  0.7031, -0.2461, -0.4531,  1.3047, -1.0547,  2.7188, -0.3438, -0.2070],
        [ 0.0000,  0.0762, -0.5586, -0.5781, -0.4883, -0.0352, -1.7500,  0.9570, -0.4785,  0.5508, -0.8672,  0.1836,  1.6719,  0.1216,  1.5078],
        [ 0.0000, -0.1533, -0.6055, -0.0674, -1.0859, -0.2578, -2.2500, -0.5156, -2.3594,  1.1016, -0.6016, -0.0630,  0.0425, -1.9297,  0.5312],
        [ 0.0000, -0.5977, -1.5547, -0.7734, -1.2344, -0.9922, -1.4219, -0.8984, -1.7578,  0.7461, -1.3594, -0.8867, -0.9492, -1.9062,  0.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1728],
        [0.0305],
        [0.0292],
        [0.0297],
        [0.0163],
        [0.0892],
        [0.0411],
        [0.0262],
        [0.0221],
        [0.0315],
        [0.0128],
        [0.0115],
        [0.0103],
        [0.0216]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0114,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0586,     0.8828,     0.0593,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0101,     0.8984,     0.0308,     0.0615,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0070,     0.8633,     0.0483,     0.0131,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0083,     0.5391,     0.0476,     0.0270,     0.1855,     0.1934,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0238,     0.6445,     0.0693,     0.0090,     0.0659,     0.0120,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.5664,     0.0108,     0.0199,     0.0898,     0.0115,     0.2637,     0.0378,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0198,     0.2578,     0.0530,     0.0072,     0.0505,     0.0571,     0.1914,     0.1855,     0.1777,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0037,     0.4004,     0.0172,     0.0095,     0.0447,     0.0186,     0.1621,     0.0811,     0.1289,     0.1338,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0066,     0.0933,     0.0100,     0.0005,     0.0029,     0.0027,     0.0106,     0.0232,     0.0413,     0.7227,     0.0859,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0049,     0.2910,     0.0151,     0.0554,     0.1309,     0.0080,     0.1211,     0.0654,     0.2295,     0.0172,     0.0491,     0.0125,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.1797,     0.0181,     0.0090,     0.0679,     0.0028,     0.0981,     0.0106,     0.4668,     0.0228,     0.0244,     0.0398,     0.0583,     0.0000,     0.0000],
        [    0.0023,     0.0171,     0.0056,     0.0004,     0.0047,     0.0036,     0.0115,     0.0108,     0.0226,     0.8242,     0.0128,     0.0189,     0.0359,     0.0306,     0.0000],
        [    0.0017,     0.5703,     0.0177,     0.0103,     0.1094,     0.0124,     0.1289,     0.0376,     0.0320,     0.0157,     0.0059,     0.0084,     0.0064,     0.0103,     0.0317]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0306,  0.0305, -0.0129,  ..., -0.0245,  0.0098, -0.0371],
        [ 0.0363,  0.0129,  0.0435,  ..., -0.0719, -0.0217,  0.0057],
        [-0.0078, -0.0030,  0.0327,  ...,  0.0378,  0.0009, -0.0335],
        ...,
        [-0.0089,  0.0063, -0.0145,  ..., -0.0218, -0.0246,  0.0023],
        [ 0.0301, -0.0322,  0.0480,  ...,  0.0151, -0.0442,  0.0054],
        [-0.0404,  0.0357, -0.0011,  ..., -0.0170, -0.0013,  0.0077]], device='cuda:0', requires_grad=True)
K: tensor([-0.0952, -0.6719,  2.0781,  1.7109, -1.1406, -0.2314, -0.7930,  2.8281, -1.3594,  1.2266, -0.1040,  0.0486,  1.0234,  0.4980,  1.0703, -0.5000, -0.4180, -1.5234, -1.0625, -1.2109, -3.1875, -1.0156, -0.7461,  1.2578,  0.6758, -2.0156, -1.2031, -0.6992,  0.6602, -0.3770,  1.7500, -0.6055,
        -0.9805,  2.0625,  2.8594, -0.3262,  1.2344,  0.1211,  2.3750,  0.6523, -0.7422, -0.7539,  0.2441,  0.4727,  0.7891,  0.7070,  1.5625,  0.7852, -1.3984,  0.6172,  1.0156,  0.5547, -1.6250, -1.2969, -0.2891,  0.8945, -0.5820, -2.6094, -1.2109, -1.7656,  1.4844,  0.0149,  0.8086,  0.5742],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0033,  0.0329, -0.0165,  ...,  0.0026, -0.0012,  0.0228],
        [-0.0074, -0.0251,  0.0263,  ..., -0.0104, -0.0057,  0.0113],
        [-0.0042,  0.0643, -0.0129,  ...,  0.0252,  0.0046,  0.0106],
        ...,
        [-0.0002,  0.0290, -0.0091,  ...,  0.0083,  0.0171,  0.0162],
        [ 0.0153,  0.0206, -0.0034,  ...,  0.0236, -0.0256,  0.0354],
        [ 0.0418,  0.0364, -0.0320,  ...,  0.0173,  0.0129, -0.0270]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.7461,  0.4336,  0.0801,  1.8359, -0.3281,  0.1738, -0.4395,  1.4375, -0.1729, -2.5156, -2.4219, -0.2217,  0.5430, -0.5312, -1.2578, -1.0156, -1.5234, -0.0131, -0.4297,  0.4121, -0.7773, -1.7031,  0.9219, -0.0654,  0.3281, -0.3809,  0.4863, -0.5352,  0.2490, -1.2422,  3.9062,  1.3125,
        -0.1592,  1.2500, -1.1719,  0.1406,  0.7070,  0.6797,  0.6836,  2.6875, -1.7734, -0.4844,  0.0049,  0.1611,  1.6719, -0.2441,  1.0078,  0.4316,  0.6211, -0.2422, -0.6680,  0.2578,  0.3926, -0.7773, -0.2617,  0.8359, -0.6367,  0.5898,  0.1104,  0.5625,  0.0986,  1.5703,  0.1953,  1.9453],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  4.4688, -0.2021, -0.0645,  2.8594,  0.7109,  2.4844,  0.2598,  1.9531, -0.3184, -1.3438, -1.3516, -1.2422,  0.5547,  0.3359],
        [ 0.0000,  2.7188,  0.0140,  1.2891,  2.3125,  1.0859,  2.7344,  0.9961,  2.6719, -0.3789, -0.0796, -0.5469, -0.1113,  1.0938,  0.3848],
        [ 0.0000,  4.5000,  1.1172,  1.8125,  3.4688,  1.3906,  3.8281,  1.4922,  3.6406,  0.3887,  0.6406, -0.1196,  0.6250,  1.9375,  1.8594],
        [ 0.0000,  4.8125,  1.9297,  0.6289,  2.2969,  2.5938,  3.8906,  2.7344,  1.7891,  1.7188, -1.3750,  0.8008,  0.5117, -0.8438,  2.6250],
        [ 0.0000,  4.1875,  1.7422,  1.1797,  3.1094,  3.1406,  4.9375,  2.0000,  3.1875,  1.1484, -0.2715,  0.2217, -0.1641,  1.3438,  3.3281],
        [ 0.0000,  3.2969,  1.0703, -0.9688,  1.0156, -0.6836,  2.0000,  1.3125,  1.1328,  0.2393, -2.1719,  0.2441, -0.5234, -0.2598,  1.7812],
        [ 0.0000,  7.5312,  3.5625,  4.1875,  5.6875,  3.6250,  6.7500,  4.8125,  8.0625,  3.9531,  3.2969,  2.6562,  3.2969,  6.1250,  3.9375],
        [ 0.0000,  2.5625,  0.9844, -1.0156,  0.9336,  1.0625,  2.2656,  2.2344,  2.1875,  4.9375,  1.2969,  1.2031,  2.5312,  1.4766,  4.8125],
        [ 0.0000,  4.6875,  1.5234,  0.9297,  2.4844,  1.6016,  3.7656,  3.0781,  3.5469,  3.5781,  5.1562,  1.6562,  2.9062,  2.4688,  3.2031],
        [ 0.0000,  2.6562,  0.4219, -2.5312, -0.8125, -0.8945,  0.4766,  1.2656,  1.8438,  4.7188,  2.5781,  3.0781,  1.7266,  1.2500,  3.0000],
        [ 0.0000,  4.0938,  1.1250,  2.4219,  3.2812,  0.4863,  3.2031,  2.5781,  3.8438,  1.2500,  2.2969,  0.9297,  1.9219,  2.8594,  2.0156],
        [ 0.0000,  4.1562,  1.8516,  1.1562,  3.1719, -0.0295,  3.5469,  1.3125,  5.0938,  2.0781,  2.1562,  2.6406,  3.0156,  5.7812,  3.5938],
        [ 0.0000,  2.0156,  0.9102, -1.7891,  0.7305,  0.4531,  1.6250,  1.5625,  2.2969,  5.9062,  1.7344,  2.1250,  2.7656,  2.6094,  5.5000],
        [ 0.0000,  5.8125,  2.3281,  1.7891,  4.1562,  1.9766,  4.3125,  3.0781,  2.9219,  2.2188,  1.2344,  1.5859,  1.3125,  1.7891,  2.9219]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1702],
        [0.0994],
        [0.0187],
        [0.0641],
        [0.0238],
        [0.0654],
        [0.0123],
        [0.0083],
        [0.0087],
        [0.0190],
        [0.0155],
        [0.0132],
        [0.0055],
        [0.0107]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1089 a:0.1396,:0.2461 green:0.1011atoes:0.0708 are:0.3242 green:0.0771ery:0.1562)
ery
------
		( a:0.1396,:0.2461 green:0.1011atoes:0.0708 are:0.3242 green:0.0771ery:0.1562the:0.1748)
the world’s most important food source.
The most important food
@ 5050 train 4.1921 , allloss: 4.1930, dt: 1740.53ms, fracRes: 0.3797, norm(attn): 0.2422, norm(output): 0.7188, norm(x): 0.5587, norm(y): 1.0163, norm:1.1289, tok/sec: 75305.91, flops:79.03, batch-reuse:1
@ 5051 train 4.3753 , allloss: 4.3758, dt: 1334.33ms, fracRes: 0.3811, norm(attn): 0.2354, norm(output): 0.7227, norm(x): 0.5540, norm(y): 1.0163, norm:1.2309, tok/sec: 98230.55, flops:103.09, batch-reuse:1
@ 5052 train 4.2741 , allloss: 4.2751, dt: 1343.34ms, fracRes: 0.3807, norm(attn): 0.2393, norm(output): 0.7188, norm(x): 0.5545, norm(y): 1.0163, norm:1.0809, tok/sec: 97571.61, flops:102.40, batch-reuse:1
@ 5053 train 4.3020 , allloss: 4.3031, dt: 1330.88ms, fracRes: 0.3806, norm(attn): 0.2422, norm(output): 0.7070, norm(x): 0.5567, norm(y): 1.0162, norm:1.1171, tok/sec: 98485.45, flops:103.36, batch-reuse:1
@ 5054 train 4.2935 , allloss: 4.2945, dt: 1331.07ms, fracRes: 0.3808, norm(attn): 0.2402, norm(output): 0.7148, norm(x): 0.5571, norm(y): 1.0161, norm:0.9986, tok/sec: 98471.46, flops:103.35, batch-reuse:1
@ 5055 train 4.1913 , allloss: 4.1921, dt: 1294.30ms, fracRes: 0.3823, norm(attn): 0.2363, norm(output): 0.7148, norm(x): 0.5557, norm(y): 1.0163, norm:1.0626, tok/sec: 101269.01, flops:106.28, batch-reuse:1
@ 5056 train 4.2196 , allloss: 4.2201, dt: 1309.59ms, fracRes: 0.3816, norm(attn): 0.2373, norm(output): 0.7305, norm(x): 0.5616, norm(y): 1.0162, norm:1.1098, tok/sec: 100086.26, flops:105.04, batch-reuse:1
@ 5057 train 4.2681 , allloss: 4.2696, dt: 1311.70ms, fracRes: 0.3823, norm(attn): 0.2363, norm(output): 0.7383, norm(x): 0.5642, norm(y): 1.0163, norm:1.1524, tok/sec: 99925.12, flops:104.87, batch-reuse:1
@ 5058 train 4.3209 , allloss: 4.3220, dt: 1320.19ms, fracRes: 0.3810, norm(attn): 0.2363, norm(output): 0.7383, norm(x): 0.5654, norm(y): 1.0162, norm:1.1843, tok/sec: 99282.57, flops:104.20, batch-reuse:1
@ 5059 train 4.2638 , allloss: 4.2648, dt: 1337.10ms, fracRes: 0.3799, norm(attn): 0.2402, norm(output): 0.7305, norm(x): 0.5620, norm(y): 1.0162, norm:1.2272, tok/sec: 98026.76, flops:102.88, batch-reuse:1
@ 5060 train 4.2209 , allloss: 4.2215, dt: 1312.77ms, fracRes: 0.3797, norm(attn): 0.2373, norm(output): 0.7188, norm(x): 0.5597, norm(y): 1.0161, norm:0.9848, tok/sec: 99843.78, flops:104.79, batch-reuse:1
@ 5061 train 4.1215 , allloss: 4.1221, dt: 1306.49ms, fracRes: 0.3796, norm(attn): 0.2402, norm(output): 0.7227, norm(x): 0.5599, norm(y): 1.0161, norm:1.0440, tok/sec: 100323.72, flops:105.29, batch-reuse:1
@ 5062 train 4.2366 , allloss: 4.2370, dt: 1302.90ms, fracRes: 0.3788, norm(attn): 0.2383, norm(output): 0.7305, norm(x): 0.5635, norm(y): 1.0161, norm:1.1105, tok/sec: 100599.92, flops:105.58, batch-reuse:1
@ 5063 train 4.2598 , allloss: 4.2603, dt: 1315.92ms, fracRes: 0.3790, norm(attn): 0.2363, norm(output): 0.7344, norm(x): 0.5648, norm(y): 1.0162, norm:1.0451, tok/sec: 99605.03, flops:104.54, batch-reuse:1
@ 5064 train 4.2481 , allloss: 4.2504, dt: 1304.37ms, fracRes: 0.3794, norm(attn): 0.2373, norm(output): 0.7305, norm(x): 0.5637, norm(y): 1.0162, norm:1.0695, tok/sec: 100486.63, flops:105.46, batch-reuse:1
@ 5065 train 4.2462 , allloss: 4.2471, dt: 1300.25ms, fracRes: 0.3777, norm(attn): 0.2422, norm(output): 0.7188, norm(x): 0.5618, norm(y): 1.0161, norm:1.1128, tok/sec: 100805.19, flops:105.80, batch-reuse:1
@ 5066 train 4.2143 , allloss: 4.2150, dt: 1300.93ms, fracRes: 0.3782, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5591, norm(y): 1.0161, norm:1.1263, tok/sec: 100752.67, flops:105.74, batch-reuse:1
@ 5067 train 4.3379 , allloss: 4.3388, dt: 1296.20ms, fracRes: 0.3793, norm(attn): 0.2422, norm(output): 0.7148, norm(x): 0.5574, norm(y): 1.0162, norm:1.2196, tok/sec: 101120.16, flops:106.13, batch-reuse:1
@ 5068 train 4.1865 , allloss: 4.1874, dt: 1326.27ms, fracRes: 0.3783, norm(attn): 0.2432, norm(output): 0.7188, norm(x): 0.5615, norm(y): 1.0161, norm:1.0416, tok/sec: 98827.23, flops:103.72, batch-reuse:1
@ 5069 train 4.2035 , allloss: 4.2045, dt: 1284.41ms, fracRes: 0.3780, norm(attn): 0.2412, norm(output): 0.7227, norm(x): 0.5618, norm(y): 1.0160, norm:1.0248, tok/sec: 102048.73, flops:107.10, batch-reuse:1
@ 5070 train 4.2250 , allloss: 4.2257, dt: 1290.61ms, fracRes: 0.3796, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5620, norm(y): 1.0161, norm:1.0778, tok/sec: 101557.95, flops:106.59, batch-reuse:1
@ 5071 train 4.2654 , allloss: 4.2662, dt: 1302.28ms, fracRes: 0.3807, norm(attn): 0.2363, norm(output): 0.7188, norm(x): 0.5619, norm(y): 1.0162, norm:1.0152, tok/sec: 100647.75, flops:105.63, batch-reuse:1
@ 5072 train 4.2149 , allloss: 4.2161, dt: 1312.39ms, fracRes: 0.3821, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5651, norm(y): 1.0162, norm:1.0595, tok/sec: 99872.89, flops:104.82, batch-reuse:1
@ 5073 train 4.2263 , allloss: 4.2273, dt: 1327.41ms, fracRes: 0.3817, norm(attn): 0.2393, norm(output): 0.7305, norm(x): 0.5642, norm(y): 1.0163, norm:1.2497, tok/sec: 98742.70, flops:103.63, batch-reuse:1
@ 5074 train 4.2748 , allloss: 4.2756, dt: 1294.39ms, fracRes: 0.3815, norm(attn): 0.2383, norm(output): 0.7305, norm(x): 0.5617, norm(y): 1.0163, norm:1.3428, tok/sec: 101261.40, flops:106.28, batch-reuse:1
@ 5075 train 4.0919 , allloss: 4.0932, dt: 1313.43ms, fracRes: 0.3810, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5635, norm(y): 1.0163, norm:1.1126, tok/sec: 99793.37, flops:104.74, batch-reuse:1
@ 5076 train 4.2451 , allloss: 4.2460, dt: 1318.37ms, fracRes: 0.3783, norm(attn): 0.2471, norm(output): 0.7266, norm(x): 0.5615, norm(y): 1.0162, norm:1.2289, tok/sec: 99419.62, flops:104.34, batch-reuse:1
@ 5077 train 4.2251 , allloss: 4.2260, dt: 1343.41ms, fracRes: 0.3789, norm(attn): 0.2471, norm(output): 0.7227, norm(x): 0.5633, norm(y): 1.0162, norm:1.1828, tok/sec: 97566.90, flops:102.40, batch-reuse:1
@ 5078 train 4.2544 , allloss: 4.2558, dt: 1339.05ms, fracRes: 0.3791, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5596, norm(y): 1.0162, norm:1.1163, tok/sec: 97884.06, flops:102.73, batch-reuse:1
@ 5079 train 4.1998 , allloss: 4.2004, dt: 1338.25ms, fracRes: 0.3798, norm(attn): 0.2412, norm(output): 0.7188, norm(x): 0.5578, norm(y): 1.0162, norm:1.1924, tok/sec: 97942.63, flops:102.79, batch-reuse:1
@ 5080 train 4.1786 , allloss: 4.1790, dt: 1323.95ms, fracRes: 0.3788, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5575, norm(y): 1.0162, norm:1.0101, tok/sec: 99000.73, flops:103.90, batch-reuse:1
@ 5081 train 4.2576 , allloss: 4.2582, dt: 1326.03ms, fracRes: 0.3793, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5608, norm(y): 1.0162, norm:0.9289, tok/sec: 98845.14, flops:103.74, batch-reuse:1
@ 5082 train 4.1045 , allloss: 4.1053, dt: 1318.74ms, fracRes: 0.3797, norm(attn): 0.2412, norm(output): 0.7305, norm(x): 0.5617, norm(y): 1.0163, norm:1.0422, tok/sec: 99392.21, flops:104.31, batch-reuse:1
@ 5083 train 4.2582 , allloss: 4.2587, dt: 1333.44ms, fracRes: 0.3800, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5599, norm(y): 1.0162, norm:1.0221, tok/sec: 98295.82, flops:103.16, batch-reuse:1
@ 5084 train 4.1775 , allloss: 4.1782, dt: 1328.31ms, fracRes: 0.3785, norm(attn): 0.2422, norm(output): 0.7227, norm(x): 0.5584, norm(y): 1.0162, norm:1.1137, tok/sec: 98676.10, flops:103.56, batch-reuse:1
@ 5085 train 4.2334 , allloss: 4.2347, dt: 1336.95ms, fracRes: 0.3792, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5596, norm(y): 1.0162, norm:1.0215, tok/sec: 98037.82, flops:102.89, batch-reuse:1
@ 5086 train 4.3458 , allloss: 4.3464, dt: 1323.66ms, fracRes: 0.3795, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5606, norm(y): 1.0162, norm:1.0616, tok/sec: 99022.17, flops:103.93, batch-reuse:1
@ 5087 train 4.2779 , allloss: 4.2786, dt: 1344.80ms, fracRes: 0.3799, norm(attn): 0.2383, norm(output): 0.7266, norm(x): 0.5625, norm(y): 1.0162, norm:0.9970, tok/sec: 97466.04, flops:102.29, batch-reuse:1
@ 5088 train 4.2111 , allloss: 4.2115, dt: 1289.74ms, fracRes: 0.3794, norm(attn): 0.2383, norm(output): 0.7344, norm(x): 0.5627, norm(y): 1.0162, norm:1.0685, tok/sec: 101626.41, flops:106.66, batch-reuse:1
@ 5089 train 4.1330 , allloss: 4.1348, dt: 1324.09ms, fracRes: 0.3803, norm(attn): 0.2402, norm(output): 0.7305, norm(x): 0.5640, norm(y): 1.0163, norm:1.0363, tok/sec: 98990.32, flops:103.89, batch-reuse:1
@ 5090 train 4.2743 , allloss: 4.2748, dt: 1295.76ms, fracRes: 0.3785, norm(attn): 0.2422, norm(output): 0.7266, norm(x): 0.5614, norm(y): 1.0161, norm:1.0603, tok/sec: 101154.24, flops:106.16, batch-reuse:1
@ 5091 train 4.2128 , allloss: 4.2138, dt: 1310.46ms, fracRes: 0.3792, norm(attn): 0.2441, norm(output): 0.7188, norm(x): 0.5611, norm(y): 1.0161, norm:1.0578, tok/sec: 100019.56, flops:104.97, batch-reuse:1
@ 5092 train 4.2583 , allloss: 4.2595, dt: 1308.27ms, fracRes: 0.3780, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5649, norm(y): 1.0161, norm:1.0837, tok/sec: 100187.34, flops:105.15, batch-reuse:1
@ 5093 train 4.1840 , allloss: 4.1850, dt: 1318.10ms, fracRes: 0.3781, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5609, norm(y): 1.0162, norm:1.0816, tok/sec: 99440.03, flops:104.36, batch-reuse:1
@ 5094 train 4.2586 , allloss: 4.2593, dt: 1277.98ms, fracRes: 0.3782, norm(attn): 0.2393, norm(output): 0.7188, norm(x): 0.5591, norm(y): 1.0162, norm:0.9897, tok/sec: 102561.85, flops:107.64, batch-reuse:1
@ 5095 train 4.2632 , allloss: 4.2640, dt: 1312.71ms, fracRes: 0.3785, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5585, norm(y): 1.0162, norm:1.1497, tok/sec: 99848.60, flops:104.79, batch-reuse:1
@ 5096 train 4.1630 , allloss: 4.1638, dt: 1303.86ms, fracRes: 0.3787, norm(attn): 0.2441, norm(output): 0.7188, norm(x): 0.5611, norm(y): 1.0161, norm:0.9804, tok/sec: 100526.08, flops:105.50, batch-reuse:1
@ 5097 train 4.1659 , allloss: 4.1665, dt: 1312.65ms, fracRes: 0.3793, norm(attn): 0.2422, norm(output): 0.7266, norm(x): 0.5594, norm(y): 1.0161, norm:1.0005, tok/sec: 99853.14, flops:104.80, batch-reuse:1
@ 5098 train 4.2442 , allloss: 4.2451, dt: 1323.57ms, fracRes: 0.3794, norm(attn): 0.2402, norm(output): 0.7188, norm(x): 0.5587, norm(y): 1.0162, norm:1.0798, tok/sec: 99028.91, flops:103.93, batch-reuse:1
@ 5099 train 4.1425 , allloss: 4.1433, dt: 1301.55ms, fracRes: 0.3802, norm(attn): 0.2432, norm(output): 0.7227, norm(x): 0.5612, norm(y): 1.0162, norm:1.0745, tok/sec: 100704.50, flops:105.69, batch-reuse:1
@ 5100 train 4.2083 , allloss: 4.2095, dt: 1315.37ms, fracRes: 0.3811, norm(attn): 0.2402, norm(output): 0.7344, norm(x): 0.5649, norm(y): 1.0162, norm:1.1512, tok/sec: 99646.17, flops:104.58, batch-reuse:1
@ 5101 train 4.1642 , allloss: 4.1649, dt: 1303.38ms, fracRes: 0.3795, norm(attn): 0.2412, norm(output): 0.7305, norm(x): 0.5639, norm(y): 1.0161, norm:1.0422, tok/sec: 100562.98, flops:105.54, batch-reuse:1
@ 5102 train 4.2109 , allloss: 4.2117, dt: 1289.01ms, fracRes: 0.3796, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.5595, norm(y): 1.0161, norm:1.0349, tok/sec: 101684.29, flops:106.72, batch-reuse:1
@ 5103 train 4.2775 , allloss: 4.2788, dt: 1303.09ms, fracRes: 0.3788, norm(attn): 0.2471, norm(output): 0.7188, norm(x): 0.5608, norm(y): 1.0161, norm:1.0988, tok/sec: 100585.23, flops:105.57, batch-reuse:1
@ 5104 train 4.2600 , allloss: 4.2611, dt: 1310.21ms, fracRes: 0.3795, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5601, norm(y): 1.0161, norm:1.0293, tok/sec: 100039.22, flops:104.99, batch-reuse:1
@ 5105 train 4.1563 , allloss: 4.1569, dt: 1342.61ms, fracRes: 0.3792, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.5616, norm(y): 1.0161, norm:1.1186, tok/sec: 97625.08, flops:102.46, batch-reuse:1
@ 5106 train 4.2117 , allloss: 4.2126, dt: 1320.45ms, fracRes: 0.3811, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5596, norm(y): 1.0162, norm:1.0162, tok/sec: 99263.23, flops:104.18, batch-reuse:1
@ 5107 train 4.2009 , allloss: 4.2023, dt: 1346.74ms, fracRes: 0.3800, norm(attn): 0.2432, norm(output): 0.7148, norm(x): 0.5623, norm(y): 1.0162, norm:1.0772, tok/sec: 97325.53, flops:102.14, batch-reuse:1
@ 5108 train 4.1474 , allloss: 4.1521, dt: 1310.09ms, fracRes: 0.3778, norm(attn): 0.2461, norm(output): 0.7188, norm(x): 0.5637, norm(y): 1.0161, norm:1.0320, tok/sec: 100047.86, flops:105.00, batch-reuse:1
@ 5109 train 4.1421 , allloss: 4.1426, dt: 1319.80ms, fracRes: 0.3790, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.5602, norm(y): 1.0162, norm:1.0906, tok/sec: 99311.70, flops:104.23, batch-reuse:1
@ 5110 train 4.1552 , allloss: 4.1558, dt: 1317.31ms, fracRes: 0.3797, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.5634, norm(y): 1.0162, norm:1.1775, tok/sec: 99499.78, flops:104.43, batch-reuse:1
@ 5111 train 4.1159 , allloss: 4.1167, dt: 1280.19ms, fracRes: 0.3786, norm(attn): 0.2480, norm(output): 0.7188, norm(x): 0.5594, norm(y): 1.0161, norm:1.1327, tok/sec: 102384.67, flops:107.45, batch-reuse:1
@ 5112 train 4.1297 , allloss: 4.1304, dt: 1315.56ms, fracRes: 0.3786, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5669, norm(y): 1.0161, norm:1.2294, tok/sec: 99632.12, flops:104.57, batch-reuse:1
@ 5113 train 4.1475 , allloss: 4.1486, dt: 1328.48ms, fracRes: 0.3776, norm(attn): 0.2471, norm(output): 0.7305, norm(x): 0.5644, norm(y): 1.0161, norm:1.1210, tok/sec: 98663.06, flops:103.55, batch-reuse:1
@ 5114 train 4.0951 , allloss: 4.0961, dt: 1311.01ms, fracRes: 0.3780, norm(attn): 0.2471, norm(output): 0.7266, norm(x): 0.5618, norm(y): 1.0162, norm:1.1013, tok/sec: 99977.60, flops:104.93, batch-reuse:1
@ 5115 train 4.1554 , allloss: 4.1559, dt: 1338.90ms, fracRes: 0.3783, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5615, norm(y): 1.0162, norm:1.1138, tok/sec: 97895.44, flops:102.74, batch-reuse:1
@ 5116 train 4.1166 , allloss: 4.1180, dt: 1295.16ms, fracRes: 0.3796, norm(attn): 0.2471, norm(output): 0.7305, norm(x): 0.5619, norm(y): 1.0162, norm:1.1300, tok/sec: 101201.69, flops:106.21, batch-reuse:1
@ 5117 train 4.2039 , allloss: 4.2054, dt: 1318.86ms, fracRes: 0.3813, norm(attn): 0.2393, norm(output): 0.7305, norm(x): 0.5611, norm(y): 1.0162, norm:1.0397, tok/sec: 99383.05, flops:104.30, batch-reuse:1
@ 5118 train 4.1194 , allloss: 4.1200, dt: 1325.47ms, fracRes: 0.3820, norm(attn): 0.2412, norm(output): 0.7266, norm(x): 0.5600, norm(y): 1.0163, norm:1.0810, tok/sec: 98887.42, flops:103.78, batch-reuse:1
@ 5119 train 4.1413 , allloss: 4.1419, dt: 1297.99ms, fracRes: 0.3809, norm(attn): 0.2393, norm(output): 0.7305, norm(x): 0.5612, norm(y): 1.0162, norm:1.0447, tok/sec: 100980.44, flops:105.98, batch-reuse:1
@ 5120 train 4.1568 , allloss: 4.1584, dt: 1306.32ms, fracRes: 0.3820, norm(attn): 0.2373, norm(output): 0.7266, norm(x): 0.5621, norm(y): 1.0163, norm:1.0290, tok/sec: 100336.75, flops:105.31, batch-reuse:1
@ 5121 train 4.1438 , allloss: 4.1447, dt: 1299.29ms, fracRes: 0.3832, norm(attn): 0.2383, norm(output): 0.7266, norm(x): 0.5625, norm(y): 1.0163, norm:1.0354, tok/sec: 100879.35, flops:105.87, batch-reuse:1
@ 5122 train 4.1036 , allloss: 4.1042, dt: 1335.59ms, fracRes: 0.3821, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5632, norm(y): 1.0163, norm:1.0302, tok/sec: 98138.05, flops:103.00, batch-reuse:1
@ 5123 train 4.3346 , allloss: 4.3357, dt: 1317.76ms, fracRes: 0.3827, norm(attn): 0.2393, norm(output): 0.7305, norm(x): 0.5644, norm(y): 1.0162, norm:1.0703, tok/sec: 99465.99, flops:104.39, batch-reuse:1
@ 5124 train 4.1680 , allloss: 4.1721, dt: 1309.75ms, fracRes: 0.3809, norm(attn): 0.2422, norm(output): 0.7266, norm(x): 0.5613, norm(y): 1.0163, norm:1.1126, tok/sec: 100074.18, flops:105.03, batch-reuse:1
@ 5125 train 4.1258 , allloss: 4.1266, dt: 1309.28ms, fracRes: 0.3789, norm(attn): 0.2441, norm(output): 0.7188, norm(x): 0.5573, norm(y): 1.0162, norm:1.0407, tok/sec: 100110.23, flops:105.07, batch-reuse:1
@ 5126 train 4.1998 , allloss: 4.2015, dt: 1320.00ms, fracRes: 0.3789, norm(attn): 0.2480, norm(output): 0.7109, norm(x): 0.5590, norm(y): 1.0161, norm:0.9903, tok/sec: 99296.96, flops:104.21, batch-reuse:1
@ 5127 train 4.1336 , allloss: 4.1366, dt: 1316.09ms, fracRes: 0.3801, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5608, norm(y): 1.0162, norm:1.0791, tok/sec: 99592.25, flops:104.52, batch-reuse:1
@ 5128 train 4.1996 , allloss: 4.2002, dt: 1326.14ms, fracRes: 0.3794, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5641, norm(y): 1.0162, norm:1.1028, tok/sec: 98836.88, flops:103.73, batch-reuse:1
@ 5129 train 4.2425 , allloss: 4.2431, dt: 1334.33ms, fracRes: 0.3801, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5653, norm(y): 1.0162, norm:1.0723, tok/sec: 98230.48, flops:103.09, batch-reuse:1
@ 5130 train 4.1505 , allloss: 4.1525, dt: 1314.51ms, fracRes: 0.3807, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5624, norm(y): 1.0162, norm:0.9354, tok/sec: 99711.58, flops:104.65, batch-reuse:1
@ 5131 train 4.0948 , allloss: 4.0952, dt: 1321.66ms, fracRes: 0.3814, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5624, norm(y): 1.0162, norm:1.0660, tok/sec: 99172.09, flops:104.08, batch-reuse:1
@ 5132 train 4.1311 , allloss: 4.1318, dt: 1313.14ms, fracRes: 0.3811, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5649, norm(y): 1.0162, norm:0.9987, tok/sec: 99815.79, flops:104.76, batch-reuse:1
@ 5133 train 4.1493 , allloss: 4.1505, dt: 1298.10ms, fracRes: 0.3813, norm(attn): 0.2432, norm(output): 0.7266, norm(x): 0.5645, norm(y): 1.0162, norm:1.0263, tok/sec: 100972.23, flops:105.97, batch-reuse:1
@ 5134 train 4.1793 , allloss: 4.1803, dt: 1296.65ms, fracRes: 0.3807, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5652, norm(y): 1.0162, norm:1.2252, tok/sec: 101084.79, flops:106.09, batch-reuse:1
@ 5135 train 4.1959 , allloss: 4.1975, dt: 1297.46ms, fracRes: 0.3805, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5675, norm(y): 1.0162, norm:1.2275, tok/sec: 101021.93, flops:106.02, batch-reuse:1
@ 5136 train 4.1753 , allloss: 4.1766, dt: 1286.25ms, fracRes: 0.3793, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5623, norm(y): 1.0161, norm:1.1066, tok/sec: 101902.10, flops:106.95, batch-reuse:1
@ 5137 train 4.1262 , allloss: 4.1269, dt: 1290.08ms, fracRes: 0.3796, norm(attn): 0.2402, norm(output): 0.7266, norm(x): 0.5617, norm(y): 1.0162, norm:1.1191, tok/sec: 101599.82, flops:106.63, batch-reuse:1
@ 5138 train 4.2058 , allloss: 4.2069, dt: 1305.27ms, fracRes: 0.3816, norm(attn): 0.2422, norm(output): 0.7344, norm(x): 0.5651, norm(y): 1.0163, norm:1.1653, tok/sec: 100417.60, flops:105.39, batch-reuse:1
@ 5139 train 4.2052 , allloss: 4.2073, dt: 1308.23ms, fracRes: 0.3805, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5643, norm(y): 1.0162, norm:1.0159, tok/sec: 100190.25, flops:105.15, batch-reuse:1
@ 5140 train 4.2873 , allloss: 4.2880, dt: 1337.71ms, fracRes: 0.3810, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5622, norm(y): 1.0163, norm:1.0439, tok/sec: 97982.21, flops:102.83, batch-reuse:1
@ 5141 train 4.1500 , allloss: 4.1504, dt: 1328.87ms, fracRes: 0.3819, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5628, norm(y): 1.0163, norm:1.2059, tok/sec: 98633.93, flops:103.52, batch-reuse:1
@ 5142 train 4.1220 , allloss: 4.1229, dt: 1294.16ms, fracRes: 0.3808, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5619, norm(y): 1.0162, norm:0.9987, tok/sec: 101279.49, flops:106.29, batch-reuse:1
@ 5143 train 4.1447 , allloss: 4.1454, dt: 1341.23ms, fracRes: 0.3792, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5661, norm(y): 1.0161, norm:1.1189, tok/sec: 97725.56, flops:102.56, batch-reuse:1
@ 5144 train 4.2278 , allloss: 4.2292, dt: 1329.19ms, fracRes: 0.3795, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5653, norm(y): 1.0161, norm:1.1526, tok/sec: 98610.57, flops:103.49, batch-reuse:1
@ 5145 train 4.1936 , allloss: 4.1949, dt: 1307.57ms, fracRes: 0.3795, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5635, norm(y): 1.0162, norm:1.0518, tok/sec: 100240.54, flops:105.20, batch-reuse:1
@ 5146 train 4.1475 , allloss: 4.1492, dt: 1304.90ms, fracRes: 0.3797, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5650, norm(y): 1.0162, norm:1.0508, tok/sec: 100445.89, flops:105.42, batch-reuse:1
@ 5147 train 4.1045 , allloss: 4.1055, dt: 1289.32ms, fracRes: 0.3798, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5641, norm(y): 1.0162, norm:0.9619, tok/sec: 101659.49, flops:106.69, batch-reuse:1
@ 5148 train 4.1966 , allloss: 4.1974, dt: 1323.56ms, fracRes: 0.3799, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5641, norm(y): 1.0161, norm:0.9895, tok/sec: 99029.57, flops:103.93, batch-reuse:1
@ 5149 train 4.0717 , allloss: 4.0724, dt: 1311.69ms, fracRes: 0.3796, norm(attn): 0.2480, norm(output): 0.7266, norm(x): 0.5647, norm(y): 1.0161, norm:1.0535, tok/sec: 99925.84, flops:104.87, batch-reuse:1
@ 5150 train 4.1510 , allloss: 4.1520, dt: 1340.90ms, fracRes: 0.3803, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5648, norm(y): 1.0162, norm:1.0699, tok/sec: 97749.36, flops:102.59, batch-reuse:1
@ 5151 train 4.2006 , allloss: 4.2014, dt: 1317.08ms, fracRes: 0.3805, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5634, norm(y): 1.0162, norm:1.0532, tok/sec: 99516.86, flops:104.44, batch-reuse:1
@ 5152 train 4.1246 , allloss: 4.1261, dt: 1296.08ms, fracRes: 0.3803, norm(attn): 0.2451, norm(output): 0.7266, norm(x): 0.5624, norm(y): 1.0162, norm:1.0485, tok/sec: 101129.29, flops:106.14, batch-reuse:1
@ 5153 train 4.1069 , allloss: 4.1076, dt: 1314.97ms, fracRes: 0.3803, norm(attn): 0.2441, norm(output): 0.7266, norm(x): 0.5624, norm(y): 1.0161, norm:1.0262, tok/sec: 99676.60, flops:104.61, batch-reuse:1
@ 5154 train 4.3411 , allloss: 4.3419, dt: 1306.96ms, fracRes: 0.3804, norm(attn): 0.2412, norm(output): 0.7305, norm(x): 0.5670, norm(y): 1.0162, norm:1.2335, tok/sec: 100287.48, flops:105.25, batch-reuse:1
@ 5155 train 4.1382 , allloss: 4.1392, dt: 1320.08ms, fracRes: 0.3810, norm(attn): 0.2422, norm(output): 0.7305, norm(x): 0.5653, norm(y): 1.0163, norm:1.1608, tok/sec: 99290.77, flops:104.21, batch-reuse:1
@ 5156 train 4.1704 , allloss: 4.1712, dt: 1302.98ms, fracRes: 0.3809, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5626, norm(y): 1.0162, norm:1.0424, tok/sec: 100593.77, flops:105.58, batch-reuse:1
@ 5157 train 4.0275 , allloss: 4.0283, dt: 1288.13ms, fracRes: 0.3803, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5606, norm(y): 1.0162, norm:1.0538, tok/sec: 101753.53, flops:106.79, batch-reuse:1
@ 5158 train 4.1572 , allloss: 4.1583, dt: 1283.09ms, fracRes: 0.3796, norm(attn): 0.2480, norm(output): 0.7344, norm(x): 0.5628, norm(y): 1.0162, norm:1.0519, tok/sec: 102153.71, flops:107.21, batch-reuse:1
@ 5159 train 4.0802 , allloss: 4.0812, dt: 1306.56ms, fracRes: 0.3791, norm(attn): 0.2490, norm(output): 0.7266, norm(x): 0.5632, norm(y): 1.0162, norm:1.0956, tok/sec: 100318.61, flops:105.29, batch-reuse:1
@ 5160 train 4.0709 , allloss: 4.0734, dt: 1313.56ms, fracRes: 0.3801, norm(attn): 0.2490, norm(output): 0.7305, norm(x): 0.5612, norm(y): 1.0163, norm:1.1411, tok/sec: 99784.16, flops:104.73, batch-reuse:1
@ 5161 train 4.1159 , allloss: 4.1164, dt: 1315.17ms, fracRes: 0.3792, norm(attn): 0.2471, norm(output): 0.7305, norm(x): 0.5617, norm(y): 1.0162, norm:1.0666, tok/sec: 99661.40, flops:104.60, batch-reuse:1
@ 5162 train 4.1428 , allloss: 4.1434, dt: 1306.11ms, fracRes: 0.3794, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5637, norm(y): 1.0162, norm:1.1044, tok/sec: 100353.18, flops:105.32, batch-reuse:1
@ 5163 train 4.0024 , allloss: 4.0035, dt: 1312.43ms, fracRes: 0.3811, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5645, norm(y): 1.0163, norm:1.1350, tok/sec: 99869.42, flops:104.81, batch-reuse:1
@ 5164 train 4.1356 , allloss: 4.1364, dt: 1312.93ms, fracRes: 0.3823, norm(attn): 0.2471, norm(output): 0.7266, norm(x): 0.5641, norm(y): 1.0162, norm:1.1984, tok/sec: 99831.79, flops:104.78, batch-reuse:1
@ 5165 train 4.0739 , allloss: 4.0746, dt: 1297.79ms, fracRes: 0.3800, norm(attn): 0.2471, norm(output): 0.7227, norm(x): 0.5621, norm(y): 1.0161, norm:1.1612, tok/sec: 100996.31, flops:106.00, batch-reuse:1
@ 5166 train 4.0463 , allloss: 4.0474, dt: 1304.75ms, fracRes: 0.3811, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5650, norm(y): 1.0162, norm:1.1364, tok/sec: 100457.78, flops:105.43, batch-reuse:1
@ 5167 train 4.0827 , allloss: 4.0835, dt: 1286.43ms, fracRes: 0.3809, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5649, norm(y): 1.0162, norm:1.2123, tok/sec: 101888.10, flops:106.93, batch-reuse:1
@ 5168 train 4.0598 , allloss: 4.0606, dt: 1300.57ms, fracRes: 0.3802, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5620, norm(y): 1.0162, norm:1.1633, tok/sec: 100780.68, flops:105.77, batch-reuse:1
@ 5169 train 4.1063 , allloss: 4.1073, dt: 1322.66ms, fracRes: 0.3814, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5645, norm(y): 1.0163, norm:1.1847, tok/sec: 99097.10, flops:104.00, batch-reuse:1
@ 5170 train 4.0769 , allloss: 4.0777, dt: 1325.85ms, fracRes: 0.3805, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5657, norm(y): 1.0162, norm:1.2047, tok/sec: 98858.77, flops:103.75, batch-reuse:1
@ 5171 train 4.0657 , allloss: 4.0664, dt: 1295.61ms, fracRes: 0.3807, norm(attn): 0.2471, norm(output): 0.7266, norm(x): 0.5635, norm(y): 1.0162, norm:1.0459, tok/sec: 101166.25, flops:106.18, batch-reuse:1
@ 5172 train 4.1057 , allloss: 4.1065, dt: 1303.98ms, fracRes: 0.3801, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5633, norm(y): 1.0162, norm:1.0368, tok/sec: 100516.94, flops:105.49, batch-reuse:1
@ 5173 train 4.1300 , allloss: 4.1308, dt: 1314.64ms, fracRes: 0.3806, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5658, norm(y): 1.0162, norm:1.0826, tok/sec: 99702.09, flops:104.64, batch-reuse:1
@ 5174 train 4.0828 , allloss: 4.0836, dt: 1307.00ms, fracRes: 0.3798, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5648, norm(y): 1.0162, norm:1.0490, tok/sec: 100284.88, flops:105.25, batch-reuse:1
@ 5175 train 4.1031 , allloss: 4.1038, dt: 1314.02ms, fracRes: 0.3800, norm(attn): 0.2471, norm(output): 0.7266, norm(x): 0.5614, norm(y): 1.0162, norm:1.0105, tok/sec: 99748.62, flops:104.69, batch-reuse:1
@ 5176 train 4.0733 , allloss: 4.0743, dt: 1335.53ms, fracRes: 0.3787, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5659, norm(y): 1.0161, norm:0.9622, tok/sec: 98142.43, flops:103.00, batch-reuse:1
@ 5177 train 4.0715 , allloss: 4.0725, dt: 1342.72ms, fracRes: 0.3789, norm(attn): 0.2480, norm(output): 0.7266, norm(x): 0.5611, norm(y): 1.0162, norm:0.9641, tok/sec: 97617.02, flops:102.45, batch-reuse:1
@ 5178 train 4.0185 , allloss: 4.0194, dt: 1300.97ms, fracRes: 0.3803, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5620, norm(y): 1.0163, norm:1.0849, tok/sec: 100749.45, flops:105.74, batch-reuse:1
@ 5179 train 4.0600 , allloss: 4.0610, dt: 1320.83ms, fracRes: 0.3804, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5677, norm(y): 1.0162, norm:1.0351, tok/sec: 99234.85, flops:104.15, batch-reuse:1
@ 5180 train 4.0169 , allloss: 4.0176, dt: 1303.48ms, fracRes: 0.3801, norm(attn): 0.2471, norm(output): 0.7305, norm(x): 0.5638, norm(y): 1.0162, norm:1.1212, tok/sec: 100555.81, flops:105.54, batch-reuse:1
@ 5181 train 4.0870 , allloss: 4.0882, dt: 1312.10ms, fracRes: 0.3799, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5654, norm(y): 1.0162, norm:1.1616, tok/sec: 99894.90, flops:104.84, batch-reuse:1
@ 5182 train 4.0802 , allloss: 4.0811, dt: 1327.57ms, fracRes: 0.3807, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5650, norm(y): 1.0162, norm:1.0486, tok/sec: 98730.86, flops:103.62, batch-reuse:1
@ 5183 train 4.0883 , allloss: 4.0898, dt: 1323.61ms, fracRes: 0.3812, norm(attn): 0.2471, norm(output): 0.7305, norm(x): 0.5679, norm(y): 1.0163, norm:1.1108, tok/sec: 99025.96, flops:103.93, batch-reuse:1
@ 5184 train 4.0421 , allloss: 4.0436, dt: 1323.89ms, fracRes: 0.3819, norm(attn): 0.2432, norm(output): 0.7344, norm(x): 0.5652, norm(y): 1.0163, norm:1.2167, tok/sec: 99004.85, flops:103.91, batch-reuse:1
@ 5185 train 4.0646 , allloss: 4.0659, dt: 1295.93ms, fracRes: 0.3806, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5639, norm(y): 1.0163, norm:1.1764, tok/sec: 101140.97, flops:106.15, batch-reuse:1
@ 5186 train 4.0014 , allloss: 4.0032, dt: 1300.60ms, fracRes: 0.3812, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5637, norm(y): 1.0162, norm:1.0640, tok/sec: 100777.82, flops:105.77, batch-reuse:1
@ 5187 train 4.0837 , allloss: 4.0848, dt: 1313.92ms, fracRes: 0.3810, norm(attn): 0.2490, norm(output): 0.7266, norm(x): 0.5631, norm(y): 1.0163, norm:1.1319, tok/sec: 99756.54, flops:104.70, batch-reuse:1
@ 5188 train 3.9401 , allloss: 3.9410, dt: 1311.70ms, fracRes: 0.3809, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5654, norm(y): 1.0163, norm:1.1679, tok/sec: 99925.62, flops:104.87, batch-reuse:1
@ 5189 train 4.0549 , allloss: 4.0557, dt: 1285.46ms, fracRes: 0.3811, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5651, norm(y): 1.0163, norm:1.1391, tok/sec: 101964.75, flops:107.01, batch-reuse:1
@ 5190 train 4.0682 , allloss: 4.0688, dt: 1301.60ms, fracRes: 0.3797, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5627, norm(y): 1.0163, norm:1.1629, tok/sec: 100700.53, flops:105.69, batch-reuse:1
@ 5191 train 4.1830 , allloss: 4.1837, dt: 1287.81ms, fracRes: 0.3800, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5634, norm(y): 1.0162, norm:0.9853, tok/sec: 101778.96, flops:106.82, batch-reuse:1
@ 5192 train 4.1249 , allloss: 4.1255, dt: 1303.24ms, fracRes: 0.3805, norm(attn): 0.2480, norm(output): 0.7305, norm(x): 0.5645, norm(y): 1.0162, norm:1.1753, tok/sec: 100573.97, flops:105.55, batch-reuse:1
@ 5193 train 4.0805 , allloss: 4.0815, dt: 1299.36ms, fracRes: 0.3801, norm(attn): 0.2451, norm(output): 0.7383, norm(x): 0.5656, norm(y): 1.0161, norm:1.0974, tok/sec: 100874.42, flops:105.87, batch-reuse:1
@ 5194 train 4.1313 , allloss: 4.1324, dt: 1302.40ms, fracRes: 0.3813, norm(attn): 0.2441, norm(output): 0.7305, norm(x): 0.5642, norm(y): 1.0163, norm:1.0930, tok/sec: 100638.83, flops:105.62, batch-reuse:1
@ 5195 train 4.0275 , allloss: 4.0289, dt: 1320.53ms, fracRes: 0.3811, norm(attn): 0.2461, norm(output): 0.7266, norm(x): 0.5635, norm(y): 1.0163, norm:1.1071, tok/sec: 99257.16, flops:104.17, batch-reuse:1
@ 5196 train 4.0094 , allloss: 4.0101, dt: 1330.02ms, fracRes: 0.3796, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5657, norm(y): 1.0162, norm:1.1479, tok/sec: 98549.13, flops:103.43, batch-reuse:1
@ 5197 train 4.1002 , allloss: 4.1011, dt: 1290.90ms, fracRes: 0.3806, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5667, norm(y): 1.0163, norm:0.9947, tok/sec: 101535.63, flops:106.56, batch-reuse:1
@ 5198 train 4.0978 , allloss: 4.0985, dt: 1294.27ms, fracRes: 0.3820, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5622, norm(y): 1.0163, norm:1.1394, tok/sec: 101271.36, flops:106.29, batch-reuse:1
@ 5199 train 4.1576 , allloss: 4.1584, dt: 1302.08ms, fracRes: 0.3814, norm(attn): 0.2451, norm(output): 0.7266, norm(x): 0.5633, norm(y): 1.0162, norm:0.9472, tok/sec: 100663.84, flops:105.65, batch-reuse:1
@ 5200 train 3.9700 , allloss: 3.9717, dt: 1309.39ms, fracRes: 0.3815, norm(attn): 0.2490, norm(output): 0.7344, norm(x): 0.5697, norm(y): 1.0163, norm:1.3437, tok/sec: 100101.93, flops:105.06, batch-reuse:1
@ 5201 train 4.1224 , allloss: 4.1232, dt: 1300.25ms, fracRes: 0.3815, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5653, norm(y): 1.0162, norm:1.1468, tok/sec: 100805.60, flops:105.80, batch-reuse:1
@ 5202 train 4.1021 , allloss: 4.1030, dt: 1291.84ms, fracRes: 0.3812, norm(attn): 0.2461, norm(output): 0.7305, norm(x): 0.5657, norm(y): 1.0162, norm:1.2470, tok/sec: 101461.66, flops:106.49, batch-reuse:1
@ 5203 train 4.2427 , allloss: 4.2437, dt: 1319.15ms, fracRes: 0.3797, norm(attn): 0.2539, norm(output): 0.7305, norm(x): 0.5661, norm(y): 1.0161, norm:1.6896, tok/sec: 99361.12, flops:104.28, batch-reuse:1
@ 5204 train 4.2793 , allloss: 4.2814, dt: 1297.74ms, fracRes: 0.3805, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5706, norm(y): 1.0161, norm:1.3551, tok/sec: 101000.39, flops:106.00, batch-reuse:1
@ 5205 train 4.2793 , allloss: 4.2866, dt: 1289.42ms, fracRes: 0.3839, norm(attn): 0.2432, norm(output): 0.7422, norm(x): 0.5708, norm(y): 1.0163, norm:1.5028, tok/sec: 101651.86, flops:106.69, batch-reuse:1
@ 5206 train 4.2355 , allloss: 4.2360, dt: 1321.17ms, fracRes: 0.3828, norm(attn): 0.2432, norm(output): 0.7305, norm(x): 0.5645, norm(y): 1.0162, norm:1.4058, tok/sec: 99209.10, flops:104.12, batch-reuse:1
@ 5207 train 4.2509 , allloss: 4.2513, dt: 1348.91ms, fracRes: 0.3826, norm(attn): 0.2451, norm(output): 0.7305, norm(x): 0.5658, norm(y): 1.0163, norm:1.3774, tok/sec: 97168.90, flops:101.98, batch-reuse:1
@ 5208 train 4.2204 , allloss: 4.2210, dt: 1356.95ms, fracRes: 0.3820, norm(attn): 0.2451, norm(output): 0.7344, norm(x): 0.5664, norm(y): 1.0162, norm:1.0402, tok/sec: 96593.41, flops:101.38, batch-reuse:1
@ 5209 train 4.3133 , allloss: 4.3138, dt: 1323.05ms, fracRes: 0.3821, norm(attn): 0.2432, norm(output): 0.7422, norm(x): 0.5662, norm(y): 1.0163, norm:1.1015, tok/sec: 99067.78, flops:103.97, batch-reuse:1
@ 5210 train 4.3878 , allloss: 4.3884, dt: 1315.14ms, fracRes: 0.3809, norm(attn): 0.2471, norm(output): 0.7383, norm(x): 0.5698, norm(y): 1.0162, norm:1.1205, tok/sec: 99663.82, flops:104.60, batch-reuse:1
@ 5211 train 4.2164 , allloss: 4.2169, dt: 1308.34ms, fracRes: 0.3809, norm(attn): 0.2451, norm(output): 0.7422, norm(x): 0.5680, norm(y): 1.0162, norm:1.1717, tok/sec: 100182.27, flops:105.14, batch-reuse:1
@ 5212 train 4.2123 , allloss: 4.2127, dt: 1318.05ms, fracRes: 0.3809, norm(attn): 0.2451, norm(output): 0.7422, norm(x): 0.5678, norm(y): 1.0162, norm:1.1553, tok/sec: 99444.19, flops:104.37, batch-reuse:1
@ 5213 train 4.2089 , allloss: 4.2094, dt: 1325.24ms, fracRes: 0.3823, norm(attn): 0.2441, norm(output): 0.7383, norm(x): 0.5679, norm(y): 1.0162, norm:0.9686, tok/sec: 98904.39, flops:103.80, batch-reuse:1
@ 5214 train 4.2670 , allloss: 4.2678, dt: 1308.49ms, fracRes: 0.3824, norm(attn): 0.2480, norm(output): 0.7344, norm(x): 0.5684, norm(y): 1.0161, norm:1.0757, tok/sec: 100170.20, flops:105.13, batch-reuse:1
@ 5215 train 4.3176 , allloss: 4.3185, dt: 1313.20ms, fracRes: 0.3827, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5687, norm(y): 1.0162, norm:1.0162, tok/sec: 99810.84, flops:104.75, batch-reuse:1
@ 5216 train 4.1723 , allloss: 4.1733, dt: 1313.91ms, fracRes: 0.3833, norm(attn): 0.2471, norm(output): 0.7422, norm(x): 0.5705, norm(y): 1.0163, norm:1.0016, tok/sec: 99757.14, flops:104.70, batch-reuse:1
@ 5217 train 4.1908 , allloss: 4.1915, dt: 1304.30ms, fracRes: 0.3833, norm(attn): 0.2461, norm(output): 0.7383, norm(x): 0.5681, norm(y): 1.0163, norm:1.1003, tok/sec: 100491.97, flops:105.47, batch-reuse:1
@ 5218 train 4.3066 , allloss: 4.3071, dt: 1314.84ms, fracRes: 0.3830, norm(attn): 0.2451, norm(output): 0.7383, norm(x): 0.5679, norm(y): 1.0163, norm:1.0469, tok/sec: 99686.92, flops:104.62, batch-reuse:1
@ 5219 train 4.1844 , allloss: 4.1850, dt: 1344.12ms, fracRes: 0.3817, norm(attn): 0.2461, norm(output): 0.7344, norm(x): 0.5657, norm(y): 1.0163, norm:1.1420, tok/sec: 97515.12, flops:102.34, batch-reuse:1
@ 5220 train 4.3651 , allloss: 4.3656, dt: 1331.28ms, fracRes: 0.3807, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5672, norm(y): 1.0162, norm:1.1060, tok/sec: 98455.71, flops:103.33, batch-reuse:1
@ 5221 train 4.2142 , allloss: 4.2153, dt: 1311.93ms, fracRes: 0.3795, norm(attn): 0.2480, norm(output): 0.7383, norm(x): 0.5682, norm(y): 1.0163, norm:1.1577, tok/sec: 99907.39, flops:104.85, batch-reuse:1
@ 5222 train 4.2088 , allloss: 4.2096, dt: 1316.30ms, fracRes: 0.3801, norm(attn): 0.2461, norm(output): 0.7383, norm(x): 0.5651, norm(y): 1.0163, norm:1.0451, tok/sec: 99576.14, flops:104.51, batch-reuse:1
@ 5223 train 4.2998 , allloss: 4.3004, dt: 1313.91ms, fracRes: 0.3798, norm(attn): 0.2451, norm(output): 0.7383, norm(x): 0.5664, norm(y): 1.0163, norm:1.1471, tok/sec: 99756.85, flops:104.70, batch-reuse:1
@ 5224 train 4.2186 , allloss: 4.2192, dt: 1294.60ms, fracRes: 0.3795, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5667, norm(y): 1.0162, norm:1.0910, tok/sec: 101245.19, flops:106.26, batch-reuse:1
@ 5225 train 4.3050 , allloss: 4.3065, dt: 1304.27ms, fracRes: 0.3815, norm(attn): 0.2451, norm(output): 0.7422, norm(x): 0.5693, norm(y): 1.0163, norm:1.3505, tok/sec: 100494.64, flops:105.47, batch-reuse:1
@ 5226 train 4.1320 , allloss: 4.1331, dt: 1301.44ms, fracRes: 0.3823, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5714, norm(y): 1.0164, norm:1.1407, tok/sec: 100712.87, flops:105.70, batch-reuse:1
@ 5227 train 4.2067 , allloss: 4.2080, dt: 1317.44ms, fracRes: 0.3818, norm(attn): 0.2451, norm(output): 0.7383, norm(x): 0.5670, norm(y): 1.0163, norm:1.0584, tok/sec: 99490.30, flops:104.42, batch-reuse:1
@ 5228 train 4.1786 , allloss: 4.1798, dt: 1301.45ms, fracRes: 0.3814, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5723, norm(y): 1.0162, norm:1.1442, tok/sec: 100712.54, flops:105.70, batch-reuse:1
@ 5229 train 4.2219 , allloss: 4.2226, dt: 1314.03ms, fracRes: 0.3817, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5716, norm(y): 1.0162, norm:1.0782, tok/sec: 99748.05, flops:104.69, batch-reuse:1
@ 5230 train 4.2197 , allloss: 4.2204, dt: 1300.70ms, fracRes: 0.3819, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5700, norm(y): 1.0162, norm:1.1341, tok/sec: 100769.99, flops:105.76, batch-reuse:1
@ 5231 train 4.2776 , allloss: 4.2787, dt: 1303.69ms, fracRes: 0.3822, norm(attn): 0.2451, norm(output): 0.7383, norm(x): 0.5686, norm(y): 1.0163, norm:1.0389, tok/sec: 100539.04, flops:105.52, batch-reuse:1
@ 5232 train 4.3693 , allloss: 4.3706, dt: 1299.49ms, fracRes: 0.3813, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5722, norm(y): 1.0163, norm:1.0418, tok/sec: 100863.98, flops:105.86, batch-reuse:1
@ 5233 train 4.2220 , allloss: 4.2229, dt: 1282.15ms, fracRes: 0.3809, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5728, norm(y): 1.0163, norm:1.0715, tok/sec: 102228.06, flops:107.29, batch-reuse:1
@ 5234 train 4.2193 , allloss: 4.2211, dt: 1325.33ms, fracRes: 0.3812, norm(attn): 0.2441, norm(output): 0.7461, norm(x): 0.5703, norm(y): 1.0163, norm:1.1475, tok/sec: 98897.74, flops:103.80, batch-reuse:1
@ 5235 train 4.2146 , allloss: 4.2159, dt: 1298.78ms, fracRes: 0.3818, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5707, norm(y): 1.0163, norm:1.0201, tok/sec: 100918.98, flops:105.92, batch-reuse:1
@ 5236 train 4.2666 , allloss: 4.2673, dt: 1295.01ms, fracRes: 0.3829, norm(attn): 0.2432, norm(output): 0.7461, norm(x): 0.5712, norm(y): 1.0163, norm:1.1751, tok/sec: 101213.07, flops:106.23, batch-reuse:1
@ 5237 train 4.3256 , allloss: 4.3264, dt: 1316.08ms, fracRes: 0.3827, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5677, norm(y): 1.0163, norm:1.1389, tok/sec: 99592.65, flops:104.52, batch-reuse:1
@ 5238 train 4.2988 , allloss: 4.2998, dt: 1333.86ms, fracRes: 0.3837, norm(attn): 0.2441, norm(output): 0.7461, norm(x): 0.5703, norm(y): 1.0163, norm:1.1046, tok/sec: 98265.19, flops:103.13, batch-reuse:1
@ 5239 train 4.2025 , allloss: 4.2034, dt: 1338.72ms, fracRes: 0.3820, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5697, norm(y): 1.0162, norm:1.1190, tok/sec: 97908.15, flops:102.76, batch-reuse:1
@ 5240 train 4.3210 , allloss: 4.3221, dt: 1299.91ms, fracRes: 0.3828, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5692, norm(y): 1.0162, norm:1.0523, tok/sec: 100831.29, flops:105.82, batch-reuse:1
@ 5241 train 4.2403 , allloss: 4.2410, dt: 1313.94ms, fracRes: 0.3826, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5692, norm(y): 1.0163, norm:1.1034, tok/sec: 99755.02, flops:104.69, batch-reuse:1
@ 5242 train 4.3557 , allloss: 4.3563, dt: 1314.71ms, fracRes: 0.3825, norm(attn): 0.2451, norm(output): 0.7461, norm(x): 0.5703, norm(y): 1.0162, norm:1.0456, tok/sec: 99696.66, flops:104.63, batch-reuse:1
@ 5243 train 4.2672 , allloss: 4.2708, dt: 1313.26ms, fracRes: 0.3809, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5687, norm(y): 1.0162, norm:1.0564, tok/sec: 99806.93, flops:104.75, batch-reuse:1
@ 5244 train 4.2298 , allloss: 4.2310, dt: 1306.03ms, fracRes: 0.3821, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5719, norm(y): 1.0163, norm:1.2407, tok/sec: 100359.41, flops:105.33, batch-reuse:1
@ 5245 train 4.2200 , allloss: 4.2208, dt: 1291.12ms, fracRes: 0.3818, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5677, norm(y): 1.0163, norm:1.1857, tok/sec: 101518.25, flops:106.55, batch-reuse:1
@ 5246 train 4.1171 , allloss: 4.1181, dt: 1315.22ms, fracRes: 0.3816, norm(attn): 0.2490, norm(output): 0.7422, norm(x): 0.5672, norm(y): 1.0163, norm:1.0559, tok/sec: 99658.17, flops:104.59, batch-reuse:1
@ 5247 train 4.2052 , allloss: 4.2063, dt: 1327.34ms, fracRes: 0.3821, norm(attn): 0.2490, norm(output): 0.7422, norm(x): 0.5702, norm(y): 1.0162, norm:1.3247, tok/sec: 98748.11, flops:103.64, batch-reuse:1
@ 5248 train 4.1646 , allloss: 4.1654, dt: 1291.87ms, fracRes: 0.3809, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5688, norm(y): 1.0162, norm:1.1221, tok/sec: 101459.06, flops:106.48, batch-reuse:1
@ 5249 train 4.2365 , allloss: 4.2373, dt: 1298.67ms, fracRes: 0.3797, norm(attn): 0.2490, norm(output): 0.7383, norm(x): 0.5700, norm(y): 1.0162, norm:1.0093, tok/sec: 100928.24, flops:105.93, batch-reuse:1
@ 5250 train 4.2175 , allloss: 4.2183, dt: 1317.52ms, fracRes: 0.3797, norm(attn): 0.2471, norm(output): 0.7422, norm(x): 0.5703, norm(y): 1.0162, norm:1.0636, tok/sec: 99483.96, flops:104.41, batch-reuse:1
@ 5251 train 4.1416 , allloss: 4.1422, dt: 1339.78ms, fracRes: 0.3803, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5688, norm(y): 1.0162, norm:1.0323, tok/sec: 97830.72, flops:102.68, batch-reuse:1
@ 5252 train 4.1693 , allloss: 4.1698, dt: 1297.60ms, fracRes: 0.3806, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0162, norm:0.9590, tok/sec: 101011.34, flops:106.01, batch-reuse:1
@ 5253 train 4.2887 , allloss: 4.2892, dt: 1294.35ms, fracRes: 0.3805, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5736, norm(y): 1.0162, norm:1.1205, tok/sec: 101264.73, flops:106.28, batch-reuse:1
@ 5254 train 4.2593 , allloss: 4.2601, dt: 1335.99ms, fracRes: 0.3798, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5742, norm(y): 1.0162, norm:1.2411, tok/sec: 98108.66, flops:102.97, batch-reuse:1
@ 5255 train 4.1963 , allloss: 4.1970, dt: 1299.60ms, fracRes: 0.3809, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5742, norm(y): 1.0163, norm:1.0937, tok/sec: 100855.29, flops:105.85, batch-reuse:1
@ 5256 train 4.1600 , allloss: 4.1610, dt: 1342.82ms, fracRes: 0.3813, norm(attn): 0.2500, norm(output): 0.7422, norm(x): 0.5719, norm(y): 1.0163, norm:1.0383, tok/sec: 97609.37, flops:102.44, batch-reuse:1
@ 5257 train 4.1559 , allloss: 4.1569, dt: 1291.87ms, fracRes: 0.3809, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5713, norm(y): 1.0162, norm:0.9617, tok/sec: 101459.06, flops:106.48, batch-reuse:1
@ 5258 train 4.2470 , allloss: 4.2480, dt: 1292.96ms, fracRes: 0.3820, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5716, norm(y): 1.0163, norm:1.0622, tok/sec: 101373.84, flops:106.39, batch-reuse:1
@ 5259 train 4.1848 , allloss: 4.1858, dt: 1306.42ms, fracRes: 0.3819, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5690, norm(y): 1.0163, norm:1.0150, tok/sec: 100329.14, flops:105.30, batch-reuse:1
@ 5260 train 4.2327 , allloss: 4.2337, dt: 1303.11ms, fracRes: 0.3825, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5710, norm(y): 1.0163, norm:0.9502, tok/sec: 100583.67, flops:105.56, batch-reuse:1
@ 5261 train 4.1575 , allloss: 4.1585, dt: 1331.04ms, fracRes: 0.3830, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5706, norm(y): 1.0163, norm:0.9809, tok/sec: 98473.65, flops:103.35, batch-reuse:1
@ 5262 train 4.2262 , allloss: 4.2274, dt: 1316.86ms, fracRes: 0.3840, norm(attn): 0.2432, norm(output): 0.7500, norm(x): 0.5715, norm(y): 1.0163, norm:0.9960, tok/sec: 99533.45, flops:104.46, batch-reuse:1
@ 5263 train 4.2911 , allloss: 4.2919, dt: 1286.98ms, fracRes: 0.3830, norm(attn): 0.2451, norm(output): 0.7461, norm(x): 0.5710, norm(y): 1.0163, norm:1.0220, tok/sec: 101844.26, flops:106.89, batch-reuse:1
@ 5264 train 4.2357 , allloss: 4.2364, dt: 1308.74ms, fracRes: 0.3834, norm(attn): 0.2402, norm(output): 0.7461, norm(x): 0.5689, norm(y): 1.0164, norm:1.1893, tok/sec: 100151.50, flops:105.11, batch-reuse:1
@ 5265 train 4.2367 , allloss: 4.2374, dt: 1319.17ms, fracRes: 0.3844, norm(attn): 0.2441, norm(output): 0.7461, norm(x): 0.5685, norm(y): 1.0164, norm:0.9976, tok/sec: 99359.52, flops:104.28, batch-reuse:1
@ 5266 train 4.1580 , allloss: 4.1589, dt: 1333.48ms, fracRes: 0.3835, norm(attn): 0.2432, norm(output): 0.7461, norm(x): 0.5707, norm(y): 1.0162, norm:1.0317, tok/sec: 98293.37, flops:103.16, batch-reuse:1
@ 5267 train 4.2301 , allloss: 4.2310, dt: 1313.55ms, fracRes: 0.3822, norm(attn): 0.2432, norm(output): 0.7461, norm(x): 0.5750, norm(y): 1.0161, norm:0.9238, tok/sec: 99784.21, flops:104.73, batch-reuse:1
@ 5268 train 4.2494 , allloss: 4.2503, dt: 1333.02ms, fracRes: 0.3827, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5684, norm(y): 1.0162, norm:1.0794, tok/sec: 98326.77, flops:103.20, batch-reuse:1
@ 5269 train 4.2308 , allloss: 4.2314, dt: 1335.40ms, fracRes: 0.3817, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5678, norm(y): 1.0163, norm:1.2957, tok/sec: 98152.15, flops:103.01, batch-reuse:1
@ 5270 train 4.1756 , allloss: 4.1768, dt: 1339.23ms, fracRes: 0.3781, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5732, norm(y): 1.0161, norm:1.0149, tok/sec: 97871.42, flops:102.72, batch-reuse:1
@ 5271 train 4.3095 , allloss: 4.3100, dt: 1342.47ms, fracRes: 0.3790, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5782, norm(y): 1.0161, norm:1.0781, tok/sec: 97635.12, flops:102.47, batch-reuse:1
@ 5272 train 4.3001 , allloss: 4.3019, dt: 1306.58ms, fracRes: 0.3797, norm(attn): 0.2451, norm(output): 0.7500, norm(x): 0.5799, norm(y): 1.0163, norm:1.0637, tok/sec: 100316.82, flops:105.28, batch-reuse:1
@ 5273 train 4.2055 , allloss: 4.2064, dt: 1299.41ms, fracRes: 0.3790, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5789, norm(y): 1.0164, norm:1.0976, tok/sec: 100870.66, flops:105.87, batch-reuse:1
@ 5274 train 4.2484 , allloss: 4.2493, dt: 1330.65ms, fracRes: 0.3794, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5761, norm(y): 1.0163, norm:1.0385, tok/sec: 98502.30, flops:103.38, batch-reuse:1
@ 5275 train 4.0912 , allloss: 4.0921, dt: 1332.06ms, fracRes: 0.3798, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5745, norm(y): 1.0163, norm:1.0209, tok/sec: 98398.10, flops:103.27, batch-reuse:1
@ 5276 train 4.1910 , allloss: 4.1920, dt: 1334.39ms, fracRes: 0.3804, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5772, norm(y): 1.0164, norm:0.9449, tok/sec: 98226.13, flops:103.09, batch-reuse:1
@ 5277 train 4.1899 , allloss: 4.1905, dt: 1317.54ms, fracRes: 0.3822, norm(attn): 0.2451, norm(output): 0.7500, norm(x): 0.5770, norm(y): 1.0164, norm:1.0619, tok/sec: 99482.59, flops:104.41, batch-reuse:1
@ 5278 train 4.2178 , allloss: 4.2190, dt: 1338.66ms, fracRes: 0.3838, norm(attn): 0.2441, norm(output): 0.7500, norm(x): 0.5756, norm(y): 1.0165, norm:1.0095, tok/sec: 97912.94, flops:102.76, batch-reuse:1
@ 5279 train 4.2193 , allloss: 4.2201, dt: 1301.70ms, fracRes: 0.3821, norm(attn): 0.2461, norm(output): 0.7500, norm(x): 0.5750, norm(y): 1.0164, norm:0.9598, tok/sec: 100693.06, flops:105.68, batch-reuse:1
@ 5280 train 4.2874 , allloss: 4.2881, dt: 1298.09ms, fracRes: 0.3822, norm(attn): 0.2441, norm(output): 0.7500, norm(x): 0.5741, norm(y): 1.0163, norm:1.0488, tok/sec: 100973.04, flops:105.97, batch-reuse:1
@ 5281 train 4.1820 , allloss: 4.1825, dt: 1296.55ms, fracRes: 0.3813, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5706, norm(y): 1.0164, norm:1.0189, tok/sec: 101092.66, flops:106.10, batch-reuse:1
@ 5282 train 4.2286 , allloss: 4.2290, dt: 1295.48ms, fracRes: 0.3823, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5728, norm(y): 1.0164, norm:1.0866, tok/sec: 101176.64, flops:106.19, batch-reuse:1
@ 5283 train 4.2168 , allloss: 4.2176, dt: 1265.13ms, fracRes: 0.3800, norm(attn): 0.2490, norm(output): 0.7422, norm(x): 0.5695, norm(y): 1.0163, norm:1.0468, tok/sec: 103603.23, flops:108.73, batch-reuse:1
@ 5284 train 4.1668 , allloss: 4.1680, dt: 1284.88ms, fracRes: 0.3793, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5703, norm(y): 1.0163, norm:0.9760, tok/sec: 102010.88, flops:107.06, batch-reuse:1
@ 5285 train 4.1968 , allloss: 4.1979, dt: 1283.20ms, fracRes: 0.3802, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5714, norm(y): 1.0164, norm:1.0364, tok/sec: 102144.85, flops:107.20, batch-reuse:1
@ 5286 train 4.0906 , allloss: 4.0911, dt: 1304.28ms, fracRes: 0.3804, norm(attn): 0.2500, norm(output): 0.7383, norm(x): 0.5675, norm(y): 1.0165, norm:1.0878, tok/sec: 100493.68, flops:105.47, batch-reuse:1
@ 5287 train 4.2636 , allloss: 4.2643, dt: 1299.54ms, fracRes: 0.3816, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5696, norm(y): 1.0164, norm:1.0984, tok/sec: 100860.50, flops:105.85, batch-reuse:1
@ 5288 train 4.0098 , allloss: 4.0107, dt: 1311.48ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5771, norm(y): 1.0165, norm:1.3278, tok/sec: 99942.03, flops:104.89, batch-reuse:1
@ 5289 train 4.1064 , allloss: 4.1072, dt: 1303.76ms, fracRes: 0.3820, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0164, norm:1.0768, tok/sec: 100533.84, flops:105.51, batch-reuse:1
@ 5290 train 4.2811 , allloss: 4.2818, dt: 1293.20ms, fracRes: 0.3828, norm(attn): 0.2451, norm(output): 0.7500, norm(x): 0.5739, norm(y): 1.0165, norm:1.0792, tok/sec: 101354.55, flops:106.37, batch-reuse:1
@ 5291 train 4.1848 , allloss: 4.1854, dt: 1321.69ms, fracRes: 0.3828, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5734, norm(y): 1.0164, norm:1.1256, tok/sec: 99169.78, flops:104.08, batch-reuse:1
@ 5292 train 4.1479 , allloss: 4.1486, dt: 1345.17ms, fracRes: 0.3798, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0162, norm:1.1246, tok/sec: 97439.19, flops:102.26, batch-reuse:1
@ 5293 train 4.1973 , allloss: 4.1984, dt: 1311.90ms, fracRes: 0.3812, norm(attn): 0.2432, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0164, norm:1.1064, tok/sec: 99910.13, flops:104.86, batch-reuse:1
@ 5294 train 4.1709 , allloss: 4.1718, dt: 1341.02ms, fracRes: 0.3820, norm(attn): 0.2441, norm(output): 0.7500, norm(x): 0.5727, norm(y): 1.0165, norm:1.0711, tok/sec: 97740.64, flops:102.58, batch-reuse:1
@ 5295 train 4.2126 , allloss: 4.2134, dt: 1342.18ms, fracRes: 0.3811, norm(attn): 0.2441, norm(output): 0.7461, norm(x): 0.5731, norm(y): 1.0164, norm:1.1576, tok/sec: 97655.95, flops:102.49, batch-reuse:1
@ 5296 train 4.1161 , allloss: 4.1170, dt: 1287.02ms, fracRes: 0.3820, norm(attn): 0.2451, norm(output): 0.7500, norm(x): 0.5731, norm(y): 1.0164, norm:1.2428, tok/sec: 101841.50, flops:106.88, batch-reuse:1
@ 5297 train 4.2251 , allloss: 4.2257, dt: 1314.50ms, fracRes: 0.3806, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5734, norm(y): 1.0162, norm:1.0989, tok/sec: 99712.65, flops:104.65, batch-reuse:1
@ 5298 train 4.1791 , allloss: 4.1796, dt: 1314.50ms, fracRes: 0.3814, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5720, norm(y): 1.0163, norm:1.1271, tok/sec: 99712.23, flops:104.65, batch-reuse:1
@ 5299 train 4.1262 , allloss: 4.1279, dt: 1279.13ms, fracRes: 0.3833, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5786, norm(y): 1.0164, norm:1.3142, tok/sec: 102469.46, flops:107.54, batch-reuse:1
@ 5300 train 4.1270 , allloss: 4.1282, dt: 1314.84ms, fracRes: 0.3808, norm(attn): 0.2471, norm(output): 0.7461, norm(x): 0.5718, norm(y): 1.0164, norm:1.2488, tok/sec: 99686.70, flops:104.62, batch-reuse:1
@ 5301 train 4.1556 , allloss: 4.1562, dt: 1344.08ms, fracRes: 0.3801, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5735, norm(y): 1.0164, norm:1.0756, tok/sec: 97517.68, flops:102.35, batch-reuse:1
@ 5302 train 4.1737 , allloss: 4.1743, dt: 1336.64ms, fracRes: 0.3806, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5738, norm(y): 1.0163, norm:1.1350, tok/sec: 98060.92, flops:102.92, batch-reuse:1
@ 5303 train 4.1858 , allloss: 4.1866, dt: 1335.20ms, fracRes: 0.3822, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5731, norm(y): 1.0164, norm:1.0192, tok/sec: 98166.72, flops:103.03, batch-reuse:1
@ 5304 train 4.1722 , allloss: 4.1726, dt: 1325.90ms, fracRes: 0.3828, norm(attn): 0.2471, norm(output): 0.7422, norm(x): 0.5685, norm(y): 1.0163, norm:1.0983, tok/sec: 98854.88, flops:103.75, batch-reuse:1
@ 5305 train 4.1713 , allloss: 4.1719, dt: 1285.20ms, fracRes: 0.3837, norm(attn): 0.2451, norm(output): 0.7461, norm(x): 0.5721, norm(y): 1.0163, norm:1.0803, tok/sec: 101985.54, flops:107.04, batch-reuse:1
@ 5306 train 4.1583 , allloss: 4.1590, dt: 1288.72ms, fracRes: 0.3824, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5746, norm(y): 1.0163, norm:0.9648, tok/sec: 101707.39, flops:106.74, batch-reuse:1
@ 5307 train 4.0479 , allloss: 4.0485, dt: 1300.81ms, fracRes: 0.3825, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5729, norm(y): 1.0164, norm:1.0464, tok/sec: 100761.64, flops:105.75, batch-reuse:1
@ 5308 train 4.2474 , allloss: 4.2481, dt: 1307.34ms, fracRes: 0.3833, norm(attn): 0.2441, norm(output): 0.7500, norm(x): 0.5734, norm(y): 1.0164, norm:1.0017, tok/sec: 100258.33, flops:105.22, batch-reuse:1
@ 5309 train 4.1500 , allloss: 4.1510, dt: 1317.88ms, fracRes: 0.3825, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5729, norm(y): 1.0163, norm:1.0757, tok/sec: 99456.35, flops:104.38, batch-reuse:1
@ 5310 train 4.1749 , allloss: 4.1757, dt: 1324.22ms, fracRes: 0.3822, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0164, norm:1.1957, tok/sec: 98980.23, flops:103.88, batch-reuse:1
@ 5311 train 4.1547 , allloss: 4.1562, dt: 1343.28ms, fracRes: 0.3822, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5739, norm(y): 1.0163, norm:0.9449, tok/sec: 97576.41, flops:102.41, batch-reuse:1
@ 5312 train 4.0723 , allloss: 4.0728, dt: 1342.87ms, fracRes: 0.3812, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0163, norm:1.2779, tok/sec: 97605.58, flops:102.44, batch-reuse:1
@ 5313 train 4.2108 , allloss: 4.2114, dt: 1333.19ms, fracRes: 0.3818, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5719, norm(y): 1.0163, norm:1.3739, tok/sec: 98314.78, flops:103.18, batch-reuse:1
@ 5314 train 4.2213 , allloss: 4.2219, dt: 1317.10ms, fracRes: 0.3818, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5699, norm(y): 1.0164, norm:1.2133, tok/sec: 99515.44, flops:104.44, batch-reuse:1
@ 5315 train 4.1987 , allloss: 4.1993, dt: 1333.71ms, fracRes: 0.3822, norm(attn): 0.2441, norm(output): 0.7461, norm(x): 0.5700, norm(y): 1.0164, norm:1.1648, tok/sec: 98276.33, flops:103.14, batch-reuse:1
@ 5316 train 4.1430 , allloss: 4.1439, dt: 1327.14ms, fracRes: 0.3825, norm(attn): 0.2461, norm(output): 0.7422, norm(x): 0.5679, norm(y): 1.0163, norm:1.1215, tok/sec: 98762.87, flops:103.65, batch-reuse:1
@ 5317 train 4.0827 , allloss: 4.0833, dt: 1311.07ms, fracRes: 0.3819, norm(attn): 0.2480, norm(output): 0.7422, norm(x): 0.5691, norm(y): 1.0163, norm:1.1286, tok/sec: 99973.65, flops:104.92, batch-reuse:1
@ 5318 train 4.1648 , allloss: 4.1663, dt: 1337.89ms, fracRes: 0.3834, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5733, norm(y): 1.0163, norm:1.1293, tok/sec: 97968.94, flops:102.82, batch-reuse:1
@ 5319 train 4.1905 , allloss: 4.1912, dt: 1333.27ms, fracRes: 0.3830, norm(attn): 0.2461, norm(output): 0.7461, norm(x): 0.5741, norm(y): 1.0162, norm:1.0818, tok/sec: 98308.72, flops:103.18, batch-reuse:1
@ 5320 train 4.1910 , allloss: 4.1917, dt: 1313.03ms, fracRes: 0.3837, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5728, norm(y): 1.0163, norm:1.0407, tok/sec: 99824.02, flops:104.77, batch-reuse:1
@ 5321 train 4.0954 , allloss: 4.0960, dt: 1311.56ms, fracRes: 0.3823, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5717, norm(y): 1.0164, norm:1.0944, tok/sec: 99935.91, flops:104.88, batch-reuse:1
@ 5322 train 4.2060 , allloss: 4.2068, dt: 1331.12ms, fracRes: 0.3817, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5760, norm(y): 1.0163, norm:1.0760, tok/sec: 98467.74, flops:103.34, batch-reuse:1
@ 5323 train 4.1430 , allloss: 4.1441, dt: 1309.63ms, fracRes: 0.3810, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5768, norm(y): 1.0163, norm:1.0731, tok/sec: 100083.40, flops:105.04, batch-reuse:1
@ 5324 train 4.1250 , allloss: 4.1256, dt: 1332.53ms, fracRes: 0.3815, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5719, norm(y): 1.0163, norm:1.0285, tok/sec: 98363.46, flops:103.23, batch-reuse:1
@ 5325 train 4.0982 , allloss: 4.0991, dt: 1309.67ms, fracRes: 0.3814, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5731, norm(y): 1.0162, norm:1.0558, tok/sec: 100080.21, flops:105.04, batch-reuse:1
@ 5326 train 4.1109 , allloss: 4.1114, dt: 1306.65ms, fracRes: 0.3816, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5752, norm(y): 1.0162, norm:1.0520, tok/sec: 100311.34, flops:105.28, batch-reuse:1
@ 5327 train 4.0365 , allloss: 4.0371, dt: 1315.99ms, fracRes: 0.3824, norm(attn): 0.2480, norm(output): 0.7461, norm(x): 0.5767, norm(y): 1.0164, norm:1.1557, tok/sec: 99599.20, flops:104.53, batch-reuse:1
@ 5328 train 4.0905 , allloss: 4.0912, dt: 1318.53ms, fracRes: 0.3818, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5782, norm(y): 1.0163, norm:1.0055, tok/sec: 99407.56, flops:104.33, batch-reuse:1
@ 5329 train 4.2246 , allloss: 4.2256, dt: 1336.54ms, fracRes: 0.3816, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5751, norm(y): 1.0162, norm:1.1382, tok/sec: 98068.46, flops:102.92, batch-reuse:1
@ 5330 train 4.1069 , allloss: 4.1076, dt: 1334.30ms, fracRes: 0.3812, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5752, norm(y): 1.0162, norm:1.0194, tok/sec: 98232.43, flops:103.10, batch-reuse:1
@ 5331 train 4.1677 , allloss: 4.1686, dt: 1336.68ms, fracRes: 0.3822, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5762, norm(y): 1.0163, norm:1.1026, tok/sec: 98057.98, flops:102.91, batch-reuse:1
@ 5332 train 4.1621 , allloss: 4.1630, dt: 1336.68ms, fracRes: 0.3824, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5728, norm(y): 1.0163, norm:1.0254, tok/sec: 98057.65, flops:102.91, batch-reuse:1
@ 5333 train 4.1500 , allloss: 4.1507, dt: 1343.43ms, fracRes: 0.3811, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5717, norm(y): 1.0162, norm:1.0169, tok/sec: 97565.13, flops:102.40, batch-reuse:1
@ 5334 train 4.0391 , allloss: 4.0405, dt: 1340.95ms, fracRes: 0.3794, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5724, norm(y): 1.0163, norm:1.0596, tok/sec: 97745.33, flops:102.59, batch-reuse:1
@ 5335 train 4.1031 , allloss: 4.1044, dt: 1322.51ms, fracRes: 0.3796, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5718, norm(y): 1.0163, norm:0.9816, tok/sec: 99108.60, flops:104.02, batch-reuse:1
@ 5336 train 4.1526 , allloss: 4.1532, dt: 1310.17ms, fracRes: 0.3810, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5713, norm(y): 1.0164, norm:1.0206, tok/sec: 100041.71, flops:105.00, batch-reuse:1
@ 5337 train 4.1019 , allloss: 4.1025, dt: 1291.24ms, fracRes: 0.3802, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5709, norm(y): 1.0163, norm:1.0200, tok/sec: 101508.54, flops:106.54, batch-reuse:1
@ 5338 train 4.1098 , allloss: 4.1111, dt: 1295.17ms, fracRes: 0.3810, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.5791, norm(y): 1.0163, norm:1.0918, tok/sec: 101200.85, flops:106.21, batch-reuse:1
@ 5339 train 4.2437 , allloss: 4.2445, dt: 1313.34ms, fracRes: 0.3790, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.5751, norm(y): 1.0161, norm:1.1311, tok/sec: 99800.31, flops:104.74, batch-reuse:1
@ 5340 train 4.1663 , allloss: 4.1670, dt: 1619.83ms, fracRes: 0.3808, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5741, norm(y): 1.0162, norm:1.1446, tok/sec: 80917.16, flops:84.92, batch-reuse:1
@ 5341 train 4.2196 , allloss: 4.2201, dt: 1334.17ms, fracRes: 0.3818, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5755, norm(y): 1.0163, norm:1.1403, tok/sec: 98242.66, flops:103.11, batch-reuse:1
@ 5342 train 4.1132 , allloss: 4.1139, dt: 1345.28ms, fracRes: 0.3800, norm(attn): 0.2500, norm(output): 0.7461, norm(x): 0.5750, norm(y): 1.0162, norm:1.1500, tok/sec: 97430.68, flops:102.26, batch-reuse:1
@ 5343 train 4.0290 , allloss: 4.0296, dt: 1336.15ms, fracRes: 0.3817, norm(attn): 0.2520, norm(output): 0.7461, norm(x): 0.5755, norm(y): 1.0162, norm:1.1645, tok/sec: 98096.86, flops:102.95, batch-reuse:1
@ 5344 train 4.1631 , allloss: 4.1637, dt: 1318.36ms, fracRes: 0.3822, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.5752, norm(y): 1.0163, norm:1.0889, tok/sec: 99420.61, flops:104.34, batch-reuse:1
@ 5345 train 4.1307 , allloss: 4.1315, dt: 1299.94ms, fracRes: 0.3828, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5755, norm(y): 1.0163, norm:1.0144, tok/sec: 100829.61, flops:105.82, batch-reuse:1
@ 5346 train 3.9077 , allloss: 3.9085, dt: 1317.78ms, fracRes: 0.3826, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5750, norm(y): 1.0163, norm:1.2196, tok/sec: 99464.09, flops:104.39, batch-reuse:1
@ 5347 train 4.0991 , allloss: 4.1001, dt: 1330.40ms, fracRes: 0.3820, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5732, norm(y): 1.0162, norm:1.0555, tok/sec: 98520.98, flops:103.40, batch-reuse:1
@ 5348 train 4.0885 , allloss: 4.0902, dt: 1332.14ms, fracRes: 0.3837, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5735, norm(y): 1.0163, norm:1.1527, tok/sec: 98391.89, flops:103.26, batch-reuse:1
@ 5349 train 4.1637 , allloss: 4.1659, dt: 1317.22ms, fracRes: 0.3852, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5790, norm(y): 1.0163, norm:1.4457, tok/sec: 99506.86, flops:104.43, batch-reuse:1
@ 5350 train 4.2686 , allloss: 4.2697, dt: 1294.33ms, fracRes: 0.3845, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5737, norm(y): 1.0163, norm:1.2210, tok/sec: 101266.56, flops:106.28, batch-reuse:1
@ 5351 train 4.0242 , allloss: 4.0253, dt: 1289.60ms, fracRes: 0.3843, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5731, norm(y): 1.0163, norm:1.1734, tok/sec: 101637.73, flops:106.67, batch-reuse:1
@ 5352 train 4.0373 , allloss: 4.0385, dt: 1287.44ms, fracRes: 0.3844, norm(attn): 0.2451, norm(output): 0.7500, norm(x): 0.5718, norm(y): 1.0164, norm:1.1661, tok/sec: 101808.57, flops:106.85, batch-reuse:1
@ 5353 train 4.0241 , allloss: 4.0247, dt: 1318.43ms, fracRes: 0.3841, norm(attn): 0.2441, norm(output): 0.7500, norm(x): 0.5735, norm(y): 1.0164, norm:1.1249, tok/sec: 99415.09, flops:104.34, batch-reuse:1
@ 5354 train 4.0865 , allloss: 4.0881, dt: 1334.95ms, fracRes: 0.3837, norm(attn): 0.2451, norm(output): 0.7539, norm(x): 0.5795, norm(y): 1.0164, norm:1.1726, tok/sec: 98185.02, flops:103.05, batch-reuse:1
@ 5355 train 4.0023 , allloss: 4.0041, dt: 1341.59ms, fracRes: 0.3824, norm(attn): 0.2461, norm(output): 0.7539, norm(x): 0.5785, norm(y): 1.0163, norm:1.0725, tok/sec: 97699.06, flops:102.54, batch-reuse:1
@ 5356 train 4.0345 , allloss: 4.0353, dt: 1298.57ms, fracRes: 0.3827, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5778, norm(y): 1.0163, norm:1.0210, tok/sec: 100935.26, flops:105.93, batch-reuse:1
@ 5357 train 4.0210 , allloss: 4.0228, dt: 1306.48ms, fracRes: 0.3813, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5766, norm(y): 1.0162, norm:1.0276, tok/sec: 100324.41, flops:105.29, batch-reuse:1
@ 5358 train 4.1902 , allloss: 4.1916, dt: 1291.82ms, fracRes: 0.3808, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5806, norm(y): 1.0162, norm:0.8844, tok/sec: 101463.20, flops:106.49, batch-reuse:1
@ 5359 train 4.1665 , allloss: 4.1673, dt: 1294.76ms, fracRes: 0.3809, norm(attn): 0.2451, norm(output): 0.7578, norm(x): 0.5812, norm(y): 1.0162, norm:1.1092, tok/sec: 101232.33, flops:106.25, batch-reuse:1
@ 5360 train 4.0490 , allloss: 4.0496, dt: 1296.47ms, fracRes: 0.3807, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5765, norm(y): 1.0164, norm:0.9012, tok/sec: 101099.05, flops:106.11, batch-reuse:1
@ 5361 train 4.1276 , allloss: 4.1284, dt: 1312.82ms, fracRes: 0.3810, norm(attn): 0.2461, norm(output): 0.7500, norm(x): 0.5751, norm(y): 1.0164, norm:0.9800, tok/sec: 99840.33, flops:104.78, batch-reuse:1
@ 5362 train 4.1825 , allloss: 4.1845, dt: 1344.76ms, fracRes: 0.3810, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5781, norm(y): 1.0162, norm:0.9887, tok/sec: 97468.39, flops:102.29, batch-reuse:1
@ 5363 train 4.0544 , allloss: 4.0556, dt: 1324.57ms, fracRes: 0.3822, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5773, norm(y): 1.0163, norm:0.9978, tok/sec: 98954.06, flops:103.85, batch-reuse:1
@ 5364 train 4.2035 , allloss: 4.2046, dt: 1339.48ms, fracRes: 0.3838, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5792, norm(y): 1.0163, norm:1.0700, tok/sec: 97853.22, flops:102.70, batch-reuse:1
@ 5365 train 3.9376 , allloss: 3.9386, dt: 1350.39ms, fracRes: 0.3840, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5766, norm(y): 1.0164, norm:1.0062, tok/sec: 97062.66, flops:101.87, batch-reuse:1
@ 5366 train 4.0858 , allloss: 4.0863, dt: 1337.74ms, fracRes: 0.3832, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5761, norm(y): 1.0163, norm:1.1378, tok/sec: 97980.41, flops:102.83, batch-reuse:1
@ 5367 train 4.0689 , allloss: 4.0695, dt: 1330.07ms, fracRes: 0.3830, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5745, norm(y): 1.0162, norm:1.0891, tok/sec: 98545.44, flops:103.43, batch-reuse:1
@ 5368 train 3.9888 , allloss: 3.9896, dt: 1345.88ms, fracRes: 0.3833, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5767, norm(y): 1.0162, norm:1.0028, tok/sec: 97387.67, flops:102.21, batch-reuse:1
@ 5369 train 4.0866 , allloss: 4.0875, dt: 1356.72ms, fracRes: 0.3837, norm(attn): 0.2461, norm(output): 0.7500, norm(x): 0.5759, norm(y): 1.0163, norm:1.0397, tok/sec: 96609.56, flops:101.39, batch-reuse:1
@ 5370 train 3.9914 , allloss: 3.9922, dt: 1346.47ms, fracRes: 0.3843, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5762, norm(y): 1.0164, norm:1.0683, tok/sec: 97345.06, flops:102.17, batch-reuse:1
@ 5371 train 4.0879 , allloss: 4.0883, dt: 1351.68ms, fracRes: 0.3848, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5736, norm(y): 1.0163, norm:0.9588, tok/sec: 96969.52, flops:101.77, batch-reuse:1
@ 5372 train 4.0701 , allloss: 4.0716, dt: 1350.91ms, fracRes: 0.3840, norm(attn): 0.2490, norm(output): 0.7461, norm(x): 0.5768, norm(y): 1.0163, norm:1.0224, tok/sec: 97024.90, flops:101.83, batch-reuse:1
@ 5373 train 4.2255 , allloss: 4.2261, dt: 1348.93ms, fracRes: 0.3840, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5755, norm(y): 1.0163, norm:1.0395, tok/sec: 97167.07, flops:101.98, batch-reuse:1
@ 5374 train 4.0118 , allloss: 4.0132, dt: 1284.43ms, fracRes: 0.3826, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5741, norm(y): 1.0164, norm:1.0835, tok/sec: 102047.20, flops:107.10, batch-reuse:1
@ 5375 train 4.0477 , allloss: 4.0488, dt: 1314.38ms, fracRes: 0.3820, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5757, norm(y): 1.0163, norm:1.1326, tok/sec: 99721.64, flops:104.66, batch-reuse:1
@ 5376 train 4.0064 , allloss: 4.0071, dt: 1341.21ms, fracRes: 0.3829, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5760, norm(y): 1.0163, norm:0.9602, tok/sec: 97726.39, flops:102.57, batch-reuse:1
@ 5377 train 4.1482 , allloss: 4.1515, dt: 1286.94ms, fracRes: 0.3835, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5732, norm(y): 1.0163, norm:1.0360, tok/sec: 101848.05, flops:106.89, batch-reuse:1
@ 5378 train 4.0673 , allloss: 4.0683, dt: 1293.76ms, fracRes: 0.3829, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5713, norm(y): 1.0163, norm:1.0214, tok/sec: 101310.77, flops:106.33, batch-reuse:1
@ 5379 train 4.0302 , allloss: 4.0312, dt: 1315.66ms, fracRes: 0.3826, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5740, norm(y): 1.0163, norm:1.1982, tok/sec: 99624.38, flops:104.56, batch-reuse:1
@ 5380 train 4.0110 , allloss: 4.0145, dt: 1330.10ms, fracRes: 0.3831, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5747, norm(y): 1.0164, norm:1.0611, tok/sec: 98543.12, flops:103.42, batch-reuse:1
@ 5381 train 4.0326 , allloss: 4.0333, dt: 1352.09ms, fracRes: 0.3829, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5785, norm(y): 1.0164, norm:1.0547, tok/sec: 96940.06, flops:101.74, batch-reuse:1
@ 5382 train 3.9544 , allloss: 3.9564, dt: 1329.63ms, fracRes: 0.3821, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5759, norm(y): 1.0163, norm:0.9789, tok/sec: 98577.68, flops:103.46, batch-reuse:1
@ 5383 train 4.1500 , allloss: 4.1510, dt: 1302.02ms, fracRes: 0.3828, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5801, norm(y): 1.0162, norm:1.1808, tok/sec: 100668.26, flops:105.65, batch-reuse:1
@ 5384 train 4.0269 , allloss: 4.0280, dt: 1319.91ms, fracRes: 0.3830, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5773, norm(y): 1.0163, norm:1.1027, tok/sec: 99303.88, flops:104.22, batch-reuse:1
@ 5385 train 4.0675 , allloss: 4.0685, dt: 1328.69ms, fracRes: 0.3829, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5780, norm(y): 1.0163, norm:1.0050, tok/sec: 98647.70, flops:103.53, batch-reuse:1
@ 5386 train 4.0586 , allloss: 4.0592, dt: 1308.56ms, fracRes: 0.3823, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5787, norm(y): 1.0163, norm:1.1303, tok/sec: 100164.73, flops:105.12, batch-reuse:1
@ 5387 train 4.0378 , allloss: 4.0384, dt: 1328.15ms, fracRes: 0.3817, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5799, norm(y): 1.0163, norm:1.0401, tok/sec: 98687.57, flops:103.57, batch-reuse:1
@ 5388 train 4.0751 , allloss: 4.0760, dt: 1266.73ms, fracRes: 0.3817, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5777, norm(y): 1.0162, norm:1.0010, tok/sec: 103472.87, flops:108.60, batch-reuse:1
@ 5389 train 4.4249 , allloss: 4.4257, dt: 1300.58ms, fracRes: 0.3840, norm(attn): 0.2461, norm(output): 0.7500, norm(x): 0.5782, norm(y): 1.0163, norm:1.1385, tok/sec: 100779.82, flops:105.77, batch-reuse:1
@ 5390 train 4.2515 , allloss: 4.2539, dt: 1303.55ms, fracRes: 0.3829, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5770, norm(y): 1.0163, norm:1.0910, tok/sec: 100549.87, flops:105.53, batch-reuse:1
@ 5391 train 4.1167 , allloss: 4.1174, dt: 1303.52ms, fracRes: 0.3821, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5832, norm(y): 1.0163, norm:1.0147, tok/sec: 100552.06, flops:105.53, batch-reuse:1
@ 5392 train 4.1815 , allloss: 4.1827, dt: 1294.01ms, fracRes: 0.3823, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5795, norm(y): 1.0163, norm:1.0118, tok/sec: 101291.02, flops:106.31, batch-reuse:1
@ 5393 train 4.1859 , allloss: 4.1865, dt: 1277.56ms, fracRes: 0.3819, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5799, norm(y): 1.0163, norm:0.9710, tok/sec: 102595.86, flops:107.68, batch-reuse:1
@ 5394 train 4.1474 , allloss: 4.1493, dt: 1307.74ms, fracRes: 0.3823, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5841, norm(y): 1.0162, norm:1.2143, tok/sec: 100228.06, flops:105.19, batch-reuse:1
@ 5395 train 4.3833 , allloss: 4.3853, dt: 1333.99ms, fracRes: 0.3820, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5778, norm(y): 1.0162, norm:1.2233, tok/sec: 98255.67, flops:103.12, batch-reuse:1
@ 5396 train 4.2445 , allloss: 4.2453, dt: 1318.19ms, fracRes: 0.3834, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5753, norm(y): 1.0164, norm:1.0427, tok/sec: 99433.50, flops:104.36, batch-reuse:1
@ 5397 train 4.2618 , allloss: 4.2625, dt: 1321.11ms, fracRes: 0.3838, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5759, norm(y): 1.0164, norm:1.2898, tok/sec: 99213.25, flops:104.13, batch-reuse:1
@ 5398 train 4.2616 , allloss: 4.2623, dt: 1333.00ms, fracRes: 0.3818, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5790, norm(y): 1.0162, norm:1.0586, tok/sec: 98328.30, flops:103.20, batch-reuse:1
@ 5399 train 4.2756 , allloss: 4.2784, dt: 1329.64ms, fracRes: 0.3836, norm(attn): 0.2490, norm(output): 0.7578, norm(x): 0.5850, norm(y): 1.0163, norm:1.1827, tok/sec: 98576.84, flops:103.46, batch-reuse:1
@ 5400 train 4.2525 , allloss: 4.2535, dt: 1308.38ms, fracRes: 0.3830, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5806, norm(y): 1.0162, norm:1.0672, tok/sec: 100178.76, flops:105.14, batch-reuse:1
@ 5401 train 4.1973 , allloss: 4.1980, dt: 1291.74ms, fracRes: 0.3844, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5766, norm(y): 1.0163, norm:1.1089, tok/sec: 101469.32, flops:106.49, batch-reuse:1
@ 5402 train 4.2791 , allloss: 4.2815, dt: 1305.41ms, fracRes: 0.3843, norm(attn): 0.2461, norm(output): 0.7539, norm(x): 0.5816, norm(y): 1.0163, norm:1.1096, tok/sec: 100406.72, flops:105.38, batch-reuse:1
@ 5403 train 4.2554 , allloss: 4.2564, dt: 1309.97ms, fracRes: 0.3846, norm(attn): 0.2422, norm(output): 0.7539, norm(x): 0.5829, norm(y): 1.0164, norm:1.0958, tok/sec: 100057.19, flops:105.01, batch-reuse:1
@ 5404 train 4.1659 , allloss: 4.1667, dt: 1282.90ms, fracRes: 0.3851, norm(attn): 0.2461, norm(output): 0.7539, norm(x): 0.5835, norm(y): 1.0164, norm:1.0146, tok/sec: 102168.61, flops:107.23, batch-reuse:1
@ 5405 train 4.1937 , allloss: 4.1946, dt: 1315.57ms, fracRes: 0.3853, norm(attn): 0.2461, norm(output): 0.7539, norm(x): 0.5802, norm(y): 1.0163, norm:1.1389, tok/sec: 99631.33, flops:104.56, batch-reuse:1
@ 5406 train 4.2551 , allloss: 4.2568, dt: 1330.29ms, fracRes: 0.3855, norm(attn): 0.2461, norm(output): 0.7500, norm(x): 0.5779, norm(y): 1.0163, norm:1.0441, tok/sec: 98529.13, flops:103.41, batch-reuse:1
@ 5407 train 4.2351 , allloss: 4.2364, dt: 1293.41ms, fracRes: 0.3830, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5789, norm(y): 1.0162, norm:1.0609, tok/sec: 101338.19, flops:106.36, batch-reuse:1
@ 5408 train 4.2102 , allloss: 4.2110, dt: 1280.20ms, fracRes: 0.3842, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5823, norm(y): 1.0163, norm:1.0982, tok/sec: 102383.74, flops:107.45, batch-reuse:1
@ 5409 train 4.2178 , allloss: 4.2185, dt: 1304.48ms, fracRes: 0.3832, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5806, norm(y): 1.0163, norm:1.0206, tok/sec: 100478.71, flops:105.45, batch-reuse:1
@ 5410 train 4.1877 , allloss: 4.1883, dt: 1332.64ms, fracRes: 0.3831, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5794, norm(y): 1.0164, norm:1.1291, tok/sec: 98354.96, flops:103.23, batch-reuse:1
@ 5411 train 4.2968 , allloss: 4.2980, dt: 1285.10ms, fracRes: 0.3825, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5810, norm(y): 1.0163, norm:1.1031, tok/sec: 101993.45, flops:107.04, batch-reuse:1
@ 5412 train 4.1590 , allloss: 4.1595, dt: 1279.26ms, fracRes: 0.3825, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5801, norm(y): 1.0163, norm:1.0017, tok/sec: 102459.34, flops:107.53, batch-reuse:1
@ 5413 train 4.1475 , allloss: 4.1484, dt: 1321.85ms, fracRes: 0.3823, norm(attn): 0.2520, norm(output): 0.7539, norm(x): 0.5829, norm(y): 1.0162, norm:1.0641, tok/sec: 99158.21, flops:104.07, batch-reuse:1
@ 5414 train 4.0964 , allloss: 4.0983, dt: 1315.53ms, fracRes: 0.3810, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5807, norm(y): 1.0162, norm:1.0845, tok/sec: 99634.62, flops:104.57, batch-reuse:1
@ 5415 train 4.1355 , allloss: 4.1365, dt: 1280.71ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.5796, norm(y): 1.0164, norm:1.1009, tok/sec: 102343.39, flops:107.41, batch-reuse:1
@ 5416 train 4.2097 , allloss: 4.2105, dt: 1305.98ms, fracRes: 0.3830, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5790, norm(y): 1.0164, norm:1.0110, tok/sec: 100362.95, flops:105.33, batch-reuse:1
@ 5417 train 4.2428 , allloss: 4.2436, dt: 1276.66ms, fracRes: 0.3826, norm(attn): 0.2471, norm(output): 0.7539, norm(x): 0.5832, norm(y): 1.0163, norm:1.1022, tok/sec: 102668.23, flops:107.75, batch-reuse:1
@ 5418 train 4.1770 , allloss: 4.1786, dt: 1295.32ms, fracRes: 0.3818, norm(attn): 0.2471, norm(output): 0.7539, norm(x): 0.5826, norm(y): 1.0163, norm:1.2516, tok/sec: 101188.82, flops:106.20, batch-reuse:1
@ 5419 train 4.2092 , allloss: 4.2099, dt: 1317.18ms, fracRes: 0.3803, norm(attn): 0.2520, norm(output): 0.7539, norm(x): 0.5826, norm(y): 1.0162, norm:1.0183, tok/sec: 99509.46, flops:104.44, batch-reuse:1
@ 5420 train 4.1791 , allloss: 4.1800, dt: 1294.07ms, fracRes: 0.3820, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5815, norm(y): 1.0163, norm:1.1245, tok/sec: 101286.73, flops:106.30, batch-reuse:1
@ 5421 train 4.2221 , allloss: 4.2229, dt: 1312.13ms, fracRes: 0.3815, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5828, norm(y): 1.0163, norm:1.0765, tok/sec: 99892.22, flops:104.84, batch-reuse:1
@ 5422 train 4.2189 , allloss: 4.2197, dt: 1294.50ms, fracRes: 0.3824, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5863, norm(y): 1.0163, norm:1.1825, tok/sec: 101252.84, flops:106.27, batch-reuse:1
@ 5423 train 4.3632 , allloss: 4.3641, dt: 1310.30ms, fracRes: 0.3820, norm(attn): 0.2520, norm(output): 0.7539, norm(x): 0.5843, norm(y): 1.0162, norm:0.9915, tok/sec: 100032.03, flops:104.99, batch-reuse:1
@ 5424 train 4.2576 , allloss: 4.2583, dt: 1314.20ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5836, norm(y): 1.0163, norm:1.2597, tok/sec: 99735.31, flops:104.67, batch-reuse:1
@ 5425 train 4.1567 , allloss: 4.1574, dt: 1296.17ms, fracRes: 0.3838, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5810, norm(y): 1.0162, norm:1.1010, tok/sec: 101122.91, flops:106.13, batch-reuse:1
@ 5426 train 4.1766 , allloss: 4.1773, dt: 1297.99ms, fracRes: 0.3831, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5808, norm(y): 1.0163, norm:1.1644, tok/sec: 100980.98, flops:105.98, batch-reuse:1
@ 5427 train 4.1593 , allloss: 4.1598, dt: 1280.56ms, fracRes: 0.3834, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5776, norm(y): 1.0164, norm:1.0623, tok/sec: 102354.91, flops:107.42, batch-reuse:1
@ 5428 train 4.1155 , allloss: 4.1163, dt: 1308.09ms, fracRes: 0.3834, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5763, norm(y): 1.0164, norm:1.1005, tok/sec: 100200.71, flops:105.16, batch-reuse:1
@ 5429 train 4.2039 , allloss: 4.2046, dt: 1296.35ms, fracRes: 0.3836, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5780, norm(y): 1.0164, norm:1.4560, tok/sec: 101108.24, flops:106.11, batch-reuse:1
@ 5430 train 4.3131 , allloss: 4.3142, dt: 1295.20ms, fracRes: 0.3826, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5819, norm(y): 1.0163, norm:1.4918, tok/sec: 101197.96, flops:106.21, batch-reuse:1
@ 5431 train 4.2141 , allloss: 4.2150, dt: 1322.90ms, fracRes: 0.3844, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5789, norm(y): 1.0164, norm:1.2062, tok/sec: 99079.42, flops:103.99, batch-reuse:1
@ 5432 train 4.2422 , allloss: 4.2432, dt: 1310.76ms, fracRes: 0.3834, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5757, norm(y): 1.0163, norm:1.1801, tok/sec: 99997.20, flops:104.95, batch-reuse:1
@ 5433 train 4.2097 , allloss: 4.2103, dt: 1309.42ms, fracRes: 0.3850, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5768, norm(y): 1.0164, norm:1.1205, tok/sec: 100099.36, flops:105.06, batch-reuse:1
@ 5434 train 4.2485 , allloss: 4.2491, dt: 1293.57ms, fracRes: 0.3838, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5810, norm(y): 1.0163, norm:1.2777, tok/sec: 101325.97, flops:106.34, batch-reuse:1
@ 5435 train 4.2512 , allloss: 4.2527, dt: 1312.29ms, fracRes: 0.3843, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5793, norm(y): 1.0163, norm:1.0834, tok/sec: 99880.42, flops:104.83, batch-reuse:1
@ 5436 train 4.1721 , allloss: 4.1733, dt: 1339.49ms, fracRes: 0.3834, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5779, norm(y): 1.0162, norm:1.1729, tok/sec: 97851.86, flops:102.70, batch-reuse:1
@ 5437 train 4.1467 , allloss: 4.1475, dt: 1345.53ms, fracRes: 0.3842, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5797, norm(y): 1.0162, norm:1.1142, tok/sec: 97413.10, flops:102.24, batch-reuse:1
@ 5438 train 4.1375 , allloss: 4.1388, dt: 1317.23ms, fracRes: 0.3839, norm(attn): 0.2471, norm(output): 0.7539, norm(x): 0.5814, norm(y): 1.0163, norm:1.1091, tok/sec: 99505.46, flops:104.43, batch-reuse:1
@ 5439 train 4.1818 , allloss: 4.1849, dt: 1330.70ms, fracRes: 0.3829, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5839, norm(y): 1.0163, norm:1.2232, tok/sec: 98498.21, flops:103.38, batch-reuse:1
@ 5440 train 4.2029 , allloss: 4.2039, dt: 1337.75ms, fracRes: 0.3833, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5819, norm(y): 1.0163, norm:0.9174, tok/sec: 97979.76, flops:102.83, batch-reuse:1
@ 5441 train 4.1900 , allloss: 4.1907, dt: 1339.12ms, fracRes: 0.3834, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5796, norm(y): 1.0162, norm:1.1210, tok/sec: 97879.04, flops:102.73, batch-reuse:1
@ 5442 train 4.3489 , allloss: 4.3495, dt: 1313.50ms, fracRes: 0.3830, norm(attn): 0.2451, norm(output): 0.7539, norm(x): 0.5758, norm(y): 1.0163, norm:1.1176, tok/sec: 99788.10, flops:104.73, batch-reuse:1
@ 5443 train 4.1960 , allloss: 4.1968, dt: 1325.75ms, fracRes: 0.3829, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5790, norm(y): 1.0164, norm:1.3423, tok/sec: 98866.15, flops:103.76, batch-reuse:1
@ 5444 train 4.3165 , allloss: 4.3171, dt: 1302.76ms, fracRes: 0.3843, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5839, norm(y): 1.0164, norm:1.0863, tok/sec: 100611.31, flops:105.59, batch-reuse:1
@ 5445 train 4.1731 , allloss: 4.1739, dt: 1311.57ms, fracRes: 0.3845, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5814, norm(y): 1.0164, norm:1.1709, tok/sec: 99935.45, flops:104.88, batch-reuse:1
@ 5446 train 4.2551 , allloss: 4.2558, dt: 1332.71ms, fracRes: 0.3844, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5804, norm(y): 1.0164, norm:1.0116, tok/sec: 98349.92, flops:103.22, batch-reuse:1
@ 5447 train 4.2473 , allloss: 4.2481, dt: 1309.46ms, fracRes: 0.3806, norm(attn): 0.2578, norm(output): 0.7539, norm(x): 0.5832, norm(y): 1.0163, norm:1.3711, tok/sec: 100096.57, flops:105.05, batch-reuse:1
@ 5448 train 4.2747 , allloss: 4.2752, dt: 1343.67ms, fracRes: 0.3812, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5814, norm(y): 1.0163, norm:1.2573, tok/sec: 97547.91, flops:102.38, batch-reuse:1
@ 5449 train 4.1677 , allloss: 4.1693, dt: 1306.35ms, fracRes: 0.3815, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5830, norm(y): 1.0163, norm:1.1423, tok/sec: 100334.14, flops:105.30, batch-reuse:1
@ 5450 train 4.1585 , allloss: 4.1591, dt: 1300.01ms, fracRes: 0.3816, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5821, norm(y): 1.0163, norm:1.0441, tok/sec: 100823.49, flops:105.82, batch-reuse:1
@ 5451 train 4.1550 , allloss: 4.1556, dt: 1316.17ms, fracRes: 0.3835, norm(attn): 0.2490, norm(output): 0.7578, norm(x): 0.5864, norm(y): 1.0164, norm:1.1158, tok/sec: 99585.89, flops:104.52, batch-reuse:1
@ 5452 train 4.1598 , allloss: 4.1605, dt: 1340.05ms, fracRes: 0.3834, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5865, norm(y): 1.0164, norm:1.1667, tok/sec: 97811.03, flops:102.65, batch-reuse:1
@ 5453 train 4.2882 , allloss: 4.2922, dt: 1316.71ms, fracRes: 0.3851, norm(attn): 0.2471, norm(output): 0.7695, norm(x): 0.5863, norm(y): 1.0164, norm:1.1602, tok/sec: 99545.24, flops:104.47, batch-reuse:1
@ 5454 train 4.2258 , allloss: 4.2271, dt: 1310.85ms, fracRes: 0.3862, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5831, norm(y): 1.0164, norm:1.0359, tok/sec: 99989.82, flops:104.94, batch-reuse:1
@ 5455 train 4.3645 , allloss: 4.3656, dt: 1289.87ms, fracRes: 0.3851, norm(attn): 0.2461, norm(output): 0.7578, norm(x): 0.5822, norm(y): 1.0163, norm:1.0664, tok/sec: 101616.06, flops:106.65, batch-reuse:1
@ 5456 train 4.2214 , allloss: 4.2222, dt: 1297.49ms, fracRes: 0.3844, norm(attn): 0.2480, norm(output): 0.7578, norm(x): 0.5826, norm(y): 1.0163, norm:1.1471, tok/sec: 101019.35, flops:106.02, batch-reuse:1
@ 5457 train 4.1681 , allloss: 4.1690, dt: 1310.60ms, fracRes: 0.3832, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5808, norm(y): 1.0163, norm:0.9827, tok/sec: 100009.26, flops:104.96, batch-reuse:1
@ 5458 train 4.1642 , allloss: 4.1658, dt: 1295.24ms, fracRes: 0.3826, norm(attn): 0.2490, norm(output): 0.7539, norm(x): 0.5812, norm(y): 1.0163, norm:0.9461, tok/sec: 101195.23, flops:106.21, batch-reuse:1
@ 5459 train 4.1964 , allloss: 4.1972, dt: 1348.30ms, fracRes: 0.3825, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5805, norm(y): 1.0164, norm:1.1257, tok/sec: 97212.53, flops:102.03, batch-reuse:1
@ 5460 train 4.1792 , allloss: 4.1802, dt: 1336.90ms, fracRes: 0.3816, norm(attn): 0.2490, norm(output): 0.7500, norm(x): 0.5784, norm(y): 1.0164, norm:1.0593, tok/sec: 98042.04, flops:102.90, batch-reuse:1
@ 5461 train 4.3508 , allloss: 4.3518, dt: 1340.10ms, fracRes: 0.3823, norm(attn): 0.2480, norm(output): 0.7500, norm(x): 0.5812, norm(y): 1.0164, norm:0.9601, tok/sec: 97807.67, flops:102.65, batch-reuse:1
@ 5462 train 4.2170 , allloss: 4.2179, dt: 1341.73ms, fracRes: 0.3809, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5799, norm(y): 1.0164, norm:1.0966, tok/sec: 97689.02, flops:102.53, batch-reuse:1
@ 5463 train 4.2502 , allloss: 4.2512, dt: 1327.02ms, fracRes: 0.3807, norm(attn): 0.2520, norm(output): 0.7500, norm(x): 0.5814, norm(y): 1.0162, norm:1.0249, tok/sec: 98772.01, flops:103.66, batch-reuse:1
@ 5464 train 4.1914 , allloss: 4.1921, dt: 1294.10ms, fracRes: 0.3817, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5804, norm(y): 1.0162, norm:1.0961, tok/sec: 101284.14, flops:106.30, batch-reuse:1
@ 5465 train 4.1804 , allloss: 4.1815, dt: 1307.15ms, fracRes: 0.3821, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5811, norm(y): 1.0163, norm:1.0505, tok/sec: 100273.07, flops:105.24, batch-reuse:1
@ 5466 train 4.1748 , allloss: 4.1780, dt: 1286.86ms, fracRes: 0.3830, norm(attn): 0.2500, norm(output): 0.7500, norm(x): 0.5819, norm(y): 1.0163, norm:0.9702, tok/sec: 101854.33, flops:106.90, batch-reuse:1
@ 5467 train 4.1885 , allloss: 4.1895, dt: 1290.44ms, fracRes: 0.3832, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5785, norm(y): 1.0163, norm:1.0601, tok/sec: 101571.63, flops:106.60, batch-reuse:1
@ 5468 train 4.1706 , allloss: 4.1723, dt: 1290.41ms, fracRes: 0.3834, norm(attn): 0.2500, norm(output): 0.7539, norm(x): 0.5793, norm(y): 1.0164, norm:1.0593, tok/sec: 101574.12, flops:106.60, batch-reuse:1
@ 5469 train 4.1835 , allloss: 4.1848, dt: 1322.47ms, fracRes: 0.3835, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5834, norm(y): 1.0164, norm:1.0413, tok/sec: 99111.14, flops:104.02, batch-reuse:1
@ 5470 train 4.2157 , allloss: 4.2166, dt: 1331.46ms, fracRes: 0.3833, norm(attn): 0.2490, norm(output): 0.7578, norm(x): 0.5840, norm(y): 1.0163, norm:1.0856, tok/sec: 98442.38, flops:103.32, batch-reuse:1
@ 5471 train 4.1583 , allloss: 4.1591, dt: 1312.17ms, fracRes: 0.3839, norm(attn): 0.2471, norm(output): 0.7500, norm(x): 0.5778, norm(y): 1.0164, norm:1.0269, tok/sec: 99889.75, flops:104.84, batch-reuse:1
@ 5472 train 4.2639 , allloss: 4.2652, dt: 1316.30ms, fracRes: 0.3842, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5775, norm(y): 1.0163, norm:1.0888, tok/sec: 99575.96, flops:104.51, batch-reuse:1
@ 5473 train 4.2227 , allloss: 4.2259, dt: 1323.76ms, fracRes: 0.3824, norm(attn): 0.2480, norm(output): 0.7539, norm(x): 0.5846, norm(y): 1.0163, norm:1.1060, tok/sec: 99015.05, flops:103.92, batch-reuse:1
@ 5474 train 4.2186 , allloss: 4.2209, dt: 1296.99ms, fracRes: 0.3831, norm(attn): 0.2451, norm(output): 0.7656, norm(x): 0.5840, norm(y): 1.0164, norm:1.0555, tok/sec: 101058.48, flops:106.06, batch-reuse:1
@ 5475 train 4.1290 , allloss: 4.1296, dt: 1302.97ms, fracRes: 0.3844, norm(attn): 0.2471, norm(output): 0.7656, norm(x): 0.5865, norm(y): 1.0167, norm:1.1245, tok/sec: 100594.93, flops:105.58, batch-reuse:1
@ 5476 train 4.2118 , allloss: 4.2125, dt: 1298.40ms, fracRes: 0.3861, norm(attn): 0.2432, norm(output): 0.7695, norm(x): 0.5839, norm(y): 1.0166, norm:1.0455, tok/sec: 100949.14, flops:105.95, batch-reuse:1
@ 5477 train 4.1676 , allloss: 4.1685, dt: 1302.67ms, fracRes: 0.3857, norm(attn): 0.2461, norm(output): 0.7617, norm(x): 0.5822, norm(y): 1.0165, norm:1.1838, tok/sec: 100617.70, flops:105.60, batch-reuse:1
@ 5478 train 4.1349 , allloss: 4.1353, dt: 1325.99ms, fracRes: 0.3860, norm(attn): 0.2432, norm(output): 0.7656, norm(x): 0.5834, norm(y): 1.0164, norm:1.0308, tok/sec: 98848.45, flops:103.74, batch-reuse:1
@ 5479 train 4.2416 , allloss: 4.2470, dt: 1320.35ms, fracRes: 0.3878, norm(attn): 0.2480, norm(output): 0.7734, norm(x): 0.5907, norm(y): 1.0165, norm:1.2251, tok/sec: 99270.90, flops:104.19, batch-reuse:1
@ 5480 train 4.1209 , allloss: 4.1216, dt: 1303.58ms, fracRes: 0.3853, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5884, norm(y): 1.0165, norm:1.0605, tok/sec: 100547.35, flops:105.53, batch-reuse:1
@ 5481 train 4.2095 , allloss: 4.2103, dt: 1315.39ms, fracRes: 0.3844, norm(attn): 0.2471, norm(output): 0.7812, norm(x): 0.5896, norm(y): 1.0165, norm:1.3110, tok/sec: 99645.07, flops:104.58, batch-reuse:1
@ 5482 train 4.1247 , allloss: 4.1256, dt: 1304.16ms, fracRes: 0.3829, norm(attn): 0.2490, norm(output): 0.7734, norm(x): 0.5884, norm(y): 1.0164, norm:1.0738, tok/sec: 100503.35, flops:105.48, batch-reuse:1
@ 5483 train 4.1177 , allloss: 4.1221, dt: 1337.66ms, fracRes: 0.3831, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5853, norm(y): 1.0164, norm:1.3281, tok/sec: 97985.70, flops:102.84, batch-reuse:1
@ 5484 train 4.1553 , allloss: 4.1558, dt: 1334.20ms, fracRes: 0.3841, norm(attn): 0.2480, norm(output): 0.7695, norm(x): 0.5870, norm(y): 1.0164, norm:0.9899, tok/sec: 98240.38, flops:103.11, batch-reuse:1
@ 5485 train 4.1613 , allloss: 4.1623, dt: 1302.95ms, fracRes: 0.3852, norm(attn): 0.2471, norm(output): 0.7656, norm(x): 0.5870, norm(y): 1.0164, norm:1.1791, tok/sec: 100596.38, flops:105.58, batch-reuse:1
@ 5486 train 4.1973 , allloss: 4.1987, dt: 1317.44ms, fracRes: 0.3856, norm(attn): 0.2451, norm(output): 0.7773, norm(x): 0.5897, norm(y): 1.0165, norm:1.1699, tok/sec: 99490.01, flops:104.42, batch-reuse:1
@ 5487 train 4.1249 , allloss: 4.1255, dt: 1337.20ms, fracRes: 0.3854, norm(attn): 0.2471, norm(output): 0.7734, norm(x): 0.5864, norm(y): 1.0165, norm:1.1252, tok/sec: 98019.54, flops:102.87, batch-reuse:1
@ 5488 train 4.1636 , allloss: 4.1648, dt: 1341.57ms, fracRes: 0.3854, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.5858, norm(y): 1.0164, norm:1.2621, tok/sec: 97700.57, flops:102.54, batch-reuse:1
@ 5489 train 4.1168 , allloss: 4.1174, dt: 1329.65ms, fracRes: 0.3852, norm(attn): 0.2461, norm(output): 0.7578, norm(x): 0.5844, norm(y): 1.0164, norm:1.0069, tok/sec: 98576.00, flops:103.46, batch-reuse:1
@ 5490 train 4.1181 , allloss: 4.1193, dt: 1317.42ms, fracRes: 0.3837, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5889, norm(y): 1.0163, norm:1.0235, tok/sec: 99491.47, flops:104.42, batch-reuse:1
@ 5491 train 4.1488 , allloss: 4.1502, dt: 1286.35ms, fracRes: 0.3835, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5866, norm(y): 1.0162, norm:1.1170, tok/sec: 101894.75, flops:106.94, batch-reuse:1
@ 5492 train 4.2528 , allloss: 4.2538, dt: 1301.18ms, fracRes: 0.3829, norm(attn): 0.2520, norm(output): 0.7578, norm(x): 0.5874, norm(y): 1.0162, norm:1.0463, tok/sec: 100733.08, flops:105.72, batch-reuse:1
@ 5493 train 4.0669 , allloss: 4.0680, dt: 1341.67ms, fracRes: 0.3832, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5856, norm(y): 1.0163, norm:1.0815, tok/sec: 97693.31, flops:102.53, batch-reuse:1
@ 5494 train 4.1773 , allloss: 4.1786, dt: 1315.26ms, fracRes: 0.3825, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5842, norm(y): 1.0163, norm:0.9744, tok/sec: 99654.75, flops:104.59, batch-reuse:1
@ 5495 train 4.1414 , allloss: 4.1419, dt: 1342.75ms, fracRes: 0.3824, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5856, norm(y): 1.0163, norm:1.0175, tok/sec: 97614.26, flops:102.45, batch-reuse:1
@ 5496 train 4.1087 , allloss: 4.1095, dt: 1329.36ms, fracRes: 0.3830, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5841, norm(y): 1.0164, norm:1.0546, tok/sec: 98598.05, flops:103.48, batch-reuse:1
@ 5497 train 4.1010 , allloss: 4.1019, dt: 1336.20ms, fracRes: 0.3826, norm(attn): 0.2539, norm(output): 0.7578, norm(x): 0.5836, norm(y): 1.0163, norm:0.9477, tok/sec: 98092.85, flops:102.95, batch-reuse:1
@ 5498 train 4.0734 , allloss: 4.0749, dt: 1336.45ms, fracRes: 0.3829, norm(attn): 0.2539, norm(output): 0.7617, norm(x): 0.5854, norm(y): 1.0163, norm:0.9411, tok/sec: 98075.01, flops:102.93, batch-reuse:1
@ 5499 train 4.1740 , allloss: 4.1748, dt: 1338.70ms, fracRes: 0.3844, norm(attn): 0.2480, norm(output): 0.7734, norm(x): 0.5880, norm(y): 1.0164, norm:1.0551, tok/sec: 97910.05, flops:102.76, batch-reuse:1
@ 5500 train 4.1521 , allloss: 4.1531, dt: 1297.47ms, fracRes: 0.3849, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5852, norm(y): 1.0164, norm:1.2434, tok/sec: 101021.58, flops:106.02, batch-reuse:1
@ 5501 train 4.1767 , allloss: 4.1782, dt: 1317.87ms, fracRes: 0.3880, norm(attn): 0.2480, norm(output): 0.7734, norm(x): 0.5887, norm(y): 1.0166, norm:1.3842, tok/sec: 99457.23, flops:104.38, batch-reuse:1
@ 5502 train 4.1278 , allloss: 4.1287, dt: 1307.77ms, fracRes: 0.3847, norm(attn): 0.2461, norm(output): 0.7656, norm(x): 0.5856, norm(y): 1.0163, norm:1.2305, tok/sec: 100225.70, flops:105.19, batch-reuse:1
@ 5503 train 4.2205 , allloss: 4.2213, dt: 1337.14ms, fracRes: 0.3860, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5926, norm(y): 1.0164, norm:1.2607, tok/sec: 98024.03, flops:102.88, batch-reuse:1
@ 5504 train 4.0766 , allloss: 4.0781, dt: 1305.41ms, fracRes: 0.3865, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5861, norm(y): 1.0164, norm:1.3614, tok/sec: 100406.90, flops:105.38, batch-reuse:1
@ 5505 train 4.1289 , allloss: 4.1299, dt: 1317.04ms, fracRes: 0.3851, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.5813, norm(y): 1.0163, norm:1.1473, tok/sec: 99520.50, flops:104.45, batch-reuse:1
@ 5506 train 4.0983 , allloss: 4.0992, dt: 1306.89ms, fracRes: 0.3832, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5896, norm(y): 1.0163, norm:1.1650, tok/sec: 100293.04, flops:105.26, batch-reuse:1
@ 5507 train 4.1291 , allloss: 4.1301, dt: 1309.10ms, fracRes: 0.3820, norm(attn): 0.2480, norm(output): 0.7734, norm(x): 0.5924, norm(y): 1.0163, norm:1.2107, tok/sec: 100123.76, flops:105.08, batch-reuse:1
@ 5508 train 4.2019 , allloss: 4.2029, dt: 1294.20ms, fracRes: 0.3830, norm(attn): 0.2461, norm(output): 0.7695, norm(x): 0.5894, norm(y): 1.0164, norm:1.2202, tok/sec: 101276.51, flops:106.29, batch-reuse:1
@ 5509 train 4.1675 , allloss: 4.1687, dt: 1296.29ms, fracRes: 0.3839, norm(attn): 0.2461, norm(output): 0.7656, norm(x): 0.5851, norm(y): 1.0165, norm:1.1217, tok/sec: 101113.11, flops:106.12, batch-reuse:1
@ 5510 train 4.1079 , allloss: 4.1086, dt: 1311.16ms, fracRes: 0.3823, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5876, norm(y): 1.0164, norm:1.4953, tok/sec: 99966.67, flops:104.92, batch-reuse:1
@ 5511 train 4.1601 , allloss: 4.1607, dt: 1302.55ms, fracRes: 0.3830, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5909, norm(y): 1.0163, norm:1.4691, tok/sec: 100627.56, flops:105.61, batch-reuse:1
@ 5512 train 4.1936 , allloss: 4.1948, dt: 1290.32ms, fracRes: 0.3826, norm(attn): 0.2471, norm(output): 0.7656, norm(x): 0.5855, norm(y): 1.0162, norm:1.1032, tok/sec: 101581.18, flops:106.61, batch-reuse:1
@ 5513 train 4.0733 , allloss: 4.0742, dt: 1290.81ms, fracRes: 0.3840, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5889, norm(y): 1.0163, norm:1.2206, tok/sec: 101542.83, flops:106.57, batch-reuse:1
@ 5514 train 4.1236 , allloss: 4.1269, dt: 1308.16ms, fracRes: 0.3834, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5875, norm(y): 1.0164, norm:1.1146, tok/sec: 100195.60, flops:105.16, batch-reuse:1
@ 5515 train 4.1660 , allloss: 4.1685, dt: 1305.91ms, fracRes: 0.3829, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5848, norm(y): 1.0164, norm:1.2597, tok/sec: 100368.10, flops:105.34, batch-reuse:1
@ 5516 train 4.1650 , allloss: 4.1659, dt: 1293.66ms, fracRes: 0.3825, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5833, norm(y): 1.0164, norm:1.0352, tok/sec: 101318.65, flops:106.34, batch-reuse:1
@ 5517 train 4.1746 , allloss: 4.1758, dt: 1311.78ms, fracRes: 0.3826, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5848, norm(y): 1.0164, norm:1.0562, tok/sec: 99919.09, flops:104.87, batch-reuse:1
@ 5518 train 4.1744 , allloss: 4.1751, dt: 1310.86ms, fracRes: 0.3831, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5872, norm(y): 1.0163, norm:1.1187, tok/sec: 99989.27, flops:104.94, batch-reuse:1
@ 5519 train 4.0389 , allloss: 4.0409, dt: 1343.92ms, fracRes: 0.3841, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5840, norm(y): 1.0164, norm:1.0970, tok/sec: 97529.93, flops:102.36, batch-reuse:1
@ 5520 train 4.0512 , allloss: 4.0521, dt: 1320.78ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5824, norm(y): 1.0164, norm:1.0515, tok/sec: 99238.08, flops:104.15, batch-reuse:1
@ 5521 train 4.2116 , allloss: 4.2131, dt: 1310.29ms, fracRes: 0.3855, norm(attn): 0.2490, norm(output): 0.7578, norm(x): 0.5857, norm(y): 1.0165, norm:0.9888, tok/sec: 100032.72, flops:104.99, batch-reuse:1
@ 5522 train 4.1758 , allloss: 4.1765, dt: 1343.82ms, fracRes: 0.3840, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5840, norm(y): 1.0163, norm:1.0716, tok/sec: 97536.85, flops:102.37, batch-reuse:1
@ 5523 train 4.1381 , allloss: 4.1388, dt: 1335.65ms, fracRes: 0.3843, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5837, norm(y): 1.0164, norm:1.1321, tok/sec: 98133.62, flops:102.99, batch-reuse:1
@ 5524 train 4.1343 , allloss: 4.1363, dt: 1292.98ms, fracRes: 0.3842, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5852, norm(y): 1.0164, norm:1.0438, tok/sec: 101371.77, flops:106.39, batch-reuse:1
@ 5525 train 4.0952 , allloss: 4.0966, dt: 1307.40ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5850, norm(y): 1.0164, norm:1.0122, tok/sec: 100253.61, flops:105.22, batch-reuse:1
@ 5526 train 4.1873 , allloss: 4.1896, dt: 1307.18ms, fracRes: 0.3846, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5859, norm(y): 1.0163, norm:0.8895, tok/sec: 100271.04, flops:105.24, batch-reuse:1
@ 5527 train 4.1124 , allloss: 4.1138, dt: 1297.13ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.7578, norm(x): 0.5830, norm(y): 1.0163, norm:0.9251, tok/sec: 101047.43, flops:106.05, batch-reuse:1
@ 5528 train 4.1834 , allloss: 4.1844, dt: 1304.63ms, fracRes: 0.3845, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5851, norm(y): 1.0164, norm:0.9753, tok/sec: 100466.89, flops:105.44, batch-reuse:1
@ 5529 train 4.0646 , allloss: 4.0659, dt: 1303.10ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5869, norm(y): 1.0163, norm:1.0452, tok/sec: 100584.55, flops:105.57, batch-reuse:1
@ 5530 train 4.1258 , allloss: 4.1270, dt: 1309.02ms, fracRes: 0.3833, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5882, norm(y): 1.0164, norm:1.1636, tok/sec: 100130.10, flops:105.09, batch-reuse:1
@ 5531 train 4.0719 , allloss: 4.0779, dt: 1332.70ms, fracRes: 0.3829, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5897, norm(y): 1.0164, norm:1.2171, tok/sec: 98351.09, flops:103.22, batch-reuse:1
@ 5532 train 4.0781 , allloss: 4.0789, dt: 1311.33ms, fracRes: 0.3826, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5846, norm(y): 1.0164, norm:1.4232, tok/sec: 99953.59, flops:104.90, batch-reuse:1
@ 5533 train 4.0914 , allloss: 4.0923, dt: 1340.51ms, fracRes: 0.3814, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5821, norm(y): 1.0164, norm:1.0432, tok/sec: 97777.46, flops:102.62, batch-reuse:1
@ 5534 train 4.0829 , allloss: 4.0862, dt: 1332.77ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.7578, norm(x): 0.5839, norm(y): 1.0164, norm:1.1287, tok/sec: 98345.77, flops:103.22, batch-reuse:1
@ 5535 train 3.9862 , allloss: 3.9869, dt: 1298.13ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5831, norm(y): 1.0164, norm:0.9860, tok/sec: 100969.78, flops:105.97, batch-reuse:1
@ 5536 train 4.1313 , allloss: 4.1324, dt: 1313.48ms, fracRes: 0.3849, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.5822, norm(y): 1.0165, norm:1.0004, tok/sec: 99789.72, flops:104.73, batch-reuse:1
@ 5537 train 4.2251 , allloss: 4.2262, dt: 1338.96ms, fracRes: 0.3849, norm(attn): 0.2480, norm(output): 0.7617, norm(x): 0.5847, norm(y): 1.0165, norm:1.0247, tok/sec: 97891.20, flops:102.74, batch-reuse:1
@ 5538 train 4.1261 , allloss: 4.1269, dt: 1296.91ms, fracRes: 0.3846, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5851, norm(y): 1.0164, norm:1.0699, tok/sec: 101064.59, flops:106.07, batch-reuse:1
@ 5539 train 4.0192 , allloss: 4.0202, dt: 1294.99ms, fracRes: 0.3845, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5843, norm(y): 1.0164, norm:1.0520, tok/sec: 101214.88, flops:106.23, batch-reuse:1
@ 5540 train 4.0935 , allloss: 4.0957, dt: 1281.66ms, fracRes: 0.3829, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5871, norm(y): 1.0163, norm:0.9976, tok/sec: 102267.65, flops:107.33, batch-reuse:1
@ 5541 train 4.0322 , allloss: 4.0327, dt: 1296.24ms, fracRes: 0.3835, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5861, norm(y): 1.0165, norm:1.0059, tok/sec: 101117.42, flops:106.12, batch-reuse:1
@ 5542 train 4.0594 , allloss: 4.0602, dt: 1311.10ms, fracRes: 0.3823, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5848, norm(y): 1.0164, norm:1.0930, tok/sec: 99971.02, flops:104.92, batch-reuse:1
@ 5543 train 4.0083 , allloss: 4.0089, dt: 1304.92ms, fracRes: 0.3813, norm(attn): 0.2539, norm(output): 0.7617, norm(x): 0.5876, norm(y): 1.0163, norm:1.0916, tok/sec: 100444.31, flops:105.42, batch-reuse:1
@ 5544 train 4.0137 , allloss: 4.0154, dt: 1283.12ms, fracRes: 0.3807, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5858, norm(y): 1.0163, norm:1.1196, tok/sec: 102150.98, flops:107.21, batch-reuse:1
@ 5545 train 4.2311 , allloss: 4.2320, dt: 1303.35ms, fracRes: 0.3831, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5870, norm(y): 1.0164, norm:1.2205, tok/sec: 100565.56, flops:105.55, batch-reuse:1
@ 5546 train 4.0621 , allloss: 4.0626, dt: 1322.67ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5847, norm(y): 1.0165, norm:1.2727, tok/sec: 99096.24, flops:104.00, batch-reuse:1
@ 5547 train 4.1595 , allloss: 4.1602, dt: 1332.84ms, fracRes: 0.3830, norm(attn): 0.2480, norm(output): 0.7734, norm(x): 0.5869, norm(y): 1.0163, norm:1.0186, tok/sec: 98340.11, flops:103.21, batch-reuse:1
@ 5548 train 4.0306 , allloss: 4.0311, dt: 1320.77ms, fracRes: 0.3831, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5862, norm(y): 1.0163, norm:1.2173, tok/sec: 99239.11, flops:104.15, batch-reuse:1
@ 5549 train 4.0780 , allloss: 4.0784, dt: 1336.90ms, fracRes: 0.3845, norm(attn): 0.2471, norm(output): 0.7656, norm(x): 0.5838, norm(y): 1.0163, norm:1.0163, tok/sec: 98042.05, flops:102.90, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0708,     0.4590,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0064,     0.1187,     0.3887,     0.4844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0742,     0.0413,     0.7617,     0.1216,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0212,     0.2402,     0.1641,     0.2793,     0.1758,     0.1196,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.1260,     0.0183,     0.2002,     0.4785,     0.1416,     0.0295,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0006,     0.0058,     0.0000,     0.0001,     0.0012,     0.0220,     0.0547,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.2178,     0.1099,     0.3652,     0.0388,     0.1514,     0.0400,     0.0129,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0065,     0.1206,     0.1650,     0.2061,     0.0405,     0.1406,     0.1562,     0.0217,     0.1250,     0.0181,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0192,     0.0039,     0.7266,     0.0344,     0.0092,     0.0008,     0.0000,     0.0469,     0.0006,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1904,     0.0640,     0.0864,     0.0474,     0.0165,     0.1123,     0.1030,     0.2344,     0.0209,     0.0493,     0.0259,     0.0496,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0022,     0.0045,     0.0004,     0.0012,     0.0029,     0.0195,     0.0791,     0.0008,     0.0046,     0.0005,     0.0008,     0.0579,     0.0000,     0.0000],
        [    0.0020,     0.1387,     0.0757,     0.2441,     0.0361,     0.0879,     0.0238,     0.0173,     0.0649,     0.0201,     0.0635,     0.1582,     0.0087,     0.0583,     0.0000],
        [    0.0009,     0.0854,     0.0723,     0.1816,     0.0815,     0.0732,     0.0317,     0.0050,     0.0552,     0.0132,     0.1523,     0.0991,     0.0057,     0.0525,     0.0903]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0020, -0.0080,  0.0438,  ..., -0.0045,  0.0076,  0.0235],
        [ 0.0214, -0.0029,  0.0009,  ...,  0.0003,  0.0313,  0.0153],
        [-0.0346,  0.0092, -0.0097,  ..., -0.0283, -0.0122,  0.0122],
        ...,
        [-0.0399,  0.0086, -0.0568,  ...,  0.0072, -0.0145, -0.0205],
        [ 0.0023, -0.0155,  0.0092,  ...,  0.0412, -0.0158,  0.0116],
        [-0.0318,  0.0093, -0.0290,  ...,  0.0012, -0.0042,  0.0143]], device='cuda:0', requires_grad=True)
K: tensor([ 0.0596,  0.0098, -1.7188,  1.6641, -1.0547, -0.0603, -1.5312,  0.7227, -1.3906, -0.3047, -1.4609, -0.1650,  0.1572, -1.8750, -1.3750,  1.3750, -0.8359,  1.1953, -0.3008, -0.9492,  0.7227, -1.4766, -1.8516,  1.4531,  0.1328,  0.0121,  1.2500, -0.5547, -1.0156,  1.0625, -0.3613,  0.3594,
         1.1172, -0.4316,  0.5469, -0.3242, -0.2441,  0.9922, -1.7031, -0.5273, -0.9492, -1.0078,  0.8789, -0.4922, -1.7188,  0.5938,  0.5117,  1.1172,  0.1191,  0.5664, -0.7188,  0.7188,  0.2285,  2.8594,  0.3301, -0.2656,  1.4453, -0.0183,  1.1016, -0.3906, -0.5312,  1.2812, -1.1094,  1.1172],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0182,  0.0220, -0.0332,  ...,  0.0170,  0.0293,  0.0048],
        [ 0.0147, -0.0260, -0.0365,  ..., -0.0026,  0.0345,  0.0256],
        [ 0.0002,  0.0251,  0.0353,  ...,  0.0008,  0.0076, -0.0365],
        ...,
        [ 0.0174,  0.0077,  0.0320,  ...,  0.0006,  0.0148, -0.0309],
        [ 0.0059, -0.0213, -0.0364,  ...,  0.0249, -0.0218,  0.0040],
        [ 0.0201, -0.0097,  0.0276,  ..., -0.0107, -0.0462, -0.0304]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6758, -0.4219,  0.1504,  0.1953, -1.1016,  0.7461, -1.3906,  0.3242, -1.7734, -0.4297, -0.5938, -0.7109,  0.3848, -0.4102, -1.0469,  1.2188, -0.8086,  0.7773,  0.0086, -1.2266,  0.0056, -0.0913, -1.0703,  1.6172, -0.5000, -1.7344,  1.5938,  1.0234, -0.6523,  0.2021, -0.8555,  0.8555,
         0.3711, -0.6211,  0.6836,  0.3477, -0.6641,  0.6328, -1.3203, -0.0079, -0.5391, -1.0469,  0.1406, -0.3496, -0.9141, -0.4844,  0.5469,  0.2256, -0.4492, -0.0337, -0.8633,  0.9062,  0.5312,  1.5938,  0.4805, -0.8711,  0.3066, -0.6602,  0.9102,  1.1094, -0.3359, -0.2041,  0.1865,  1.0469],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,   5.5000,   3.9844,   5.9062,   3.8281,   5.2188,   4.8750,   1.5234,   4.0938,   1.7500,   4.8125,   5.0000,   2.1250,   4.0938,   4.8125],
        [  0.0000,   1.8672,   1.8906,   1.7500,   0.1914,   1.8594,   1.9844,   1.1562,   0.6250,  -0.2354,   1.1562,   1.4219,   1.1328,   0.5391,   1.7812],
        [  0.0000,   2.9219,   4.0938,   4.3125,   1.1094,   2.1094,   2.2812,   1.3594,   2.0938,   1.8281,   1.9453,   3.2344,   2.2188,   2.0000,   2.4531],
        [  0.0000,   9.9375,   9.3750,  12.3125,  10.4375,   9.5000,   8.6875,   2.6562,  10.1875,   7.2812,  11.8125,  11.8125,   4.2188,  10.5000,   9.0625],
        [  0.0000,   2.4219,   2.0469,   2.5781,   2.1094,   1.7266,   1.6562,   0.6133,   1.7656,   0.9609,   2.2656,   2.3750,   0.2051,   2.0156,   2.5000],
        [  0.0000,   3.1562,   1.2188,   3.6094,   4.5000,   3.2656,   1.6953,   0.9102,   3.6094,   1.8281,   4.5938,   3.1562,   0.1816,   3.2812,   2.7031],
        [  0.0000,  -7.2812,  -5.0625, -10.1875,  -8.9375,  -6.6562,  -3.7344,  -2.8125,  -8.5000,  -6.1875,  -9.6875,  -8.7500,  -3.3594,  -7.9062,  -5.6250],
        [  0.0000,   4.9688,   4.2812,   5.5000,   3.2500,   4.6250,   3.2812,   2.1562,   3.7344,   3.0000,   4.3750,   5.4688,   1.8750,   3.9375,   4.4688],
        [  0.0000,   2.9219,   3.2344,   3.4531,   1.8359,   3.0781,   3.1875,   1.2109,   2.9531,   1.0234,   3.0938,   3.1250,   1.4375,   2.7188,   3.3906],
        [  0.0000,  14.0000,  12.4375,  17.6250,  14.5625,  13.2500,  10.8125,   4.9375,  14.8750,  10.6250,  16.1250,  16.2500,   6.1875,  14.5625,  12.0625],
        [  0.0000,  -1.0938,  -0.7930,  -1.3906,  -2.4531,  -0.5312,  -0.6172,   0.2070,  -2.2188,  -1.3516,  -2.0000,  -1.3516,   0.1328,  -2.3438,  -1.1250],
        [  0.0000,  -5.9062,  -5.2188,  -7.7188,  -6.5312,  -5.6562,  -3.7500,  -2.3438,  -6.9062,  -5.1875,  -7.4688,  -7.0000,  -2.6562,  -6.9375,  -4.4375],
        [  0.0000,   4.2188,   3.6250,   4.7812,   2.8750,   3.7656,   2.4531,   2.1562,   3.4688,   2.2969,   3.4375,   4.3438,   1.4531,   3.3594,   4.3750],
        [  0.0000,   4.5625,   4.4062,   5.3125,   4.5312,   4.4375,   3.5781,   1.7422,   4.1250,   2.7031,   5.1562,   4.7188,   1.8672,   4.0938,   4.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3226],
        [0.3595],
        [0.2180],
        [0.2488],
        [0.3474],
        [0.1974],
        [0.1830],
        [0.1100],
        [0.1016],
        [0.0402],
        [0.1303],
        [0.1529],
        [0.0787],
        [0.0549]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7344,     0.0017,     0.2256,     0.0366,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0015,     0.0010,     0.0003,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0008,     0.0002,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8750,     0.0027,     0.1050,     0.0112,     0.0007,     0.0007,     0.0027,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0030,     0.0249,     0.0106,     0.0001,     0.0019,     0.0005,     0.0002,     0.0004,     0.0059,     0.0001,     0.0527,     0.0004,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0024, -0.0200,  0.0233,  ..., -0.0072, -0.0211, -0.0144],
        [-0.0247,  0.0210,  0.0048,  ...,  0.0065,  0.0195,  0.0093],
        [ 0.0005,  0.0231,  0.0048,  ..., -0.0091, -0.0391,  0.0067],
        ...,
        [ 0.0251, -0.0445, -0.0201,  ...,  0.0073,  0.0108,  0.0082],
        [-0.0480, -0.0360,  0.0161,  ...,  0.0481, -0.0056,  0.0095],
        [ 0.0353, -0.0023,  0.0351,  ...,  0.0646,  0.0164,  0.0443]], device='cuda:0', requires_grad=True)
K: tensor([-2.3750,  2.7344,  3.8594, -2.5625, -2.4375, -2.7031,  0.2012,  1.4219,  5.3750,  3.2031, -2.1719, -2.0156,  3.5000, -0.2773,  0.3438,  4.4688, -1.4609, -5.2812,  3.2656,  3.2812,  1.7578,  0.2480,  2.0625, -1.8281,  3.7031, -3.7344, -3.6875,  3.8281,  0.0781,  0.0128,  2.1875,  0.8711,
         0.4414,  4.1875, -1.2891,  2.9375,  2.4531,  0.2422, -1.5234, -0.2402, -0.4629, -2.8125,  2.9531, -1.5078, -1.1719, -0.6758, -1.5859, -2.0625, -2.1562,  2.9219,  0.3652, -0.6797, -0.3984, -2.7812,  3.8125, -1.6250,  1.4297, -2.3750, -1.5938,  3.3906,  3.4219,  0.8516,  1.7422, -1.6484],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[    -0.0122,      0.0443,      0.0120,  ...,      0.0136,      0.0001,      0.0380],
        [     0.0132,     -0.0299,      0.0214,  ...,      0.0487,     -0.0188,      0.0070],
        [    -0.0162,      0.0074,     -0.0148,  ...,     -0.0121,     -0.0229,      0.0013],
        ...,
        [    -0.0408,      0.0093,      0.0276,  ...,     -0.0097,      0.0120,     -0.0043],
        [     0.0324,     -0.0119,     -0.0097,  ...,     -0.0228,     -0.0208,      0.0355],
        [     0.0012,      0.0064,     -0.0384,  ...,      0.0059,     -0.0124,     -0.0107]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.4121,      0.4316,     -0.0013,     -0.5352,     -0.1729,      0.8789,     -0.9727,      0.2695,      0.0422,     -1.7500,      0.8164,      2.3750,     -0.9180,     -0.3711,     -1.2344,     -1.2031,      0.5234,      0.9180,     -1.6094,      0.3086,      0.2295,      0.3340,
             0.0723,      0.6172,      0.4375,      1.2422,      0.3262,     -0.7383,     -1.0000,     -0.9062,      1.1172,     -0.2314,     -1.6094,     -0.4688,     -0.7852,     -0.6680,      1.2266,     -0.4316,      1.5938,     -0.3086,      1.9297,      1.6875,     -0.3613,      2.1406,
            -1.2578,     -0.5703,      0.2598,      1.6094,      2.4062,     -1.6328,      0.6523,      0.3848,      0.0183,      2.5156,     -0.1875,      0.9141,      1.2969,      0.7656,      0.8359,     -0.2256,     -0.7812,     -0.4180,     -2.0312,      0.7578], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.8125,  -6.6250,  -7.8438,  -6.5312, -11.8125,  -6.4688,  -9.1250,  -8.6875,  -9.0000,  -8.8125,  -6.8125,  -6.0938,  -8.5000,  -6.0938],
        [  0.0000, -10.4375,  -9.0625, -10.2500, -10.0625, -14.4375, -13.8750, -15.7500, -15.1250, -10.7500, -13.3125,  -9.8750, -13.4375, -15.4375, -11.3750],
        [  0.0000,  -6.0938,  -1.1797,  -3.0000,  -4.0938,  -5.7500,  -4.2812,  -6.1250,  -6.7500,  -3.8906,  -5.0625,  -2.0625,  -4.0312,  -5.5312,  -1.5859],
        [  0.0000,  -6.5312,  -6.9062,  -8.0625,  -7.8125,  -7.1250,  -6.5625,  -7.1562,  -7.2812,  -7.1875,  -8.7500,  -4.7188,  -7.3438,  -6.5625,  -7.5625],
        [  0.0000,  -8.8750,  -9.9375, -10.1250,  -8.4375, -13.3125,  -8.6875, -10.8750, -10.1250, -10.6250, -10.9375,  -7.1562,  -9.5625,  -9.8125,  -7.4688],
        [  0.0000,  -7.9062,  -7.1562,  -8.7500, -10.6875, -10.5625,  -8.9375, -10.3750, -10.3750,  -8.0625, -11.5625,  -7.5625,  -9.4375, -10.0000,  -8.5625],
        [  0.0000,  -5.7500,  -2.1250,  -4.3750,  -7.0625,  -7.0625,  -5.7812,  -7.0000,  -6.2812,  -3.1094,  -6.9688,  -2.2969,  -6.0000,  -5.2188,  -2.4844],
        [  0.0000, -11.1875,  -9.3125, -11.4375, -10.2500, -13.0625,  -9.1875,  -9.8125, -11.5625, -11.1250, -11.9375, -11.0000,  -8.6875, -11.0000, -10.0625],
        [  0.0000, -12.0625, -12.0000, -11.8125, -13.0625, -13.5000, -13.1875, -13.9375, -13.7500, -10.5000, -14.2500, -11.3750, -13.3750, -13.5000,  -9.2500],
        [  0.0000, -10.8750, -10.9375,  -9.8125,  -8.3750, -13.0000, -10.5000, -10.3125,  -9.9375, -10.0625, -10.8750,  -6.2500,  -9.2500,  -9.5000, -10.6875],
        [  0.0000, -10.0625,  -8.8750,  -9.8750, -11.0000, -13.1875, -12.3125, -12.7500, -13.3125,  -9.5625, -12.9375,  -8.1875, -12.1250, -13.1250, -11.7500],
        [  0.0000,  -5.6875,  -3.5781,  -4.4375,  -9.0000,  -6.1562,  -7.5000,  -8.6875,  -7.6875,  -5.0312,  -8.6875,  -2.8281,  -7.6562,  -7.0000,  -3.2500],
        [  0.0000, -12.2500, -10.5000, -12.6875, -11.4375, -13.8750, -10.6875, -10.8125, -12.9375, -12.1875, -13.3125, -12.3125, -10.0000, -12.5000, -11.6250],
        [  0.0000, -12.4375, -10.5000, -10.8125, -12.8125, -15.8125, -13.8750, -14.8125, -14.7500, -13.6250, -14.6250, -12.8750, -14.2500, -14.9375,  -9.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6545],
        [0.6862],
        [0.5753],
        [0.4841],
        [0.7148],
        [0.7054],
        [0.5166],
        [0.5834],
        [0.4476],
        [0.6036],
        [0.4662],
        [0.5508],
        [0.5659],
        [0.7292]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0010,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8047,     0.0172,     0.0289,     0.0025,     0.0006,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6758,     0.0322,     0.0173,     0.0013,     0.0013,     0.2354,     0.0381,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0005,     0.0001,     0.0001,     0.0068,     0.0003,     0.0004,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8242,     0.0087,     0.0030,     0.0004,     0.0017,     0.1011,     0.0133,     0.0092,     0.0288,     0.0069,     0.0013,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0003,     0.0006,     0.0001,     0.0001,     0.0087,     0.0004,     0.0005,     0.0007,     0.0010,     0.0000,     0.0010,     0.0024,     0.0008,     0.0000],
        [    0.9609,     0.0004,     0.0003,     0.0001,     0.0002,     0.0184,     0.0005,     0.0006,     0.0044,     0.0007,     0.0001,     0.0005,     0.0022,     0.0063,     0.0034]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0036,  0.0159, -0.0024,  ..., -0.0182,  0.0147,  0.0226],
        [-0.0390,  0.0092,  0.0018,  ...,  0.0136,  0.0238,  0.0065],
        [-0.0024, -0.0132, -0.0071,  ...,  0.0081,  0.0152,  0.0026],
        ...,
        [-0.0030, -0.0053, -0.0213,  ...,  0.0319,  0.0107, -0.0145],
        [-0.0095,  0.0223, -0.0293,  ...,  0.0342,  0.0125,  0.0007],
        [ 0.0170, -0.0093,  0.0088,  ..., -0.0636, -0.0282, -0.0065]], device='cuda:0', requires_grad=True)
K: tensor([-0.3809, -1.6406, -0.3340, -1.7656, -1.4844,  1.9766,  1.1875, -0.3203, -2.0312,  1.3750,  0.1055, -1.2734, -2.5781, -0.4844,  1.2422,  2.3594, -1.3750, -1.3438,  0.5430, -2.8750, -2.2031, -1.4531, -2.0938,  2.3594, -0.9570,  0.9727,  1.3672,  2.4062,  1.9219, -1.6328, -1.2031,  1.6953,
        -1.2812,  1.2109, -0.6172,  2.1875, -1.1172,  0.5469, -1.2891,  1.9688,  0.2031, -1.0781,  2.2500,  1.9062, -1.1641, -2.6562, -1.0391,  2.4062, -1.5938, -1.7500, -0.5000, -2.4375, -3.3281, -3.1719,  2.6875, -1.6797, -2.0000,  0.8711,  1.9844, -1.5000, -2.2031,  1.9922,  3.0781, -2.4531],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0091, -0.0160,  0.0286,  ...,  0.0145, -0.0181,  0.0128],
        [-0.0115, -0.0111,  0.0314,  ..., -0.0074, -0.0280, -0.0269],
        [-0.0229, -0.0064, -0.0065,  ..., -0.0427, -0.0642, -0.0603],
        ...,
        [-0.0242, -0.0010,  0.0413,  ...,  0.0028, -0.0368, -0.0359],
        [ 0.0252,  0.0128, -0.0172,  ..., -0.0597, -0.0149,  0.0128],
        [ 0.0243, -0.0016,  0.0026,  ..., -0.0054,  0.0128,  0.0284]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6641, -1.5156, -0.1348,  1.7422,  0.4316, -0.1543, -0.5039, -0.7852,  0.9805,  0.4121, -1.5547,  1.0938, -0.1167, -0.3691,  0.6445,  1.0938,  1.0156,  2.2969, -0.1025, -0.3301,  0.5664,  0.2871,  0.1709, -0.4512,  0.3125, -1.4219,  0.1514,  0.1025, -0.2480,  0.6406, -0.0469, -0.1797,
         1.2109, -0.8398,  1.6641, -0.4297,  2.1719, -0.3555,  1.6328, -0.9648, -0.8867,  0.3809, -1.1562, -0.9336, -0.9414,  0.3691, -0.0479,  0.5430,  0.6758,  1.1406,  2.5156, -1.1094,  0.1318, -0.2559, -0.5000,  0.6680,  0.9883, -1.7031,  0.5273,  2.4062,  1.6250, -2.1406,  0.1230,  1.0234],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -9.3125,  -8.0000, -10.5000, -10.6875,  -6.8125,  -9.5625,  -9.3750,  -7.6562,  -9.8750, -11.3125,  -9.6250,  -8.9375,  -7.5625,  -8.1250],
        [  0.0000,  -6.8750,  -6.5625,  -7.6250,  -6.9375,  -5.6250,  -6.9688,  -6.3438,  -5.1562,  -6.0938,  -7.2500,  -6.3750,  -4.7812,  -4.9062,  -6.4062],
        [  0.0000, -16.2500, -13.5000, -16.3750, -15.3125, -12.0625, -15.0625, -15.3125, -12.5000, -15.0625, -16.6250, -14.0625, -12.6250, -12.1875, -14.3750],
        [  0.0000, -12.9375, -10.5625, -13.5625, -13.2500, -10.1250, -12.1250, -12.3125, -10.8125, -12.6875, -13.8750, -12.1250, -10.8750, -10.5625, -10.3750],
        [  0.0000,  -3.8438,  -3.3281,  -5.7500,  -7.1250,  -1.7188,  -4.0625,  -2.3281,  -4.8438,  -3.4219,  -7.6875,  -3.6094,  -1.7188,  -4.5938,  -2.8594],
        [  0.0000,  -3.0469,  -3.6562,  -6.2812,  -6.2500,  -1.0547,  -2.8750,  -1.9062,  -3.2344,  -3.4062,  -5.9688,  -4.4062,  -2.1094,  -2.9688,  -3.1562],
        [  0.0000, -12.7500,  -9.8125, -13.8125, -14.5000,  -9.6250, -12.6875, -12.1250, -11.3125, -12.8750, -15.0000, -12.8750, -11.3750, -11.1250, -13.0000],
        [  0.0000,  -8.2500,  -7.6875,  -9.0625,  -9.1875,  -4.9688,  -8.0625,  -7.8125,  -7.4375,  -7.2500, -10.1875,  -7.0938,  -6.2812,  -7.2188,  -5.9375],
        [  0.0000, -16.5000, -12.6875, -16.5000, -16.6250, -14.0625, -16.0000, -15.1250, -14.0625, -16.5000, -17.3750, -15.9375, -13.5000, -13.7500, -15.1250],
        [  0.0000,  -4.5625,  -5.6250,  -7.6250,  -6.1875,  -2.1094,  -4.1250,  -4.5000,  -3.3594,  -4.7812,  -6.4688,  -5.5000,  -3.9219,  -3.1562,  -3.5781],
        [  0.0000, -14.1875, -11.3750, -13.7500, -12.8125, -11.7500, -13.7500, -14.4375, -11.3750, -13.5000, -13.9375, -12.9375, -12.1250, -11.2500, -12.0625],
        [  0.0000, -17.3750, -12.8750, -16.6250, -17.5000, -14.3750, -17.3750, -16.8750, -14.7500, -17.2500, -18.2500, -16.8750, -16.0000, -14.5625, -16.3750],
        [  0.0000,  -8.0000,  -7.4375,  -8.8750,  -8.9375,  -4.7188,  -7.7500,  -7.5938,  -7.3125,  -6.9062,  -9.8750,  -6.8750,  -6.0000,  -7.0625,  -5.6875],
        [  0.0000,  -7.8125,  -8.1250,  -9.0625,  -8.5000,  -3.9531,  -7.4688,  -7.4375,  -5.4062,  -7.2500,  -9.1250,  -7.4688,  -6.0625,  -5.0312,  -5.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9971],
        [0.9961],
        [1.0000],
        [0.9997],
        [0.9014],
        [0.8899],
        [0.9837],
        [0.8439],
        [1.0000],
        [0.9056],
        [0.9990],
        [0.9971],
        [0.8465],
        [0.9362]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9141, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1904, 0.5586, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0723, 0.4492, 0.0903, 0.3887, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.6719, 0.0996, 0.0447, 0.0869, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1768, 0.2793, 0.1069, 0.0645, 0.2295, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6328, 0.0674, 0.1865, 0.0371, 0.0178, 0.0339, 0.0234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3926, 0.1162, 0.1992, 0.0698, 0.0349, 0.0579, 0.0189, 0.1099, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2393, 0.1875, 0.2598, 0.1289, 0.0181, 0.0654, 0.0162, 0.0820, 0.0032, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2158, 0.3574, 0.0286, 0.0214, 0.0684, 0.0190, 0.0294, 0.0635, 0.0591, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2402, 0.1445, 0.0427, 0.0269, 0.0272, 0.0289, 0.0183, 0.0879, 0.0410, 0.2773, 0.0649, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0571, 0.0723, 0.0069, 0.0272, 0.2871, 0.0229, 0.0173, 0.0576, 0.0576, 0.0361, 0.3203, 0.0364, 0.0000, 0.0000, 0.0000],
        [0.0845, 0.0972, 0.0510, 0.0234, 0.0471, 0.0884, 0.0272, 0.0854, 0.0498, 0.1689, 0.0396, 0.0459, 0.1914, 0.0000, 0.0000],
        [0.1299, 0.1011, 0.0981, 0.0786, 0.0304, 0.0708, 0.0179, 0.0265, 0.0071, 0.2832, 0.0439, 0.0471, 0.0513, 0.0136, 0.0000],
        [0.0898, 0.0947, 0.0781, 0.0791, 0.0437, 0.0498, 0.0737, 0.0287, 0.0299, 0.1221, 0.0391, 0.0317, 0.0256, 0.0342, 0.1797]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0120,  0.0433,  0.0047,  ...,  0.0265,  0.0457, -0.0448],
        [-0.0013, -0.0670,  0.0062,  ...,  0.0095, -0.0187,  0.0414],
        [ 0.0163,  0.0173, -0.0471,  ..., -0.0040, -0.0016,  0.0123],
        ...,
        [ 0.0032,  0.0045, -0.0209,  ..., -0.0206, -0.0467,  0.0127],
        [ 0.0003,  0.0258, -0.0283,  ..., -0.0374, -0.0064,  0.0091],
        [-0.0275, -0.0059, -0.0293,  ..., -0.0264, -0.0243, -0.0093]], device='cuda:0', requires_grad=True)
K: tensor([ 2.0625,  0.5469, -0.4883, -1.4375,  1.1797, -1.0391, -0.8789, -0.3379, -0.1709, -1.2812,  0.6719, -0.1021,  0.8438, -1.8906,  1.9844,  0.5547,  0.7109, -0.5352,  0.8008,  0.4941,  1.1094,  1.1016,  0.3594,  0.7305,  0.9336,  0.9727, -2.6719, -2.0938,  2.3594,  0.9688, -0.2314,  0.8906,
         0.3145, -0.0457, -0.8633, -1.8672,  0.9492,  0.8984,  0.6758, -2.0312,  0.7539, -0.0732, -0.1855,  0.4922,  2.2500,  0.0850,  0.2656,  1.3125,  0.3711,  0.0830,  1.3984, -1.4141,  0.6641,  0.5742,  0.5469,  0.3711,  0.0894,  0.3086, -2.1562, -0.1807, -0.6289, -0.1079, -0.4746,  0.6562],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[     0.0030,     -0.0236,     -0.0327,  ...,      0.0395,     -0.0175,     -0.0158],
        [    -0.0309,     -0.0388,      0.0182,  ...,     -0.0441,     -0.0140,     -0.0589],
        [     0.0209,      0.0024,     -0.0212,  ...,      0.0571,     -0.0075,      0.0193],
        ...,
        [    -0.0163,      0.0270,      0.0000,  ...,      0.0095,      0.0098,      0.0037],
        [     0.0202,      0.0099,     -0.0021,  ...,     -0.0106,      0.0138,      0.0176],
        [    -0.0143,      0.0414,     -0.0051,  ...,      0.0008,     -0.0051,      0.0115]], device='cuda:0', requires_grad=True)
Q: tensor([-0.3457,  1.1406, -1.9922,  2.1719, -0.4551, -2.7656, -1.5391, -0.8398,  1.2578,  0.6680,  0.6367,  1.4688, -1.2266, -1.1797,  0.2383, -1.4141, -0.1611,  1.1797,  2.3750,  1.0703, -1.9141, -0.5117, -1.6250, -0.0825, -0.1055,  0.4961, -1.0156,  0.0464,  0.3945, -1.7031,  0.4980, -1.3672,
        -0.3438,  1.0859,  0.6953, -1.1016, -2.3125, -1.0156,  1.7031, -1.2500, -1.2969, -0.3750,  0.1729,  0.0151, -0.2773,  0.9414, -0.2109,  1.4766, -1.3203,  3.3750,  1.5547,  0.7070,  1.2578,  2.6094, -0.6250,  0.4707, -1.1094, -0.5508,  0.2812, -0.5430, -0.8633, -0.8242,  0.1011, -1.1406],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.3750,     -2.5781,     -3.4375,     -3.4375,     -3.5938,     -2.7969,     -3.8125,     -3.9062,     -3.3750,     -3.7656,     -3.2812,     -2.7812,     -4.0000,     -2.0312],
        [     0.0000,      1.0781,      0.2812,      2.3438,      3.2031,     -0.0728,      0.6016,      0.0703,     -0.3203,     -2.0938,      0.0281,     -1.6328,      0.6172,     -0.6641,     -1.3047],
        [     0.0000,      1.8203,      0.2188,      1.6797,      3.6875,      1.2344,      1.3047,      0.6289,      1.2344,     -0.4492,      0.7344,     -1.2344,      1.6016,      1.1328,      0.5156],
        [     0.0000,      1.9297,      0.0225,     -0.7812,     -0.1182,     -0.0613,     -0.2441,      0.8867,     -0.7578,      0.7500,     -0.9180,      0.3340,      1.1875,     -1.2969,      0.5664],
        [     0.0000,      0.4512,     -0.5039,     -1.0078,      0.2578,     -0.2090,     -0.1104,      0.4902,     -0.4844,     -1.3359,     -0.9922,     -1.7266,     -0.6367,     -1.1641,     -0.8008],
        [     0.0000,     -2.2344,     -1.2266,     -2.8281,     -3.5625,     -2.9219,     -3.2969,     -2.1719,     -3.7344,     -2.0156,     -5.5000,     -1.6172,     -2.0625,     -4.7500,     -0.7422],
        [     0.0000,     -1.2188,     -0.6836,     -1.7266,     -2.4219,     -1.9141,     -3.0312,     -1.2734,     -3.2500,      0.0138,     -3.3594,     -1.0312,     -0.1934,     -3.0469,      0.3105],
        [     0.0000,     -0.2422,      0.0786,     -0.6172,     -2.5938,     -1.2969,     -2.6875,     -1.0703,     -4.3125,      1.0859,     -2.6094,     -0.1289,     -0.6719,     -3.9531,     -0.1128],
        [     0.0000,      0.5078,     -2.0156,     -2.3125,     -1.1484,     -2.4219,     -1.9922,     -1.2266,     -1.2969,     -0.4531,      1.9219,      0.3789,      0.3535,     -0.5703,     -0.8164],
        [     0.0000,     -0.5078,     -1.7266,     -2.1875,     -2.1719,     -2.1250,     -2.5781,     -1.0078,     -1.7656,      0.1465,     -1.3125,      1.2656,      0.1787,     -1.5391,     -0.4473],
        [     0.0000,      0.2373,     -2.1094,     -0.7383,      1.6172,     -0.9102,     -1.1875,      0.0100,      0.0090,     -0.4570,      1.7266,     -0.4473,      2.7031,      0.6523,     -0.1523],
        [     0.0000,      0.1377,     -0.5078,     -1.2812,     -0.5859,      0.0459,     -1.1328,      0.0121,     -0.5273,      0.6953,     -0.7578,     -0.6094,      0.8164,      0.5820,      1.6328],
        [     0.0000,     -0.2539,     -0.2812,     -0.5039,     -1.4531,     -0.6094,     -1.9844,     -1.5938,     -2.9062,      0.7734,     -1.0859,     -1.0234,     -0.9297,     -2.2656,      0.0041],
        [     0.0000,      0.0515,     -0.1396,     -0.1289,     -0.7188,     -0.5859,     -0.1953,     -1.1406,     -1.1016,      0.3066,     -0.8359,     -1.0469,     -1.2500,     -0.9688,      0.6953]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2459],
        [0.0314],
        [0.0214],
        [0.0190],
        [0.0346],
        [0.0953],
        [0.0395],
        [0.0243],
        [0.0261],
        [0.0278],
        [0.0103],
        [0.0113],
        [0.0144],
        [0.0206]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.9453,     0.0522,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0029,     0.9180,     0.0327,     0.0464,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.8789,     0.0391,     0.0087,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.5469,     0.0549,     0.0221,     0.1758,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0067,     0.7383,     0.0649,     0.0065,     0.0347,     0.0060,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.7891,     0.0088,     0.0054,     0.0275,     0.0026,     0.1167,     0.0483,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.3848,     0.0417,     0.0047,     0.0291,     0.0400,     0.2100,     0.2041,     0.0708,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.5820,     0.0090,     0.0025,     0.0260,     0.0086,     0.0786,     0.0957,     0.1055,     0.0918,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.1650,     0.0094,     0.0007,     0.0036,     0.0029,     0.0126,     0.0393,     0.0254,     0.6523,     0.0854,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.3574,     0.0204,     0.0505,     0.0854,     0.0068,     0.1025,     0.0703,     0.1484,     0.0364,     0.0928,     0.0242,     0.0000,     0.0000,     0.0000],
        [    0.0040,     0.5703,     0.0164,     0.0042,     0.0417,     0.0011,     0.0903,     0.0152,     0.1299,     0.0386,     0.0183,     0.0265,     0.0454,     0.0000,     0.0000],
        [    0.0022,     0.0300,     0.0041,     0.0002,     0.0025,     0.0025,     0.0130,     0.0134,     0.0071,     0.8516,     0.0081,     0.0270,     0.0262,     0.0135,     0.0000],
        [    0.0010,     0.6250,     0.0267,     0.0078,     0.0728,     0.0127,     0.1167,     0.0562,     0.0231,     0.0116,     0.0081,     0.0059,     0.0054,     0.0053,     0.0220]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0311,  0.0327, -0.0143,  ..., -0.0242,  0.0111, -0.0335],
        [ 0.0357,  0.0131,  0.0437,  ..., -0.0736, -0.0202,  0.0082],
        [-0.0092, -0.0011,  0.0320,  ...,  0.0319,  0.0016, -0.0361],
        ...,
        [-0.0092,  0.0064, -0.0156,  ..., -0.0215, -0.0255, -0.0007],
        [ 0.0314, -0.0316,  0.0498,  ...,  0.0146, -0.0454,  0.0045],
        [-0.0443,  0.0371, -0.0007,  ..., -0.0152,  0.0005,  0.0044]], device='cuda:0', requires_grad=True)
K: tensor([-0.0410, -0.8828,  2.0469,  1.7422, -0.7148, -0.2432, -1.0781,  2.3750, -1.3516,  1.1797,  0.1436,  0.3477,  0.9922,  0.5039,  0.8789,  0.1348, -0.5859, -1.1094, -1.1641, -1.1406, -2.8281, -0.9961, -0.9688,  1.3438,  0.8008, -1.6875, -1.3047, -1.1328,  0.4336, -0.3242,  2.0625, -0.7461,
        -0.9336,  1.9375,  2.7031, -0.2480,  0.9375, -0.3223,  2.0000,  1.0234, -0.8672, -0.8984,  0.1426,  0.2637,  0.3750,  0.5703,  1.6562,  1.2812, -0.6758,  0.9453,  0.8633,  1.2266, -1.5938, -1.2266, -0.0293,  1.0156, -0.5469, -2.2656, -1.2500, -1.4844,  1.7969, -0.0496,  0.5391,  0.5898],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0048,  0.0349, -0.0158,  ...,  0.0024, -0.0034,  0.0202],
        [-0.0079, -0.0250,  0.0244,  ..., -0.0119, -0.0050,  0.0103],
        [-0.0023,  0.0686, -0.0071,  ...,  0.0269,  0.0031,  0.0109],
        ...,
        [-0.0005,  0.0260, -0.0119,  ...,  0.0094,  0.0177,  0.0152],
        [ 0.0154,  0.0202, -0.0023,  ...,  0.0240, -0.0227,  0.0371],
        [ 0.0448,  0.0348, -0.0314,  ...,  0.0198,  0.0118, -0.0273]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6367,  0.4805,  0.2637,  1.5859,  0.0243,  0.0449, -0.1328,  1.2266, -0.0293, -2.2188, -1.8516, -0.1406,  0.6016, -1.0547, -1.3750, -0.8633, -1.6953,  0.2148, -0.8750,  0.7383, -1.1719, -1.8438,  0.5156, -0.2852, -0.0070,  0.1650,  0.5977, -0.5391,  0.4004, -1.1484,  4.0625,  1.5781,
        -0.2578,  1.5781, -1.1719,  0.2930,  0.6094,  0.2422,  0.8086,  2.5312, -1.5938,  0.0114, -0.0275,  0.1465,  1.6484, -0.7461,  1.3516,  0.4531,  0.6172, -0.0520, -0.9922,  0.4297,  0.4570, -1.0781, -0.2695,  0.7070, -1.2969,  0.5742, -0.6406,  0.2520,  0.0209,  1.3672,  0.6055,  1.8203],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.6250,  0.7383,  0.6875,  3.6562,  1.6172,  2.9062,  1.4688,  2.3438, -0.0227, -0.3223, -0.7969, -0.2695,  0.9570,  0.7539],
        [ 0.0000,  5.4375,  2.5469,  4.1250,  5.0312,  3.1406,  4.5312,  3.1094,  4.0938,  1.5078,  2.0938,  1.0156,  1.4766,  2.4531,  1.8203],
        [ 0.0000,  5.7500,  2.4219,  2.7656,  4.6250,  1.9453,  4.4062,  2.5000,  4.0312,  0.8867,  1.8984,  0.3672,  1.6250,  2.3438,  2.2188],
        [ 0.0000,  6.2500,  3.1562,  1.6484,  3.7812,  4.2500,  5.1562,  4.5938,  2.5625,  2.7969, -0.0835,  1.5781,  1.7734, -0.1982,  3.3281],
        [ 0.0000,  5.2500,  2.9688,  2.0625,  4.1250,  4.2188,  6.0312,  3.5156,  3.3594,  2.0781,  0.2676,  0.4453,  0.5938,  1.7344,  3.8594],
        [ 0.0000,  4.6875,  2.2656, -0.0315,  1.6406, -0.1133,  3.0469,  2.8438,  1.7344,  0.9180, -1.0469,  0.7188, -0.4043, -0.1094,  1.8359],
        [ 0.0000,  7.4375,  2.9375,  2.4531,  4.0938,  1.7344,  5.5312,  4.6562,  5.7188,  2.8906,  2.5469,  1.9297,  2.5781,  3.7969,  3.3594],
        [ 0.0000,  3.2812,  1.0625, -1.1328,  0.6992,  1.0156,  2.6719,  2.6406,  1.5859,  4.4688,  0.9648,  1.5547,  2.4688,  0.9336,  4.5625],
        [ 0.0000,  5.8438,  1.6719,  0.3672,  2.7344,  1.6250,  3.8281,  4.0312,  4.1250,  3.9844,  5.2500,  1.9688,  3.7969,  2.9688,  3.7656],
        [ 0.0000,  4.4062,  1.5547, -1.0156,  0.6055,  0.3887,  1.8516,  2.9844,  2.5469,  5.7812,  3.7656,  4.8125,  3.4688,  1.9531,  3.9375],
        [ 0.0000,  4.4062,  1.5312,  2.4375,  2.9688,  0.4375,  3.1562,  2.7812,  3.5312,  2.1094,  3.0469,  1.7031,  3.5469,  2.9375,  2.4688],
        [ 0.0000,  4.9688,  1.4219,  0.0552,  2.3594, -1.3125,  3.1250,  1.3438,  3.4844,  2.2812,  1.5312,  1.8984,  2.4375,  4.5312,  3.0938],
        [ 0.0000,  2.5938,  0.5977, -2.4062,  0.0991,  0.1182,  1.7500,  1.7891,  1.1484,  5.9375,  1.2891,  2.4844,  2.4531,  1.7891,  5.3125],
        [ 0.0000,  6.5000,  3.3281,  2.0938,  4.3438,  2.5938,  4.8125,  4.0625,  3.1875,  2.5000,  2.1406,  1.8203,  1.7266,  1.7109,  3.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1459],
        [0.0212],
        [0.0072],
        [0.0218],
        [0.0067],
        [0.0234],
        [0.0095],
        [0.0148],
        [0.0085],
        [0.0075],
        [0.0050],
        [0.0080],
        [0.0074],
        [0.0083]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( are:0.1162 a:0.2100,:0.2930 yellow:0.1328,:0.0869,:0.3223 a:0.0967iced:0.2051)
iced
------
		( a:0.2100,:0.2930 yellow:0.1328,:0.0869,:0.3223 a:0.0967iced:0.2051 with:0.1768)
 with a variety of colors.
- The color of the flowers is a
@ 5550 train 4.0961 , allloss: 4.0967, dt: 1749.66ms, fracRes: 0.3843, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5839, norm(y): 1.0164, norm:1.3495, tok/sec: 74912.70, flops:78.62, batch-reuse:1
@ 5551 train 4.0251 , allloss: 4.0264, dt: 1316.72ms, fracRes: 0.3863, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5858, norm(y): 1.0165, norm:1.1370, tok/sec: 99544.20, flops:104.47, batch-reuse:1
@ 5552 train 4.1025 , allloss: 4.1030, dt: 1339.99ms, fracRes: 0.3859, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5849, norm(y): 1.0165, norm:1.2746, tok/sec: 97815.42, flops:102.66, batch-reuse:1
@ 5553 train 4.0651 , allloss: 4.0660, dt: 1326.41ms, fracRes: 0.3851, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5856, norm(y): 1.0164, norm:1.2217, tok/sec: 98817.23, flops:103.71, batch-reuse:1
@ 5554 train 4.0343 , allloss: 4.0349, dt: 1335.28ms, fracRes: 0.3834, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5899, norm(y): 1.0163, norm:1.1982, tok/sec: 98160.72, flops:103.02, batch-reuse:1
@ 5555 train 4.0221 , allloss: 4.0226, dt: 1292.44ms, fracRes: 0.3834, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5884, norm(y): 1.0163, norm:1.0459, tok/sec: 101414.35, flops:106.44, batch-reuse:1
@ 5556 train 4.0609 , allloss: 4.0620, dt: 1299.49ms, fracRes: 0.3835, norm(attn): 0.2490, norm(output): 0.7617, norm(x): 0.5876, norm(y): 1.0163, norm:1.1022, tok/sec: 100864.22, flops:105.86, batch-reuse:1
@ 5557 train 4.0423 , allloss: 4.0434, dt: 1297.63ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5893, norm(y): 1.0164, norm:1.1447, tok/sec: 101008.44, flops:106.01, batch-reuse:1
@ 5558 train 4.0073 , allloss: 4.0087, dt: 1293.58ms, fracRes: 0.3836, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5907, norm(y): 1.0164, norm:1.1301, tok/sec: 101325.08, flops:106.34, batch-reuse:1
@ 5559 train 4.1122 , allloss: 4.1132, dt: 1286.94ms, fracRes: 0.3839, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5954, norm(y): 1.0165, norm:1.1162, tok/sec: 101847.82, flops:106.89, batch-reuse:1
@ 5560 train 4.0486 , allloss: 4.0493, dt: 1319.43ms, fracRes: 0.3848, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5894, norm(y): 1.0166, norm:1.0780, tok/sec: 99339.79, flops:104.26, batch-reuse:1
@ 5561 train 4.0121 , allloss: 4.0178, dt: 1313.44ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5905, norm(y): 1.0165, norm:0.9919, tok/sec: 99792.54, flops:104.73, batch-reuse:1
@ 5562 train 3.9096 , allloss: 3.9104, dt: 1341.07ms, fracRes: 0.3844, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5887, norm(y): 1.0164, norm:1.0763, tok/sec: 97736.97, flops:102.58, batch-reuse:1
@ 5563 train 4.0568 , allloss: 4.0577, dt: 1340.33ms, fracRes: 0.3846, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5909, norm(y): 1.0164, norm:1.0039, tok/sec: 97790.92, flops:102.63, batch-reuse:1
@ 5564 train 4.0894 , allloss: 4.0903, dt: 1329.77ms, fracRes: 0.3863, norm(attn): 0.2480, norm(output): 0.7695, norm(x): 0.5878, norm(y): 1.0165, norm:1.0177, tok/sec: 98567.59, flops:103.45, batch-reuse:1
@ 5565 train 4.0382 , allloss: 4.0388, dt: 1304.75ms, fracRes: 0.3862, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5906, norm(y): 1.0165, norm:1.0930, tok/sec: 100457.34, flops:105.43, batch-reuse:1
@ 5566 train 4.0752 , allloss: 4.0761, dt: 1278.63ms, fracRes: 0.3844, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5940, norm(y): 1.0164, norm:1.0660, tok/sec: 102509.85, flops:107.59, batch-reuse:1
@ 5567 train 4.0707 , allloss: 4.0712, dt: 1315.46ms, fracRes: 0.3840, norm(attn): 0.2490, norm(output): 0.7734, norm(x): 0.5903, norm(y): 1.0164, norm:0.9580, tok/sec: 99639.98, flops:104.57, batch-reuse:1
@ 5568 train 4.1488 , allloss: 4.1498, dt: 1299.51ms, fracRes: 0.3857, norm(attn): 0.2490, norm(output): 0.7734, norm(x): 0.5915, norm(y): 1.0167, norm:1.1689, tok/sec: 100862.73, flops:105.86, batch-reuse:1
@ 5569 train 4.0364 , allloss: 4.0394, dt: 1291.52ms, fracRes: 0.3841, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5881, norm(y): 1.0164, norm:1.1671, tok/sec: 101486.91, flops:106.51, batch-reuse:1
@ 5570 train 3.9759 , allloss: 3.9763, dt: 1320.57ms, fracRes: 0.3842, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5885, norm(y): 1.0163, norm:1.0734, tok/sec: 99253.95, flops:104.17, batch-reuse:1
@ 5571 train 4.0828 , allloss: 4.0839, dt: 1311.39ms, fracRes: 0.3851, norm(attn): 0.2500, norm(output): 0.7617, norm(x): 0.5870, norm(y): 1.0164, norm:1.0080, tok/sec: 99949.21, flops:104.90, batch-reuse:1
@ 5572 train 4.0854 , allloss: 4.0863, dt: 1341.12ms, fracRes: 0.3850, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5846, norm(y): 1.0165, norm:1.0162, tok/sec: 97733.24, flops:102.57, batch-reuse:1
@ 5573 train 4.0181 , allloss: 4.0187, dt: 1335.62ms, fracRes: 0.3853, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5862, norm(y): 1.0165, norm:1.1334, tok/sec: 98135.40, flops:102.99, batch-reuse:1
@ 5574 train 4.1043 , allloss: 4.1050, dt: 1284.86ms, fracRes: 0.3858, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5876, norm(y): 1.0165, norm:1.0346, tok/sec: 102012.39, flops:107.06, batch-reuse:1
@ 5575 train 4.0852 , allloss: 4.0857, dt: 1312.21ms, fracRes: 0.3861, norm(attn): 0.2490, norm(output): 0.7734, norm(x): 0.5867, norm(y): 1.0165, norm:0.9369, tok/sec: 99886.35, flops:104.83, batch-reuse:1
@ 5576 train 3.9591 , allloss: 3.9596, dt: 1307.69ms, fracRes: 0.3843, norm(attn): 0.2520, norm(output): 0.7695, norm(x): 0.5855, norm(y): 1.0164, norm:1.0068, tok/sec: 100232.04, flops:105.20, batch-reuse:1
@ 5577 train 3.9465 , allloss: 3.9470, dt: 1324.63ms, fracRes: 0.3838, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5834, norm(y): 1.0164, norm:0.9900, tok/sec: 98950.16, flops:103.85, batch-reuse:1
@ 5578 train 4.0679 , allloss: 4.0689, dt: 1317.46ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5886, norm(y): 1.0163, norm:1.0156, tok/sec: 99488.17, flops:104.41, batch-reuse:1
@ 5579 train 4.1321 , allloss: 4.1331, dt: 1335.46ms, fracRes: 0.3849, norm(attn): 0.2500, norm(output): 0.7578, norm(x): 0.5868, norm(y): 1.0163, norm:1.1189, tok/sec: 98147.34, flops:103.01, batch-reuse:1
@ 5580 train 4.3404 , allloss: 4.3412, dt: 1323.24ms, fracRes: 0.3825, norm(attn): 0.2578, norm(output): 0.7617, norm(x): 0.5853, norm(y): 1.0162, norm:1.3825, tok/sec: 99053.85, flops:103.96, batch-reuse:1
@ 5581 train 4.2859 , allloss: 4.2875, dt: 1350.04ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.7578, norm(x): 0.5861, norm(y): 1.0163, norm:1.2010, tok/sec: 97087.50, flops:101.90, batch-reuse:1
@ 5582 train 4.1670 , allloss: 4.1679, dt: 1336.86ms, fracRes: 0.3850, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5885, norm(y): 1.0164, norm:1.1332, tok/sec: 98044.31, flops:102.90, batch-reuse:1
@ 5583 train 4.2944 , allloss: 4.2953, dt: 1339.19ms, fracRes: 0.3857, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5909, norm(y): 1.0164, norm:1.0153, tok/sec: 97874.17, flops:102.72, batch-reuse:1
@ 5584 train 4.1106 , allloss: 4.1113, dt: 1337.61ms, fracRes: 0.3857, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5941, norm(y): 1.0165, norm:1.0737, tok/sec: 97989.73, flops:102.84, batch-reuse:1
@ 5585 train 4.1830 , allloss: 4.1842, dt: 1337.59ms, fracRes: 0.3840, norm(attn): 0.2520, norm(output): 0.7695, norm(x): 0.5930, norm(y): 1.0165, norm:1.0336, tok/sec: 97991.13, flops:102.84, batch-reuse:1
@ 5586 train 4.2182 , allloss: 4.2190, dt: 1290.37ms, fracRes: 0.3835, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5905, norm(y): 1.0164, norm:1.0762, tok/sec: 101577.12, flops:106.61, batch-reuse:1
@ 5587 train 4.1493 , allloss: 4.1501, dt: 1293.64ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5928, norm(y): 1.0165, norm:1.0931, tok/sec: 101320.29, flops:106.34, batch-reuse:1
@ 5588 train 4.0974 , allloss: 4.0979, dt: 1291.81ms, fracRes: 0.3860, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5933, norm(y): 1.0165, norm:1.0539, tok/sec: 101463.89, flops:106.49, batch-reuse:1
@ 5589 train 4.2365 , allloss: 4.2371, dt: 1297.95ms, fracRes: 0.3871, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5923, norm(y): 1.0165, norm:1.0174, tok/sec: 100984.04, flops:105.98, batch-reuse:1
@ 5590 train 4.1864 , allloss: 4.1869, dt: 1287.36ms, fracRes: 0.3861, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5924, norm(y): 1.0164, norm:0.9946, tok/sec: 101814.21, flops:106.86, batch-reuse:1
@ 5591 train 4.2708 , allloss: 4.2717, dt: 1319.39ms, fracRes: 0.3856, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5943, norm(y): 1.0163, norm:1.1071, tok/sec: 99342.53, flops:104.26, batch-reuse:1
@ 5592 train 4.1220 , allloss: 4.1224, dt: 1344.85ms, fracRes: 0.3857, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5910, norm(y): 1.0165, norm:0.9735, tok/sec: 97462.13, flops:102.29, batch-reuse:1
@ 5593 train 4.1048 , allloss: 4.1054, dt: 1327.47ms, fracRes: 0.3853, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5877, norm(y): 1.0165, norm:1.1030, tok/sec: 98738.05, flops:103.63, batch-reuse:1
@ 5594 train 4.2450 , allloss: 4.2462, dt: 1308.70ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.7617, norm(x): 0.5888, norm(y): 1.0163, norm:1.0252, tok/sec: 100154.03, flops:105.11, batch-reuse:1
@ 5595 train 4.2372 , allloss: 4.2381, dt: 1340.85ms, fracRes: 0.3826, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5888, norm(y): 1.0163, norm:1.0414, tok/sec: 97753.27, flops:102.59, batch-reuse:1
@ 5596 train 4.2113 , allloss: 4.2126, dt: 1318.45ms, fracRes: 0.3836, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5893, norm(y): 1.0163, norm:1.1481, tok/sec: 99413.33, flops:104.34, batch-reuse:1
@ 5597 train 4.2876 , allloss: 4.2886, dt: 1295.81ms, fracRes: 0.3846, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5887, norm(y): 1.0165, norm:1.0267, tok/sec: 101150.41, flops:106.16, batch-reuse:1
@ 5598 train 4.2586 , allloss: 4.2597, dt: 1285.82ms, fracRes: 0.3858, norm(attn): 0.2490, norm(output): 0.7656, norm(x): 0.5887, norm(y): 1.0165, norm:1.0203, tok/sec: 101936.30, flops:106.98, batch-reuse:1
@ 5599 train 4.2011 , allloss: 4.2018, dt: 1297.69ms, fracRes: 0.3858, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5914, norm(y): 1.0164, norm:1.1406, tok/sec: 101004.21, flops:106.01, batch-reuse:1
@ 5600 train 4.2031 , allloss: 4.2039, dt: 1303.67ms, fracRes: 0.3852, norm(attn): 0.2480, norm(output): 0.7656, norm(x): 0.5894, norm(y): 1.0163, norm:0.9607, tok/sec: 100540.60, flops:105.52, batch-reuse:1
@ 5601 train 4.3072 , allloss: 4.3079, dt: 1319.71ms, fracRes: 0.3856, norm(attn): 0.2480, norm(output): 0.7695, norm(x): 0.5888, norm(y): 1.0164, norm:1.0866, tok/sec: 99318.72, flops:104.24, batch-reuse:1
@ 5602 train 4.3960 , allloss: 4.3968, dt: 1299.30ms, fracRes: 0.3863, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5937, norm(y): 1.0164, norm:1.0704, tok/sec: 100878.98, flops:105.87, batch-reuse:1
@ 5603 train 4.2358 , allloss: 4.2368, dt: 1283.81ms, fracRes: 0.3849, norm(attn): 0.2490, norm(output): 0.7695, norm(x): 0.5901, norm(y): 1.0164, norm:1.1272, tok/sec: 102095.75, flops:107.15, batch-reuse:1
@ 5604 train 4.2191 , allloss: 4.2198, dt: 1320.42ms, fracRes: 0.3857, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5898, norm(y): 1.0165, norm:0.9760, tok/sec: 99265.19, flops:104.18, batch-reuse:1
@ 5605 train 4.1371 , allloss: 4.1377, dt: 1340.39ms, fracRes: 0.3852, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5906, norm(y): 1.0164, norm:0.9882, tok/sec: 97786.62, flops:102.63, batch-reuse:1
@ 5606 train 4.3792 , allloss: 4.3797, dt: 1298.81ms, fracRes: 0.3874, norm(attn): 0.2500, norm(output): 0.7852, norm(x): 0.5993, norm(y): 1.0164, norm:1.4760, tok/sec: 100917.22, flops:105.91, batch-reuse:1
@ 5607 train 4.2504 , allloss: 4.2520, dt: 1321.01ms, fracRes: 0.3854, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5924, norm(y): 1.0164, norm:1.3175, tok/sec: 99221.35, flops:104.13, batch-reuse:1
@ 5608 train 4.2272 , allloss: 4.2288, dt: 1298.95ms, fracRes: 0.3862, norm(attn): 0.2471, norm(output): 0.7852, norm(x): 0.5905, norm(y): 1.0164, norm:1.2395, tok/sec: 100905.99, flops:105.90, batch-reuse:1
@ 5609 train 4.3186 , allloss: 4.3192, dt: 1319.01ms, fracRes: 0.3867, norm(attn): 0.2480, norm(output): 0.7891, norm(x): 0.5927, norm(y): 1.0164, norm:1.4976, tok/sec: 99371.50, flops:104.29, batch-reuse:1
@ 5610 train 4.2659 , allloss: 4.2667, dt: 1324.80ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5898, norm(y): 1.0163, norm:1.2592, tok/sec: 98937.36, flops:103.84, batch-reuse:1
@ 5611 train 4.1862 , allloss: 4.1870, dt: 1299.28ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5941, norm(y): 1.0163, norm:1.1415, tok/sec: 100880.29, flops:105.88, batch-reuse:1
@ 5612 train 4.0632 , allloss: 4.0638, dt: 1302.23ms, fracRes: 0.3837, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5905, norm(y): 1.0164, norm:1.0430, tok/sec: 100651.71, flops:105.64, batch-reuse:1
@ 5613 train 4.2343 , allloss: 4.2359, dt: 1328.37ms, fracRes: 0.3833, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5898, norm(y): 1.0165, norm:1.0616, tok/sec: 98671.14, flops:103.56, batch-reuse:1
@ 5614 train 4.1292 , allloss: 4.1303, dt: 1330.01ms, fracRes: 0.3834, norm(attn): 0.2520, norm(output): 0.7695, norm(x): 0.5912, norm(y): 1.0165, norm:1.0726, tok/sec: 98549.89, flops:103.43, batch-reuse:1
@ 5615 train 4.1365 , allloss: 4.1372, dt: 1318.37ms, fracRes: 0.3832, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5932, norm(y): 1.0164, norm:1.0490, tok/sec: 99419.55, flops:104.34, batch-reuse:1
@ 5616 train 4.1450 , allloss: 4.1460, dt: 1338.77ms, fracRes: 0.3830, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5920, norm(y): 1.0164, norm:1.1332, tok/sec: 97904.82, flops:102.75, batch-reuse:1
@ 5617 train 4.0475 , allloss: 4.0484, dt: 1346.47ms, fracRes: 0.3852, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5900, norm(y): 1.0165, norm:1.0161, tok/sec: 97345.06, flops:102.17, batch-reuse:1
@ 5618 train 4.1642 , allloss: 4.1649, dt: 1342.19ms, fracRes: 0.3854, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5890, norm(y): 1.0165, norm:1.0481, tok/sec: 97655.18, flops:102.49, batch-reuse:1
@ 5619 train 4.2164 , allloss: 4.2173, dt: 1303.34ms, fracRes: 0.3855, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5913, norm(y): 1.0165, norm:1.1085, tok/sec: 100566.22, flops:105.55, batch-reuse:1
@ 5620 train 4.0709 , allloss: 4.0716, dt: 1307.44ms, fracRes: 0.3865, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5911, norm(y): 1.0165, norm:0.9779, tok/sec: 100251.00, flops:105.22, batch-reuse:1
@ 5621 train 4.1771 , allloss: 4.1780, dt: 1288.20ms, fracRes: 0.3867, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5890, norm(y): 1.0164, norm:0.9947, tok/sec: 101748.00, flops:106.79, batch-reuse:1
@ 5622 train 4.1836 , allloss: 4.1840, dt: 1310.23ms, fracRes: 0.3867, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5895, norm(y): 1.0163, norm:0.8677, tok/sec: 100037.09, flops:104.99, batch-reuse:1
@ 5623 train 4.1545 , allloss: 4.1551, dt: 1324.41ms, fracRes: 0.3862, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5898, norm(y): 1.0164, norm:0.9825, tok/sec: 98966.67, flops:103.87, batch-reuse:1
@ 5624 train 4.1992 , allloss: 4.2008, dt: 1306.59ms, fracRes: 0.3850, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5923, norm(y): 1.0163, norm:0.9974, tok/sec: 100316.12, flops:105.28, batch-reuse:1
@ 5625 train 4.1619 , allloss: 4.1626, dt: 1281.91ms, fracRes: 0.3829, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5913, norm(y): 1.0163, norm:1.0345, tok/sec: 102247.47, flops:107.31, batch-reuse:1
@ 5626 train 4.0818 , allloss: 4.0823, dt: 1294.51ms, fracRes: 0.3824, norm(attn): 0.2578, norm(output): 0.7656, norm(x): 0.5911, norm(y): 1.0164, norm:1.0372, tok/sec: 101252.59, flops:106.27, batch-reuse:1
@ 5627 train 4.2542 , allloss: 4.2547, dt: 1321.74ms, fracRes: 0.3828, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5888, norm(y): 1.0164, norm:0.9953, tok/sec: 99166.15, flops:104.08, batch-reuse:1
@ 5628 train 4.1361 , allloss: 4.1369, dt: 1296.86ms, fracRes: 0.3820, norm(attn): 0.2578, norm(output): 0.7578, norm(x): 0.5875, norm(y): 1.0163, norm:1.0604, tok/sec: 101068.90, flops:106.07, batch-reuse:1
@ 5629 train 4.2751 , allloss: 4.2756, dt: 1310.43ms, fracRes: 0.3822, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5855, norm(y): 1.0163, norm:0.9220, tok/sec: 100021.76, flops:104.97, batch-reuse:1
@ 5630 train 4.2140 , allloss: 4.2150, dt: 1305.55ms, fracRes: 0.3838, norm(attn): 0.2520, norm(output): 0.7695, norm(x): 0.5921, norm(y): 1.0164, norm:1.0936, tok/sec: 100395.87, flops:105.37, batch-reuse:1
@ 5631 train 4.2371 , allloss: 4.2382, dt: 1289.87ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5909, norm(y): 1.0164, norm:1.0384, tok/sec: 101616.82, flops:106.65, batch-reuse:1
@ 5632 train 4.0633 , allloss: 4.0641, dt: 1315.64ms, fracRes: 0.3861, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5919, norm(y): 1.0164, norm:0.9662, tok/sec: 99626.35, flops:104.56, batch-reuse:1
@ 5633 train 4.1158 , allloss: 4.1165, dt: 1298.61ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5885, norm(y): 1.0163, norm:0.9700, tok/sec: 100932.56, flops:105.93, batch-reuse:1
@ 5634 train 4.1044 , allloss: 4.1052, dt: 1297.61ms, fracRes: 0.3841, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5900, norm(y): 1.0164, norm:0.9840, tok/sec: 101010.37, flops:106.01, batch-reuse:1
@ 5635 train 4.2860 , allloss: 4.2869, dt: 1347.93ms, fracRes: 0.3842, norm(attn): 0.2490, norm(output): 0.7734, norm(x): 0.5903, norm(y): 1.0164, norm:0.9414, tok/sec: 97239.71, flops:102.05, batch-reuse:1
@ 5636 train 4.0969 , allloss: 4.0985, dt: 1350.66ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5895, norm(y): 1.0165, norm:0.9687, tok/sec: 97043.14, flops:101.85, batch-reuse:1
@ 5637 train 4.2355 , allloss: 4.2395, dt: 1347.03ms, fracRes: 0.3840, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5893, norm(y): 1.0164, norm:0.9038, tok/sec: 97304.17, flops:102.12, batch-reuse:1
@ 5638 train 4.1902 , allloss: 4.1920, dt: 1292.68ms, fracRes: 0.3835, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5911, norm(y): 1.0163, norm:0.8719, tok/sec: 101395.17, flops:106.42, batch-reuse:1
@ 5639 train 4.0583 , allloss: 4.0590, dt: 1299.09ms, fracRes: 0.3814, norm(attn): 0.2637, norm(output): 0.7695, norm(x): 0.5922, norm(y): 1.0162, norm:1.0654, tok/sec: 100895.19, flops:105.89, batch-reuse:1
@ 5640 train 4.1635 , allloss: 4.1646, dt: 1277.79ms, fracRes: 0.3829, norm(attn): 0.2539, norm(output): 0.7891, norm(x): 0.5952, norm(y): 1.0163, norm:1.1261, tok/sec: 102577.27, flops:107.66, batch-reuse:1
@ 5641 train 4.1944 , allloss: 4.1955, dt: 1298.66ms, fracRes: 0.3828, norm(attn): 0.2539, norm(output): 0.7773, norm(x): 0.5953, norm(y): 1.0163, norm:0.9552, tok/sec: 100928.81, flops:105.93, batch-reuse:1
@ 5642 train 4.1659 , allloss: 4.1667, dt: 1298.99ms, fracRes: 0.3808, norm(attn): 0.2559, norm(output): 0.7734, norm(x): 0.5922, norm(y): 1.0162, norm:1.0649, tok/sec: 100903.34, flops:105.90, batch-reuse:1
@ 5643 train 4.2408 , allloss: 4.2416, dt: 1297.60ms, fracRes: 0.3828, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5894, norm(y): 1.0163, norm:1.0881, tok/sec: 101010.95, flops:106.01, batch-reuse:1
@ 5644 train 4.2294 , allloss: 4.2308, dt: 1283.55ms, fracRes: 0.3833, norm(attn): 0.2539, norm(output): 0.7734, norm(x): 0.5907, norm(y): 1.0163, norm:1.2164, tok/sec: 102116.40, flops:107.17, batch-reuse:1
@ 5645 train 4.0732 , allloss: 4.0739, dt: 1289.95ms, fracRes: 0.3846, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5903, norm(y): 1.0163, norm:1.1191, tok/sec: 101610.49, flops:106.64, batch-reuse:1
@ 5646 train 4.1289 , allloss: 4.1296, dt: 1290.77ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5923, norm(y): 1.0164, norm:1.2917, tok/sec: 101545.90, flops:106.57, batch-reuse:1
@ 5647 train 4.2449 , allloss: 4.2455, dt: 1282.40ms, fracRes: 0.3858, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5909, norm(y): 1.0165, norm:1.0560, tok/sec: 102208.73, flops:107.27, batch-reuse:1
@ 5648 train 4.1197 , allloss: 4.1202, dt: 1289.48ms, fracRes: 0.3851, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5908, norm(y): 1.0165, norm:1.1839, tok/sec: 101647.14, flops:106.68, batch-reuse:1
@ 5649 train 4.2112 , allloss: 4.2121, dt: 1286.15ms, fracRes: 0.3858, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5900, norm(y): 1.0165, norm:1.1825, tok/sec: 101910.18, flops:106.96, batch-reuse:1
@ 5650 train 4.0145 , allloss: 4.0152, dt: 1302.75ms, fracRes: 0.3853, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5895, norm(y): 1.0164, norm:1.1078, tok/sec: 100611.72, flops:105.59, batch-reuse:1
@ 5651 train 4.1426 , allloss: 4.1444, dt: 1284.62ms, fracRes: 0.3845, norm(attn): 0.2500, norm(output): 0.7695, norm(x): 0.5892, norm(y): 1.0163, norm:1.0637, tok/sec: 102031.40, flops:107.08, batch-reuse:1
@ 5652 train 4.1256 , allloss: 4.1268, dt: 1314.55ms, fracRes: 0.3845, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5901, norm(y): 1.0164, norm:1.0870, tok/sec: 99708.92, flops:104.65, batch-reuse:1
@ 5653 train 4.1349 , allloss: 4.1362, dt: 1342.41ms, fracRes: 0.3846, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5902, norm(y): 1.0164, norm:1.1540, tok/sec: 97639.47, flops:102.47, batch-reuse:1
@ 5654 train 4.2011 , allloss: 4.2019, dt: 1303.83ms, fracRes: 0.3846, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5926, norm(y): 1.0165, norm:1.1714, tok/sec: 100528.71, flops:105.51, batch-reuse:1
@ 5655 train 4.2107 , allloss: 4.2115, dt: 1285.49ms, fracRes: 0.3830, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5922, norm(y): 1.0163, norm:1.0918, tok/sec: 101963.07, flops:107.01, batch-reuse:1
@ 5656 train 4.1888 , allloss: 4.1900, dt: 1287.69ms, fracRes: 0.3836, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5910, norm(y): 1.0164, norm:1.3630, tok/sec: 101788.61, flops:106.83, batch-reuse:1
@ 5657 train 4.1870 , allloss: 4.1883, dt: 1298.02ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5941, norm(y): 1.0164, norm:1.1347, tok/sec: 100978.46, flops:105.98, batch-reuse:1
@ 5658 train 4.1241 , allloss: 4.1248, dt: 1292.74ms, fracRes: 0.3846, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5925, norm(y): 1.0164, norm:1.0433, tok/sec: 101390.63, flops:106.41, batch-reuse:1
@ 5659 train 4.1529 , allloss: 4.1536, dt: 1306.67ms, fracRes: 0.3845, norm(attn): 0.2520, norm(output): 0.7656, norm(x): 0.5893, norm(y): 1.0164, norm:1.0040, tok/sec: 100310.12, flops:105.28, batch-reuse:1
@ 5660 train 4.1463 , allloss: 4.1473, dt: 1298.39ms, fracRes: 0.3844, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5899, norm(y): 1.0164, norm:0.9905, tok/sec: 100949.42, flops:105.95, batch-reuse:1
@ 5661 train 4.2493 , allloss: 4.2501, dt: 1298.16ms, fracRes: 0.3844, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5925, norm(y): 1.0164, norm:1.0019, tok/sec: 100967.68, flops:105.97, batch-reuse:1
@ 5662 train 4.1994 , allloss: 4.2002, dt: 1292.70ms, fracRes: 0.3834, norm(attn): 0.2520, norm(output): 0.7773, norm(x): 0.5883, norm(y): 1.0164, norm:1.0745, tok/sec: 101394.20, flops:106.42, batch-reuse:1
@ 5663 train 4.2206 , allloss: 4.2214, dt: 1308.06ms, fracRes: 0.3841, norm(attn): 0.2500, norm(output): 0.7656, norm(x): 0.5866, norm(y): 1.0164, norm:0.9927, tok/sec: 100203.03, flops:105.16, batch-reuse:1
@ 5664 train 4.1050 , allloss: 4.1062, dt: 1288.83ms, fracRes: 0.3828, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5916, norm(y): 1.0164, norm:1.0626, tok/sec: 101698.83, flops:106.73, batch-reuse:1
@ 5665 train 4.1754 , allloss: 4.1785, dt: 1292.61ms, fracRes: 0.3837, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5954, norm(y): 1.0164, norm:0.9446, tok/sec: 101401.05, flops:106.42, batch-reuse:1
@ 5666 train 4.2038 , allloss: 4.2046, dt: 1325.32ms, fracRes: 0.3831, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5947, norm(y): 1.0163, norm:1.0712, tok/sec: 98898.31, flops:103.80, batch-reuse:1
@ 5667 train 4.1442 , allloss: 4.1448, dt: 1308.78ms, fracRes: 0.3834, norm(attn): 0.2520, norm(output): 0.7852, norm(x): 0.5977, norm(y): 1.0164, norm:1.0427, tok/sec: 100147.89, flops:105.11, batch-reuse:1
@ 5668 train 4.1306 , allloss: 4.1311, dt: 1315.81ms, fracRes: 0.3840, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5950, norm(y): 1.0164, norm:1.0218, tok/sec: 99613.15, flops:104.55, batch-reuse:1
@ 5669 train 4.1296 , allloss: 4.1304, dt: 1285.60ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5977, norm(y): 1.0165, norm:1.1112, tok/sec: 101954.05, flops:107.00, batch-reuse:1
@ 5670 train 4.1795 , allloss: 4.1802, dt: 1309.36ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5974, norm(y): 1.0164, norm:1.0260, tok/sec: 100103.88, flops:105.06, batch-reuse:1
@ 5671 train 4.2396 , allloss: 4.2405, dt: 1297.52ms, fracRes: 0.3845, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5963, norm(y): 1.0163, norm:1.1012, tok/sec: 101017.55, flops:106.02, batch-reuse:1
@ 5672 train 4.1336 , allloss: 4.1341, dt: 1309.71ms, fracRes: 0.3855, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5922, norm(y): 1.0164, norm:0.9967, tok/sec: 100077.13, flops:105.03, batch-reuse:1
@ 5673 train 4.0768 , allloss: 4.0775, dt: 1312.03ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5927, norm(y): 1.0165, norm:0.9457, tok/sec: 99900.42, flops:104.85, batch-reuse:1
@ 5674 train 4.0816 , allloss: 4.0824, dt: 1323.14ms, fracRes: 0.3850, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5939, norm(y): 1.0164, norm:0.9533, tok/sec: 99061.58, flops:103.97, batch-reuse:1
@ 5675 train 4.1055 , allloss: 4.1062, dt: 1295.11ms, fracRes: 0.3841, norm(attn): 0.2520, norm(output): 0.7852, norm(x): 0.5943, norm(y): 1.0164, norm:1.0257, tok/sec: 101205.68, flops:106.22, batch-reuse:1
@ 5676 train 4.2239 , allloss: 4.2246, dt: 1305.47ms, fracRes: 0.3853, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5941, norm(y): 1.0164, norm:1.0228, tok/sec: 100401.92, flops:105.37, batch-reuse:1
@ 5677 train 4.0749 , allloss: 4.0757, dt: 1325.30ms, fracRes: 0.3849, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5878, norm(y): 1.0165, norm:1.0396, tok/sec: 98899.66, flops:103.80, batch-reuse:1
@ 5678 train 4.0320 , allloss: 4.0329, dt: 1319.64ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5899, norm(y): 1.0165, norm:0.9988, tok/sec: 99323.88, flops:104.24, batch-reuse:1
@ 5679 train 4.0589 , allloss: 4.0599, dt: 1346.66ms, fracRes: 0.3849, norm(attn): 0.2520, norm(output): 0.7930, norm(x): 0.5939, norm(y): 1.0165, norm:0.9862, tok/sec: 97331.01, flops:102.15, batch-reuse:1
@ 5680 train 4.1370 , allloss: 4.1408, dt: 1314.15ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5945, norm(y): 1.0164, norm:1.0543, tok/sec: 99738.86, flops:104.68, batch-reuse:1
@ 5681 train 4.0723 , allloss: 4.0735, dt: 1348.42ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.7930, norm(x): 0.5994, norm(y): 1.0163, norm:1.0392, tok/sec: 97203.80, flops:102.02, batch-reuse:1
@ 5682 train 4.0618 , allloss: 4.0647, dt: 1303.42ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.7812, norm(x): 0.5959, norm(y): 1.0164, norm:1.1430, tok/sec: 100559.71, flops:105.54, batch-reuse:1
@ 5683 train 4.1056 , allloss: 4.1063, dt: 1295.28ms, fracRes: 0.3819, norm(attn): 0.2559, norm(output): 0.7773, norm(x): 0.5948, norm(y): 1.0163, norm:1.0511, tok/sec: 101191.67, flops:106.20, batch-reuse:1
@ 5684 train 4.1089 , allloss: 4.1098, dt: 1299.67ms, fracRes: 0.3826, norm(attn): 0.2539, norm(output): 0.7852, norm(x): 0.5952, norm(y): 1.0164, norm:1.1221, tok/sec: 100850.27, flops:105.84, batch-reuse:1
@ 5685 train 4.1149 , allloss: 4.1157, dt: 1316.76ms, fracRes: 0.3831, norm(attn): 0.2559, norm(output): 0.7812, norm(x): 0.5930, norm(y): 1.0164, norm:1.0248, tok/sec: 99540.95, flops:104.47, batch-reuse:1
@ 5686 train 4.0551 , allloss: 4.0579, dt: 1348.86ms, fracRes: 0.3834, norm(attn): 0.2539, norm(output): 0.7734, norm(x): 0.5933, norm(y): 1.0164, norm:1.0754, tok/sec: 97172.41, flops:101.98, batch-reuse:1
@ 5687 train 4.1073 , allloss: 4.1084, dt: 1315.80ms, fracRes: 0.3848, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5933, norm(y): 1.0165, norm:1.1208, tok/sec: 99613.82, flops:104.55, batch-reuse:1
@ 5688 train 4.0865 , allloss: 4.0873, dt: 1327.63ms, fracRes: 0.3856, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5939, norm(y): 1.0165, norm:1.0409, tok/sec: 98726.37, flops:103.62, batch-reuse:1
@ 5689 train 4.1000 , allloss: 4.1008, dt: 1277.65ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5944, norm(y): 1.0165, norm:0.9696, tok/sec: 102588.32, flops:107.67, batch-reuse:1
@ 5690 train 4.0126 , allloss: 4.0135, dt: 1315.68ms, fracRes: 0.3843, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5991, norm(y): 1.0165, norm:1.0481, tok/sec: 99622.86, flops:104.56, batch-reuse:1
@ 5691 train 4.0810 , allloss: 4.0815, dt: 1330.32ms, fracRes: 0.3830, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5940, norm(y): 1.0165, norm:1.0434, tok/sec: 98526.63, flops:103.41, batch-reuse:1
@ 5692 train 4.0475 , allloss: 4.0480, dt: 1295.99ms, fracRes: 0.3818, norm(attn): 0.2539, norm(output): 0.7852, norm(x): 0.5932, norm(y): 1.0164, norm:0.9012, tok/sec: 101136.73, flops:106.14, batch-reuse:1
@ 5693 train 4.0792 , allloss: 4.0796, dt: 1335.79ms, fracRes: 0.3819, norm(attn): 0.2539, norm(output): 0.7852, norm(x): 0.5952, norm(y): 1.0163, norm:0.9300, tok/sec: 98123.51, flops:102.98, batch-reuse:1
@ 5694 train 4.0893 , allloss: 4.0901, dt: 1334.15ms, fracRes: 0.3833, norm(attn): 0.2539, norm(output): 0.7930, norm(x): 0.5978, norm(y): 1.0164, norm:1.0505, tok/sec: 98244.14, flops:103.11, batch-reuse:1
@ 5695 train 4.0678 , allloss: 4.0684, dt: 1309.56ms, fracRes: 0.3819, norm(attn): 0.2539, norm(output): 0.7852, norm(x): 0.5950, norm(y): 1.0163, norm:0.9925, tok/sec: 100088.72, flops:105.04, batch-reuse:1
@ 5696 train 4.0879 , allloss: 4.0889, dt: 1301.98ms, fracRes: 0.3831, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5925, norm(y): 1.0165, norm:1.0091, tok/sec: 100671.67, flops:105.66, batch-reuse:1
@ 5697 train 4.1064 , allloss: 4.1072, dt: 1305.92ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5931, norm(y): 1.0166, norm:1.0114, tok/sec: 100367.75, flops:105.34, batch-reuse:1
@ 5698 train 4.1248 , allloss: 4.1256, dt: 1314.16ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.7930, norm(x): 0.5935, norm(y): 1.0164, norm:1.1303, tok/sec: 99738.19, flops:104.68, batch-reuse:1
@ 5699 train 4.1479 , allloss: 4.1488, dt: 1313.79ms, fracRes: 0.3847, norm(attn): 0.2500, norm(output): 0.7852, norm(x): 0.5917, norm(y): 1.0164, norm:1.1471, tok/sec: 99766.52, flops:104.71, batch-reuse:1
@ 5700 train 4.1549 , allloss: 4.1568, dt: 1314.05ms, fracRes: 0.3856, norm(attn): 0.2500, norm(output): 0.7812, norm(x): 0.5963, norm(y): 1.0164, norm:1.1862, tok/sec: 99746.93, flops:104.69, batch-reuse:1
@ 5701 train 4.0707 , allloss: 4.0716, dt: 1292.46ms, fracRes: 0.3855, norm(attn): 0.2500, norm(output): 0.7734, norm(x): 0.5920, norm(y): 1.0165, norm:1.1746, tok/sec: 101413.13, flops:106.43, batch-reuse:1
@ 5702 train 4.1192 , allloss: 4.1197, dt: 1316.25ms, fracRes: 0.3867, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5933, norm(y): 1.0166, norm:1.0746, tok/sec: 99579.55, flops:104.51, batch-reuse:1
@ 5703 train 4.1249 , allloss: 4.1254, dt: 1306.16ms, fracRes: 0.3867, norm(attn): 0.2500, norm(output): 0.8008, norm(x): 0.6021, norm(y): 1.0166, norm:1.0908, tok/sec: 100348.82, flops:105.32, batch-reuse:1
@ 5704 train 4.0801 , allloss: 4.0806, dt: 1285.84ms, fracRes: 0.3839, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5947, norm(y): 1.0165, norm:1.0799, tok/sec: 101935.09, flops:106.98, batch-reuse:1
@ 5705 train 4.0961 , allloss: 4.0967, dt: 1313.72ms, fracRes: 0.3828, norm(attn): 0.2539, norm(output): 0.7812, norm(x): 0.5911, norm(y): 1.0164, norm:1.0266, tok/sec: 99771.64, flops:104.71, batch-reuse:1
@ 5706 train 4.1688 , allloss: 4.1696, dt: 1292.07ms, fracRes: 0.3819, norm(attn): 0.2559, norm(output): 0.7812, norm(x): 0.5943, norm(y): 1.0163, norm:1.0690, tok/sec: 101443.71, flops:106.47, batch-reuse:1
@ 5707 train 4.0893 , allloss: 4.0900, dt: 1300.57ms, fracRes: 0.3812, norm(attn): 0.2559, norm(output): 0.7812, norm(x): 0.5940, norm(y): 1.0163, norm:1.0231, tok/sec: 100780.20, flops:105.77, batch-reuse:1
@ 5708 train 4.1023 , allloss: 4.1028, dt: 1290.69ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.7852, norm(x): 0.5936, norm(y): 1.0164, norm:0.9659, tok/sec: 101551.57, flops:106.58, batch-reuse:1
@ 5709 train 3.9993 , allloss: 3.9998, dt: 1306.30ms, fracRes: 0.3837, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5920, norm(y): 1.0165, norm:1.0273, tok/sec: 100338.18, flops:105.31, batch-reuse:1
@ 5710 train 4.0532 , allloss: 4.0539, dt: 1325.47ms, fracRes: 0.3838, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5965, norm(y): 1.0164, norm:0.9982, tok/sec: 98886.90, flops:103.78, batch-reuse:1
@ 5711 train 4.1907 , allloss: 4.1913, dt: 1324.75ms, fracRes: 0.3859, norm(attn): 0.2500, norm(output): 0.7891, norm(x): 0.5977, norm(y): 1.0165, norm:1.0160, tok/sec: 98941.01, flops:103.84, batch-reuse:1
@ 5712 train 4.0924 , allloss: 4.0928, dt: 1324.61ms, fracRes: 0.3843, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5947, norm(y): 1.0164, norm:0.9940, tok/sec: 98951.03, flops:103.85, batch-reuse:1
@ 5713 train 4.1126 , allloss: 4.1134, dt: 1321.77ms, fracRes: 0.3837, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5984, norm(y): 1.0164, norm:1.0646, tok/sec: 99164.29, flops:104.07, batch-reuse:1
@ 5714 train 4.1481 , allloss: 4.1488, dt: 1290.39ms, fracRes: 0.3833, norm(attn): 0.2520, norm(output): 0.7852, norm(x): 0.5991, norm(y): 1.0164, norm:1.0382, tok/sec: 101575.32, flops:106.61, batch-reuse:1
@ 5715 train 4.1382 , allloss: 4.1388, dt: 1306.17ms, fracRes: 0.3832, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5965, norm(y): 1.0164, norm:1.1188, tok/sec: 100348.51, flops:105.32, batch-reuse:1
@ 5716 train 4.1003 , allloss: 4.1009, dt: 1323.16ms, fracRes: 0.3830, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5948, norm(y): 1.0164, norm:0.9623, tok/sec: 99059.94, flops:103.97, batch-reuse:1
@ 5717 train 4.1258 , allloss: 4.1265, dt: 1303.85ms, fracRes: 0.3831, norm(attn): 0.2559, norm(output): 0.8008, norm(x): 0.5996, norm(y): 1.0165, norm:1.1042, tok/sec: 100526.58, flops:105.50, batch-reuse:1
@ 5718 train 4.0859 , allloss: 4.0866, dt: 1308.57ms, fracRes: 0.3826, norm(attn): 0.2598, norm(output): 0.7969, norm(x): 0.5994, norm(y): 1.0164, norm:1.1026, tok/sec: 100164.49, flops:105.12, batch-reuse:1
@ 5719 train 3.9395 , allloss: 3.9404, dt: 1318.17ms, fracRes: 0.3827, norm(attn): 0.2539, norm(output): 0.7930, norm(x): 0.5964, norm(y): 1.0164, norm:1.1046, tok/sec: 99434.71, flops:104.36, batch-reuse:1
@ 5720 train 4.0046 , allloss: 4.0051, dt: 1320.68ms, fracRes: 0.3830, norm(attn): 0.2500, norm(output): 0.7969, norm(x): 0.5968, norm(y): 1.0164, norm:1.0002, tok/sec: 99245.85, flops:104.16, batch-reuse:1
@ 5721 train 3.9125 , allloss: 3.9135, dt: 1338.98ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.5990, norm(y): 1.0165, norm:1.0177, tok/sec: 97889.70, flops:102.74, batch-reuse:1
@ 5722 train 4.1246 , allloss: 4.1252, dt: 1341.94ms, fracRes: 0.3862, norm(attn): 0.2490, norm(output): 0.7969, norm(x): 0.5962, norm(y): 1.0165, norm:0.9590, tok/sec: 97673.52, flops:102.51, batch-reuse:1
@ 5723 train 4.1892 , allloss: 4.1897, dt: 1305.95ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.5995, norm(y): 1.0165, norm:0.9713, tok/sec: 100365.24, flops:105.34, batch-reuse:1
@ 5724 train 4.0011 , allloss: 4.0018, dt: 1294.51ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.5976, norm(y): 1.0164, norm:1.1597, tok/sec: 101252.39, flops:106.27, batch-reuse:1
@ 5725 train 4.3282 , allloss: 4.3288, dt: 1316.94ms, fracRes: 0.3839, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5970, norm(y): 1.0164, norm:1.2908, tok/sec: 99528.05, flops:104.46, batch-reuse:1
@ 5726 train 4.0213 , allloss: 4.0221, dt: 1277.23ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.7930, norm(x): 0.5975, norm(y): 1.0165, norm:1.2820, tok/sec: 102621.81, flops:107.70, batch-reuse:1
@ 5727 train 3.9886 , allloss: 3.9897, dt: 1311.32ms, fracRes: 0.3840, norm(attn): 0.2559, norm(output): 0.7969, norm(x): 0.5983, norm(y): 1.0165, norm:1.0293, tok/sec: 99954.02, flops:104.90, batch-reuse:1
@ 5728 train 3.9633 , allloss: 3.9643, dt: 1334.36ms, fracRes: 0.3844, norm(attn): 0.2578, norm(output): 0.7891, norm(x): 0.5959, norm(y): 1.0165, norm:1.0704, tok/sec: 98228.37, flops:103.09, batch-reuse:1
@ 5729 train 4.0344 , allloss: 4.0348, dt: 1290.58ms, fracRes: 0.3846, norm(attn): 0.2539, norm(output): 0.7734, norm(x): 0.5943, norm(y): 1.0165, norm:1.0390, tok/sec: 101560.40, flops:106.59, batch-reuse:1
@ 5730 train 4.1025 , allloss: 4.1034, dt: 1275.66ms, fracRes: 0.3842, norm(attn): 0.2520, norm(output): 0.7852, norm(x): 0.5940, norm(y): 1.0164, norm:1.1500, tok/sec: 102748.72, flops:107.84, batch-reuse:1
@ 5731 train 4.0772 , allloss: 4.0778, dt: 1318.56ms, fracRes: 0.3838, norm(attn): 0.2520, norm(output): 0.7734, norm(x): 0.5956, norm(y): 1.0164, norm:1.0050, tok/sec: 99405.47, flops:104.33, batch-reuse:1
@ 5732 train 3.9292 , allloss: 3.9301, dt: 1346.06ms, fracRes: 0.3853, norm(attn): 0.2520, norm(output): 0.7891, norm(x): 0.5968, norm(y): 1.0165, norm:1.0251, tok/sec: 97374.23, flops:102.20, batch-reuse:1
@ 5733 train 4.0320 , allloss: 4.0325, dt: 1307.24ms, fracRes: 0.3857, norm(attn): 0.2500, norm(output): 0.7773, norm(x): 0.5935, norm(y): 1.0164, norm:0.9939, tok/sec: 100266.47, flops:105.23, batch-reuse:1
@ 5734 train 4.0472 , allloss: 4.0480, dt: 1344.93ms, fracRes: 0.3853, norm(attn): 0.2539, norm(output): 0.7812, norm(x): 0.5977, norm(y): 1.0164, norm:1.1329, tok/sec: 97456.08, flops:102.28, batch-reuse:1
@ 5735 train 4.0196 , allloss: 4.0208, dt: 1328.37ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.7773, norm(x): 0.5942, norm(y): 1.0165, norm:0.9781, tok/sec: 98671.28, flops:103.56, batch-reuse:1
@ 5736 train 3.9902 , allloss: 3.9912, dt: 1336.72ms, fracRes: 0.3829, norm(attn): 0.2539, norm(output): 0.7734, norm(x): 0.5939, norm(y): 1.0164, norm:1.0749, tok/sec: 98055.12, flops:102.91, batch-reuse:1
@ 5737 train 4.1275 , allloss: 4.1284, dt: 1340.78ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.7812, norm(x): 0.5941, norm(y): 1.0164, norm:1.0056, tok/sec: 97757.85, flops:102.60, batch-reuse:1
@ 5738 train 4.0436 , allloss: 4.0446, dt: 1296.23ms, fracRes: 0.3811, norm(attn): 0.2559, norm(output): 0.7891, norm(x): 0.5959, norm(y): 1.0164, norm:1.0560, tok/sec: 101117.80, flops:106.13, batch-reuse:1
@ 5739 train 4.0060 , allloss: 4.0071, dt: 1292.12ms, fracRes: 0.3821, norm(attn): 0.2559, norm(output): 0.7930, norm(x): 0.5963, norm(y): 1.0165, norm:1.0118, tok/sec: 101439.44, flops:106.46, batch-reuse:1
@ 5740 train 3.9791 , allloss: 3.9798, dt: 1295.36ms, fracRes: 0.3837, norm(attn): 0.2539, norm(output): 0.7969, norm(x): 0.5957, norm(y): 1.0165, norm:1.1049, tok/sec: 101185.50, flops:106.20, batch-reuse:1
@ 5741 train 3.9572 , allloss: 3.9579, dt: 1294.63ms, fracRes: 0.3837, norm(attn): 0.2539, norm(output): 0.7969, norm(x): 0.5983, norm(y): 1.0165, norm:1.0205, tok/sec: 101242.62, flops:106.26, batch-reuse:1
@ 5742 train 4.0469 , allloss: 4.0505, dt: 1288.32ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.5999, norm(y): 1.0164, norm:0.9939, tok/sec: 101738.43, flops:106.78, batch-reuse:1
@ 5743 train 4.0938 , allloss: 4.0956, dt: 1303.05ms, fracRes: 0.3867, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.6011, norm(y): 1.0165, norm:1.1813, tok/sec: 100588.47, flops:105.57, batch-reuse:1
@ 5744 train 3.9866 , allloss: 3.9873, dt: 1297.44ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6007, norm(y): 1.0164, norm:1.1088, tok/sec: 101023.57, flops:106.03, batch-reuse:1
@ 5745 train 3.9958 , allloss: 3.9966, dt: 1336.22ms, fracRes: 0.3860, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6021, norm(y): 1.0165, norm:1.0164, tok/sec: 98091.77, flops:102.95, batch-reuse:1
@ 5746 train 4.0889 , allloss: 4.0904, dt: 1306.94ms, fracRes: 0.3852, norm(attn): 0.2539, norm(output): 0.7891, norm(x): 0.5963, norm(y): 1.0164, norm:1.0861, tok/sec: 100289.02, flops:105.26, batch-reuse:1
@ 5747 train 4.0205 , allloss: 4.0211, dt: 1322.56ms, fracRes: 0.3845, norm(attn): 0.2520, norm(output): 0.7930, norm(x): 0.5966, norm(y): 1.0164, norm:0.9249, tok/sec: 99104.80, flops:104.01, batch-reuse:1
@ 5748 train 3.9384 , allloss: 3.9402, dt: 1341.28ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.7930, norm(x): 0.5958, norm(y): 1.0165, norm:0.9380, tok/sec: 97721.34, flops:102.56, batch-reuse:1
@ 5749 train 4.0059 , allloss: 4.0076, dt: 1341.98ms, fracRes: 0.3828, norm(attn): 0.2500, norm(output): 0.7930, norm(x): 0.5946, norm(y): 1.0164, norm:0.9574, tok/sec: 97670.76, flops:102.51, batch-reuse:1
@ 5750 train 3.9952 , allloss: 3.9996, dt: 1316.28ms, fracRes: 0.3851, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6007, norm(y): 1.0165, norm:1.1906, tok/sec: 99577.88, flops:104.51, batch-reuse:1
@ 5751 train 4.1883 , allloss: 4.1889, dt: 1298.70ms, fracRes: 0.3840, norm(attn): 0.2559, norm(output): 0.7969, norm(x): 0.5976, norm(y): 1.0165, norm:1.0048, tok/sec: 100925.35, flops:105.92, batch-reuse:1
@ 5752 train 4.1002 , allloss: 4.1011, dt: 1312.62ms, fracRes: 0.3819, norm(attn): 0.2598, norm(output): 0.8008, norm(x): 0.6024, norm(y): 1.0164, norm:1.1574, tok/sec: 99855.13, flops:104.80, batch-reuse:1
@ 5753 train 3.9634 , allloss: 3.9642, dt: 1305.40ms, fracRes: 0.3827, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.5988, norm(y): 1.0164, norm:1.1100, tok/sec: 100407.75, flops:105.38, batch-reuse:1
@ 5754 train 4.0187 , allloss: 4.0193, dt: 1322.18ms, fracRes: 0.3837, norm(attn): 0.2539, norm(output): 0.7930, norm(x): 0.5961, norm(y): 1.0165, norm:0.9734, tok/sec: 99133.25, flops:104.04, batch-reuse:1
@ 5755 train 4.0561 , allloss: 4.0565, dt: 1314.84ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.7773, norm(x): 0.5935, norm(y): 1.0164, norm:1.0256, tok/sec: 99686.74, flops:104.62, batch-reuse:1
@ 5756 train 4.0836 , allloss: 4.0847, dt: 1328.31ms, fracRes: 0.3841, norm(attn): 0.2520, norm(output): 0.7930, norm(x): 0.5981, norm(y): 1.0164, norm:0.9813, tok/sec: 98676.06, flops:103.56, batch-reuse:1
@ 5757 train 4.0069 , allloss: 4.0073, dt: 1334.06ms, fracRes: 0.3834, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6005, norm(y): 1.0164, norm:1.0436, tok/sec: 98250.65, flops:103.12, batch-reuse:1
@ 5758 train 4.0665 , allloss: 4.0675, dt: 1297.29ms, fracRes: 0.3832, norm(attn): 0.2578, norm(output): 0.7930, norm(x): 0.5989, norm(y): 1.0164, norm:0.9671, tok/sec: 101035.45, flops:106.04, batch-reuse:1
@ 5759 train 3.9438 , allloss: 3.9455, dt: 1321.24ms, fracRes: 0.3828, norm(attn): 0.2598, norm(output): 0.7969, norm(x): 0.5991, norm(y): 1.0164, norm:0.9984, tok/sec: 99203.98, flops:104.12, batch-reuse:1
@ 5760 train 4.0075 , allloss: 4.0089, dt: 1302.06ms, fracRes: 0.3833, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6010, norm(y): 1.0164, norm:0.9478, tok/sec: 100665.20, flops:105.65, batch-reuse:1
@ 5761 train 3.8484 , allloss: 3.8488, dt: 1293.85ms, fracRes: 0.3835, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6012, norm(y): 1.0165, norm:1.0956, tok/sec: 101303.51, flops:106.32, batch-reuse:1
@ 5762 train 3.9641 , allloss: 3.9656, dt: 1310.29ms, fracRes: 0.3837, norm(attn): 0.2539, norm(output): 0.7969, norm(x): 0.6028, norm(y): 1.0165, norm:1.0293, tok/sec: 100032.92, flops:104.99, batch-reuse:1
@ 5763 train 3.9172 , allloss: 3.9183, dt: 1333.94ms, fracRes: 0.3854, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6028, norm(y): 1.0165, norm:1.0361, tok/sec: 98259.36, flops:103.13, batch-reuse:1
@ 5764 train 4.0978 , allloss: 4.0986, dt: 1345.35ms, fracRes: 0.3860, norm(attn): 0.2500, norm(output): 0.8047, norm(x): 0.6033, norm(y): 1.0164, norm:0.9848, tok/sec: 97425.79, flops:102.25, batch-reuse:1
@ 5765 train 4.0667 , allloss: 4.0677, dt: 1326.77ms, fracRes: 0.3855, norm(attn): 0.2539, norm(output): 0.7969, norm(x): 0.6031, norm(y): 1.0164, norm:1.0271, tok/sec: 98790.56, flops:103.68, batch-reuse:1
@ 5766 train 4.2417 , allloss: 4.2432, dt: 1300.11ms, fracRes: 0.3847, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6071, norm(y): 1.0164, norm:1.1109, tok/sec: 100816.00, flops:105.81, batch-reuse:1
@ 5767 train 4.3014 , allloss: 4.3022, dt: 1309.68ms, fracRes: 0.3852, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6090, norm(y): 1.0165, norm:1.0310, tok/sec: 100079.03, flops:105.03, batch-reuse:1
@ 5768 train 4.1777 , allloss: 4.1789, dt: 1300.76ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6029, norm(y): 1.0165, norm:1.0904, tok/sec: 100765.63, flops:105.76, batch-reuse:1
@ 5769 train 4.2917 , allloss: 4.2924, dt: 1343.83ms, fracRes: 0.3856, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6025, norm(y): 1.0164, norm:1.2174, tok/sec: 97536.12, flops:102.37, batch-reuse:1
@ 5770 train 4.3314 , allloss: 4.3327, dt: 1323.86ms, fracRes: 0.3861, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6026, norm(y): 1.0164, norm:1.1141, tok/sec: 99007.31, flops:103.91, batch-reuse:1
@ 5771 train 4.1983 , allloss: 4.1992, dt: 1283.75ms, fracRes: 0.3854, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6029, norm(y): 1.0164, norm:1.1499, tok/sec: 102100.66, flops:107.16, batch-reuse:1
@ 5772 train 4.1984 , allloss: 4.1991, dt: 1284.68ms, fracRes: 0.3860, norm(attn): 0.2500, norm(output): 0.7969, norm(x): 0.6010, norm(y): 1.0164, norm:1.1170, tok/sec: 102026.59, flops:107.08, batch-reuse:1
@ 5773 train 4.1264 , allloss: 4.1277, dt: 1300.87ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6014, norm(y): 1.0164, norm:1.0817, tok/sec: 100756.84, flops:105.75, batch-reuse:1
@ 5774 train 4.2116 , allloss: 4.2123, dt: 1323.86ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6020, norm(y): 1.0165, norm:1.0219, tok/sec: 99007.40, flops:103.91, batch-reuse:1
@ 5775 train 4.2986 , allloss: 4.3000, dt: 1328.83ms, fracRes: 0.3841, norm(attn): 0.2500, norm(output): 0.8086, norm(x): 0.6023, norm(y): 1.0165, norm:1.0345, tok/sec: 98637.08, flops:103.52, batch-reuse:1
@ 5776 train 4.1960 , allloss: 4.1971, dt: 1307.44ms, fracRes: 0.3836, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6047, norm(y): 1.0164, norm:0.9780, tok/sec: 100250.59, flops:105.21, batch-reuse:1
@ 5777 train 4.1015 , allloss: 4.1021, dt: 1319.38ms, fracRes: 0.3851, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.5998, norm(y): 1.0165, norm:1.0367, tok/sec: 99343.72, flops:104.26, batch-reuse:1
@ 5778 train 4.1399 , allloss: 4.1410, dt: 1336.91ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.6031, norm(y): 1.0165, norm:1.0128, tok/sec: 98041.18, flops:102.90, batch-reuse:1
@ 5779 train 4.2699 , allloss: 4.2708, dt: 1318.64ms, fracRes: 0.3850, norm(attn): 0.2500, norm(output): 0.8008, norm(x): 0.6019, norm(y): 1.0165, norm:1.1171, tok/sec: 99399.08, flops:104.32, batch-reuse:1
@ 5780 train 4.2327 , allloss: 4.2336, dt: 1330.54ms, fracRes: 0.3832, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6036, norm(y): 1.0164, norm:1.2836, tok/sec: 98510.72, flops:103.39, batch-reuse:1
@ 5781 train 4.1385 , allloss: 4.1393, dt: 1302.74ms, fracRes: 0.3839, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6026, norm(y): 1.0164, norm:1.2543, tok/sec: 100612.20, flops:105.59, batch-reuse:1
@ 5782 train 4.1892 , allloss: 4.1902, dt: 1309.66ms, fracRes: 0.3839, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6049, norm(y): 1.0164, norm:1.2618, tok/sec: 100080.72, flops:105.04, batch-reuse:1
@ 5783 train 4.0887 , allloss: 4.0897, dt: 1310.91ms, fracRes: 0.3849, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6023, norm(y): 1.0165, norm:1.0781, tok/sec: 99985.65, flops:104.94, batch-reuse:1
@ 5784 train 4.1822 , allloss: 4.1834, dt: 1336.29ms, fracRes: 0.3859, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6060, norm(y): 1.0165, norm:1.1202, tok/sec: 98086.31, flops:102.94, batch-reuse:1
@ 5785 train 4.2150 , allloss: 4.2179, dt: 1341.45ms, fracRes: 0.3865, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6068, norm(y): 1.0165, norm:1.1824, tok/sec: 97709.32, flops:102.55, batch-reuse:1
@ 5786 train 4.1615 , allloss: 4.1622, dt: 1304.96ms, fracRes: 0.3862, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6050, norm(y): 1.0164, norm:1.0150, tok/sec: 100441.76, flops:105.42, batch-reuse:1
@ 5787 train 4.1599 , allloss: 4.1611, dt: 1285.10ms, fracRes: 0.3864, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6037, norm(y): 1.0164, norm:1.2963, tok/sec: 101993.49, flops:107.04, batch-reuse:1
@ 5788 train 4.1880 , allloss: 4.1886, dt: 1313.93ms, fracRes: 0.3860, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6026, norm(y): 1.0165, norm:1.0570, tok/sec: 99755.86, flops:104.70, batch-reuse:1
@ 5789 train 4.1397 , allloss: 4.1403, dt: 1316.04ms, fracRes: 0.3863, norm(attn): 0.2500, norm(output): 0.8047, norm(x): 0.6044, norm(y): 1.0165, norm:0.9755, tok/sec: 99595.61, flops:104.53, batch-reuse:1
@ 5790 train 4.1725 , allloss: 4.1733, dt: 1288.12ms, fracRes: 0.3840, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6050, norm(y): 1.0164, norm:1.0313, tok/sec: 101754.42, flops:106.79, batch-reuse:1
@ 5791 train 4.2003 , allloss: 4.2012, dt: 1312.89ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6033, norm(y): 1.0164, norm:0.9929, tok/sec: 99834.64, flops:104.78, batch-reuse:1
@ 5792 train 4.2723 , allloss: 4.2729, dt: 1328.73ms, fracRes: 0.3847, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6036, norm(y): 1.0164, norm:1.0114, tok/sec: 98644.26, flops:103.53, batch-reuse:1
@ 5793 train 4.1623 , allloss: 4.1628, dt: 1327.75ms, fracRes: 0.3846, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6027, norm(y): 1.0166, norm:1.1580, tok/sec: 98717.33, flops:103.61, batch-reuse:1
@ 5794 train 4.1256 , allloss: 4.1264, dt: 1310.19ms, fracRes: 0.3834, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6043, norm(y): 1.0165, norm:1.1141, tok/sec: 100040.25, flops:104.99, batch-reuse:1
@ 5795 train 4.1356 , allloss: 4.1368, dt: 1321.12ms, fracRes: 0.3828, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6020, norm(y): 1.0164, norm:1.0117, tok/sec: 99212.50, flops:104.13, batch-reuse:1
@ 5796 train 4.2335 , allloss: 4.2342, dt: 1320.85ms, fracRes: 0.3836, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.6047, norm(y): 1.0164, norm:1.0853, tok/sec: 99232.95, flops:104.15, batch-reuse:1
@ 5797 train 4.1672 , allloss: 4.1690, dt: 1300.35ms, fracRes: 0.3830, norm(attn): 0.2559, norm(output): 0.8047, norm(x): 0.6036, norm(y): 1.0164, norm:1.0147, tok/sec: 100797.72, flops:105.79, batch-reuse:1
@ 5798 train 4.2008 , allloss: 4.2017, dt: 1325.91ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.6021, norm(y): 1.0166, norm:1.0010, tok/sec: 98854.52, flops:103.75, batch-reuse:1
@ 5799 train 4.0376 , allloss: 4.0385, dt: 1305.73ms, fracRes: 0.3853, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6012, norm(y): 1.0166, norm:1.1135, tok/sec: 100381.86, flops:105.35, batch-reuse:1
@ 5800 train 4.1244 , allloss: 4.1249, dt: 1311.92ms, fracRes: 0.3855, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6039, norm(y): 1.0165, norm:1.0072, tok/sec: 99908.46, flops:104.86, batch-reuse:1
@ 5801 train 4.1520 , allloss: 4.1527, dt: 1327.74ms, fracRes: 0.3866, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6090, norm(y): 1.0165, norm:1.0552, tok/sec: 98717.91, flops:103.61, batch-reuse:1
@ 5802 train 4.3193 , allloss: 4.3204, dt: 1289.23ms, fracRes: 0.3870, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6052, norm(y): 1.0164, norm:1.0013, tok/sec: 101667.08, flops:106.70, batch-reuse:1
@ 5803 train 4.1314 , allloss: 4.1319, dt: 1314.74ms, fracRes: 0.3869, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6041, norm(y): 1.0165, norm:1.0927, tok/sec: 99694.15, flops:104.63, batch-reuse:1
@ 5804 train 4.2689 , allloss: 4.2694, dt: 1321.78ms, fracRes: 0.3860, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6062, norm(y): 1.0165, norm:1.0267, tok/sec: 99163.16, flops:104.07, batch-reuse:1
@ 5805 train 4.2743 , allloss: 4.2750, dt: 1342.05ms, fracRes: 0.3855, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6062, norm(y): 1.0164, norm:1.1721, tok/sec: 97665.25, flops:102.50, batch-reuse:1
@ 5806 train 4.1432 , allloss: 4.1442, dt: 1331.01ms, fracRes: 0.3848, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6043, norm(y): 1.0165, norm:1.1855, tok/sec: 98475.71, flops:103.35, batch-reuse:1
@ 5807 train 4.1249 , allloss: 4.1257, dt: 1296.53ms, fracRes: 0.3832, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6028, norm(y): 1.0164, norm:0.9890, tok/sec: 101094.37, flops:106.10, batch-reuse:1
@ 5808 train 4.1454 , allloss: 4.1459, dt: 1297.10ms, fracRes: 0.3838, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6049, norm(y): 1.0165, norm:1.1565, tok/sec: 101049.84, flops:106.05, batch-reuse:1
@ 5809 train 4.2161 , allloss: 4.2167, dt: 1297.77ms, fracRes: 0.3846, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6053, norm(y): 1.0164, norm:1.1140, tok/sec: 100997.86, flops:106.00, batch-reuse:1
@ 5810 train 4.2094 , allloss: 4.2104, dt: 1309.12ms, fracRes: 0.3832, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6053, norm(y): 1.0163, norm:1.1329, tok/sec: 100122.10, flops:105.08, batch-reuse:1
@ 5811 train 4.1953 , allloss: 4.1961, dt: 1339.97ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6063, norm(y): 1.0164, norm:1.0499, tok/sec: 97817.30, flops:102.66, batch-reuse:1
@ 5812 train 4.1601 , allloss: 4.1609, dt: 1329.11ms, fracRes: 0.3851, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6035, norm(y): 1.0165, norm:1.0509, tok/sec: 98616.09, flops:103.50, batch-reuse:1
@ 5813 train 4.1558 , allloss: 4.1564, dt: 1319.99ms, fracRes: 0.3849, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6031, norm(y): 1.0165, norm:0.9747, tok/sec: 99297.57, flops:104.21, batch-reuse:1
@ 5814 train 4.2057 , allloss: 4.2064, dt: 1308.82ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6064, norm(y): 1.0166, norm:1.0867, tok/sec: 100144.86, flops:105.10, batch-reuse:1
@ 5815 train 4.1469 , allloss: 4.1475, dt: 1300.81ms, fracRes: 0.3845, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6051, norm(y): 1.0165, norm:1.0088, tok/sec: 100761.47, flops:105.75, batch-reuse:1
@ 5816 train 4.1089 , allloss: 4.1098, dt: 1309.41ms, fracRes: 0.3840, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6031, norm(y): 1.0165, norm:0.9537, tok/sec: 100099.69, flops:105.06, batch-reuse:1
@ 5817 train 4.1574 , allloss: 4.1583, dt: 1337.10ms, fracRes: 0.3838, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6020, norm(y): 1.0165, norm:0.9298, tok/sec: 98026.84, flops:102.88, batch-reuse:1
@ 5818 train 4.2743 , allloss: 4.2751, dt: 1347.91ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6082, norm(y): 1.0164, norm:1.0237, tok/sec: 97241.04, flops:102.06, batch-reuse:1
@ 5819 train 4.1781 , allloss: 4.1788, dt: 1322.00ms, fracRes: 0.3838, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6053, norm(y): 1.0165, norm:1.0338, tok/sec: 99146.69, flops:104.06, batch-reuse:1
@ 5820 train 4.1300 , allloss: 4.1305, dt: 1299.83ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.8008, norm(x): 0.6020, norm(y): 1.0164, norm:1.0181, tok/sec: 100838.17, flops:105.83, batch-reuse:1
@ 5821 train 4.1543 , allloss: 4.1548, dt: 1302.00ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6008, norm(y): 1.0164, norm:1.1381, tok/sec: 100670.05, flops:105.66, batch-reuse:1
@ 5822 train 4.0992 , allloss: 4.1001, dt: 1324.62ms, fracRes: 0.3832, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6032, norm(y): 1.0164, norm:1.0440, tok/sec: 98950.64, flops:103.85, batch-reuse:1
@ 5823 train 4.1463 , allloss: 4.1469, dt: 1301.49ms, fracRes: 0.3831, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6054, norm(y): 1.0164, norm:1.1294, tok/sec: 100708.83, flops:105.70, batch-reuse:1
@ 5824 train 4.1621 , allloss: 4.1626, dt: 1287.11ms, fracRes: 0.3835, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6026, norm(y): 1.0165, norm:0.9580, tok/sec: 101834.62, flops:106.88, batch-reuse:1
@ 5825 train 4.1384 , allloss: 4.1418, dt: 1280.54ms, fracRes: 0.3838, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6059, norm(y): 1.0166, norm:1.1687, tok/sec: 102356.53, flops:107.43, batch-reuse:1
@ 5826 train 4.1744 , allloss: 4.1749, dt: 1303.80ms, fracRes: 0.3836, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6017, norm(y): 1.0166, norm:1.0735, tok/sec: 100530.42, flops:105.51, batch-reuse:1
@ 5827 train 4.1462 , allloss: 4.1471, dt: 1298.39ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6058, norm(y): 1.0165, norm:1.0510, tok/sec: 100949.68, flops:105.95, batch-reuse:1
@ 5828 train 4.1403 , allloss: 4.1410, dt: 1290.17ms, fracRes: 0.3856, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6075, norm(y): 1.0165, norm:1.0353, tok/sec: 101593.00, flops:106.62, batch-reuse:1
@ 5829 train 4.2179 , allloss: 4.2237, dt: 1303.51ms, fracRes: 0.3857, norm(attn): 0.2539, norm(output): 0.7969, norm(x): 0.6021, norm(y): 1.0164, norm:1.0813, tok/sec: 100552.74, flops:105.53, batch-reuse:1
@ 5830 train 4.1547 , allloss: 4.1556, dt: 1303.55ms, fracRes: 0.3862, norm(attn): 0.2520, norm(output): 0.7969, norm(x): 0.6038, norm(y): 1.0165, norm:1.0050, tok/sec: 100550.09, flops:105.53, batch-reuse:1
@ 5831 train 4.1838 , allloss: 4.1849, dt: 1315.15ms, fracRes: 0.3855, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6076, norm(y): 1.0166, norm:1.0271, tok/sec: 99662.94, flops:104.60, batch-reuse:1
@ 5832 train 4.1536 , allloss: 4.1565, dt: 1302.47ms, fracRes: 0.3849, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6073, norm(y): 1.0165, norm:0.8879, tok/sec: 100633.41, flops:105.62, batch-reuse:1
@ 5833 train 4.1958 , allloss: 4.1963, dt: 1300.11ms, fracRes: 0.3848, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6066, norm(y): 1.0164, norm:0.9703, tok/sec: 100815.95, flops:105.81, batch-reuse:1
@ 5834 train 4.1661 , allloss: 4.1671, dt: 1327.42ms, fracRes: 0.3821, norm(attn): 0.2559, norm(output): 0.8008, norm(x): 0.6065, norm(y): 1.0163, norm:0.8897, tok/sec: 98742.17, flops:103.63, batch-reuse:1
@ 5835 train 4.1323 , allloss: 4.1333, dt: 1350.32ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6036, norm(y): 1.0164, norm:0.9892, tok/sec: 97067.17, flops:101.87, batch-reuse:1
@ 5836 train 4.0824 , allloss: 4.0841, dt: 1341.34ms, fracRes: 0.3833, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6014, norm(y): 1.0165, norm:0.9478, tok/sec: 97717.48, flops:102.56, batch-reuse:1
@ 5837 train 4.2426 , allloss: 4.2455, dt: 1339.37ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6033, norm(y): 1.0164, norm:1.0126, tok/sec: 97860.59, flops:102.71, batch-reuse:1
@ 5838 train 4.0666 , allloss: 4.0679, dt: 1307.01ms, fracRes: 0.3849, norm(attn): 0.2598, norm(output): 0.8086, norm(x): 0.6102, norm(y): 1.0166, norm:1.1205, tok/sec: 100283.69, flops:105.25, batch-reuse:1
@ 5839 train 4.0857 , allloss: 4.0863, dt: 1316.53ms, fracRes: 0.3835, norm(attn): 0.2578, norm(output): 0.7969, norm(x): 0.6047, norm(y): 1.0165, norm:0.9541, tok/sec: 99558.69, flops:104.49, batch-reuse:1
@ 5840 train 4.1360 , allloss: 4.1368, dt: 1338.23ms, fracRes: 0.3840, norm(attn): 0.2559, norm(output): 0.8008, norm(x): 0.6048, norm(y): 1.0165, norm:0.9792, tok/sec: 97944.57, flops:102.79, batch-reuse:1
@ 5841 train 4.1948 , allloss: 4.1958, dt: 1341.61ms, fracRes: 0.3831, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6055, norm(y): 1.0164, norm:0.9235, tok/sec: 97697.84, flops:102.54, batch-reuse:1
@ 5842 train 4.2401 , allloss: 4.2409, dt: 1340.10ms, fracRes: 0.3842, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6070, norm(y): 1.0165, norm:0.9649, tok/sec: 97807.45, flops:102.65, batch-reuse:1
@ 5843 train 4.1011 , allloss: 4.1025, dt: 1322.51ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.8008, norm(x): 0.6068, norm(y): 1.0164, norm:1.0703, tok/sec: 99108.78, flops:104.02, batch-reuse:1
@ 5844 train 4.1061 , allloss: 4.1071, dt: 1324.83ms, fracRes: 0.3845, norm(attn): 0.2578, norm(output): 0.8047, norm(x): 0.6066, norm(y): 1.0165, norm:0.9790, tok/sec: 98934.62, flops:103.83, batch-reuse:1
@ 5845 train 4.1122 , allloss: 4.1127, dt: 1339.84ms, fracRes: 0.3836, norm(attn): 0.2559, norm(output): 0.8008, norm(x): 0.6059, norm(y): 1.0164, norm:1.1094, tok/sec: 97826.47, flops:102.67, batch-reuse:1
@ 5846 train 4.1581 , allloss: 4.1586, dt: 1331.54ms, fracRes: 0.3839, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6061, norm(y): 1.0164, norm:1.0711, tok/sec: 98436.18, flops:103.31, batch-reuse:1
@ 5847 train 4.0859 , allloss: 4.0865, dt: 1314.06ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6086, norm(y): 1.0164, norm:1.0453, tok/sec: 99746.17, flops:104.69, batch-reuse:1
@ 5848 train 4.1432 , allloss: 4.1441, dt: 1339.58ms, fracRes: 0.3835, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6095, norm(y): 1.0165, norm:1.0008, tok/sec: 97845.78, flops:102.69, batch-reuse:1
@ 5849 train 4.1233 , allloss: 4.1242, dt: 1334.08ms, fracRes: 0.3821, norm(attn): 0.2578, norm(output): 0.8047, norm(x): 0.6051, norm(y): 1.0164, norm:1.0149, tok/sec: 98248.81, flops:103.11, batch-reuse:1
@ 5850 train 4.1977 , allloss: 4.1987, dt: 1339.55ms, fracRes: 0.3825, norm(attn): 0.2539, norm(output): 0.8008, norm(x): 0.6039, norm(y): 1.0164, norm:0.9395, tok/sec: 97847.44, flops:102.69, batch-reuse:1
@ 5851 train 4.2071 , allloss: 4.2080, dt: 1343.08ms, fracRes: 0.3822, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6054, norm(y): 1.0164, norm:0.9418, tok/sec: 97590.80, flops:102.42, batch-reuse:1
@ 5852 train 4.2060 , allloss: 4.2067, dt: 1282.73ms, fracRes: 0.3832, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6071, norm(y): 1.0165, norm:1.0793, tok/sec: 102181.68, flops:107.24, batch-reuse:1
@ 5853 train 4.1314 , allloss: 4.1323, dt: 1281.92ms, fracRes: 0.3827, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6014, norm(y): 1.0165, norm:1.0032, tok/sec: 102246.50, flops:107.31, batch-reuse:1
@ 5854 train 4.1725 , allloss: 4.1752, dt: 1313.94ms, fracRes: 0.3838, norm(attn): 0.2520, norm(output): 0.8008, norm(x): 0.6027, norm(y): 1.0164, norm:0.9685, tok/sec: 99754.62, flops:104.69, batch-reuse:1
@ 5855 train 4.3119 , allloss: 4.3128, dt: 1317.71ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6064, norm(y): 1.0165, norm:1.0532, tok/sec: 99469.67, flops:104.40, batch-reuse:1
@ 5856 train 4.2486 , allloss: 4.2495, dt: 1291.66ms, fracRes: 0.3832, norm(attn): 0.2559, norm(output): 0.8047, norm(x): 0.6057, norm(y): 1.0164, norm:0.9558, tok/sec: 101475.97, flops:106.50, batch-reuse:1
@ 5857 train 4.2081 , allloss: 4.2088, dt: 1315.31ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6114, norm(y): 1.0164, norm:1.2544, tok/sec: 99651.32, flops:104.59, batch-reuse:1
@ 5858 train 4.1109 , allloss: 4.1114, dt: 1343.26ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6090, norm(y): 1.0164, norm:1.2918, tok/sec: 97577.86, flops:102.41, batch-reuse:1
@ 5859 train 4.1054 , allloss: 4.1064, dt: 1324.38ms, fracRes: 0.3841, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6099, norm(y): 1.0164, norm:1.0825, tok/sec: 98968.28, flops:103.87, batch-reuse:1
@ 5860 train 4.1253 , allloss: 4.1263, dt: 1324.09ms, fracRes: 0.3854, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6101, norm(y): 1.0165, norm:1.0880, tok/sec: 98990.05, flops:103.89, batch-reuse:1
@ 5861 train 4.1172 , allloss: 4.1177, dt: 1315.66ms, fracRes: 0.3856, norm(attn): 0.2520, norm(output): 0.8047, norm(x): 0.6028, norm(y): 1.0164, norm:0.9996, tok/sec: 99624.34, flops:104.56, batch-reuse:1
@ 5862 train 4.0485 , allloss: 4.0493, dt: 1290.15ms, fracRes: 0.3850, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6057, norm(y): 1.0164, norm:1.1388, tok/sec: 101594.77, flops:106.63, batch-reuse:1
@ 5863 train 4.0209 , allloss: 4.0215, dt: 1316.07ms, fracRes: 0.3824, norm(attn): 0.2578, norm(output): 0.8086, norm(x): 0.6059, norm(y): 1.0164, norm:0.9812, tok/sec: 99593.62, flops:104.53, batch-reuse:1
@ 5864 train 4.1926 , allloss: 4.1934, dt: 1337.04ms, fracRes: 0.3838, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6072, norm(y): 1.0164, norm:0.9565, tok/sec: 98031.42, flops:102.89, batch-reuse:1
@ 5865 train 4.1611 , allloss: 4.1616, dt: 1301.31ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6034, norm(y): 1.0165, norm:1.0197, tok/sec: 100723.19, flops:105.71, batch-reuse:1
@ 5866 train 4.0790 , allloss: 4.0794, dt: 1310.69ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6044, norm(y): 1.0165, norm:1.1805, tok/sec: 100002.28, flops:104.95, batch-reuse:1
@ 5867 train 4.0322 , allloss: 4.0328, dt: 1344.81ms, fracRes: 0.3833, norm(attn): 0.2539, norm(output): 0.8047, norm(x): 0.6044, norm(y): 1.0164, norm:0.9992, tok/sec: 97465.00, flops:102.29, batch-reuse:1
@ 5868 train 4.1318 , allloss: 4.1323, dt: 1332.48ms, fracRes: 0.3831, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6056, norm(y): 1.0164, norm:1.1242, tok/sec: 98366.84, flops:103.24, batch-reuse:1
@ 5869 train 4.1482 , allloss: 4.1486, dt: 1342.70ms, fracRes: 0.3840, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.5998, norm(y): 1.0166, norm:1.1642, tok/sec: 97618.13, flops:102.45, batch-reuse:1
@ 5870 train 4.1472 , allloss: 4.1479, dt: 1336.55ms, fracRes: 0.3820, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6064, norm(y): 1.0165, norm:1.1653, tok/sec: 98067.27, flops:102.92, batch-reuse:1
@ 5871 train 4.0847 , allloss: 4.0852, dt: 1347.37ms, fracRes: 0.3817, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6100, norm(y): 1.0165, norm:1.2079, tok/sec: 97279.89, flops:102.10, batch-reuse:1
@ 5872 train 4.0771 , allloss: 4.0780, dt: 1339.87ms, fracRes: 0.3814, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6098, norm(y): 1.0164, norm:1.0645, tok/sec: 97824.14, flops:102.67, batch-reuse:1
@ 5873 train 4.1080 , allloss: 4.1089, dt: 1299.54ms, fracRes: 0.3826, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6063, norm(y): 1.0164, norm:1.1113, tok/sec: 100860.47, flops:105.85, batch-reuse:1
@ 5874 train 3.9906 , allloss: 3.9915, dt: 1297.76ms, fracRes: 0.3837, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6050, norm(y): 1.0165, norm:1.0530, tok/sec: 100998.66, flops:106.00, batch-reuse:1
@ 5875 train 4.0900 , allloss: 4.0905, dt: 1319.27ms, fracRes: 0.3851, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6095, norm(y): 1.0165, norm:0.9186, tok/sec: 99352.03, flops:104.27, batch-reuse:1
@ 5876 train 4.1023 , allloss: 4.1029, dt: 1318.15ms, fracRes: 0.3858, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6094, norm(y): 1.0165, norm:1.1203, tok/sec: 99435.99, flops:104.36, batch-reuse:1
@ 5877 train 4.1502 , allloss: 4.1514, dt: 1312.17ms, fracRes: 0.3856, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6064, norm(y): 1.0165, norm:0.9165, tok/sec: 99889.20, flops:104.84, batch-reuse:1
@ 5878 train 4.2221 , allloss: 4.2273, dt: 1333.12ms, fracRes: 0.3865, norm(attn): 0.2500, norm(output): 0.8086, norm(x): 0.6063, norm(y): 1.0165, norm:1.1831, tok/sec: 98319.99, flops:103.19, batch-reuse:1
@ 5879 train 4.1920 , allloss: 4.1925, dt: 1303.67ms, fracRes: 0.3855, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6059, norm(y): 1.0165, norm:0.8938, tok/sec: 100540.53, flops:105.52, batch-reuse:1
@ 5880 train 4.0762 , allloss: 4.0776, dt: 1305.38ms, fracRes: 0.3850, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6081, norm(y): 1.0164, norm:1.1565, tok/sec: 100408.87, flops:105.38, batch-reuse:1
@ 5881 train 4.0113 , allloss: 4.0124, dt: 1306.38ms, fracRes: 0.3858, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6060, norm(y): 1.0165, norm:1.2021, tok/sec: 100332.56, flops:105.30, batch-reuse:1
@ 5882 train 4.0934 , allloss: 4.0939, dt: 1297.59ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6032, norm(y): 1.0165, norm:1.1607, tok/sec: 101011.97, flops:106.01, batch-reuse:1
@ 5883 train 4.2281 , allloss: 4.2285, dt: 1318.47ms, fracRes: 0.3844, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6034, norm(y): 1.0165, norm:1.0443, tok/sec: 99412.02, flops:104.33, batch-reuse:1
@ 5884 train 4.0550 , allloss: 4.0555, dt: 1302.15ms, fracRes: 0.3830, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6044, norm(y): 1.0164, norm:1.0121, tok/sec: 100658.25, flops:105.64, batch-reuse:1
@ 5885 train 4.0845 , allloss: 4.0851, dt: 1311.25ms, fracRes: 0.3826, norm(attn): 0.2578, norm(output): 0.8008, norm(x): 0.6013, norm(y): 1.0164, norm:0.9429, tok/sec: 99959.20, flops:104.91, batch-reuse:1
@ 5886 train 4.1493 , allloss: 4.1504, dt: 1303.90ms, fracRes: 0.3821, norm(attn): 0.2578, norm(output): 0.8086, norm(x): 0.6004, norm(y): 1.0164, norm:0.9759, tok/sec: 100523.16, flops:105.50, batch-reuse:1
@ 5887 train 4.1522 , allloss: 4.1528, dt: 1297.54ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.8047, norm(x): 0.6033, norm(y): 1.0164, norm:1.0587, tok/sec: 101015.77, flops:106.02, batch-reuse:1
@ 5888 train 4.0664 , allloss: 4.0673, dt: 1293.54ms, fracRes: 0.3850, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6026, norm(y): 1.0165, norm:0.9637, tok/sec: 101327.76, flops:106.35, batch-reuse:1
@ 5889 train 4.1680 , allloss: 4.1687, dt: 1294.41ms, fracRes: 0.3836, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6043, norm(y): 1.0164, norm:1.0769, tok/sec: 101260.11, flops:106.27, batch-reuse:1
@ 5890 train 4.1222 , allloss: 4.1227, dt: 1295.20ms, fracRes: 0.3841, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6049, norm(y): 1.0165, norm:1.0355, tok/sec: 101197.91, flops:106.21, batch-reuse:1
@ 5891 train 4.0809 , allloss: 4.0818, dt: 1319.13ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6042, norm(y): 1.0165, norm:1.1870, tok/sec: 99362.25, flops:104.28, batch-reuse:1
@ 5892 train 4.1531 , allloss: 4.1537, dt: 1317.01ms, fracRes: 0.3842, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6062, norm(y): 1.0166, norm:0.9034, tok/sec: 99522.41, flops:104.45, batch-reuse:1
@ 5893 train 4.1136 , allloss: 4.1144, dt: 1331.17ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.8086, norm(x): 0.6077, norm(y): 1.0165, norm:1.0227, tok/sec: 98464.09, flops:103.34, batch-reuse:1
@ 5894 train 4.0604 , allloss: 4.0613, dt: 1318.01ms, fracRes: 0.3846, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6055, norm(y): 1.0165, norm:0.9438, tok/sec: 99446.83, flops:104.37, batch-reuse:1
@ 5895 train 4.0584 , allloss: 4.0594, dt: 1343.24ms, fracRes: 0.3840, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6058, norm(y): 1.0164, norm:0.9546, tok/sec: 97578.87, flops:102.41, batch-reuse:1
@ 5896 train 4.1442 , allloss: 4.1451, dt: 1330.18ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.8086, norm(x): 0.6080, norm(y): 1.0164, norm:0.9417, tok/sec: 98536.94, flops:103.42, batch-reuse:1
@ 5897 train 4.1156 , allloss: 4.1164, dt: 1340.13ms, fracRes: 0.3844, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6105, norm(y): 1.0165, norm:0.9911, tok/sec: 97805.31, flops:102.65, batch-reuse:1
@ 5898 train 4.1013 , allloss: 4.1020, dt: 1305.62ms, fracRes: 0.3851, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6105, norm(y): 1.0166, norm:1.1356, tok/sec: 100390.77, flops:105.36, batch-reuse:1
@ 5899 train 3.9768 , allloss: 3.9776, dt: 1319.94ms, fracRes: 0.3851, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6093, norm(y): 1.0165, norm:1.2794, tok/sec: 99301.26, flops:104.22, batch-reuse:1
@ 5900 train 4.0792 , allloss: 4.0800, dt: 1319.19ms, fracRes: 0.3837, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6087, norm(y): 1.0164, norm:0.9007, tok/sec: 99357.60, flops:104.28, batch-reuse:1
@ 5901 train 4.0368 , allloss: 4.0380, dt: 1298.49ms, fracRes: 0.3841, norm(attn): 0.2520, norm(output): 0.8086, norm(x): 0.6117, norm(y): 1.0164, norm:0.9723, tok/sec: 100942.25, flops:105.94, batch-reuse:1
@ 5902 train 4.0289 , allloss: 4.0295, dt: 1278.63ms, fracRes: 0.3834, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6114, norm(y): 1.0165, norm:1.0425, tok/sec: 102509.87, flops:107.59, batch-reuse:1
@ 5903 train 4.1450 , allloss: 4.1455, dt: 1293.87ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6086, norm(y): 1.0165, norm:0.9909, tok/sec: 101301.94, flops:106.32, batch-reuse:1
@ 5904 train 4.1532 , allloss: 4.1537, dt: 1312.36ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6073, norm(y): 1.0166, norm:1.0323, tok/sec: 99875.01, flops:104.82, batch-reuse:1
@ 5905 train 3.9374 , allloss: 3.9380, dt: 1312.11ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6098, norm(y): 1.0165, norm:1.0773, tok/sec: 99894.07, flops:104.84, batch-reuse:1
@ 5906 train 3.9758 , allloss: 3.9765, dt: 1297.88ms, fracRes: 0.3844, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6076, norm(y): 1.0165, norm:1.1142, tok/sec: 100989.33, flops:105.99, batch-reuse:1
@ 5907 train 4.0374 , allloss: 4.0380, dt: 1315.29ms, fracRes: 0.3844, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6097, norm(y): 1.0165, norm:1.0148, tok/sec: 99652.59, flops:104.59, batch-reuse:1
@ 5908 train 4.0642 , allloss: 4.0647, dt: 1340.57ms, fracRes: 0.3838, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6067, norm(y): 1.0165, norm:0.9844, tok/sec: 97773.44, flops:102.62, batch-reuse:1
@ 5909 train 4.1182 , allloss: 4.1194, dt: 1338.02ms, fracRes: 0.3848, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6123, norm(y): 1.0165, norm:0.9675, tok/sec: 97959.53, flops:102.81, batch-reuse:1
@ 5910 train 4.0855 , allloss: 4.0863, dt: 1335.38ms, fracRes: 0.3835, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6123, norm(y): 1.0165, norm:1.0407, tok/sec: 98153.15, flops:103.01, batch-reuse:1
@ 5911 train 4.0850 , allloss: 4.0857, dt: 1351.94ms, fracRes: 0.3841, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6094, norm(y): 1.0166, norm:0.9438, tok/sec: 96950.80, flops:101.75, batch-reuse:1
@ 5912 train 4.0262 , allloss: 4.0275, dt: 1316.69ms, fracRes: 0.3851, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6103, norm(y): 1.0166, norm:1.0982, tok/sec: 99546.45, flops:104.48, batch-reuse:1
@ 5913 train 4.1777 , allloss: 4.1790, dt: 1301.98ms, fracRes: 0.3854, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6142, norm(y): 1.0167, norm:1.0769, tok/sec: 100671.08, flops:105.66, batch-reuse:1
@ 5914 train 3.9757 , allloss: 3.9765, dt: 1314.55ms, fracRes: 0.3823, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6093, norm(y): 1.0165, norm:1.0523, tok/sec: 99708.40, flops:104.65, batch-reuse:1
@ 5915 train 4.0180 , allloss: 4.0188, dt: 1296.95ms, fracRes: 0.3808, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6077, norm(y): 1.0165, norm:0.9372, tok/sec: 101061.86, flops:106.07, batch-reuse:1
@ 5916 train 3.8658 , allloss: 3.8675, dt: 1294.07ms, fracRes: 0.3822, norm(attn): 0.2637, norm(output): 0.8125, norm(x): 0.6070, norm(y): 1.0166, norm:1.0105, tok/sec: 101286.28, flops:106.30, batch-reuse:1
@ 5917 train 4.0034 , allloss: 4.0039, dt: 1296.86ms, fracRes: 0.3822, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6078, norm(y): 1.0166, norm:0.9772, tok/sec: 101068.64, flops:106.07, batch-reuse:1
@ 5918 train 4.0467 , allloss: 4.0476, dt: 1298.23ms, fracRes: 0.3830, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6091, norm(y): 1.0166, norm:1.0513, tok/sec: 100962.38, flops:105.96, batch-reuse:1
@ 5919 train 4.1065 , allloss: 4.1095, dt: 1307.99ms, fracRes: 0.3842, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6084, norm(y): 1.0165, norm:1.0463, tok/sec: 100208.44, flops:105.17, batch-reuse:1
@ 5920 train 3.9944 , allloss: 3.9954, dt: 1313.31ms, fracRes: 0.3853, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6103, norm(y): 1.0165, norm:1.0041, tok/sec: 99802.92, flops:104.75, batch-reuse:1
@ 5921 train 3.9974 , allloss: 3.9992, dt: 1278.58ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6084, norm(y): 1.0165, norm:0.9568, tok/sec: 102513.86, flops:107.59, batch-reuse:1
@ 5922 train 3.9910 , allloss: 3.9922, dt: 1307.39ms, fracRes: 0.3845, norm(attn): 0.2539, norm(output): 0.8086, norm(x): 0.6083, norm(y): 1.0166, norm:1.0384, tok/sec: 100254.40, flops:105.22, batch-reuse:1
@ 5923 train 4.0476 , allloss: 4.0521, dt: 1321.01ms, fracRes: 0.3844, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6068, norm(y): 1.0166, norm:1.0183, tok/sec: 99220.93, flops:104.13, batch-reuse:1
@ 5924 train 4.0164 , allloss: 4.0170, dt: 1303.61ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6072, norm(y): 1.0167, norm:0.9845, tok/sec: 100545.75, flops:105.52, batch-reuse:1
@ 5925 train 4.2159 , allloss: 4.2169, dt: 1323.52ms, fracRes: 0.3837, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6122, norm(y): 1.0167, norm:1.3071, tok/sec: 99033.24, flops:103.94, batch-reuse:1
@ 5926 train 3.9754 , allloss: 3.9765, dt: 1295.08ms, fracRes: 0.3825, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6110, norm(y): 1.0166, norm:1.2010, tok/sec: 101207.35, flops:106.22, batch-reuse:1
@ 5927 train 4.1584 , allloss: 4.1593, dt: 1317.78ms, fracRes: 0.3839, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6143, norm(y): 1.0166, norm:1.1579, tok/sec: 99464.02, flops:104.39, batch-reuse:1
@ 5928 train 3.9996 , allloss: 4.0000, dt: 1299.19ms, fracRes: 0.3839, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6117, norm(y): 1.0165, norm:1.0319, tok/sec: 100887.49, flops:105.88, batch-reuse:1
@ 5929 train 4.0311 , allloss: 4.0320, dt: 1295.53ms, fracRes: 0.3845, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6133, norm(y): 1.0164, norm:1.3344, tok/sec: 101172.67, flops:106.18, batch-reuse:1
@ 5930 train 4.0156 , allloss: 4.0209, dt: 1292.66ms, fracRes: 0.3839, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6132, norm(y): 1.0164, norm:1.0422, tok/sec: 101396.95, flops:106.42, batch-reuse:1
@ 5931 train 4.0106 , allloss: 4.0115, dt: 1312.98ms, fracRes: 0.3846, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6099, norm(y): 1.0165, norm:1.2550, tok/sec: 99828.15, flops:104.77, batch-reuse:1
@ 5932 train 3.9797 , allloss: 3.9802, dt: 1321.50ms, fracRes: 0.3839, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6106, norm(y): 1.0165, norm:1.2511, tok/sec: 99184.42, flops:104.10, batch-reuse:1
@ 5933 train 4.0258 , allloss: 4.0265, dt: 1284.18ms, fracRes: 0.3816, norm(attn): 0.2598, norm(output): 0.8086, norm(x): 0.6072, norm(y): 1.0164, norm:1.0864, tok/sec: 102066.37, flops:107.12, batch-reuse:1
@ 5934 train 4.1400 , allloss: 4.1414, dt: 1306.72ms, fracRes: 0.3825, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6095, norm(y): 1.0165, norm:1.0624, tok/sec: 100306.13, flops:105.27, batch-reuse:1
@ 5935 train 3.9777 , allloss: 3.9797, dt: 1320.46ms, fracRes: 0.3841, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6110, norm(y): 1.0165, norm:1.0796, tok/sec: 99262.43, flops:104.18, batch-reuse:1
@ 5936 train 3.8471 , allloss: 3.8488, dt: 1308.03ms, fracRes: 0.3838, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6101, norm(y): 1.0165, norm:0.9925, tok/sec: 100205.39, flops:105.17, batch-reuse:1
@ 5937 train 3.9901 , allloss: 3.9915, dt: 1316.43ms, fracRes: 0.3844, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6124, norm(y): 1.0166, norm:0.9519, tok/sec: 99566.51, flops:104.50, batch-reuse:1
@ 5938 train 4.0929 , allloss: 4.0937, dt: 1351.47ms, fracRes: 0.3852, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6115, norm(y): 1.0167, norm:0.9580, tok/sec: 96984.44, flops:101.79, batch-reuse:1
@ 5939 train 3.9126 , allloss: 3.9135, dt: 1338.53ms, fracRes: 0.3852, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6122, norm(y): 1.0166, norm:1.1009, tok/sec: 97922.06, flops:102.77, batch-reuse:1
@ 5940 train 3.9493 , allloss: 3.9502, dt: 1301.33ms, fracRes: 0.3842, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6089, norm(y): 1.0166, norm:1.0991, tok/sec: 100721.21, flops:105.71, batch-reuse:1
@ 5941 train 3.8756 , allloss: 3.8765, dt: 1328.30ms, fracRes: 0.3843, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6092, norm(y): 1.0166, norm:1.0267, tok/sec: 98676.45, flops:103.56, batch-reuse:1
@ 5942 train 4.0429 , allloss: 4.0438, dt: 1336.23ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6104, norm(y): 1.0165, norm:0.9338, tok/sec: 98090.65, flops:102.95, batch-reuse:1
@ 5943 train 4.0321 , allloss: 4.0328, dt: 1321.05ms, fracRes: 0.3838, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6139, norm(y): 1.0165, norm:1.0020, tok/sec: 99218.23, flops:104.13, batch-reuse:1
@ 5944 train 3.9959 , allloss: 3.9965, dt: 1286.60ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6112, norm(y): 1.0165, norm:0.9602, tok/sec: 101875.08, flops:106.92, batch-reuse:1
@ 5945 train 4.0123 , allloss: 4.0127, dt: 1314.72ms, fracRes: 0.3845, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6127, norm(y): 1.0166, norm:0.9856, tok/sec: 99696.05, flops:104.63, batch-reuse:1
@ 5946 train 3.9144 , allloss: 3.9150, dt: 1286.25ms, fracRes: 0.3838, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6120, norm(y): 1.0166, norm:1.0325, tok/sec: 101902.65, flops:106.95, batch-reuse:1
@ 5947 train 4.0144 , allloss: 4.0148, dt: 1304.10ms, fracRes: 0.3842, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6128, norm(y): 1.0166, norm:0.9229, tok/sec: 100507.83, flops:105.48, batch-reuse:1
@ 5948 train 3.8898 , allloss: 3.8904, dt: 1289.67ms, fracRes: 0.3815, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6087, norm(y): 1.0165, norm:0.9977, tok/sec: 101631.86, flops:106.66, batch-reuse:1
@ 5949 train 4.0121 , allloss: 4.0131, dt: 1281.19ms, fracRes: 0.3830, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6074, norm(y): 1.0165, norm:0.8718, tok/sec: 102304.97, flops:107.37, batch-reuse:1
@ 5950 train 4.0228 , allloss: 4.0235, dt: 1279.04ms, fracRes: 0.3843, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6071, norm(y): 1.0166, norm:1.0172, tok/sec: 102476.68, flops:107.55, batch-reuse:1
@ 5951 train 4.1494 , allloss: 4.1510, dt: 1309.56ms, fracRes: 0.3850, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6092, norm(y): 1.0165, norm:0.9396, tok/sec: 100088.39, flops:105.04, batch-reuse:1
@ 5952 train 4.1825 , allloss: 4.1835, dt: 1341.04ms, fracRes: 0.3845, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6156, norm(y): 1.0163, norm:0.9993, tok/sec: 97738.97, flops:102.58, batch-reuse:1
@ 5953 train 4.1990 , allloss: 4.1994, dt: 1325.17ms, fracRes: 0.3848, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6135, norm(y): 1.0164, norm:1.0698, tok/sec: 98909.39, flops:103.81, batch-reuse:1
@ 5954 train 4.1428 , allloss: 4.1437, dt: 1312.41ms, fracRes: 0.3861, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6100, norm(y): 1.0166, norm:1.1607, tok/sec: 99871.37, flops:104.82, batch-reuse:1
@ 5955 train 4.2142 , allloss: 4.2147, dt: 1312.92ms, fracRes: 0.3845, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6089, norm(y): 1.0165, norm:0.9892, tok/sec: 99832.08, flops:104.78, batch-reuse:1
@ 5956 train 4.2328 , allloss: 4.2338, dt: 1294.06ms, fracRes: 0.3834, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6113, norm(y): 1.0164, norm:1.1779, tok/sec: 101287.65, flops:106.30, batch-reuse:1
@ 5957 train 4.1189 , allloss: 4.1197, dt: 1295.25ms, fracRes: 0.3820, norm(attn): 0.2637, norm(output): 0.8125, norm(x): 0.6159, norm(y): 1.0164, norm:1.1038, tok/sec: 101194.09, flops:106.21, batch-reuse:1
@ 5958 train 4.2048 , allloss: 4.2053, dt: 1294.36ms, fracRes: 0.3810, norm(attn): 0.2637, norm(output): 0.8086, norm(x): 0.6126, norm(y): 1.0164, norm:1.0362, tok/sec: 101264.32, flops:106.28, batch-reuse:1
@ 5959 train 4.1529 , allloss: 4.1539, dt: 1298.58ms, fracRes: 0.3817, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6143, norm(y): 1.0165, norm:1.0880, tok/sec: 100934.59, flops:105.93, batch-reuse:1
@ 5960 train 4.1424 , allloss: 4.1431, dt: 1292.79ms, fracRes: 0.3827, norm(attn): 0.2598, norm(output): 0.8125, norm(x): 0.6158, norm(y): 1.0165, norm:1.0018, tok/sec: 101386.67, flops:106.41, batch-reuse:1
@ 5961 train 4.1518 , allloss: 4.1540, dt: 1303.37ms, fracRes: 0.3850, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6255, norm(y): 1.0165, norm:1.1328, tok/sec: 100563.83, flops:105.54, batch-reuse:1
@ 5962 train 4.1603 , allloss: 4.1611, dt: 1294.51ms, fracRes: 0.3835, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6165, norm(y): 1.0164, norm:1.1422, tok/sec: 101252.00, flops:106.27, batch-reuse:1
@ 5963 train 4.1811 , allloss: 4.1818, dt: 1295.49ms, fracRes: 0.3862, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6203, norm(y): 1.0166, norm:1.1147, tok/sec: 101175.88, flops:106.19, batch-reuse:1
@ 5964 train 4.2787 , allloss: 4.2802, dt: 1304.21ms, fracRes: 0.3857, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6159, norm(y): 1.0166, norm:1.0273, tok/sec: 100499.25, flops:105.48, batch-reuse:1
@ 5965 train 4.1889 , allloss: 4.1897, dt: 1314.26ms, fracRes: 0.3848, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6152, norm(y): 1.0165, norm:1.1845, tok/sec: 99730.79, flops:104.67, batch-reuse:1
@ 5966 train 4.2265 , allloss: 4.2270, dt: 1337.46ms, fracRes: 0.3853, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6164, norm(y): 1.0165, norm:0.9766, tok/sec: 98000.70, flops:102.85, batch-reuse:1
@ 5967 train 4.1439 , allloss: 4.1445, dt: 1293.89ms, fracRes: 0.3848, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6156, norm(y): 1.0165, norm:0.9817, tok/sec: 101300.73, flops:106.32, batch-reuse:1
@ 5968 train 4.1127 , allloss: 4.1133, dt: 1293.76ms, fracRes: 0.3852, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6184, norm(y): 1.0166, norm:1.0184, tok/sec: 101311.01, flops:106.33, batch-reuse:1
@ 5969 train 4.0995 , allloss: 4.0999, dt: 1297.36ms, fracRes: 0.3848, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6167, norm(y): 1.0165, norm:0.8996, tok/sec: 101030.16, flops:106.03, batch-reuse:1
@ 5970 train 4.1718 , allloss: 4.1725, dt: 1291.75ms, fracRes: 0.3840, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6199, norm(y): 1.0164, norm:1.0063, tok/sec: 101468.85, flops:106.49, batch-reuse:1
@ 5971 train 4.0542 , allloss: 4.0549, dt: 1320.46ms, fracRes: 0.3837, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6181, norm(y): 1.0165, norm:1.0380, tok/sec: 99262.21, flops:104.18, batch-reuse:1
@ 5972 train 4.1117 , allloss: 4.1123, dt: 1328.58ms, fracRes: 0.3842, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6161, norm(y): 1.0166, norm:0.9785, tok/sec: 98655.84, flops:103.54, batch-reuse:1
@ 5973 train 4.1554 , allloss: 4.1559, dt: 1297.17ms, fracRes: 0.3841, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6135, norm(y): 1.0165, norm:0.9884, tok/sec: 101044.33, flops:106.05, batch-reuse:1
@ 5974 train 4.1533 , allloss: 4.1539, dt: 1300.12ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6134, norm(y): 1.0165, norm:1.0712, tok/sec: 100815.49, flops:105.81, batch-reuse:1
@ 5975 train 4.2441 , allloss: 4.2446, dt: 1329.63ms, fracRes: 0.3856, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6111, norm(y): 1.0166, norm:0.9353, tok/sec: 98577.91, flops:103.46, batch-reuse:1
@ 5976 train 4.3762 , allloss: 4.3772, dt: 1326.39ms, fracRes: 0.3865, norm(attn): 0.2500, norm(output): 0.8164, norm(x): 0.6160, norm(y): 1.0167, norm:1.1704, tok/sec: 98818.92, flops:103.71, batch-reuse:1
@ 5977 train 4.2248 , allloss: 4.2257, dt: 1297.42ms, fracRes: 0.3839, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6128, norm(y): 1.0165, norm:1.3667, tok/sec: 101025.30, flops:106.03, batch-reuse:1
@ 5978 train 4.1191 , allloss: 4.1198, dt: 1287.32ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6117, norm(y): 1.0165, norm:1.0430, tok/sec: 101817.95, flops:106.86, batch-reuse:1
@ 5979 train 4.1840 , allloss: 4.1845, dt: 1291.78ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6123, norm(y): 1.0165, norm:1.1577, tok/sec: 101466.19, flops:106.49, batch-reuse:1
@ 5980 train 4.2644 , allloss: 4.2649, dt: 1303.95ms, fracRes: 0.3827, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6119, norm(y): 1.0163, norm:1.2370, tok/sec: 100519.00, flops:105.50, batch-reuse:1
@ 5981 train 4.1262 , allloss: 4.1267, dt: 1296.50ms, fracRes: 0.3844, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6121, norm(y): 1.0165, norm:1.1953, tok/sec: 101097.15, flops:106.10, batch-reuse:1
@ 5982 train 4.1498 , allloss: 4.1509, dt: 1309.76ms, fracRes: 0.3847, norm(attn): 0.2520, norm(output): 0.8125, norm(x): 0.6099, norm(y): 1.0167, norm:1.0195, tok/sec: 100073.00, flops:105.03, batch-reuse:1
@ 5983 train 4.1807 , allloss: 4.1821, dt: 1342.50ms, fracRes: 0.3854, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6109, norm(y): 1.0167, norm:1.0961, tok/sec: 97633.04, flops:102.47, batch-reuse:1
@ 5984 train 4.0748 , allloss: 4.0757, dt: 1312.03ms, fracRes: 0.3880, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6142, norm(y): 1.0168, norm:1.1433, tok/sec: 99899.80, flops:104.85, batch-reuse:1
@ 5985 train 4.1241 , allloss: 4.1244, dt: 1323.71ms, fracRes: 0.3869, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6141, norm(y): 1.0166, norm:1.0318, tok/sec: 99018.71, flops:103.92, batch-reuse:1
@ 5986 train 4.1963 , allloss: 4.1970, dt: 1343.27ms, fracRes: 0.3857, norm(attn): 0.2539, norm(output): 0.8203, norm(x): 0.6196, norm(y): 1.0165, norm:1.1460, tok/sec: 97576.48, flops:102.41, batch-reuse:1
@ 5987 train 4.1913 , allloss: 4.1919, dt: 1351.45ms, fracRes: 0.3845, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6170, norm(y): 1.0164, norm:0.9657, tok/sec: 96986.48, flops:101.79, batch-reuse:1
@ 5988 train 4.1848 , allloss: 4.1854, dt: 1335.04ms, fracRes: 0.3849, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6177, norm(y): 1.0165, norm:1.0411, tok/sec: 98178.18, flops:103.04, batch-reuse:1
@ 5989 train 4.0875 , allloss: 4.0881, dt: 1308.03ms, fracRes: 0.3859, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6187, norm(y): 1.0167, norm:1.0761, tok/sec: 100205.72, flops:105.17, batch-reuse:1
@ 5990 train 4.0888 , allloss: 4.0897, dt: 1318.84ms, fracRes: 0.3840, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6141, norm(y): 1.0166, norm:0.9594, tok/sec: 99384.22, flops:104.31, batch-reuse:1
@ 5991 train 4.1072 , allloss: 4.1076, dt: 1349.58ms, fracRes: 0.3830, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6128, norm(y): 1.0166, norm:0.9787, tok/sec: 97120.79, flops:101.93, batch-reuse:1
@ 5992 train 4.1070 , allloss: 4.1078, dt: 1348.22ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6138, norm(y): 1.0166, norm:1.0767, tok/sec: 97218.77, flops:102.03, batch-reuse:1
@ 5993 train 4.2454 , allloss: 4.2459, dt: 1311.91ms, fracRes: 0.3838, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6130, norm(y): 1.0166, norm:1.0338, tok/sec: 99909.57, flops:104.86, batch-reuse:1
@ 5994 train 4.0835 , allloss: 4.0841, dt: 1341.61ms, fracRes: 0.3837, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6133, norm(y): 1.0166, norm:1.1484, tok/sec: 97697.34, flops:102.54, batch-reuse:1
@ 5995 train 4.1665 , allloss: 4.1672, dt: 1339.81ms, fracRes: 0.3846, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6168, norm(y): 1.0165, norm:1.0261, tok/sec: 97828.93, flops:102.67, batch-reuse:1
@ 5996 train 4.2202 , allloss: 4.2208, dt: 1298.83ms, fracRes: 0.3853, norm(attn): 0.2539, norm(output): 0.8203, norm(x): 0.6164, norm(y): 1.0166, norm:1.0977, tok/sec: 100915.68, flops:105.91, batch-reuse:1
@ 5997 train 4.2056 , allloss: 4.2062, dt: 1332.52ms, fracRes: 0.3861, norm(attn): 0.2539, norm(output): 0.8203, norm(x): 0.6163, norm(y): 1.0166, norm:1.1139, tok/sec: 98364.27, flops:103.24, batch-reuse:1
@ 5998 train 4.1461 , allloss: 4.1467, dt: 1322.89ms, fracRes: 0.3848, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6108, norm(y): 1.0165, norm:1.0781, tok/sec: 99080.22, flops:103.99, batch-reuse:1
@ 5999 train 4.1488 , allloss: 4.1510, dt: 1287.03ms, fracRes: 0.3837, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6105, norm(y): 1.0165, norm:1.0490, tok/sec: 101840.88, flops:106.88, batch-reuse:1
@ 6000 val 4.1013
@ 6000 train 4.3417 , allloss: 4.3425, dt: 1898.72ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6136, norm(y): 1.0166, norm:1.0912, tok/sec: 69031.85, flops:72.45, batch-reuse:1
@ 6001 train 4.1636 , allloss: 4.1642, dt: 1290.79ms, fracRes: 0.3826, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6160, norm(y): 1.0165, norm:1.1508, tok/sec: 101544.01, flops:106.57, batch-reuse:1
@ 6002 train 4.2462 , allloss: 4.2467, dt: 1313.81ms, fracRes: 0.3853, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6230, norm(y): 1.0166, norm:1.0490, tok/sec: 99764.82, flops:104.71, batch-reuse:1
@ 6003 train 4.1293 , allloss: 4.1300, dt: 1294.51ms, fracRes: 0.3837, norm(attn): 0.2539, norm(output): 0.8242, norm(x): 0.6166, norm(y): 1.0166, norm:1.0397, tok/sec: 101251.83, flops:106.27, batch-reuse:1
@ 6004 train 4.1247 , allloss: 4.1256, dt: 1275.04ms, fracRes: 0.3847, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6167, norm(y): 1.0165, norm:0.9870, tok/sec: 102798.24, flops:107.89, batch-reuse:1
@ 6005 train 4.1900 , allloss: 4.1905, dt: 1312.71ms, fracRes: 0.3853, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6148, norm(y): 1.0165, norm:1.0225, tok/sec: 99848.55, flops:104.79, batch-reuse:1
@ 6006 train 4.1492 , allloss: 4.1498, dt: 1331.08ms, fracRes: 0.3851, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6121, norm(y): 1.0166, norm:1.0032, tok/sec: 98470.08, flops:103.35, batch-reuse:1
@ 6007 train 4.1455 , allloss: 4.1458, dt: 1307.87ms, fracRes: 0.3853, norm(attn): 0.2539, norm(output): 0.8125, norm(x): 0.6133, norm(y): 1.0166, norm:1.0168, tok/sec: 100217.86, flops:105.18, batch-reuse:1
@ 6008 train 4.2007 , allloss: 4.2012, dt: 1329.30ms, fracRes: 0.3838, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6107, norm(y): 1.0165, norm:0.9806, tok/sec: 98602.10, flops:103.48, batch-reuse:1
@ 6009 train 4.2289 , allloss: 4.2296, dt: 1310.23ms, fracRes: 0.3839, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6102, norm(y): 1.0165, norm:0.9566, tok/sec: 100037.62, flops:104.99, batch-reuse:1
@ 6010 train 4.1540 , allloss: 4.1544, dt: 1318.18ms, fracRes: 0.3842, norm(attn): 0.2559, norm(output): 0.8125, norm(x): 0.6102, norm(y): 1.0166, norm:0.9547, tok/sec: 99433.72, flops:104.36, batch-reuse:1
@ 6011 train 4.1263 , allloss: 4.1271, dt: 1325.54ms, fracRes: 0.3840, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6131, norm(y): 1.0166, norm:0.8871, tok/sec: 98882.14, flops:103.78, batch-reuse:1
@ 6012 train 4.1450 , allloss: 4.1456, dt: 1292.41ms, fracRes: 0.3823, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6184, norm(y): 1.0164, norm:0.9895, tok/sec: 101417.00, flops:106.44, batch-reuse:1
@ 6013 train 4.1602 , allloss: 4.1606, dt: 1302.35ms, fracRes: 0.3820, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6157, norm(y): 1.0164, norm:0.9245, tok/sec: 100642.72, flops:105.63, batch-reuse:1
@ 6014 train 4.1118 , allloss: 4.1125, dt: 1291.00ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6160, norm(y): 1.0165, norm:0.9156, tok/sec: 101527.21, flops:106.55, batch-reuse:1
@ 6015 train 4.1825 , allloss: 4.1834, dt: 1311.34ms, fracRes: 0.3853, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6175, norm(y): 1.0166, norm:0.9331, tok/sec: 99952.62, flops:104.90, batch-reuse:1
@ 6016 train 4.1324 , allloss: 4.1336, dt: 1292.42ms, fracRes: 0.3844, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6170, norm(y): 1.0166, norm:0.8623, tok/sec: 101416.12, flops:106.44, batch-reuse:1
@ 6017 train 4.2033 , allloss: 4.2037, dt: 1297.46ms, fracRes: 0.3816, norm(attn): 0.2637, norm(output): 0.8164, norm(x): 0.6129, norm(y): 1.0165, norm:1.0088, tok/sec: 101021.71, flops:106.02, batch-reuse:1
@ 6018 train 4.0125 , allloss: 4.0139, dt: 1332.23ms, fracRes: 0.3826, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6171, norm(y): 1.0166, norm:1.0108, tok/sec: 98385.69, flops:103.26, batch-reuse:1
@ 6019 train 4.0346 , allloss: 4.0361, dt: 1312.63ms, fracRes: 0.3828, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6175, norm(y): 1.0166, norm:1.0063, tok/sec: 99854.21, flops:104.80, batch-reuse:1
@ 6020 train 4.1815 , allloss: 4.1824, dt: 1309.76ms, fracRes: 0.3841, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6194, norm(y): 1.0166, norm:0.9938, tok/sec: 100073.47, flops:105.03, batch-reuse:1
@ 6021 train 4.1173 , allloss: 4.1177, dt: 1294.29ms, fracRes: 0.3842, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6173, norm(y): 1.0166, norm:0.9756, tok/sec: 101269.58, flops:106.28, batch-reuse:1
@ 6022 train 4.0497 , allloss: 4.0503, dt: 1295.53ms, fracRes: 0.3824, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6172, norm(y): 1.0165, norm:1.0563, tok/sec: 101172.11, flops:106.18, batch-reuse:1
@ 6023 train 4.1423 , allloss: 4.1430, dt: 1298.37ms, fracRes: 0.3832, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6191, norm(y): 1.0164, norm:0.9705, tok/sec: 100951.48, flops:105.95, batch-reuse:1
@ 6024 train 4.0994 , allloss: 4.1000, dt: 1312.68ms, fracRes: 0.3848, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6207, norm(y): 1.0165, norm:0.9760, tok/sec: 99850.94, flops:104.80, batch-reuse:1
@ 6025 train 4.1511 , allloss: 4.1515, dt: 1295.31ms, fracRes: 0.3842, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6181, norm(y): 1.0165, norm:0.9791, tok/sec: 101189.36, flops:106.20, batch-reuse:1
@ 6026 train 4.0889 , allloss: 4.0896, dt: 1294.40ms, fracRes: 0.3842, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6183, norm(y): 1.0164, norm:0.9674, tok/sec: 101260.48, flops:106.27, batch-reuse:1
@ 6027 train 4.1250 , allloss: 4.1258, dt: 1308.68ms, fracRes: 0.3845, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6179, norm(y): 1.0165, norm:0.9575, tok/sec: 100155.77, flops:105.12, batch-reuse:1
@ 6028 train 4.2036 , allloss: 4.2042, dt: 1316.96ms, fracRes: 0.3866, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6170, norm(y): 1.0166, norm:1.2570, tok/sec: 99526.14, flops:104.45, batch-reuse:1
@ 6029 train 4.0851 , allloss: 4.0869, dt: 1322.33ms, fracRes: 0.3857, norm(attn): 0.2539, norm(output): 0.8203, norm(x): 0.6163, norm(y): 1.0166, norm:1.2533, tok/sec: 99122.34, flops:104.03, batch-reuse:1
@ 6030 train 4.0895 , allloss: 4.0899, dt: 1318.59ms, fracRes: 0.3847, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6155, norm(y): 1.0166, norm:0.9427, tok/sec: 99403.48, flops:104.33, batch-reuse:1
@ 6031 train 4.2999 , allloss: 4.3004, dt: 1334.24ms, fracRes: 0.3848, norm(attn): 0.2539, norm(output): 0.8203, norm(x): 0.6147, norm(y): 1.0165, norm:1.1476, tok/sec: 98237.43, flops:103.10, batch-reuse:1
@ 6032 train 4.1283 , allloss: 4.1289, dt: 1341.35ms, fracRes: 0.3849, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6130, norm(y): 1.0166, norm:1.1235, tok/sec: 97716.28, flops:102.56, batch-reuse:1
@ 6033 train 4.1676 , allloss: 4.1684, dt: 1339.89ms, fracRes: 0.3846, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6146, norm(y): 1.0165, norm:1.0178, tok/sec: 97823.13, flops:102.67, batch-reuse:1
@ 6034 train 4.1944 , allloss: 4.1952, dt: 1336.52ms, fracRes: 0.3848, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6159, norm(y): 1.0165, norm:1.1550, tok/sec: 98069.74, flops:102.93, batch-reuse:1
@ 6035 train 4.1071 , allloss: 4.1075, dt: 1323.84ms, fracRes: 0.3854, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6166, norm(y): 1.0166, norm:1.0028, tok/sec: 99009.00, flops:103.91, batch-reuse:1
@ 6036 train 4.1865 , allloss: 4.1869, dt: 1308.99ms, fracRes: 0.3855, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6148, norm(y): 1.0165, norm:1.0942, tok/sec: 100131.91, flops:105.09, batch-reuse:1
@ 6037 train 4.0173 , allloss: 4.0179, dt: 1338.16ms, fracRes: 0.3859, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6211, norm(y): 1.0167, norm:1.2572, tok/sec: 97949.11, flops:102.80, batch-reuse:1
@ 6038 train 4.1009 , allloss: 4.1026, dt: 1307.53ms, fracRes: 0.3835, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6173, norm(y): 1.0165, norm:1.2238, tok/sec: 100243.70, flops:105.21, batch-reuse:1
@ 6039 train 4.1262 , allloss: 4.1270, dt: 1347.52ms, fracRes: 0.3846, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6184, norm(y): 1.0165, norm:1.1783, tok/sec: 97269.08, flops:102.09, batch-reuse:1
@ 6040 train 4.1833 , allloss: 4.1840, dt: 1335.76ms, fracRes: 0.3861, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6188, norm(y): 1.0165, norm:1.1508, tok/sec: 98125.14, flops:102.98, batch-reuse:1
@ 6041 train 4.1569 , allloss: 4.1576, dt: 1289.48ms, fracRes: 0.3870, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6185, norm(y): 1.0166, norm:1.1061, tok/sec: 101647.12, flops:106.68, batch-reuse:1
@ 6042 train 4.1246 , allloss: 4.1258, dt: 1288.07ms, fracRes: 0.3844, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6181, norm(y): 1.0166, norm:1.1155, tok/sec: 101758.28, flops:106.80, batch-reuse:1
@ 6043 train 3.9903 , allloss: 3.9910, dt: 1304.20ms, fracRes: 0.3845, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6185, norm(y): 1.0166, norm:1.2163, tok/sec: 100499.67, flops:105.48, batch-reuse:1
@ 6044 train 4.1521 , allloss: 4.1531, dt: 1296.43ms, fracRes: 0.3852, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6199, norm(y): 1.0165, norm:1.0529, tok/sec: 101102.29, flops:106.11, batch-reuse:1
@ 6045 train 4.1067 , allloss: 4.1077, dt: 1290.98ms, fracRes: 0.3847, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6152, norm(y): 1.0166, norm:1.1533, tok/sec: 101528.86, flops:106.56, batch-reuse:1
@ 6046 train 4.0980 , allloss: 4.0987, dt: 1303.04ms, fracRes: 0.3825, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6168, norm(y): 1.0165, norm:1.1339, tok/sec: 100589.70, flops:105.57, batch-reuse:1
@ 6047 train 4.1015 , allloss: 4.1018, dt: 1317.65ms, fracRes: 0.3806, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6113, norm(y): 1.0165, norm:1.0554, tok/sec: 99474.06, flops:104.40, batch-reuse:1
@ 6048 train 4.1743 , allloss: 4.1747, dt: 1322.69ms, fracRes: 0.3817, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6119, norm(y): 1.0166, norm:1.2215, tok/sec: 99095.03, flops:104.00, batch-reuse:1
@ 6049 train 4.1276 , allloss: 4.1281, dt: 1303.58ms, fracRes: 0.3823, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6141, norm(y): 1.0166, norm:1.1212, tok/sec: 100547.79, flops:105.53, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0469,     0.4629,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0089,     0.1128,     0.3984,     0.4805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0796,     0.0781,     0.7812,     0.0615,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0272,     0.2578,     0.1963,     0.2637,     0.1396,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.1553,     0.0342,     0.2578,     0.3496,     0.1543,     0.0459,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8984,     0.0018,     0.0068,     0.0001,     0.0005,     0.0023,     0.0171,     0.0723,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.2422,     0.1367,     0.3613,     0.0244,     0.1455,     0.0483,     0.0078,     0.0325,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0050,     0.1143,     0.1670,     0.2393,     0.0304,     0.1494,     0.1484,     0.0255,     0.1021,     0.0192,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0215,     0.0082,     0.7539,     0.0189,     0.0145,     0.0024,     0.0000,     0.0184,     0.0015,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2129,     0.0625,     0.0747,     0.0444,     0.0134,     0.0762,     0.0635,     0.3164,     0.0193,     0.0505,     0.0167,     0.0486,     0.0000,     0.0000,     0.0000],
        [    0.7930,     0.0036,     0.0042,     0.0006,     0.0024,     0.0032,     0.0118,     0.0903,     0.0020,     0.0045,     0.0007,     0.0014,     0.0820,     0.0000,     0.0000],
        [    0.0009,     0.1611,     0.0972,     0.2520,     0.0242,     0.0913,     0.0327,     0.0105,     0.0344,     0.0192,     0.0488,     0.1875,     0.0051,     0.0347,     0.0000],
        [    0.0004,     0.0889,     0.0977,     0.2090,     0.0508,     0.0830,     0.0410,     0.0041,     0.0391,     0.0144,     0.1348,     0.1206,     0.0038,     0.0405,     0.0728]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0004, -0.0040,  0.0424,  ..., -0.0083,  0.0050,  0.0252],
        [ 0.0251, -0.0067, -0.0003,  ...,  0.0051,  0.0333,  0.0175],
        [-0.0362,  0.0090, -0.0086,  ..., -0.0308, -0.0129,  0.0118],
        ...,
        [-0.0392,  0.0097, -0.0538,  ...,  0.0032, -0.0116, -0.0164],
        [ 0.0004, -0.0174,  0.0088,  ...,  0.0439, -0.0183,  0.0150],
        [-0.0308,  0.0090, -0.0263,  ..., -0.0034, -0.0067,  0.0127]], device='cuda:0', requires_grad=True)
K: tensor([-0.0508,  0.0430, -1.7109,  1.8125, -0.9141,  0.1367, -1.5234,  0.8281, -1.3984, -0.2500, -1.5391, -0.0898,  0.1621, -1.9766, -1.3203,  1.2734, -0.9336,  1.2422, -0.2422, -0.8281,  0.7617, -1.5469, -1.8203,  1.3984,  0.2266,  0.0752,  1.2109, -0.5703, -0.8828,  1.0625, -0.3027,  0.3145,
         1.0938, -0.4199,  0.5156, -0.3672, -0.2988,  0.9297, -1.5781, -0.4844, -0.8320, -1.0078,  0.9453, -0.5547, -1.7734,  0.7031,  0.5117,  1.1406,  0.1445,  0.6953, -0.7734,  0.6914,  0.2695,  2.8438,  0.5977, -0.2832,  1.4219, -0.0267,  1.1094, -0.5430, -0.4375,  1.6094, -1.3125,  1.1953],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0201,  0.0226, -0.0330,  ...,  0.0175,  0.0347, -0.0002],
        [ 0.0146, -0.0254, -0.0369,  ..., -0.0032,  0.0355,  0.0263],
        [ 0.0011,  0.0221,  0.0345,  ...,  0.0019,  0.0068, -0.0375],
        ...,
        [ 0.0144,  0.0082,  0.0333,  ...,  0.0012,  0.0179, -0.0341],
        [ 0.0092, -0.0225, -0.0360,  ...,  0.0287, -0.0245,  0.0047],
        [ 0.0188, -0.0094,  0.0273,  ..., -0.0105, -0.0460, -0.0333]], device='cuda:0', requires_grad=True)
Q: tensor([ 0.6562, -0.4609, -0.0059,  0.2656, -1.2031,  0.7578, -1.5625,  0.4453, -1.8984, -0.4824, -0.8164, -0.6719,  0.4199, -0.5625, -1.2734,  1.2031, -0.8672,  0.7734, -0.0598, -1.4922, -0.0293, -0.2070, -1.3047,  1.7734, -0.4609, -1.6797,  1.7656,  1.0391, -0.5938,  0.3516, -0.7148,  0.9922,
         0.4492, -0.7773,  0.6680,  0.5391, -0.5547,  0.6836, -1.4453, -0.1118, -0.6719, -1.0312,  0.3477, -0.4512, -0.9922, -0.5938,  0.7227,  0.4102, -0.6367,  0.0791, -0.8516,  0.8516,  0.6758,  1.7422,  0.6289, -0.9297,  0.5273, -0.8711,  1.0547,  1.0703, -0.2178, -0.2227,  0.1494,  1.1250],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  5.3438,  4.4375,  6.0312,  3.4062,  5.2500,  4.9375,  2.0625,  3.8906,  2.1875,  4.5000,  5.2188,  2.3594,  3.9219,  4.5938],
        [ 0.0000,  2.2969,  2.3438,  2.3906,  0.6484,  2.3281,  2.1562,  1.6719,  1.3281,  0.3125,  1.7109,  2.0469,  1.3906,  1.1406,  1.9766],
        [ 0.0000,  2.5469,  3.8125,  4.0000,  0.8945,  2.0156,  2.2188,  1.2500,  2.0625,  1.8359,  1.8438,  2.8750,  1.9609,  1.9844,  2.1094],
        [ 0.0000, 10.4375, 10.4375, 12.7500, 10.1875, 10.0000,  9.6250,  3.2031,  9.6250,  8.3750, 11.9375, 12.1250,  4.1875, 10.1875,  9.1875],
        [ 0.0000,  2.2500,  1.9766,  2.2656,  1.6328,  1.4531,  1.4453,  0.6055,  1.1953,  0.8203,  1.6484,  2.1250,  0.2178,  1.4453,  2.1250],
        [ 0.0000,  4.0625,  2.5625,  4.5938,  4.8750,  4.0625,  2.8594,  1.3516,  4.0312,  2.8281,  5.2812,  4.1562,  0.5195,  3.9688,  3.3750],
        [ 0.0000, -6.1875, -4.8750, -8.9375, -7.5625, -5.9688, -3.9688, -2.5156, -7.0938, -5.9375, -8.3750, -7.6250, -2.7656, -6.8125, -4.5625],
        [ 0.0000,  5.9688,  5.4062,  6.3750,  3.6875,  5.4688,  4.3750,  2.5469,  3.9688,  3.8750,  5.0312,  6.4688,  2.0938,  4.2500,  5.1875],
        [ 0.0000,  3.1250,  3.5000,  3.8594,  1.7969,  3.3906,  3.3906,  1.6250,  3.0156,  1.3438,  3.0938,  3.5312,  1.8516,  2.7500,  3.3594],
        [ 0.0000, 14.5625, 13.6250, 18.1250, 14.4375, 14.1875, 12.3750,  5.3125, 14.4375, 11.9375, 16.6250, 16.6250,  5.8750, 14.5000, 12.3125],
        [ 0.0000, -1.2188, -1.0391, -1.5625, -2.7656, -1.0234, -1.2109,  0.4004, -2.4062, -1.4375, -2.5469, -1.4766,  0.2383, -2.5781, -1.3984],
        [ 0.0000, -5.4062, -5.2500, -7.2188, -5.7812, -5.5000, -4.2188, -2.1719, -6.0000, -5.1875, -7.0000, -6.3438, -2.2656, -6.2500, -4.0312],
        [ 0.0000,  5.1875,  4.6875,  5.6562,  3.2969,  4.6250,  3.6094,  2.4688,  3.6562,  3.0625,  4.0000,  5.3438,  1.7344,  3.6562,  5.0312],
        [ 0.0000,  5.3750,  5.4688,  6.2500,  4.8125,  5.3125,  4.6250,  2.2969,  4.5625,  3.5625,  5.8125,  5.6875,  2.2344,  4.5938,  5.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3294],
        [0.3498],
        [0.2235],
        [0.2074],
        [0.3433],
        [0.1843],
        [0.1909],
        [0.1053],
        [0.0988],
        [0.0385],
        [0.1354],
        [0.1612],
        [0.0803],
        [0.0514]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0138,     0.0486,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2041,     0.0120,     0.5039,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0076,     0.0029,     0.0014,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0110,     0.0044,     0.0044,     0.0072,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9805,     0.0056,     0.0098,     0.0021,     0.0001,     0.0005,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0126,     0.1050,     0.0300,     0.0028,     0.0007,     0.0027,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0001,     0.0017,     0.0002,     0.0002,     0.0000,     0.0010,     0.0008,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0007,     0.0007,     0.0023,     0.0001,     0.0005,     0.0003,     0.0002,     0.0004,     0.0062,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0005,     0.0011,     0.0010,     0.0001,     0.0004,     0.0009,     0.0004,     0.0006,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9844,     0.0009,     0.0059,     0.0020,     0.0001,     0.0001,     0.0001,     0.0002,     0.0000,     0.0018,     0.0001,     0.0048,     0.0000,     0.0000,     0.0000],
        [    0.9492,     0.0011,     0.0109,     0.0097,     0.0001,     0.0002,     0.0001,     0.0001,     0.0000,     0.0026,     0.0000,     0.0256,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0004,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0006]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0014, -0.0231,  0.0252,  ..., -0.0108, -0.0187, -0.0132],
        [-0.0229,  0.0229,  0.0033,  ...,  0.0042,  0.0197,  0.0117],
        [ 0.0005,  0.0185,  0.0071,  ..., -0.0075, -0.0372,  0.0049],
        ...,
        [ 0.0258, -0.0451, -0.0192,  ...,  0.0081,  0.0113,  0.0085],
        [-0.0447, -0.0341,  0.0165,  ...,  0.0474, -0.0067,  0.0089],
        [ 0.0366,  0.0011,  0.0354,  ...,  0.0704,  0.0188,  0.0417]], device='cuda:0', requires_grad=True)
K: tensor([-1.6484,  2.8594,  3.9844, -2.6406, -2.7969, -2.6719, -0.0703,  1.0781,  5.0625,  3.0938, -2.0000, -2.0625,  3.4219,  0.1006,  0.6211,  4.3125, -1.5234, -4.8750,  3.0312,  3.1406,  1.7969,  0.4062,  1.8984, -2.3125,  3.9062, -3.6562, -3.5469,  4.0625,  0.1602, -0.0145,  2.1719,  0.7617,
         0.4531,  4.0938, -1.3672,  2.9688,  2.7500, -0.0349, -1.3594,  0.5547, -0.0918, -2.5625,  3.0156, -1.8594, -1.0625, -0.4980, -1.6094, -2.2188, -2.3281,  2.8750,  0.7148, -0.4727, -0.5156, -2.9688,  3.5781, -1.2422,  1.6016, -2.4062, -1.0469,  3.5781,  3.1094,  1.0000,  1.7109, -1.4375],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0082,  0.0472,  0.0104,  ...,  0.0124, -0.0010,  0.0409],
        [ 0.0142, -0.0308,  0.0223,  ...,  0.0463, -0.0183,  0.0069],
        [-0.0179,  0.0082, -0.0155,  ..., -0.0133, -0.0256,  0.0005],
        ...,
        [-0.0406,  0.0068,  0.0262,  ..., -0.0095,  0.0121, -0.0033],
        [ 0.0328, -0.0122, -0.0087,  ..., -0.0224, -0.0183,  0.0359],
        [-0.0011,  0.0046, -0.0407,  ...,  0.0075, -0.0096, -0.0077]], device='cuda:0', requires_grad=True)
Q: tensor([-0.5117,  0.6836,  0.0036, -0.6719,  0.2432,  0.5469, -0.9688,  0.6836,  0.1963, -1.4844,  0.7578,  2.2188, -0.6367, -0.2324, -1.6719, -1.0781,  0.2373,  0.7734, -1.5469,  0.3789,  0.8086,  0.0059,  0.4609,  0.3125,  0.4883,  1.0234,  0.0457, -1.3125, -1.0078, -1.1172,  1.4922,  0.4434,
        -1.4062, -0.1387, -1.1328, -0.4707,  0.9883, -0.1689,  1.2031, -0.6016,  1.8125,  1.5391, -0.1133,  1.8594, -1.1172, -0.4785,  0.1201,  1.3203,  2.2344, -1.7109,  0.3945,  0.1689, -0.2305,  2.2969, -0.2227,  0.6680,  0.8008,  0.1533,  0.6055, -0.0962, -0.8047, -0.6797, -1.6719,  0.3887],
       device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -5.2500,  -2.9219,  -4.4688,  -4.6875,  -8.8750,  -3.8906,  -5.2188,  -6.0938,  -5.5312,  -5.9375,  -4.3750,  -3.6719,  -5.6875,  -3.8438],
        [  0.0000,  -4.2188,  -2.9531,  -3.9062,  -4.7500,  -7.3438,  -7.1875,  -8.5000,  -7.9062,  -3.4531,  -6.2812,  -3.9219,  -7.6875,  -7.5938,  -4.4375],
        [  0.0000,  -2.8438,   0.9023,   0.3125,  -0.6914,  -3.1875,  -1.5547,  -2.8594,  -4.0000,  -2.5625,  -1.6250,  -0.4062,  -0.4492,  -2.7656,   0.7227],
        [  0.0000,  -4.8750,  -5.8438,  -6.5625,  -7.0000,  -5.5000,  -5.7812,  -6.1875,  -7.1875,  -5.8750,  -7.5000,  -4.5625,  -5.9688,  -6.3125,  -6.4062],
        [  0.0000,  -4.4688,  -5.4062,  -5.4062,  -4.9062,  -7.7500,  -4.5000,  -5.9062,  -6.1875,  -5.5938,  -6.2500,  -2.9375,  -4.6250,  -5.5000,  -4.2188],
        [  0.0000,  -5.1562,  -4.5938,  -6.1250,  -8.8125,  -7.5625,  -6.6562,  -6.8750,  -8.6250,  -4.5938,  -8.5000,  -5.3750,  -6.8125,  -7.9062,  -5.7812],
        [  0.0000,  -4.1875,  -2.0781,  -3.3281,  -5.7188,  -7.0938,  -5.7500,  -5.5938,  -6.2188,  -2.0000,  -5.7812,  -1.8047,  -4.9688,  -5.0625,  -3.0938],
        [  0.0000,  -9.0000,  -6.3750,  -8.6250,  -8.3125, -10.1875,  -6.9375,  -7.1250,  -9.4375,  -8.8750,  -9.1875,  -9.0000,  -6.6250,  -8.7500,  -7.3750],
        [  0.0000,  -7.2500,  -7.2500,  -6.0938,  -9.2500,  -7.5000,  -8.1250,  -8.3125,  -7.8750,  -5.0625,  -8.5000,  -5.9375,  -8.4375,  -7.2500,  -4.6250],
        [  0.0000,  -8.6250,  -7.6875,  -6.8438,  -6.9375,  -9.6250,  -7.9062,  -6.9688,  -7.9375,  -7.4688,  -8.4375,  -4.6250,  -6.6562,  -7.3438,  -8.4375],
        [  0.0000,  -7.0625,  -5.1250,  -6.1875,  -8.8750,  -9.7500,  -8.9375,  -8.7500, -10.1875,  -6.3125,  -9.5000,  -5.3438,  -9.5625,  -9.6250,  -9.5625],
        [  0.0000,  -6.7188,  -4.4688,  -4.5938,  -9.8125,  -8.5000,  -9.3750,  -9.3750, -10.2500,  -5.9062, -10.0625,  -3.6094,  -8.6875,  -9.5625,  -5.5312],
        [  0.0000, -10.6875,  -8.0625, -10.3125, -10.3125, -11.7500,  -9.0000,  -8.8125, -11.5625, -10.5000, -11.2500, -10.7500,  -8.7500, -10.9375,  -9.5625],
        [  0.0000, -10.6250,  -7.8438,  -8.8750, -11.2500, -12.2500, -11.3750, -11.3750, -12.2500, -10.0625, -11.8125, -10.9375, -11.9375, -12.2500,  -7.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7244],
        [0.6314],
        [0.5324],
        [0.6159],
        [0.6655],
        [0.6869],
        [0.4963],
        [0.5851],
        [0.3327],
        [0.6357],
        [0.4453],
        [0.5933],
        [0.5524],
        [0.6737]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3125,     0.1021,     0.0457,     0.0090,     0.0040,     0.5273,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3066,     0.0786,     0.0148,     0.0023,     0.0037,     0.5039,     0.0889,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8438,     0.0065,     0.0026,     0.0019,     0.0031,     0.1216,     0.0068,     0.0030,     0.0104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4961,     0.0305,     0.0042,     0.0012,     0.0065,     0.2832,     0.0588,     0.0204,     0.0859,     0.0091,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0131,     0.0048,     0.0037,     0.0064,     0.1826,     0.0128,     0.0061,     0.0152,     0.0162,     0.0017,     0.0192,     0.0079,     0.0173,     0.0000],
        [    0.5117,     0.0059,     0.0008,     0.0011,     0.0023,     0.3379,     0.0075,     0.0030,     0.0457,     0.0035,     0.0011,     0.0043,     0.0032,     0.0630,     0.0106]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[ 0.0030,  0.0164, -0.0023,  ..., -0.0158,  0.0160,  0.0234],
        [-0.0390,  0.0113, -0.0014,  ...,  0.0128,  0.0235,  0.0063],
        [-0.0039, -0.0106, -0.0077,  ...,  0.0064,  0.0142,  0.0027],
        ...,
        [-0.0020, -0.0034, -0.0209,  ...,  0.0300,  0.0084, -0.0142],
        [-0.0090,  0.0218, -0.0289,  ...,  0.0333,  0.0110, -0.0009],
        [ 0.0166, -0.0096,  0.0066,  ..., -0.0623, -0.0247, -0.0056]], device='cuda:0', requires_grad=True)
K: tensor([-1.3203, -0.9688, -0.6289, -1.7422, -1.1875,  1.8203,  0.9453,  0.1289, -1.7266,  0.9141, -0.2275, -1.2422, -2.0469,  0.0459,  0.6445,  2.0938, -1.4531, -1.1875, -0.0452, -2.4688, -1.8828, -1.2500, -1.7188,  1.9844, -0.7188,  1.1406,  1.4297,  2.0625,  1.6094, -1.3125, -0.8711,  1.5703,
        -1.1406,  0.9727, -0.3066,  2.3594, -1.2578,  0.7930, -1.1172,  1.7266,  0.5000, -0.9922,  2.2500,  1.6953, -0.5039, -2.5781, -0.5312,  2.0781, -1.5703, -1.3594, -0.7773, -2.4219, -2.7344, -3.0312,  2.6875, -1.1484, -1.8594,  1.0703,  1.7031, -1.5391, -2.3594,  2.1250,  3.0156, -2.3750],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[-0.0092, -0.0160,  0.0302,  ...,  0.0138, -0.0186,  0.0134],
        [-0.0096, -0.0136,  0.0314,  ..., -0.0069, -0.0252, -0.0267],
        [-0.0209, -0.0108, -0.0058,  ..., -0.0391, -0.0595, -0.0618],
        ...,
        [-0.0226, -0.0010,  0.0446,  ...,  0.0040, -0.0372, -0.0361],
        [ 0.0244,  0.0130, -0.0168,  ..., -0.0556, -0.0120,  0.0144],
        [ 0.0231, -0.0011,  0.0004,  ..., -0.0057,  0.0134,  0.0286]], device='cuda:0', requires_grad=True)
Q: tensor([     0.6562,     -1.6094,     -0.0752,      1.4219,      0.3711,      0.1865,     -0.1992,     -0.5742,      1.0391,      0.4746,     -1.3594,      0.7734,     -0.1797,     -0.6055,      0.5156,      1.3359,      0.7852,      1.9922,      0.0508,     -0.7578,      0.1289,      0.0383,
             0.0693,     -0.0041,      0.5508,     -1.4531,      0.4258,      0.2119,      0.0405,      0.2412,     -0.5430,      0.1270,      1.1094,     -0.9219,      1.6719,     -0.4023,      2.2188,     -0.1924,      1.4219,     -0.5898,     -0.9648,      0.3340,     -1.1328,     -0.7852,
            -1.0938,      0.0004,     -0.1182,      0.8633,      0.5312,      0.8555,      2.5469,     -1.5703,     -0.0226,     -0.3652,     -0.4336,      0.3105,      1.0391,     -1.8984,      0.6641,      2.4219,      1.3828,     -1.8672,      0.1387,      1.0000], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[  0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000,   0.0000],
        [  0.0000,  -7.5000,  -7.1875,  -8.6875,  -8.4375,  -4.3438,  -7.0625,  -8.0625,  -5.0312,  -8.9375,  -8.5000,  -8.1250,  -8.8125,  -4.9375,  -6.1562],
        [  0.0000,  -9.7500,  -8.6875,  -9.6250,  -9.5000,  -5.8438,  -8.6875,  -9.1250,  -6.3438,  -9.1250,  -9.5000,  -8.6875,  -8.5625,  -6.0938,  -8.6875],
        [  0.0000, -17.2500, -14.0000, -15.5000, -15.8125,  -9.8125, -14.3750, -16.2500, -11.6250, -16.5000, -16.3750, -14.5625, -15.3125, -11.3125, -14.1875],
        [  0.0000, -10.8125,  -9.1875, -11.4375, -11.0000,  -7.3750,  -9.2500, -10.2500,  -8.0000, -11.6250, -11.0000, -10.6250, -10.5625,  -7.8125,  -8.2500],
        [  0.0000,  -1.1172,  -1.9219,  -3.5469,  -4.3750,   0.5234,  -1.6641,  -0.5781,  -2.9219,  -1.0703,  -5.5938,  -1.4688,  -1.0859,  -2.7969,  -1.9609],
        [  0.0000,  -1.3672,  -3.0312,  -4.9062,  -4.4062,   0.4961,  -1.2422,  -1.1953,  -1.7500,  -2.6875,  -4.5000,  -3.4062,  -2.6094,  -1.5391,  -2.3125],
        [  0.0000, -12.4375,  -9.8750, -12.2500, -13.1250,  -7.1250, -11.0625, -12.3750,  -9.1250, -13.3750, -12.9375, -12.6875, -13.3750,  -8.8125, -11.4375],
        [  0.0000,  -4.8750,  -5.7812,  -6.1250,  -5.6250,  -1.9375,  -4.8125,  -5.6250,  -4.4062,  -4.7812,  -6.9375,  -4.4688,  -5.4062,  -4.2500,  -4.0000],
        [  0.0000, -19.1250, -14.5000, -17.6250, -18.3750, -12.4375, -16.5000, -17.6250, -13.4375, -20.0000, -18.0000, -18.3750, -18.1250, -13.0625, -15.7500],
        [  0.0000,  -2.7812,  -4.7500,  -6.0000,  -4.3438,  -0.5625,  -2.1250,  -3.1875,  -1.7500,  -4.0000,  -4.5938,  -4.5312,  -3.9531,  -1.5312,  -2.4688],
        [  0.0000, -14.5625, -11.6250, -13.0000, -12.8125,  -9.1875, -12.6250, -14.8125,  -9.9375, -14.6250, -13.1250, -13.1250, -13.8750,  -9.7500, -11.2500],
        [  0.0000, -17.6250, -13.6250, -15.9375, -16.8750, -11.4375, -16.1250, -17.7500, -11.9375, -18.8750, -16.5000, -16.8750, -18.3750, -11.6875, -14.6875],
        [  0.0000,  -3.9688,  -4.9688,  -5.2500,  -4.6875,  -1.3359,  -4.0000,  -4.7188,  -3.8125,  -3.7500,  -6.0312,  -3.5938,  -4.4688,  -3.6875,  -3.1875],
        [  0.0000,  -4.4688,  -6.4688,  -6.1250,  -5.4062,  -0.4141,  -4.2188,  -5.1562,  -2.4219,  -4.9688,  -6.1562,  -4.7812,  -5.0625,  -2.0938,  -3.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9993],
        [0.9997],
        [1.0000],
        [0.9993],
        [0.8652],
        [0.8573],
        [0.9974],
        [0.8223],
        [1.0000],
        [0.8610],
        [1.0000],
        [0.9993],
        [0.8037],
        [0.8555]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8906, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.7461, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0304, 0.5703, 0.0302, 0.3691, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.7812, 0.0396, 0.0256, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0815, 0.5039, 0.0645, 0.0376, 0.1953, 0.1162, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4902, 0.2051, 0.1050, 0.0356, 0.0391, 0.0864, 0.0400, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3105, 0.2930, 0.0796, 0.0339, 0.0415, 0.0713, 0.0271, 0.1445, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2471, 0.2852, 0.1152, 0.1216, 0.0325, 0.1021, 0.0165, 0.0737, 0.0060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1719, 0.4395, 0.0208, 0.0095, 0.0554, 0.0203, 0.0226, 0.0615, 0.1055, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2578, 0.2109, 0.0315, 0.0215, 0.0354, 0.0408, 0.0166, 0.0835, 0.0576, 0.2080, 0.0369, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.1289, 0.0099, 0.0322, 0.2354, 0.0309, 0.0170, 0.0815, 0.0742, 0.0442, 0.2109, 0.0645, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.1494, 0.0181, 0.0084, 0.0240, 0.0447, 0.0214, 0.1030, 0.0422, 0.1021, 0.0204, 0.0315, 0.3574, 0.0000, 0.0000],
        [0.1250, 0.1328, 0.0447, 0.0569, 0.0255, 0.0613, 0.0139, 0.0277, 0.0070, 0.2773, 0.0255, 0.0562, 0.1357, 0.0111, 0.0000],
        [0.1147, 0.1260, 0.0216, 0.0294, 0.0337, 0.0325, 0.0498, 0.0238, 0.0625, 0.1475, 0.0442, 0.0483, 0.0498, 0.0518, 0.1650]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[-0.0114,  0.0425,  0.0024,  ...,  0.0292,  0.0441, -0.0456],
        [ 0.0007, -0.0620,  0.0072,  ...,  0.0090, -0.0154,  0.0419],
        [ 0.0151,  0.0160, -0.0488,  ..., -0.0043,  0.0003,  0.0113],
        ...,
        [ 0.0026,  0.0025, -0.0253,  ..., -0.0188, -0.0472,  0.0132],
        [ 0.0003,  0.0249, -0.0303,  ..., -0.0375, -0.0078,  0.0048],
        [-0.0259, -0.0076, -0.0316,  ..., -0.0251, -0.0209, -0.0098]], device='cuda:0', requires_grad=True)
K: tensor([ 1.8438,  0.8633,  0.1748, -1.2656,  1.5234, -1.3516, -0.5820, -0.6836, -0.3496, -1.4453,  0.5781,  0.5195,  0.9023, -2.0938,  2.2969,  0.4766,  1.1641, -0.5898,  0.5234,  0.4219,  1.4922,  0.7422,  0.4902,  0.6875,  0.7969,  0.8789, -2.7500, -1.9297,  2.0000,  0.9414, -0.6133,  0.8008,
         0.4102, -0.3984, -0.9453, -1.8750,  0.9102,  1.1328,  0.3691, -1.9375,  0.1826,  0.1348,  0.1953,  0.5078,  2.0781,  0.3203, -0.1953,  1.5156,  0.8398, -0.0031,  1.3984, -1.9375,  0.6836,  0.2773,  0.1729,  0.5586, -0.2129,  0.6992, -2.3906, -0.8125, -0.9531,  0.5039, -0.6406,  0.3828],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0020, -0.0221, -0.0312,  ...,  0.0411, -0.0176, -0.0143],
        [-0.0305, -0.0388,  0.0180,  ..., -0.0465, -0.0140, -0.0599],
        [ 0.0209,  0.0025, -0.0200,  ...,  0.0592, -0.0058,  0.0207],
        ...,
        [-0.0150,  0.0271, -0.0021,  ...,  0.0092,  0.0074,  0.0028],
        [ 0.0207,  0.0092, -0.0002,  ..., -0.0107,  0.0135,  0.0183],
        [-0.0131,  0.0413, -0.0069,  ..., -0.0006, -0.0047,  0.0128]], device='cuda:0', requires_grad=True)
Q: tensor([    -0.7188,      1.1016,     -1.3984,      2.3281,     -0.4961,     -3.0625,     -1.6719,     -0.9570,      0.7148,      0.9336,      0.7109,      1.5156,     -1.2344,     -1.2031,      0.2275,     -1.1016,     -0.3027,      0.9766,      2.3906,      0.4609,     -1.9531,     -0.4785,
            -1.9141,      0.0262,      0.2598,      0.6914,     -1.3203,      0.0001,      0.3516,     -1.7891,      0.6562,     -1.2969,     -0.4453,      1.3594,      0.7930,     -0.6875,     -2.2812,     -1.1484,      1.3047,     -0.9688,     -1.0625,     -0.6602,     -0.5352,      0.4629,
            -0.3145,      1.2500,      0.0425,      1.4375,     -1.3672,      2.8750,      1.9922,      0.7930,      1.2656,      2.5156,     -0.4473,      0.1377,     -1.6172,     -0.6758,     -0.0229,     -0.7500,     -0.8008,     -1.5156,      0.2793,     -1.2344], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -2.0781,     -2.8750,     -3.7031,     -3.7656,     -3.3750,     -3.4219,     -4.1875,     -3.8594,     -2.9375,     -3.8906,     -2.7188,     -2.2969,     -3.8594,     -2.1250],
        [     0.0000,      1.8750,      0.1885,      2.5469,      3.8594,      0.5156,      1.0312,      0.6641,      1.6172,     -0.4102,      1.5156,     -0.4902,      1.9922,      1.2969,     -0.2852],
        [     0.0000,      2.9375,     -0.0075,      2.5000,      5.0625,      2.2656,      2.2188,      1.0391,      3.2969,      1.0703,      2.5156,     -0.5664,      3.0312,      3.3281,      1.7734],
        [     0.0000,      2.5312,     -0.4492,     -0.8828,      0.4004,      0.2559,     -0.3906,      0.7930,     -0.0850,      0.6992,     -0.7344,      0.6328,      2.4219,     -0.2324,      0.7188],
        [     0.0000,      1.8203,     -0.2363,     -0.7773,      0.8711,      0.3516,      0.3750,      0.8398,      0.7227,     -0.5078,     -0.0835,     -0.9961,      0.5156,      0.2852,      0.0391],
        [     0.0000,     -0.8711,     -1.5391,     -2.6250,     -2.5312,     -1.7344,     -2.5000,     -1.4219,     -2.0469,     -1.0078,     -3.8750,     -0.6094,     -0.8906,     -2.6406,      0.0210],
        [     0.0000,     -0.0620,     -1.3672,     -2.2188,     -2.0156,     -1.4766,     -2.4375,     -0.7695,     -2.1875,      0.1094,     -2.3125,     -0.7852,      0.8711,     -1.8125,      0.3242],
        [     0.0000,      0.1416,     -0.7617,     -0.7109,     -2.0312,     -0.8828,     -2.7031,     -1.2109,     -3.7344,      0.9805,     -2.5000,     -0.0050,      0.3086,     -3.4531,     -0.0898],
        [     0.0000,      0.9414,     -2.1094,     -2.8906,     -1.1328,     -2.1406,     -2.0312,     -1.0234,     -0.4863,     -0.6172,      1.7344,      0.7070,      1.2578,      0.3613,     -0.5664],
        [     0.0000,     -0.2031,     -2.1094,     -2.4844,     -1.9844,     -1.8438,     -2.7500,     -1.1250,     -1.5000,     -0.2168,     -1.9453,      1.8828,      0.8477,     -1.0234,      0.0317],
        [     0.0000,      0.6211,     -1.9531,     -0.7734,      1.2188,     -0.8125,     -1.4141,      0.1611,      0.0664,     -0.4531,      1.1094,     -0.0737,      3.6875,      0.9883,      0.1387],
        [     0.0000,      0.6562,     -1.4531,     -2.2188,     -1.1719,     -0.5508,     -1.2891,      0.2871,     -0.6016,      0.2754,     -1.3359,     -0.9023,      1.5312,      0.5234,      1.0938],
        [     0.0000,      0.0557,     -1.0312,     -0.7891,     -1.5938,     -0.7148,     -2.2031,     -1.5078,     -2.8906,      0.7930,     -1.5938,     -0.8008,      0.0776,     -2.4219,     -0.0303],
        [     0.0000,      0.0913,     -1.6719,     -1.3594,     -1.2266,     -1.2578,     -0.8359,     -1.5703,     -0.6055,      0.2500,     -0.9531,     -0.8633,     -0.8320,     -0.7930,      0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2105],
        [0.0193],
        [0.0110],
        [0.0143],
        [0.0200],
        [0.0594],
        [0.0310],
        [0.0252],
        [0.0202],
        [0.0300],
        [0.0110],
        [0.0094],
        [0.0142],
        [0.0228]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.9609,     0.0291,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.9336,     0.0183,     0.0425,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.8906,     0.0080,     0.0036,     0.0967,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.4629,     0.0232,     0.0111,     0.1543,     0.3457,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0026,     0.7617,     0.0258,     0.0027,     0.0508,     0.0112,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.6016,     0.0036,     0.0040,     0.0752,     0.0091,     0.2656,     0.0430,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.4023,     0.0153,     0.0045,     0.0432,     0.0559,     0.1641,     0.2188,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.4688,     0.0060,     0.0020,     0.0630,     0.0142,     0.1396,     0.0981,     0.1621,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.3691,     0.0065,     0.0006,     0.0108,     0.0069,     0.0195,     0.0645,     0.0586,     0.3770,     0.0840,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.2949,     0.0104,     0.0168,     0.0664,     0.0176,     0.1045,     0.0771,     0.1885,     0.0723,     0.1157,     0.0284,     0.0000,     0.0000,     0.0000],
        [    0.0048,     0.4043,     0.0062,     0.0040,     0.1055,     0.0085,     0.1465,     0.0415,     0.1338,     0.0258,     0.0302,     0.0239,     0.0649,     0.0000,     0.0000],
        [    0.0014,     0.0522,     0.0022,     0.0003,     0.0059,     0.0070,     0.0173,     0.0383,     0.0114,     0.7539,     0.0162,     0.0352,     0.0493,     0.0100,     0.0000],
        [    0.0004,     0.6367,     0.0084,     0.0021,     0.1157,     0.0070,     0.0938,     0.0391,     0.0197,     0.0096,     0.0048,     0.0049,     0.0056,     0.0029,     0.0498]], device='cuda:0', dtype=torch.bfloat16)
Kweights
tensor([[     0.0315,      0.0382,     -0.0144,  ...,     -0.0250,      0.0134,     -0.0292],
        [     0.0363,      0.0131,      0.0458,  ...,     -0.0748,     -0.0177,      0.0097],
        [    -0.0080,      0.0037,      0.0351,  ...,      0.0270,     -0.0015,     -0.0408],
        ...,
        [    -0.0143,      0.0085,     -0.0139,  ...,     -0.0195,     -0.0260,      0.0005],
        [     0.0319,     -0.0330,      0.0533,  ...,      0.0180,     -0.0500,      0.0030],
        [    -0.0417,      0.0357,     -0.0013,  ...,     -0.0119,      0.0000,      0.0017]], device='cuda:0', requires_grad=True)
K: tensor([-0.1348, -1.0625,  2.3125,  1.7266, -0.9375, -0.1885, -0.9375,  2.5938, -1.0547,  1.3516, -0.1758,  0.1924,  1.2812,  0.5117,  0.4922, -0.0737, -0.6758, -1.0625, -0.9570, -1.1484, -2.8594, -1.1641, -0.9727,  1.7344,  0.7383, -1.8359, -1.4844, -1.3281,  0.1357, -0.6484,  2.7344, -0.4453,
        -0.8555,  2.0781,  2.4375, -0.3828,  1.1406, -0.4023,  2.2344,  1.6094, -0.6836, -1.4453,  0.1816, -0.0391,  0.6953,  0.2051,  1.6094,  1.5547, -0.5469,  0.4766,  0.7773,  1.3984, -1.0781, -1.3672,  0.3477,  1.0781, -0.8516, -2.7812, -0.9961, -1.2422,  1.4844,  0.4258,  0.4277,  0.8594],
       device='cuda:0', dtype=torch.bfloat16)
Qweights
tensor([[ 0.0052,  0.0318, -0.0146,  ...,  0.0005, -0.0033,  0.0206],
        [-0.0079, -0.0251,  0.0233,  ..., -0.0126, -0.0051,  0.0094],
        [-0.0022,  0.0706, -0.0027,  ...,  0.0272,  0.0008,  0.0141],
        ...,
        [-0.0018,  0.0269, -0.0108,  ...,  0.0105,  0.0167,  0.0184],
        [ 0.0166,  0.0195, -0.0034,  ...,  0.0251, -0.0234,  0.0387],
        [ 0.0467,  0.0332, -0.0325,  ...,  0.0184,  0.0132, -0.0254]], device='cuda:0', requires_grad=True)
Q: tensor([     0.0278,      0.7109,      0.3184,      1.4922,      0.1504,     -0.2598,     -0.0225,      1.5078,     -0.2100,     -2.0781,     -1.8203,     -0.5742,      0.7383,     -0.3359,     -1.1719,     -0.9180,     -1.5859,      0.2500,     -1.0312,      0.2178,     -1.1016,     -2.1094,
             0.3164,     -0.1660,     -0.0796,     -0.2178,      0.5352,     -0.5273,      0.4551,     -1.1484,      3.6094,      1.5234,     -0.5430,      2.1094,     -1.6953,     -0.0030,      0.8789,      0.4336,      0.4746,      2.6875,     -2.0312,     -0.0742,     -0.0165,     -0.2002,
             1.6875,     -0.7969,      1.2656,      0.4395,      0.2266,     -0.0532,     -0.3750,      0.8672,      0.8359,     -1.4453,     -0.1123,      0.7031,     -0.9023,      0.3301,     -0.6094,     -0.0535,      0.1836,      1.0547,      0.5117,      1.3906], device='cuda:0',
       dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000,  0.0000],
        [ 0.0000,  6.0625,  0.2344,  0.4219,  4.1875,  2.0469,  3.0312,  1.1797,  2.9062,  0.5859,  0.2461, -0.6445, -0.4863,  1.0859,  1.7734],
        [ 0.0000,  4.5938,  1.1016,  3.0781,  4.2188,  3.3594,  4.4688,  2.0469,  3.7969,  1.0469,  1.7422,  0.6914,  0.9922,  2.1094,  1.8359],
        [ 0.0000,  5.4062,  1.4844,  2.3281,  4.3125,  2.6875,  4.3750,  1.8203,  4.0625,  1.2188,  1.3281,  0.2891,  1.0156,  2.4219,  2.6250],
        [ 0.0000,  6.7500,  2.0469,  1.2422,  4.5312,  4.8438,  5.2500,  3.7188,  3.5312,  2.6875,  0.6094,  1.2812,  1.9062,  0.7578,  3.1562],
        [ 0.0000,  5.1562,  2.1719,  1.4453,  4.0625,  4.8750,  6.0938,  3.8281,  3.6250,  1.8984,  1.3516,  0.8359,  1.5703,  1.6406,  4.1562],
        [ 0.0000,  5.6562,  2.2812,  0.0154,  2.9531,  1.4453,  4.0000,  3.4219,  3.0625,  1.7109, -0.2559,  0.2305, -0.0566,  0.3770,  3.2969],
        [ 0.0000,  8.0000,  2.8906,  3.0000,  5.9375,  3.8281,  7.1875,  5.3750,  7.1250,  3.7656,  4.1562,  2.6719,  3.5781,  5.3438,  4.8438],
        [ 0.0000,  4.5625,  1.2891,  0.0549,  2.3281,  2.5938,  3.6562,  3.9531,  3.0781,  5.3438,  2.6875,  2.9688,  3.5781,  1.8359,  5.5312],
        [ 0.0000,  6.7812,  2.4219,  1.3047,  4.7812,  3.2812,  5.5625,  5.2188,  5.7188,  4.4688,  6.1250,  3.1719,  5.0000,  4.1562,  4.5938],
        [ 0.0000,  5.5312,  1.5078, -0.9062,  2.0156,  1.5625,  2.5938,  3.7969,  3.7031,  5.5625,  4.0625,  4.7500,  3.6719,  2.0781,  4.9062],
        [ 0.0000,  3.7188,  0.3848,  0.8633,  2.2344,  0.9102,  2.6875,  2.3906,  3.2812,  2.3125,  2.7969,  1.3828,  2.9531,  2.4062,  2.1562],
        [ 0.0000,  4.4375,  0.2471, -0.1982,  3.0781,  0.5742,  3.4062,  2.1562,  3.3125,  1.6719,  1.8359,  1.6016,  2.5938,  4.0312,  3.4688],
        [ 0.0000,  3.6250,  0.4258, -1.6250,  1.4297,  1.6172,  2.5156,  3.3125,  2.0938,  6.2812,  2.4531,  3.2188,  3.5625,  1.9688,  6.1250],
        [ 0.0000,  7.3438,  3.0156,  1.6641,  5.6562,  2.8594,  5.4375,  4.5625,  3.8750,  3.1562,  2.4688,  2.4844,  2.6250,  1.9844,  4.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1340],
        [0.0385],
        [0.0156],
        [0.0245],
        [0.0101],
        [0.0104],
        [0.0077],
        [0.0079],
        [0.0050],
        [0.0107],
        [0.0136],
        [0.0296],
        [0.0060],
        [0.0072]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1553 a:0.1484,:0.2871 yellow:0.0708assium:0.1768 are:0.4473 red:0.0845ery:0.1328)
ery
------
		( a:0.1484,:0.2871 yellow:0.0708assium:0.1768 are:0.4473 red:0.0845ery:0.1328,:0.0596)
, and they are the most common.
- The best way to get
@ 6050 train 4.0717 , allloss: 4.0724, dt: 4018.30ms, fracRes: 0.3826, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6185, norm(y): 1.0166, norm:1.0784, tok/sec: 32618.74, flops:34.23, batch-reuse:1
@ 6051 train 4.0895 , allloss: 4.0902, dt: 1316.09ms, fracRes: 0.3833, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6175, norm(y): 1.0165, norm:1.0667, tok/sec: 99591.73, flops:104.52, batch-reuse:1
@ 6052 train 4.0634 , allloss: 4.0645, dt: 1310.14ms, fracRes: 0.3825, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6113, norm(y): 1.0164, norm:1.0713, tok/sec: 100044.59, flops:105.00, batch-reuse:1
@ 6053 train 4.0388 , allloss: 4.0397, dt: 1314.42ms, fracRes: 0.3833, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6143, norm(y): 1.0165, norm:1.0822, tok/sec: 99718.31, flops:104.66, batch-reuse:1
@ 6054 train 4.0923 , allloss: 4.0933, dt: 1328.89ms, fracRes: 0.3847, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6142, norm(y): 1.0166, norm:0.9394, tok/sec: 98632.95, flops:103.52, batch-reuse:1
@ 6055 train 4.1381 , allloss: 4.1420, dt: 1286.73ms, fracRes: 0.3854, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6149, norm(y): 1.0166, norm:0.9327, tok/sec: 101864.13, flops:106.91, batch-reuse:1
@ 6056 train 4.1611 , allloss: 4.1623, dt: 1307.92ms, fracRes: 0.3867, norm(attn): 0.2539, norm(output): 0.8164, norm(x): 0.6113, norm(y): 1.0166, norm:0.9964, tok/sec: 100214.23, flops:105.18, batch-reuse:1
@ 6057 train 4.1075 , allloss: 4.1091, dt: 1331.55ms, fracRes: 0.3857, norm(attn): 0.2520, norm(output): 0.8164, norm(x): 0.6122, norm(y): 1.0166, norm:0.9212, tok/sec: 98435.40, flops:103.31, batch-reuse:1
@ 6058 train 4.0909 , allloss: 4.0915, dt: 1315.68ms, fracRes: 0.3838, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6162, norm(y): 1.0165, norm:1.0077, tok/sec: 99623.37, flops:104.56, batch-reuse:1
@ 6059 train 4.0685 , allloss: 4.0706, dt: 1307.34ms, fracRes: 0.3829, norm(attn): 0.2578, norm(output): 0.8125, norm(x): 0.6131, norm(y): 1.0166, norm:0.9351, tok/sec: 100258.69, flops:105.22, batch-reuse:1
@ 6060 train 4.0360 , allloss: 4.0372, dt: 1316.00ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6134, norm(y): 1.0166, norm:0.9765, tok/sec: 99599.09, flops:104.53, batch-reuse:1
@ 6061 train 4.0457 , allloss: 4.0463, dt: 1267.12ms, fracRes: 0.3823, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6111, norm(y): 1.0165, norm:0.9678, tok/sec: 103441.19, flops:108.56, batch-reuse:1
@ 6062 train 4.0286 , allloss: 4.0297, dt: 1292.67ms, fracRes: 0.3817, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6135, norm(y): 1.0164, norm:0.9811, tok/sec: 101396.46, flops:106.42, batch-reuse:1
@ 6063 train 4.0948 , allloss: 4.0963, dt: 1336.63ms, fracRes: 0.3830, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6134, norm(y): 1.0165, norm:1.0197, tok/sec: 98061.29, flops:102.92, batch-reuse:1
@ 6064 train 4.1100 , allloss: 4.1106, dt: 1291.28ms, fracRes: 0.3834, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6146, norm(y): 1.0165, norm:0.8819, tok/sec: 101505.74, flops:106.53, batch-reuse:1
@ 6065 train 4.0847 , allloss: 4.0851, dt: 1308.99ms, fracRes: 0.3832, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6127, norm(y): 1.0165, norm:1.0001, tok/sec: 100132.42, flops:105.09, batch-reuse:1
@ 6066 train 4.0473 , allloss: 4.0484, dt: 1293.27ms, fracRes: 0.3836, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6134, norm(y): 1.0166, norm:0.9630, tok/sec: 101349.19, flops:106.37, batch-reuse:1
@ 6067 train 4.0526 , allloss: 4.0536, dt: 1287.85ms, fracRes: 0.3830, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6149, norm(y): 1.0166, norm:0.8940, tok/sec: 101776.04, flops:106.82, batch-reuse:1
@ 6068 train 4.0669 , allloss: 4.0673, dt: 1310.67ms, fracRes: 0.3834, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6151, norm(y): 1.0166, norm:0.9448, tok/sec: 100004.19, flops:104.96, batch-reuse:1
@ 6069 train 4.1234 , allloss: 4.1238, dt: 1305.83ms, fracRes: 0.3846, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6170, norm(y): 1.0166, norm:1.0229, tok/sec: 100374.82, flops:105.35, batch-reuse:1
@ 6070 train 4.0856 , allloss: 4.0866, dt: 1285.37ms, fracRes: 0.3839, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6193, norm(y): 1.0165, norm:1.0001, tok/sec: 101972.20, flops:107.02, batch-reuse:1
@ 6071 train 4.0364 , allloss: 4.0370, dt: 1296.11ms, fracRes: 0.3840, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6165, norm(y): 1.0165, norm:0.9481, tok/sec: 101127.58, flops:106.14, batch-reuse:1
@ 6072 train 4.0451 , allloss: 4.0458, dt: 1287.46ms, fracRes: 0.3845, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6108, norm(y): 1.0166, norm:0.9289, tok/sec: 101806.29, flops:106.85, batch-reuse:1
@ 6073 train 4.1214 , allloss: 4.1228, dt: 1310.20ms, fracRes: 0.3851, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6170, norm(y): 1.0166, norm:0.9245, tok/sec: 100039.60, flops:104.99, batch-reuse:1
@ 6074 train 4.0488 , allloss: 4.0497, dt: 1311.75ms, fracRes: 0.3843, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6193, norm(y): 1.0165, norm:0.9225, tok/sec: 99921.65, flops:104.87, batch-reuse:1
@ 6075 train 4.1195 , allloss: 4.1201, dt: 1291.55ms, fracRes: 0.3838, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6175, norm(y): 1.0165, norm:1.0058, tok/sec: 101484.12, flops:106.51, batch-reuse:1
@ 6076 train 4.0377 , allloss: 4.0382, dt: 1313.39ms, fracRes: 0.3828, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6144, norm(y): 1.0166, norm:0.8833, tok/sec: 99796.93, flops:104.74, batch-reuse:1
@ 6077 train 4.0184 , allloss: 4.0189, dt: 1301.51ms, fracRes: 0.3825, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6150, norm(y): 1.0166, norm:0.9153, tok/sec: 100707.48, flops:105.69, batch-reuse:1
@ 6078 train 4.0205 , allloss: 4.0212, dt: 1294.85ms, fracRes: 0.3813, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6171, norm(y): 1.0165, norm:0.9065, tok/sec: 101225.28, flops:106.24, batch-reuse:1
@ 6079 train 3.9868 , allloss: 3.9881, dt: 1314.46ms, fracRes: 0.3823, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6170, norm(y): 1.0165, norm:0.9355, tok/sec: 99715.65, flops:104.65, batch-reuse:1
@ 6080 train 4.0834 , allloss: 4.0842, dt: 1310.46ms, fracRes: 0.3833, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6143, norm(y): 1.0165, norm:1.0077, tok/sec: 100020.11, flops:104.97, batch-reuse:1
@ 6081 train 4.0636 , allloss: 4.0644, dt: 1305.80ms, fracRes: 0.3836, norm(attn): 0.2559, norm(output): 0.8164, norm(x): 0.6147, norm(y): 1.0166, norm:1.0229, tok/sec: 100376.86, flops:105.35, batch-reuse:1
@ 6082 train 4.1430 , allloss: 4.1445, dt: 1309.30ms, fracRes: 0.3842, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6192, norm(y): 1.0166, norm:0.9468, tok/sec: 100108.11, flops:105.07, batch-reuse:1
@ 6083 train 3.9998 , allloss: 4.0043, dt: 1294.36ms, fracRes: 0.3833, norm(attn): 0.2637, norm(output): 0.8203, norm(x): 0.6175, norm(y): 1.0166, norm:1.1164, tok/sec: 101263.82, flops:106.28, batch-reuse:1
@ 6084 train 4.0263 , allloss: 4.0269, dt: 1315.87ms, fracRes: 0.3829, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6150, norm(y): 1.0166, norm:0.9793, tok/sec: 99608.93, flops:104.54, batch-reuse:1
@ 6085 train 4.0774 , allloss: 4.0781, dt: 1333.36ms, fracRes: 0.3833, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6150, norm(y): 1.0166, norm:1.0236, tok/sec: 98302.11, flops:103.17, batch-reuse:1
@ 6086 train 4.0315 , allloss: 4.0348, dt: 1305.41ms, fracRes: 0.3833, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6190, norm(y): 1.0166, norm:1.0181, tok/sec: 100406.90, flops:105.38, batch-reuse:1
@ 6087 train 4.1026 , allloss: 4.1036, dt: 1357.59ms, fracRes: 0.3835, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6127, norm(y): 1.0167, norm:1.1004, tok/sec: 96547.56, flops:101.33, batch-reuse:1
@ 6088 train 4.1065 , allloss: 4.1072, dt: 1328.61ms, fracRes: 0.3827, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6127, norm(y): 1.0166, norm:0.9726, tok/sec: 98653.82, flops:103.54, batch-reuse:1
@ 6089 train 4.1186 , allloss: 4.1201, dt: 1293.11ms, fracRes: 0.3825, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6154, norm(y): 1.0165, norm:0.9756, tok/sec: 101361.92, flops:106.38, batch-reuse:1
@ 6090 train 4.1278 , allloss: 4.1285, dt: 1299.38ms, fracRes: 0.3825, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6188, norm(y): 1.0164, norm:1.0046, tok/sec: 100872.40, flops:105.87, batch-reuse:1
@ 6091 train 4.1151 , allloss: 4.1158, dt: 1341.39ms, fracRes: 0.3831, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6169, norm(y): 1.0164, norm:1.0072, tok/sec: 97713.24, flops:102.55, batch-reuse:1
@ 6092 train 4.0325 , allloss: 4.0332, dt: 1315.75ms, fracRes: 0.3839, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6175, norm(y): 1.0165, norm:0.9556, tok/sec: 99617.43, flops:104.55, batch-reuse:1
@ 6093 train 4.0258 , allloss: 4.0268, dt: 1297.15ms, fracRes: 0.3839, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6192, norm(y): 1.0165, norm:0.9844, tok/sec: 101046.11, flops:106.05, batch-reuse:1
@ 6094 train 3.9746 , allloss: 3.9751, dt: 1290.95ms, fracRes: 0.3832, norm(attn): 0.2617, norm(output): 0.8242, norm(x): 0.6217, norm(y): 1.0166, norm:1.0314, tok/sec: 101531.67, flops:106.56, batch-reuse:1
@ 6095 train 4.0153 , allloss: 4.0191, dt: 1311.86ms, fracRes: 0.3836, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6206, norm(y): 1.0166, norm:0.9266, tok/sec: 99912.91, flops:104.86, batch-reuse:1
@ 6096 train 4.0269 , allloss: 4.0277, dt: 1338.80ms, fracRes: 0.3841, norm(attn): 0.2598, norm(output): 0.8164, norm(x): 0.6189, norm(y): 1.0166, norm:1.0755, tok/sec: 97902.32, flops:102.75, batch-reuse:1
@ 6097 train 4.0130 , allloss: 4.0144, dt: 1320.36ms, fracRes: 0.3843, norm(attn): 0.2578, norm(output): 0.8164, norm(x): 0.6153, norm(y): 1.0166, norm:1.0121, tok/sec: 99269.65, flops:104.19, batch-reuse:1
@ 6098 train 4.0001 , allloss: 4.0006, dt: 1300.02ms, fracRes: 0.3832, norm(attn): 0.2617, norm(output): 0.8164, norm(x): 0.6161, norm(y): 1.0165, norm:1.0483, tok/sec: 100823.38, flops:105.82, batch-reuse:1
@ 6099 train 3.9057 , allloss: 3.9062, dt: 1298.74ms, fracRes: 0.3836, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6190, norm(y): 1.0166, norm:1.0062, tok/sec: 100922.05, flops:105.92, batch-reuse:1
@ 6100 train 4.1180 , allloss: 4.1190, dt: 1320.37ms, fracRes: 0.3854, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6222, norm(y): 1.0167, norm:1.1080, tok/sec: 99268.81, flops:104.18, batch-reuse:1
@ 6101 train 3.9215 , allloss: 3.9225, dt: 1302.38ms, fracRes: 0.3831, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6161, norm(y): 1.0167, norm:1.1259, tok/sec: 100640.56, flops:105.62, batch-reuse:1
@ 6102 train 4.3508 , allloss: 4.3514, dt: 1285.46ms, fracRes: 0.3855, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6239, norm(y): 1.0167, norm:1.5790, tok/sec: 101964.77, flops:107.01, batch-reuse:1
@ 6103 train 3.9384 , allloss: 3.9395, dt: 1587.66ms, fracRes: 0.3838, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6159, norm(y): 1.0166, norm:1.4752, tok/sec: 82556.70, flops:86.64, batch-reuse:1
@ 6104 train 3.9390 , allloss: 3.9397, dt: 1303.05ms, fracRes: 0.3850, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6183, norm(y): 1.0166, norm:1.0081, tok/sec: 100588.32, flops:105.57, batch-reuse:1
@ 6105 train 3.9641 , allloss: 3.9655, dt: 1299.63ms, fracRes: 0.3853, norm(attn): 0.2617, norm(output): 0.8242, norm(x): 0.6230, norm(y): 1.0166, norm:1.1238, tok/sec: 100853.21, flops:105.85, batch-reuse:1
@ 6106 train 3.9855 , allloss: 3.9862, dt: 1310.31ms, fracRes: 0.3839, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6214, norm(y): 1.0166, norm:1.0834, tok/sec: 100031.15, flops:104.98, batch-reuse:1
@ 6107 train 4.1414 , allloss: 4.1418, dt: 1336.33ms, fracRes: 0.3831, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6210, norm(y): 1.0165, norm:1.0055, tok/sec: 98083.54, flops:102.94, batch-reuse:1
@ 6108 train 4.0586 , allloss: 4.0592, dt: 1314.91ms, fracRes: 0.3834, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6224, norm(y): 1.0165, norm:1.1969, tok/sec: 99681.26, flops:104.62, batch-reuse:1
@ 6109 train 4.0023 , allloss: 4.0033, dt: 1319.72ms, fracRes: 0.3841, norm(attn): 0.2637, norm(output): 0.8242, norm(x): 0.6216, norm(y): 1.0166, norm:1.0333, tok/sec: 99318.25, flops:104.24, batch-reuse:1
@ 6110 train 4.0154 , allloss: 4.0162, dt: 1312.74ms, fracRes: 0.3835, norm(attn): 0.2617, norm(output): 0.8125, norm(x): 0.6151, norm(y): 1.0166, norm:0.9847, tok/sec: 99846.35, flops:104.79, batch-reuse:1
@ 6111 train 3.9527 , allloss: 3.9534, dt: 1322.41ms, fracRes: 0.3832, norm(attn): 0.2637, norm(output): 0.8125, norm(x): 0.6168, norm(y): 1.0167, norm:1.0191, tok/sec: 99116.12, flops:104.02, batch-reuse:1
@ 6112 train 3.9824 , allloss: 3.9832, dt: 1310.82ms, fracRes: 0.3827, norm(attn): 0.2637, norm(output): 0.8164, norm(x): 0.6171, norm(y): 1.0166, norm:0.9871, tok/sec: 99992.13, flops:104.94, batch-reuse:1
@ 6113 train 3.8957 , allloss: 3.8963, dt: 1327.82ms, fracRes: 0.3810, norm(attn): 0.2637, norm(output): 0.8242, norm(x): 0.6191, norm(y): 1.0166, norm:1.1024, tok/sec: 98712.08, flops:103.60, batch-reuse:1
@ 6114 train 4.1220 , allloss: 4.1292, dt: 1281.35ms, fracRes: 0.3814, norm(attn): 0.2637, norm(output): 0.8281, norm(x): 0.6270, norm(y): 1.0165, norm:1.5348, tok/sec: 102292.41, flops:107.36, batch-reuse:1
@ 6115 train 4.0312 , allloss: 4.0321, dt: 1310.65ms, fracRes: 0.3825, norm(attn): 0.2578, norm(output): 0.8320, norm(x): 0.6228, norm(y): 1.0166, norm:1.0997, tok/sec: 100005.64, flops:104.96, batch-reuse:1
@ 6116 train 3.9327 , allloss: 3.9332, dt: 1325.36ms, fracRes: 0.3831, norm(attn): 0.2617, norm(output): 0.8203, norm(x): 0.6201, norm(y): 1.0166, norm:1.0326, tok/sec: 98895.67, flops:103.79, batch-reuse:1
@ 6117 train 3.9917 , allloss: 3.9924, dt: 1345.23ms, fracRes: 0.3856, norm(attn): 0.2598, norm(output): 0.8359, norm(x): 0.6230, norm(y): 1.0167, norm:0.9560, tok/sec: 97434.51, flops:102.26, batch-reuse:1
@ 6118 train 4.0211 , allloss: 4.0225, dt: 1330.18ms, fracRes: 0.3856, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6228, norm(y): 1.0166, norm:1.1352, tok/sec: 98537.01, flops:103.42, batch-reuse:1
@ 6119 train 4.0028 , allloss: 4.0041, dt: 1320.23ms, fracRes: 0.3859, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6205, norm(y): 1.0167, norm:0.9739, tok/sec: 99279.46, flops:104.20, batch-reuse:1
@ 6120 train 4.0567 , allloss: 4.0612, dt: 1318.13ms, fracRes: 0.3857, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6187, norm(y): 1.0166, norm:0.9755, tok/sec: 99438.13, flops:104.36, batch-reuse:1
@ 6121 train 3.9363 , allloss: 3.9377, dt: 1290.20ms, fracRes: 0.3858, norm(attn): 0.2578, norm(output): 0.8203, norm(x): 0.6171, norm(y): 1.0167, norm:0.9898, tok/sec: 101590.49, flops:106.62, batch-reuse:1
@ 6122 train 3.8979 , allloss: 3.9008, dt: 1307.99ms, fracRes: 0.3848, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6173, norm(y): 1.0166, norm:0.9375, tok/sec: 100208.89, flops:105.17, batch-reuse:1
@ 6123 train 3.9303 , allloss: 3.9330, dt: 1318.66ms, fracRes: 0.3837, norm(attn): 0.2598, norm(output): 0.8203, norm(x): 0.6199, norm(y): 1.0166, norm:0.9494, tok/sec: 99397.53, flops:104.32, batch-reuse:1
@ 6124 train 4.1003 , allloss: 4.1022, dt: 1335.48ms, fracRes: 0.3846, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6226, norm(y): 1.0166, norm:0.9509, tok/sec: 98145.65, flops:103.01, batch-reuse:1
@ 6125 train 3.9662 , allloss: 3.9670, dt: 1307.97ms, fracRes: 0.3844, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6204, norm(y): 1.0166, norm:1.0644, tok/sec: 100210.37, flops:105.17, batch-reuse:1
@ 6126 train 3.9844 , allloss: 3.9888, dt: 1307.23ms, fracRes: 0.3854, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6177, norm(y): 1.0167, norm:0.9260, tok/sec: 100267.20, flops:105.23, batch-reuse:1
@ 6127 train 3.9940 , allloss: 3.9987, dt: 1326.49ms, fracRes: 0.3849, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6188, norm(y): 1.0167, norm:1.0801, tok/sec: 98810.80, flops:103.70, batch-reuse:1
@ 6128 train 3.9935 , allloss: 3.9972, dt: 1317.43ms, fracRes: 0.3850, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6218, norm(y): 1.0167, norm:0.9561, tok/sec: 99490.60, flops:104.42, batch-reuse:1
@ 6129 train 3.9365 , allloss: 3.9384, dt: 1304.56ms, fracRes: 0.3846, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6216, norm(y): 1.0168, norm:1.0168, tok/sec: 100472.56, flops:105.45, batch-reuse:1
@ 6130 train 4.0132 , allloss: 4.0139, dt: 1303.82ms, fracRes: 0.3841, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6214, norm(y): 1.0166, norm:0.9972, tok/sec: 100529.57, flops:105.51, batch-reuse:1
@ 6131 train 3.8927 , allloss: 3.9091, dt: 1308.68ms, fracRes: 0.3842, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6224, norm(y): 1.0167, norm:1.0596, tok/sec: 100155.64, flops:105.12, batch-reuse:1
@ 6132 train 3.9130 , allloss: 3.9145, dt: 1296.67ms, fracRes: 0.3845, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6233, norm(y): 1.0166, norm:0.8810, tok/sec: 101083.73, flops:106.09, batch-reuse:1
@ 6133 train 3.9512 , allloss: 3.9528, dt: 1291.89ms, fracRes: 0.3843, norm(attn): 0.2598, norm(output): 0.8242, norm(x): 0.6218, norm(y): 1.0166, norm:1.1048, tok/sec: 101457.62, flops:106.48, batch-reuse:1
@ 6134 train 4.0481 , allloss: 4.0492, dt: 1281.52ms, fracRes: 0.3845, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6258, norm(y): 1.0166, norm:0.9730, tok/sec: 102278.63, flops:107.34, batch-reuse:1
@ 6135 train 4.0138 , allloss: 4.0144, dt: 1341.56ms, fracRes: 0.3849, norm(attn): 0.2578, norm(output): 0.8320, norm(x): 0.6232, norm(y): 1.0167, norm:0.9691, tok/sec: 97701.07, flops:102.54, batch-reuse:1
@ 6136 train 4.0070 , allloss: 4.0079, dt: 1316.46ms, fracRes: 0.3850, norm(attn): 0.2578, norm(output): 0.8320, norm(x): 0.6226, norm(y): 1.0167, norm:1.0470, tok/sec: 99563.70, flops:104.49, batch-reuse:1
@ 6137 train 4.0919 , allloss: 4.0930, dt: 1301.43ms, fracRes: 0.3843, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6228, norm(y): 1.0167, norm:1.0075, tok/sec: 100713.85, flops:105.70, batch-reuse:1
@ 6138 train 4.0102 , allloss: 4.0125, dt: 1295.58ms, fracRes: 0.3843, norm(attn): 0.2559, norm(output): 0.8320, norm(x): 0.6234, norm(y): 1.0167, norm:0.9133, tok/sec: 101168.67, flops:106.18, batch-reuse:1
@ 6139 train 4.1949 , allloss: 4.1958, dt: 1326.07ms, fracRes: 0.3849, norm(attn): 0.2539, norm(output): 0.8359, norm(x): 0.6235, norm(y): 1.0167, norm:1.1606, tok/sec: 98842.08, flops:103.74, batch-reuse:1
@ 6140 train 4.1776 , allloss: 4.1793, dt: 1308.03ms, fracRes: 0.3850, norm(attn): 0.2559, norm(output): 0.8398, norm(x): 0.6267, norm(y): 1.0167, norm:1.1807, tok/sec: 100205.75, flops:105.17, batch-reuse:1
@ 6141 train 4.1638 , allloss: 4.1649, dt: 1295.50ms, fracRes: 0.3840, norm(attn): 0.2559, norm(output): 0.8359, norm(x): 0.6236, norm(y): 1.0166, norm:0.9658, tok/sec: 101174.50, flops:106.18, batch-reuse:1
@ 6142 train 4.2483 , allloss: 4.2492, dt: 1282.71ms, fracRes: 0.3834, norm(attn): 0.2598, norm(output): 0.8242, norm(x): 0.6221, norm(y): 1.0166, norm:1.1073, tok/sec: 102183.90, flops:107.24, batch-reuse:1
@ 6143 train 4.1672 , allloss: 4.1752, dt: 1295.47ms, fracRes: 0.3842, norm(attn): 0.2578, norm(output): 0.8359, norm(x): 0.6255, norm(y): 1.0166, norm:1.3218, tok/sec: 101177.50, flops:106.19, batch-reuse:1
@ 6144 train 4.2432 , allloss: 4.2449, dt: 1305.14ms, fracRes: 0.3859, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6237, norm(y): 1.0167, norm:0.9695, tok/sec: 100427.23, flops:105.40, batch-reuse:1
@ 6145 train 4.0868 , allloss: 4.0886, dt: 1329.97ms, fracRes: 0.3860, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6236, norm(y): 1.0166, norm:1.3336, tok/sec: 98552.47, flops:103.43, batch-reuse:1
@ 6146 train 4.1425 , allloss: 4.1475, dt: 1321.22ms, fracRes: 0.3844, norm(attn): 0.2578, norm(output): 0.8320, norm(x): 0.6269, norm(y): 1.0165, norm:0.9789, tok/sec: 99205.12, flops:104.12, batch-reuse:1
@ 6147 train 4.3645 , allloss: 4.3684, dt: 1289.64ms, fracRes: 0.3849, norm(attn): 0.2637, norm(output): 0.8281, norm(x): 0.6257, norm(y): 1.0166, norm:1.4643, tok/sec: 101634.83, flops:106.67, batch-reuse:1
@ 6148 train 4.1853 , allloss: 4.1857, dt: 1306.43ms, fracRes: 0.3882, norm(attn): 0.2520, norm(output): 0.8281, norm(x): 0.6198, norm(y): 1.0167, norm:1.2009, tok/sec: 100328.09, flops:105.30, batch-reuse:1
@ 6149 train 4.1497 , allloss: 4.1507, dt: 1316.03ms, fracRes: 0.3869, norm(attn): 0.2559, norm(output): 0.8320, norm(x): 0.6214, norm(y): 1.0167, norm:1.0467, tok/sec: 99596.42, flops:104.53, batch-reuse:1
@ 6150 train 4.1519 , allloss: 4.1531, dt: 1311.97ms, fracRes: 0.3847, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6250, norm(y): 1.0165, norm:1.0950, tok/sec: 99904.78, flops:104.85, batch-reuse:1
@ 6151 train 3.9951 , allloss: 3.9961, dt: 1346.79ms, fracRes: 0.3811, norm(attn): 0.2676, norm(output): 0.8203, norm(x): 0.6247, norm(y): 1.0164, norm:1.1662, tok/sec: 97321.62, flops:102.14, batch-reuse:1
@ 6152 train 4.1782 , allloss: 4.1795, dt: 1316.46ms, fracRes: 0.3857, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6223, norm(y): 1.0167, norm:1.2283, tok/sec: 99564.04, flops:104.49, batch-reuse:1
@ 6153 train 4.1353 , allloss: 4.1367, dt: 1289.71ms, fracRes: 0.3861, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6192, norm(y): 1.0167, norm:1.1001, tok/sec: 101628.99, flops:106.66, batch-reuse:1
@ 6154 train 4.2228 , allloss: 4.2234, dt: 1302.34ms, fracRes: 0.3866, norm(attn): 0.2578, norm(output): 0.8242, norm(x): 0.6225, norm(y): 1.0168, norm:1.1701, tok/sec: 100643.12, flops:105.63, batch-reuse:1
@ 6155 train 4.1803 , allloss: 4.1814, dt: 1298.41ms, fracRes: 0.3870, norm(attn): 0.2520, norm(output): 0.8281, norm(x): 0.6240, norm(y): 1.0168, norm:1.0550, tok/sec: 100947.77, flops:105.95, batch-reuse:1
@ 6156 train 4.0787 , allloss: 4.0793, dt: 1302.07ms, fracRes: 0.3871, norm(attn): 0.2520, norm(output): 0.8281, norm(x): 0.6256, norm(y): 1.0167, norm:1.1197, tok/sec: 100664.44, flops:105.65, batch-reuse:1
@ 6157 train 4.1556 , allloss: 4.1567, dt: 1287.31ms, fracRes: 0.3877, norm(attn): 0.2539, norm(output): 0.8242, norm(x): 0.6243, norm(y): 1.0167, norm:1.0865, tok/sec: 101818.87, flops:106.86, batch-reuse:1
@ 6158 train 4.1379 , allloss: 4.1386, dt: 1304.71ms, fracRes: 0.3876, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6261, norm(y): 1.0166, norm:0.9968, tok/sec: 100460.63, flops:105.44, batch-reuse:1
@ 6159 train 4.0806 , allloss: 4.0825, dt: 1338.18ms, fracRes: 0.3873, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6237, norm(y): 1.0167, norm:1.0707, tok/sec: 97947.92, flops:102.80, batch-reuse:1
@ 6160 train 4.0681 , allloss: 4.0688, dt: 1333.30ms, fracRes: 0.3864, norm(attn): 0.2598, norm(output): 0.8320, norm(x): 0.6263, norm(y): 1.0166, norm:1.0490, tok/sec: 98306.55, flops:103.17, batch-reuse:1
@ 6161 train 4.1181 , allloss: 4.1188, dt: 1294.69ms, fracRes: 0.3867, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6258, norm(y): 1.0167, norm:0.9137, tok/sec: 101238.09, flops:106.25, batch-reuse:1
@ 6162 train 4.0985 , allloss: 4.0994, dt: 1311.46ms, fracRes: 0.3859, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6271, norm(y): 1.0167, norm:0.9567, tok/sec: 99943.88, flops:104.89, batch-reuse:1
@ 6163 train 4.1923 , allloss: 4.1927, dt: 1337.31ms, fracRes: 0.3864, norm(attn): 0.2559, norm(output): 0.8320, norm(x): 0.6278, norm(y): 1.0168, norm:0.9957, tok/sec: 98011.52, flops:102.86, batch-reuse:1
@ 6164 train 4.1611 , allloss: 4.1616, dt: 1319.05ms, fracRes: 0.3856, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6218, norm(y): 1.0167, norm:1.0315, tok/sec: 99368.84, flops:104.29, batch-reuse:1
@ 6165 train 4.1185 , allloss: 4.1196, dt: 1291.04ms, fracRes: 0.3859, norm(attn): 0.2559, norm(output): 0.8242, norm(x): 0.6221, norm(y): 1.0166, norm:1.1148, tok/sec: 101524.17, flops:106.55, batch-reuse:1
@ 6166 train 4.2718 , allloss: 4.2725, dt: 1295.81ms, fracRes: 0.3872, norm(attn): 0.2559, norm(output): 0.8203, norm(x): 0.6254, norm(y): 1.0167, norm:1.0109, tok/sec: 101150.99, flops:106.16, batch-reuse:1
@ 6167 train 4.1622 , allloss: 4.1633, dt: 1294.49ms, fracRes: 0.3864, norm(attn): 0.2539, norm(output): 0.8242, norm(x): 0.6227, norm(y): 1.0167, norm:1.1024, tok/sec: 101253.56, flops:106.27, batch-reuse:1
@ 6168 train 4.1225 , allloss: 4.1235, dt: 1315.96ms, fracRes: 0.3850, norm(attn): 0.2617, norm(output): 0.8320, norm(x): 0.6279, norm(y): 1.0166, norm:1.0945, tok/sec: 99602.03, flops:104.53, batch-reuse:1
@ 6169 train 4.1474 , allloss: 4.1483, dt: 1312.13ms, fracRes: 0.3842, norm(attn): 0.2637, norm(output): 0.8359, norm(x): 0.6325, norm(y): 1.0166, norm:1.2503, tok/sec: 99892.80, flops:104.84, batch-reuse:1
@ 6170 train 4.1357 , allloss: 4.1364, dt: 1334.78ms, fracRes: 0.3855, norm(attn): 0.2598, norm(output): 0.8320, norm(x): 0.6288, norm(y): 1.0167, norm:1.1038, tok/sec: 98197.28, flops:103.06, batch-reuse:1
@ 6171 train 4.1139 , allloss: 4.1147, dt: 1338.52ms, fracRes: 0.3856, norm(attn): 0.2578, norm(output): 0.8359, norm(x): 0.6268, norm(y): 1.0166, norm:1.2371, tok/sec: 97923.18, flops:102.77, batch-reuse:1
@ 6172 train 4.1252 , allloss: 4.1270, dt: 1335.40ms, fracRes: 0.3850, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6263, norm(y): 1.0166, norm:1.0963, tok/sec: 98152.15, flops:103.01, batch-reuse:1
@ 6173 train 4.1322 , allloss: 4.1334, dt: 1320.71ms, fracRes: 0.3843, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6269, norm(y): 1.0166, norm:1.0625, tok/sec: 99243.36, flops:104.16, batch-reuse:1
@ 6174 train 4.2060 , allloss: 4.2072, dt: 1298.12ms, fracRes: 0.3862, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6251, norm(y): 1.0167, norm:1.0599, tok/sec: 100970.76, flops:105.97, batch-reuse:1
@ 6175 train 4.1464 , allloss: 4.1473, dt: 1294.11ms, fracRes: 0.3859, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6265, norm(y): 1.0166, norm:1.1444, tok/sec: 101283.50, flops:106.30, batch-reuse:1
@ 6176 train 4.0916 , allloss: 4.0929, dt: 1278.37ms, fracRes: 0.3851, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6296, norm(y): 1.0166, norm:1.0365, tok/sec: 102530.84, flops:107.61, batch-reuse:1
@ 6177 train 4.0884 , allloss: 4.0891, dt: 1300.53ms, fracRes: 0.3859, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6281, norm(y): 1.0166, norm:1.0717, tok/sec: 100783.75, flops:105.77, batch-reuse:1
@ 6178 train 4.0959 , allloss: 4.0964, dt: 1292.16ms, fracRes: 0.3861, norm(attn): 0.2539, norm(output): 0.8359, norm(x): 0.6252, norm(y): 1.0167, norm:1.0713, tok/sec: 101436.69, flops:106.46, batch-reuse:1
@ 6179 train 4.0909 , allloss: 4.0914, dt: 1298.23ms, fracRes: 0.3862, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6259, norm(y): 1.0167, norm:1.0267, tok/sec: 100961.86, flops:105.96, batch-reuse:1
@ 6180 train 4.1453 , allloss: 4.1459, dt: 1296.54ms, fracRes: 0.3852, norm(attn): 0.2559, norm(output): 0.8359, norm(x): 0.6270, norm(y): 1.0167, norm:0.9587, tok/sec: 101093.33, flops:106.10, batch-reuse:1
@ 6181 train 4.2854 , allloss: 4.2860, dt: 1305.61ms, fracRes: 0.3860, norm(attn): 0.2539, norm(output): 0.8398, norm(x): 0.6283, norm(y): 1.0166, norm:1.0445, tok/sec: 100391.61, flops:105.36, batch-reuse:1
@ 6182 train 4.3143 , allloss: 4.3200, dt: 1286.60ms, fracRes: 0.3857, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6258, norm(y): 1.0166, norm:1.0955, tok/sec: 101874.66, flops:106.92, batch-reuse:1
@ 6183 train 4.1141 , allloss: 4.1149, dt: 1289.03ms, fracRes: 0.3829, norm(attn): 0.2617, norm(output): 0.8242, norm(x): 0.6258, norm(y): 1.0166, norm:0.9617, tok/sec: 101682.67, flops:106.72, batch-reuse:1
@ 6184 train 4.1175 , allloss: 4.1185, dt: 1317.79ms, fracRes: 0.3826, norm(attn): 0.2637, norm(output): 0.8281, norm(x): 0.6240, norm(y): 1.0167, norm:0.9487, tok/sec: 99463.15, flops:104.39, batch-reuse:1
@ 6185 train 4.2601 , allloss: 4.2609, dt: 1330.38ms, fracRes: 0.3837, norm(attn): 0.2598, norm(output): 0.8359, norm(x): 0.6264, norm(y): 1.0167, norm:1.0683, tok/sec: 98522.19, flops:103.40, batch-reuse:1
@ 6186 train 4.2546 , allloss: 4.2550, dt: 1339.66ms, fracRes: 0.3835, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6246, norm(y): 1.0166, norm:0.9410, tok/sec: 97839.98, flops:102.68, batch-reuse:1
@ 6187 train 4.0948 , allloss: 4.0952, dt: 1323.67ms, fracRes: 0.3836, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6250, norm(y): 1.0166, norm:1.0026, tok/sec: 99021.40, flops:103.92, batch-reuse:1
@ 6188 train 4.1910 , allloss: 4.1916, dt: 1292.03ms, fracRes: 0.3860, norm(attn): 0.2559, norm(output): 0.8359, norm(x): 0.6298, norm(y): 1.0167, norm:1.0343, tok/sec: 101446.40, flops:106.47, batch-reuse:1
@ 6189 train 4.0126 , allloss: 4.0129, dt: 1315.22ms, fracRes: 0.3839, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6244, norm(y): 1.0166, norm:1.0940, tok/sec: 99657.90, flops:104.59, batch-reuse:1
@ 6190 train 4.3651 , allloss: 4.3678, dt: 1316.39ms, fracRes: 0.3861, norm(attn): 0.2520, norm(output): 0.8398, norm(x): 0.6300, norm(y): 1.0167, norm:1.2519, tok/sec: 99569.24, flops:104.50, batch-reuse:1
@ 6191 train 4.1622 , allloss: 4.1627, dt: 1320.10ms, fracRes: 0.3845, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6251, norm(y): 1.0166, norm:1.1761, tok/sec: 99289.35, flops:104.21, batch-reuse:1
@ 6192 train 4.1137 , allloss: 4.1141, dt: 1283.20ms, fracRes: 0.3855, norm(attn): 0.2539, norm(output): 0.8320, norm(x): 0.6261, norm(y): 1.0167, norm:1.1395, tok/sec: 102144.33, flops:107.20, batch-reuse:1
@ 6193 train 4.1375 , allloss: 4.1389, dt: 1285.27ms, fracRes: 0.3850, norm(attn): 0.2559, norm(output): 0.8320, norm(x): 0.6250, norm(y): 1.0167, norm:0.9910, tok/sec: 101980.28, flops:107.03, batch-reuse:1
@ 6194 train 4.1564 , allloss: 4.1570, dt: 1319.34ms, fracRes: 0.3848, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6236, norm(y): 1.0167, norm:0.9980, tok/sec: 99346.43, flops:104.27, batch-reuse:1
@ 6195 train 4.2237 , allloss: 4.2243, dt: 1319.24ms, fracRes: 0.3851, norm(attn): 0.2637, norm(output): 0.8281, norm(x): 0.6237, norm(y): 1.0167, norm:0.9909, tok/sec: 99354.15, flops:104.27, batch-reuse:1
@ 6196 train 4.1509 , allloss: 4.1519, dt: 1319.57ms, fracRes: 0.3841, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6244, norm(y): 1.0166, norm:1.0142, tok/sec: 99329.57, flops:104.25, batch-reuse:1
@ 6197 train 4.0600 , allloss: 4.0608, dt: 1285.89ms, fracRes: 0.3835, norm(attn): 0.2637, norm(output): 0.8320, norm(x): 0.6278, norm(y): 1.0167, norm:0.9434, tok/sec: 101931.25, flops:106.98, batch-reuse:1
@ 6198 train 4.1475 , allloss: 4.1479, dt: 1312.85ms, fracRes: 0.3820, norm(attn): 0.2617, norm(output): 0.8320, norm(x): 0.6264, norm(y): 1.0166, norm:0.9379, tok/sec: 99837.99, flops:104.78, batch-reuse:1
@ 6199 train 4.1359 , allloss: 4.1364, dt: 1334.42ms, fracRes: 0.3837, norm(attn): 0.2578, norm(output): 0.8320, norm(x): 0.6280, norm(y): 1.0167, norm:0.9613, tok/sec: 98223.93, flops:103.09, batch-reuse:1
@ 6200 train 4.1544 , allloss: 4.1549, dt: 1310.55ms, fracRes: 0.3842, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6247, norm(y): 1.0166, norm:0.8704, tok/sec: 100012.85, flops:104.97, batch-reuse:1
@ 6201 train 4.0977 , allloss: 4.0983, dt: 1309.67ms, fracRes: 0.3847, norm(attn): 0.2598, norm(output): 0.8359, norm(x): 0.6285, norm(y): 1.0167, norm:0.9580, tok/sec: 100079.94, flops:105.04, batch-reuse:1
@ 6202 train 4.0914 , allloss: 4.0919, dt: 1340.75ms, fracRes: 0.3839, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6280, norm(y): 1.0167, norm:0.8461, tok/sec: 97760.56, flops:102.60, batch-reuse:1
@ 6203 train 4.1423 , allloss: 4.1429, dt: 1306.86ms, fracRes: 0.3836, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6258, norm(y): 1.0166, norm:1.0505, tok/sec: 100295.00, flops:105.26, batch-reuse:1
@ 6204 train 4.2218 , allloss: 4.2228, dt: 1303.72ms, fracRes: 0.3854, norm(attn): 0.2578, norm(output): 0.8438, norm(x): 0.6263, norm(y): 1.0167, norm:1.0490, tok/sec: 100536.59, flops:105.52, batch-reuse:1
@ 6205 train 4.1474 , allloss: 4.1482, dt: 1321.46ms, fracRes: 0.3848, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6251, norm(y): 1.0167, norm:1.0522, tok/sec: 99186.94, flops:104.10, batch-reuse:1
@ 6206 train 4.0791 , allloss: 4.0800, dt: 1341.28ms, fracRes: 0.3849, norm(attn): 0.2598, norm(output): 0.8281, norm(x): 0.6294, norm(y): 1.0167, norm:1.0763, tok/sec: 97721.22, flops:102.56, batch-reuse:1
@ 6207 train 4.1214 , allloss: 4.1219, dt: 1344.44ms, fracRes: 0.3857, norm(attn): 0.2617, norm(output): 0.8398, norm(x): 0.6289, norm(y): 1.0167, norm:1.1049, tok/sec: 97491.81, flops:102.32, batch-reuse:1
@ 6208 train 4.1850 , allloss: 4.1861, dt: 1329.19ms, fracRes: 0.3859, norm(attn): 0.2559, norm(output): 0.8359, norm(x): 0.6296, norm(y): 1.0166, norm:1.0528, tok/sec: 98610.43, flops:103.49, batch-reuse:1
@ 6209 train 4.0715 , allloss: 4.0723, dt: 1314.52ms, fracRes: 0.3859, norm(attn): 0.2559, norm(output): 0.8320, norm(x): 0.6265, norm(y): 1.0166, norm:1.0032, tok/sec: 99711.11, flops:104.65, batch-reuse:1
@ 6210 train 4.1129 , allloss: 4.1140, dt: 1335.59ms, fracRes: 0.3862, norm(attn): 0.2539, norm(output): 0.8281, norm(x): 0.6237, norm(y): 1.0166, norm:0.9210, tok/sec: 98137.79, flops:103.00, batch-reuse:1
@ 6211 train 4.1114 , allloss: 4.1122, dt: 1283.64ms, fracRes: 0.3857, norm(attn): 0.2559, norm(output): 0.8281, norm(x): 0.6249, norm(y): 1.0166, norm:1.1179, tok/sec: 102109.73, flops:107.17, batch-reuse:1
@ 6212 train 4.1339 , allloss: 4.1349, dt: 1327.15ms, fracRes: 0.3850, norm(attn): 0.2617, norm(output): 0.8320, norm(x): 0.6273, norm(y): 1.0166, norm:0.9418, tok/sec: 98762.05, flops:103.65, batch-reuse:1
@ 6213 train 4.1186 , allloss: 4.1193, dt: 1332.86ms, fracRes: 0.3851, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6248, norm(y): 1.0166, norm:0.9149, tok/sec: 98338.82, flops:103.21, batch-reuse:1
@ 6214 train 4.0279 , allloss: 4.0284, dt: 1288.76ms, fracRes: 0.3852, norm(attn): 0.2637, norm(output): 0.8281, norm(x): 0.6251, norm(y): 1.0168, norm:0.9826, tok/sec: 101703.67, flops:106.74, batch-reuse:1
@ 6215 train 4.1372 , allloss: 4.1379, dt: 1305.05ms, fracRes: 0.3850, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6234, norm(y): 1.0167, norm:0.9651, tok/sec: 100434.31, flops:105.41, batch-reuse:1
@ 6216 train 4.1301 , allloss: 4.1305, dt: 1317.42ms, fracRes: 0.3848, norm(attn): 0.2578, norm(output): 0.8281, norm(x): 0.6251, norm(y): 1.0166, norm:0.9794, tok/sec: 99491.36, flops:104.42, batch-reuse:1
@ 6217 train 4.0533 , allloss: 4.0540, dt: 1320.30ms, fracRes: 0.3867, norm(attn): 0.2598, norm(output): 0.8320, norm(x): 0.6292, norm(y): 1.0167, norm:1.0934, tok/sec: 99274.33, flops:104.19, batch-reuse:1
@ 6218 train 4.1006 , allloss: 4.1012, dt: 1297.32ms, fracRes: 0.3846, norm(attn): 0.2637, norm(output): 0.8242, norm(x): 0.6291, norm(y): 1.0166, norm:1.1189, tok/sec: 101033.07, flops:106.04, batch-reuse:1
@ 6219 train 4.1513 , allloss: 4.1519, dt: 1299.08ms, fracRes: 0.3854, norm(attn): 0.2617, norm(output): 0.8359, norm(x): 0.6295, norm(y): 1.0166, norm:1.1338, tok/sec: 100896.03, flops:105.89, batch-reuse:1
@ 6220 train 4.1700 , allloss: 4.1707, dt: 1313.43ms, fracRes: 0.3851, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6286, norm(y): 1.0166, norm:0.9498, tok/sec: 99794.05, flops:104.74, batch-reuse:1
@ 6221 train 4.0497 , allloss: 4.0504, dt: 1291.35ms, fracRes: 0.3841, norm(attn): 0.2637, norm(output): 0.8242, norm(x): 0.6238, norm(y): 1.0166, norm:0.9675, tok/sec: 101499.60, flops:106.53, batch-reuse:1
@ 6222 train 4.1295 , allloss: 4.1305, dt: 1301.00ms, fracRes: 0.3843, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6249, norm(y): 1.0166, norm:0.9970, tok/sec: 100747.02, flops:105.74, batch-reuse:1
@ 6223 train 4.2028 , allloss: 4.2045, dt: 1302.57ms, fracRes: 0.3844, norm(attn): 0.2656, norm(output): 0.8320, norm(x): 0.6273, norm(y): 1.0166, norm:1.0132, tok/sec: 100625.48, flops:105.61, batch-reuse:1
@ 6224 train 4.1250 , allloss: 4.1253, dt: 1341.74ms, fracRes: 0.3840, norm(attn): 0.2617, norm(output): 0.8242, norm(x): 0.6215, norm(y): 1.0165, norm:1.0524, tok/sec: 97688.33, flops:102.53, batch-reuse:1
@ 6225 train 4.1027 , allloss: 4.1032, dt: 1310.43ms, fracRes: 0.3835, norm(attn): 0.2617, norm(output): 0.8242, norm(x): 0.6231, norm(y): 1.0166, norm:0.9798, tok/sec: 100021.89, flops:104.97, batch-reuse:1
@ 6226 train 4.1349 , allloss: 4.1361, dt: 1310.79ms, fracRes: 0.3840, norm(attn): 0.2617, norm(output): 0.8281, norm(x): 0.6271, norm(y): 1.0167, norm:1.0224, tok/sec: 99994.67, flops:104.95, batch-reuse:1
@ 6227 train 4.1676 , allloss: 4.1686, dt: 1298.82ms, fracRes: 0.3838, norm(attn): 0.2637, norm(output): 0.8242, norm(x): 0.6268, norm(y): 1.0166, norm:1.0311, tok/sec: 100916.05, flops:105.91, batch-reuse:1
@ 6228 train 4.0281 , allloss: 4.0285, dt: 1285.66ms, fracRes: 0.3839, norm(attn): 0.2617, norm(output): 0.8320, norm(x): 0.6282, norm(y): 1.0166, norm:1.1149, tok/sec: 101948.91, flops:107.00, batch-reuse:1
@ 6229 train 3.9942 , allloss: 3.9948, dt: 1317.90ms, fracRes: 0.3846, norm(attn): 0.2637, norm(output): 0.8320, norm(x): 0.6286, norm(y): 1.0166, norm:0.9365, tok/sec: 99455.07, flops:104.38, batch-reuse:1
@ 6230 train 4.1142 , allloss: 4.1151, dt: 1300.26ms, fracRes: 0.3852, norm(attn): 0.2598, norm(output): 0.8438, norm(x): 0.6297, norm(y): 1.0165, norm:0.9811, tok/sec: 100804.17, flops:105.80, batch-reuse:1
@ 6231 train 4.0346 , allloss: 4.0354, dt: 1293.98ms, fracRes: 0.3850, norm(attn): 0.2617, norm(output): 0.8398, norm(x): 0.6288, norm(y): 1.0166, norm:0.9957, tok/sec: 101293.95, flops:106.31, batch-reuse:1
@ 6232 train 4.0616 , allloss: 4.0621, dt: 1319.54ms, fracRes: 0.3852, norm(attn): 0.2617, norm(output): 0.8359, norm(x): 0.6277, norm(y): 1.0166, norm:0.9942, tok/sec: 99331.35, flops:104.25, batch-reuse:1
@ 6233 train 4.0883 , allloss: 4.0889, dt: 1319.48ms, fracRes: 0.3844, norm(attn): 0.2617, norm(output): 0.8516, norm(x): 0.6308, norm(y): 1.0167, norm:0.9263, tok/sec: 99335.94, flops:104.25, batch-reuse:1
@ 6234 train 4.0629 , allloss: 4.0633, dt: 1287.97ms, fracRes: 0.3835, norm(attn): 0.2617, norm(output): 0.8594, norm(x): 0.6313, norm(y): 1.0167, norm:0.8697, tok/sec: 101766.28, flops:106.81, batch-reuse:1
@ 6235 train 4.1400 , allloss: 4.1407, dt: 1293.00ms, fracRes: 0.3843, norm(attn): 0.2598, norm(output): 0.8516, norm(x): 0.6311, norm(y): 1.0167, norm:1.0561, tok/sec: 101370.83, flops:106.39, batch-reuse:1
