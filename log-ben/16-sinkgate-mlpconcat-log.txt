Threshold: 0.1
Enable layer loss: False
MAX LEARNING RATE: 0.0006
Experiment name: 16-sinkgate-mlpconcat
MLPSCALE: 4
Experiment description: Transformer, max LR 6e-4
Setting:
========
self.compiler = BenCompilerNoOp(config)
self.execute = BenExecute(config)
y = self.ln_1(x)
attn, xWeights, scores = self.attn(y, y, print_weights=print_weights)
program = self.compiler(y)
machineOutput = self.execute(program, attn)
x = xWeights*y + machineOutput
======== 
VALUEMATRIX=True
REUSE_WEIGHTS=False
MLP_SCALE=4
MEASURE_SELF_CONTRIBUTION=False
NEW_ALL_LAYER_LOSS=True
MATRIX_NUM_PARAMS=4096
MLPMAT_INNER_SIZE=64
DELETE_SELF_CONTRIBUTION=False
EXTRACT_SELF_CONTRIBUTION=False
ATTENTION_SINK=True

Warmup steps: 100
total desired batch size: 131072
Mini-batch size: 8*1024
=> calculated gradient accumulation steps: 16
=> calculated gradient accumulation steps: 16
Training max steps: 300001Num GPUs: 1{'block_size': 1024, 'vocab_size': 50304, 'n_layer': 12, 'n_head': 12, 'n_embd': 768}
num decayed parameter tensors: 50, with 152,666,112 parameters
num non-decayed parameter tensors: 86, with 112,128 parameters
@ 0 train 10.9747 , allloss: 10.9747, dt: 1911.03ms, fracRes: 0.0064, norm(attn): 0.0498, norm(output): 0.1094, norm(x): 0.1110, norm(y): 0.9997, norm:28.3628, tok/sec: 68586.93, flops:72.00, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.6055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3125, 0.3066, 0.3789, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2490, 0.1895, 0.3281, 0.2344, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2197, 0.2598, 0.2314, 0.1504, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.1445, 0.0815, 0.2148, 0.2256, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1318, 0.1191, 0.1719, 0.1289, 0.1836, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1162, 0.1240, 0.1631, 0.0806, 0.0708, 0.1963, 0.1221, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1006, 0.0923, 0.0645, 0.1133, 0.1338, 0.1338, 0.1357, 0.0986, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0981, 0.1182, 0.0938, 0.0874, 0.1152, 0.0620, 0.1172, 0.1328, 0.1128, 0.0630, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0889, 0.0554, 0.0596, 0.0747, 0.0942, 0.1079, 0.1377, 0.0908, 0.1147, 0.0991, 0.0771, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0703, 0.1592, 0.0542, 0.1079, 0.0376, 0.0757, 0.0928, 0.0933, 0.0811, 0.1436, 0.0376, 0.0476, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.0432, 0.0664, 0.0811, 0.0703, 0.0894, 0.0674, 0.1104, 0.0713, 0.0659, 0.0640, 0.1250, 0.0737, 0.0000, 0.0000],
        [0.0625, 0.0645, 0.0474, 0.0452, 0.0659, 0.0845, 0.1025, 0.0786, 0.0757, 0.0576, 0.0820, 0.0933, 0.0679, 0.0723, 0.0000],
        [0.0615, 0.0640, 0.0391, 0.0889, 0.0918, 0.0488, 0.0569, 0.0498, 0.0728, 0.0486, 0.0669, 0.1279, 0.0491, 0.0479, 0.0864]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000],
        [     0.0000,      0.4238,     -0.0403,     -0.4141,     -0.4609,      0.0967,      0.0806,      0.0288,     -0.2041,      0.0703,      0.1533,      0.1543,     -0.0203,     -0.0113,      0.4785],
        [     0.0000,     -0.0197,      0.1914,     -0.2910,     -0.2002,     -0.0322,     -0.2949,     -0.7500,      0.4043,      0.5703,     -0.7773,      0.1709,     -0.8633,     -0.0466,      0.6445],
        [     0.0000,     -0.2734,      0.2773,     -0.0608,     -0.0713,      0.1689,      0.1123,     -0.2363,     -0.0273,     -0.1260,      0.2891,     -0.1201,      0.0074,      0.0430,      0.7930],
        [    -0.0000,      0.1650,      0.0493,     -0.3809,     -0.4551,      0.4648,     -0.0430,     -0.2617,      0.0352,      0.3867,     -0.3379,     -0.2080,     -0.1060,     -0.0574,     -0.7109],
        [    -0.0000,     -0.1162,     -0.6914,      0.2754,      0.3262,      0.0537,      0.0874,      0.0811,      0.4102,      0.0237,     -0.0732,     -0.2910,      0.3281,      0.4316,     -0.1084],
        [     0.0000,      0.0104,     -0.0874,      0.2793,     -0.0070,      0.3457,      0.0344,     -0.1426,      0.2217,     -0.3555,     -0.2090,      0.6484,      0.3379,     -0.2373,      1.2812],
        [     0.0000,      0.0654,      0.3379,     -0.3652,     -0.4980,      0.5234,      0.0500,      0.0845,      0.1719,      0.1113,     -0.1885,     -0.2451,      0.1797,     -0.0659,      0.9805],
        [    -0.0000,     -0.0820,     -0.4414,      0.1226,      0.2871,      0.2891,      0.3027,     -0.0159,      0.2324,     -0.0430,     -0.2754,      0.3887,      0.1006,      0.0283,      0.1396],
        [    -0.0000,      0.1826,     -0.0483,     -0.1152,      0.1582,     -0.4629,      0.1768,      0.2988,      0.1367,     -0.4492,     -0.2969,      0.0801,      0.1162,      0.2119,     -0.4512],
        [    -0.0000,     -0.4688,     -0.4004,     -0.1748,      0.0620,      0.1943,      0.4375,      0.0200,      0.2578,      0.1113,     -0.1416,      0.2285,      0.3438,      0.3672,      0.3652],
        [     0.0000,      0.8125,     -0.2598,      0.4238,     -0.6328,      0.0708,      0.2754,      0.2793,      0.1367,      0.7109,     -0.6289,     -0.3926,     -0.4844,      0.1279,     -0.1309],
        [     0.0000,     -0.5078,     -0.0820,      0.1187,     -0.0234,      0.2178,     -0.0684,      0.4277,     -0.0087,     -0.0864,     -0.1187,      0.5547,      0.0242,     -0.2617,      0.7188],
        [    -0.0000,      0.0352,     -0.2734,     -0.3223,      0.0562,      0.3047,      0.4961,      0.2334,      0.1924,     -0.0801,      0.2715,      0.4023,      0.0864,      0.1465,      0.0003],
        [    -0.0000,      0.0427,     -0.4551,      0.3711,      0.4004,     -0.2305,     -0.0776,     -0.2109,      0.1709,     -0.2354,      0.0884,      0.7305,     -0.2227,     -0.2500,      0.3418]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5020],
        [0.3228],
        [0.2445],
        [0.2132],
        [0.1666],
        [0.1427],
        [0.1203],
        [0.1080],
        [0.0942],
        [0.0868],
        [0.0799],
        [0.0724],
        [0.0660],
        [0.0645]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4629, 0.5391, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.1992, 0.4219, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.2178, 0.2148, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.2373, 0.1787, 0.2676, 0.1572, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1846, 0.1777, 0.2129, 0.1670, 0.1040, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1455, 0.0991, 0.1592, 0.1826, 0.1494, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1904, 0.0869, 0.1133, 0.1748, 0.1045, 0.0913, 0.1060, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1260, 0.0659, 0.2246, 0.0903, 0.0850, 0.1143, 0.0913, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1040, 0.0728, 0.1338, 0.0933, 0.0698, 0.1377, 0.0801, 0.1172, 0.0884, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1001, 0.1523, 0.0801, 0.1670, 0.1055, 0.0674, 0.0569, 0.0820, 0.0515, 0.0889, 0.0481, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.0688, 0.1050, 0.1475, 0.0791, 0.0396, 0.1040, 0.0815, 0.0708, 0.0850, 0.0938, 0.0559, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.1016, 0.1006, 0.1099, 0.0613, 0.0454, 0.0610, 0.0674, 0.0698, 0.0708, 0.0752, 0.0554, 0.1143, 0.0000, 0.0000],
        [0.0464, 0.0520, 0.0591, 0.2021, 0.0518, 0.0425, 0.1050, 0.0605, 0.0669, 0.0703, 0.0703, 0.0457, 0.0557, 0.0718, 0.0000],
        [0.0659, 0.0825, 0.0737, 0.1035, 0.0669, 0.0295, 0.0854, 0.0537, 0.0488, 0.0708, 0.0403, 0.0688, 0.0884, 0.0659, 0.0559]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.1514,     -0.1904,      0.0547,     -0.3945,      0.0942,     -0.0591,      0.1670,     -0.2197,     -0.1006,     -0.3555,     -0.1523,      0.1592,     -0.0625,     -0.2432],
        [    -0.0000,     -0.6367,      0.1128,     -0.2578,      0.1924,     -0.0131,     -0.1689,     -0.0262,     -0.0918,     -0.3105,     -0.2432,     -0.1836,     -0.4805,     -0.2988,     -0.5312],
        [     0.0000,     -0.0698,     -0.0820,      0.3594,     -0.2324,      0.0583,      0.3613,      0.0874,     -0.2451,     -0.6211,     -0.3262,     -0.0265,     -0.1348,      0.2910,     -0.0270],
        [    -0.0000,      0.4004,      0.1152,      0.5195,     -0.0095,      0.2578,      0.0840,      0.2969,     -0.0354,      0.6680,      0.2734,     -0.1108,      0.0894,     -0.0223,      0.2217],
        [    -0.0000,     -0.0371,      0.1445,     -0.0986,     -0.5742,     -0.1729,     -0.0195,     -0.0070,     -0.1055,      0.1060,      0.1533,     -0.2354,      0.2520,      0.0840,      0.2197],
        [    -0.0000,      0.0703,     -0.3164,      0.1572,      0.2969,      0.0918,     -0.0625,     -0.2451,      0.1953,     -0.2852,      0.4531,      0.0623,     -0.4941,     -0.0508,     -0.2178],
        [     0.0000,      0.3594,     -0.4199,     -0.1572,      0.2793,     -0.2373,     -0.3750,     -0.2217,     -0.5664,     -0.6562,     -0.2158,     -0.1484,     -0.1582,     -0.4727,      0.0170],
        [    -0.0000,      0.3066,     -0.3359,      0.8906,     -0.0227,     -0.0845,      0.2109,     -0.0098,      0.1816,      0.3926,     -0.1226,      0.3750,     -0.0011,      0.1406,      0.0835],
        [     0.0000,      0.0101,     -0.3457,      0.2617,     -0.0996,     -0.3887,      0.2871,     -0.2500,      0.1289,     -0.1523,     -0.2969,      0.0488,      0.0835,      0.0503,     -0.1084],
        [     0.0000,      0.4180,     -0.2207,      0.5117,      0.0527,     -0.3945,     -0.5664,     -0.2012,     -0.6641,     -0.1187,     -0.7344,      0.1416,     -0.2314,     -0.6523,     -0.4004],
        [    -0.0000,     -0.0139,      0.4102,      0.7500,      0.1299,     -0.5625,      0.4023,      0.1602,      0.0145,      0.1973,      0.2988,     -0.2168,      0.0454,      0.2676,      0.1484],
        [    -0.0000,      0.4023,      0.3965,      0.4844,     -0.1025,     -0.4004,     -0.1045,     -0.0089,      0.0266,      0.0413,      0.1045,     -0.2021,      0.5234,     -0.0012,      0.1660],
        [     0.0000,      0.1128,      0.2422,      1.4688,      0.1089,     -0.0913,      0.8164,      0.2656,      0.3672,      0.4180,      0.4141,     -0.0148,      0.1826,      0.4355,      0.3164],
        [    -0.0000,      0.2295,      0.1157,      0.4551,      0.0164,     -0.7969,      0.2598,     -0.2041,     -0.2988,      0.0781,     -0.4902,      0.0474,      0.2969,      0.0030,     -0.1621]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4663],
        [0.3105],
        [0.2310],
        [0.1941],
        [0.1651],
        [0.1399],
        [0.1147],
        [0.1065],
        [0.0920],
        [0.0851],
        [0.0785],
        [0.0706],
        [0.0656],
        [0.0670]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4707, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3145, 0.4668, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2559, 0.2617, 0.2373, 0.2432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.1699, 0.2793, 0.1914, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1416, 0.1216, 0.2305, 0.1875, 0.1963, 0.1235, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1621, 0.1387, 0.1074, 0.1348, 0.1377, 0.1836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.1279, 0.1074, 0.1089, 0.1846, 0.1631, 0.1035, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1201, 0.1094, 0.1377, 0.0898, 0.1133, 0.1309, 0.1089, 0.0776, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.0664, 0.1865, 0.0869, 0.0913, 0.1143, 0.0718, 0.0757, 0.1436, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0625, 0.0903, 0.1113, 0.0806, 0.0825, 0.0791, 0.0767, 0.0977, 0.0991, 0.1118, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0757, 0.0654, 0.1270, 0.0581, 0.0645, 0.0884, 0.0728, 0.0698, 0.0913, 0.0928, 0.1182, 0.0762, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0791, 0.0889, 0.0474, 0.0664, 0.0623, 0.0703, 0.0708, 0.0820, 0.0796, 0.0981, 0.0781, 0.0903, 0.0000, 0.0000],
        [0.0752, 0.0552, 0.1084, 0.0698, 0.0771, 0.0806, 0.0688, 0.0601, 0.0564, 0.0649, 0.0640, 0.0630, 0.0757, 0.0811, 0.0000],
        [0.0684, 0.0415, 0.1030, 0.0569, 0.0659, 0.0713, 0.0752, 0.0486, 0.0605, 0.0554, 0.0811, 0.0625, 0.0552, 0.0903, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.1143,      0.4590,     -0.5352,      0.3184,     -0.2832,     -0.1289,      0.3984,      0.1777,      0.2734,      0.3047,      0.2021,      0.0781,      0.6797,      0.2617],
        [     0.0000,      0.3926,     -0.3652,      0.2051,      0.0801,     -0.8242,     -0.2119,     -0.3164,     -0.3008,     -0.6094,     -0.7695,     -0.4297,     -0.3418,     -0.5352,     -0.4258],
        [     0.0000,      0.0226,     -0.0791,     -0.0542,     -0.0062,      0.1514,      0.0057,     -0.0260,     -0.4414,     -0.1064,     -0.0240,      0.1768,      0.1816,     -0.1660,     -0.2852],
        [    -0.0000,     -0.1201,      0.3730,     -0.0008,     -0.1338,     -0.3086,     -0.2734,     -0.1172,     -0.2461,     -0.0786,     -0.2520,     -0.0806,     -0.2656,     -0.2461,     -0.0198],
        [     0.0000,     -0.1572,      0.4824,      0.2754,      0.3223,     -0.1406,      0.1113,      0.0679,      0.2295,      0.3613,      0.5664,      0.6562,      0.5977,      0.6914,      0.3711],
        [    -0.0000,      0.1768,      0.0173,     -0.2363,     -0.0059,      0.0106,      0.2988,      0.0894,      0.1973,      0.1523,      0.3105,      0.6289,     -0.0186,      0.2832,      0.1279],
        [     0.0000,      0.2178,      0.0417,      0.0527,      0.5820,      0.4609,      0.0037,     -0.0178,      0.3457,      0.4727,      0.4922,      0.4355,      0.7891,      0.7227,      0.2197],
        [     0.0000,     -0.0928,      0.1367,     -0.2871,     -0.0552,      0.0889,     -0.0972,     -0.4336,     -0.0654,     -0.1758,     -0.0908,     -0.1328,     -0.1924,      0.0630,     -0.2393],
        [    -0.0000,     -0.1865,      0.8477,      0.0811,      0.1270,      0.3516,     -0.1104,     -0.0596,      0.5859,      0.0347,      0.5781,      0.2471,      0.6484,      0.8242,      0.2061],
        [    -0.0000,      0.3633,      0.5742,      0.2520,      0.2773,      0.2305,      0.2012,      0.4414,      0.4570,      0.5781,      0.5430,      0.4316,      0.4551,      0.6484,      0.7812],
        [    -0.0000,     -0.1455,      0.5195,     -0.2656,     -0.1602,      0.1523,     -0.0430,     -0.0845,      0.1855,      0.2041,      0.4453,      0.0073,      0.2051,      0.5820,      0.1973],
        [     0.0000,     -0.0884,      0.0325,     -0.6016,     -0.2578,     -0.3281,     -0.2031,     -0.1943,     -0.0491,     -0.0815,      0.1279,     -0.0962,      0.0474,      0.0649,     -0.2969],
        [    -0.0000,     -0.3105,      0.3633,     -0.0752,      0.0276,      0.0708,     -0.0908,     -0.2236,     -0.2871,     -0.1455,     -0.1602,     -0.1758,      0.0049,      0.0728,     -0.2178],
        [     0.0000,     -0.5000,      0.4043,     -0.1865,     -0.0410,      0.0386,      0.0923,     -0.3438,     -0.1260,     -0.2148,      0.1660,     -0.0913,     -0.2178,      0.2754,     -0.0659]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4940],
        [0.3410],
        [0.2489],
        [0.1823],
        [0.1701],
        [0.1416],
        [0.1218],
        [0.1068],
        [0.0974],
        [0.0880],
        [0.0797],
        [0.0729],
        [0.0712],
        [0.0615]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.6836, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3438, 0.1523, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1934, 0.3242, 0.2461, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1562, 0.1904, 0.2676, 0.2119, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.2012, 0.2295, 0.2021, 0.1172, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1660, 0.1885, 0.1226, 0.1719, 0.1035, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1270, 0.1543, 0.1855, 0.0879, 0.1001, 0.1309, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1143, 0.1436, 0.1367, 0.1221, 0.1523, 0.0684, 0.0859, 0.0718, 0.1050, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0962, 0.0938, 0.1387, 0.1318, 0.0864, 0.0520, 0.0801, 0.0703, 0.1387, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1533, 0.0986, 0.1338, 0.0835, 0.0510, 0.0728, 0.0674, 0.0879, 0.0991, 0.0737, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0791, 0.0801, 0.1143, 0.1099, 0.1211, 0.0540, 0.0732, 0.0610, 0.0845, 0.0942, 0.0574, 0.0708, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.1021, 0.0869, 0.1006, 0.1001, 0.0547, 0.0625, 0.0583, 0.0840, 0.0825, 0.0544, 0.0610, 0.0718, 0.0000, 0.0000],
        [0.0767, 0.0830, 0.1011, 0.0830, 0.0913, 0.0476, 0.0640, 0.0491, 0.0869, 0.0718, 0.0474, 0.0640, 0.0713, 0.0625, 0.0000],
        [0.0693, 0.0796, 0.0854, 0.0884, 0.0928, 0.0471, 0.0537, 0.0498, 0.0596, 0.0737, 0.0447, 0.0664, 0.0601, 0.0525, 0.0767]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.7734,      0.0889,      0.3750,      0.0728,      0.0923,      0.1191,      0.5117,      0.3223,      0.5859,      0.3203,      0.1216,      0.0099,      0.0625,     -0.0928],
        [     0.0000,     -0.8086,      0.3848,      0.4238,     -0.1582,     -0.0623,      0.0542,     -0.4238,      0.2344,      0.0542,     -0.4551,     -0.3770,      0.2471,      0.0294,      0.0708],
        [     0.0000,      0.5195,      0.2393,      0.1982,     -0.4727,     -0.3906,      0.0889,     -0.3359,     -0.0947,     -0.3594,     -0.0040,     -0.1240,     -0.4043,     -0.2090,     -0.1602],
        [     0.0000,      0.2012,      0.5391,      0.3066,      0.1040,     -0.1689,     -0.0103,      0.2471,     -0.1826,     -0.0259,     -0.1118,     -0.1836,      0.0292,     -0.2500,     -0.0515],
        [     0.0000,      0.3828,      0.5117,      0.3828,     -0.1582,     -0.2021,      0.0942,     -0.1768,      0.0942,      0.0059,     -0.2246,     -0.0337,      0.0972,     -0.0669,      0.1206],
        [     0.0000,      0.2334,      0.3594,     -0.0679,      0.2676,     -0.2402,     -0.1187,     -0.1602,      0.2412,      0.4824,     -0.0510,      0.1069,      0.3105,      0.0535,      0.3086],
        [     0.0000,     -0.0181,      0.1768,      0.3574,     -0.3887,     -0.2559,      0.0068,     -0.4258,     -0.1602,     -0.0469,     -0.3887,     -0.5820,     -0.2383,     -0.4375,     -0.2490],
        [     0.0000,      0.2285,      0.1816,      0.0649,      0.2891,     -0.5156,     -0.2871,     -0.4629,     -0.0864,      0.0571,     -0.4199,     -0.1992,     -0.0369,     -0.2520,      0.0718],
        [     0.0000,     -0.0295,      0.3633,      0.3145,     -0.1079,     -0.6211,     -0.1836,     -0.3184,      0.3633,      0.1455,     -0.1152,     -0.2354,      0.1611,     -0.0510,      0.2109],
        [     0.0000,      0.6758,      0.2324,      0.5352,      0.0654,     -0.4297,     -0.0747,     -0.1475,      0.1177,      0.2363,     -0.0625,     -0.0723,     -0.0864,     -0.1016,      0.0459],
        [     0.0000,      0.0101,      0.3633,      0.3281,      0.4219,     -0.3867,     -0.0786,     -0.2617,      0.0623,      0.1719,     -0.3242,     -0.1113,     -0.0449,     -0.2344,      0.0376],
        [     0.0000,      0.2305,      0.0708,      0.2158,      0.2129,     -0.3945,     -0.2559,     -0.3281,      0.0391,      0.0168,     -0.3965,     -0.2832,     -0.1201,     -0.2988,      0.0439],
        [     0.0000,      0.0806,      0.2812,      0.0825,      0.1777,     -0.4727,     -0.1758,     -0.4414,      0.1279,     -0.0613,     -0.4766,     -0.1748,     -0.0679,     -0.2012,      0.1572],
        [     0.0000,      0.1406,      0.2109,      0.2461,      0.2949,     -0.3828,     -0.2559,     -0.3301,     -0.1504,      0.0659,     -0.4355,     -0.0413,     -0.1406,     -0.2754,      0.0991]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5046],
        [0.3408],
        [0.2365],
        [0.2104],
        [0.1547],
        [0.1421],
        [0.1267],
        [0.1130],
        [0.1018],
        [0.0935],
        [0.0848],
        [0.0802],
        [0.0744],
        [0.0690]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4941, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2793, 0.3926, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2314, 0.3359, 0.1904, 0.2412, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.2021, 0.2441, 0.2500, 0.1206, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1641, 0.1895, 0.1846, 0.1797, 0.1055, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.1177, 0.1475, 0.1387, 0.1533, 0.1787, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.1738, 0.1289, 0.1348, 0.0938, 0.1211, 0.1157, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1245, 0.1494, 0.1182, 0.1250, 0.0762, 0.1562, 0.0923, 0.0742, 0.0835, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0942, 0.1387, 0.0981, 0.1084, 0.0786, 0.1455, 0.0894, 0.0703, 0.0938, 0.0830, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.1211, 0.0596, 0.0845, 0.0520, 0.1064, 0.1147, 0.0708, 0.0776, 0.1016, 0.1167, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0840, 0.0967, 0.0884, 0.0801, 0.0569, 0.1157, 0.1016, 0.0659, 0.0684, 0.0854, 0.0913, 0.0664, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1079, 0.1084, 0.0815, 0.0576, 0.0938, 0.0854, 0.0581, 0.0625, 0.0640, 0.0654, 0.0498, 0.0659, 0.0000, 0.0000],
        [0.0840, 0.1025, 0.0742, 0.0654, 0.0498, 0.0894, 0.0752, 0.0454, 0.0576, 0.0679, 0.0869, 0.0613, 0.0757, 0.0645, 0.0000],
        [0.0786, 0.0981, 0.0889, 0.0625, 0.0469, 0.0903, 0.0664, 0.0420, 0.0552, 0.0674, 0.0776, 0.0505, 0.0615, 0.0623, 0.0522]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.0266,      0.2383,     -0.2871,     -0.3223,      0.3164,     -0.2373,     -0.2891,     -0.3652,     -0.1826,     -0.3398,     -0.5586,     -0.5977,     -0.2480,     -0.5742],
        [    -0.0000,      0.3359,      0.1602,     -0.1768,     -0.2090,     -0.1240,     -0.0049,     -0.0007,     -0.0530,     -0.1328,      0.0776,     -0.2578,     -0.0211,     -0.0986,      0.0187],
        [    -0.0000,      0.3711,     -0.1943,      0.0403,      0.0251,      0.0383,     -0.1748,     -0.3496,     -0.0225,     -0.2295,      0.1504,     -0.1406,      0.3516,      0.3242,      0.1069],
        [    -0.0000,      0.0942,      0.2871,      0.3066,     -0.4199,      0.2188,      0.1426,     -0.4258,     -0.0840,     -0.1309,     -0.2246,     -0.3730,     -0.0066,      0.1592,     -0.1079],
        [    -0.0000,      0.1475,      0.1211,      0.0957,     -0.4395,      0.0762,     -0.1855,     -0.2969,     -0.1226,     -0.0092,      0.1289,     -0.3926,     -0.0069,      0.1484,     -0.0898],
        [    -0.0000,     -0.1279,      0.0996,      0.0398,      0.1387,      0.2910,     -0.0349,      0.0383,      0.2129,     -0.1709,      0.1367,     -0.2373,      0.2324,      0.1377,      0.0122],
        [    -0.0000,      0.4238,      0.1216,      0.1689,     -0.1953,      0.0605,      0.0154,      0.0376,      0.0050,      0.1514,      0.4102,     -0.1602,      0.4141,      0.2344,      0.1484],
        [    -0.0000,      0.1836,     -0.0525,      0.0049,     -0.4902,      0.2236,     -0.3027,     -0.5156,     -0.3984,     -0.2090,      0.0981,     -0.3828,     -0.1855,     -0.0194,     -0.1245],
        [    -0.0000,      0.3848,      0.0400,      0.1377,     -0.1855,      0.4316,     -0.0530,     -0.2930,     -0.0083,     -0.1289,      0.1787,     -0.4492,      0.0024,     -0.0532,     -0.0072],
        [    -0.0000,      0.2471,     -0.4629,     -0.1113,     -0.5977,      0.1177,      0.1943,     -0.2910,     -0.1953,      0.0708,      0.2109,     -0.1641,      0.1182,      0.1602,      0.0615],
        [    -0.0000,      0.1387,      0.0493,     -0.0500,     -0.3906,      0.3203,      0.1885,     -0.2432,     -0.2061,      0.0184,      0.0835,     -0.2363,     -0.0066,     -0.0767,     -0.0469],
        [    -0.0000,      0.0811,      0.0884,     -0.1992,     -0.5469,     -0.0586,     -0.1514,     -0.5391,     -0.4648,     -0.4375,     -0.4160,     -0.6914,     -0.4082,     -0.3691,     -0.5742],
        [    -0.0000,      0.1992,     -0.1216,     -0.2471,     -0.5234,      0.0613,     -0.1099,     -0.6172,     -0.3789,     -0.2129,      0.0327,     -0.3164,     -0.1030,     -0.2637,     -0.2695],
        [    -0.0000,      0.2217,      0.1206,     -0.2314,     -0.5195,      0.1348,     -0.1729,     -0.6328,     -0.3574,     -0.1582,     -0.0159,     -0.4434,     -0.2490,     -0.2354,     -0.4121]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5435],
        [0.3496],
        [0.2677],
        [0.2027],
        [0.1666],
        [0.1379],
        [0.1333],
        [0.1135],
        [0.1005],
        [0.0949],
        [0.0885],
        [0.0817],
        [0.0738],
        [0.0677]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4453, 0.5547, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3691, 0.3008, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3164, 0.2695, 0.1299, 0.2832, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1758, 0.1152, 0.2197, 0.2598, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1875, 0.1533, 0.1816, 0.1455, 0.1885, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1270, 0.1055, 0.1436, 0.1118, 0.1865, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1465, 0.1177, 0.0991, 0.1338, 0.1494, 0.1172, 0.1445, 0.0923, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.0913, 0.1011, 0.0991, 0.1416, 0.1060, 0.1543, 0.0781, 0.1245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.0864, 0.0933, 0.0972, 0.1270, 0.1074, 0.1196, 0.0693, 0.1074, 0.0786, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0728, 0.0981, 0.0908, 0.1357, 0.0771, 0.1035, 0.0630, 0.0913, 0.0630, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0742, 0.0869, 0.0835, 0.0811, 0.0845, 0.1050, 0.0479, 0.1016, 0.0659, 0.1035, 0.0708, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.0571, 0.0781, 0.0757, 0.1050, 0.0752, 0.0938, 0.0513, 0.0913, 0.0554, 0.0962, 0.0635, 0.0713, 0.0000, 0.0000],
        [0.0889, 0.0645, 0.0630, 0.0830, 0.1011, 0.0742, 0.0928, 0.0498, 0.0796, 0.0498, 0.0781, 0.0564, 0.0552, 0.0640, 0.0000],
        [0.0771, 0.0640, 0.0679, 0.0635, 0.0967, 0.0549, 0.0859, 0.0444, 0.0830, 0.0491, 0.0801, 0.0542, 0.0605, 0.0645, 0.0537]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.2197,     -0.0035,      0.3730,      0.0415,     -0.0894,      0.0811,      0.4180,     -0.1011,     -0.0630,      0.2119,      0.1104,      0.2285,      0.0210,      0.1001],
        [    -0.0000,     -0.2041,     -0.1172,      0.0410,      0.3320,      0.1826,      0.2109,      0.1040,      0.0422,     -0.0347,      0.1357,     -0.0186,      0.2598,      0.0520,      0.2197],
        [     0.0000,     -0.1631,     -0.8906,     -0.1089,     -0.1245,     -0.0063,     -0.2451,     -0.2383,     -0.3301,     -0.4160,      0.0016,     -0.3008,      0.1729,      0.0022,      0.0197],
        [     0.0000,     -0.4258,      0.2188,      0.3867,      0.2676,      0.2197,      0.1875,     -0.0679,      0.0713,     -0.1133,      0.0457,     -0.0259,     -0.0439,     -0.0679,     -0.1240],
        [     0.0000,     -0.2012,     -0.0315,     -0.2559,      0.0042,     -0.2754,     -0.1670,     -0.4980,      0.0693,     -0.2451,      0.1465,     -0.1465,     -0.0194,      0.0781,     -0.0864],
        [     0.0000,     -0.2314,     -0.4141,     -0.1069,     -0.3555,      0.1572,      0.0410,     -0.5898,      0.2070,     -0.2080,      0.3027,     -0.1787,      0.0376,     -0.0762,     -0.2373],
        [     0.0000,     -0.2178,     -0.3906,     -0.0903,      0.0179,     -0.2197,     -0.0112,     -0.4590,     -0.2090,     -0.5547,     -0.0254,     -0.2852,     -0.1738,     -0.2656,     -0.4141],
        [     0.0000,     -0.1338,     -0.0320,     -0.0510,      0.3047,      0.0184,      0.3906,     -0.2871,      0.1787,     -0.2490,      0.1846,     -0.1533,      0.0635,     -0.0698,     -0.2041],
        [     0.0000,     -0.2754,     -0.2021,     -0.1572,      0.1113,     -0.0598,      0.0508,     -0.4941,     -0.0598,     -0.3730,     -0.0205,     -0.3086,     -0.1777,     -0.2559,     -0.4609],
        [     0.0000,     -0.3477,     -0.0500,     -0.1270,      0.2715,     -0.2910,      0.0048,     -0.4941,     -0.1201,     -0.4902,     -0.0208,     -0.3574,     -0.1650,     -0.2061,     -0.3340],
        [     0.0000,     -0.2480,     -0.0879,     -0.1260,     -0.1572,     -0.1157,      0.0996,     -0.6836,      0.0698,     -0.3613,      0.0869,     -0.2949,     -0.2471,     -0.1826,     -0.3105],
        [     0.0000,     -0.4141,     -0.1021,     -0.1357,      0.1953,     -0.1387,      0.0820,     -0.5234,      0.0522,     -0.4434,      0.1084,     -0.3125,     -0.1943,     -0.1484,     -0.2793],
        [     0.0000,     -0.3223,     -0.3418,     -0.0654,      0.1338,     -0.1738,      0.0439,     -0.5742,     -0.1094,     -0.5781,     -0.1245,     -0.4512,     -0.4746,     -0.3262,     -0.4785],
        [     0.0000,     -0.1865,     -0.1309,     -0.1953,      0.2236,     -0.3418,      0.1084,     -0.5508,      0.0732,     -0.4551,      0.0388,     -0.3574,     -0.2422,     -0.1807,     -0.3633]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4888],
        [0.3201],
        [0.2514],
        [0.1957],
        [0.1713],
        [0.1364],
        [0.1306],
        [0.1158],
        [0.1037],
        [0.0938],
        [0.0864],
        [0.0820],
        [0.0770],
        [0.0707]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4863, 0.5117, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.3281, 0.4355, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.3125, 0.2021, 0.2715, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.2246, 0.1533, 0.2266, 0.2578, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1865, 0.1855, 0.2207, 0.1484, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.1338, 0.1245, 0.2129, 0.1436, 0.1465, 0.1621, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0850, 0.0923, 0.1226, 0.1445, 0.1416, 0.1357, 0.1426, 0.1348, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0781, 0.1172, 0.1040, 0.1270, 0.1602, 0.1113, 0.1162, 0.0928, 0.0938, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0583, 0.0693, 0.0791, 0.1133, 0.1465, 0.1016, 0.1079, 0.1211, 0.1108, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.0771, 0.0786, 0.0996, 0.1328, 0.0903, 0.0884, 0.0845, 0.0918, 0.0806, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.0684, 0.0684, 0.0884, 0.1201, 0.0869, 0.0791, 0.0889, 0.0952, 0.0693, 0.0962, 0.0835, 0.0000, 0.0000, 0.0000],
        [0.0659, 0.0669, 0.0703, 0.0894, 0.1147, 0.0776, 0.0742, 0.0791, 0.0718, 0.0559, 0.0918, 0.0713, 0.0713, 0.0000, 0.0000],
        [0.0613, 0.0713, 0.0703, 0.0933, 0.1084, 0.0654, 0.0623, 0.0703, 0.0654, 0.0505, 0.0796, 0.0615, 0.0640, 0.0762, 0.0000],
        [0.0593, 0.0757, 0.0571, 0.0898, 0.1006, 0.0603, 0.0571, 0.0625, 0.0640, 0.0469, 0.0801, 0.0574, 0.0588, 0.0723, 0.0581]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [    -0.0000,      0.0510,     -0.1484,      0.0525,     -0.3262,     -0.4785,     -0.4004,     -0.5742,     -0.5625,     -0.3809,      0.0503,     -0.2891,     -0.3613,     -0.2891,     -0.2051],
        [     0.0000,      0.3301,      0.6094,      0.5977,      0.7930,      1.0938,      0.9414,      0.9531,      0.6719,      0.7266,      0.6523,      0.7383,      0.4160,      0.6250,      0.5742],
        [    -0.0000,      0.3828,     -0.0564,      0.2383,      0.3184,      0.4004,      0.4062,      0.5156,      0.1582,      0.2676,      0.1963,      0.3066,      0.3613,      0.2852,      0.2754],
        [    -0.0000,      0.4902,      0.1040,      0.4941,      0.6250,      0.4844,      0.4199,      0.5117,      0.2520,      0.1436,      0.4062,      0.3242,      0.4199,      0.5195,      0.2158],
        [    -0.0000,      0.4824,      0.4785,      0.6562,      0.2598,      0.2236,      0.3438,      0.3848,      0.4180,      0.3965,      0.5703,      0.4297,      0.3633,      0.5430,      0.4277],
        [    -0.0000,      0.5664,      0.4922,      1.0312,      0.6367,      0.6562,      0.7539,      0.6992,      0.7266,      0.7578,      0.9375,      0.8242,      0.7305,      0.8867,      0.7266],
        [    -0.0000,      0.0830,      0.3652,      0.5312,      0.5117,      0.4688,      0.5156,      0.4570,      0.3262,      0.4062,      0.6367,      0.4805,      0.4902,      0.5938,      0.4199],
        [    -0.0000,      0.4082,      0.2891,      0.4844,      0.7227,      0.3574,      0.3984,      0.1738,      0.1836,      0.0571,      0.4414,      0.2656,      0.2793,      0.2891,      0.2637],
        [    -0.0000,      0.1738,      0.3066,      0.6641,      0.9180,      0.5508,      0.6172,      0.7305,      0.6406,      0.4531,      0.7422,      0.7578,      0.6836,      0.7422,      0.6055],
        [    -0.0000,      0.1299,      0.1465,      0.3848,      0.6758,      0.2891,      0.2656,      0.2217,      0.3008,      0.1748,      0.4727,      0.3984,      0.3418,      0.3848,      0.3320],
        [    -0.0000,      0.2217,      0.2227,      0.4766,      0.7852,      0.4609,      0.3672,      0.4844,      0.5508,      0.2314,      0.5586,      0.4180,      0.4316,      0.5391,      0.4336],
        [    -0.0000,      0.0135,      0.0630,      0.3027,      0.5547,      0.1660,      0.1167,      0.1826,      0.0874,     -0.1621,      0.3340,      0.0752,      0.0752,      0.2559,      0.0767],
        [    -0.0000,      0.1475,      0.1367,      0.4160,      0.5703,      0.0654,      0.0132,      0.1348,      0.0603,     -0.1953,      0.2617,      0.0022,      0.0442,      0.2158,      0.0535],
        [    -0.0000,      0.2432,     -0.0376,      0.4180,      0.5273,      0.0173,     -0.0359,      0.0532,      0.0747,     -0.2373,      0.3008,     -0.0330,     -0.0076,      0.1992,     -0.0220]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5146],
        [0.3306],
        [0.2467],
        [0.2003],
        [0.1726],
        [0.1436],
        [0.1320],
        [0.1208],
        [0.1053],
        [0.0987],
        [0.0899],
        [0.0838],
        [0.0796],
        [0.0754]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5117, 0.4883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3398, 0.2734, 0.3867, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2422, 0.2832, 0.2793, 0.1963, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.2188, 0.2109, 0.1641, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1953, 0.2578, 0.0913, 0.1226, 0.1602, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1553, 0.1914, 0.1196, 0.1074, 0.1201, 0.1738, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1406, 0.1030, 0.1133, 0.1118, 0.1504, 0.1074, 0.1387, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1172, 0.1084, 0.0859, 0.0938, 0.0928, 0.1406, 0.1094, 0.1211, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1084, 0.1260, 0.0781, 0.0771, 0.0942, 0.1055, 0.0928, 0.1001, 0.1152, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0923, 0.1060, 0.0576, 0.0645, 0.0781, 0.1001, 0.0942, 0.0947, 0.0981, 0.1016, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0854, 0.0977, 0.0540, 0.0605, 0.0796, 0.0898, 0.0796, 0.0850, 0.0908, 0.0884, 0.0972, 0.0918, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.0942, 0.0530, 0.0579, 0.0786, 0.0850, 0.0737, 0.0767, 0.0781, 0.0771, 0.0884, 0.0801, 0.0737, 0.0000, 0.0000],
        [0.0762, 0.0825, 0.0488, 0.0488, 0.0737, 0.0747, 0.0747, 0.0747, 0.0747, 0.0742, 0.0840, 0.0732, 0.0688, 0.0718, 0.0000],
        [0.0737, 0.0830, 0.0464, 0.0493, 0.0649, 0.0723, 0.0669, 0.0688, 0.0693, 0.0684, 0.0767, 0.0713, 0.0623, 0.0669, 0.0598]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000,      0.0000],
        [     0.0000,     -0.0476,     -0.5000,     -0.3320,     -0.2500,     -0.1045,     -0.1924,     -0.2500,     -0.0830,      0.0270,      0.0410,     -0.2031,     -0.0269,     -0.1177,     -0.2422],
        [     0.0000,     -0.2148,      0.1289,     -0.2773,     -0.3633,      0.2334,      0.1396,      0.1465,      0.3125,      0.4004,      0.3281,      0.4277,      0.3848,      0.4668,      0.3691],
        [    -0.0000,      0.1582,      0.1416,     -0.2100,      0.4238,      0.0466,      0.0845,      0.1514,      0.2871,      0.1250,      0.1885,      0.3027,      0.3984,      0.4043,      0.3750],
        [     0.0000,      0.0913,      0.0525,     -0.1963,      0.0277,      0.0869,     -0.0586,     -0.0332,      0.1260,      0.0791,      0.0747,      0.0075,      0.0889,      0.1484,      0.0840],
        [     0.0000,      0.2812,     -0.7617,     -0.4629,     -0.1943,     -0.1221,     -0.3184,     -0.3242,     -0.0483,     -0.0143,      0.1670,      0.2129,      0.1621,      0.2812,      0.2393],
        [     0.0000,      0.2080,     -0.2617,     -0.3730,     -0.2598,      0.1099,     -0.1621,      0.0422,      0.2793,      0.1494,      0.2812,      0.2158,      0.2080,      0.2852,      0.2070],
        [     0.0000,      0.0422,     -0.2695,     -0.1748,     -0.1865,      0.1133,     -0.2266,      0.0300,      0.1953,      0.1138,      0.3066,      0.2871,      0.3203,      0.3398,      0.2656],
        [     0.0000,     -0.0781,     -0.3105,     -0.2246,     -0.2305,      0.1855,     -0.0659,      0.0332,      0.1084,      0.1011,      0.2832,      0.1943,      0.1543,      0.1553,      0.0557],
        [     0.0000,      0.1514,     -0.3301,     -0.3398,     -0.1426,     -0.0297,     -0.1543,     -0.0820,      0.0581,     -0.0566,      0.0125,     -0.0237,     -0.0554,     -0.0674,     -0.1465],
        [     0.0000,      0.1377,     -0.4707,     -0.3613,     -0.1680,      0.0835,      0.0194,      0.0253,      0.0613,      0.0972,      0.2070,      0.2422,      0.1230,      0.1641,      0.1543],
        [     0.0000,      0.1338,     -0.4629,     -0.3477,     -0.0747,      0.0452,     -0.0718,     -0.0081,      0.0601,      0.0315,      0.1240,      0.0684,     -0.0093,      0.0361,     -0.0693],
        [     0.0000,      0.1182,     -0.4551,     -0.3691,     -0.0593,      0.0168,     -0.1270,     -0.0840,     -0.0688,     -0.0796,      0.0574,     -0.0439,     -0.1240,     -0.0500,     -0.1494],
        [     0.0000,      0.0796,     -0.4473,     -0.4453,     -0.0359,     -0.0166,     -0.0227,     -0.0186,     -0.0206,     -0.0293,      0.0962,     -0.0408,     -0.1001,     -0.0618,     -0.1445],
        [     0.0000,      0.1211,     -0.4590,     -0.4023,     -0.1279,     -0.0192,     -0.0923,     -0.0674,     -0.0598,     -0.0718,      0.0435,     -0.0344,     -0.1680,     -0.0986,     -0.2061]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4896],
        [0.3140],
        [0.2498],
        [0.1702],
        [0.1531],
        [0.1337],
        [0.1133],
        [0.0977],
        [0.0885],
        [0.0850],
        [0.0763],
        [0.0738],
        [0.0689],
        [0.0665]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4355, 0.5625, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3574, 0.3203, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.2773, 0.1943, 0.3418, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1436, 0.3086, 0.2080, 0.2148, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1377, 0.2207, 0.1650, 0.2061, 0.1318, 0.1377, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1494, 0.1865, 0.1719, 0.1387, 0.1094, 0.1377, 0.1074, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1177, 0.1709, 0.1309, 0.1299, 0.1021, 0.1201, 0.1128, 0.1147, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1367, 0.1758, 0.1426, 0.1201, 0.0820, 0.0879, 0.0806, 0.0923, 0.0820, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1040, 0.1641, 0.1235, 0.0874, 0.0786, 0.0864, 0.0894, 0.0962, 0.0815, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1128, 0.1709, 0.0977, 0.0791, 0.0605, 0.0742, 0.0771, 0.0806, 0.0718, 0.0845, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.1436, 0.0908, 0.0723, 0.0625, 0.0635, 0.0674, 0.0728, 0.0669, 0.0767, 0.0825, 0.0933, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.1377, 0.0820, 0.0601, 0.0520, 0.0571, 0.0649, 0.0737, 0.0630, 0.0718, 0.0771, 0.0874, 0.0767, 0.0000, 0.0000],
        [0.0923, 0.1299, 0.0703, 0.0596, 0.0505, 0.0540, 0.0615, 0.0688, 0.0564, 0.0659, 0.0698, 0.0791, 0.0674, 0.0747, 0.0000],
        [0.0801, 0.1260, 0.0723, 0.0498, 0.0447, 0.0522, 0.0564, 0.0630, 0.0542, 0.0630, 0.0640, 0.0737, 0.0645, 0.0674, 0.0688]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,      0.0000,      0.0000,      0.0000,     -0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.2578,     -0.2471,      0.0889,     -0.2871,     -0.0623,     -0.2002,     -0.2520,     -0.3027,     -0.3828,     -0.2070,     -0.1719,     -0.2871,     -0.1807,     -0.1875],
        [     0.0000,     -0.1084,     -0.0991,      0.1309,      0.0703,      0.3965,      0.1309,      0.4473,      0.1357,      0.2949,      0.2695,      0.2412,      0.1729,      0.1729,      0.2188],
        [     0.0000,      0.3965,      0.0405,      0.6055,      0.5078,      0.4727,      0.3535,      0.3906,      0.4570,      0.3145,      0.3281,      0.4766,      0.2812,      0.2891,      0.2695],
        [    -0.0000,      0.7617,      0.3672,      0.3984,     -0.1367,      0.2207,      0.2656,      0.2109,      0.0593,      0.1475,      0.0073,      0.1348,      0.0096,      0.0374,      0.0898],
        [     0.0000,      0.4727,      0.1855,      0.4062,     -0.0381,      0.0052,     -0.0294,     -0.0023,     -0.0284,     -0.1279,     -0.0236,      0.0186,     -0.0903,     -0.0564,     -0.0425],
        [     0.0000,      0.2207,      0.1406,     -0.0747,     -0.3086,     -0.0840,     -0.3301,     -0.2490,     -0.2432,     -0.1436,     -0.1221,     -0.1235,     -0.3242,     -0.2490,     -0.2275],
        [     0.0000,      0.3711,      0.1084,      0.1001,     -0.1436,      0.0183,     -0.0415,     -0.0251,     -0.0928,     -0.0874,     -0.0305,      0.0413,     -0.1245,     -0.0757,     -0.0491],
        [     0.0000,      0.2520,      0.0422,     -0.1270,     -0.5117,     -0.4375,     -0.5273,     -0.3906,     -0.5117,     -0.3730,     -0.3047,     -0.1777,     -0.2695,     -0.1914,     -0.1729],
        [     0.0000,      0.4590,      0.1748,     -0.1748,     -0.2812,     -0.1826,     -0.1514,     -0.0757,     -0.2422,     -0.1553,     -0.1035,     -0.0374,     -0.1992,     -0.1582,     -0.1455],
        [     0.0000,      0.4160,     -0.1455,     -0.3594,     -0.6211,     -0.4219,     -0.3809,     -0.3418,     -0.4551,     -0.2910,     -0.2197,     -0.0864,     -0.2773,     -0.1650,     -0.1494],
        [     0.0000,      0.2930,     -0.1670,     -0.3945,     -0.5391,     -0.5234,     -0.4609,     -0.3867,     -0.4688,     -0.3359,     -0.2637,     -0.1396,     -0.2598,     -0.1855,     -0.1523],
        [     0.0000,      0.3555,     -0.1650,     -0.4746,     -0.6172,     -0.5273,     -0.3984,     -0.2676,     -0.4238,     -0.2988,     -0.2256,     -0.0977,     -0.2295,     -0.1582,     -0.1533],
        [     0.0000,      0.3379,     -0.2734,     -0.4375,     -0.6016,     -0.5391,     -0.4082,     -0.2930,     -0.4941,     -0.3359,     -0.2793,     -0.1582,     -0.3125,     -0.2158,     -0.2100],
        [     0.0000,      0.4473,     -0.1025,     -0.4766,     -0.5859,     -0.4277,     -0.3535,     -0.2441,     -0.3906,     -0.2393,     -0.2285,     -0.0825,     -0.2148,     -0.1729,     -0.1523]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4793],
        [0.3315],
        [0.2375],
        [0.1964],
        [0.1723],
        [0.1462],
        [0.1230],
        [0.1182],
        [0.1029],
        [0.0927],
        [0.0923],
        [0.0818],
        [0.0776],
        [0.0741]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3750, 0.6250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3770, 0.3926, 0.2314, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3242, 0.2227, 0.2061, 0.2461, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1895, 0.1885, 0.2158, 0.2246, 0.1807, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.1338, 0.1855, 0.1641, 0.1680, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1201, 0.1621, 0.1167, 0.1543, 0.1455, 0.1709, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1191, 0.0977, 0.1230, 0.1201, 0.1138, 0.1123, 0.1406, 0.1729, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.0776, 0.0972, 0.0791, 0.1064, 0.0986, 0.1279, 0.1631, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.0562, 0.0889, 0.0737, 0.0840, 0.0835, 0.1143, 0.1504, 0.1240, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0579, 0.0747, 0.0593, 0.0635, 0.0698, 0.1050, 0.1240, 0.1162, 0.1367, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.0486, 0.0684, 0.0569, 0.0635, 0.0664, 0.0962, 0.1113, 0.0986, 0.1128, 0.0962, 0.1172, 0.0000, 0.0000, 0.0000],
        [0.0693, 0.0491, 0.0613, 0.0498, 0.0669, 0.0562, 0.0811, 0.0874, 0.0859, 0.0967, 0.0811, 0.1006, 0.1143, 0.0000, 0.0000],
        [0.0549, 0.0413, 0.0510, 0.0366, 0.0510, 0.0498, 0.0771, 0.0806, 0.0820, 0.0942, 0.0771, 0.0986, 0.1089, 0.0967, 0.0000],
        [0.0537, 0.0391, 0.0488, 0.0378, 0.0505, 0.0452, 0.0718, 0.0723, 0.0737, 0.0830, 0.0688, 0.0869, 0.0972, 0.0845, 0.0859]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [     0.0000,      0.5117,      0.0771,     -0.0520,      0.3203,     -0.0087,     -0.1670,      0.2051,      0.2988,      0.2451,      0.3125,      0.3301,      0.3516,      0.3047,      0.3027],
        [    -0.0000,      0.0400,     -0.4863,      0.2031,     -0.3047,     -0.2930,     -0.4434,      0.0214,     -0.1592,     -0.1738,     -0.1943,     -0.1797,     -0.1465,     -0.2520,     -0.2656],
        [    -0.0000,     -0.3770,     -0.4551,     -0.2793,     -0.4395,     -0.6758,     -0.5938,     -0.3789,     -0.4648,     -0.2891,     -0.3184,     -0.3730,     -0.2148,     -0.2383,     -0.2197],
        [    -0.0000,     -0.0061,      0.1270,      0.1689,     -0.0471,     -0.0581,      0.0496,      0.3848,      0.3867,      0.4141,      0.3633,      0.4551,      0.5234,      0.4609,      0.5000],
        [    -0.0000,     -0.2812,      0.0425,     -0.0815,     -0.0588,     -0.0347,     -0.1045,      0.0410,      0.0361,      0.1279,     -0.0093,      0.0732,      0.1436,      0.1494,      0.1270],
        [    -0.0000,     -0.0801,      0.2217,     -0.1084,      0.1699,      0.1104,      0.2754,      0.6172,      0.4824,      0.5898,      0.4238,      0.5039,      0.7305,      0.6328,      0.6914],
        [    -0.0000,     -0.2002,      0.0342,      0.0089,     -0.0464,     -0.0598,      0.1680,      0.3750,      0.2061,      0.3730,      0.2598,      0.3887,      0.5312,      0.4414,      0.4355],
        [    -0.0000,     -0.2051,      0.0195,     -0.1846,      0.1128,      0.0356,      0.2969,      0.5391,      0.4863,      0.5820,      0.3789,      0.5078,      0.7344,      0.6250,      0.6484],
        [    -0.0000,     -0.3066,      0.1514,     -0.0320,      0.0967,      0.0889,      0.4062,      0.6836,      0.4883,      0.6680,      0.4219,      0.6094,      0.7773,      0.6758,      0.6836],
        [    -0.0000,     -0.3203,     -0.0596,     -0.2930,     -0.2256,     -0.1299,      0.2773,      0.4434,      0.3809,      0.5391,      0.3555,      0.5781,      0.7148,      0.6094,      0.6289],
        [    -0.0000,     -0.2695,      0.0737,     -0.1108,     -0.0033,      0.0403,      0.4121,      0.5586,      0.4395,      0.5742,      0.4121,      0.6094,      0.7461,      0.6250,      0.6406],
        [     0.0000,     -0.3438,     -0.1235,     -0.3301,     -0.0347,     -0.2100,      0.1582,      0.2324,      0.2188,      0.3340,      0.1592,      0.3730,      0.5000,      0.3672,      0.3887],
        [     0.0000,     -0.2852,     -0.0703,     -0.4023,     -0.0742,     -0.0981,      0.3398,      0.3848,      0.4043,      0.5430,      0.3398,      0.5859,      0.6836,      0.5664,      0.5781],
        [     0.0000,     -0.3145,     -0.0972,     -0.3496,     -0.0620,     -0.1719,      0.2871,      0.2969,      0.3184,      0.4375,      0.2520,      0.4824,      0.5898,      0.4551,      0.4727]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4863],
        [0.3359],
        [0.2727],
        [0.1949],
        [0.1639],
        [0.1420],
        [0.1250],
        [0.1084],
        [0.0974],
        [0.0902],
        [0.0811],
        [0.0748],
        [0.0687],
        [0.0642]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4727, 0.5273, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3789, 0.3906, 0.2295, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2070, 0.2236, 0.2656, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2041, 0.2158, 0.1807, 0.2090, 0.1904, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1680, 0.1777, 0.1777, 0.1797, 0.1494, 0.1484, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.1328, 0.1895, 0.1914, 0.1250, 0.1040, 0.0967, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1011, 0.1494, 0.1475, 0.1240, 0.1172, 0.0947, 0.1309, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1216, 0.0898, 0.1475, 0.1475, 0.1108, 0.1021, 0.0845, 0.1040, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1074, 0.0723, 0.1436, 0.1406, 0.1064, 0.0820, 0.0830, 0.0996, 0.0859, 0.0781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0967, 0.0635, 0.1289, 0.1357, 0.0942, 0.0771, 0.0723, 0.0903, 0.0825, 0.0723, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0952, 0.0593, 0.1191, 0.1318, 0.0869, 0.0703, 0.0659, 0.0820, 0.0742, 0.0645, 0.0786, 0.0728, 0.0000, 0.0000, 0.0000],
        [0.0830, 0.0486, 0.1084, 0.1089, 0.0786, 0.0674, 0.0645, 0.0776, 0.0728, 0.0613, 0.0806, 0.0737, 0.0742, 0.0000, 0.0000],
        [0.0791, 0.0432, 0.0938, 0.0991, 0.0786, 0.0610, 0.0603, 0.0747, 0.0684, 0.0581, 0.0762, 0.0684, 0.0688, 0.0713, 0.0000],
        [0.0737, 0.0410, 0.0884, 0.0996, 0.0698, 0.0554, 0.0542, 0.0684, 0.0635, 0.0532, 0.0713, 0.0645, 0.0649, 0.0674, 0.0645]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,      0.1084,      0.4355,      0.7109,      0.3965,      0.3496,     -0.1201,      0.2988,      0.2285,     -0.1357,     -0.2734,     -0.2695,     -0.3398,     -0.3516,     -0.3867],
        [    -0.0000,      0.0294,     -0.5000,     -0.0308,      0.2119,     -0.1553,     -0.0781,     -0.0574,     -0.1650,     -0.0815,     -0.2598,     -0.2461,     -0.2129,     -0.2754,     -0.2637],
        [     0.0000,      0.0796,      0.2480,      0.3887,      0.1758,      0.1406,      0.1504,      0.1030,      0.0381,      0.0811,     -0.1094,     -0.0957,     -0.0112,     -0.1138,     -0.0874],
        [     0.0000,      0.0552,     -0.1226,      0.0266,     -0.0674,     -0.1211,     -0.1719,     -0.1406,     -0.2109,     -0.1924,     -0.1475,     -0.2285,     -0.1914,     -0.2432,     -0.2012],
        [     0.0000,      0.0571,      0.0596,      0.0698,     -0.1167,     -0.1230,     -0.4219,     -0.1846,     -0.1348,     -0.2383,     -0.0204,     -0.1084,     -0.0654,     -0.0381,     -0.0378],
        [     0.0000,     -0.1943,      0.1621,      0.1689,     -0.2559,     -0.4414,     -0.5117,     -0.3926,     -0.3809,     -0.4258,     -0.2324,     -0.3242,     -0.3047,     -0.2354,     -0.2559],
        [     0.0000,     -0.2949,      0.0952,      0.0801,     -0.0903,     -0.1484,     -0.3594,     -0.0354,     -0.1641,     -0.3066,     -0.1465,     -0.2383,     -0.1973,     -0.1641,     -0.2236],
        [     0.0000,     -0.3008,      0.1934,      0.1924,     -0.0913,     -0.1729,     -0.3633,     -0.1562,     -0.2715,     -0.3418,     -0.2041,     -0.2734,     -0.3047,     -0.2656,     -0.3008],
        [     0.0000,     -0.3965,      0.2930,      0.2715,     -0.0086,     -0.2676,     -0.2559,     -0.0762,     -0.2236,     -0.3203,     -0.1157,     -0.2168,     -0.2061,     -0.2109,     -0.2520],
        [     0.0000,     -0.4238,      0.2832,      0.3379,     -0.0286,     -0.2266,     -0.2910,     -0.0684,     -0.1572,     -0.2910,     -0.1182,     -0.2080,     -0.1924,     -0.1670,     -0.2070],
        [     0.0000,     -0.4766,      0.2207,      0.3203,     -0.0913,     -0.3027,     -0.3711,     -0.1533,     -0.2500,     -0.3965,     -0.1953,     -0.2754,     -0.2852,     -0.2363,     -0.2871],
        [     0.0000,     -0.5352,      0.2695,      0.2754,     -0.0513,     -0.2051,     -0.2480,     -0.0654,     -0.1299,     -0.3008,     -0.0277,     -0.1191,     -0.1104,     -0.0801,     -0.1348],
        [     0.0000,     -0.6055,      0.1709,      0.2285,     -0.0041,     -0.2559,     -0.2676,     -0.0557,     -0.1465,     -0.3086,     -0.0354,     -0.1455,     -0.1377,     -0.1011,     -0.1602],
        [     0.0000,     -0.5859,      0.1816,      0.3008,     -0.0515,     -0.2871,     -0.3105,     -0.0757,     -0.1514,     -0.3281,     -0.0337,     -0.1367,     -0.1270,     -0.0884,     -0.1367]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4831],
        [0.3314],
        [0.2615],
        [0.2051],
        [0.1816],
        [0.1619],
        [0.1389],
        [0.1220],
        [0.1086],
        [0.0965],
        [0.0887],
        [0.0800],
        [0.0731],
        [0.0669]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.4668, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3945, 0.3770, 0.2266, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3340, 0.2695, 0.1816, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2168, 0.3184, 0.1289, 0.1836, 0.1523, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.2480, 0.1250, 0.1543, 0.1758, 0.1738, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.2197, 0.0942, 0.1162, 0.1641, 0.1445, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1611, 0.0635, 0.1118, 0.1484, 0.1309, 0.1416, 0.1592, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0635, 0.1523, 0.0608, 0.0894, 0.1250, 0.1128, 0.1260, 0.1328, 0.1367, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0557, 0.1299, 0.0615, 0.0791, 0.1079, 0.0991, 0.1128, 0.1177, 0.1221, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.1201, 0.0520, 0.0684, 0.1016, 0.0898, 0.0972, 0.1064, 0.1113, 0.1060, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.0918, 0.0500, 0.0625, 0.0859, 0.0781, 0.0879, 0.1001, 0.1006, 0.0991, 0.0962, 0.1021, 0.0000, 0.0000, 0.0000],
        [0.0408, 0.0967, 0.0427, 0.0588, 0.0806, 0.0742, 0.0820, 0.0918, 0.0913, 0.0908, 0.0840, 0.0894, 0.0771, 0.0000, 0.0000],
        [0.0361, 0.0835, 0.0405, 0.0522, 0.0747, 0.0679, 0.0767, 0.0898, 0.0864, 0.0850, 0.0781, 0.0830, 0.0723, 0.0742, 0.0000],
        [0.0342, 0.0815, 0.0381, 0.0461, 0.0679, 0.0623, 0.0703, 0.0830, 0.0801, 0.0791, 0.0732, 0.0771, 0.0679, 0.0693, 0.0693]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000,     -0.0000],
        [    -0.0000,     -0.1357,     -0.0454,     -0.0928,     -0.0023,     -0.1504,      0.0457,      0.1250,      0.0752,      0.0649,      0.0212,      0.1245,      0.0223,      0.1221,      0.1216],
        [    -0.0000,     -0.0454,     -0.5547,     -0.5430,     -0.3965,     -0.2832,     -0.1572,     -0.3789,     -0.2988,     -0.3340,     -0.1885,     -0.0967,     -0.1826,     -0.1230,     -0.0713],
        [     0.0000,     -0.2100,     -0.6055,     -0.4414,     -0.5938,     -0.2266,     -0.1865,     -0.3027,     -0.2295,     -0.3516,     -0.3027,     -0.3164,     -0.3027,     -0.2852,     -0.2539],
        [     0.0000,      0.3828,     -0.5234,     -0.1650,     -0.3535,     -0.1768,      0.0038,     -0.0269,      0.0383,     -0.0359,      0.0366,      0.0835,     -0.0082,      0.0237,      0.0723],
        [     0.0000,      0.7031,      0.0205,      0.2266,      0.3574,      0.3457,      0.5000,      0.4102,      0.5430,      0.4141,      0.4395,      0.4512,      0.3574,      0.3926,      0.3945],
        [    -0.0000,      0.6797,     -0.1641,      0.0449,      0.3867,      0.2637,      0.2949,      0.2910,      0.4160,      0.3008,      0.3711,      0.4219,      0.3457,      0.3945,      0.4492],
        [     0.0000,      0.6562,     -0.2754,      0.2910,      0.5703,      0.4492,      0.5234,      0.6445,      0.6602,      0.4863,      0.6055,      0.6562,      0.5000,      0.5664,      0.5781],
        [     0.0000,      0.8789,     -0.0449,      0.3418,      0.6758,      0.5742,      0.6875,      0.7383,      0.7656,      0.6367,      0.6680,      0.6953,      0.5312,      0.5820,      0.5820],
        [    -0.0000,      0.8477,      0.1016,      0.3496,      0.6602,      0.5742,      0.7070,      0.7500,      0.7852,      0.7148,      0.7266,      0.7773,      0.6328,      0.6719,      0.6797],
        [     0.0000,      0.9844,      0.1475,      0.4199,      0.8164,      0.6914,      0.7695,      0.8594,      0.9062,      0.8594,      0.8242,      0.8906,      0.7539,      0.7812,      0.7930],
        [    -0.0000,      0.7148,      0.1079,      0.3301,      0.6484,      0.5508,      0.6680,      0.8008,      0.8086,      0.7891,      0.7617,      0.8164,      0.6875,      0.7188,      0.7266],
        [    -0.0000,      0.8633,      0.0469,      0.3652,      0.6797,      0.5977,      0.6992,      0.8125,      0.8047,      0.8008,      0.7188,      0.7812,      0.6328,      0.6641,      0.6641],
        [    -0.0000,      0.8320,      0.1128,      0.3633,      0.7227,      0.6289,      0.7461,      0.9102,      0.8711,      0.8516,      0.7695,      0.8281,      0.6875,      0.7148,      0.7109],
        [    -0.0000,      0.8672,      0.1055,      0.3008,      0.6875,      0.6016,      0.7227,      0.8906,      0.8516,      0.8398,      0.7617,      0.8164,      0.6836,      0.7070,      0.7031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5020],
        [0.3299],
        [0.2555],
        [0.1973],
        [0.1638],
        [0.1347],
        [0.1171],
        [0.1083],
        [0.0967],
        [0.0864],
        [0.0793],
        [0.0721],
        [0.0669],
        [0.0624]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( Shen:0.0002 Relationship:0.0002 Shen:0.0002 goodwill:0.0002 goodwill:0.0002 goodwill:0.0002zynski:0.0002zynski:0.0002)
zynski
------
		( Relationship:0.0002 Shen:0.0002 goodwill:0.0002 goodwill:0.0002 goodwill:0.0002zynski:0.0002zynski:0.0002zynski:0.0002)
zynskizynskizynskizynskizynskizynskizynskizynski,384,384384384384
@ 1 train 10.5247 , allloss: 10.5247, dt: 1377.94ms, fracRes: 0.0065, norm(attn): 0.0508, norm(output): 0.1113, norm(x): 0.1140, norm(y): 0.9998, norm:22.2443, tok/sec: 95121.49, flops:99.86, batch-reuse:1
@ 2 train 10.1080 , allloss: 10.1080, dt: 675.81ms, fracRes: 0.0065, norm(attn): 0.0537, norm(output): 0.1172, norm(x): 0.1190, norm(y): 0.9998, norm:13.5838, tok/sec: 193948.04, flops:203.61, batch-reuse:1
@ 3 train 9.8457 , allloss: 9.8457, dt: 793.83ms, fracRes: 0.0065, norm(attn): 0.0549, norm(output): 0.1245, norm(x): 0.1257, norm(y): 0.9998, norm:8.2395, tok/sec: 165113.16, flops:173.34, batch-reuse:1
@ 4 train 9.7235 , allloss: 9.7235, dt: 690.56ms, fracRes: 0.0064, norm(attn): 0.0586, norm(output): 0.1318, norm(x): 0.1341, norm(y): 0.9999, norm:4.2975, tok/sec: 189804.95, flops:199.26, batch-reuse:1
@ 5 train 9.7061 , allloss: 9.7061, dt: 692.65ms, fracRes: 0.0063, norm(attn): 0.0623, norm(output): 0.1416, norm(x): 0.1440, norm(y): 0.9999, norm:3.0148, tok/sec: 189234.00, flops:198.66, batch-reuse:1
@ 6 train 9.5975 , allloss: 9.5975, dt: 690.24ms, fracRes: 0.0063, norm(attn): 0.0654, norm(output): 0.1562, norm(x): 0.1588, norm(y): 1.0000, norm:2.7564, tok/sec: 189892.74, flops:199.35, batch-reuse:1
@ 7 train 9.5586 , allloss: 9.5586, dt: 692.63ms, fracRes: 0.0062, norm(attn): 0.0674, norm(output): 0.1729, norm(x): 0.1760, norm(y): 1.0000, norm:2.3059, tok/sec: 189237.65, flops:198.66, batch-reuse:1
@ 8 train 9.5368 , allloss: 9.5368, dt: 685.04ms, fracRes: 0.0061, norm(attn): 0.0708, norm(output): 0.1895, norm(x): 0.1937, norm(y): 1.0001, norm:2.1832, tok/sec: 191334.81, flops:200.86, batch-reuse:1
@ 9 train 9.4579 , allloss: 9.4579, dt: 686.30ms, fracRes: 0.0061, norm(attn): 0.0771, norm(output): 0.2070, norm(x): 0.2118, norm(y): 1.0001, norm:2.1792, tok/sec: 190984.65, flops:200.50, batch-reuse:1
@ 10 train 9.4171 , allloss: 9.4171, dt: 697.06ms, fracRes: 0.0060, norm(attn): 0.0786, norm(output): 0.2305, norm(x): 0.2298, norm(y): 1.0001, norm:2.0249, tok/sec: 188036.14, flops:197.40, batch-reuse:1
@ 11 train 9.4113 , allloss: 9.4113, dt: 687.16ms, fracRes: 0.0059, norm(attn): 0.0850, norm(output): 0.2461, norm(x): 0.2471, norm(y): 1.0002, norm:1.9627, tok/sec: 190745.44, flops:200.24, batch-reuse:1
@ 12 train 9.2996 , allloss: 9.2996, dt: 691.56ms, fracRes: 0.0058, norm(attn): 0.0874, norm(output): 0.2637, norm(x): 0.2638, norm(y): 1.0002, norm:2.0638, tok/sec: 189530.71, flops:198.97, batch-reuse:1
@ 13 train 9.2638 , allloss: 9.2638, dt: 686.85ms, fracRes: 0.0056, norm(attn): 0.0933, norm(output): 0.2773, norm(x): 0.2796, norm(y): 1.0002, norm:2.0474, tok/sec: 190831.05, flops:200.33, batch-reuse:1
@ 14 train 9.1843 , allloss: 9.1843, dt: 691.79ms, fracRes: 0.0054, norm(attn): 0.0947, norm(output): 0.2852, norm(x): 0.2940, norm(y): 1.0002, norm:1.9921, tok/sec: 189466.63, flops:198.90, batch-reuse:1
@ 15 train 9.1131 , allloss: 9.1131, dt: 689.10ms, fracRes: 0.0052, norm(attn): 0.0991, norm(output): 0.3086, norm(x): 0.3068, norm(y): 1.0003, norm:1.8827, tok/sec: 190208.50, flops:199.68, batch-reuse:1
@ 16 train 9.0433 , allloss: 9.0433, dt: 699.17ms, fracRes: 0.0049, norm(attn): 0.1021, norm(output): 0.3145, norm(x): 0.3176, norm(y): 1.0003, norm:1.8890, tok/sec: 187468.35, flops:196.80, batch-reuse:1
@ 17 train 8.9545 , allloss: 8.9545, dt: 695.02ms, fracRes: 0.0045, norm(attn): 0.1074, norm(output): 0.3242, norm(x): 0.3259, norm(y): 1.0003, norm:1.8226, tok/sec: 188586.74, flops:197.98, batch-reuse:1
@ 18 train 8.8889 , allloss: 8.8889, dt: 689.87ms, fracRes: 0.0042, norm(attn): 0.1099, norm(output): 0.3242, norm(x): 0.3310, norm(y): 1.0003, norm:1.9080, tok/sec: 189995.12, flops:199.46, batch-reuse:1
@ 19 train 8.7337 , allloss: 8.7337, dt: 706.47ms, fracRes: 0.0039, norm(attn): 0.1113, norm(output): 0.3320, norm(x): 0.3341, norm(y): 1.0003, norm:1.8694, tok/sec: 185530.37, flops:194.77, batch-reuse:1
@ 20 train 8.6849 , allloss: 8.6849, dt: 700.89ms, fracRes: 0.0036, norm(attn): 0.1157, norm(output): 0.3340, norm(x): 0.3358, norm(y): 1.0003, norm:1.9478, tok/sec: 187007.23, flops:196.32, batch-reuse:1
@ 21 train 8.5767 , allloss: 8.5767, dt: 707.14ms, fracRes: 0.0034, norm(attn): 0.1172, norm(output): 0.3242, norm(x): 0.3324, norm(y): 1.0003, norm:1.7522, tok/sec: 185356.04, flops:194.59, batch-reuse:1
@ 22 train 8.4906 , allloss: 8.4906, dt: 700.72ms, fracRes: 0.0032, norm(attn): 0.1191, norm(output): 0.3320, norm(x): 0.3346, norm(y): 1.0003, norm:1.5014, tok/sec: 187054.00, flops:196.37, batch-reuse:1
@ 23 train 8.5064 , allloss: 8.5064, dt: 712.61ms, fracRes: 0.0031, norm(attn): 0.1230, norm(output): 0.3379, norm(x): 0.3385, norm(y): 1.0003, norm:1.5903, tok/sec: 183933.35, flops:193.09, batch-reuse:1
@ 24 train 8.4218 , allloss: 8.4218, dt: 707.77ms, fracRes: 0.0030, norm(attn): 0.1245, norm(output): 0.3418, norm(x): 0.3410, norm(y): 1.0003, norm:1.7079, tok/sec: 185189.14, flops:194.41, batch-reuse:1
@ 25 train 8.1870 , allloss: 8.1870, dt: 711.83ms, fracRes: 0.0029, norm(attn): 0.1250, norm(output): 0.3418, norm(x): 0.3423, norm(y): 1.0003, norm:1.7248, tok/sec: 184132.58, flops:193.30, batch-reuse:1
@ 26 train 8.1798 , allloss: 8.1798, dt: 716.77ms, fracRes: 0.0028, norm(attn): 0.1270, norm(output): 0.3535, norm(x): 0.3581, norm(y): 1.0004, norm:1.3711, tok/sec: 182863.66, flops:191.97, batch-reuse:1
@ 27 train 8.1004 , allloss: 8.1004, dt: 713.17ms, fracRes: 0.0028, norm(attn): 0.1328, norm(output): 0.3730, norm(x): 0.3729, norm(y): 1.0004, norm:1.4796, tok/sec: 183787.13, flops:192.94, batch-reuse:1
@ 28 train 8.0306 , allloss: 8.0306, dt: 708.59ms, fracRes: 0.0028, norm(attn): 0.1348, norm(output): 0.3750, norm(x): 0.3800, norm(y): 1.0004, norm:1.2756, tok/sec: 184975.42, flops:194.19, batch-reuse:1
@ 29 train 8.0117 , allloss: 8.0117, dt: 701.15ms, fracRes: 0.0028, norm(attn): 0.1387, norm(output): 0.3848, norm(x): 0.3864, norm(y): 1.0004, norm:1.1491, tok/sec: 186937.47, flops:196.25, batch-reuse:1
@ 30 train 7.8665 , allloss: 7.8665, dt: 696.29ms, fracRes: 0.0027, norm(attn): 0.1396, norm(output): 0.3965, norm(x): 0.3912, norm(y): 1.0004, norm:1.3903, tok/sec: 188243.40, flops:197.62, batch-reuse:1
@ 31 train 7.8567 , allloss: 7.8567, dt: 698.45ms, fracRes: 0.0027, norm(attn): 0.1406, norm(output): 0.3848, norm(x): 0.3879, norm(y): 1.0004, norm:1.1172, tok/sec: 187661.42, flops:197.01, batch-reuse:1
@ 32 train 7.7858 , allloss: 7.7858, dt: 706.93ms, fracRes: 0.0027, norm(attn): 0.1426, norm(output): 0.3848, norm(x): 0.3894, norm(y): 1.0004, norm:1.0675, tok/sec: 185409.17, flops:194.64, batch-reuse:1
@ 33 train 7.6861 , allloss: 7.6861, dt: 701.71ms, fracRes: 0.0027, norm(attn): 0.1455, norm(output): 0.3848, norm(x): 0.3890, norm(y): 1.0004, norm:1.4181, tok/sec: 186788.09, flops:196.09, batch-reuse:1
@ 34 train 7.6561 , allloss: 7.6561, dt: 691.68ms, fracRes: 0.0027, norm(attn): 0.1465, norm(output): 0.3770, norm(x): 0.3786, norm(y): 1.0004, norm:0.7765, tok/sec: 189497.20, flops:198.93, batch-reuse:1
@ 35 train 7.6198 , allloss: 7.6198, dt: 703.53ms, fracRes: 0.0027, norm(attn): 0.1465, norm(output): 0.3652, norm(x): 0.3653, norm(y): 1.0003, norm:1.3566, tok/sec: 186305.04, flops:195.58, batch-reuse:1
@ 36 train 7.5368 , allloss: 7.5368, dt: 701.13ms, fracRes: 0.0027, norm(attn): 0.1504, norm(output): 0.3730, norm(x): 0.3740, norm(y): 1.0003, norm:1.1221, tok/sec: 186944.91, flops:196.26, batch-reuse:1
@ 37 train 7.5583 , allloss: 7.5583, dt: 692.11ms, fracRes: 0.0027, norm(attn): 0.1543, norm(output): 0.3730, norm(x): 0.3745, norm(y): 1.0003, norm:1.4889, tok/sec: 189380.61, flops:198.81, batch-reuse:1
@ 38 train 7.4696 , allloss: 7.4696, dt: 703.52ms, fracRes: 0.0027, norm(attn): 0.1543, norm(output): 0.3652, norm(x): 0.3634, norm(y): 1.0003, norm:0.8618, tok/sec: 186307.57, flops:195.59, batch-reuse:1
@ 39 train 7.5037 , allloss: 7.5037, dt: 694.79ms, fracRes: 0.0027, norm(attn): 0.1543, norm(output): 0.3652, norm(x): 0.3652, norm(y): 1.0003, norm:1.3161, tok/sec: 188650.74, flops:198.05, batch-reuse:1
@ 40 train 7.5167 , allloss: 7.5167, dt: 710.93ms, fracRes: 0.0027, norm(attn): 0.1543, norm(output): 0.3672, norm(x): 0.3673, norm(y): 1.0003, norm:1.2509, tok/sec: 184366.25, flops:193.55, batch-reuse:1
@ 41 train 7.4548 , allloss: 7.4548, dt: 698.22ms, fracRes: 0.0027, norm(attn): 0.1562, norm(output): 0.3770, norm(x): 0.3778, norm(y): 1.0003, norm:1.0751, tok/sec: 187724.35, flops:197.07, batch-reuse:1
@ 42 train 7.4198 , allloss: 7.4198, dt: 705.73ms, fracRes: 0.0025, norm(attn): 0.1602, norm(output): 0.3828, norm(x): 0.3834, norm(y): 1.0003, norm:0.7613, tok/sec: 185724.30, flops:194.97, batch-reuse:1
@ 43 train 7.4072 , allloss: 7.4072, dt: 705.81ms, fracRes: 0.0025, norm(attn): 0.1592, norm(output): 0.3750, norm(x): 0.3731, norm(y): 1.0003, norm:0.7628, tok/sec: 185703.47, flops:194.95, batch-reuse:1
@ 44 train 7.4256 , allloss: 7.4256, dt: 706.16ms, fracRes: 0.0025, norm(attn): 0.1582, norm(output): 0.3633, norm(x): 0.3620, norm(y): 1.0003, norm:1.1443, tok/sec: 185612.56, flops:194.86, batch-reuse:1
@ 45 train 7.3283 , allloss: 7.3283, dt: 697.68ms, fracRes: 0.0023, norm(attn): 0.1709, norm(output): 0.3750, norm(x): 0.3739, norm(y): 1.0003, norm:1.0554, tok/sec: 187869.01, flops:197.23, batch-reuse:1
@ 46 train 7.3569 , allloss: 7.3569, dt: 710.67ms, fracRes: 0.0024, norm(attn): 0.1719, norm(output): 0.3477, norm(x): 0.3528, norm(y): 1.0003, norm:1.2894, tok/sec: 184433.60, flops:193.62, batch-reuse:1
@ 47 train 7.2824 , allloss: 7.2824, dt: 707.03ms, fracRes: 0.0024, norm(attn): 0.1719, norm(output): 0.3535, norm(x): 0.3563, norm(y): 1.0003, norm:0.9478, tok/sec: 185383.16, flops:194.62, batch-reuse:1
@ 48 train 7.2783 , allloss: 7.2783, dt: 702.37ms, fracRes: 0.0024, norm(attn): 0.1729, norm(output): 0.3535, norm(x): 0.3573, norm(y): 1.0003, norm:1.3905, tok/sec: 186614.99, flops:195.91, batch-reuse:1
@ 49 train 7.2919 , allloss: 7.2919, dt: 704.83ms, fracRes: 0.0025, norm(attn): 0.1719, norm(output): 0.3418, norm(x): 0.3411, norm(y): 1.0002, norm:1.1637, tok/sec: 185962.65, flops:195.22, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.7656, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.3027, 0.4238, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2412, 0.1914, 0.3379, 0.2305, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2100, 0.2773, 0.2188, 0.1299, 0.1641, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1602, 0.1543, 0.0781, 0.2080, 0.2119, 0.1885, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1299, 0.1641, 0.1367, 0.1543, 0.1030, 0.1602, 0.1514, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.1177, 0.1602, 0.0850, 0.0742, 0.1982, 0.1084, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.1089, 0.0713, 0.1001, 0.1206, 0.1357, 0.1543, 0.0923, 0.1123, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0996, 0.1172, 0.0952, 0.0825, 0.1138, 0.0630, 0.1206, 0.1406, 0.1030, 0.0645, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0806, 0.0713, 0.0618, 0.0674, 0.0918, 0.1182, 0.1455, 0.0796, 0.0879, 0.1060, 0.0908, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.1738, 0.0542, 0.1006, 0.0364, 0.0835, 0.0928, 0.0869, 0.0879, 0.1348, 0.0359, 0.0447, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0369, 0.0693, 0.0781, 0.0613, 0.0791, 0.0625, 0.1406, 0.0713, 0.0623, 0.0515, 0.1221, 0.0908, 0.0000, 0.0000],
        [0.0630, 0.0762, 0.0486, 0.0405, 0.0649, 0.0874, 0.1230, 0.0645, 0.0718, 0.0693, 0.0481, 0.0991, 0.0645, 0.0786, 0.0000],
        [0.0654, 0.0728, 0.0469, 0.0933, 0.0742, 0.0527, 0.0664, 0.0498, 0.0679, 0.0554, 0.0496, 0.1289, 0.0525, 0.0454, 0.0781]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0002,      0.0000,     -0.0001,      0.0001,     -0.0002,     -0.0003,     -0.0000,     -0.0001,     -0.0004,     -0.0003,      0.0001,     -0.0004,     -0.0001,     -0.0004],
        [     0.0003,      1.1875,      0.1147,     -0.5859,     -0.4629,      0.1396,      0.2754,     -0.1768,     -0.2754,      0.1758,     -0.1660,      0.0771,      0.0147,      0.0135,      0.3906],
        [     0.0003,      0.1084,      0.4453,     -0.4023,     -0.2773,     -0.0493,     -0.2480,     -0.9180,      0.2715,      0.6758,     -1.5000,      0.1748,     -0.8633,     -0.0903,      0.5078],
        [     0.0000,     -0.2305,      0.3359,     -0.0461,     -0.1226,      0.1729,      0.1719,     -0.3281,     -0.1191,     -0.0693,     -0.1387,     -0.1660,      0.0466,      0.0454,      0.7070],
        [     0.0003,      0.2773,      0.0437,     -0.4805,     -0.2451,      0.5664,      0.1514,     -0.3945,     -0.0586,      0.6406,     -0.4492,     -0.1680,     -0.1670,      0.0540,     -0.7227],
        [     0.0001,     -0.0374,     -0.7188,      0.2598,      0.2773,      0.1602,      0.1035,      0.0106,      0.2598,      0.0039,      0.2676,     -0.2100,      0.3008,      0.2461,     -0.0569],
        [     0.0001,      0.2363,      0.0535,      0.1748,     -0.2275,      0.2129,      0.1543,     -0.2354,      0.0854,     -0.4004,     -1.1094,      0.5430,      0.4277,     -0.3379,      1.0234],
        [     0.0001,      0.0277,      0.3320,     -0.2969,     -0.4336,      0.5469,     -0.0574,      0.2158,      0.2295,      0.0123,      0.0996,     -0.3047,      0.2246,     -0.0559,      1.0391],
        [     0.0002,      0.0388,     -0.3809,     -0.0415,      0.1416,      0.2617,      0.3867,     -0.1230,      0.0708,      0.0464,     -0.6875,      0.4512,      0.0811,     -0.0238,     -0.0226],
        [    -0.0000,      0.1621,     -0.0491,     -0.1914,      0.1318,     -0.4629,      0.1875,      0.3438,      0.0330,     -0.4375,     -0.2871,      0.0835,      0.1719,      0.0977,     -0.4531],
        [     0.0001,     -0.1201,     -0.2656,     -0.1797,      0.1279,      0.3828,      0.5898,     -0.0135,      0.0850,      0.2734,      0.1172,      0.3594,      0.1729,      0.3457,      0.4512],
        [     0.0000,      0.9336,     -0.2344,      0.3867,     -0.6328,      0.1982,      0.3027,      0.2402,      0.2520,      0.6797,     -0.6484,     -0.4258,     -0.5000,      0.1924,     -0.1079],
        [    -0.0005,     -0.6992,     -0.0664,      0.0552,     -0.1904,      0.0615,     -0.1680,      0.6406,     -0.0410,     -0.1738,     -0.3633,      0.4980,      0.2002,     -0.3770,      0.5312],
        [    -0.0000,      0.1934,     -0.2598,     -0.4395,      0.0339,      0.3320,      0.6680,      0.0269,      0.1309,      0.0938,     -0.2656,      0.4531,      0.0269,      0.2236,     -0.0664],
        [    -0.0003,      0.1079,     -0.3359,      0.3555,      0.1260,     -0.2148,      0.0167,     -0.2715,      0.0376,     -0.1660,     -0.2793,      0.6797,     -0.2217,     -0.3652,      0.1738]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3319],
        [0.2666],
        [0.2270],
        [0.2053],
        [0.1619],
        [0.1461],
        [0.1169],
        [0.1074],
        [0.0913],
        [0.0822],
        [0.0805],
        [0.0721],
        [0.0682],
        [0.0646]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2236, 0.7773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2363, 0.4492, 0.3145, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2812, 0.3906, 0.1523, 0.1768, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1650, 0.2695, 0.1738, 0.1992, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.2578, 0.1387, 0.0996, 0.1729, 0.0850, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1387, 0.1699, 0.0732, 0.1089, 0.3086, 0.1309, 0.0703, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.3301, 0.0688, 0.0679, 0.2031, 0.0603, 0.0957, 0.0405, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.2148, 0.0771, 0.1230, 0.0981, 0.0620, 0.1406, 0.0703, 0.0640, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1504, 0.2520, 0.0630, 0.0598, 0.1572, 0.0452, 0.1040, 0.0334, 0.1060, 0.0288, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1113, 0.1318, 0.0762, 0.0713, 0.0796, 0.0996, 0.0513, 0.0781, 0.0786, 0.1079, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.1738, 0.0801, 0.0605, 0.1416, 0.0352, 0.0986, 0.0396, 0.0869, 0.0327, 0.0923, 0.0258, 0.0000, 0.0000, 0.0000],
        [0.0977, 0.2061, 0.0513, 0.0457, 0.1455, 0.0449, 0.0579, 0.0289, 0.1226, 0.0317, 0.1211, 0.0214, 0.0260, 0.0000, 0.0000],
        [0.1079, 0.1084, 0.0811, 0.1089, 0.0540, 0.0442, 0.1089, 0.0884, 0.0325, 0.0576, 0.0417, 0.0588, 0.0825, 0.0253, 0.0000],
        [0.1099, 0.1758, 0.0679, 0.0403, 0.0850, 0.0361, 0.0579, 0.0449, 0.0693, 0.0381, 0.0776, 0.0383, 0.0425, 0.0674, 0.0498]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0002,     -0.0010,     -0.0019,     -0.0004,     -0.0033,     -0.0007,     -0.0023,     -0.0027,     -0.0033,     -0.0021,     -0.0031,     -0.0026,     -0.0030,     -0.0015],
        [     0.0000,      1.2422,     -0.5781,     -0.6289,     -0.1758,     -0.3945,     -0.0310,     -0.7969,     -0.1143,     -0.8203,     -0.6445,     -0.9531,     -0.7617,     -0.1426,     -0.0942],
        [     0.0000,      0.6445,      0.2852,     -0.4414,      0.6836,     -0.2275,     -0.0052,     -0.3652,      0.2969,     -0.5234,     -0.4941,     -0.7500,     -0.6250,      0.0110,      0.0767],
        [    -0.0000,      0.3301,     -0.6133,     -0.4629,     -0.1797,     -0.8594,     -0.3965,     -0.8203,     -0.2617,     -1.5000,     -0.3887,     -1.2891,     -1.0000,     -0.0500,     -0.7109],
        [    -0.0001,      0.4883,      0.0527,      0.1846,      0.1484,     -0.3086,     -0.0260,      0.0164,     -0.4727,      0.1318,     -0.7500,     -0.5898,     -0.1895,     -0.6211,      0.2520],
        [     0.0000,      0.0464,     -0.5703,     -0.9023,     -0.3516,     -1.0625,     -0.3496,     -1.3125,     -0.7812,     -1.2969,     -0.7266,     -1.6953,     -1.3359,     -0.8633,     -0.6680],
        [    -0.0001,      0.2002,     -0.6406,     -0.2441,      0.8008,     -0.0583,     -0.6836,     -0.6250,      0.6328,     -0.5312,      0.2695,     -0.5352,     -0.6797,      0.5117,     -0.6367],
        [    -0.0001,      0.9023,     -0.6641,     -0.6797,      0.4199,     -0.7969,     -0.3320,     -1.1953,      0.1260,     -1.3594,      0.0231,     -1.5625,     -1.2891,      0.0264,     -0.2539],
        [     0.0000,      0.3555,     -0.6680,     -0.1992,     -0.4277,     -0.8828,     -0.0688,     -0.7617,     -0.8516,     -0.7305,     -0.8672,     -0.9102,     -0.8125,     -1.1172,     -0.3184],
        [    -0.0000,      0.5117,     -0.8711,     -0.9258,      0.0425,     -1.2031,     -0.3711,     -1.5078,     -0.3535,     -1.6562,     -0.4258,     -1.8203,     -1.6250,     -0.6133,     -0.7578],
        [     0.0000,      0.1670,     -0.3789,     -0.4414,     -0.3359,     -0.1128,     -0.7734,     -0.3516,     -0.3477,     -0.0304,      0.0276,      0.1196,     -0.2285,     -0.2090,     -0.6094],
        [    -0.0000,      0.2656,     -0.5117,     -0.7891,      0.0608,     -1.3359,     -0.3027,     -1.2188,     -0.4277,     -1.4062,     -0.3691,     -1.6484,     -1.3281,     -0.4902,     -0.8203],
        [    -0.0001,      0.7461,     -0.6445,     -0.7617,      0.3984,     -0.7734,     -0.5234,     -1.2188,      0.2266,     -1.1250,      0.2129,     -1.5234,     -1.3203,      0.0581,     -0.6641],
        [     0.0000,      0.0030,     -0.2891,      0.0073,     -0.6953,     -0.8945,      0.0062,     -0.2002,     -1.2031,     -0.6289,     -0.9531,     -0.6094,     -0.2734,     -1.4531,     -0.3691],
        [    -0.0000,      0.4688,     -0.4785,     -1.0000,     -0.2539,     -1.1094,     -0.6367,     -0.8945,     -0.4609,     -1.0547,     -0.3477,     -1.0547,     -0.9492,     -0.4883,     -0.7891]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1506],
        [0.1732],
        [0.1848],
        [0.1949],
        [0.2027],
        [0.1725],
        [0.0916],
        [0.1667],
        [0.1258],
        [0.1035],
        [0.0950],
        [0.0701],
        [0.1198],
        [0.1184]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4238, 0.5781, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2930, 0.4297, 0.2773, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2246, 0.3457, 0.2334, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1011, 0.1631, 0.2188, 0.2412, 0.2754, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1357, 0.1406, 0.1982, 0.2021, 0.1914, 0.1318, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2139, 0.1494, 0.0991, 0.0850, 0.2344, 0.1108, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0476, 0.0728, 0.0476, 0.0461, 0.0097, 0.0057, 0.7500, 0.0199, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0398, 0.0420, 0.0693, 0.0732, 0.2314, 0.2910, 0.0022, 0.1670, 0.0840, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0698, 0.0918, 0.0898, 0.0840, 0.0217, 0.0135, 0.5352, 0.0449, 0.0272, 0.0227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.0757, 0.0530, 0.0703, 0.1357, 0.1611, 0.0064, 0.0918, 0.0947, 0.1475, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0469, 0.0625, 0.0461, 0.0444, 0.0106, 0.0059, 0.7148, 0.0195, 0.0167, 0.0088, 0.0127, 0.0102, 0.0000, 0.0000, 0.0000],
        [0.0449, 0.0664, 0.0437, 0.0427, 0.0090, 0.0048, 0.7109, 0.0181, 0.0152, 0.0077, 0.0106, 0.0089, 0.0176, 0.0000, 0.0000],
        [0.0201, 0.0192, 0.0349, 0.0366, 0.1074, 0.1328, 0.0014, 0.0811, 0.0386, 0.1367, 0.1123, 0.1494, 0.0815, 0.0481, 0.0000],
        [0.1104, 0.0854, 0.0542, 0.0496, 0.0618, 0.0226, 0.2266, 0.0349, 0.0649, 0.0225, 0.0476, 0.0256, 0.0337, 0.0630, 0.0967]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0002,     -0.0005,     -0.0005,      0.0001,     -0.0014,     -0.0005,     -0.0008,     -0.0008,     -0.0015,     -0.0003,     -0.0009,     -0.0008,     -0.0006,     -0.0011],
        [     0.0001,      0.3086,      0.1816,     -0.0615,     -0.3418,     -0.5000,     -0.0415,      0.0811,     -0.3516,     -0.1533,     -0.0830,     -0.0786,      0.0121,     -0.4590,      0.1680],
        [     0.0001,      0.3828,     -0.0498,     -0.1611,     -1.2031,     -1.6953,      1.5938,     -0.6328,     -0.8203,     -1.2969,     -1.0391,     -1.1719,     -0.6719,     -1.0156,      0.7656],
        [     0.0001,      0.4336,      0.0403,     -0.1367,     -1.1797,     -1.5234,      1.5156,     -0.4824,     -0.9023,     -1.0938,     -0.9062,     -0.9570,     -0.5234,     -1.1172,      0.7500],
        [    -0.0000,      0.4766,      0.7734,      0.8711,      1.0078,      1.4844,     -1.8203,      1.4375,      0.3555,      1.7656,      1.2812,      1.8047,      1.4297,      0.4082,     -0.4570],
        [     0.0001,      0.0325,      0.3750,      0.3965,      0.3438,     -0.0276,     -0.3633,      0.4316,     -0.2734,      0.3066,      0.2695,      0.5195,      0.4492,     -0.1338,     -0.2266],
        [     0.0002,     -0.3574,     -0.7695,     -0.9258,      0.0913,     -0.6562,     -0.6836,     -0.7773,     -0.1543,     -0.8555,     -0.1631,     -0.7695,     -0.8164,     -0.0933,     -0.8711],
        [     0.0000,      0.4277,      0.0044,     -0.0309,     -1.5938,     -2.1094,      2.7656,     -0.8750,     -1.0156,     -1.6797,     -1.4531,     -1.5703,     -0.8906,     -1.2344,      1.3359],
        [     0.0001,      0.0554,      0.5547,      0.6094,      1.7656,      1.9922,     -2.9219,      1.4297,      0.7500,      2.0312,      1.7031,      2.0625,      1.4219,      0.9609,     -1.2422],
        [     0.0000,      0.2734,      0.2520,      0.1865,     -1.1641,     -1.6406,      2.0312,     -0.4395,     -0.9414,     -1.1250,     -1.0234,     -0.9336,     -0.4453,     -1.0469,      1.0000],
        [     0.0001,      0.6367,      0.2793,      0.5625,      1.2188,      1.3906,     -1.8359,      0.8281,      0.8594,      1.3047,      1.1172,      1.1250,      0.7734,      0.8984,     -0.6484],
        [     0.0000,      0.2891,     -0.0143,     -0.0518,     -1.4844,     -2.0781,      2.7188,     -0.8750,     -1.0312,     -1.6797,     -1.3047,     -1.5234,     -0.8750,     -1.1797,      1.2422],
        [     0.0000,      0.3926,     -0.0236,     -0.0503,     -1.6016,     -2.2344,      2.7656,     -0.9102,     -1.0859,     -1.7656,     -1.4453,     -1.6172,     -0.9336,     -1.2812,      1.2734],
        [     0.0001,     -0.0508,      0.5508,      0.5977,      1.6719,      1.8828,     -2.6719,      1.3906,      0.6445,      1.9141,      1.7188,      2.0000,      1.3984,      0.8672,     -1.1484],
        [     0.0002,     -0.2559,     -0.7070,     -0.8008,     -0.5781,     -1.5859,      0.7227,     -1.1484,     -0.5273,     -1.5859,     -0.8359,     -1.4609,     -1.1875,     -0.5586,     -0.1309]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5771],
        [0.3789],
        [0.3143],
        [0.1695],
        [0.1901],
        [0.1828],
        [0.0954],
        [0.1059],
        [0.0972],
        [0.0684],
        [0.0757],
        [0.0730],
        [0.0588],
        [0.0983]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.8203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2061, 0.5547, 0.2393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1406, 0.4590, 0.1855, 0.2148, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0376, 0.2080, 0.3770, 0.3535, 0.0239, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0364, 0.2432, 0.2344, 0.2559, 0.0630, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0864, 0.1924, 0.2139, 0.2139, 0.0850, 0.1177, 0.0918, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.1758, 0.0640, 0.0742, 0.2832, 0.1426, 0.1445, 0.0447, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0194, 0.0977, 0.2578, 0.2334, 0.0093, 0.0593, 0.0311, 0.2832, 0.0079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0454, 0.1553, 0.0623, 0.0732, 0.1787, 0.1211, 0.1035, 0.0442, 0.1650, 0.0518, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0151, 0.1030, 0.1709, 0.1621, 0.0172, 0.0815, 0.0284, 0.1709, 0.0148, 0.2002, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0422, 0.1157, 0.0435, 0.0510, 0.1660, 0.0913, 0.0908, 0.0309, 0.1553, 0.0354, 0.1436, 0.0344, 0.0000, 0.0000, 0.0000],
        [0.0422, 0.1108, 0.0405, 0.0476, 0.1660, 0.0879, 0.0854, 0.0288, 0.1553, 0.0330, 0.1396, 0.0322, 0.0302, 0.0000, 0.0000],
        [0.0120, 0.0532, 0.1357, 0.1235, 0.0057, 0.0325, 0.0193, 0.1514, 0.0049, 0.1494, 0.0128, 0.1455, 0.1504, 0.0048, 0.0000],
        [0.0444, 0.0938, 0.0483, 0.0542, 0.1177, 0.0698, 0.0688, 0.0378, 0.1001, 0.0403, 0.1006, 0.0408, 0.0388, 0.0996, 0.0454]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0036,      0.0041,      0.0041,      0.0008,      0.0024,      0.0017,      0.0039,      0.0000,      0.0040,      0.0016,      0.0040,      0.0040,      0.0000,      0.0035],
        [    -0.0003,      1.5312,      0.9727,      1.0781,      0.5039,      0.4707,      0.8945,      0.6289,      0.3066,      0.5508,      0.7539,      0.6328,      0.6602,      0.2871,      0.8633],
        [    -0.0003,      0.9922,      0.1504,      0.2754,      1.2344,      0.6953,      0.7188,     -0.2148,      1.1484,     -0.1138,      1.0625,     -0.1221,     -0.1709,      1.1094,      0.1592],
        [    -0.0003,      1.1875,      0.2773,      0.4258,      1.1328,      0.6133,      0.6562,     -0.0728,      0.9805,     -0.0057,      1.0234,      0.0016,     -0.0415,      0.9414,      0.2373],
        [    -0.0000,      1.7109,      2.3125,      2.2344,     -0.4512,      1.0078,      0.6719,      2.2969,     -0.5781,      2.2969,      0.2676,      2.2500,      2.2969,     -0.6250,      2.0312],
        [    -0.0002,      1.8984,      1.8672,      1.9453,      0.5469,      1.5234,      0.8867,      1.7109,      0.4316,      1.8516,      1.0938,      1.7812,      1.7500,      0.3613,      1.6641],
        [    -0.0000,      0.7969,      0.9062,      0.9023,     -0.0190,      0.3066,      0.0564,      0.9062,     -0.2354,      0.8867,      0.1216,      0.8945,      0.8828,     -0.2373,      0.6094],
        [    -0.0003,      0.8984,     -0.1152,      0.0371,      1.3750,      0.6914,      0.6992,     -0.4707,      1.3203,     -0.3379,      1.1875,     -0.3594,     -0.4258,      1.2734,     -0.0281],
        [     0.0000,      1.6172,      2.5781,      2.4844,     -0.7305,      1.1172,      0.4707,      2.6875,     -0.9023,      2.6719,      0.1377,      2.6562,      2.6719,     -0.9336,      2.1875],
        [    -0.0004,      1.2266,      0.3184,      0.4805,      1.3672,      0.9805,      0.8242,     -0.0239,      1.2891,      0.1318,      1.3203,      0.0947,      0.0253,      1.2344,      0.3574],
        [    -0.0001,      1.9141,      2.4219,      2.3750,      0.1250,      1.6797,      0.6289,      2.4219,     -0.0240,      2.5781,      0.8594,      2.4688,      2.4219,     -0.0879,      2.0312],
        [    -0.0003,      1.0078,      0.0294,      0.1934,      1.3672,      0.7734,      0.7695,     -0.3086,      1.3047,     -0.1729,      1.2266,     -0.1992,     -0.2637,      1.2578,      0.1211],
        [    -0.0003,      0.9648,     -0.0391,      0.1211,      1.3672,      0.7344,      0.7031,     -0.3789,      1.3047,     -0.2432,      1.2031,     -0.2676,     -0.3379,      1.2578,      0.0330],
        [     0.0000,      1.4922,      2.4375,      2.3281,     -0.7383,      1.0000,      0.4785,      2.5312,     -0.8828,      2.5156,      0.0693,      2.5000,      2.5312,     -0.9141,      2.0938],
        [    -0.0002,      0.7422,      0.0830,      0.1973,      0.9727,      0.4492,      0.4355,     -0.1621,      0.8086,     -0.1006,      0.8164,     -0.0854,     -0.1396,      0.8047,      0.0173]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2893],
        [0.2332],
        [0.1872],
        [0.1257],
        [0.0931],
        [0.1246],
        [0.0889],
        [0.0650],
        [0.0655],
        [0.0548],
        [0.0607],
        [0.0601],
        [0.0426],
        [0.0546]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1777, 0.8203, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2832, 0.4805, 0.2354, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2373, 0.3828, 0.1895, 0.1914, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0574, 0.3105, 0.2559, 0.2617, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0869, 0.2793, 0.1396, 0.1426, 0.1875, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0957, 0.1641, 0.1152, 0.1162, 0.1206, 0.1011, 0.2871, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1152, 0.1465, 0.0684, 0.0688, 0.2109, 0.1069, 0.2285, 0.0554, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0239, 0.1934, 0.1758, 0.1826, 0.0427, 0.1045, 0.0776, 0.1699, 0.0299, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0767, 0.1094, 0.0500, 0.0503, 0.1455, 0.0771, 0.1543, 0.0408, 0.2539, 0.0410, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0371, 0.1426, 0.0840, 0.0850, 0.0845, 0.0908, 0.1157, 0.0723, 0.1021, 0.0703, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0684, 0.0889, 0.0405, 0.0408, 0.1260, 0.0635, 0.1357, 0.0330, 0.2275, 0.0330, 0.1108, 0.0327, 0.0000, 0.0000, 0.0000],
        [0.0674, 0.0835, 0.0381, 0.0383, 0.1226, 0.0601, 0.1348, 0.0306, 0.2266, 0.0308, 0.1064, 0.0304, 0.0306, 0.0000, 0.0000],
        [0.0165, 0.1196, 0.1084, 0.1118, 0.0289, 0.0674, 0.0493, 0.1045, 0.0209, 0.0981, 0.0518, 0.1001, 0.1030, 0.0198, 0.0000],
        [0.0532, 0.0723, 0.0347, 0.0352, 0.0864, 0.0464, 0.1348, 0.0272, 0.1572, 0.0265, 0.0796, 0.0265, 0.0272, 0.1455, 0.0474]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0054,      0.0047,      0.0049,      0.0016,      0.0036,      0.0041,      0.0044,      0.0014,      0.0042,      0.0033,      0.0042,      0.0044,      0.0013,      0.0051],
        [     0.0002,      1.5312,      0.9766,      1.0156,      0.7578,      0.8750,      1.5469,      0.7227,      1.0703,      0.6680,      1.1641,      0.6836,      0.7383,      0.9648,      1.1953],
        [     0.0002,      0.5312,     -0.1846,     -0.1738,      0.5781,      0.0903,      0.8906,     -0.4180,      1.1172,     -0.4336,      0.5742,     -0.4375,     -0.4180,      1.0469,      0.0330],
        [     0.0002,      0.4785,     -0.2246,     -0.2119,      0.6562,      0.1089,      0.9414,     -0.4590,      1.2188,     -0.4707,      0.6328,     -0.4727,     -0.4551,      1.1484,      0.0168],
        [     0.0002,      1.6875,      1.4922,      1.5156,      0.7031,      1.3047,      1.0469,      1.4297,      0.5703,      1.3984,      1.1953,      1.4062,      1.4219,      0.5078,      1.4609],
        [     0.0003,      1.1719,      0.4766,      0.4961,      0.7695,      0.6250,      1.0000,      0.3203,      1.0312,      0.3008,      0.9297,      0.3047,      0.3145,      0.9492,      0.5977],
        [     0.0002,      0.5430,      0.1865,      0.1953,      0.2324,      0.0547,      1.1016,     -0.0244,      0.5547,     -0.1045,      0.3262,     -0.0796,     -0.0237,      0.4922,      0.4883],
        [     0.0002,      0.2373,     -0.5195,     -0.5156,      0.6055,     -0.0752,      0.6875,     -0.7305,      1.2031,     -0.7266,      0.4805,     -0.7383,     -0.7305,      1.1328,     -0.3066],
        [     0.0002,      2.0938,      1.9922,      2.0312,      0.5742,      1.4766,      1.1719,      1.9531,      0.2236,      1.8906,      1.1953,      1.9062,      1.9453,      0.1729,      1.9453],
        [     0.0002,      0.3516,     -0.4277,     -0.4219,      0.6406,      0.0024,      0.6953,     -0.6289,      1.1953,     -0.6250,      0.5391,     -0.6367,     -0.6328,      1.1328,     -0.2334],
        [     0.0003,      1.3438,      0.8203,      0.8281,      0.8242,      0.8945,      1.1406,      0.6680,      1.0156,      0.6406,      1.1406,      0.6484,      0.6641,      0.9336,      0.9102],
        [     0.0003,      0.2598,     -0.5195,     -0.5195,      0.6094,     -0.0762,      0.6836,     -0.7344,      1.2031,     -0.7305,      0.4805,     -0.7383,     -0.7344,      1.1328,     -0.3125],
        [     0.0002,      0.2109,     -0.5703,     -0.5703,      0.5977,     -0.1187,      0.6914,     -0.7891,      1.2109,     -0.7891,      0.4570,     -0.7969,     -0.7891,      1.1406,     -0.3477],
        [     0.0002,      1.9844,      1.8828,      1.9219,      0.5625,      1.4062,      1.1016,      1.8516,      0.2354,      1.7891,      1.1484,      1.8047,      1.8359,      0.1865,      1.8281],
        [     0.0002,      0.3066,     -0.4238,     -0.4141,      0.4883,     -0.1338,      0.9258,     -0.6719,      1.0859,     -0.6992,      0.4023,     -0.6953,     -0.6680,      1.0078,     -0.1133]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2387],
        [0.2571],
        [0.2100],
        [0.1424],
        [0.1448],
        [0.0732],
        [0.1080],
        [0.0601],
        [0.0847],
        [0.0677],
        [0.0751],
        [0.0707],
        [0.0401],
        [0.0460]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1865, 0.8125, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0762, 0.4551, 0.4688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0549, 0.3027, 0.3184, 0.3223, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0811, 0.2080, 0.2598, 0.2520, 0.1973, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.2139, 0.2393, 0.2373, 0.0913, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0576, 0.1523, 0.1914, 0.1953, 0.1099, 0.1777, 0.1152, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0266, 0.1621, 0.1777, 0.1787, 0.0588, 0.1221, 0.0957, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0400, 0.1104, 0.1357, 0.1328, 0.1050, 0.1426, 0.0737, 0.1592, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0208, 0.1309, 0.1445, 0.1445, 0.0481, 0.1001, 0.0757, 0.1475, 0.0469, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0228, 0.1001, 0.1201, 0.1187, 0.0586, 0.1021, 0.0608, 0.1338, 0.0564, 0.1338, 0.0928, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0172, 0.1060, 0.1172, 0.1182, 0.0396, 0.0815, 0.0623, 0.1201, 0.0383, 0.1152, 0.0684, 0.1157, 0.0000, 0.0000, 0.0000],
        [0.0157, 0.0952, 0.1055, 0.1064, 0.0354, 0.0728, 0.0562, 0.1074, 0.0344, 0.1030, 0.0610, 0.1035, 0.1040, 0.0000, 0.0000],
        [0.0219, 0.0649, 0.0786, 0.0776, 0.0591, 0.0811, 0.0435, 0.0923, 0.0574, 0.0947, 0.0811, 0.0947, 0.0933, 0.0598, 0.0000],
        [0.0151, 0.0791, 0.0908, 0.0918, 0.0327, 0.0654, 0.0481, 0.0942, 0.0315, 0.0913, 0.0557, 0.0913, 0.0918, 0.0325, 0.0879]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0036,      0.0041,      0.0041,      0.0031,      0.0042,      0.0028,      0.0045,      0.0027,      0.0045,      0.0041,      0.0045,      0.0045,      0.0029,      0.0043],
        [    -0.0001,      1.4688,      1.6094,      1.6016,      0.6016,      1.2969,      0.9492,      1.6406,      0.5273,      1.6094,      1.0859,      1.6094,      1.6172,      0.5391,      1.5625],
        [    -0.0001,      1.7891,      1.8203,      1.8281,      0.6484,      1.3906,      1.3125,      1.7969,      0.6562,      1.7422,      1.2109,      1.7500,      1.7656,      0.6719,      1.7969],
        [    -0.0001,      1.7109,      1.7578,      1.7656,      0.6211,      1.3438,      1.2344,      1.7422,      0.6289,      1.6875,      1.1719,      1.6953,      1.7109,      0.6406,      1.7266],
        [    -0.0000,      0.9453,      1.1641,      1.1328,      0.8906,      1.2109,      0.5234,      1.3047,      0.8320,      1.3359,      1.1797,      1.3281,      1.3047,      0.8828,      1.1328],
        [    -0.0001,      1.6719,      1.7812,      1.7812,      0.8242,      1.4922,      1.1562,      1.8281,      0.8008,      1.8125,      1.3438,      1.8125,      1.8125,      0.8398,      1.7578],
        [    -0.0001,      0.9766,      1.2031,      1.2188,      0.6484,      1.1250,      0.6914,      1.3359,      0.5938,      1.3438,      1.0625,      1.3438,      1.3359,      0.6133,      1.2422],
        [    -0.0001,      1.8047,      1.8984,      1.9062,      0.7930,      1.5234,      1.2734,      1.9062,      0.7656,      1.8594,      1.3438,      1.8672,      1.8750,      0.7969,      1.8516],
        [    -0.0000,      1.0156,      1.2188,      1.1953,      0.9648,      1.2656,      0.6133,      1.3750,      0.9219,      1.4141,      1.2656,      1.4062,      1.3906,      0.9648,      1.2266],
        [    -0.0001,      1.8359,      1.9375,      1.9453,      0.8398,      1.5703,      1.2969,      1.9609,      0.8125,      1.9141,      1.3906,      1.9219,      1.9297,      0.8438,      1.8984],
        [    -0.0001,      1.4766,      1.6641,      1.6484,      0.9453,      1.5000,      0.9805,      1.7734,      0.9062,      1.7734,      1.3984,      1.7734,      1.7656,      0.9531,      1.6484],
        [    -0.0001,      1.8203,      1.9219,      1.9297,      0.8320,      1.5547,      1.2891,      1.9453,      0.8047,      1.9062,      1.3828,      1.9062,      1.9141,      0.8359,      1.8906],
        [    -0.0001,      1.8047,      1.8984,      1.9062,      0.8086,      1.5312,      1.2734,      1.9219,      0.7852,      1.8750,      1.3516,      1.8828,      1.8906,      0.8164,      1.8672],
        [    -0.0000,      1.0859,      1.2812,      1.2656,      0.9922,      1.3125,      0.6875,      1.4375,      0.9609,      1.4688,      1.3047,      1.4688,      1.4453,      1.0078,      1.2969],
        [    -0.0001,      1.6562,      1.7969,      1.8047,      0.7734,      1.4688,      1.1562,      1.8281,      0.7344,      1.7969,      1.3047,      1.8047,      1.8047,      0.7617,      1.7578]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1829],
        [0.1300],
        [0.0947],
        [0.0660],
        [0.0532],
        [0.0431],
        [0.0395],
        [0.0313],
        [0.0295],
        [0.0244],
        [0.0240],
        [0.0221],
        [0.0189],
        [0.0175]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0232, 0.9766, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.4883, 0.4980, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0081, 0.3184, 0.3223, 0.3516, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0041, 0.2334, 0.2207, 0.2373, 0.3047, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0038, 0.1738, 0.1709, 0.1846, 0.2412, 0.2246, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0025, 0.1436, 0.1436, 0.1572, 0.2080, 0.1992, 0.1465, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0028, 0.1216, 0.1226, 0.1328, 0.1738, 0.1631, 0.1279, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.1094, 0.1050, 0.1133, 0.1445, 0.1367, 0.1079, 0.1299, 0.1504, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0021, 0.0918, 0.0918, 0.0991, 0.1289, 0.1216, 0.0952, 0.1157, 0.1348, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0016, 0.0835, 0.0815, 0.0884, 0.1133, 0.1069, 0.0854, 0.1021, 0.1191, 0.1040, 0.1143, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.0737, 0.0737, 0.0801, 0.1030, 0.0977, 0.0762, 0.0933, 0.1079, 0.0952, 0.1040, 0.0942, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.0669, 0.0674, 0.0732, 0.0942, 0.0894, 0.0698, 0.0850, 0.0986, 0.0869, 0.0952, 0.0864, 0.0859, 0.0000, 0.0000],
        [0.0011, 0.0640, 0.0620, 0.0669, 0.0845, 0.0811, 0.0640, 0.0771, 0.0889, 0.0791, 0.0864, 0.0781, 0.0776, 0.0889, 0.0000],
        [0.0012, 0.0562, 0.0569, 0.0618, 0.0791, 0.0767, 0.0576, 0.0728, 0.0825, 0.0742, 0.0811, 0.0737, 0.0732, 0.0820, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0045,      0.0043,      0.0044,      0.0045,      0.0045,      0.0044,      0.0045,      0.0045,      0.0045,      0.0046,      0.0045,      0.0045,      0.0045,      0.0045],
        [    -0.0001,      3.7344,      3.7500,      3.8281,      4.1562,      4.0625,      3.7969,      4.0000,      4.1562,      4.0312,      4.1250,      4.0000,      4.0000,      4.1562,      3.9688],
        [    -0.0001,      3.6250,      3.6406,      3.7188,      4.0625,      3.9531,      3.7188,      3.8906,      4.0938,      3.9219,      4.0312,      3.9062,      3.9062,      4.0625,      3.8906],
        [    -0.0001,      3.6719,      3.6875,      3.7812,      4.0938,      4.0000,      3.7656,      3.9531,      4.1250,      3.9688,      4.0625,      3.9688,      3.9688,      4.1250,      3.9375],
        [    -0.0001,      4.0625,      4.0000,      4.0625,      4.3125,      4.2500,      4.0312,      4.1875,      4.3438,      4.2188,      4.3125,      4.1875,      4.1875,      4.3438,      4.1562],
        [    -0.0001,      3.8125,      3.7969,      3.8750,      4.1562,      4.0625,      3.8438,      4.0312,      4.1875,      4.0312,      4.1250,      4.0312,      4.0312,      4.1875,      4.0000],
        [    -0.0001,      4.0312,      4.0312,      4.1250,      4.4062,      4.3750,      4.0625,      4.3125,      4.4375,      4.3125,      4.4062,      4.3125,      4.3125,      4.4062,      4.2812],
        [    -0.0001,      3.7656,      3.7656,      3.8594,      4.1250,      4.0625,      3.8125,      4.0000,      4.1562,      4.0312,      4.1250,      4.0312,      4.0312,      4.1562,      3.9844],
        [    -0.0001,      4.1250,      4.0938,      4.1562,      4.4062,      4.3438,      4.0938,      4.2812,      4.4375,      4.3125,      4.4062,      4.3125,      4.3125,      4.4375,      4.2812],
        [    -0.0001,      3.7812,      3.7812,      3.8594,      4.1250,      4.0625,      3.8281,      4.0312,      4.1562,      4.0312,      4.1250,      4.0312,      4.0312,      4.1562,      4.0000],
        [    -0.0001,      3.9219,      3.9062,      3.9844,      4.2500,      4.1875,      3.9531,      4.1250,      4.2812,      4.1562,      4.2500,      4.1250,      4.1250,      4.2812,      4.0938],
        [    -0.0001,      3.7812,      3.7969,      3.8750,      4.1250,      4.0625,      3.8281,      4.0312,      4.1875,      4.0312,      4.1250,      4.0312,      4.0312,      4.1562,      4.0000],
        [    -0.0001,      3.7812,      3.7969,      3.8750,      4.1250,      4.0625,      3.8281,      4.0312,      4.1562,      4.0312,      4.1250,      4.0312,      4.0312,      4.1562,      4.0000],
        [    -0.0001,      4.0938,      4.0625,      4.1562,      4.3750,      4.3438,      4.0938,      4.2812,      4.4375,      4.3125,      4.4062,      4.2812,      4.2812,      4.4375,      4.2500],
        [    -0.0001,      3.8281,      3.8438,      3.9219,      4.1875,      4.1562,      3.8594,      4.0938,      4.2188,      4.1250,      4.1875,      4.0938,      4.0938,      4.2188,      4.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0184],
        [0.0096],
        [0.0062],
        [0.0039],
        [0.0032],
        [0.0027],
        [0.0023],
        [0.0019],
        [0.0018],
        [0.0015],
        [0.0014],
        [0.0013],
        [0.0011],
        [0.0011]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0297, 0.9688, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0147, 0.5078, 0.4785, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0098, 0.3418, 0.3242, 0.3242, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0068, 0.2617, 0.2480, 0.2471, 0.2363, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.2100, 0.1992, 0.1992, 0.1904, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0048, 0.1748, 0.1660, 0.1650, 0.1582, 0.1631, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0042, 0.1504, 0.1426, 0.1426, 0.1357, 0.1396, 0.1436, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0034, 0.1328, 0.1260, 0.1250, 0.1201, 0.1235, 0.1260, 0.1230, 0.1201, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0032, 0.1182, 0.1118, 0.1118, 0.1064, 0.1099, 0.1128, 0.1099, 0.1069, 0.1089, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0028, 0.1064, 0.1011, 0.1011, 0.0962, 0.0991, 0.1016, 0.0991, 0.0967, 0.0981, 0.0977, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0026, 0.0972, 0.0918, 0.0918, 0.0874, 0.0903, 0.0928, 0.0898, 0.0879, 0.0894, 0.0889, 0.0894, 0.0000, 0.0000, 0.0000],
        [0.0024, 0.0889, 0.0845, 0.0845, 0.0806, 0.0830, 0.0850, 0.0825, 0.0806, 0.0820, 0.0815, 0.0820, 0.0825, 0.0000, 0.0000],
        [0.0021, 0.0825, 0.0781, 0.0781, 0.0747, 0.0767, 0.0786, 0.0767, 0.0747, 0.0762, 0.0757, 0.0762, 0.0762, 0.0742, 0.0000],
        [0.0021, 0.0767, 0.0728, 0.0723, 0.0693, 0.0713, 0.0732, 0.0708, 0.0693, 0.0708, 0.0703, 0.0708, 0.0708, 0.0688, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0033,      0.0033,      0.0033,      0.0032,      0.0033,      0.0033,      0.0032,      0.0032,      0.0032,      0.0032,      0.0032,      0.0032,      0.0032,      0.0032],
        [    -0.0004,      3.4844,      3.4219,      3.4219,      3.3750,      3.4062,      3.4375,      3.4062,      3.3906,      3.4062,      3.3906,      3.4062,      3.4062,      3.3750,      3.4219],
        [    -0.0004,      3.5312,      3.4844,      3.4844,      3.4375,      3.4688,      3.5000,      3.4688,      3.4375,      3.4531,      3.4531,      3.4531,      3.4531,      3.4375,      3.4688],
        [    -0.0004,      3.5469,      3.5000,      3.5000,      3.4531,      3.4844,      3.5156,      3.4844,      3.4531,      3.4688,      3.4688,      3.4688,      3.4688,      3.4531,      3.4844],
        [    -0.0004,      3.6406,      3.5938,      3.5938,      3.5469,      3.5781,      3.5938,      3.5781,      3.5469,      3.5625,      3.5625,      3.5625,      3.5625,      3.5469,      3.5781],
        [    -0.0004,      3.6094,      3.5625,      3.5625,      3.5156,      3.5469,      3.5625,      3.5469,      3.5156,      3.5312,      3.5312,      3.5312,      3.5469,      3.5156,      3.5469],
        [    -0.0004,      3.6094,      3.5469,      3.5469,      3.5000,      3.5312,      3.5625,      3.5312,      3.5000,      3.5156,      3.5156,      3.5312,      3.5312,      3.5000,      3.5312],
        [    -0.0004,      3.5938,      3.5312,      3.5312,      3.4844,      3.5156,      3.5469,      3.5156,      3.5000,      3.5156,      3.5000,      3.5156,      3.5156,      3.4844,      3.5312],
        [    -0.0004,      3.6562,      3.6094,      3.5938,      3.5625,      3.5781,      3.6094,      3.5781,      3.5625,      3.5781,      3.5625,      3.5781,      3.5781,      3.5469,      3.5781],
        [    -0.0004,      3.5938,      3.5469,      3.5469,      3.5000,      3.5312,      3.5625,      3.5312,      3.5000,      3.5156,      3.5156,      3.5156,      3.5312,      3.5000,      3.5312],
        [    -0.0004,      3.6250,      3.5781,      3.5781,      3.5312,      3.5625,      3.5781,      3.5469,      3.5312,      3.5469,      3.5469,      3.5469,      3.5469,      3.5156,      3.5625],
        [    -0.0004,      3.5938,      3.5469,      3.5469,      3.5000,      3.5312,      3.5625,      3.5312,      3.5000,      3.5156,      3.5156,      3.5156,      3.5312,      3.5000,      3.5312],
        [    -0.0004,      3.6094,      3.5469,      3.5469,      3.5000,      3.5312,      3.5625,      3.5312,      3.5000,      3.5156,      3.5156,      3.5156,      3.5312,      3.5000,      3.5312],
        [    -0.0004,      3.6562,      3.6094,      3.6094,      3.5625,      3.5938,      3.6094,      3.5938,      3.5625,      3.5781,      3.5781,      3.5781,      3.5781,      3.5625,      3.5938],
        [    -0.0004,      3.5938,      3.5469,      3.5469,      3.5000,      3.5312,      3.5469,      3.5156,      3.5000,      3.5156,      3.5156,      3.5156,      3.5156,      3.5000,      3.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0248],
        [0.0126],
        [0.0084],
        [0.0060],
        [0.0049],
        [0.0042],
        [0.0035],
        [0.0030],
        [0.0027],
        [0.0024],
        [0.0022],
        [0.0021],
        [0.0018],
        [0.0018]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0112,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.5000,     0.4941,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.3359,     0.3320,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.2520,     0.2490,     0.2461,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.2031,     0.2002,     0.1973,     0.2002,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.1699,     0.1670,     0.1650,     0.1670,     0.1660,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.1455,     0.1436,     0.1416,     0.1436,     0.1426,     0.1396,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1279,     0.1260,     0.1240,     0.1260,     0.1245,     0.1221,     0.1240,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.1138,     0.1118,     0.1104,     0.1118,     0.1108,     0.1089,     0.1104,     0.1108,     0.1099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.1025,     0.1011,     0.0996,     0.1011,     0.1001,     0.0981,     0.0991,     0.1001,     0.0991,     0.0991,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0933,     0.0918,     0.0908,     0.0918,     0.0908,     0.0894,     0.0903,     0.0908,     0.0903,     0.0903,     0.0898,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0854,     0.0840,     0.0830,     0.0845,     0.0835,     0.0815,     0.0830,     0.0835,     0.0830,     0.0825,     0.0825,     0.0825,     0.0000,     0.0000],
        [    0.0009,     0.0791,     0.0776,     0.0767,     0.0776,     0.0771,     0.0757,     0.0767,     0.0771,     0.0767,     0.0762,     0.0762,     0.0762,     0.0767,     0.0000],
        [    0.0008,     0.0732,     0.0723,     0.0713,     0.0723,     0.0718,     0.0703,     0.0713,     0.0718,     0.0713,     0.0708,     0.0708,     0.0708,     0.0713,     0.0703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046,     0.0046],
        [    0.0005,     4.4688,     4.4688,     4.4375,     4.4688,     4.4688,     4.4375,     4.4375,     4.4688,     4.4375,     4.4375,     4.4375,     4.4375,     4.4375,     4.4375],
        [    0.0005,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375],
        [    0.0005,     4.5000,     4.4688,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.5000,     4.4688,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375],
        [    0.0005,     4.5000,     4.4688,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5312,     4.5000,     4.5000,     4.5000,     4.5000,     4.4688,     4.5000,     4.5000,     4.5000,     4.4688,     4.4688,     4.4688,     4.5000,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.5000,     4.4688,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5000,     4.5000,     4.4688,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0005,     4.5312,     4.5000,     4.5000,     4.5000,     4.5000,     4.4688,     4.5000,     4.5000,     4.5000,     4.4688,     4.4688,     4.4688,     4.5000,     4.4688],
        [    0.0005,     4.5000,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0120],
        [    0.0060],
        [    0.0040],
        [    0.0030],
        [    0.0024],
        [    0.0020],
        [    0.0017],
        [    0.0015],
        [    0.0013],
        [    0.0012],
        [    0.0011],
        [    0.0010],
        [    0.0009],
        [    0.0009]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0123,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0058,     0.4863,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.3203,     0.3359,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.2383,     0.2500,     0.2539,     0.2559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.1895,     0.1982,     0.2012,     0.2041,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.1572,     0.1650,     0.1670,     0.1689,     0.1699,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.1348,     0.1406,     0.1426,     0.1445,     0.1445,     0.1455,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0014,     0.1172,     0.1230,     0.1245,     0.1260,     0.1270,     0.1270,     0.1270,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.1040,     0.1089,     0.1108,     0.1118,     0.1123,     0.1123,     0.1128,     0.1128,     0.1133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0933,     0.0977,     0.0996,     0.1006,     0.1006,     0.1011,     0.1011,     0.1016,     0.1016,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.0850,     0.0889,     0.0903,     0.0913,     0.0913,     0.0918,     0.0918,     0.0923,     0.0923,     0.0923,     0.0923,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0776,     0.0815,     0.0825,     0.0835,     0.0840,     0.0840,     0.0840,     0.0845,     0.0845,     0.0845,     0.0845,     0.0845,     0.0000,     0.0000],
        [    0.0008,     0.0718,     0.0752,     0.0762,     0.0771,     0.0771,     0.0771,     0.0776,     0.0776,     0.0781,     0.0776,     0.0776,     0.0781,     0.0781,     0.0000],
        [    0.0008,     0.0664,     0.0693,     0.0708,     0.0713,     0.0718,     0.0718,     0.0718,     0.0723,     0.0723,     0.0723,     0.0723,     0.0723,     0.0723,     0.0723]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0040,     0.0040,     0.0040,     0.0040,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041,     0.0041],
        [    0.0004,     4.3750,     4.4375,     4.4375,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688,     4.4688],
        [    0.0004,     4.4375,     4.4688,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000],
        [    0.0004,     4.4375,     4.4688,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5312,     4.5000,     4.5000,     4.5312,     4.5312,     4.5000],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.4688,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312],
        [    0.0004,     4.4375,     4.5000,     4.5000,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312,     4.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0131],
        [    0.0065],
        [    0.0043],
        [    0.0032],
        [    0.0026],
        [    0.0021],
        [    0.0018],
        [    0.0016],
        [    0.0014],
        [    0.0013],
        [    0.0012],
        [    0.0011],
        [    0.0010],
        [    0.0009]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0046,     0.4961,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.3301,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.2471,     0.2490,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.1982,     0.1992,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1650,     0.1660,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.1416,     0.1426,     0.1436,     0.1426,     0.1426,     0.1426,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.1235,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.1099,     0.1108,     0.1113,     0.1113,     0.1108,     0.1113,     0.1113,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0986,     0.0996,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0898,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0913,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0825,     0.0830,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0007,     0.0762,     0.0767,     0.0771,     0.0771,     0.0767,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0000],
        [    0.0006,     0.0703,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0718,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043,     0.0043],
        [    0.0002,     4.6250,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562,     4.6562],
        [    0.0002,     4.6562,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875],
        [    0.0002,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875],
        [    0.0002,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.7188,     4.6875],
        [    0.0002,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.6875,     4.7188,     4.7188,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188],
        [    0.0002,     4.6875,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188,     4.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0106],
        [    0.0052],
        [    0.0034],
        [    0.0025],
        [    0.0020],
        [    0.0017],
        [    0.0014],
        [    0.0013],
        [    0.0011],
        [    0.0010],
        [    0.0009],
        [    0.0008],
        [    0.0008],
        [    0.0007]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0173, 0.9844, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0085, 0.4922, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.3262, 0.3320, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0042, 0.2451, 0.2490, 0.2500, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0033, 0.1953, 0.1992, 0.2002, 0.2012, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0027, 0.1631, 0.1660, 0.1660, 0.1670, 0.1680, 0.1680, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0023, 0.1396, 0.1416, 0.1426, 0.1436, 0.1436, 0.1436, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0021, 0.1216, 0.1240, 0.1245, 0.1250, 0.1260, 0.1260, 0.1250, 0.1260, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.1084, 0.1104, 0.1108, 0.1113, 0.1113, 0.1113, 0.1113, 0.1118, 0.1118, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0016, 0.0972, 0.0991, 0.0996, 0.1001, 0.1001, 0.1001, 0.1001, 0.1006, 0.1006, 0.1011, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0015, 0.0884, 0.0898, 0.0903, 0.0908, 0.0913, 0.0913, 0.0908, 0.0913, 0.0913, 0.0918, 0.0913, 0.0000, 0.0000, 0.0000],
        [0.0014, 0.0811, 0.0825, 0.0830, 0.0830, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0840, 0.0840, 0.0840, 0.0000, 0.0000],
        [0.0013, 0.0747, 0.0762, 0.0762, 0.0767, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0776, 0.0771, 0.0776, 0.0776, 0.0000],
        [0.0012, 0.0693, 0.0708, 0.0708, 0.0713, 0.0713, 0.0713, 0.0713, 0.0718, 0.0718, 0.0718, 0.0718, 0.0718, 0.0718, 0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0034,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035,     0.0035],
        [    0.0007,     4.0312,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625,     4.0625],
        [    0.0007,     4.0625,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938],
        [    0.0007,     4.0625,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.0938,     4.1250],
        [    0.0007,     4.0625,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.0938,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250],
        [    0.0007,     4.0938,     4.0938,     4.0938,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250,     4.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0198],
        [0.0097],
        [0.0064],
        [0.0048],
        [0.0038],
        [0.0032],
        [0.0027],
        [0.0024],
        [0.0021],
        [0.0019],
        [0.0017],
        [0.0016],
        [0.0015],
        [0.0013]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(.:0.0320.:0.0310.:0.0311.:0.0311.:0.0320.:0.0311.:0.0311.:0.0311)
.
------
		(.:0.0310.:0.0311.:0.0311.:0.0320.:0.0311.:0.0311.:0.0311.:0.0311)
...............
@ 50 train 7.3610 , allloss: 7.3610, dt: 1174.86ms, fracRes: 0.0026, norm(attn): 0.1816, norm(output): 0.3633, norm(x): 0.3622, norm(y): 1.0002, norm:0.7667, tok/sec: 111564.04, flops:117.12, batch-reuse:1
@ 51 train 7.4246 , allloss: 7.4246, dt: 699.92ms, fracRes: 0.0025, norm(attn): 0.1826, norm(output): 0.3516, norm(x): 0.3537, norm(y): 1.0002, norm:1.0541, tok/sec: 187268.41, flops:196.59, batch-reuse:1
@ 52 train 7.2282 , allloss: 7.2282, dt: 716.06ms, fracRes: 0.0026, norm(attn): 0.1885, norm(output): 0.3555, norm(x): 0.3591, norm(y): 1.0002, norm:0.9796, tok/sec: 183045.71, flops:192.16, batch-reuse:1
@ 53 train 7.1969 , allloss: 7.1969, dt: 709.65ms, fracRes: 0.0027, norm(attn): 0.1992, norm(output): 0.3867, norm(x): 0.3872, norm(y): 1.0002, norm:1.0993, tok/sec: 184698.74, flops:193.90, batch-reuse:1
@ 54 train 7.2829 , allloss: 7.2829, dt: 704.27ms, fracRes: 0.0025, norm(attn): 0.2021, norm(output): 0.3730, norm(x): 0.3711, norm(y): 1.0002, norm:0.9498, tok/sec: 186110.72, flops:195.38, batch-reuse:1
@ 55 train 7.3776 , allloss: 7.3776, dt: 716.93ms, fracRes: 0.0025, norm(attn): 0.1992, norm(output): 0.3438, norm(x): 0.3480, norm(y): 1.0002, norm:1.9518, tok/sec: 182824.98, flops:191.93, batch-reuse:1
@ 56 train 7.1576 , allloss: 7.1576, dt: 702.25ms, fracRes: 0.0027, norm(attn): 0.2168, norm(output): 0.3711, norm(x): 0.3726, norm(y): 1.0002, norm:1.4154, tok/sec: 186645.34, flops:195.94, batch-reuse:1
@ 57 train 7.0662 , allloss: 7.0662, dt: 709.32ms, fracRes: 0.0028, norm(attn): 0.2197, norm(output): 0.3828, norm(x): 0.3888, norm(y): 1.0002, norm:0.8144, tok/sec: 184784.35, flops:193.99, batch-reuse:1
@ 58 train 7.1089 , allloss: 7.1089, dt: 708.50ms, fracRes: 0.0025, norm(attn): 0.2227, norm(output): 0.3770, norm(x): 0.3804, norm(y): 1.0002, norm:0.9060, tok/sec: 185000.50, flops:194.21, batch-reuse:1
@ 59 train 6.9275 , allloss: 6.9275, dt: 702.63ms, fracRes: 0.0024, norm(attn): 0.2334, norm(output): 0.3730, norm(x): 0.3754, norm(y): 1.0001, norm:1.2592, tok/sec: 186544.83, flops:195.84, batch-reuse:1
@ 60 train 7.1104 , allloss: 7.1104, dt: 706.99ms, fracRes: 0.0026, norm(attn): 0.2354, norm(output): 0.4062, norm(x): 0.4092, norm(y): 1.0001, norm:1.1062, tok/sec: 185393.42, flops:194.63, batch-reuse:1
@ 61 train 7.0230 , allloss: 7.0230, dt: 711.71ms, fracRes: 0.0027, norm(attn): 0.2383, norm(output): 0.3945, norm(x): 0.3975, norm(y): 1.0001, norm:0.6426, tok/sec: 184165.21, flops:193.34, batch-reuse:1
@ 62 train 7.0890 , allloss: 7.0890, dt: 707.61ms, fracRes: 0.0026, norm(attn): 0.2373, norm(output): 0.3750, norm(x): 0.3771, norm(y): 1.0001, norm:1.3253, tok/sec: 185231.44, flops:194.46, batch-reuse:1
@ 63 train 7.0501 , allloss: 7.0501, dt: 703.13ms, fracRes: 0.0026, norm(attn): 0.2373, norm(output): 0.3867, norm(x): 0.3895, norm(y): 1.0001, norm:1.3978, tok/sec: 186412.12, flops:195.70, batch-reuse:1
@ 64 train 7.0150 , allloss: 7.0150, dt: 709.14ms, fracRes: 0.0026, norm(attn): 0.2520, norm(output): 0.4023, norm(x): 0.3999, norm(y): 1.0001, norm:1.1167, tok/sec: 184833.00, flops:194.04, batch-reuse:1
@ 65 train 7.0924 , allloss: 7.0924, dt: 705.86ms, fracRes: 0.0027, norm(attn): 0.2520, norm(output): 0.4004, norm(x): 0.4033, norm(y): 1.0001, norm:0.8890, tok/sec: 185690.42, flops:194.94, batch-reuse:1
@ 66 train 7.1332 , allloss: 7.1332, dt: 701.68ms, fracRes: 0.0026, norm(attn): 0.2539, norm(output): 0.4062, norm(x): 0.4030, norm(y): 1.0000, norm:1.1438, tok/sec: 186796.65, flops:196.10, batch-reuse:1
@ 67 train 7.0136 , allloss: 7.0136, dt: 702.76ms, fracRes: 0.0025, norm(attn): 0.2656, norm(output): 0.3926, norm(x): 0.3965, norm(y): 1.0000, norm:0.9979, tok/sec: 186510.08, flops:195.80, batch-reuse:1
@ 68 train 7.0424 , allloss: 7.0424, dt: 699.11ms, fracRes: 0.0026, norm(attn): 0.2773, norm(output): 0.4141, norm(x): 0.4165, norm(y): 1.0000, norm:1.1013, tok/sec: 187484.97, flops:196.82, batch-reuse:1
@ 69 train 6.9172 , allloss: 6.9172, dt: 704.10ms, fracRes: 0.0026, norm(attn): 0.2832, norm(output): 0.4121, norm(x): 0.4180, norm(y): 1.0000, norm:0.7004, tok/sec: 186154.21, flops:195.43, batch-reuse:1
@ 70 train 6.9280 , allloss: 6.9280, dt: 707.11ms, fracRes: 0.0025, norm(attn): 0.2812, norm(output): 0.4004, norm(x): 0.3992, norm(y): 1.0000, norm:1.0143, tok/sec: 185362.35, flops:194.59, batch-reuse:1
@ 71 train 6.8810 , allloss: 6.8810, dt: 713.17ms, fracRes: 0.0026, norm(attn): 0.2832, norm(output): 0.3906, norm(x): 0.3913, norm(y): 0.9999, norm:0.8176, tok/sec: 183787.43, flops:192.94, batch-reuse:1
@ 72 train 6.9363 , allloss: 6.9363, dt: 700.93ms, fracRes: 0.0026, norm(attn): 0.2930, norm(output): 0.3945, norm(x): 0.3959, norm(y): 0.9999, norm:0.9121, tok/sec: 186998.26, flops:196.31, batch-reuse:1
@ 73 train 7.0231 , allloss: 7.0231, dt: 711.06ms, fracRes: 0.0025, norm(attn): 0.2969, norm(output): 0.3945, norm(x): 0.3960, norm(y): 0.9999, norm:0.6636, tok/sec: 184332.43, flops:193.51, batch-reuse:1
@ 74 train 6.9365 , allloss: 6.9365, dt: 703.28ms, fracRes: 0.0025, norm(attn): 0.3008, norm(output): 0.3926, norm(x): 0.3981, norm(y): 0.9999, norm:0.8031, tok/sec: 186371.87, flops:195.65, batch-reuse:1
@ 75 train 7.5471 , allloss: 7.5471, dt: 715.98ms, fracRes: 0.0026, norm(attn): 0.3086, norm(output): 0.4160, norm(x): 0.4209, norm(y): 0.9999, norm:1.0085, tok/sec: 183066.31, flops:192.18, batch-reuse:1
@ 76 train 6.9101 , allloss: 6.9101, dt: 700.46ms, fracRes: 0.0025, norm(attn): 0.3086, norm(output): 0.4043, norm(x): 0.4029, norm(y): 0.9999, norm:1.3451, tok/sec: 187123.97, flops:196.44, batch-reuse:1
@ 77 train 7.6595 , allloss: 7.6595, dt: 698.26ms, fracRes: 0.0026, norm(attn): 0.3125, norm(output): 0.4121, norm(x): 0.4105, norm(y): 0.9999, norm:1.6014, tok/sec: 187712.10, flops:197.06, batch-reuse:1
@ 78 train 7.1460 , allloss: 7.1460, dt: 702.81ms, fracRes: 0.0027, norm(attn): 0.3184, norm(output): 0.4023, norm(x): 0.4049, norm(y): 0.9998, norm:1.2902, tok/sec: 186498.31, flops:195.79, batch-reuse:1
@ 79 train 6.8305 , allloss: 6.8305, dt: 703.12ms, fracRes: 0.0026, norm(attn): 0.3125, norm(output): 0.4004, norm(x): 0.3993, norm(y): 0.9998, norm:1.2177, tok/sec: 186413.95, flops:195.70, batch-reuse:1
@ 80 train 6.8457 , allloss: 6.8457, dt: 707.71ms, fracRes: 0.0025, norm(attn): 0.3242, norm(output): 0.3965, norm(x): 0.3962, norm(y): 0.9998, norm:0.9681, tok/sec: 185205.30, flops:194.43, batch-reuse:1
@ 81 train 6.8763 , allloss: 6.8763, dt: 713.62ms, fracRes: 0.0024, norm(attn): 0.3379, norm(output): 0.3965, norm(x): 0.4005, norm(y): 0.9998, norm:0.9710, tok/sec: 183672.67, flops:192.82, batch-reuse:1
@ 82 train 6.8500 , allloss: 6.8500, dt: 714.44ms, fracRes: 0.0025, norm(attn): 0.3340, norm(output): 0.4160, norm(x): 0.4165, norm(y): 0.9998, norm:0.9268, tok/sec: 183462.25, flops:192.60, batch-reuse:1
@ 83 train 6.8185 , allloss: 6.8185, dt: 713.69ms, fracRes: 0.0024, norm(attn): 0.3457, norm(output): 0.4219, norm(x): 0.4232, norm(y): 0.9998, norm:0.9294, tok/sec: 183654.51, flops:192.80, batch-reuse:1
@ 84 train 6.8435 , allloss: 6.8435, dt: 716.21ms, fracRes: 0.0024, norm(attn): 0.3535, norm(output): 0.4141, norm(x): 0.4193, norm(y): 0.9998, norm:0.5764, tok/sec: 183007.99, flops:192.12, batch-reuse:1
@ 85 train 6.7773 , allloss: 6.7773, dt: 719.38ms, fracRes: 0.0024, norm(attn): 0.3652, norm(output): 0.4180, norm(x): 0.4174, norm(y): 0.9997, norm:0.7253, tok/sec: 182202.57, flops:191.28, batch-reuse:1
@ 86 train 6.7420 , allloss: 6.7420, dt: 719.37ms, fracRes: 0.0024, norm(attn): 0.3711, norm(output): 0.4160, norm(x): 0.4176, norm(y): 0.9997, norm:0.5701, tok/sec: 182204.38, flops:191.28, batch-reuse:1
@ 87 train 6.8077 , allloss: 6.8077, dt: 716.19ms, fracRes: 0.0024, norm(attn): 0.3691, norm(output): 0.3984, norm(x): 0.3971, norm(y): 0.9997, norm:0.8937, tok/sec: 183012.01, flops:192.13, batch-reuse:1
@ 88 train 6.7630 , allloss: 6.7630, dt: 711.26ms, fracRes: 0.0024, norm(attn): 0.3770, norm(output): 0.4082, norm(x): 0.4092, norm(y): 0.9997, norm:0.7715, tok/sec: 184280.96, flops:193.46, batch-reuse:1
@ 89 train 6.7120 , allloss: 6.7120, dt: 703.36ms, fracRes: 0.0024, norm(attn): 0.3770, norm(output): 0.4082, norm(x): 0.4092, norm(y): 0.9996, norm:0.6828, tok/sec: 186350.83, flops:195.63, batch-reuse:1
@ 90 train 6.7135 , allloss: 6.7135, dt: 711.00ms, fracRes: 0.0025, norm(attn): 0.3867, norm(output): 0.4102, norm(x): 0.4124, norm(y): 0.9996, norm:0.7473, tok/sec: 184348.88, flops:193.53, batch-reuse:1
@ 91 train 6.6920 , allloss: 6.6920, dt: 727.84ms, fracRes: 0.0024, norm(attn): 0.3984, norm(output): 0.4062, norm(x): 0.4069, norm(y): 0.9996, norm:0.8791, tok/sec: 180083.08, flops:189.05, batch-reuse:1
@ 92 train 6.6651 , allloss: 6.6651, dt: 726.30ms, fracRes: 0.0024, norm(attn): 0.3887, norm(output): 0.4043, norm(x): 0.4070, norm(y): 0.9996, norm:0.7542, tok/sec: 180465.79, flops:189.45, batch-reuse:1
@ 93 train 6.6557 , allloss: 6.6557, dt: 727.41ms, fracRes: 0.0025, norm(attn): 0.4043, norm(output): 0.4121, norm(x): 0.4140, norm(y): 0.9996, norm:0.6713, tok/sec: 180189.08, flops:189.16, batch-reuse:1
@ 94 train 6.9158 , allloss: 6.9158, dt: 715.05ms, fracRes: 0.0024, norm(attn): 0.4043, norm(output): 0.4141, norm(x): 0.4121, norm(y): 0.9995, norm:0.9007, tok/sec: 183304.24, flops:192.43, batch-reuse:1
@ 95 train 6.6671 , allloss: 6.6671, dt: 714.04ms, fracRes: 0.0024, norm(attn): 0.4062, norm(output): 0.4023, norm(x): 0.4038, norm(y): 0.9995, norm:0.7534, tok/sec: 183563.57, flops:192.71, batch-reuse:1
@ 96 train 6.5764 , allloss: 6.5764, dt: 715.91ms, fracRes: 0.0025, norm(attn): 0.4297, norm(output): 0.4219, norm(x): 0.4250, norm(y): 0.9995, norm:1.0254, tok/sec: 183083.93, flops:192.20, batch-reuse:1
@ 97 train 6.6285 , allloss: 6.6285, dt: 726.37ms, fracRes: 0.0023, norm(attn): 0.4336, norm(output): 0.4043, norm(x): 0.4044, norm(y): 0.9995, norm:0.8942, tok/sec: 180448.43, flops:189.44, batch-reuse:1
@ 98 train 6.7015 , allloss: 6.7015, dt: 721.97ms, fracRes: 0.0023, norm(attn): 0.4395, norm(output): 0.4453, norm(x): 0.4442, norm(y): 0.9995, norm:1.0132, tok/sec: 181546.67, flops:190.59, batch-reuse:1
@ 99 train 6.5949 , allloss: 6.5949, dt: 722.68ms, fracRes: 0.0023, norm(attn): 0.4512, norm(output): 0.4453, norm(x): 0.4478, norm(y): 0.9995, norm:0.9070, tok/sec: 181369.20, flops:190.40, batch-reuse:1
@ 100 train 6.6246 , allloss: 6.6246, dt: 720.87ms, fracRes: 0.0023, norm(attn): 0.4590, norm(output): 0.4297, norm(x): 0.4289, norm(y): 0.9995, norm:0.8550, tok/sec: 181824.07, flops:190.88, batch-reuse:1
@ 101 train 6.4448 , allloss: 6.4448, dt: 721.77ms, fracRes: 0.0022, norm(attn): 0.4688, norm(output): 0.4336, norm(x): 0.4351, norm(y): 0.9995, norm:0.5802, tok/sec: 181597.16, flops:190.64, batch-reuse:1
@ 102 train 6.5537 , allloss: 6.5537, dt: 728.67ms, fracRes: 0.0022, norm(attn): 0.4922, norm(output): 0.4414, norm(x): 0.4467, norm(y): 0.9994, norm:0.7623, tok/sec: 179879.32, flops:188.84, batch-reuse:1
@ 103 train 6.5192 , allloss: 6.5192, dt: 725.18ms, fracRes: 0.0023, norm(attn): 0.5000, norm(output): 0.4375, norm(x): 0.4380, norm(y): 0.9994, norm:0.5121, tok/sec: 180744.47, flops:189.75, batch-reuse:1
@ 104 train 6.6246 , allloss: 6.6246, dt: 726.97ms, fracRes: 0.0023, norm(attn): 0.5039, norm(output): 0.4258, norm(x): 0.4275, norm(y): 0.9994, norm:0.6735, tok/sec: 180298.94, flops:189.28, batch-reuse:1
@ 105 train 6.5893 , allloss: 6.5893, dt: 709.93ms, fracRes: 0.0023, norm(attn): 0.5156, norm(output): 0.4395, norm(x): 0.4396, norm(y): 0.9994, norm:0.4882, tok/sec: 184627.72, flops:193.82, batch-reuse:1
@ 106 train 6.4891 , allloss: 6.4891, dt: 723.82ms, fracRes: 0.0022, norm(attn): 0.5234, norm(output): 0.4473, norm(x): 0.4487, norm(y): 0.9993, norm:0.6164, tok/sec: 181083.94, flops:190.10, batch-reuse:1
@ 107 train 6.5007 , allloss: 6.5007, dt: 720.80ms, fracRes: 0.0022, norm(attn): 0.5312, norm(output): 0.4336, norm(x): 0.4330, norm(y): 0.9993, norm:0.5062, tok/sec: 181841.45, flops:190.90, batch-reuse:1
@ 108 train 6.4748 , allloss: 6.4748, dt: 725.47ms, fracRes: 0.0023, norm(attn): 0.5391, norm(output): 0.4375, norm(x): 0.4367, norm(y): 0.9993, norm:0.5057, tok/sec: 180671.17, flops:189.67, batch-reuse:1
@ 109 train 6.4648 , allloss: 6.4648, dt: 706.04ms, fracRes: 0.0023, norm(attn): 0.5586, norm(output): 0.4355, norm(x): 0.4381, norm(y): 0.9993, norm:0.5005, tok/sec: 185644.09, flops:194.89, batch-reuse:1
@ 110 train 6.4723 , allloss: 6.4723, dt: 703.91ms, fracRes: 0.0022, norm(attn): 0.5625, norm(output): 0.4395, norm(x): 0.4419, norm(y): 0.9993, norm:0.4823, tok/sec: 186205.53, flops:195.48, batch-reuse:1
@ 111 train 6.4801 , allloss: 6.4801, dt: 705.22ms, fracRes: 0.0021, norm(attn): 0.5664, norm(output): 0.4355, norm(x): 0.4351, norm(y): 0.9993, norm:0.4155, tok/sec: 185859.42, flops:195.12, batch-reuse:1
@ 112 train 6.5021 , allloss: 6.5021, dt: 703.60ms, fracRes: 0.0022, norm(attn): 0.5820, norm(output): 0.4316, norm(x): 0.4310, norm(y): 0.9993, norm:0.4053, tok/sec: 186287.43, flops:195.56, batch-reuse:1
@ 113 train 6.4561 , allloss: 6.4561, dt: 712.02ms, fracRes: 0.0022, norm(attn): 0.5859, norm(output): 0.4121, norm(x): 0.4205, norm(y): 0.9993, norm:0.4744, tok/sec: 184084.43, flops:193.25, batch-reuse:1
@ 114 train 6.4596 , allloss: 6.4596, dt: 695.59ms, fracRes: 0.0021, norm(attn): 0.5938, norm(output): 0.4141, norm(x): 0.4185, norm(y): 0.9993, norm:0.4020, tok/sec: 188432.64, flops:197.82, batch-reuse:1
@ 115 train 6.3945 , allloss: 6.3945, dt: 706.12ms, fracRes: 0.0022, norm(attn): 0.5938, norm(output): 0.4180, norm(x): 0.4212, norm(y): 0.9993, norm:0.5176, tok/sec: 185623.09, flops:194.87, batch-reuse:1
@ 116 train 6.3721 , allloss: 6.3721, dt: 704.55ms, fracRes: 0.0022, norm(attn): 0.6172, norm(output): 0.4121, norm(x): 0.4175, norm(y): 0.9993, norm:0.4301, tok/sec: 186035.53, flops:195.30, batch-reuse:1
@ 117 train 6.3947 , allloss: 6.3947, dt: 697.50ms, fracRes: 0.0022, norm(attn): 0.6133, norm(output): 0.4121, norm(x): 0.4160, norm(y): 0.9993, norm:0.5114, tok/sec: 187916.40, flops:197.27, batch-reuse:1
@ 118 train 6.3978 , allloss: 6.3978, dt: 700.83ms, fracRes: 0.0021, norm(attn): 0.6211, norm(output): 0.4199, norm(x): 0.4219, norm(y): 0.9993, norm:0.4096, tok/sec: 187024.85, flops:196.34, batch-reuse:1
@ 119 train 6.3401 , allloss: 6.3401, dt: 704.33ms, fracRes: 0.0022, norm(attn): 0.6211, norm(output): 0.4141, norm(x): 0.4162, norm(y): 0.9993, norm:0.5623, tok/sec: 186095.29, flops:195.36, batch-reuse:1
@ 120 train 6.4921 , allloss: 6.4921, dt: 718.17ms, fracRes: 0.0022, norm(attn): 0.6172, norm(output): 0.4062, norm(x): 0.4105, norm(y): 0.9992, norm:0.3990, tok/sec: 182507.85, flops:191.60, batch-reuse:1
@ 121 train 6.5600 , allloss: 6.5600, dt: 696.89ms, fracRes: 0.0022, norm(attn): 0.6211, norm(output): 0.4102, norm(x): 0.4133, norm(y): 0.9992, norm:0.4530, tok/sec: 188082.65, flops:197.45, batch-reuse:1
@ 122 train 6.5192 , allloss: 6.5192, dt: 712.95ms, fracRes: 0.0022, norm(attn): 0.6172, norm(output): 0.4102, norm(x): 0.4101, norm(y): 0.9992, norm:0.4331, tok/sec: 183844.53, flops:193.00, batch-reuse:1
@ 123 train 6.4017 , allloss: 6.4017, dt: 699.32ms, fracRes: 0.0023, norm(attn): 0.6250, norm(output): 0.4043, norm(x): 0.4043, norm(y): 0.9992, norm:0.4259, tok/sec: 187428.79, flops:196.76, batch-reuse:1
@ 124 train 6.4274 , allloss: 6.4274, dt: 699.94ms, fracRes: 0.0023, norm(attn): 0.6211, norm(output): 0.4023, norm(x): 0.3984, norm(y): 0.9992, norm:0.3842, tok/sec: 187261.46, flops:196.59, batch-reuse:1
@ 125 train 6.4485 , allloss: 6.4485, dt: 694.20ms, fracRes: 0.0027, norm(attn): 0.6289, norm(output): 0.3945, norm(x): 0.3941, norm(y): 0.9992, norm:0.4136, tok/sec: 188809.61, flops:198.21, batch-reuse:1
@ 126 train 6.4540 , allloss: 6.4540, dt: 709.10ms, fracRes: 0.0025, norm(attn): 0.6328, norm(output): 0.3828, norm(x): 0.3877, norm(y): 0.9992, norm:0.6214, tok/sec: 184842.45, flops:194.05, batch-reuse:1
@ 127 train 6.3653 , allloss: 6.3653, dt: 716.13ms, fracRes: 0.0023, norm(attn): 0.6289, norm(output): 0.3770, norm(x): 0.3815, norm(y): 0.9992, norm:0.6370, tok/sec: 183028.09, flops:192.14, batch-reuse:1
@ 128 train 6.3392 , allloss: 6.3392, dt: 716.63ms, fracRes: 0.0023, norm(attn): 0.6484, norm(output): 0.3789, norm(x): 0.3815, norm(y): 0.9992, norm:0.8196, tok/sec: 182900.65, flops:192.01, batch-reuse:1
@ 129 train 6.4574 , allloss: 6.4574, dt: 709.09ms, fracRes: 0.0023, norm(attn): 0.6367, norm(output): 0.3848, norm(x): 0.3866, norm(y): 0.9991, norm:0.7314, tok/sec: 184844.25, flops:194.05, batch-reuse:1
@ 130 train 6.4634 , allloss: 6.4634, dt: 711.24ms, fracRes: 0.0022, norm(attn): 0.6484, norm(output): 0.3828, norm(x): 0.3861, norm(y): 0.9992, norm:0.7263, tok/sec: 184287.82, flops:193.47, batch-reuse:1
@ 131 train 6.4490 , allloss: 6.4490, dt: 701.49ms, fracRes: 0.0022, norm(attn): 0.6680, norm(output): 0.3828, norm(x): 0.3902, norm(y): 0.9991, norm:0.5229, tok/sec: 186846.74, flops:196.15, batch-reuse:1
@ 132 train 6.4855 , allloss: 6.4855, dt: 697.70ms, fracRes: 0.0021, norm(attn): 0.6641, norm(output): 0.3770, norm(x): 0.3788, norm(y): 0.9991, norm:0.5691, tok/sec: 187862.84, flops:197.22, batch-reuse:1
@ 133 train 6.3955 , allloss: 6.3955, dt: 701.78ms, fracRes: 0.0022, norm(attn): 0.6680, norm(output): 0.3770, norm(x): 0.3768, norm(y): 0.9991, norm:0.7959, tok/sec: 186770.00, flops:196.07, batch-reuse:1
@ 134 train 6.4722 , allloss: 6.4722, dt: 711.60ms, fracRes: 0.0022, norm(attn): 0.6836, norm(output): 0.3789, norm(x): 0.3776, norm(y): 0.9992, norm:0.7213, tok/sec: 184192.92, flops:193.37, batch-reuse:1
@ 135 train 6.3458 , allloss: 6.3458, dt: 706.12ms, fracRes: 0.0022, norm(attn): 0.6680, norm(output): 0.3691, norm(x): 0.3682, norm(y): 0.9991, norm:0.7817, tok/sec: 185622.08, flops:194.87, batch-reuse:1
@ 136 train 6.4028 , allloss: 6.4028, dt: 702.99ms, fracRes: 0.0023, norm(attn): 0.6875, norm(output): 0.3906, norm(x): 0.3946, norm(y): 0.9992, norm:0.9703, tok/sec: 186450.31, flops:195.74, batch-reuse:1
@ 137 train 6.2599 , allloss: 6.2599, dt: 698.70ms, fracRes: 0.0023, norm(attn): 0.6914, norm(output): 0.3926, norm(x): 0.3911, norm(y): 0.9992, norm:0.4565, tok/sec: 187594.63, flops:196.94, batch-reuse:1
@ 138 train 6.2686 , allloss: 6.2686, dt: 707.14ms, fracRes: 0.0022, norm(attn): 0.7266, norm(output): 0.3730, norm(x): 0.3742, norm(y): 0.9991, norm:0.6075, tok/sec: 185353.98, flops:194.58, batch-reuse:1
@ 139 train 6.2568 , allloss: 6.2568, dt: 700.78ms, fracRes: 0.0023, norm(attn): 0.7461, norm(output): 0.3770, norm(x): 0.3789, norm(y): 0.9992, norm:0.5913, tok/sec: 187038.28, flops:196.35, batch-reuse:1
@ 140 train 6.2615 , allloss: 6.2615, dt: 702.41ms, fracRes: 0.0022, norm(attn): 0.7500, norm(output): 0.3711, norm(x): 0.3706, norm(y): 0.9992, norm:0.8328, tok/sec: 186603.08, flops:195.90, batch-reuse:1
@ 141 train 6.2537 , allloss: 6.2537, dt: 697.52ms, fracRes: 0.0021, norm(attn): 0.7461, norm(output): 0.3633, norm(x): 0.3631, norm(y): 0.9991, norm:0.5774, tok/sec: 187912.42, flops:197.27, batch-reuse:1
@ 142 train 6.3475 , allloss: 6.3475, dt: 695.29ms, fracRes: 0.0023, norm(attn): 0.7578, norm(output): 0.3770, norm(x): 0.3814, norm(y): 0.9991, norm:0.5797, tok/sec: 188515.16, flops:197.90, batch-reuse:1
@ 143 train 6.2797 , allloss: 6.2797, dt: 707.05ms, fracRes: 0.0022, norm(attn): 0.7656, norm(output): 0.3691, norm(x): 0.3721, norm(y): 0.9991, norm:0.5323, tok/sec: 185379.16, flops:194.61, batch-reuse:1
@ 144 train 6.2508 , allloss: 6.2508, dt: 708.08ms, fracRes: 0.0022, norm(attn): 0.7695, norm(output): 0.3652, norm(x): 0.3673, norm(y): 0.9992, norm:0.4593, tok/sec: 185110.26, flops:194.33, batch-reuse:1
@ 145 train 6.2521 , allloss: 6.2521, dt: 706.31ms, fracRes: 0.0022, norm(attn): 0.7812, norm(output): 0.3770, norm(x): 0.3766, norm(y): 0.9991, norm:0.4826, tok/sec: 185573.21, flops:194.82, batch-reuse:1
@ 146 train 6.4173 , allloss: 6.4173, dt: 706.40ms, fracRes: 0.0022, norm(attn): 0.7969, norm(output): 0.3789, norm(x): 0.3798, norm(y): 0.9991, norm:0.4300, tok/sec: 185548.66, flops:194.79, batch-reuse:1
@ 147 train 6.2647 , allloss: 6.2647, dt: 719.79ms, fracRes: 0.0021, norm(attn): 0.8086, norm(output): 0.3711, norm(x): 0.3702, norm(y): 0.9992, norm:0.4796, tok/sec: 182097.44, flops:191.17, batch-reuse:1
@ 148 train 6.2138 , allloss: 6.2138, dt: 710.78ms, fracRes: 0.0021, norm(attn): 0.8125, norm(output): 0.3672, norm(x): 0.3664, norm(y): 0.9991, norm:0.3586, tok/sec: 184406.69, flops:193.59, batch-reuse:1
@ 149 train 6.1046 , allloss: 6.1046, dt: 718.42ms, fracRes: 0.0022, norm(attn): 0.8203, norm(output): 0.3652, norm(x): 0.3666, norm(y): 0.9992, norm:0.4545, tok/sec: 182444.68, flops:191.53, batch-reuse:1
@ 150 train 6.3360 , allloss: 6.3360, dt: 722.31ms, fracRes: 0.0021, norm(attn): 0.8164, norm(output): 0.3633, norm(x): 0.3608, norm(y): 0.9992, norm:0.3936, tok/sec: 181462.54, flops:190.50, batch-reuse:1
@ 151 train 6.1248 , allloss: 6.1248, dt: 717.02ms, fracRes: 0.0022, norm(attn): 0.8203, norm(output): 0.3633, norm(x): 0.3573, norm(y): 0.9992, norm:0.3472, tok/sec: 182801.76, flops:191.91, batch-reuse:1
@ 152 train 6.1761 , allloss: 6.1761, dt: 705.05ms, fracRes: 0.0022, norm(attn): 0.8164, norm(output): 0.3594, norm(x): 0.3582, norm(y): 0.9992, norm:0.6285, tok/sec: 185903.98, flops:195.16, batch-reuse:1
@ 153 train 6.1198 , allloss: 6.1198, dt: 721.40ms, fracRes: 0.0023, norm(attn): 0.8086, norm(output): 0.3477, norm(x): 0.3484, norm(y): 0.9991, norm:0.6569, tok/sec: 181692.29, flops:190.74, batch-reuse:1
@ 154 train 6.2185 , allloss: 6.2185, dt: 722.29ms, fracRes: 0.0022, norm(attn): 0.8281, norm(output): 0.3516, norm(x): 0.3557, norm(y): 0.9992, norm:0.6197, tok/sec: 181466.61, flops:190.50, batch-reuse:1
@ 155 train 6.3860 , allloss: 6.3860, dt: 723.16ms, fracRes: 0.0022, norm(attn): 0.8516, norm(output): 0.3516, norm(x): 0.3544, norm(y): 0.9991, norm:0.6033, tok/sec: 181248.66, flops:190.28, batch-reuse:1
@ 156 train 6.1845 , allloss: 6.1845, dt: 717.84ms, fracRes: 0.0022, norm(attn): 0.8789, norm(output): 0.3594, norm(x): 0.3588, norm(y): 0.9992, norm:0.4465, tok/sec: 182593.02, flops:191.69, batch-reuse:1
@ 157 train 6.2946 , allloss: 6.2946, dt: 702.89ms, fracRes: 0.0022, norm(attn): 0.9219, norm(output): 0.3594, norm(x): 0.3591, norm(y): 0.9992, norm:0.4970, tok/sec: 186474.66, flops:195.76, batch-reuse:1
@ 158 train 6.2552 , allloss: 6.2552, dt: 708.66ms, fracRes: 0.0021, norm(attn): 0.9258, norm(output): 0.3535, norm(x): 0.3536, norm(y): 0.9991, norm:0.5621, tok/sec: 184958.24, flops:194.17, batch-reuse:1
@ 159 train 6.2921 , allloss: 6.2921, dt: 721.19ms, fracRes: 0.0021, norm(attn): 0.9375, norm(output): 0.3496, norm(x): 0.3525, norm(y): 0.9992, norm:0.5072, tok/sec: 181744.13, flops:190.80, batch-reuse:1
@ 160 train 6.1779 , allloss: 6.1779, dt: 730.73ms, fracRes: 0.0021, norm(attn): 0.9531, norm(output): 0.3438, norm(x): 0.3452, norm(y): 0.9992, norm:0.4455, tok/sec: 179371.24, flops:188.30, batch-reuse:1
@ 161 train 6.1616 , allloss: 6.1616, dt: 696.27ms, fracRes: 0.0021, norm(attn): 0.9688, norm(output): 0.3418, norm(x): 0.3425, norm(y): 0.9992, norm:0.4708, tok/sec: 188247.65, flops:197.62, batch-reuse:1
@ 162 train 6.3074 , allloss: 6.3074, dt: 709.02ms, fracRes: 0.0021, norm(attn): 0.9922, norm(output): 0.3477, norm(x): 0.3524, norm(y): 0.9992, norm:0.4522, tok/sec: 184863.58, flops:194.07, batch-reuse:1
@ 163 train 6.1930 , allloss: 6.1930, dt: 695.30ms, fracRes: 0.0021, norm(attn): 0.9961, norm(output): 0.3477, norm(x): 0.3499, norm(y): 0.9992, norm:0.3871, tok/sec: 188512.44, flops:197.90, batch-reuse:1
@ 164 train 6.1162 , allloss: 6.1162, dt: 707.87ms, fracRes: 0.0021, norm(attn): 1.0000, norm(output): 0.3398, norm(x): 0.3399, norm(y): 0.9992, norm:0.4807, tok/sec: 185164.44, flops:194.39, batch-reuse:1
@ 165 train 6.2427 , allloss: 6.2427, dt: 706.28ms, fracRes: 0.0022, norm(attn): 1.0078, norm(output): 0.3438, norm(x): 0.3439, norm(y): 0.9992, norm:0.5357, tok/sec: 185579.48, flops:194.82, batch-reuse:1
@ 166 train 6.2030 , allloss: 6.2030, dt: 702.09ms, fracRes: 0.0021, norm(attn): 0.9961, norm(output): 0.3418, norm(x): 0.3435, norm(y): 0.9992, norm:0.5407, tok/sec: 186687.93, flops:195.99, batch-reuse:1
@ 167 train 6.2717 , allloss: 6.2717, dt: 707.81ms, fracRes: 0.0021, norm(attn): 1.0156, norm(output): 0.3457, norm(x): 0.3475, norm(y): 0.9992, norm:0.6268, tok/sec: 185180.22, flops:194.40, batch-reuse:1
@ 168 train 6.1192 , allloss: 6.1192, dt: 711.13ms, fracRes: 0.0022, norm(attn): 1.0547, norm(output): 0.3516, norm(x): 0.3541, norm(y): 0.9992, norm:0.5441, tok/sec: 184315.01, flops:193.49, batch-reuse:1
@ 169 train 6.1571 , allloss: 6.1571, dt: 722.24ms, fracRes: 0.0021, norm(attn): 1.0547, norm(output): 0.3457, norm(x): 0.3480, norm(y): 0.9992, norm:0.5028, tok/sec: 181478.95, flops:190.52, batch-reuse:1
@ 170 train 6.1377 , allloss: 6.1377, dt: 716.70ms, fracRes: 0.0020, norm(attn): 1.0625, norm(output): 0.3457, norm(x): 0.3456, norm(y): 0.9992, norm:0.5252, tok/sec: 182883.91, flops:191.99, batch-reuse:1
@ 171 train 6.1157 , allloss: 6.1157, dt: 713.46ms, fracRes: 0.0020, norm(attn): 1.0703, norm(output): 0.3379, norm(x): 0.3368, norm(y): 0.9992, norm:0.4341, tok/sec: 183714.10, flops:192.86, batch-reuse:1
@ 172 train 6.1631 , allloss: 6.1631, dt: 720.33ms, fracRes: 0.0021, norm(attn): 1.0781, norm(output): 0.3262, norm(x): 0.3306, norm(y): 0.9991, norm:0.4798, tok/sec: 181960.74, flops:191.02, batch-reuse:1
@ 173 train 6.1412 , allloss: 6.1412, dt: 708.72ms, fracRes: 0.0021, norm(attn): 1.1016, norm(output): 0.3242, norm(x): 0.3310, norm(y): 0.9991, norm:0.3907, tok/sec: 184942.06, flops:194.15, batch-reuse:1
@ 174 train 6.2905 , allloss: 6.2905, dt: 720.59ms, fracRes: 0.0021, norm(attn): 1.1094, norm(output): 0.3281, norm(x): 0.3325, norm(y): 0.9992, norm:0.5161, tok/sec: 181895.42, flops:190.95, batch-reuse:1
@ 175 train 6.1908 , allloss: 6.1908, dt: 719.15ms, fracRes: 0.0020, norm(attn): 1.0938, norm(output): 0.3242, norm(x): 0.3285, norm(y): 0.9990, norm:1.4931, tok/sec: 182258.45, flops:191.34, batch-reuse:1
@ 176 train 6.2138 , allloss: 6.2138, dt: 720.60ms, fracRes: 0.0021, norm(attn): 1.0781, norm(output): 0.3320, norm(x): 0.3321, norm(y): 0.9992, norm:0.4503, tok/sec: 181892.47, flops:190.95, batch-reuse:1
@ 177 train 6.1667 , allloss: 6.1667, dt: 714.30ms, fracRes: 0.0022, norm(attn): 1.1250, norm(output): 0.3281, norm(x): 0.3314, norm(y): 0.9992, norm:0.6037, tok/sec: 183496.97, flops:192.64, batch-reuse:1
@ 178 train 6.2102 , allloss: 6.2102, dt: 698.07ms, fracRes: 0.0021, norm(attn): 1.1406, norm(output): 0.3301, norm(x): 0.3276, norm(y): 0.9991, norm:0.4808, tok/sec: 187763.90, flops:197.11, batch-reuse:1
@ 179 train 6.0805 , allloss: 6.0805, dt: 706.21ms, fracRes: 0.0020, norm(attn): 1.1484, norm(output): 0.3340, norm(x): 0.3304, norm(y): 0.9992, norm:0.4779, tok/sec: 185599.21, flops:194.84, batch-reuse:1
@ 180 train 6.1919 , allloss: 6.1919, dt: 698.98ms, fracRes: 0.0020, norm(attn): 1.1719, norm(output): 0.3320, norm(x): 0.3310, norm(y): 0.9992, norm:0.5792, tok/sec: 187517.72, flops:196.86, batch-reuse:1
@ 181 train 6.0749 , allloss: 6.0749, dt: 708.63ms, fracRes: 0.0020, norm(attn): 1.1719, norm(output): 0.3242, norm(x): 0.3242, norm(y): 0.9992, norm:0.5151, tok/sec: 184965.40, flops:194.18, batch-reuse:1
@ 182 train 6.1951 , allloss: 6.1951, dt: 708.96ms, fracRes: 0.0020, norm(attn): 1.1875, norm(output): 0.3223, norm(x): 0.3211, norm(y): 0.9992, norm:0.3958, tok/sec: 184879.00, flops:194.09, batch-reuse:1
@ 183 train 6.1345 , allloss: 6.1345, dt: 713.86ms, fracRes: 0.0020, norm(attn): 1.2344, norm(output): 0.3203, norm(x): 0.3229, norm(y): 0.9992, norm:0.4024, tok/sec: 183609.36, flops:192.75, batch-reuse:1
@ 184 train 6.0193 , allloss: 6.0193, dt: 716.07ms, fracRes: 0.0020, norm(attn): 1.2422, norm(output): 0.3184, norm(x): 0.3223, norm(y): 0.9992, norm:0.3661, tok/sec: 183042.84, flops:192.16, batch-reuse:1
@ 185 train 6.0541 , allloss: 6.0541, dt: 707.53ms, fracRes: 0.0019, norm(attn): 1.2500, norm(output): 0.3184, norm(x): 0.3211, norm(y): 0.9992, norm:0.4125, tok/sec: 185253.60, flops:194.48, batch-reuse:1
@ 186 train 6.2042 , allloss: 6.2042, dt: 710.58ms, fracRes: 0.0019, norm(attn): 1.2578, norm(output): 0.3203, norm(x): 0.3232, norm(y): 0.9992, norm:0.3874, tok/sec: 184456.69, flops:193.64, batch-reuse:1
@ 187 train 6.3580 , allloss: 6.3580, dt: 707.13ms, fracRes: 0.0019, norm(attn): 1.2578, norm(output): 0.3184, norm(x): 0.3204, norm(y): 0.9991, norm:0.5504, tok/sec: 185358.16, flops:194.59, batch-reuse:1
@ 188 train 6.1968 , allloss: 6.1968, dt: 714.11ms, fracRes: 0.0020, norm(attn): 1.2734, norm(output): 0.3125, norm(x): 0.3126, norm(y): 0.9992, norm:0.4356, tok/sec: 183546.04, flops:192.69, batch-reuse:1
@ 189 train 6.3174 , allloss: 6.3174, dt: 722.26ms, fracRes: 0.0019, norm(attn): 1.2812, norm(output): 0.3164, norm(x): 0.3192, norm(y): 0.9991, norm:0.3869, tok/sec: 181474.22, flops:190.51, batch-reuse:1
@ 190 train 6.2724 , allloss: 6.2724, dt: 717.55ms, fracRes: 0.0019, norm(attn): 1.2891, norm(output): 0.3262, norm(x): 0.3285, norm(y): 0.9991, norm:0.4166, tok/sec: 182664.91, flops:191.76, batch-reuse:1
@ 191 train 6.2400 , allloss: 6.2400, dt: 700.14ms, fracRes: 0.0019, norm(attn): 1.2969, norm(output): 0.3340, norm(x): 0.3316, norm(y): 0.9993, norm:0.4082, tok/sec: 187208.27, flops:196.53, batch-reuse:1
@ 192 train 6.3047 , allloss: 6.3047, dt: 713.57ms, fracRes: 0.0019, norm(attn): 1.2969, norm(output): 0.3164, norm(x): 0.3191, norm(y): 0.9992, norm:0.3734, tok/sec: 183684.02, flops:192.83, batch-reuse:1
@ 193 train 6.1713 , allloss: 6.1713, dt: 707.59ms, fracRes: 0.0019, norm(attn): 1.2891, norm(output): 0.3125, norm(x): 0.3155, norm(y): 0.9991, norm:0.4526, tok/sec: 185236.06, flops:194.46, batch-reuse:1
@ 194 train 6.3129 , allloss: 6.3129, dt: 701.18ms, fracRes: 0.0020, norm(attn): 1.3438, norm(output): 0.3184, norm(x): 0.3206, norm(y): 0.9992, norm:0.6236, tok/sec: 186931.56, flops:196.24, batch-reuse:1
@ 195 train 6.2795 , allloss: 6.2795, dt: 710.92ms, fracRes: 0.0020, norm(attn): 1.3125, norm(output): 0.3086, norm(x): 0.3105, norm(y): 0.9989, norm:0.5647, tok/sec: 184369.03, flops:193.55, batch-reuse:1
@ 196 train 6.1646 , allloss: 6.1646, dt: 699.80ms, fracRes: 0.0020, norm(attn): 1.3359, norm(output): 0.3105, norm(x): 0.3114, norm(y): 0.9991, norm:0.4487, tok/sec: 187299.54, flops:196.63, batch-reuse:1
@ 197 train 6.1801 , allloss: 6.1801, dt: 705.68ms, fracRes: 0.0020, norm(attn): 1.3359, norm(output): 0.3125, norm(x): 0.3153, norm(y): 0.9992, norm:0.4506, tok/sec: 185739.36, flops:194.99, batch-reuse:1
@ 198 train 6.1578 , allloss: 6.1578, dt: 706.93ms, fracRes: 0.0020, norm(attn): 1.3359, norm(output): 0.3125, norm(x): 0.3136, norm(y): 0.9990, norm:0.3866, tok/sec: 185408.92, flops:194.64, batch-reuse:1
@ 199 train 6.2606 , allloss: 6.2606, dt: 708.08ms, fracRes: 0.0021, norm(attn): 1.3438, norm(output): 0.3086, norm(x): 0.3057, norm(y): 0.9990, norm:0.4489, tok/sec: 185108.95, flops:194.33, batch-reuse:1
@ 200 train 6.2628 , allloss: 6.2628, dt: 703.10ms, fracRes: 0.0021, norm(attn): 1.3672, norm(output): 0.3027, norm(x): 0.3027, norm(y): 0.9991, norm:0.3516, tok/sec: 186421.10, flops:195.71, batch-reuse:1
@ 201 train 6.1675 , allloss: 6.1675, dt: 718.57ms, fracRes: 0.0020, norm(attn): 1.3516, norm(output): 0.2988, norm(x): 0.3021, norm(y): 0.9989, norm:0.4203, tok/sec: 182406.30, flops:191.49, batch-reuse:1
@ 202 train 6.2743 , allloss: 6.2743, dt: 706.00ms, fracRes: 0.0020, norm(attn): 1.3672, norm(output): 0.2988, norm(x): 0.2992, norm(y): 0.9988, norm:0.3677, tok/sec: 185654.43, flops:194.90, batch-reuse:1
@ 203 train 6.2134 , allloss: 6.2134, dt: 695.32ms, fracRes: 0.0021, norm(attn): 1.3750, norm(output): 0.2988, norm(x): 0.2998, norm(y): 0.9989, norm:0.4274, tok/sec: 188505.59, flops:197.89, batch-reuse:1
@ 204 train 6.2131 , allloss: 6.2131, dt: 690.94ms, fracRes: 0.0021, norm(attn): 1.3828, norm(output): 0.3047, norm(x): 0.3022, norm(y): 0.9989, norm:0.4145, tok/sec: 189699.64, flops:199.15, batch-reuse:1
@ 205 train 6.2029 , allloss: 6.2029, dt: 701.60ms, fracRes: 0.0021, norm(attn): 1.3750, norm(output): 0.3008, norm(x): 0.2994, norm(y): 0.9988, norm:0.4576, tok/sec: 186818.49, flops:196.12, batch-reuse:1
@ 206 train 6.2239 , allloss: 6.2239, dt: 706.95ms, fracRes: 0.0020, norm(attn): 1.4062, norm(output): 0.2949, norm(x): 0.2996, norm(y): 0.9990, norm:0.3791, tok/sec: 185405.61, flops:194.64, batch-reuse:1
@ 207 train 6.1363 , allloss: 6.1363, dt: 711.47ms, fracRes: 0.0021, norm(attn): 1.4062, norm(output): 0.3008, norm(x): 0.2979, norm(y): 0.9988, norm:0.3882, tok/sec: 184225.82, flops:193.40, batch-reuse:1
@ 208 train 6.1819 , allloss: 6.1819, dt: 697.28ms, fracRes: 0.0021, norm(attn): 1.4062, norm(output): 0.3008, norm(x): 0.3001, norm(y): 0.9989, norm:0.3861, tok/sec: 187976.03, flops:197.34, batch-reuse:1
@ 209 train 6.2436 , allloss: 6.2436, dt: 697.70ms, fracRes: 0.0021, norm(attn): 1.4375, norm(output): 0.3027, norm(x): 0.3014, norm(y): 0.9988, norm:0.4131, tok/sec: 187861.94, flops:197.22, batch-reuse:1
@ 210 train 6.2061 , allloss: 6.2061, dt: 718.69ms, fracRes: 0.0021, norm(attn): 1.4297, norm(output): 0.2988, norm(x): 0.2973, norm(y): 0.9988, norm:0.3461, tok/sec: 182377.14, flops:191.46, batch-reuse:1
@ 211 train 6.1133 , allloss: 6.1133, dt: 708.01ms, fracRes: 0.0021, norm(attn): 1.4375, norm(output): 0.2949, norm(x): 0.2947, norm(y): 0.9988, norm:0.3748, tok/sec: 185127.65, flops:194.35, batch-reuse:1
@ 212 train 6.1764 , allloss: 6.1764, dt: 708.44ms, fracRes: 0.0021, norm(attn): 1.4531, norm(output): 0.2930, norm(x): 0.2935, norm(y): 0.9987, norm:0.3429, tok/sec: 185016.25, flops:194.23, batch-reuse:1
@ 213 train 6.1247 , allloss: 6.1247, dt: 709.26ms, fracRes: 0.0022, norm(attn): 1.4609, norm(output): 0.2949, norm(x): 0.2935, norm(y): 0.9987, norm:0.4161, tok/sec: 184802.06, flops:194.01, batch-reuse:1
@ 214 train 6.1422 , allloss: 6.1422, dt: 705.65ms, fracRes: 0.0022, norm(attn): 1.4922, norm(output): 0.2871, norm(x): 0.2879, norm(y): 0.9989, norm:0.4198, tok/sec: 185745.95, flops:195.00, batch-reuse:1
@ 215 train 6.0412 , allloss: 6.0412, dt: 689.55ms, fracRes: 0.0021, norm(attn): 1.4922, norm(output): 0.2812, norm(x): 0.2832, norm(y): 0.9985, norm:0.4304, tok/sec: 190083.41, flops:199.55, batch-reuse:1
@ 216 train 6.0481 , allloss: 6.0481, dt: 702.54ms, fracRes: 0.0021, norm(attn): 1.4922, norm(output): 0.2871, norm(x): 0.2889, norm(y): 0.9986, norm:0.3968, tok/sec: 186569.90, flops:195.86, batch-reuse:1
@ 217 train 6.1313 , allloss: 6.1313, dt: 715.10ms, fracRes: 0.0021, norm(attn): 1.5000, norm(output): 0.2871, norm(x): 0.2884, norm(y): 0.9986, norm:0.3892, tok/sec: 183291.04, flops:192.42, batch-reuse:1
@ 218 train 6.0389 , allloss: 6.0389, dt: 713.83ms, fracRes: 0.0021, norm(attn): 1.5078, norm(output): 0.2832, norm(x): 0.2868, norm(y): 0.9983, norm:0.3934, tok/sec: 183618.01, flops:192.76, batch-reuse:1
@ 219 train 6.2569 , allloss: 6.2569, dt: 715.74ms, fracRes: 0.0021, norm(attn): 1.5156, norm(output): 0.2832, norm(x): 0.2853, norm(y): 0.9986, norm:0.3574, tok/sec: 183127.53, flops:192.25, batch-reuse:1
@ 220 train 6.1777 , allloss: 6.1777, dt: 695.71ms, fracRes: 0.0022, norm(attn): 1.5156, norm(output): 0.2812, norm(x): 0.2826, norm(y): 0.9986, norm:0.3559, tok/sec: 188400.61, flops:197.78, batch-reuse:1
@ 221 train 6.0873 , allloss: 6.0873, dt: 701.21ms, fracRes: 0.0022, norm(attn): 1.5156, norm(output): 0.2754, norm(x): 0.2768, norm(y): 0.9982, norm:0.6151, tok/sec: 186923.43, flops:196.23, batch-reuse:1
@ 222 train 6.1080 , allloss: 6.1080, dt: 721.91ms, fracRes: 0.0022, norm(attn): 1.5312, norm(output): 0.2793, norm(x): 0.2801, norm(y): 0.9985, norm:0.6537, tok/sec: 181563.70, flops:190.61, batch-reuse:1
@ 223 train 6.1339 , allloss: 6.1339, dt: 716.92ms, fracRes: 0.0022, norm(attn): 1.5078, norm(output): 0.2734, norm(x): 0.2774, norm(y): 0.9980, norm:0.4258, tok/sec: 182826.87, flops:191.93, batch-reuse:1
@ 224 train 6.0550 , allloss: 6.0550, dt: 706.53ms, fracRes: 0.0023, norm(attn): 1.5078, norm(output): 0.2773, norm(x): 0.2786, norm(y): 0.9983, norm:0.5269, tok/sec: 185515.85, flops:194.75, batch-reuse:1
@ 225 train 6.1288 , allloss: 6.1288, dt: 706.18ms, fracRes: 0.0023, norm(attn): 1.5078, norm(output): 0.2734, norm(x): 0.2765, norm(y): 0.9981, norm:0.4367, tok/sec: 185607.42, flops:194.85, batch-reuse:1
@ 226 train 6.1476 , allloss: 6.1476, dt: 715.37ms, fracRes: 0.0023, norm(attn): 1.5000, norm(output): 0.2695, norm(x): 0.2743, norm(y): 0.9980, norm:0.4052, tok/sec: 183222.62, flops:192.35, batch-reuse:1
@ 227 train 6.1422 , allloss: 6.1422, dt: 714.57ms, fracRes: 0.0023, norm(attn): 1.5078, norm(output): 0.2695, norm(x): 0.2717, norm(y): 0.9983, norm:0.4704, tok/sec: 183427.42, flops:192.56, batch-reuse:1
@ 228 train 6.1196 , allloss: 6.1196, dt: 713.80ms, fracRes: 0.0022, norm(attn): 1.5156, norm(output): 0.2656, norm(x): 0.2682, norm(y): 0.9979, norm:0.3530, tok/sec: 183624.63, flops:192.77, batch-reuse:1
@ 229 train 6.1495 , allloss: 6.1495, dt: 707.08ms, fracRes: 0.0022, norm(attn): 1.5234, norm(output): 0.2656, norm(x): 0.2672, norm(y): 0.9978, norm:0.3247, tok/sec: 185370.04, flops:194.60, batch-reuse:1
@ 230 train 6.1314 , allloss: 6.1314, dt: 717.75ms, fracRes: 0.0022, norm(attn): 1.5391, norm(output): 0.2695, norm(x): 0.2698, norm(y): 0.9981, norm:0.3658, tok/sec: 182616.01, flops:191.71, batch-reuse:1
@ 231 train 6.0687 , allloss: 6.0687, dt: 723.00ms, fracRes: 0.0022, norm(attn): 1.5469, norm(output): 0.2676, norm(x): 0.2700, norm(y): 0.9978, norm:0.3131, tok/sec: 181289.60, flops:190.32, batch-reuse:1
@ 232 train 6.0180 , allloss: 6.0180, dt: 720.55ms, fracRes: 0.0023, norm(attn): 1.5625, norm(output): 0.2656, norm(x): 0.2690, norm(y): 0.9982, norm:0.3301, tok/sec: 181906.50, flops:190.97, batch-reuse:1
@ 233 train 6.1119 , allloss: 6.1119, dt: 710.48ms, fracRes: 0.0022, norm(attn): 1.5703, norm(output): 0.2656, norm(x): 0.2684, norm(y): 0.9981, norm:0.3815, tok/sec: 184484.79, flops:193.67, batch-reuse:1
@ 234 train 5.9631 , allloss: 5.9631, dt: 719.02ms, fracRes: 0.0023, norm(attn): 1.5781, norm(output): 0.2656, norm(x): 0.2675, norm(y): 0.9977, norm:0.3508, tok/sec: 182291.38, flops:191.37, batch-reuse:1
@ 235 train 6.0879 , allloss: 6.0879, dt: 712.91ms, fracRes: 0.0025, norm(attn): 1.5781, norm(output): 0.2617, norm(x): 0.2632, norm(y): 0.9983, norm:0.4677, tok/sec: 183855.72, flops:193.01, batch-reuse:1
@ 236 train 5.9922 , allloss: 5.9922, dt: 717.50ms, fracRes: 0.0024, norm(attn): 1.5703, norm(output): 0.2598, norm(x): 0.2620, norm(y): 0.9973, norm:0.4852, tok/sec: 182678.57, flops:191.78, batch-reuse:1
@ 237 train 6.0682 , allloss: 6.0682, dt: 707.68ms, fracRes: 0.0025, norm(attn): 1.6172, norm(output): 0.2559, norm(x): 0.2615, norm(y): 0.9980, norm:0.3583, tok/sec: 185212.91, flops:194.44, batch-reuse:1
@ 238 train 6.0353 , allloss: 6.0353, dt: 713.55ms, fracRes: 0.0026, norm(attn): 1.6094, norm(output): 0.2539, norm(x): 0.2570, norm(y): 0.9977, norm:0.3219, tok/sec: 183689.00, flops:192.84, batch-reuse:1
@ 239 train 6.0361 , allloss: 6.0361, dt: 712.51ms, fracRes: 0.0026, norm(attn): 1.5859, norm(output): 0.2539, norm(x): 0.2577, norm(y): 0.9969, norm:0.3739, tok/sec: 183959.14, flops:193.12, batch-reuse:1
@ 240 train 6.0796 , allloss: 6.0796, dt: 714.62ms, fracRes: 0.0027, norm(attn): 1.6094, norm(output): 0.2559, norm(x): 0.2598, norm(y): 0.9974, norm:0.3555, tok/sec: 183414.32, flops:192.55, batch-reuse:1
@ 241 train 6.0599 , allloss: 6.0599, dt: 706.68ms, fracRes: 0.0026, norm(attn): 1.6172, norm(output): 0.2559, norm(x): 0.2592, norm(y): 0.9972, norm:0.3166, tok/sec: 185475.67, flops:194.71, batch-reuse:1
@ 242 train 6.0299 , allloss: 6.0299, dt: 709.64ms, fracRes: 0.0027, norm(attn): 1.6094, norm(output): 0.2520, norm(x): 0.2538, norm(y): 0.9968, norm:0.3681, tok/sec: 184702.59, flops:193.90, batch-reuse:1
@ 243 train 5.9583 , allloss: 5.9583, dt: 710.18ms, fracRes: 0.0029, norm(attn): 1.6250, norm(output): 0.2500, norm(x): 0.2541, norm(y): 0.9974, norm:0.3234, tok/sec: 184560.84, flops:193.75, batch-reuse:1
@ 244 train 6.0656 , allloss: 6.0656, dt: 711.32ms, fracRes: 0.0028, norm(attn): 1.6250, norm(output): 0.2500, norm(x): 0.2506, norm(y): 0.9971, norm:0.3568, tok/sec: 184266.57, flops:193.44, batch-reuse:1
@ 245 train 5.8524 , allloss: 5.8524, dt: 707.77ms, fracRes: 0.0028, norm(attn): 1.6250, norm(output): 0.2500, norm(x): 0.2498, norm(y): 0.9971, norm:0.4154, tok/sec: 185190.14, flops:194.41, batch-reuse:1
@ 246 train 6.1440 , allloss: 6.1440, dt: 700.71ms, fracRes: 0.0028, norm(attn): 1.6328, norm(output): 0.2500, norm(x): 0.2513, norm(y): 0.9977, norm:0.4952, tok/sec: 187055.91, flops:196.37, batch-reuse:1
@ 247 train 6.0279 , allloss: 6.0279, dt: 713.96ms, fracRes: 0.0027, norm(attn): 1.6250, norm(output): 0.2480, norm(x): 0.2502, norm(y): 0.9970, norm:0.4498, tok/sec: 183583.92, flops:192.73, batch-reuse:1
@ 248 train 5.9681 , allloss: 5.9681, dt: 708.61ms, fracRes: 0.0027, norm(attn): 1.6328, norm(output): 0.2500, norm(x): 0.2557, norm(y): 0.9977, norm:0.3771, tok/sec: 184970.50, flops:194.18, batch-reuse:1
@ 249 train 5.9561 , allloss: 5.9561, dt: 717.33ms, fracRes: 0.0028, norm(attn): 1.6328, norm(output): 0.2500, norm(x): 0.2530, norm(y): 0.9976, norm:0.3893, tok/sec: 182722.65, flops:191.82, batch-reuse:1
@ 250 train 6.0237 , allloss: 6.0237, dt: 715.32ms, fracRes: 0.0029, norm(attn): 1.6328, norm(output): 0.2500, norm(x): 0.2515, norm(y): 0.9972, norm:0.3851, tok/sec: 183236.55, flops:192.36, batch-reuse:1
@ 251 train 5.9547 , allloss: 5.9547, dt: 710.89ms, fracRes: 0.0030, norm(attn): 1.6250, norm(output): 0.2490, norm(x): 0.2500, norm(y): 0.9973, norm:0.4022, tok/sec: 184378.06, flops:193.56, batch-reuse:1
@ 252 train 6.0771 , allloss: 6.0771, dt: 696.44ms, fracRes: 0.0030, norm(attn): 1.6328, norm(output): 0.2461, norm(x): 0.2470, norm(y): 0.9966, norm:0.4123, tok/sec: 188202.61, flops:197.58, batch-reuse:1
@ 253 train 5.9621 , allloss: 5.9621, dt: 708.45ms, fracRes: 0.0030, norm(attn): 1.6484, norm(output): 0.2441, norm(x): 0.2456, norm(y): 0.9969, norm:0.3408, tok/sec: 185012.70, flops:194.23, batch-reuse:1
@ 254 train 5.9017 , allloss: 5.9017, dt: 710.92ms, fracRes: 0.0030, norm(attn): 1.6641, norm(output): 0.2451, norm(x): 0.2455, norm(y): 0.9972, norm:0.4206, tok/sec: 184369.59, flops:193.55, batch-reuse:1
@ 255 train 5.9083 , allloss: 5.9083, dt: 708.82ms, fracRes: 0.0030, norm(attn): 1.6562, norm(output): 0.2441, norm(x): 0.2450, norm(y): 0.9962, norm:0.3994, tok/sec: 184914.50, flops:194.12, batch-reuse:1
@ 256 train 5.9800 , allloss: 5.9800, dt: 700.68ms, fracRes: 0.0031, norm(attn): 1.7031, norm(output): 0.2490, norm(x): 0.2485, norm(y): 0.9968, norm:0.4835, tok/sec: 187062.91, flops:196.38, batch-reuse:1
@ 257 train 5.9646 , allloss: 5.9646, dt: 712.54ms, fracRes: 0.0031, norm(attn): 1.6719, norm(output): 0.2461, norm(x): 0.2463, norm(y): 0.9963, norm:0.3549, tok/sec: 183950.03, flops:193.11, batch-reuse:1
@ 258 train 5.9033 , allloss: 5.9033, dt: 707.09ms, fracRes: 0.0032, norm(attn): 1.7266, norm(output): 0.2441, norm(x): 0.2459, norm(y): 0.9964, norm:0.3862, tok/sec: 185368.23, flops:194.60, batch-reuse:1
@ 259 train 5.9539 , allloss: 5.9539, dt: 711.40ms, fracRes: 0.0032, norm(attn): 1.7500, norm(output): 0.2402, norm(x): 0.2426, norm(y): 0.9965, norm:0.3048, tok/sec: 184244.46, flops:193.42, batch-reuse:1
@ 260 train 5.9957 , allloss: 5.9957, dt: 717.73ms, fracRes: 0.0032, norm(attn): 1.7344, norm(output): 0.2383, norm(x): 0.2401, norm(y): 0.9958, norm:0.3722, tok/sec: 182620.25, flops:191.72, batch-reuse:1
@ 261 train 5.9707 , allloss: 5.9707, dt: 718.56ms, fracRes: 0.0032, norm(attn): 1.7500, norm(output): 0.2373, norm(x): 0.2413, norm(y): 0.9960, norm:0.3402, tok/sec: 182408.12, flops:191.49, batch-reuse:1
@ 262 train 6.0248 , allloss: 6.0248, dt: 701.75ms, fracRes: 0.0031, norm(attn): 1.7578, norm(output): 0.2393, norm(x): 0.2434, norm(y): 0.9958, norm:0.3927, tok/sec: 186779.33, flops:196.08, batch-reuse:1
@ 263 train 5.9610 , allloss: 5.9610, dt: 691.73ms, fracRes: 0.0030, norm(attn): 1.7656, norm(output): 0.2461, norm(x): 0.2463, norm(y): 0.9962, norm:0.4598, tok/sec: 189483.42, flops:198.92, batch-reuse:1
@ 264 train 5.9431 , allloss: 5.9431, dt: 705.96ms, fracRes: 0.0033, norm(attn): 1.7656, norm(output): 0.2393, norm(x): 0.2418, norm(y): 0.9951, norm:0.4735, tok/sec: 185664.71, flops:194.91, batch-reuse:1
@ 265 train 5.9458 , allloss: 5.9458, dt: 709.45ms, fracRes: 0.0034, norm(attn): 1.7812, norm(output): 0.2383, norm(x): 0.2394, norm(y): 0.9961, norm:0.4158, tok/sec: 184752.56, flops:193.95, batch-reuse:1
@ 266 train 5.8879 , allloss: 5.8879, dt: 704.93ms, fracRes: 0.0034, norm(attn): 1.7734, norm(output): 0.2334, norm(x): 0.2346, norm(y): 0.9957, norm:0.3795, tok/sec: 185937.31, flops:195.20, batch-reuse:1
@ 267 train 5.9354 , allloss: 5.9354, dt: 702.39ms, fracRes: 0.0035, norm(attn): 1.7656, norm(output): 0.2324, norm(x): 0.2326, norm(y): 0.9941, norm:0.4227, tok/sec: 186608.97, flops:195.90, batch-reuse:1
@ 268 train 6.0232 , allloss: 6.0232, dt: 689.03ms, fracRes: 0.0037, norm(attn): 1.7969, norm(output): 0.2344, norm(x): 0.2360, norm(y): 0.9964, norm:0.6178, tok/sec: 190225.54, flops:199.70, batch-reuse:1
@ 269 train 5.9674 , allloss: 5.9674, dt: 694.63ms, fracRes: 0.0035, norm(attn): 1.7578, norm(output): 0.2354, norm(x): 0.2390, norm(y): 0.9933, norm:0.5554, tok/sec: 188692.70, flops:198.09, batch-reuse:1
@ 270 train 6.0419 , allloss: 6.0419, dt: 689.22ms, fracRes: 0.0036, norm(attn): 1.7500, norm(output): 0.2373, norm(x): 0.2413, norm(y): 0.9947, norm:0.4672, tok/sec: 190174.94, flops:199.65, batch-reuse:1
@ 271 train 5.9157 , allloss: 5.9157, dt: 706.29ms, fracRes: 0.0036, norm(attn): 1.7500, norm(output): 0.2344, norm(x): 0.2373, norm(y): 0.9947, norm:0.4023, tok/sec: 185576.91, flops:194.82, batch-reuse:1
@ 272 train 5.9286 , allloss: 5.9286, dt: 706.31ms, fracRes: 0.0039, norm(attn): 1.7500, norm(output): 0.2344, norm(x): 0.2365, norm(y): 0.9957, norm:0.3452, tok/sec: 185573.52, flops:194.82, batch-reuse:1
@ 273 train 5.9601 , allloss: 5.9601, dt: 696.80ms, fracRes: 0.0041, norm(attn): 1.7578, norm(output): 0.2373, norm(x): 0.2405, norm(y): 0.9957, norm:0.4235, tok/sec: 188104.92, flops:197.47, batch-reuse:1
@ 274 train 5.9439 , allloss: 5.9439, dt: 705.52ms, fracRes: 0.0044, norm(attn): 1.7578, norm(output): 0.2354, norm(x): 0.2378, norm(y): 0.9958, norm:0.3973, tok/sec: 185780.28, flops:195.03, batch-reuse:1
@ 275 train 5.9225 , allloss: 5.9225, dt: 712.06ms, fracRes: 0.0044, norm(attn): 1.7500, norm(output): 0.2344, norm(x): 0.2375, norm(y): 0.9953, norm:0.3506, tok/sec: 184073.46, flops:193.24, batch-reuse:1
@ 276 train 5.8982 , allloss: 5.8982, dt: 714.92ms, fracRes: 0.0044, norm(attn): 1.7500, norm(output): 0.2373, norm(x): 0.2395, norm(y): 0.9956, norm:0.3593, tok/sec: 183338.66, flops:192.47, batch-reuse:1
@ 277 train 5.7459 , allloss: 5.7459, dt: 706.56ms, fracRes: 0.0045, norm(attn): 1.7578, norm(output): 0.2354, norm(x): 0.2368, norm(y): 0.9959, norm:0.3857, tok/sec: 185506.96, flops:194.75, batch-reuse:1
@ 278 train 5.9014 , allloss: 5.9014, dt: 710.88ms, fracRes: 0.0044, norm(attn): 1.7578, norm(output): 0.2314, norm(x): 0.2338, norm(y): 0.9941, norm:0.4497, tok/sec: 184380.84, flops:193.56, batch-reuse:1
@ 279 train 5.7940 , allloss: 5.7940, dt: 713.06ms, fracRes: 0.0045, norm(attn): 1.7656, norm(output): 0.2363, norm(x): 0.2375, norm(y): 0.9954, norm:0.3685, tok/sec: 183815.39, flops:192.97, batch-reuse:1
@ 280 train 5.9150 , allloss: 5.9150, dt: 709.95ms, fracRes: 0.0046, norm(attn): 1.7812, norm(output): 0.2334, norm(x): 0.2360, norm(y): 0.9952, norm:0.4343, tok/sec: 184620.47, flops:193.81, batch-reuse:1
@ 281 train 5.8414 , allloss: 5.8414, dt: 711.98ms, fracRes: 0.0044, norm(attn): 1.7656, norm(output): 0.2324, norm(x): 0.2339, norm(y): 0.9937, norm:0.3969, tok/sec: 184095.77, flops:193.26, batch-reuse:1
@ 282 train 5.8137 , allloss: 5.8137, dt: 717.01ms, fracRes: 0.0044, norm(attn): 1.8281, norm(output): 0.2344, norm(x): 0.2361, norm(y): 0.9954, norm:0.3769, tok/sec: 182803.76, flops:191.91, batch-reuse:1
@ 283 train 5.7709 , allloss: 5.7709, dt: 717.24ms, fracRes: 0.0044, norm(attn): 1.8438, norm(output): 0.2334, norm(x): 0.2338, norm(y): 0.9951, norm:0.3367, tok/sec: 182744.46, flops:191.85, batch-reuse:1
@ 284 train 5.8477 , allloss: 5.8477, dt: 710.56ms, fracRes: 0.0044, norm(attn): 1.8516, norm(output): 0.2324, norm(x): 0.2318, norm(y): 0.9948, norm:0.3495, tok/sec: 184462.19, flops:193.65, batch-reuse:1
@ 285 train 5.8719 , allloss: 5.8719, dt: 713.15ms, fracRes: 0.0046, norm(attn): 1.8594, norm(output): 0.2295, norm(x): 0.2302, norm(y): 0.9950, norm:0.4275, tok/sec: 183793.09, flops:192.95, batch-reuse:1
@ 286 train 5.8357 , allloss: 5.8357, dt: 720.13ms, fracRes: 0.0043, norm(attn): 1.8047, norm(output): 0.2285, norm(x): 0.2302, norm(y): 0.9924, norm:0.4230, tok/sec: 182011.35, flops:191.08, batch-reuse:1
@ 287 train 5.8760 , allloss: 5.8760, dt: 713.92ms, fracRes: 0.0046, norm(attn): 1.8516, norm(output): 0.2314, norm(x): 0.2321, norm(y): 0.9937, norm:0.4178, tok/sec: 183594.71, flops:192.74, batch-reuse:1
@ 288 train 5.8102 , allloss: 5.8102, dt: 696.15ms, fracRes: 0.0049, norm(attn): 1.8672, norm(output): 0.2285, norm(x): 0.2320, norm(y): 0.9933, norm:0.4028, tok/sec: 188280.08, flops:197.66, batch-reuse:1
@ 289 train 5.8279 , allloss: 5.8279, dt: 701.10ms, fracRes: 0.0051, norm(attn): 1.8516, norm(output): 0.2256, norm(x): 0.2297, norm(y): 0.9924, norm:0.3700, tok/sec: 186950.76, flops:196.26, batch-reuse:1
@ 290 train 5.8514 , allloss: 5.8514, dt: 712.07ms, fracRes: 0.0053, norm(attn): 1.8672, norm(output): 0.2295, norm(x): 0.2312, norm(y): 0.9927, norm:0.3924, tok/sec: 184073.03, flops:193.24, batch-reuse:1
@ 291 train 5.7462 , allloss: 5.7462, dt: 707.51ms, fracRes: 0.0054, norm(attn): 1.8750, norm(output): 0.2266, norm(x): 0.2297, norm(y): 0.9934, norm:0.3733, tok/sec: 185258.78, flops:194.49, batch-reuse:1
@ 292 train 5.7640 , allloss: 5.7640, dt: 706.65ms, fracRes: 0.0054, norm(attn): 1.8750, norm(output): 0.2256, norm(x): 0.2296, norm(y): 0.9916, norm:0.4697, tok/sec: 185483.80, flops:194.72, batch-reuse:1
@ 293 train 5.8342 , allloss: 5.8342, dt: 695.41ms, fracRes: 0.0054, norm(attn): 1.8984, norm(output): 0.2246, norm(x): 0.2290, norm(y): 0.9935, norm:0.3897, tok/sec: 188482.00, flops:197.87, batch-reuse:1
@ 294 train 5.8388 , allloss: 5.8388, dt: 713.22ms, fracRes: 0.0052, norm(attn): 1.8828, norm(output): 0.2227, norm(x): 0.2269, norm(y): 0.9910, norm:0.3926, tok/sec: 183774.90, flops:192.93, batch-reuse:1
@ 295 train 5.8352 , allloss: 5.8352, dt: 719.94ms, fracRes: 0.0051, norm(attn): 1.8828, norm(output): 0.2236, norm(x): 0.2278, norm(y): 0.9911, norm:0.3959, tok/sec: 182060.59, flops:191.13, batch-reuse:1
@ 296 train 5.7390 , allloss: 5.7390, dt: 710.98ms, fracRes: 0.0050, norm(attn): 1.8984, norm(output): 0.2236, norm(x): 0.2285, norm(y): 0.9917, norm:0.3772, tok/sec: 184354.07, flops:193.54, batch-reuse:1
@ 297 train 5.7232 , allloss: 5.7232, dt: 716.46ms, fracRes: 0.0050, norm(attn): 1.8828, norm(output): 0.2236, norm(x): 0.2266, norm(y): 0.9903, norm:0.3700, tok/sec: 182944.90, flops:192.06, batch-reuse:1
@ 298 train 5.7668 , allloss: 5.7668, dt: 704.76ms, fracRes: 0.0049, norm(attn): 1.8984, norm(output): 0.2227, norm(x): 0.2264, norm(y): 0.9893, norm:0.3270, tok/sec: 185979.95, flops:195.24, batch-reuse:1
@ 299 train 5.7631 , allloss: 5.7631, dt: 708.10ms, fracRes: 0.0049, norm(attn): 1.9141, norm(output): 0.2227, norm(x): 0.2256, norm(y): 0.9903, norm:0.3975, tok/sec: 185105.09, flops:194.32, batch-reuse:1
@ 300 train 5.7759 , allloss: 5.7759, dt: 710.28ms, fracRes: 0.0050, norm(attn): 1.9531, norm(output): 0.2246, norm(x): 0.2283, norm(y): 0.9886, norm:0.3799, tok/sec: 184535.32, flops:193.73, batch-reuse:1
@ 301 train 5.8781 , allloss: 5.8781, dt: 711.46ms, fracRes: 0.0050, norm(attn): 1.9766, norm(output): 0.2275, norm(x): 0.2301, norm(y): 0.9902, norm:0.4608, tok/sec: 184229.27, flops:193.40, batch-reuse:1
@ 302 train 5.7382 , allloss: 5.7382, dt: 706.64ms, fracRes: 0.0051, norm(attn): 1.8906, norm(output): 0.2207, norm(x): 0.2230, norm(y): 0.9825, norm:0.5294, tok/sec: 185486.87, flops:194.72, batch-reuse:1
@ 303 train 5.7779 , allloss: 5.7779, dt: 712.86ms, fracRes: 0.0054, norm(attn): 1.9922, norm(output): 0.2197, norm(x): 0.2217, norm(y): 0.9887, norm:0.4950, tok/sec: 183867.34, flops:193.02, batch-reuse:1
@ 304 train 5.7131 , allloss: 5.7131, dt: 694.86ms, fracRes: 0.0054, norm(attn): 1.9688, norm(output): 0.2188, norm(x): 0.2221, norm(y): 0.9834, norm:0.4569, tok/sec: 188630.68, flops:198.02, batch-reuse:1
@ 305 train 5.7017 , allloss: 5.7017, dt: 703.45ms, fracRes: 0.0059, norm(attn): 1.9141, norm(output): 0.2168, norm(x): 0.2200, norm(y): 0.9795, norm:0.3675, tok/sec: 186328.15, flops:195.61, batch-reuse:1
@ 306 train 5.7247 , allloss: 5.7247, dt: 720.05ms, fracRes: 0.0061, norm(attn): 1.8828, norm(output): 0.2188, norm(x): 0.2218, norm(y): 0.9764, norm:0.3660, tok/sec: 182031.54, flops:191.10, batch-reuse:1
@ 307 train 5.8427 , allloss: 5.8427, dt: 717.77ms, fracRes: 0.0058, norm(attn): 1.9609, norm(output): 0.2197, norm(x): 0.2223, norm(y): 0.9887, norm:0.4849, tok/sec: 182610.79, flops:191.71, batch-reuse:1
@ 308 train 5.7174 , allloss: 5.7174, dt: 711.83ms, fracRes: 0.0060, norm(attn): 1.9688, norm(output): 0.2168, norm(x): 0.2201, norm(y): 0.9913, norm:0.3654, tok/sec: 184133.45, flops:193.30, batch-reuse:1
@ 309 train 5.7519 , allloss: 5.7519, dt: 719.44ms, fracRes: 0.0062, norm(attn): 1.9844, norm(output): 0.2197, norm(x): 0.2235, norm(y): 0.9933, norm:0.3502, tok/sec: 182186.39, flops:191.26, batch-reuse:1
@ 310 train 5.8019 , allloss: 5.8019, dt: 724.46ms, fracRes: 0.0061, norm(attn): 1.9609, norm(output): 0.2197, norm(x): 0.2229, norm(y): 0.9930, norm:0.4629, tok/sec: 180922.74, flops:189.93, batch-reuse:1
@ 311 train 5.8475 , allloss: 5.8475, dt: 714.99ms, fracRes: 0.0061, norm(attn): 1.9766, norm(output): 0.2207, norm(x): 0.2248, norm(y): 0.9939, norm:0.4038, tok/sec: 183320.87, flops:192.45, batch-reuse:1
@ 312 train 5.8556 , allloss: 5.8556, dt: 721.79ms, fracRes: 0.0055, norm(attn): 1.9844, norm(output): 0.2207, norm(x): 0.2240, norm(y): 0.9924, norm:0.4233, tok/sec: 181593.86, flops:190.64, batch-reuse:1
@ 313 train 5.7299 , allloss: 5.7299, dt: 723.04ms, fracRes: 0.0057, norm(attn): 1.9766, norm(output): 0.2188, norm(x): 0.2211, norm(y): 0.9918, norm:0.3703, tok/sec: 181279.08, flops:190.31, batch-reuse:1
@ 314 train 5.7209 , allloss: 5.7209, dt: 723.68ms, fracRes: 0.0057, norm(attn): 2.0000, norm(output): 0.2178, norm(x): 0.2207, norm(y): 0.9940, norm:0.5327, tok/sec: 181119.26, flops:190.14, batch-reuse:1
@ 315 train 5.7099 , allloss: 5.7099, dt: 699.93ms, fracRes: 0.0056, norm(attn): 2.0000, norm(output): 0.2207, norm(x): 0.2233, norm(y): 0.9921, norm:0.4294, tok/sec: 187264.45, flops:196.59, batch-reuse:1
@ 316 train 5.7482 , allloss: 5.7482, dt: 711.60ms, fracRes: 0.0056, norm(attn): 2.0156, norm(output): 0.2197, norm(x): 0.2226, norm(y): 0.9933, norm:0.3895, tok/sec: 184192.67, flops:193.37, batch-reuse:1
@ 317 train 5.7958 , allloss: 5.7958, dt: 708.37ms, fracRes: 0.0056, norm(attn): 2.0156, norm(output): 0.2197, norm(x): 0.2230, norm(y): 0.9931, norm:0.3354, tok/sec: 185033.13, flops:194.25, batch-reuse:1
@ 318 train 5.6661 , allloss: 5.6661, dt: 702.36ms, fracRes: 0.0058, norm(attn): 2.0156, norm(output): 0.2178, norm(x): 0.2191, norm(y): 0.9928, norm:0.3426, tok/sec: 186616.76, flops:195.91, batch-reuse:1
@ 319 train 5.6279 , allloss: 5.6279, dt: 712.69ms, fracRes: 0.0059, norm(attn): 2.0312, norm(output): 0.2197, norm(x): 0.2204, norm(y): 0.9935, norm:0.4094, tok/sec: 183910.71, flops:193.07, batch-reuse:1
@ 320 train 5.7181 , allloss: 5.7181, dt: 708.26ms, fracRes: 0.0057, norm(attn): 2.0156, norm(output): 0.2168, norm(x): 0.2193, norm(y): 0.9918, norm:0.4461, tok/sec: 185062.15, flops:194.28, batch-reuse:1
@ 321 train 5.7524 , allloss: 5.7524, dt: 710.10ms, fracRes: 0.0059, norm(attn): 2.0625, norm(output): 0.2168, norm(x): 0.2199, norm(y): 0.9931, norm:0.3240, tok/sec: 184582.59, flops:193.78, batch-reuse:1
@ 322 train 5.6505 , allloss: 5.6505, dt: 693.49ms, fracRes: 0.0057, norm(attn): 2.0938, norm(output): 0.2178, norm(x): 0.2208, norm(y): 0.9934, norm:0.3387, tok/sec: 189002.79, flops:198.42, batch-reuse:1
@ 323 train 5.7360 , allloss: 5.7360, dt: 708.38ms, fracRes: 0.0057, norm(attn): 2.0938, norm(output): 0.2129, norm(x): 0.2163, norm(y): 0.9922, norm:0.3417, tok/sec: 185030.76, flops:194.25, batch-reuse:1
@ 324 train 5.6205 , allloss: 5.6205, dt: 720.61ms, fracRes: 0.0059, norm(attn): 2.0781, norm(output): 0.2148, norm(x): 0.2176, norm(y): 0.9917, norm:0.4141, tok/sec: 181890.67, flops:190.95, batch-reuse:1
@ 325 train 5.6409 , allloss: 5.6409, dt: 711.62ms, fracRes: 0.0062, norm(attn): 2.1094, norm(output): 0.2129, norm(x): 0.2157, norm(y): 0.9932, norm:0.3928, tok/sec: 184187.18, flops:193.36, batch-reuse:1
@ 326 train 5.7274 , allloss: 5.7274, dt: 704.70ms, fracRes: 0.0061, norm(attn): 2.1094, norm(output): 0.2168, norm(x): 0.2199, norm(y): 0.9915, norm:0.4060, tok/sec: 185996.44, flops:195.26, batch-reuse:1
@ 327 train 5.7466 , allloss: 5.7466, dt: 710.70ms, fracRes: 0.0061, norm(attn): 2.0938, norm(output): 0.2207, norm(x): 0.2246, norm(y): 0.9925, norm:0.3950, tok/sec: 184425.99, flops:193.61, batch-reuse:1
@ 328 train 5.7141 , allloss: 5.7141, dt: 722.51ms, fracRes: 0.0059, norm(attn): 2.0781, norm(output): 0.2188, norm(x): 0.2213, norm(y): 0.9907, norm:0.3821, tok/sec: 181410.86, flops:190.45, batch-reuse:1
@ 329 train 5.6507 , allloss: 5.6507, dt: 710.10ms, fracRes: 0.0057, norm(attn): 2.0781, norm(output): 0.2148, norm(x): 0.2184, norm(y): 0.9902, norm:0.4099, tok/sec: 184581.17, flops:193.77, batch-reuse:1
@ 330 train 5.6502 , allloss: 5.6502, dt: 723.17ms, fracRes: 0.0060, norm(attn): 2.1094, norm(output): 0.2080, norm(x): 0.2135, norm(y): 0.9926, norm:0.4093, tok/sec: 181247.16, flops:190.27, batch-reuse:1
@ 331 train 5.6429 , allloss: 5.6429, dt: 722.71ms, fracRes: 0.0062, norm(attn): 2.1094, norm(output): 0.2090, norm(x): 0.2135, norm(y): 0.9914, norm:0.3766, tok/sec: 181360.65, flops:190.39, batch-reuse:1
@ 332 train 5.5783 , allloss: 5.5783, dt: 715.04ms, fracRes: 0.0062, norm(attn): 2.0781, norm(output): 0.2070, norm(x): 0.2122, norm(y): 0.9903, norm:0.4393, tok/sec: 183307.42, flops:192.44, batch-reuse:1
@ 333 train 5.6719 , allloss: 5.6719, dt: 707.82ms, fracRes: 0.0064, norm(attn): 2.1094, norm(output): 0.2051, norm(x): 0.2117, norm(y): 0.9922, norm:0.4497, tok/sec: 185178.29, flops:194.40, batch-reuse:1
@ 334 train 5.5897 , allloss: 5.5897, dt: 716.53ms, fracRes: 0.0062, norm(attn): 2.0938, norm(output): 0.2070, norm(x): 0.2124, norm(y): 0.9902, norm:0.4851, tok/sec: 182926.33, flops:192.04, batch-reuse:1
@ 335 train 5.5587 , allloss: 5.5587, dt: 713.12ms, fracRes: 0.0063, norm(attn): 2.1094, norm(output): 0.2070, norm(x): 0.2134, norm(y): 0.9911, norm:0.3409, tok/sec: 183800.64, flops:192.95, batch-reuse:1
@ 336 train 5.6364 , allloss: 5.6364, dt: 716.28ms, fracRes: 0.0065, norm(attn): 2.1094, norm(output): 0.2109, norm(x): 0.2152, norm(y): 0.9909, norm:0.4024, tok/sec: 182990.87, flops:192.10, batch-reuse:1
@ 337 train 5.5885 , allloss: 5.5885, dt: 708.46ms, fracRes: 0.0064, norm(attn): 2.1094, norm(output): 0.2109, norm(x): 0.2154, norm(y): 0.9897, norm:0.3376, tok/sec: 185010.65, flops:194.22, batch-reuse:1
@ 338 train 5.5903 , allloss: 5.5903, dt: 709.05ms, fracRes: 0.0066, norm(attn): 2.1094, norm(output): 0.2100, norm(x): 0.2142, norm(y): 0.9903, norm:0.3785, tok/sec: 184855.37, flops:194.06, batch-reuse:1
@ 339 train 5.6661 , allloss: 5.6661, dt: 704.41ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2070, norm(x): 0.2118, norm(y): 0.9897, norm:0.3206, tok/sec: 186072.80, flops:195.34, batch-reuse:1
@ 340 train 5.6249 , allloss: 5.6249, dt: 711.61ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2051, norm(x): 0.2109, norm(y): 0.9894, norm:0.3777, tok/sec: 184191.99, flops:193.37, batch-reuse:1
@ 341 train 5.5776 , allloss: 5.5776, dt: 705.81ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2051, norm(x): 0.2107, norm(y): 0.9892, norm:0.3546, tok/sec: 185704.10, flops:194.95, batch-reuse:1
@ 342 train 5.5118 , allloss: 5.5118, dt: 710.43ms, fracRes: 0.0069, norm(attn): 2.1250, norm(output): 0.2041, norm(x): 0.2079, norm(y): 0.9882, norm:0.3116, tok/sec: 184497.48, flops:193.69, batch-reuse:1
@ 343 train 5.6042 , allloss: 5.6042, dt: 707.07ms, fracRes: 0.0070, norm(attn): 2.1250, norm(output): 0.2031, norm(x): 0.2082, norm(y): 0.9879, norm:0.3612, tok/sec: 185372.98, flops:194.60, batch-reuse:1
@ 344 train 5.5557 , allloss: 5.5557, dt: 708.40ms, fracRes: 0.0068, norm(attn): 2.1094, norm(output): 0.2051, norm(x): 0.2094, norm(y): 0.9856, norm:0.3662, tok/sec: 185024.85, flops:194.24, batch-reuse:1
@ 345 train 5.5336 , allloss: 5.5336, dt: 700.19ms, fracRes: 0.0067, norm(attn): 2.1094, norm(output): 0.2051, norm(x): 0.2096, norm(y): 0.9863, norm:0.4210, tok/sec: 187195.08, flops:196.52, batch-reuse:1
@ 346 train 5.6013 , allloss: 5.6013, dt: 705.34ms, fracRes: 0.0065, norm(attn): 2.0781, norm(output): 0.2070, norm(x): 0.2119, norm(y): 0.9837, norm:0.4115, tok/sec: 185828.58, flops:195.08, batch-reuse:1
@ 347 train 5.5932 , allloss: 5.5932, dt: 710.45ms, fracRes: 0.0066, norm(attn): 2.1094, norm(output): 0.2070, norm(x): 0.2110, norm(y): 0.9873, norm:0.4528, tok/sec: 184491.47, flops:193.68, batch-reuse:1
@ 348 train 5.6043 , allloss: 5.6043, dt: 713.85ms, fracRes: 0.0066, norm(attn): 2.0781, norm(output): 0.2080, norm(x): 0.2110, norm(y): 0.9807, norm:0.4217, tok/sec: 183612.92, flops:192.76, batch-reuse:1
@ 349 train 5.6422 , allloss: 5.6422, dt: 712.61ms, fracRes: 0.0069, norm(attn): 2.1094, norm(output): 0.2041, norm(x): 0.2076, norm(y): 0.9835, norm:0.3478, tok/sec: 183933.10, flops:193.09, batch-reuse:1
@ 350 train 5.6210 , allloss: 5.6210, dt: 708.37ms, fracRes: 0.0069, norm(attn): 2.1250, norm(output): 0.2041, norm(x): 0.2073, norm(y): 0.9834, norm:0.3702, tok/sec: 185034.00, flops:194.25, batch-reuse:1
@ 351 train 5.6345 , allloss: 5.6345, dt: 718.15ms, fracRes: 0.0070, norm(attn): 2.1250, norm(output): 0.2051, norm(x): 0.2083, norm(y): 0.9790, norm:0.4952, tok/sec: 182514.46, flops:191.60, batch-reuse:1
@ 352 train 5.6256 , allloss: 5.6256, dt: 722.05ms, fracRes: 0.0069, norm(attn): 2.1250, norm(output): 0.2031, norm(x): 0.2064, norm(y): 0.9803, norm:0.5417, tok/sec: 181527.73, flops:190.57, batch-reuse:1
@ 353 train 5.6050 , allloss: 5.6050, dt: 706.46ms, fracRes: 0.0064, norm(attn): 2.1094, norm(output): 0.2061, norm(x): 0.2087, norm(y): 0.9789, norm:0.4992, tok/sec: 185533.00, flops:194.77, batch-reuse:1
@ 354 train 5.5877 , allloss: 5.5877, dt: 710.65ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2031, norm(x): 0.2058, norm(y): 0.9825, norm:0.4128, tok/sec: 184438.86, flops:193.62, batch-reuse:1
@ 355 train 5.5808 , allloss: 5.5808, dt: 694.06ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2031, norm(x): 0.2048, norm(y): 0.9808, norm:0.4180, tok/sec: 188847.23, flops:198.25, batch-reuse:1
@ 356 train 5.5932 , allloss: 5.5932, dt: 712.52ms, fracRes: 0.0068, norm(attn): 2.1250, norm(output): 0.2031, norm(x): 0.2051, norm(y): 0.9824, norm:0.3969, tok/sec: 183955.81, flops:193.12, batch-reuse:1
@ 357 train 5.6282 , allloss: 5.6282, dt: 709.40ms, fracRes: 0.0068, norm(attn): 2.1250, norm(output): 0.2041, norm(x): 0.2054, norm(y): 0.9803, norm:0.4239, tok/sec: 184764.48, flops:193.97, batch-reuse:1
@ 358 train 5.5521 , allloss: 5.5521, dt: 704.79ms, fracRes: 0.0066, norm(attn): 2.1250, norm(output): 0.2051, norm(x): 0.2084, norm(y): 0.9785, norm:0.4004, tok/sec: 185972.40, flops:195.23, batch-reuse:1
@ 359 train 5.7196 , allloss: 5.7196, dt: 718.84ms, fracRes: 0.0070, norm(attn): 2.2344, norm(output): 0.2061, norm(x): 0.2088, norm(y): 0.9837, norm:0.8254, tok/sec: 182337.82, flops:191.42, batch-reuse:1
@ 360 train 5.5958 , allloss: 5.5958, dt: 697.17ms, fracRes: 0.0067, norm(attn): 2.1250, norm(output): 0.2041, norm(x): 0.2059, norm(y): 0.9722, norm:0.6912, tok/sec: 188005.47, flops:197.37, batch-reuse:1
@ 361 train 5.6058 , allloss: 5.6058, dt: 706.96ms, fracRes: 0.0065, norm(attn): 2.1875, norm(output): 0.2031, norm(x): 0.2075, norm(y): 0.9794, norm:0.6142, tok/sec: 185401.92, flops:194.64, batch-reuse:1
@ 362 train 5.5518 , allloss: 5.5518, dt: 708.81ms, fracRes: 0.0063, norm(attn): 2.1562, norm(output): 0.2129, norm(x): 0.2136, norm(y): 0.9756, norm:0.4502, tok/sec: 184917.86, flops:194.13, batch-reuse:1
@ 363 train 5.5876 , allloss: 5.5876, dt: 703.67ms, fracRes: 0.0064, norm(attn): 2.1562, norm(output): 0.2109, norm(x): 0.2146, norm(y): 0.9757, norm:0.4957, tok/sec: 186269.63, flops:195.55, batch-reuse:1
@ 364 train 5.5806 , allloss: 5.5806, dt: 708.60ms, fracRes: 0.0066, norm(attn): 2.2031, norm(output): 0.2051, norm(x): 0.2091, norm(y): 0.9817, norm:0.5737, tok/sec: 184972.68, flops:194.18, batch-reuse:1
@ 365 train 5.5756 , allloss: 5.5756, dt: 692.35ms, fracRes: 0.0065, norm(attn): 2.1875, norm(output): 0.2031, norm(x): 0.2056, norm(y): 0.9808, norm:0.5358, tok/sec: 189314.74, flops:198.74, batch-reuse:1
@ 366 train 5.6528 , allloss: 5.6528, dt: 705.56ms, fracRes: 0.0066, norm(attn): 2.2188, norm(output): 0.2031, norm(x): 0.2053, norm(y): 0.9849, norm:0.3738, tok/sec: 185769.67, flops:195.02, batch-reuse:1
@ 367 train 5.5339 , allloss: 5.5339, dt: 702.72ms, fracRes: 0.0069, norm(attn): 2.2500, norm(output): 0.2041, norm(x): 0.2072, norm(y): 0.9886, norm:0.5679, tok/sec: 186520.21, flops:195.81, batch-reuse:1
@ 368 train 5.6480 , allloss: 5.6480, dt: 705.53ms, fracRes: 0.0070, norm(attn): 2.2188, norm(output): 0.2041, norm(x): 0.2085, norm(y): 0.9870, norm:0.3817, tok/sec: 185778.90, flops:195.03, batch-reuse:1
@ 369 train 5.5263 , allloss: 5.5263, dt: 708.46ms, fracRes: 0.0070, norm(attn): 2.1719, norm(output): 0.2070, norm(x): 0.2104, norm(y): 0.9850, norm:0.4897, tok/sec: 185011.02, flops:194.22, batch-reuse:1
@ 370 train 5.6976 , allloss: 5.6976, dt: 701.88ms, fracRes: 0.0071, norm(attn): 2.2344, norm(output): 0.2090, norm(x): 0.2125, norm(y): 0.9866, norm:0.4845, tok/sec: 186743.04, flops:196.04, batch-reuse:1
@ 371 train 5.6705 , allloss: 5.6705, dt: 708.62ms, fracRes: 0.0073, norm(attn): 2.2500, norm(output): 0.2168, norm(x): 0.2177, norm(y): 0.9871, norm:0.4660, tok/sec: 184967.32, flops:194.18, batch-reuse:1
@ 372 train 5.7139 , allloss: 5.7139, dt: 707.99ms, fracRes: 0.0070, norm(attn): 2.2344, norm(output): 0.2119, norm(x): 0.2154, norm(y): 0.9852, norm:0.4455, tok/sec: 185133.57, flops:194.35, batch-reuse:1
@ 373 train 5.6347 , allloss: 5.6347, dt: 708.63ms, fracRes: 0.0074, norm(attn): 2.2500, norm(output): 0.2051, norm(x): 0.2086, norm(y): 0.9837, norm:0.4488, tok/sec: 184966.52, flops:194.18, batch-reuse:1
@ 374 train 5.6843 , allloss: 5.6843, dt: 700.88ms, fracRes: 0.0070, norm(attn): 2.2500, norm(output): 0.2070, norm(x): 0.2120, norm(y): 0.9821, norm:0.4342, tok/sec: 187011.37, flops:196.32, batch-reuse:1
@ 375 train 5.7760 , allloss: 5.7760, dt: 714.73ms, fracRes: 0.0069, norm(attn): 2.2500, norm(output): 0.2080, norm(x): 0.2129, norm(y): 0.9807, norm:0.3809, tok/sec: 183387.58, flops:192.52, batch-reuse:1
@ 376 train 5.8231 , allloss: 5.8231, dt: 706.61ms, fracRes: 0.0065, norm(attn): 2.2500, norm(output): 0.2158, norm(x): 0.2178, norm(y): 0.9785, norm:0.4723, tok/sec: 185495.38, flops:194.73, batch-reuse:1
@ 377 train 5.6950 , allloss: 5.6950, dt: 717.10ms, fracRes: 0.0072, norm(attn): 2.2500, norm(output): 0.2080, norm(x): 0.2121, norm(y): 0.9766, norm:0.5197, tok/sec: 182779.64, flops:191.88, batch-reuse:1
@ 378 train 5.6570 , allloss: 5.6570, dt: 710.91ms, fracRes: 0.0068, norm(attn): 2.2500, norm(output): 0.2070, norm(x): 0.2112, norm(y): 0.9756, norm:0.3456, tok/sec: 184372.49, flops:193.55, batch-reuse:1
@ 379 train 5.7871 , allloss: 5.7871, dt: 712.87ms, fracRes: 0.0067, norm(attn): 2.2500, norm(output): 0.2090, norm(x): 0.2107, norm(y): 0.9760, norm:0.4294, tok/sec: 183864.02, flops:193.02, batch-reuse:1
@ 380 train 5.7795 , allloss: 5.7795, dt: 699.52ms, fracRes: 0.0067, norm(attn): 2.2656, norm(output): 0.2051, norm(x): 0.2109, norm(y): 0.9746, norm:0.4116, tok/sec: 187374.62, flops:196.71, batch-reuse:1
@ 381 train 5.7049 , allloss: 5.7049, dt: 691.23ms, fracRes: 0.0070, norm(attn): 2.2656, norm(output): 0.2070, norm(x): 0.2117, norm(y): 0.9719, norm:0.4670, tok/sec: 189622.43, flops:199.07, batch-reuse:1
@ 382 train 5.6691 , allloss: 5.6691, dt: 716.02ms, fracRes: 0.0071, norm(attn): 2.2656, norm(output): 0.2051, norm(x): 0.2101, norm(y): 0.9673, norm:0.3925, tok/sec: 183057.59, flops:192.17, batch-reuse:1
@ 383 train 5.6968 , allloss: 5.6968, dt: 706.70ms, fracRes: 0.0070, norm(attn): 2.2656, norm(output): 0.2041, norm(x): 0.2101, norm(y): 0.9672, norm:0.6327, tok/sec: 185471.54, flops:194.71, batch-reuse:1
@ 384 train 5.6368 , allloss: 5.6368, dt: 705.59ms, fracRes: 0.0066, norm(attn): 2.2812, norm(output): 0.2061, norm(x): 0.2094, norm(y): 0.9689, norm:0.4372, tok/sec: 185761.95, flops:195.01, batch-reuse:1
@ 385 train 5.6361 , allloss: 5.6361, dt: 698.23ms, fracRes: 0.0066, norm(attn): 2.3125, norm(output): 0.2041, norm(x): 0.2076, norm(y): 0.9714, norm:0.3500, tok/sec: 187719.54, flops:197.07, batch-reuse:1
@ 386 train 5.7475 , allloss: 5.7475, dt: 709.03ms, fracRes: 0.0064, norm(attn): 2.2656, norm(output): 0.2031, norm(x): 0.2058, norm(y): 0.9746, norm:0.4050, tok/sec: 184861.78, flops:194.07, batch-reuse:1
@ 387 train 5.6814 , allloss: 5.6814, dt: 708.64ms, fracRes: 0.0065, norm(attn): 2.3281, norm(output): 0.2041, norm(x): 0.2067, norm(y): 0.9789, norm:0.4462, tok/sec: 184961.91, flops:194.17, batch-reuse:1
@ 388 train 5.5618 , allloss: 5.5618, dt: 690.12ms, fracRes: 0.0066, norm(attn): 2.3281, norm(output): 0.2061, norm(x): 0.2093, norm(y): 0.9811, norm:0.5495, tok/sec: 189926.33, flops:199.38, batch-reuse:1
@ 389 train 5.6421 , allloss: 5.6421, dt: 705.07ms, fracRes: 0.0068, norm(attn): 2.3438, norm(output): 0.2041, norm(x): 0.2068, norm(y): 0.9845, norm:0.5368, tok/sec: 185898.64, flops:195.16, batch-reuse:1
@ 390 train 5.6930 , allloss: 5.6930, dt: 708.59ms, fracRes: 0.0064, norm(attn): 2.2656, norm(output): 0.2041, norm(x): 0.2062, norm(y): 0.9800, norm:0.5362, tok/sec: 184975.23, flops:194.19, batch-reuse:1
@ 391 train 5.6123 , allloss: 5.6123, dt: 698.44ms, fracRes: 0.0065, norm(attn): 2.3281, norm(output): 0.2041, norm(x): 0.2057, norm(y): 0.9831, norm:0.5147, tok/sec: 187662.70, flops:197.01, batch-reuse:1
@ 392 train 5.7370 , allloss: 5.7370, dt: 702.17ms, fracRes: 0.0067, norm(attn): 2.3750, norm(output): 0.2080, norm(x): 0.2097, norm(y): 0.9853, norm:0.8846, tok/sec: 186665.93, flops:195.96, batch-reuse:1
@ 393 train 5.6720 , allloss: 5.6720, dt: 709.67ms, fracRes: 0.0065, norm(attn): 2.3438, norm(output): 0.2061, norm(x): 0.2094, norm(y): 0.9791, norm:0.6109, tok/sec: 184695.27, flops:193.89, batch-reuse:1
@ 394 train 5.6213 , allloss: 5.6213, dt: 700.82ms, fracRes: 0.0073, norm(attn): 2.3281, norm(output): 0.2080, norm(x): 0.2111, norm(y): 0.9717, norm:0.6236, tok/sec: 187027.21, flops:196.34, batch-reuse:1
@ 395 train 5.6709 , allloss: 5.6709, dt: 701.75ms, fracRes: 0.0074, norm(attn): 2.4375, norm(output): 0.2090, norm(x): 0.2109, norm(y): 0.9699, norm:0.6942, tok/sec: 186778.50, flops:196.08, batch-reuse:1
@ 396 train 5.5853 , allloss: 5.5853, dt: 711.77ms, fracRes: 0.0075, norm(attn): 2.3750, norm(output): 0.2070, norm(x): 0.2104, norm(y): 0.9595, norm:0.5083, tok/sec: 184148.25, flops:193.32, batch-reuse:1
@ 397 train 5.7221 , allloss: 5.7221, dt: 706.12ms, fracRes: 0.0075, norm(attn): 2.3281, norm(output): 0.2041, norm(x): 0.2091, norm(y): 0.9491, norm:0.5606, tok/sec: 185622.46, flops:194.87, batch-reuse:1
@ 398 train 5.6783 , allloss: 5.6783, dt: 724.04ms, fracRes: 0.0077, norm(attn): 2.4062, norm(output): 0.2070, norm(x): 0.2119, norm(y): 0.9737, norm:0.4171, tok/sec: 181028.60, flops:190.04, batch-reuse:1
@ 399 train 5.6815 , allloss: 5.6815, dt: 709.21ms, fracRes: 0.0078, norm(attn): 2.4375, norm(output): 0.2080, norm(x): 0.2109, norm(y): 0.9821, norm:0.4388, tok/sec: 184812.93, flops:194.02, batch-reuse:1
@ 400 train 5.7086 , allloss: 5.7086, dt: 704.66ms, fracRes: 0.0076, norm(attn): 2.5000, norm(output): 0.2100, norm(x): 0.2132, norm(y): 0.9858, norm:0.5472, tok/sec: 186008.08, flops:195.27, batch-reuse:1
@ 401 train 5.6328 , allloss: 5.6328, dt: 707.49ms, fracRes: 0.0074, norm(attn): 2.5000, norm(output): 0.2109, norm(x): 0.2131, norm(y): 0.9880, norm:0.5212, tok/sec: 185264.15, flops:194.49, batch-reuse:1
@ 402 train 5.6374 , allloss: 5.6374, dt: 701.38ms, fracRes: 0.0071, norm(attn): 2.5156, norm(output): 0.2070, norm(x): 0.2098, norm(y): 0.9880, norm:0.4697, tok/sec: 186876.53, flops:196.18, batch-reuse:1
@ 403 train 5.7005 , allloss: 5.7005, dt: 700.41ms, fracRes: 0.0073, norm(attn): 2.5156, norm(output): 0.2041, norm(x): 0.2080, norm(y): 0.9874, norm:0.4176, tok/sec: 187135.50, flops:196.46, batch-reuse:1
@ 404 train 5.5893 , allloss: 5.5893, dt: 708.90ms, fracRes: 0.0075, norm(attn): 2.5156, norm(output): 0.2012, norm(x): 0.2047, norm(y): 0.9867, norm:0.4336, tok/sec: 184895.85, flops:194.10, batch-reuse:1
@ 405 train 5.6394 , allloss: 5.6394, dt: 708.38ms, fracRes: 0.0072, norm(attn): 2.5625, norm(output): 0.2002, norm(x): 0.2040, norm(y): 0.9866, norm:0.4044, tok/sec: 185031.14, flops:194.25, batch-reuse:1
@ 406 train 5.6275 , allloss: 5.6275, dt: 708.52ms, fracRes: 0.0073, norm(attn): 2.5625, norm(output): 0.2012, norm(x): 0.2057, norm(y): 0.9873, norm:0.4186, tok/sec: 184993.59, flops:194.21, batch-reuse:1
@ 407 train 5.6156 , allloss: 5.6156, dt: 709.39ms, fracRes: 0.0072, norm(attn): 2.5469, norm(output): 0.2041, norm(x): 0.2076, norm(y): 0.9871, norm:0.3851, tok/sec: 184766.53, flops:193.97, batch-reuse:1
@ 408 train 5.6041 , allloss: 5.6041, dt: 703.04ms, fracRes: 0.0073, norm(attn): 2.5781, norm(output): 0.2041, norm(x): 0.2075, norm(y): 0.9867, norm:0.4287, tok/sec: 186434.88, flops:195.72, batch-reuse:1
@ 409 train 5.5585 , allloss: 5.5585, dt: 700.09ms, fracRes: 0.0074, norm(attn): 2.5781, norm(output): 0.2031, norm(x): 0.2089, norm(y): 0.9861, norm:0.4044, tok/sec: 187220.77, flops:196.54, batch-reuse:1
@ 410 train 5.6227 , allloss: 5.6227, dt: 708.34ms, fracRes: 0.0073, norm(attn): 2.5938, norm(output): 0.2041, norm(x): 0.2086, norm(y): 0.9856, norm:0.3819, tok/sec: 185041.85, flops:194.26, batch-reuse:1
@ 411 train 5.6617 , allloss: 5.6617, dt: 695.87ms, fracRes: 0.0077, norm(attn): 2.6250, norm(output): 0.2051, norm(x): 0.2086, norm(y): 0.9861, norm:0.4620, tok/sec: 188357.88, flops:197.74, batch-reuse:1
@ 412 train 5.6501 , allloss: 5.6501, dt: 698.45ms, fracRes: 0.0078, norm(attn): 2.6094, norm(output): 0.2021, norm(x): 0.2074, norm(y): 0.9862, norm:0.4430, tok/sec: 187660.33, flops:197.01, batch-reuse:1
@ 413 train 5.3176 , allloss: 5.3176, dt: 703.72ms, fracRes: 0.0074, norm(attn): 2.5938, norm(output): 0.2090, norm(x): 0.2126, norm(y): 0.9857, norm:1.1637, tok/sec: 186256.38, flops:195.53, batch-reuse:1
@ 414 train 5.6035 , allloss: 5.6035, dt: 712.29ms, fracRes: 0.0082, norm(attn): 2.6719, norm(output): 0.2031, norm(x): 0.2083, norm(y): 0.9853, norm:0.7692, tok/sec: 184015.60, flops:193.18, batch-reuse:1
@ 415 train 5.5559 , allloss: 5.5559, dt: 716.16ms, fracRes: 0.0081, norm(attn): 2.6719, norm(output): 0.2041, norm(x): 0.2076, norm(y): 0.9820, norm:0.5906, tok/sec: 183019.75, flops:192.13, batch-reuse:1
@ 416 train 5.6747 , allloss: 5.6747, dt: 715.66ms, fracRes: 0.0079, norm(attn): 2.6719, norm(output): 0.2021, norm(x): 0.2059, norm(y): 0.9824, norm:0.4787, tok/sec: 183149.19, flops:192.27, batch-reuse:1
@ 417 train 5.5841 , allloss: 5.5841, dt: 699.59ms, fracRes: 0.0075, norm(attn): 2.7188, norm(output): 0.2031, norm(x): 0.2051, norm(y): 0.9834, norm:0.6169, tok/sec: 187356.74, flops:196.69, batch-reuse:1
@ 418 train 5.6644 , allloss: 5.6644, dt: 705.27ms, fracRes: 0.0072, norm(attn): 2.6250, norm(output): 0.2031, norm(x): 0.2050, norm(y): 0.9772, norm:0.5454, tok/sec: 185847.80, flops:195.10, batch-reuse:1
@ 419 train 5.5819 , allloss: 5.5819, dt: 707.46ms, fracRes: 0.0076, norm(attn): 2.7188, norm(output): 0.1992, norm(x): 0.2012, norm(y): 0.9785, norm:0.4687, tok/sec: 185272.21, flops:194.50, batch-reuse:1
@ 420 train 5.5662 , allloss: 5.5662, dt: 692.84ms, fracRes: 0.0077, norm(attn): 2.7500, norm(output): 0.2021, norm(x): 0.2042, norm(y): 0.9799, norm:0.5434, tok/sec: 189181.32, flops:198.60, batch-reuse:1
@ 421 train 5.6451 , allloss: 5.6451, dt: 708.28ms, fracRes: 0.0075, norm(attn): 2.7344, norm(output): 0.2031, norm(x): 0.2069, norm(y): 0.9687, norm:0.4978, tok/sec: 185055.99, flops:194.27, batch-reuse:1
@ 422 train 5.5643 , allloss: 5.5643, dt: 708.57ms, fracRes: 0.0079, norm(attn): 2.6250, norm(output): 0.2041, norm(x): 0.2076, norm(y): 0.9318, norm:0.4357, tok/sec: 184980.15, flops:194.19, batch-reuse:1
@ 423 train 5.5064 , allloss: 5.5064, dt: 707.95ms, fracRes: 0.0084, norm(attn): 2.5312, norm(output): 0.2070, norm(x): 0.2102, norm(y): 0.9168, norm:0.5616, tok/sec: 185143.42, flops:194.36, batch-reuse:1
@ 424 train 5.5979 , allloss: 5.5979, dt: 706.55ms, fracRes: 0.0077, norm(attn): 2.7500, norm(output): 0.2051, norm(x): 0.2072, norm(y): 0.9667, norm:0.3782, tok/sec: 185510.59, flops:194.75, batch-reuse:1
@ 425 train 5.6015 , allloss: 5.6015, dt: 701.04ms, fracRes: 0.0076, norm(attn): 2.7500, norm(output): 0.2031, norm(x): 0.2059, norm(y): 0.9701, norm:0.4597, tok/sec: 186967.29, flops:196.28, batch-reuse:1
@ 426 train 5.4815 , allloss: 5.4815, dt: 707.97ms, fracRes: 0.0079, norm(attn): 2.6719, norm(output): 0.2139, norm(x): 0.2163, norm(y): 0.9582, norm:3.1043, tok/sec: 185138.31, flops:194.36, batch-reuse:1
@ 427 train 5.5737 , allloss: 5.5737, dt: 705.65ms, fracRes: 0.0080, norm(attn): 2.5469, norm(output): 0.2100, norm(x): 0.2136, norm(y): 0.9470, norm:2.2250, tok/sec: 185745.38, flops:195.00, batch-reuse:1
@ 428 train 5.5144 , allloss: 5.5144, dt: 724.99ms, fracRes: 0.0083, norm(attn): 2.7344, norm(output): 0.2061, norm(x): 0.2106, norm(y): 0.9786, norm:0.4565, tok/sec: 180791.66, flops:189.80, batch-reuse:1
@ 429 train 5.5506 , allloss: 5.5506, dt: 724.94ms, fracRes: 0.0090, norm(attn): 2.7344, norm(output): 0.2598, norm(x): 0.2646, norm(y): 0.9834, norm:14.5481, tok/sec: 180805.04, flops:189.81, batch-reuse:1
@ 430 train 7.0670 , allloss: 7.0670, dt: 706.21ms, fracRes: 0.0090, norm(attn): 2.6406, norm(output): 2.4219, norm(x): 2.4081, norm(y): 0.9972, norm:2.9615, tok/sec: 185600.40, flops:194.84, batch-reuse:1
@ 431 train 7.6466 , allloss: 7.6466, dt: 701.93ms, fracRes: 0.0087, norm(attn): 2.2344, norm(output): 5.8750, norm(x): 5.9023, norm(y): 0.9990, norm:15.9696, tok/sec: 186729.78, flops:196.03, batch-reuse:1
@ 432 train 7.5815 , allloss: 7.5815, dt: 705.55ms, fracRes: 0.0085, norm(attn): 2.7500, norm(output): 5.0000, norm(x): 5.0110, norm(y): 0.9995, norm:3.0292, tok/sec: 185772.31, flops:195.02, batch-reuse:1
@ 433 train 8.1215 , allloss: 8.1215, dt: 695.48ms, fracRes: 0.0074, norm(attn): 2.7812, norm(output): 6.5312, norm(x): 6.5444, norm(y): 1.0004, norm:2.9415, tok/sec: 188462.49, flops:197.85, batch-reuse:1
@ 434 train 7.9037 , allloss: 7.9037, dt: 704.33ms, fracRes: 0.0067, norm(attn): 2.8125, norm(output): 6.5000, norm(x): 6.5270, norm(y): 1.0004, norm:2.7847, tok/sec: 186094.47, flops:195.36, batch-reuse:1
@ 435 train 7.9388 , allloss: 7.9388, dt: 702.90ms, fracRes: 0.0064, norm(attn): 3.0000, norm(output): 9.3750, norm(x): 9.4221, norm(y): 1.0001, norm:6.6432, tok/sec: 186473.64, flops:195.76, batch-reuse:1
@ 436 train 8.0859 , allloss: 8.0859, dt: 707.88ms, fracRes: 0.0058, norm(attn): 3.0156, norm(output): 6.9688, norm(x): 6.9118, norm(y): 1.0012, norm:3.7208, tok/sec: 185160.57, flops:194.38, batch-reuse:1
@ 437 train 7.6606 , allloss: 7.6606, dt: 707.33ms, fracRes: 0.0053, norm(attn): 3.1250, norm(output): 7.1250, norm(x): 7.2075, norm(y): 1.0018, norm:1.3431, tok/sec: 185305.37, flops:194.53, batch-reuse:1
@ 438 train 8.0369 , allloss: 8.0369, dt: 701.82ms, fracRes: 0.0047, norm(attn): 2.9375, norm(output): 7.4062, norm(x): 7.3640, norm(y): 1.0016, norm:8.2160, tok/sec: 186759.21, flops:196.06, batch-reuse:1
@ 439 train 8.2977 , allloss: 8.2977, dt: 711.75ms, fracRes: 0.0060, norm(attn): 3.2344, norm(output): 7.8750, norm(x): 7.8155, norm(y): 1.0018, norm:3.4982, tok/sec: 184155.28, flops:193.33, batch-reuse:1
@ 440 train 7.8126 , allloss: 7.8126, dt: 701.69ms, fracRes: 0.0070, norm(attn): 3.4062, norm(output): 8.1875, norm(x): 8.2772, norm(y): 1.0016, norm:2.7971, tok/sec: 186794.94, flops:196.10, batch-reuse:1
@ 441 train 7.8871 , allloss: 7.8871, dt: 710.59ms, fracRes: 0.0125, norm(attn): 2.8906, norm(output): 8.2500, norm(x): 8.2508, norm(y): 1.0006, norm:137.5669, tok/sec: 184454.77, flops:193.64, batch-reuse:1
@ 442 train 7.9671 , allloss: 7.9671, dt: 713.97ms, fracRes: 0.0350, norm(attn): 3.7031, norm(output): 8.1250, norm(x): 8.2500, norm(y): 1.0019, norm:6.9378, tok/sec: 183581.04, flops:192.72, batch-reuse:1
@ 443 train 8.0347 , allloss: 8.0347, dt: 709.22ms, fracRes: 0.0379, norm(attn): 4.0000, norm(output): 8.8750, norm(x): 8.8545, norm(y): 1.0024, norm:4.3043, tok/sec: 184810.32, flops:194.01, batch-reuse:1
@ 444 train 7.7871 , allloss: 7.7871, dt: 701.40ms, fracRes: 0.0272, norm(attn): 4.0312, norm(output): 8.8750, norm(x): 8.8537, norm(y): 1.0024, norm:2.2719, tok/sec: 186871.58, flops:196.18, batch-reuse:1
@ 445 train 7.5881 , allloss: 7.5881, dt: 703.32ms, fracRes: 0.0199, norm(attn): 3.9688, norm(output): 9.0625, norm(x): 9.0687, norm(y): 1.0017, norm:0.9528, tok/sec: 186362.14, flops:195.64, batch-reuse:1
@ 446 train 7.8899 , allloss: 7.8899, dt: 705.34ms, fracRes: 0.0214, norm(attn): 4.1250, norm(output): 15.3125, norm(x): 15.3661, norm(y): 1.0015, norm:3.2855, tok/sec: 185828.95, flops:195.08, batch-reuse:1
@ 447 train 7.5847 , allloss: 7.5847, dt: 707.47ms, fracRes: 0.0235, norm(attn): 4.2500, norm(output): 15.1875, norm(x): 15.3746, norm(y): 1.0015, norm:0.8486, tok/sec: 185268.96, flops:194.50, batch-reuse:1
@ 448 train 7.6532 , allloss: 7.6532, dt: 700.71ms, fracRes: 0.0288, norm(attn): 4.3750, norm(output): 15.0625, norm(x): 15.2776, norm(y): 1.0014, norm:1.8420, tok/sec: 187056.73, flops:196.37, batch-reuse:1
@ 449 train 7.4994 , allloss: 7.4994, dt: 709.27ms, fracRes: 0.0350, norm(attn): 4.4375, norm(output): 15.0625, norm(x): 15.2242, norm(y): 1.0014, norm:1.5463, tok/sec: 184798.58, flops:194.00, batch-reuse:1
@ 450 train 7.4757 , allloss: 7.4757, dt: 705.55ms, fracRes: 0.0433, norm(attn): 4.4375, norm(output): 15.0000, norm(x): 14.9965, norm(y): 1.0014, norm:1.1216, tok/sec: 185771.81, flops:195.02, batch-reuse:1
@ 451 train 7.4582 , allloss: 7.4582, dt: 705.20ms, fracRes: 0.0459, norm(attn): 4.4688, norm(output): 14.2500, norm(x): 14.5183, norm(y): 1.0014, norm:1.7111, tok/sec: 185866.02, flops:195.12, batch-reuse:1
@ 452 train 7.3904 , allloss: 7.3904, dt: 702.62ms, fracRes: 0.0471, norm(attn): 4.4062, norm(output): 13.9375, norm(x): 13.8876, norm(y): 1.0013, norm:1.0581, tok/sec: 186546.85, flops:195.84, batch-reuse:1
@ 453 train 7.3491 , allloss: 7.3491, dt: 702.27ms, fracRes: 0.0482, norm(attn): 4.3750, norm(output): 12.9375, norm(x): 12.8926, norm(y): 1.0012, norm:1.1209, tok/sec: 186639.19, flops:195.93, batch-reuse:1
@ 454 train 7.3133 , allloss: 7.3133, dt: 696.13ms, fracRes: 0.0502, norm(attn): 4.6875, norm(output): 13.6250, norm(x): 13.5648, norm(y): 1.0010, norm:1.1679, tok/sec: 188285.76, flops:197.66, batch-reuse:1
@ 455 train 7.2656 , allloss: 7.2656, dt: 708.80ms, fracRes: 0.0509, norm(attn): 4.6875, norm(output): 12.9375, norm(x): 12.9477, norm(y): 1.0009, norm:0.6337, tok/sec: 184921.97, flops:194.13, batch-reuse:1
@ 456 train 7.4701 , allloss: 7.4701, dt: 728.75ms, fracRes: 0.0542, norm(attn): 4.7500, norm(output): 12.0000, norm(x): 11.9124, norm(y): 1.0010, norm:10.9832, tok/sec: 179859.78, flops:188.82, batch-reuse:1
@ 457 train 7.2370 , allloss: 7.2370, dt: 699.28ms, fracRes: 0.0609, norm(attn): 4.8750, norm(output): 11.8750, norm(x): 11.9374, norm(y): 1.0013, norm:0.8815, tok/sec: 187439.01, flops:196.77, batch-reuse:1
@ 458 train 7.3390 , allloss: 7.3390, dt: 705.87ms, fracRes: 0.0653, norm(attn): 5.1250, norm(output): 11.7500, norm(x): 11.6838, norm(y): 1.0014, norm:2.3305, tok/sec: 185688.98, flops:194.94, batch-reuse:1
@ 459 train 7.1071 , allloss: 7.1071, dt: 700.04ms, fracRes: 0.0644, norm(attn): 5.1250, norm(output): 11.0000, norm(x): 11.0052, norm(y): 1.0015, norm:1.6589, tok/sec: 187234.86, flops:196.56, batch-reuse:1
@ 460 train 7.0343 , allloss: 7.0343, dt: 705.99ms, fracRes: 0.0637, norm(attn): 5.0938, norm(output): 10.2500, norm(x): 10.4351, norm(y): 1.0016, norm:1.3341, tok/sec: 185656.00, flops:194.90, batch-reuse:1
@ 461 train 6.9691 , allloss: 6.9691, dt: 700.23ms, fracRes: 0.0640, norm(attn): 5.3125, norm(output): 10.0000, norm(x): 10.0445, norm(y): 1.0017, norm:0.8442, tok/sec: 187183.73, flops:196.51, batch-reuse:1
@ 462 train 7.0251 , allloss: 7.0251, dt: 698.51ms, fracRes: 0.0646, norm(attn): 5.4688, norm(output): 9.5625, norm(x): 9.5651, norm(y): 1.0018, norm:1.7605, tok/sec: 187646.24, flops:196.99, batch-reuse:1
@ 463 train 6.9151 , allloss: 6.9151, dt: 696.31ms, fracRes: 0.0640, norm(attn): 5.4688, norm(output): 9.0000, norm(x): 9.1094, norm(y): 1.0019, norm:1.4621, tok/sec: 188238.50, flops:197.61, batch-reuse:1
@ 464 train 6.8422 , allloss: 6.8422, dt: 702.76ms, fracRes: 0.0632, norm(attn): 5.5312, norm(output): 8.6250, norm(x): 8.6950, norm(y): 1.0020, norm:1.2539, tok/sec: 186511.03, flops:195.80, batch-reuse:1
@ 465 train 6.7382 , allloss: 6.7382, dt: 710.37ms, fracRes: 0.0627, norm(attn): 5.6250, norm(output): 8.1875, norm(x): 8.3101, norm(y): 1.0021, norm:0.8369, tok/sec: 184511.97, flops:193.70, batch-reuse:1
@ 466 train 6.8418 , allloss: 6.8418, dt: 711.34ms, fracRes: 0.0631, norm(attn): 5.8125, norm(output): 7.9062, norm(x): 7.8783, norm(y): 1.0021, norm:1.7558, tok/sec: 184261.20, flops:193.44, batch-reuse:1
@ 467 train 6.6730 , allloss: 6.6730, dt: 707.76ms, fracRes: 0.0626, norm(attn): 5.8438, norm(output): 7.5000, norm(x): 7.5342, norm(y): 1.0022, norm:1.2795, tok/sec: 185191.70, flops:194.41, batch-reuse:1
@ 468 train 6.6557 , allloss: 6.6557, dt: 708.83ms, fracRes: 0.0626, norm(attn): 5.8438, norm(output): 7.2500, norm(x): 7.3054, norm(y): 1.0022, norm:1.6456, tok/sec: 184912.02, flops:194.12, batch-reuse:1
@ 469 train 6.5477 , allloss: 6.5477, dt: 713.51ms, fracRes: 0.0621, norm(attn): 5.9062, norm(output): 7.0000, norm(x): 7.0533, norm(y): 1.0023, norm:1.4009, tok/sec: 183700.29, flops:192.85, batch-reuse:1
@ 470 train 6.6291 , allloss: 6.6291, dt: 708.80ms, fracRes: 0.0619, norm(attn): 6.0000, norm(output): 6.6875, norm(x): 6.7670, norm(y): 1.0023, norm:1.2636, tok/sec: 184921.60, flops:194.13, batch-reuse:1
@ 471 train 6.4570 , allloss: 6.4570, dt: 695.05ms, fracRes: 0.0620, norm(attn): 6.0312, norm(output): 6.4688, norm(x): 6.5257, norm(y): 1.0024, norm:0.9410, tok/sec: 188578.98, flops:197.97, batch-reuse:1
@ 472 train 6.5592 , allloss: 6.5592, dt: 697.95ms, fracRes: 0.0622, norm(attn): 6.0000, norm(output): 6.2188, norm(x): 6.2947, norm(y): 1.0024, norm:1.2369, tok/sec: 187795.72, flops:197.15, batch-reuse:1
@ 473 train 6.4283 , allloss: 6.4283, dt: 693.55ms, fracRes: 0.0623, norm(attn): 6.0312, norm(output): 6.0000, norm(x): 6.0200, norm(y): 1.0025, norm:0.7565, tok/sec: 188987.65, flops:198.40, batch-reuse:1
@ 474 train 6.3409 , allloss: 6.3409, dt: 702.29ms, fracRes: 0.0635, norm(attn): 6.0625, norm(output): 5.6562, norm(x): 5.7182, norm(y): 1.0025, norm:1.3547, tok/sec: 186635.83, flops:195.93, batch-reuse:1
@ 475 train 6.3313 , allloss: 6.3313, dt: 692.61ms, fracRes: 0.0620, norm(attn): 6.1250, norm(output): 5.5000, norm(x): 5.4900, norm(y): 1.0026, norm:1.0266, tok/sec: 189244.69, flops:198.67, batch-reuse:1
@ 476 train 6.3328 , allloss: 6.3328, dt: 707.07ms, fracRes: 0.0613, norm(attn): 6.0625, norm(output): 5.2188, norm(x): 5.2888, norm(y): 1.0026, norm:1.5237, tok/sec: 185372.73, flops:194.60, batch-reuse:1
@ 477 train 6.3341 , allloss: 6.3341, dt: 706.82ms, fracRes: 0.0616, norm(attn): 6.0938, norm(output): 5.0000, norm(x): 5.0827, norm(y): 1.0026, norm:0.9688, tok/sec: 185437.94, flops:194.67, batch-reuse:1
@ 478 train 6.3200 , allloss: 6.3200, dt: 708.17ms, fracRes: 0.0624, norm(attn): 6.1250, norm(output): 4.6875, norm(x): 4.7687, norm(y): 1.0027, norm:1.7919, tok/sec: 185085.77, flops:194.30, batch-reuse:1
@ 479 train 6.3939 , allloss: 6.3939, dt: 707.51ms, fracRes: 0.0622, norm(attn): 6.1250, norm(output): 4.5938, norm(x): 4.6141, norm(y): 1.0027, norm:1.6888, tok/sec: 185257.10, flops:194.48, batch-reuse:1
@ 480 train 6.1415 , allloss: 6.1415, dt: 706.72ms, fracRes: 0.0616, norm(attn): 6.1250, norm(output): 4.4375, norm(x): 4.4678, norm(y): 1.0027, norm:0.9105, tok/sec: 185465.34, flops:194.70, batch-reuse:1
@ 481 train 6.2160 , allloss: 6.2160, dt: 704.49ms, fracRes: 0.0608, norm(attn): 6.1250, norm(output): 4.3125, norm(x): 4.3451, norm(y): 1.0027, norm:1.1159, tok/sec: 186052.97, flops:195.32, batch-reuse:1
@ 482 train 6.1549 , allloss: 6.1549, dt: 698.14ms, fracRes: 0.0608, norm(attn): 6.1562, norm(output): 4.1250, norm(x): 4.2042, norm(y): 1.0027, norm:1.1577, tok/sec: 187743.32, flops:197.09, batch-reuse:1
@ 483 train 6.1731 , allloss: 6.1731, dt: 703.73ms, fracRes: 0.0610, norm(attn): 6.1875, norm(output): 4.0312, norm(x): 4.0618, norm(y): 1.0028, norm:0.9475, tok/sec: 186254.30, flops:195.53, batch-reuse:1
@ 484 train 6.0183 , allloss: 6.0183, dt: 701.82ms, fracRes: 0.0605, norm(attn): 6.1250, norm(output): 3.8750, norm(x): 3.9416, norm(y): 1.0028, norm:1.1448, tok/sec: 186760.04, flops:196.06, batch-reuse:1
@ 485 train 5.9502 , allloss: 5.9502, dt: 700.27ms, fracRes: 0.0604, norm(attn): 6.1562, norm(output): 3.7188, norm(x): 3.7209, norm(y): 1.0028, norm:0.8553, tok/sec: 187174.43, flops:196.50, batch-reuse:1
@ 486 train 6.1230 , allloss: 6.1230, dt: 705.54ms, fracRes: 0.0602, norm(attn): 6.0938, norm(output): 3.5000, norm(x): 3.5376, norm(y): 1.0028, norm:1.1793, tok/sec: 185774.26, flops:195.03, batch-reuse:1
@ 487 train 5.9914 , allloss: 5.9914, dt: 701.20ms, fracRes: 0.0603, norm(attn): 6.0312, norm(output): 3.3438, norm(x): 3.3962, norm(y): 1.0028, norm:0.5560, tok/sec: 186924.06, flops:196.23, batch-reuse:1
@ 488 train 5.9277 , allloss: 5.9277, dt: 706.52ms, fracRes: 0.0599, norm(attn): 6.0000, norm(output): 3.2031, norm(x): 3.2278, norm(y): 1.0029, norm:1.1378, tok/sec: 185517.67, flops:194.76, batch-reuse:1
@ 489 train 5.9347 , allloss: 5.9347, dt: 709.25ms, fracRes: 0.0598, norm(attn): 6.0625, norm(output): 3.0781, norm(x): 3.1369, norm(y): 1.0029, norm:0.8178, tok/sec: 184804.36, flops:194.01, batch-reuse:1
@ 490 train 5.9845 , allloss: 5.9845, dt: 714.49ms, fracRes: 0.0601, norm(attn): 6.0625, norm(output): 3.0000, norm(x): 3.0286, norm(y): 1.0029, norm:0.7872, tok/sec: 183449.57, flops:192.59, batch-reuse:1
@ 491 train 6.0057 , allloss: 6.0057, dt: 712.02ms, fracRes: 0.0597, norm(attn): 6.0000, norm(output): 2.8594, norm(x): 2.9014, norm(y): 1.0029, norm:0.8119, tok/sec: 184084.68, flops:193.25, batch-reuse:1
@ 492 train 5.9665 , allloss: 5.9665, dt: 713.32ms, fracRes: 0.0602, norm(attn): 6.0000, norm(output): 2.7656, norm(x): 2.8335, norm(y): 1.0029, norm:0.6871, tok/sec: 183749.84, flops:192.90, batch-reuse:1
@ 493 train 5.8984 , allloss: 5.8984, dt: 706.18ms, fracRes: 0.0604, norm(attn): 6.0312, norm(output): 2.6719, norm(x): 2.7023, norm(y): 1.0029, norm:0.6846, tok/sec: 185606.86, flops:194.85, batch-reuse:1
@ 494 train 5.8662 , allloss: 5.8662, dt: 700.07ms, fracRes: 0.0597, norm(attn): 6.0000, norm(output): 2.5156, norm(x): 2.5444, norm(y): 1.0029, norm:0.6840, tok/sec: 187228.29, flops:196.55, batch-reuse:1
@ 495 train 5.7407 , allloss: 5.7407, dt: 700.97ms, fracRes: 0.0597, norm(attn): 6.0312, norm(output): 2.4219, norm(x): 2.4593, norm(y): 1.0029, norm:0.5794, tok/sec: 186985.92, flops:196.30, batch-reuse:1
@ 496 train 5.8249 , allloss: 5.8249, dt: 706.39ms, fracRes: 0.0596, norm(attn): 6.0000, norm(output): 2.3438, norm(x): 2.3929, norm(y): 1.0029, norm:0.5982, tok/sec: 185551.16, flops:194.79, batch-reuse:1
@ 497 train 5.7439 , allloss: 5.7439, dt: 699.03ms, fracRes: 0.0589, norm(attn): 5.9688, norm(output): 2.2344, norm(x): 2.2718, norm(y): 1.0030, norm:0.7802, tok/sec: 187505.05, flops:196.84, batch-reuse:1
@ 498 train 5.8769 , allloss: 5.8769, dt: 713.14ms, fracRes: 0.0582, norm(attn): 6.0000, norm(output): 2.1719, norm(x): 2.1975, norm(y): 1.0029, norm:0.9863, tok/sec: 183796.40, flops:192.95, batch-reuse:1
@ 499 train 5.8325 , allloss: 5.8325, dt: 715.90ms, fracRes: 0.0586, norm(attn): 6.0000, norm(output): 2.0625, norm(x): 2.0922, norm(y): 1.0029, norm:0.7545, tok/sec: 183088.07, flops:192.21, batch-reuse:1
@ 500 train 5.7079 , allloss: 5.7079, dt: 717.16ms, fracRes: 0.0582, norm(attn): 6.0312, norm(output): 1.9844, norm(x): 1.9972, norm(y): 1.0029, norm:0.5011, tok/sec: 182766.39, flops:191.87, batch-reuse:1
@ 501 train 5.8339 , allloss: 5.8339, dt: 718.45ms, fracRes: 0.0590, norm(attn): 6.0000, norm(output): 1.8672, norm(x): 1.9019, norm(y): 1.0029, norm:1.0107, tok/sec: 182438.02, flops:191.52, batch-reuse:1
@ 502 train 5.8237 , allloss: 5.8237, dt: 720.51ms, fracRes: 0.0601, norm(attn): 5.9375, norm(output): 1.7500, norm(x): 1.7987, norm(y): 1.0028, norm:1.2057, tok/sec: 181916.19, flops:190.98, batch-reuse:1
@ 503 train 5.7519 , allloss: 5.7519, dt: 723.83ms, fracRes: 0.0584, norm(attn): 6.0000, norm(output): 1.7734, norm(x): 1.8140, norm(y): 1.0029, norm:0.7791, tok/sec: 181080.00, flops:190.10, batch-reuse:1
@ 504 train 5.7483 , allloss: 5.7483, dt: 706.16ms, fracRes: 0.0576, norm(attn): 6.0000, norm(output): 1.7500, norm(x): 1.7966, norm(y): 1.0029, norm:0.4352, tok/sec: 185612.62, flops:194.86, batch-reuse:1
@ 505 train 5.6887 , allloss: 5.6887, dt: 707.64ms, fracRes: 0.0565, norm(attn): 6.0000, norm(output): 1.7188, norm(x): 1.7471, norm(y): 1.0029, norm:0.7965, tok/sec: 185223.46, flops:194.45, batch-reuse:1
@ 506 train 5.7467 , allloss: 5.7467, dt: 697.04ms, fracRes: 0.0566, norm(attn): 6.0938, norm(output): 1.6250, norm(x): 1.6792, norm(y): 1.0029, norm:1.0533, tok/sec: 188041.93, flops:197.41, batch-reuse:1
@ 507 train 5.6942 , allloss: 5.6942, dt: 714.02ms, fracRes: 0.0548, norm(attn): 6.0625, norm(output): 1.6172, norm(x): 1.6449, norm(y): 1.0028, norm:1.0168, tok/sec: 183568.10, flops:192.71, batch-reuse:1
@ 508 train 5.5876 , allloss: 5.5876, dt: 702.92ms, fracRes: 0.0583, norm(attn): 6.0938, norm(output): 1.5547, norm(x): 1.6059, norm(y): 1.0028, norm:0.4866, tok/sec: 186467.00, flops:195.75, batch-reuse:1
@ 509 train 5.6866 , allloss: 5.6866, dt: 701.72ms, fracRes: 0.0589, norm(attn): 6.1562, norm(output): 1.5078, norm(x): 1.5703, norm(y): 1.0028, norm:0.6667, tok/sec: 186786.31, flops:196.09, batch-reuse:1
@ 510 train 5.6372 , allloss: 5.6372, dt: 697.83ms, fracRes: 0.0586, norm(attn): 6.0312, norm(output): 1.5000, norm(x): 1.5354, norm(y): 1.0029, norm:1.0495, tok/sec: 187827.29, flops:197.18, batch-reuse:1
@ 511 train 5.6914 , allloss: 5.6914, dt: 697.96ms, fracRes: 0.0589, norm(attn): 6.1250, norm(output): 1.4453, norm(x): 1.4867, norm(y): 1.0029, norm:0.8815, tok/sec: 187792.70, flops:197.15, batch-reuse:1
@ 512 train 5.6043 , allloss: 5.6043, dt: 698.84ms, fracRes: 0.0586, norm(attn): 6.0312, norm(output): 1.3984, norm(x): 1.4550, norm(y): 1.0028, norm:0.5407, tok/sec: 187557.64, flops:196.90, batch-reuse:1
@ 513 train 5.5688 , allloss: 5.5688, dt: 707.62ms, fracRes: 0.0582, norm(attn): 6.0938, norm(output): 1.3672, norm(x): 1.4014, norm(y): 1.0028, norm:0.6087, tok/sec: 185228.45, flops:194.45, batch-reuse:1
@ 514 train 5.5706 , allloss: 5.5706, dt: 702.46ms, fracRes: 0.0585, norm(attn): 6.0938, norm(output): 1.3281, norm(x): 1.3633, norm(y): 1.0028, norm:0.7755, tok/sec: 186589.97, flops:195.88, batch-reuse:1
@ 515 train 5.5147 , allloss: 5.5147, dt: 705.34ms, fracRes: 0.0584, norm(attn): 6.0625, norm(output): 1.2656, norm(x): 1.3143, norm(y): 1.0028, norm:0.6790, tok/sec: 185827.95, flops:195.08, batch-reuse:1
@ 516 train 5.5044 , allloss: 5.5044, dt: 702.23ms, fracRes: 0.0574, norm(attn): 6.0312, norm(output): 1.2500, norm(x): 1.2766, norm(y): 1.0029, norm:0.6753, tok/sec: 186650.15, flops:195.95, batch-reuse:1
@ 517 train 5.4944 , allloss: 5.4944, dt: 706.21ms, fracRes: 0.0538, norm(attn): 5.9688, norm(output): 1.2031, norm(x): 1.2447, norm(y): 1.0029, norm:0.5149, tok/sec: 185598.65, flops:194.84, batch-reuse:1
@ 518 train 5.5573 , allloss: 5.5573, dt: 707.35ms, fracRes: 0.0585, norm(attn): 5.9688, norm(output): 1.1719, norm(x): 1.2165, norm(y): 1.0029, norm:0.5478, tok/sec: 185300.68, flops:194.53, batch-reuse:1
@ 519 train 5.5191 , allloss: 5.5191, dt: 715.26ms, fracRes: 0.0582, norm(attn): 5.9688, norm(output): 1.1328, norm(x): 1.1756, norm(y): 1.0029, norm:0.5837, tok/sec: 183250.59, flops:192.38, batch-reuse:1
@ 520 train 5.5588 , allloss: 5.5588, dt: 714.66ms, fracRes: 0.0588, norm(attn): 6.0000, norm(output): 1.1172, norm(x): 1.1546, norm(y): 1.0029, norm:0.8601, tok/sec: 183405.45, flops:192.54, batch-reuse:1
@ 521 train 5.6629 , allloss: 5.6629, dt: 708.07ms, fracRes: 0.0582, norm(attn): 6.0000, norm(output): 1.0938, norm(x): 1.1381, norm(y): 1.0029, norm:1.0605, tok/sec: 185112.75, flops:194.33, batch-reuse:1
@ 522 train 5.4801 , allloss: 5.4801, dt: 697.44ms, fracRes: 0.0584, norm(attn): 6.0938, norm(output): 1.0781, norm(x): 1.1204, norm(y): 1.0029, norm:0.7134, tok/sec: 187932.20, flops:197.29, batch-reuse:1
@ 523 train 5.5523 , allloss: 5.5523, dt: 706.34ms, fracRes: 0.0583, norm(attn): 6.1250, norm(output): 1.0625, norm(x): 1.1071, norm(y): 1.0028, norm:0.5362, tok/sec: 185565.82, flops:194.81, batch-reuse:1
@ 524 train 5.4416 , allloss: 5.4416, dt: 698.62ms, fracRes: 0.0578, norm(attn): 6.1250, norm(output): 1.0312, norm(x): 1.0741, norm(y): 1.0028, norm:0.7456, tok/sec: 187615.31, flops:196.96, batch-reuse:1
@ 525 train 5.5337 , allloss: 5.5337, dt: 703.73ms, fracRes: 0.0578, norm(attn): 6.0000, norm(output): 1.0000, norm(x): 1.0525, norm(y): 1.0029, norm:1.2278, tok/sec: 186252.09, flops:195.53, batch-reuse:1
@ 526 train 5.5126 , allloss: 5.5126, dt: 704.68ms, fracRes: 0.0559, norm(attn): 5.6250, norm(output): 0.9961, norm(x): 1.0301, norm(y): 1.0030, norm:0.5767, tok/sec: 186003.30, flops:195.27, batch-reuse:1
@ 527 train 5.5885 , allloss: 5.5885, dt: 702.28ms, fracRes: 0.0560, norm(attn): 5.5625, norm(output): 1.0859, norm(x): 1.1224, norm(y): 1.0029, norm:4.6008, tok/sec: 186637.16, flops:195.93, batch-reuse:1
@ 528 train 5.4670 , allloss: 5.4670, dt: 692.36ms, fracRes: 0.0578, norm(attn): 5.6562, norm(output): 0.9922, norm(x): 1.0253, norm(y): 1.0032, norm:1.2000, tok/sec: 189310.77, flops:198.74, batch-reuse:1
@ 529 train 5.4842 , allloss: 5.4842, dt: 698.07ms, fracRes: 0.0578, norm(attn): 5.9688, norm(output): 1.0000, norm(x): 1.0413, norm(y): 1.0030, norm:0.5962, tok/sec: 187764.35, flops:197.12, batch-reuse:1
@ 530 train 5.5390 , allloss: 5.5390, dt: 697.69ms, fracRes: 0.0584, norm(attn): 6.0000, norm(output): 1.0078, norm(x): 1.0557, norm(y): 1.0030, norm:0.4709, tok/sec: 187864.71, flops:197.22, batch-reuse:1
@ 531 train 5.6808 , allloss: 5.6808, dt: 714.11ms, fracRes: 0.0579, norm(attn): 6.0312, norm(output): 1.0312, norm(x): 1.0786, norm(y): 1.0029, norm:0.6628, tok/sec: 183546.41, flops:192.69, batch-reuse:1
@ 532 train 5.3826 , allloss: 5.3826, dt: 719.50ms, fracRes: 0.0574, norm(attn): 6.0312, norm(output): 1.0547, norm(x): 1.0895, norm(y): 1.0029, norm:0.8743, tok/sec: 182171.54, flops:191.24, batch-reuse:1
@ 533 train 5.5015 , allloss: 5.5015, dt: 710.73ms, fracRes: 0.0566, norm(attn): 6.0000, norm(output): 1.0625, norm(x): 1.1033, norm(y): 1.0028, norm:1.5190, tok/sec: 184418.26, flops:193.60, batch-reuse:1
@ 534 train 5.4153 , allloss: 5.4153, dt: 698.24ms, fracRes: 0.0556, norm(attn): 6.0000, norm(output): 1.0781, norm(x): 1.1142, norm(y): 1.0028, norm:0.8772, tok/sec: 187717.61, flops:197.07, batch-reuse:1
@ 535 train 5.5218 , allloss: 5.5218, dt: 709.40ms, fracRes: 0.0581, norm(attn): 5.9688, norm(output): 1.0938, norm(x): 1.1295, norm(y): 1.0027, norm:0.5438, tok/sec: 184763.86, flops:193.97, batch-reuse:1
@ 536 train 5.4416 , allloss: 5.4416, dt: 694.07ms, fracRes: 0.0585, norm(attn): 5.8750, norm(output): 1.0547, norm(x): 1.0951, norm(y): 1.0027, norm:0.5556, tok/sec: 188846.26, flops:198.25, batch-reuse:1
@ 537 train 5.4352 , allloss: 5.4352, dt: 697.68ms, fracRes: 0.0588, norm(attn): 5.5938, norm(output): 1.0234, norm(x): 1.0735, norm(y): 1.0025, norm:0.9337, tok/sec: 187867.66, flops:197.22, batch-reuse:1
@ 538 train 5.5626 , allloss: 5.5626, dt: 698.06ms, fracRes: 0.0588, norm(attn): 6.0312, norm(output): 1.0547, norm(x): 1.0963, norm(y): 1.0029, norm:1.6668, tok/sec: 187765.76, flops:197.12, batch-reuse:1
@ 539 train 5.4696 , allloss: 5.4696, dt: 715.84ms, fracRes: 0.0583, norm(attn): 6.1250, norm(output): 1.0625, norm(x): 1.1007, norm(y): 1.0031, norm:0.7254, tok/sec: 183101.98, flops:192.22, batch-reuse:1
@ 540 train 5.5084 , allloss: 5.5084, dt: 718.60ms, fracRes: 0.0581, norm(attn): 6.1875, norm(output): 1.0625, norm(x): 1.0937, norm(y): 1.0032, norm:1.0982, tok/sec: 182398.25, flops:191.48, batch-reuse:1
@ 541 train 5.4988 , allloss: 5.4988, dt: 714.87ms, fracRes: 0.0570, norm(attn): 6.1562, norm(output): 1.0625, norm(x): 1.0927, norm(y): 1.0032, norm:1.2175, tok/sec: 183351.31, flops:192.48, batch-reuse:1
@ 542 train 5.4457 , allloss: 5.4457, dt: 719.65ms, fracRes: 0.0573, norm(attn): 6.3438, norm(output): 1.0469, norm(x): 1.0834, norm(y): 1.0033, norm:0.5246, tok/sec: 182133.76, flops:191.20, batch-reuse:1
@ 543 train 5.5042 , allloss: 5.5042, dt: 706.76ms, fracRes: 0.0580, norm(attn): 6.3750, norm(output): 1.0469, norm(x): 1.0767, norm(y): 1.0033, norm:1.1304, tok/sec: 185454.89, flops:194.69, batch-reuse:1
@ 544 train 5.4153 , allloss: 5.4153, dt: 716.05ms, fracRes: 0.0577, norm(attn): 6.4062, norm(output): 1.0312, norm(x): 1.0658, norm(y): 1.0033, norm:0.6109, tok/sec: 183049.00, flops:192.17, batch-reuse:1
@ 545 train 5.4500 , allloss: 5.4500, dt: 696.70ms, fracRes: 0.0563, norm(attn): 6.3750, norm(output): 1.0234, norm(x): 1.0700, norm(y): 1.0033, norm:0.7494, tok/sec: 188132.41, flops:197.50, batch-reuse:1
@ 546 train 5.3478 , allloss: 5.3478, dt: 699.00ms, fracRes: 0.0531, norm(attn): 6.4688, norm(output): 1.0156, norm(x): 1.0557, norm(y): 1.0034, norm:1.1054, tok/sec: 187514.84, flops:196.85, batch-reuse:1
@ 547 train 5.4911 , allloss: 5.4911, dt: 695.55ms, fracRes: 0.0574, norm(attn): 6.4375, norm(output): 1.0000, norm(x): 1.0398, norm(y): 1.0034, norm:0.5084, tok/sec: 188442.33, flops:197.83, batch-reuse:1
@ 548 train 5.4732 , allloss: 5.4732, dt: 690.01ms, fracRes: 0.0580, norm(attn): 6.4375, norm(output): 0.9922, norm(x): 1.0304, norm(y): 1.0035, norm:0.9241, tok/sec: 189955.66, flops:199.42, batch-reuse:1
@ 549 train 5.4048 , allloss: 5.4048, dt: 701.11ms, fracRes: 0.0584, norm(attn): 6.4688, norm(output): 0.9805, norm(x): 1.0189, norm(y): 1.0035, norm:0.9367, tok/sec: 186950.38, flops:196.26, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6797,     0.3203,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1689,     0.3926,     0.4375,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3086,     0.1074,     0.0815,     0.0238,     0.4785,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1855,     0.0020,     0.0041,     0.0047,     0.6445,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0108,     0.3555,     0.1934,     0.0742,     0.0835,     0.1934,     0.0894,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0090,     0.3105,     0.0535,     0.0486,     0.1582,     0.2275,     0.0801,     0.1118,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.0645,     0.0493,     0.0376,     0.1670,     0.2158,     0.1553,     0.2139,     0.0786,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.1226,     0.2129,     0.2373,     0.0476,     0.0209,     0.0254,     0.2432,     0.0469,     0.0417,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0991,     0.0383,     0.0136,     0.0044,     0.0796,     0.3770,     0.0352,     0.0532,     0.1699,     0.0277,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2969,     0.0962,     0.2949,     0.0026,     0.0016,     0.0024,     0.0767,     0.0045,     0.0234,     0.0302,     0.1699,     0.0000,     0.0000,     0.0000],
        [    0.0300,     0.0176,     0.0168,     0.0349,     0.1216,     0.0796,     0.0173,     0.1201,     0.0154,     0.0087,     0.2578,     0.1338,     0.1475,     0.0000,     0.0000],
        [    0.0579,     0.0203,     0.0086,     0.0028,     0.1738,     0.3105,     0.0952,     0.0623,     0.0620,     0.0145,     0.0762,     0.0153,     0.0300,     0.0718,     0.0000],
        [    0.0002,     0.0815,     0.0771,     0.1406,     0.0113,     0.0045,     0.0056,     0.1021,     0.0400,     0.0228,     0.0371,     0.2676,     0.1118,     0.0574,     0.0405]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,     -0.3633,     -0.3711,     -0.4062,     -0.2578,     -0.2461,     -0.2656,     -0.3379,     -0.2490,     -0.3535,     -0.3203,     -0.3594,     -0.2695,     -0.2695,     -0.3594],
        [    -0.0111,      4.0312,      1.6641,     -1.0078,      1.1016,      0.6992,      1.0781,     -0.1641,      1.1406,      0.4609,      2.2969,      0.1973,     -0.7734,      2.2656,      1.8359],
        [     0.0011,     16.0000,     15.2500,     16.2500,      9.4375,      7.0000,      8.8125,     13.5000,      9.5000,     11.7500,     11.8125,     15.8750,     12.8125,      9.8750,     13.9375],
        [     0.0019,      6.9062,      7.7500,      7.8750,      4.8750,      2.9375,      3.8125,      7.2812,      4.5312,      4.8125,      5.7812,      8.0625,      7.5625,      5.1250,      6.8438],
        [     0.0043,     -1.0469,     -1.3203,     -2.5625,      0.4473,      2.9219,      0.8945,     -0.2520,      1.3984,     -0.7734,     -0.4980,     -1.5781,     -0.3574,      1.5781,     -0.9922],
        [    -0.0161,     -4.5625,     -3.8438,     -3.7031,      1.2266,     -0.1680,     -1.0391,     -1.0078,     -0.4824,     -4.1562,     -1.2422,     -2.7812,      0.1162,     -0.2295,     -1.6719],
        [     0.0148,      3.5156,      2.9062,      1.9375,      2.0625,      2.9062,      2.1250,      3.1250,      1.5234,      1.7422,      2.6094,      2.7344,      2.5625,      2.1406,      3.5938],
        [    -0.0001,      3.5469,      1.7891,      1.6875,      2.8750,      3.2344,      2.1875,      2.5312,      2.8906,      1.7891,      3.9219,      2.3750,      3.1406,      3.3594,      3.0156],
        [     0.0037,      1.3359,      1.0703,      0.7969,      2.2969,      2.5469,      2.2188,      2.5312,      1.5391,      1.0547,      2.0312,      1.3438,      1.4375,      1.9141,      2.7656],
        [    -0.0025,      4.2812,      4.8125,      4.9375,      3.3281,      2.5000,      2.7031,      4.9688,      3.3125,      3.1875,      3.0469,      5.4375,      4.9688,      2.8750,      3.8594],
        [     0.0103,     -0.9414,     -1.9766,     -3.0938,     -0.2100,      1.3438,     -1.0312,     -0.6133,      0.5508,     -1.2656,      0.0430,     -1.4766,     -0.6914,      0.8867,     -0.9805],
        [     0.0122,     10.5000,      9.3750,     10.5000,      5.7812,      5.2500,      5.6875,      9.1250,      6.3125,      7.9688,      8.1875,      9.9375,      8.5000,      6.6562,      8.4375],
        [    -0.0035,     -0.5391,     -0.5820,      0.1455,      1.3984,      0.9727,     -0.5508,      1.3828,     -0.6680,     -1.2500,      2.1406,      1.4922,      1.5859,     -0.3535,      1.2266],
        [    -0.0000,     -1.0469,     -1.9062,     -3.0312,      1.1016,      1.6797,      0.4980,      0.0732,      0.0703,     -1.3750,      0.2754,     -1.3359,     -0.6523,      0.2139,     -0.1299],
        [     0.0030,      5.9375,      5.8750,      6.5000,      3.9688,      3.0625,      3.2656,      6.1562,      5.2188,      4.6562,      5.1562,      7.1250,      6.2500,      5.5938,      5.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0677],
        [0.0119],
        [0.0468],
        [0.1835],
        [0.1300],
        [0.1632],
        [0.0838],
        [0.1130],
        [0.0262],
        [0.2085],
        [0.0070],
        [0.1773],
        [0.1123],
        [0.0241]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.1475,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2461,     0.1196,     0.6328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0164,     0.0025,     0.0503,     0.9297,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.0004,     0.2402,     0.6211,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.0005,     0.0000,     0.0000,     0.1357,     0.8594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0009,     0.0002,     0.0000,     0.0222,     0.9609,     0.0156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0000,     0.0000,     0.0000,     0.4062,     0.0001,     0.3633,     0.2207,     0.0085,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0000,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0023,     0.0003,     0.0002,     0.3320,     0.1357,     0.0143,     0.0053,     0.4043,     0.0116,     0.0923,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0027,     0.0000,     0.9141,     0.0061,     0.0182,     0.0000,     0.0000,     0.0586,     0.0000,     0.0000],
        [    0.0007,     0.0000,     0.0000,     0.0000,     0.2031,     0.0001,     0.2715,     0.2969,     0.0063,     0.0339,     0.1553,     0.0000,     0.0117,     0.0214,     0.0000],
        [    0.0010,     0.0004,     0.0002,     0.0001,     0.3203,     0.0038,     0.0466,     0.1245,     0.0278,     0.0618,     0.1021,     0.0001,     0.0439,     0.1895,     0.0781]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0103,      0.0016,     -0.0242,     -0.0259,      0.0003,     -0.0222,      0.0996,      0.0058,      0.0540,     -0.0170,      0.0110,      0.0732,      0.0084,     -0.0021],
        [    -0.0034,     -1.7578,      1.9922,     -0.8008,     -2.7344,     -0.9453,      1.5547,     10.6250,     -1.4766,      7.1562,      1.0391,      2.9375,      6.9062,     -0.9648,      1.4609],
        [     0.0071,     -0.7109,      0.9570,      5.2188,      6.3125,     -1.2734,      5.5938,      2.6719,      0.2832,      2.3438,      5.8125,      2.3594,      1.2344,      0.4316,      6.3125],
        [     0.0172,     -1.8438,      1.1406,      4.0625,      7.0312,      0.3086,      5.0625,     11.4375,      3.7188,      7.7812,      5.5312,      3.0625,      6.9688,      3.2969,      4.8438],
        [     0.0110,     -2.8281,      3.5312,      4.4688,      2.9062,     -1.1484,      4.4688,     13.3750,      0.4844,      9.1250,      3.8594,      5.3750,      9.0000,      0.4375,      6.4062],
        [     0.0085,     -1.6484,     -4.3438,     -7.3750,      3.9844,      5.8438,      3.9844,      9.1875,      6.3750,      4.8750,      1.6094,     -3.2344,      4.9375,      6.4375,     -0.9844],
        [     0.0306,      0.5195,     -0.8633,     -3.5000,      3.6875,      7.4688,      3.3438,     14.1250,      7.2500,      8.8750,      2.2812,     -0.2061,      9.5625,      7.5000,      2.5469],
        [     0.0420,      0.5703,     -0.0205,     -0.4531,      1.6094,      6.5312,      0.8203,     15.5000,      7.1875,      9.0625,      1.0547,      1.9219,     11.0625,      6.2500,      1.1562],
        [    -0.0147,     -5.5938,     -4.6250,     -2.8281,      6.5312,     -2.2812,      6.4062,      5.9062,      2.6562,      3.4219,      5.7188,     -2.5000,      1.8906,      2.8438,      1.0938],
        [     0.0398,     -1.5078,      1.6172,      3.1562,     -2.1562,      3.1562,     -0.3730,     16.1250,      2.8906,      9.3125,      2.5781,      6.0625,     13.9375,      2.9844,      3.4219],
        [     0.0259,     -1.8984,     -1.6562,     -3.8281,     -1.7812,      3.4375,     -1.0938,     15.3750,      4.0625,      9.3125,      1.6797,     -1.1328,     12.3125,      4.9062,      0.2871],
        [     0.0238,      1.1562,     -0.8906,     -1.1562,      6.1250,      5.2188,      2.9844,      2.0000,      6.3125,      2.7812,      4.8438,     -2.4844,      1.3984,      6.9688,      2.9844],
        [     0.0195,      0.3555,     -1.7031,     -4.3438,      2.0312,      5.0625,      0.9766,     10.8750,      5.8750,      6.9688,      0.9648,     -1.9297,      8.1250,      6.5938,      1.3438],
        [    -0.0193,     -5.3438,     -4.9062,     -4.5938,      5.6562,     -2.0625,      5.9375,      6.0312,      2.1719,      3.8594,      5.3750,     -3.3750,      2.7969,      3.4062,      1.6094],
        [    -0.0012,     -1.0703,     -1.5234,     -2.5469,      5.7188,      1.2891,      3.7969,      4.7812,      3.2812,      4.0938,      4.5938,     -2.7500,      3.7344,      5.1875,      4.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5497],
        [0.1343],
        [0.2236],
        [0.0878],
        [0.1255],
        [0.0670],
        [0.0989],
        [0.0709],
        [0.0912],
        [0.0913],
        [0.0109],
        [0.0549],
        [0.0585],
        [0.0177]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7188,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9648,     0.0334,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6953,     0.0130,     0.0017,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0005,     0.8438,     0.1562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0239,     0.0640,     0.0000,     0.9141,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0009,     0.0008,     0.0000,     0.0027,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.5547,     0.1279,     0.0000,     0.0510,     0.0018,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4258,     0.1147,     0.0000,     0.0391,     0.0089,     0.4121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9961,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0012,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2168,     0.0461,     0.0000,     0.0129,     0.0001,     0.0425,     0.0000,     0.0000,     0.0000,     0.3242,     0.3574,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9844,     0.0112,     0.0000,     0.0000,     0.0000,     0.0000,     0.0033,     0.0000,     0.0021]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,     -0.0054,      0.0393,      0.0400,     -0.0119,      0.0635,      0.0850,      0.0854,     -0.0012,      0.0006,      0.0251,      0.0557,      0.0845,     -0.0019,      0.0781],
        [     0.0209,     -0.9219,      2.8594,      3.1875,      1.1641,      4.2188,      8.6250,      5.8125,     -1.9375,     -1.9453,      2.5781,      2.8281,      5.6875,     -2.1719,      5.9688],
        [     0.0654,     -3.2969,    -11.2500,     -6.0000,     14.6875,     -0.3047,     21.8750,      6.2812,     -6.5625,    -12.6875,     10.1875,     -7.8750,      1.8359,     -8.5625,      0.5664],
        [     0.0801,     -3.8906,     -5.9062,     -0.7930,     13.3125,      2.9062,     27.6250,      9.8750,     -9.2500,    -13.0625,     10.8125,     -4.7812,      5.4688,    -11.1250,      5.5625],
        [    -0.0051,      0.1836,      7.6562,      5.9688,     -5.3438,      1.1406,     -3.4375,     -0.1025,     -1.0938,      3.1719,     -3.6406,      4.8750,      1.4141,     -0.4707,      2.7188],
        [     0.0126,     -1.3203,     10.5625,     11.5625,     -3.5469,     14.1875,     21.6250,     19.3750,     -3.4531,     -1.1797,      4.9375,     14.1875,     19.3750,     -3.4531,     18.6250],
        [     0.0117,     -1.4219,     11.0000,     10.8750,     -4.0312,     12.1250,     18.0000,     16.2500,     -3.6094,     -0.4570,      3.6562,     12.3125,     16.2500,     -3.4219,     16.6250],
        [     0.0305,     -3.3125,     14.1250,     15.1250,     -2.6094,     20.0000,     36.5000,     29.0000,     -7.6562,     -5.0000,      8.8125,     18.3750,     27.7500,     -8.0000,     27.8750],
        [    -0.0120,      0.7109,     13.8750,     12.4375,     -9.5000,     11.5000,      8.1875,     13.1875,     -0.2334,      4.4062,     -0.2988,     14.5000,     15.0000,      0.7227,     15.1250],
        [     0.0378,     -2.2188,      4.2188,      6.7188,      2.1719,      9.5000,     23.5000,     16.0000,     -6.2500,     -6.0000,      7.4688,      6.7500,     14.4375,     -6.8125,     13.8125],
        [    -0.0031,      0.2197,     16.1250,     14.7500,    -10.0625,     13.6875,     12.1875,     16.0000,     -2.0781,      3.6406,      1.3203,     16.5000,     18.3750,     -0.9531,     18.7500],
        [     0.0381,     -2.2500,     -2.6250,      0.1846,      6.5000,      4.9062,     18.7500,      9.3750,     -3.9531,     -7.0312,      6.9375,      0.5352,      6.9062,     -4.9688,      6.3438],
        [     0.0253,     -2.7500,     12.5625,     13.3750,     -3.1562,     18.0000,     31.8750,     25.8750,     -6.8438,     -3.9531,      7.8125,     16.8750,     25.1250,     -6.9688,     25.1250],
        [    -0.0136,      0.9844,     14.0000,     12.5000,    -10.0000,     11.1875,      6.6250,     12.3750,      0.2715,      5.2812,     -0.5469,     14.4375,     14.5625,      1.3828,     14.6875],
        [     0.0205,     -1.8281,      5.9375,      6.9688,     -0.2451,     11.8750,     21.8750,     17.3750,     -3.0469,     -3.0469,      6.6562,      9.3125,     16.2500,     -3.3750,     15.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.4040],
        [    0.1706],
        [    0.0789],
        [    0.0567],
        [    0.0085],
        [    0.0027],
        [    0.0005],
        [    0.0012],
        [    0.0158],
        [    0.0008],
        [    0.0096],
        [    0.0003],
        [    0.0008],
        [    0.0808]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0005,     -0.0928,     -0.1328,     -0.1299,     -0.1494,     -0.1426,     -0.1514,     -0.1475,     -0.1318,     -0.1123,     -0.1328,     -0.1108,     -0.1270,     -0.1338,     -0.1069],
        [    -0.0496,     -9.5000,    -12.5000,    -12.6875,    -16.1250,    -16.0000,    -16.8750,    -15.8125,    -14.0625,    -12.8125,    -14.6875,    -12.0625,    -14.0625,    -14.1875,    -11.0625],
        [    -0.0708,    -14.8125,    -20.0000,    -20.1250,    -23.8750,    -23.2500,    -24.7500,    -24.2500,    -20.6250,    -18.8750,    -20.7500,    -18.0000,    -21.2500,    -20.8750,    -17.2500],
        [    -0.0635,    -13.4375,    -18.1250,    -18.0000,    -21.3750,    -20.1250,    -21.7500,    -21.6250,    -18.2500,    -16.5000,    -18.7500,    -16.1250,    -19.0000,    -18.5000,    -15.3125],
        [    -0.1230,    -25.6250,    -36.0000,    -34.5000,    -38.7500,    -39.0000,    -40.5000,    -38.2500,    -37.0000,    -29.6250,    -34.5000,    -29.0000,    -32.2500,    -37.7500,    -28.5000],
        [    -0.1040,    -21.3750,    -28.3750,    -26.2500,    -30.2500,    -30.5000,    -31.5000,    -30.5000,    -28.0000,    -23.6250,    -26.1250,    -23.1250,    -26.0000,    -28.6250,    -23.0000],
        [    -0.1055,    -23.0000,    -30.2500,    -28.1250,    -32.2500,    -29.8750,    -31.2500,    -31.6250,    -28.8750,    -24.3750,    -26.3750,    -24.2500,    -26.3750,    -29.3750,    -23.7500],
        [    -0.1045,    -21.6250,    -30.2500,    -28.7500,    -33.0000,    -33.2500,    -34.5000,    -33.2500,    -31.1250,    -24.7500,    -29.7500,    -25.2500,    -28.6250,    -31.8750,    -24.7500],
        [    -0.0952,    -19.2500,    -26.2500,    -25.2500,    -29.7500,    -30.5000,    -31.6250,    -29.8750,    -27.6250,    -22.6250,    -26.8750,    -22.1250,    -25.7500,    -28.2500,    -21.7500],
        [    -0.0771,    -16.5000,    -21.3750,    -20.5000,    -24.7500,    -23.6250,    -25.7500,    -24.6250,    -20.5000,    -18.8750,    -20.8750,    -18.5000,    -20.8750,    -20.7500,    -18.5000],
        [    -0.0859,    -17.5000,    -22.8750,    -21.5000,    -24.2500,    -24.3750,    -24.6250,    -24.3750,    -23.7500,    -18.8750,    -20.3750,    -18.2500,    -20.1250,    -24.2500,    -18.6250],
        [    -0.0791,    -16.7500,    -23.6250,    -23.3750,    -26.8750,    -26.3750,    -28.5000,    -26.8750,    -23.5000,    -20.3750,    -23.8750,    -20.2500,    -23.3750,    -24.0000,    -19.8750],
        [    -0.1006,    -21.3750,    -29.0000,    -26.6250,    -29.8750,    -30.0000,    -31.0000,    -30.5000,    -28.2500,    -23.1250,    -26.2500,    -22.8750,    -26.1250,    -29.0000,    -22.8750],
        [    -0.0938,    -19.0000,    -25.7500,    -24.6250,    -29.0000,    -29.7500,    -30.7500,    -29.0000,    -26.8750,    -22.1250,    -26.1250,    -21.6250,    -25.1250,    -27.6250,    -21.2500],
        [    -0.0615,    -13.8125,    -18.7500,    -18.3750,    -21.8750,    -20.1250,    -22.1250,    -21.3750,    -17.7500,    -16.3750,    -18.6250,    -16.2500,    -18.6250,    -17.8750,    -15.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8237],
        [0.7413],
        [0.7511],
        [0.7005],
        [0.7309],
        [0.6820],
        [0.6800],
        [0.6821],
        [0.7208],
        [0.6770],
        [0.6827],
        [0.6821],
        [0.6781],
        [0.6831]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1396,     0.8594,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0332,     0.3613,     0.6055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0096,     0.1963,     0.6133,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0576,     0.2305,     0.2422,     0.1514,     0.3184,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0272,     0.1309,     0.0339,     0.7617,     0.0464,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0850,     0.1533,     0.1689,     0.1494,     0.1631,     0.2168,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.2188,     0.0942,     0.0447,     0.1079,     0.2148,     0.0210,     0.2949,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0052,     0.0493,     0.0845,     0.0420,     0.5117,     0.0471,     0.0605,     0.0820,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0771,     0.1157,     0.0430,     0.5117,     0.0522,     0.0214,     0.0574,     0.1011,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0447,     0.0884,     0.0297,     0.3926,     0.0311,     0.0078,     0.0167,     0.1982,     0.0126,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0107,     0.0337,     0.0128,     0.4629,     0.0063,     0.0099,     0.0059,     0.0879,     0.0135,     0.2734,     0.0811,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0659,     0.0801,     0.0272,     0.1914,     0.0894,     0.0198,     0.1348,     0.0425,     0.0089,     0.0981,     0.0378,     0.2031,     0.0000,     0.0000],
        [    0.0020,     0.0238,     0.0569,     0.0251,     0.4023,     0.0204,     0.0294,     0.0374,     0.0781,     0.0129,     0.1211,     0.0659,     0.0461,     0.0786,     0.0000],
        [    0.0011,     0.0117,     0.0498,     0.0162,     0.3242,     0.0103,     0.0132,     0.0064,     0.0864,     0.0110,     0.2949,     0.0508,     0.0085,     0.1050,     0.0098]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0073,      0.0140,      0.0108,      0.0277,      0.0074,      0.0026,      0.0083,      0.0209,      0.0065,      0.0264,      0.0182,      0.0068,      0.0201,      0.0063],
        [     0.0036,      1.8203,      2.6094,      1.7344,      3.6094,      2.0312,      1.9375,      2.1406,      2.2812,      1.3828,      3.3906,      2.3125,      2.4062,      2.4219,      1.1719],
        [     0.0025,      2.3906,      2.9062,      1.7734,      4.9375,      1.9922,      1.6875,      1.6797,      3.5469,      2.0000,      4.5938,      2.9531,      2.1250,      3.7188,      1.5391],
        [     0.0019,      3.0156,      4.1562,      2.9531,      7.1562,      2.3906,      2.7500,      2.2656,      5.1875,      2.9219,      6.8125,      4.0625,      2.3438,      5.3438,      2.1250],
        [     0.0033,      1.3906,      1.4375,      0.9727,      1.7109,      1.2891,      0.5781,      1.1719,      1.6953,     -0.0256,      0.5195,      1.5469,      1.3906,      1.7188,      0.5000],
        [     0.0055,      3.5000,      5.0625,      3.7188,      6.8438,      4.0312,      3.5000,      4.5000,      4.9688,      2.8750,      6.1562,      4.5938,      4.7188,      5.1250,      2.7969],
        [     0.0004,      0.5938,      0.6875,      0.5625,      0.6523,      0.9375,     -0.3027,      0.3906,      1.2031,     -0.7812,      0.9688,      0.3477,      0.4453,      1.2031,     -0.0649],
        [     0.0064,      4.2188,      3.3750,      2.6250,      3.5156,      4.1875,      1.8672,      4.5000,      2.9844,      1.3203,      3.0156,      2.6406,      4.7812,      3.2031,      1.5625],
        [     0.0057,      2.2500,      2.7969,      2.0938,      4.5938,      2.2031,      2.4531,      2.7656,      3.1250,      1.6719,      3.4844,      2.9688,      3.0000,      3.1562,      1.6172],
        [     0.0032,      3.7812,      4.1875,      3.1875,      5.6875,      3.3906,      2.5000,      3.4844,      4.0625,      2.2812,      5.1250,      4.1250,      4.0000,      4.1562,      1.9297],
        [     0.0016,      3.0781,      3.7656,      2.6719,      5.2500,      2.7188,      1.3438,      2.0938,      4.5625,      1.8203,      4.4375,      3.7344,      2.6562,      4.6875,      1.8594],
        [     0.0041,      2.1719,      3.3125,      2.3438,      5.9375,      1.6250,      2.0938,      1.5703,      4.2812,      2.3906,      5.4062,      4.1875,      1.6797,      4.3750,      2.0156],
        [     0.0063,      4.5312,      4.7500,      3.6562,      5.6250,      4.8438,      3.3438,      5.2500,      4.0938,      2.5469,      4.9375,      3.9844,      5.6875,      4.3438,      2.8125],
        [     0.0049,      2.4688,      3.3438,      2.5312,      5.3125,      2.3125,      2.6875,      2.9219,      3.6562,      1.8516,      4.0938,      3.4844,      3.1406,      3.6562,      1.9219],
        [     0.0029,      2.3906,      3.8281,      2.7188,      5.7188,      2.2656,      2.5156,      1.7812,      4.3750,      2.3281,      5.5938,      3.8438,      2.0625,      4.5625,      2.2031]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1898],
        [0.1002],
        [0.0791],
        [0.0498],
        [0.0789],
        [0.3559],
        [0.0624],
        [0.0209],
        [0.0209],
        [0.0037],
        [0.0136],
        [0.0595],
        [0.0144],
        [0.0321]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2793,     0.7227,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2070,     0.4453,     0.3477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1377,     0.2295,     0.1641,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0206,     0.1079,     0.0918,     0.3789,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0231,     0.1216,     0.1011,     0.3320,     0.4062,     0.0157,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0091,     0.0918,     0.0845,     0.3770,     0.2852,     0.0256,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0732,     0.0757,     0.0508,     0.1348,     0.4023,     0.0018,     0.2471,     0.0138,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0566,     0.0786,     0.0554,     0.1543,     0.3906,     0.0023,     0.2197,     0.0168,     0.0251,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0757,     0.0728,     0.0483,     0.1260,     0.3945,     0.0016,     0.2393,     0.0133,     0.0199,     0.0074,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0708,     0.0737,     0.0503,     0.1279,     0.3848,     0.0018,     0.2373,     0.0139,     0.0211,     0.0079,     0.0093,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0068,     0.0635,     0.0576,     0.2715,     0.2100,     0.0160,     0.0957,     0.0422,     0.0552,     0.0320,     0.0330,     0.1177,     0.0000,     0.0000],
        [    0.0000,     0.0605,     0.0571,     0.0378,     0.0981,     0.3125,     0.0013,     0.1953,     0.0100,     0.0152,     0.0056,     0.0066,     0.1924,     0.0072,     0.0000],
        [    0.0000,     0.0245,     0.0581,     0.0439,     0.1328,     0.2598,     0.0027,     0.1357,     0.0157,     0.0234,     0.0099,     0.0114,     0.1504,     0.0123,     0.1191]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0962,     0.1045,     0.1045,     0.1104,     0.1089,     0.0986,     0.1055,     0.1040,     0.1045,     0.1030,     0.1030,     0.1064,     0.1035,     0.1099],
        [    0.0219,    21.5000,    24.1250,    24.1250,    25.5000,    25.0000,    23.3750,    24.0000,    24.1250,    24.3750,    24.0000,    24.0000,    24.2500,    24.1250,    25.2500],
        [    0.0272,    24.7500,    25.6250,    25.5000,    26.5000,    27.1250,    22.7500,    26.3750,    24.5000,    24.8750,    24.0000,    24.1250,    26.5000,    24.2500,    26.3750],
        [    0.0283,    25.3750,    26.1250,    25.8750,    26.8750,    27.6250,    22.8750,    26.8750,    24.7500,    25.1250,    24.3750,    24.5000,    27.0000,    24.5000,    26.7500],
        [    0.0291,    25.2500,    25.7500,    25.3750,    26.5000,    27.3750,    22.5000,    26.7500,    24.2500,    24.7500,    23.7500,    24.0000,    26.8750,    24.0000,    26.3750],
        [    0.0273,    25.6250,    27.2500,    27.1250,    28.6250,    28.6250,    25.3750,    27.8750,    26.5000,    26.8750,    26.2500,    26.2500,    28.0000,    26.3750,    28.3750],
        [    0.0247,    22.2500,    24.0000,    23.7500,    25.0000,    25.1250,    21.8750,    24.5000,    23.1250,    23.5000,    22.7500,    22.8750,    24.6250,    22.8750,    24.7500],
        [    0.0249,    23.8750,    26.2500,    26.1250,    27.6250,    27.3750,    25.0000,    26.6250,    25.8750,    26.1250,    25.6250,    25.7500,    26.7500,    25.8750,    27.3750],
        [    0.0298,    25.6250,    25.6250,    25.2500,    26.2500,    27.2500,    21.8750,    26.7500,    23.8750,    24.3750,    23.3750,    23.5000,    26.7500,    23.6250,    26.1250],
        [    0.0289,    25.5000,    25.8750,    25.5000,    26.5000,    27.3750,    22.2500,    26.8750,    24.2500,    24.7500,    23.7500,    23.8750,    26.8750,    24.0000,    26.3750],
        [    0.0297,    25.5000,    25.3750,    25.0000,    26.0000,    27.1250,    21.6250,    26.6250,    23.7500,    24.1250,    23.1250,    23.2500,    26.6250,    23.3750,    25.8750],
        [    0.0294,    25.1250,    25.2500,    24.8750,    25.7500,    26.8750,    21.5000,    26.3750,    23.5000,    24.0000,    23.0000,    23.1250,    26.3750,    23.2500,    25.7500],
        [    0.0264,    25.0000,    27.2500,    27.1250,    28.6250,    28.3750,    25.8750,    27.6250,    26.7500,    27.1250,    26.5000,    26.5000,    27.8750,    26.6250,    28.3750],
        [    0.0299,    25.5000,    25.5000,    25.0000,    26.0000,    27.1250,    21.6250,    26.7500,    23.7500,    24.1250,    23.1250,    23.3750,    26.7500,    23.3750,    26.0000],
        [    0.0284,    25.3750,    26.2500,    26.0000,    27.0000,    27.7500,    23.1250,    27.1250,    24.8750,    25.3750,    24.5000,    24.6250,    27.1250,    24.6250,    26.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0131, 0.9883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0077, 0.5039, 0.4883, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0056, 0.3398, 0.3301, 0.3262, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0039, 0.2559, 0.2480, 0.2441, 0.2480, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0031, 0.2041, 0.1982, 0.1953, 0.1992, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0022, 0.1699, 0.1650, 0.1631, 0.1660, 0.1670, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0018, 0.1455, 0.1406, 0.1387, 0.1416, 0.1426, 0.1426, 0.1475, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0020, 0.1270, 0.1235, 0.1221, 0.1240, 0.1250, 0.1245, 0.1289, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0021, 0.1133, 0.1104, 0.1094, 0.1108, 0.1113, 0.1113, 0.1147, 0.1099, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.1025, 0.0996, 0.0981, 0.1001, 0.1006, 0.1006, 0.1035, 0.0991, 0.0957, 0.0986, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0017, 0.0933, 0.0908, 0.0898, 0.0908, 0.0918, 0.0918, 0.0942, 0.0903, 0.0874, 0.0898, 0.0879, 0.0000, 0.0000, 0.0000],
        [0.0011, 0.0854, 0.0830, 0.0820, 0.0835, 0.0840, 0.0840, 0.0864, 0.0825, 0.0796, 0.0820, 0.0801, 0.0859, 0.0000, 0.0000],
        [0.0012, 0.0791, 0.0767, 0.0757, 0.0771, 0.0776, 0.0776, 0.0801, 0.0762, 0.0737, 0.0762, 0.0742, 0.0791, 0.0762, 0.0000],
        [0.0012, 0.0732, 0.0713, 0.0703, 0.0718, 0.0723, 0.0718, 0.0742, 0.0713, 0.0684, 0.0708, 0.0688, 0.0737, 0.0708, 0.0698]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.0413,      0.0410,      0.0408,      0.0410,      0.0410,      0.0410,      0.0415,      0.0408,      0.0403,      0.0408,      0.0405,      0.0413,      0.0408,      0.0405],
        [    -0.0295,      4.2812,      4.2500,      4.2500,      4.2500,      4.2812,      4.2812,      4.3125,      4.2500,      4.2188,      4.2500,      4.2188,      4.2812,      4.2500,      4.2500],
        [    -0.0293,      4.1562,      4.1250,      4.0938,      4.1250,      4.1250,      4.1250,      4.1562,      4.1250,      4.0938,      4.1250,      4.0938,      4.1562,      4.1250,      4.0938],
        [    -0.0291,      4.0625,      4.0312,      4.0312,      4.0625,      4.0625,      4.0625,      4.0938,      4.0312,      4.0000,      4.0312,      4.0000,      4.0625,      4.0312,      4.0312],
        [    -0.0292,      4.1562,      4.1250,      4.0938,      4.1250,      4.1250,      4.1250,      4.1562,      4.1250,      4.0625,      4.0938,      4.0938,      4.1562,      4.1250,      4.0938],
        [    -0.0293,      4.1562,      4.1250,      4.1250,      4.1562,      4.1562,      4.1562,      4.1875,      4.1250,      4.0938,      4.1250,      4.0938,      4.1875,      4.1250,      4.1250],
        [    -0.0294,      4.3125,      4.2812,      4.2812,      4.2812,      4.3125,      4.3125,      4.3438,      4.2812,      4.2500,      4.2812,      4.2500,      4.3125,      4.2812,      4.2812],
        [    -0.0297,      4.3438,      4.3125,      4.3125,      4.3125,      4.3438,      4.3438,      4.3750,      4.3125,      4.2812,      4.3125,      4.2812,      4.3750,      4.3125,      4.3125],
        [    -0.0292,      4.1250,      4.1250,      4.0938,      4.1250,      4.1250,      4.1250,      4.1562,      4.0938,      4.0625,      4.0938,      4.0625,      4.1562,      4.0938,      4.0938],
        [    -0.0287,      3.9531,      3.9219,      3.9062,      3.9219,      3.9219,      3.9219,      3.9531,      3.9219,      3.8750,      3.9062,      3.8906,      3.9531,      3.9062,      3.9062],
        [    -0.0291,      4.0625,      4.0312,      4.0312,      4.0312,      4.0312,      4.0312,      4.0625,      4.0312,      4.0000,      4.0312,      4.0000,      4.0625,      4.0312,      4.0000],
        [    -0.0288,      3.9844,      3.9531,      3.9375,      3.9531,      3.9688,      3.9688,      3.9844,      3.9531,      3.9219,      3.9375,      3.9219,      3.9844,      3.9531,      3.9375],
        [    -0.0295,      4.2812,      4.2500,      4.2500,      4.2812,      4.2812,      4.2812,      4.3125,      4.2500,      4.2188,      4.2500,      4.2188,      4.3125,      4.2500,      4.2500],
        [    -0.0292,      4.1250,      4.0938,      4.0938,      4.0938,      4.1250,      4.1250,      4.1562,      4.0938,      4.0625,      4.0938,      4.0625,      4.1250,      4.0938,      4.0938],
        [    -0.0291,      4.0938,      4.0625,      4.0625,      4.0625,      4.0625,      4.0625,      4.0938,      4.0625,      4.0312,      4.0625,      4.0312,      4.0938,      4.0625,      4.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0027],
        [    0.0016],
        [    0.0012],
        [    0.0008],
        [    0.0006],
        [    0.0004],
        [    0.0004],
        [    0.0004],
        [    0.0005],
        [    0.0004],
        [    0.0004],
        [    0.0002],
        [    0.0003],
        [    0.0003]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2520,     0.2490,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.2002,     0.2002,     0.2002,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1680,     0.1670,     0.1670,     0.1670,     0.1650,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1436,     0.1436,     0.1416,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.1250,     0.1260,     0.1250,     0.1240,     0.1245,     0.1250,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1123,     0.1113,     0.1118,     0.1113,     0.1104,     0.1108,     0.1113,     0.1108,     0.1104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1011,     0.1001,     0.1006,     0.1006,     0.0991,     0.1001,     0.1001,     0.0996,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0918,     0.0913,     0.0913,     0.0913,     0.0903,     0.0908,     0.0913,     0.0908,     0.0903,     0.0903,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0840,     0.0835,     0.0840,     0.0840,     0.0830,     0.0835,     0.0835,     0.0830,     0.0830,     0.0830,     0.0825,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0776,     0.0771,     0.0776,     0.0771,     0.0767,     0.0771,     0.0771,     0.0767,     0.0767,     0.0767,     0.0762,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0723,     0.0718,     0.0718,     0.0718,     0.0708,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0708,     0.0713,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796,     -0.0796],
        [    -0.0232,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000,     14.0000],
        [    -0.0232,     14.0000,     14.0000,     14.0000,     14.0000,     13.9375,     14.0000,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     14.0000,     14.0000,     14.0000],
        [    -0.0232,     14.0000,     13.9375,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0231,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     13.9375,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     14.0000,     14.0000,     14.0000,     13.9375,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     14.0000],
        [    -0.0232,     14.0000,     13.9375,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     13.9375,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     13.9375,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375],
        [    -0.0232,     14.0000,     14.0000,     14.0000,     14.0000,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375,     13.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0015],
        [    0.0007],
        [    0.0005],
        [    0.0004],
        [    0.0003],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2490,     0.2500,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.1992,     0.2002,     0.1992,     0.2012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1660,     0.1670,     0.1660,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1436,     0.1426,     0.1436,     0.1436,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1245,     0.1250,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1108,     0.1113,     0.1108,     0.1113,     0.1113,     0.1113,     0.1113,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.0996,     0.1001,     0.0996,     0.1006,     0.1001,     0.1001,     0.1001,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0903,     0.0913,     0.0903,     0.0913,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0913,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0830,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0830,     0.0835,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0767,     0.0767,     0.0771,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0718,     0.0713,     0.0718,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034,      0.0034],
        [     0.0028,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250],
        [     0.0027,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250,     14.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3340,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2490,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.1992,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1660,     0.1670,     0.1670,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1436,     0.1426,     0.1436,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1245,     0.1260,     0.1250,     0.1245,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1113,     0.1108,     0.1113,     0.1113,     0.1108,     0.1108,     0.1108,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.0996,     0.1006,     0.1001,     0.0996,     0.1001,     0.0996,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0913,     0.0903,     0.0913,     0.0908,     0.0903,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0830,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0767,     0.0767,     0.0767,     0.0771,     0.0771,     0.0767,     0.0767,     0.0771,     0.0000],
        [    0.0000,     0.0713,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532,      0.0532],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0057,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0057,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0057,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000],
        [    -0.0058,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000,     15.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2490,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.1992,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1660,     0.1670,     0.1670,     0.1660,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1436,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1245,     0.1245,     0.1250,     0.1250,     0.1250,     0.1260,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1104,     0.1113,     0.1113,     0.1108,     0.1118,     0.1113,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.0996,     0.1001,     0.1001,     0.0996,     0.1006,     0.1001,     0.1001,     0.1006,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0903,     0.0908,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0913,     0.0908,     0.0918,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0830,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0840,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0767,     0.0771,     0.0767,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0767,     0.0776,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0713,     0.0708,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718,     0.0713,     0.0718,     0.0718,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238,     0.0238],
        [    0.0576,    15.6875,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0576,    15.6875,    15.6875,    15.7500,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0576,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0576,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0579,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500],
        [    0.0576,    15.7500,    15.6875,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500,    15.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3320, 0.3359, 0.3320, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2500, 0.2520, 0.2490, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2002, 0.2012, 0.1992, 0.2002, 0.1992, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1660, 0.1680, 0.1660, 0.1660, 0.1660, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1426, 0.1436, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1250, 0.1260, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1108, 0.1118, 0.1108, 0.1108, 0.1108, 0.1108, 0.1108, 0.1108, 0.1108, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1001, 0.1006, 0.0996, 0.1001, 0.1001, 0.0996, 0.0996, 0.0996, 0.0996, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0908, 0.0918, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0918, 0.0908, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0830, 0.0840, 0.0830, 0.0830, 0.0830, 0.0830, 0.0830, 0.0830, 0.0830, 0.0840, 0.0830, 0.0830, 0.0000, 0.0000],
        [0.0000, 0.0767, 0.0776, 0.0767, 0.0767, 0.0767, 0.0767, 0.0767, 0.0767, 0.0767, 0.0776, 0.0767, 0.0767, 0.0767, 0.0000],
        [0.0000, 0.0713, 0.0718, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0718, 0.0713, 0.0713, 0.0713, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454,     0.0454],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2295,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2295,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2295,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2295,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2295,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000],
        [    0.2285,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000,   155.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0037],
        [    0.0018],
        [    0.0012],
        [    0.0009],
        [    0.0007],
        [    0.0006],
        [    0.0005],
        [    0.0005],
        [    0.0004],
        [    0.0004],
        [    0.0003],
        [    0.0003],
        [    0.0003],
        [    0.0003]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338)
,
------
		(,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338,:0.1338)
,,,,,,,,,,,,,,,
@ 550 train 5.4176 , allloss: 5.4176, dt: 1156.11ms, fracRes: 0.0584, norm(attn): 6.4688, norm(output): 0.9688, norm(x): 1.0153, norm(y): 1.0035, norm:0.4343, tok/sec: 113373.38, flops:119.02, batch-reuse:1
@ 551 train 5.5081 , allloss: 5.5081, dt: 718.93ms, fracRes: 0.0583, norm(attn): 6.4688, norm(output): 0.9727, norm(x): 1.0133, norm(y): 1.0035, norm:0.6975, tok/sec: 182315.50, flops:191.40, batch-reuse:1
@ 552 train 5.3494 , allloss: 5.3494, dt: 707.14ms, fracRes: 0.0586, norm(attn): 6.5000, norm(output): 0.9414, norm(x): 0.9973, norm(y): 1.0036, norm:0.6432, tok/sec: 185355.10, flops:194.59, batch-reuse:1
@ 553 train 5.4866 , allloss: 5.4866, dt: 706.97ms, fracRes: 0.0580, norm(attn): 6.4688, norm(output): 0.9375, norm(x): 0.9844, norm(y): 1.0036, norm:0.4451, tok/sec: 185400.73, flops:194.63, batch-reuse:1
@ 554 train 5.3797 , allloss: 5.3797, dt: 705.59ms, fracRes: 0.0584, norm(attn): 6.4688, norm(output): 0.9297, norm(x): 0.9671, norm(y): 1.0036, norm:0.8900, tok/sec: 185762.64, flops:195.01, batch-reuse:1
@ 555 train 5.4232 , allloss: 5.4232, dt: 710.48ms, fracRes: 0.0588, norm(attn): 6.5000, norm(output): 0.9141, norm(x): 0.9590, norm(y): 1.0036, norm:0.7232, tok/sec: 184483.43, flops:193.67, batch-reuse:1
@ 556 train 5.3373 , allloss: 5.3373, dt: 704.50ms, fracRes: 0.0587, norm(attn): 6.5000, norm(output): 0.8945, norm(x): 0.9505, norm(y): 1.0036, norm:0.4816, tok/sec: 186049.75, flops:195.32, batch-reuse:1
@ 557 train 5.4436 , allloss: 5.4436, dt: 705.90ms, fracRes: 0.0584, norm(attn): 6.4688, norm(output): 0.8945, norm(x): 0.9432, norm(y): 1.0036, norm:0.9314, tok/sec: 185681.64, flops:194.93, batch-reuse:1
@ 558 train 5.6044 , allloss: 5.6044, dt: 703.76ms, fracRes: 0.0580, norm(attn): 6.5000, norm(output): 0.8867, norm(x): 0.9331, norm(y): 1.0036, norm:0.7528, tok/sec: 186246.53, flops:195.52, batch-reuse:1
@ 559 train 5.6811 , allloss: 5.6811, dt: 706.25ms, fracRes: 0.0556, norm(attn): 6.4688, norm(output): 0.8984, norm(x): 0.9418, norm(y): 1.0036, norm:0.6284, tok/sec: 185589.00, flops:194.83, batch-reuse:1
@ 560 train 5.6066 , allloss: 5.6066, dt: 706.60ms, fracRes: 0.0563, norm(attn): 6.4688, norm(output): 0.8828, norm(x): 0.9336, norm(y): 1.0036, norm:1.1286, tok/sec: 185495.82, flops:194.73, batch-reuse:1
@ 561 train 5.6888 , allloss: 5.6888, dt: 715.60ms, fracRes: 0.0576, norm(attn): 6.4688, norm(output): 0.8750, norm(x): 0.9176, norm(y): 1.0037, norm:0.7042, tok/sec: 183163.10, flops:192.28, batch-reuse:1
@ 562 train 5.5763 , allloss: 5.5763, dt: 717.22ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.8672, norm(x): 0.9041, norm(y): 1.0037, norm:0.4926, tok/sec: 182749.86, flops:191.85, batch-reuse:1
@ 563 train 5.6615 , allloss: 5.6615, dt: 720.57ms, fracRes: 0.0567, norm(attn): 6.4688, norm(output): 0.8594, norm(x): 0.8968, norm(y): 1.0037, norm:0.6671, tok/sec: 181901.44, flops:190.96, batch-reuse:1
@ 564 train 5.4794 , allloss: 5.4794, dt: 706.15ms, fracRes: 0.0577, norm(attn): 6.4688, norm(output): 0.8633, norm(x): 0.9029, norm(y): 1.0037, norm:0.4107, tok/sec: 185615.00, flops:194.86, batch-reuse:1
@ 565 train 5.4551 , allloss: 5.4551, dt: 711.67ms, fracRes: 0.0581, norm(attn): 6.5000, norm(output): 0.8633, norm(x): 0.9097, norm(y): 1.0037, norm:0.6970, tok/sec: 184175.64, flops:193.35, batch-reuse:1
@ 566 train 5.5772 , allloss: 5.5772, dt: 709.51ms, fracRes: 0.0581, norm(attn): 6.4688, norm(output): 0.8516, norm(x): 0.8907, norm(y): 1.0037, norm:0.6310, tok/sec: 184736.60, flops:193.94, batch-reuse:1
@ 567 train 5.5957 , allloss: 5.5957, dt: 707.79ms, fracRes: 0.0581, norm(attn): 6.4688, norm(output): 0.8320, norm(x): 0.8802, norm(y): 1.0037, norm:0.5023, tok/sec: 185184.96, flops:194.41, batch-reuse:1
@ 568 train 5.6349 , allloss: 5.6349, dt: 696.94ms, fracRes: 0.0578, norm(attn): 6.4688, norm(output): 0.8281, norm(x): 0.8740, norm(y): 1.0037, norm:0.7000, tok/sec: 188067.85, flops:197.43, batch-reuse:1
@ 569 train 5.5703 , allloss: 5.5703, dt: 713.26ms, fracRes: 0.0581, norm(attn): 6.4688, norm(output): 0.8125, norm(x): 0.8592, norm(y): 1.0037, norm:0.4957, tok/sec: 183764.76, flops:192.92, batch-reuse:1
@ 570 train 5.5117 , allloss: 5.5117, dt: 710.00ms, fracRes: 0.0580, norm(attn): 6.4688, norm(output): 0.8086, norm(x): 0.8553, norm(y): 1.0038, norm:0.4795, tok/sec: 184608.01, flops:193.80, batch-reuse:1
@ 571 train 5.4728 , allloss: 5.4728, dt: 704.68ms, fracRes: 0.0584, norm(attn): 6.4688, norm(output): 0.8086, norm(x): 0.8505, norm(y): 1.0038, norm:0.6623, tok/sec: 186002.42, flops:195.27, batch-reuse:1
@ 572 train 5.4463 , allloss: 5.4463, dt: 707.05ms, fracRes: 0.0578, norm(attn): 6.4688, norm(output): 0.8125, norm(x): 0.8504, norm(y): 1.0038, norm:0.4875, tok/sec: 185378.54, flops:194.61, batch-reuse:1
@ 573 train 5.5177 , allloss: 5.5177, dt: 709.61ms, fracRes: 0.0571, norm(attn): 6.4688, norm(output): 0.8086, norm(x): 0.8413, norm(y): 1.0038, norm:0.5910, tok/sec: 184708.92, flops:193.91, batch-reuse:1
@ 574 train 5.5167 , allloss: 5.5167, dt: 714.60ms, fracRes: 0.0575, norm(attn): 6.4688, norm(output): 0.7930, norm(x): 0.8325, norm(y): 1.0038, norm:0.4804, tok/sec: 183419.95, flops:192.55, batch-reuse:1
@ 575 train 5.4604 , allloss: 5.4604, dt: 709.52ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.7969, norm(x): 0.8354, norm(y): 1.0038, norm:0.4985, tok/sec: 184734.37, flops:193.93, batch-reuse:1
@ 576 train 5.4688 , allloss: 5.4688, dt: 713.09ms, fracRes: 0.0582, norm(attn): 6.4688, norm(output): 0.7734, norm(x): 0.8196, norm(y): 1.0038, norm:0.4167, tok/sec: 183807.96, flops:192.96, batch-reuse:1
@ 577 train 5.5099 , allloss: 5.5099, dt: 719.85ms, fracRes: 0.0584, norm(attn): 6.4062, norm(output): 0.7617, norm(x): 0.8100, norm(y): 1.0038, norm:0.6537, tok/sec: 182082.72, flops:191.15, batch-reuse:1
@ 578 train 5.4838 , allloss: 5.4838, dt: 694.69ms, fracRes: 0.0585, norm(attn): 6.4062, norm(output): 0.7539, norm(x): 0.8034, norm(y): 1.0038, norm:0.8580, tok/sec: 188675.74, flops:198.07, batch-reuse:1
@ 579 train 5.4814 , allloss: 5.4814, dt: 711.44ms, fracRes: 0.0590, norm(attn): 6.4375, norm(output): 0.7617, norm(x): 0.8064, norm(y): 1.0039, norm:0.8704, tok/sec: 184234.03, flops:193.41, batch-reuse:1
@ 580 train 5.4855 , allloss: 5.4855, dt: 699.52ms, fracRes: 0.0583, norm(attn): 6.4688, norm(output): 0.7539, norm(x): 0.7986, norm(y): 1.0039, norm:0.4410, tok/sec: 187375.45, flops:196.71, batch-reuse:1
@ 581 train 5.4662 , allloss: 5.4662, dt: 696.78ms, fracRes: 0.0581, norm(attn): 6.4688, norm(output): 0.7500, norm(x): 0.7956, norm(y): 1.0038, norm:0.7026, tok/sec: 188111.94, flops:197.48, batch-reuse:1
@ 582 train 5.4353 , allloss: 5.4353, dt: 710.51ms, fracRes: 0.0580, norm(attn): 6.4688, norm(output): 0.7461, norm(x): 0.7890, norm(y): 1.0039, norm:0.6939, tok/sec: 184477.24, flops:193.66, batch-reuse:1
@ 583 train 5.3869 , allloss: 5.3869, dt: 710.51ms, fracRes: 0.0580, norm(attn): 6.4688, norm(output): 0.7461, norm(x): 0.7859, norm(y): 1.0039, norm:0.4645, tok/sec: 184476.68, flops:193.66, batch-reuse:1
@ 584 train 5.5022 , allloss: 5.5022, dt: 708.39ms, fracRes: 0.0581, norm(attn): 6.4062, norm(output): 0.7422, norm(x): 0.7795, norm(y): 1.0039, norm:0.5805, tok/sec: 185026.78, flops:194.24, batch-reuse:1
@ 585 train 5.4364 , allloss: 5.4364, dt: 706.11ms, fracRes: 0.0581, norm(attn): 6.4375, norm(output): 0.7422, norm(x): 0.7777, norm(y): 1.0040, norm:0.7645, tok/sec: 185625.85, flops:194.87, batch-reuse:1
@ 586 train 5.4588 , allloss: 5.4588, dt: 705.17ms, fracRes: 0.0577, norm(attn): 6.4688, norm(output): 0.7305, norm(x): 0.7664, norm(y): 1.0040, norm:0.5790, tok/sec: 185873.12, flops:195.13, batch-reuse:1
@ 587 train 5.4871 , allloss: 5.4871, dt: 710.26ms, fracRes: 0.0570, norm(attn): 6.4062, norm(output): 0.7266, norm(x): 0.7644, norm(y): 1.0039, norm:0.4474, tok/sec: 184541.27, flops:193.73, batch-reuse:1
@ 588 train 5.5188 , allloss: 5.5188, dt: 700.99ms, fracRes: 0.0560, norm(attn): 6.4062, norm(output): 0.7344, norm(x): 0.7716, norm(y): 1.0039, norm:0.5720, tok/sec: 186981.92, flops:196.29, batch-reuse:1
@ 589 train 5.4739 , allloss: 5.4739, dt: 689.92ms, fracRes: 0.0565, norm(attn): 6.4062, norm(output): 0.7188, norm(x): 0.7555, norm(y): 1.0039, norm:0.4949, tok/sec: 189980.08, flops:199.44, batch-reuse:1
@ 590 train 5.4917 , allloss: 5.4917, dt: 710.45ms, fracRes: 0.0568, norm(attn): 6.4062, norm(output): 0.7109, norm(x): 0.7479, norm(y): 1.0040, norm:0.4513, tok/sec: 184492.34, flops:193.68, batch-reuse:1
@ 591 train 5.4017 , allloss: 5.4017, dt: 704.00ms, fracRes: 0.0564, norm(attn): 6.4062, norm(output): 0.7031, norm(x): 0.7478, norm(y): 1.0039, norm:0.4130, tok/sec: 186182.89, flops:195.46, batch-reuse:1
@ 592 train 5.4565 , allloss: 5.4565, dt: 712.10ms, fracRes: 0.0569, norm(attn): 6.3750, norm(output): 0.6992, norm(x): 0.7490, norm(y): 1.0039, norm:0.4116, tok/sec: 184064.09, flops:193.23, batch-reuse:1
@ 593 train 5.4423 , allloss: 5.4423, dt: 709.42ms, fracRes: 0.0571, norm(attn): 6.3750, norm(output): 0.6953, norm(x): 0.7449, norm(y): 1.0040, norm:0.3919, tok/sec: 184760.63, flops:193.96, batch-reuse:1
@ 594 train 5.6877 , allloss: 5.6877, dt: 715.63ms, fracRes: 0.0570, norm(attn): 6.4062, norm(output): 0.6914, norm(x): 0.7375, norm(y): 1.0039, norm:0.4893, tok/sec: 183156.76, flops:192.28, batch-reuse:1
@ 595 train 5.3703 , allloss: 5.3703, dt: 716.61ms, fracRes: 0.0566, norm(attn): 6.3750, norm(output): 0.6875, norm(x): 0.7322, norm(y): 1.0039, norm:0.4507, tok/sec: 182905.70, flops:192.01, batch-reuse:1
@ 596 train 5.4222 , allloss: 5.4222, dt: 719.55ms, fracRes: 0.0563, norm(attn): 6.3750, norm(output): 0.6875, norm(x): 0.7283, norm(y): 1.0039, norm:0.5437, tok/sec: 182159.47, flops:191.23, batch-reuse:1
@ 597 train 5.4344 , allloss: 5.4344, dt: 711.96ms, fracRes: 0.0567, norm(attn): 6.3750, norm(output): 0.6680, norm(x): 0.7131, norm(y): 1.0039, norm:0.4856, tok/sec: 184100.09, flops:193.27, batch-reuse:1
@ 598 train 5.4707 , allloss: 5.4707, dt: 708.30ms, fracRes: 0.0569, norm(attn): 6.3438, norm(output): 0.6641, norm(x): 0.7077, norm(y): 1.0040, norm:0.6337, tok/sec: 185052.44, flops:194.27, batch-reuse:1
@ 599 train 5.4193 , allloss: 5.4193, dt: 707.34ms, fracRes: 0.0568, norm(attn): 6.3438, norm(output): 0.6680, norm(x): 0.7101, norm(y): 1.0040, norm:0.5385, tok/sec: 185303.18, flops:194.53, batch-reuse:1
@ 600 train 5.4009 , allloss: 5.4009, dt: 705.35ms, fracRes: 0.0571, norm(attn): 6.3750, norm(output): 0.6641, norm(x): 0.7121, norm(y): 1.0040, norm:0.5662, tok/sec: 185825.87, flops:195.08, batch-reuse:1
@ 601 train 5.4781 , allloss: 5.4781, dt: 704.64ms, fracRes: 0.0575, norm(attn): 6.3750, norm(output): 0.6641, norm(x): 0.7107, norm(y): 1.0040, norm:0.7667, tok/sec: 186012.42, flops:195.28, batch-reuse:1
@ 602 train 5.4671 , allloss: 5.4671, dt: 707.21ms, fracRes: 0.0569, norm(attn): 6.3438, norm(output): 0.6523, norm(x): 0.7007, norm(y): 1.0040, norm:0.5401, tok/sec: 185337.04, flops:194.57, batch-reuse:1
@ 603 train 5.4017 , allloss: 5.4017, dt: 703.63ms, fracRes: 0.0567, norm(attn): 6.3750, norm(output): 0.6523, norm(x): 0.6963, norm(y): 1.0040, norm:0.4678, tok/sec: 186280.17, flops:195.56, batch-reuse:1
@ 604 train 5.3191 , allloss: 5.3191, dt: 711.23ms, fracRes: 0.0559, norm(attn): 6.3750, norm(output): 0.6328, norm(x): 0.6842, norm(y): 1.0041, norm:0.4679, tok/sec: 184287.94, flops:193.47, batch-reuse:1
@ 605 train 5.3184 , allloss: 5.3184, dt: 705.80ms, fracRes: 0.0555, norm(attn): 6.3750, norm(output): 0.6289, norm(x): 0.6784, norm(y): 1.0040, norm:0.5026, tok/sec: 185706.23, flops:194.95, batch-reuse:1
@ 606 train 5.3764 , allloss: 5.3764, dt: 720.13ms, fracRes: 0.0560, norm(attn): 6.3750, norm(output): 0.6328, norm(x): 0.6816, norm(y): 1.0040, norm:0.5093, tok/sec: 182012.01, flops:191.08, batch-reuse:1
@ 607 train 5.3608 , allloss: 5.3608, dt: 721.69ms, fracRes: 0.0564, norm(attn): 6.3438, norm(output): 0.6289, norm(x): 0.6783, norm(y): 1.0041, norm:0.3952, tok/sec: 181617.68, flops:190.66, batch-reuse:1
@ 608 train 5.3019 , allloss: 5.3019, dt: 721.52ms, fracRes: 0.0562, norm(attn): 6.3750, norm(output): 0.6250, norm(x): 0.6730, norm(y): 1.0041, norm:0.5360, tok/sec: 181660.47, flops:190.71, batch-reuse:1
@ 609 train 5.3413 , allloss: 5.3413, dt: 719.44ms, fracRes: 0.0558, norm(attn): 6.3750, norm(output): 0.6250, norm(x): 0.6705, norm(y): 1.0041, norm:0.4670, tok/sec: 182185.79, flops:191.26, batch-reuse:1
@ 610 train 5.5112 , allloss: 5.5112, dt: 709.80ms, fracRes: 0.0558, norm(attn): 6.3125, norm(output): 0.6211, norm(x): 0.6627, norm(y): 1.0041, norm:0.4326, tok/sec: 184661.58, flops:193.86, batch-reuse:1
@ 611 train 5.3747 , allloss: 5.3747, dt: 702.81ms, fracRes: 0.0556, norm(attn): 6.3750, norm(output): 0.6250, norm(x): 0.6686, norm(y): 1.0041, norm:0.5002, tok/sec: 186497.37, flops:195.79, batch-reuse:1
@ 612 train 5.3784 , allloss: 5.3784, dt: 718.52ms, fracRes: 0.0557, norm(attn): 6.2188, norm(output): 0.6211, norm(x): 0.6631, norm(y): 1.0041, norm:0.4156, tok/sec: 182419.50, flops:191.50, batch-reuse:1
@ 613 train 5.4486 , allloss: 5.4486, dt: 708.73ms, fracRes: 0.0558, norm(attn): 6.3125, norm(output): 0.6094, norm(x): 0.6519, norm(y): 1.0041, norm:0.5935, tok/sec: 184938.70, flops:194.15, batch-reuse:1
@ 614 train 5.3982 , allloss: 5.3982, dt: 720.64ms, fracRes: 0.0560, norm(attn): 6.3750, norm(output): 0.6094, norm(x): 0.6513, norm(y): 1.0041, norm:0.4411, tok/sec: 181881.88, flops:190.94, batch-reuse:1
@ 615 train 5.4216 , allloss: 5.4216, dt: 724.92ms, fracRes: 0.0560, norm(attn): 6.3125, norm(output): 0.6016, norm(x): 0.6467, norm(y): 1.0041, norm:0.5667, tok/sec: 180807.78, flops:189.81, batch-reuse:1
@ 616 train 5.3879 , allloss: 5.3879, dt: 722.52ms, fracRes: 0.0558, norm(attn): 6.4375, norm(output): 0.6055, norm(x): 0.6480, norm(y): 1.0041, norm:0.7796, tok/sec: 181408.47, flops:190.44, batch-reuse:1
@ 617 train 5.2676 , allloss: 5.2676, dt: 705.67ms, fracRes: 0.0552, norm(attn): 6.3438, norm(output): 0.5977, norm(x): 0.6409, norm(y): 1.0041, norm:0.9715, tok/sec: 185740.80, flops:194.99, batch-reuse:1
@ 618 train 5.3260 , allloss: 5.3260, dt: 700.49ms, fracRes: 0.0543, norm(attn): 6.3750, norm(output): 0.6016, norm(x): 0.6440, norm(y): 1.0041, norm:0.6323, tok/sec: 187114.61, flops:196.43, batch-reuse:1
@ 619 train 5.3326 , allloss: 5.3326, dt: 703.91ms, fracRes: 0.0548, norm(attn): 6.3438, norm(output): 0.6016, norm(x): 0.6457, norm(y): 1.0041, norm:0.5338, tok/sec: 186204.90, flops:195.48, batch-reuse:1
@ 620 train 5.3547 , allloss: 5.3547, dt: 701.25ms, fracRes: 0.0552, norm(attn): 6.3438, norm(output): 0.6016, norm(x): 0.6383, norm(y): 1.0041, norm:0.8392, tok/sec: 186911.03, flops:196.22, batch-reuse:1
@ 621 train 5.3908 , allloss: 5.3908, dt: 714.41ms, fracRes: 0.0563, norm(attn): 6.4375, norm(output): 0.5938, norm(x): 0.6425, norm(y): 1.0041, norm:0.6487, tok/sec: 183469.96, flops:192.61, batch-reuse:1
@ 622 train 5.3214 , allloss: 5.3214, dt: 691.06ms, fracRes: 0.0563, norm(attn): 6.4688, norm(output): 0.5938, norm(x): 0.6353, norm(y): 1.0041, norm:0.4372, tok/sec: 189667.83, flops:199.11, batch-reuse:1
@ 623 train 5.2733 , allloss: 5.2733, dt: 710.67ms, fracRes: 0.0563, norm(attn): 6.3750, norm(output): 0.5781, norm(x): 0.6266, norm(y): 1.0042, norm:0.5386, tok/sec: 184433.17, flops:193.62, batch-reuse:1
@ 624 train 5.3230 , allloss: 5.3230, dt: 708.81ms, fracRes: 0.0565, norm(attn): 6.4375, norm(output): 0.5859, norm(x): 0.6214, norm(y): 1.0042, norm:0.4488, tok/sec: 184919.17, flops:194.13, batch-reuse:1
@ 625 train 5.3871 , allloss: 5.3871, dt: 710.44ms, fracRes: 0.0565, norm(attn): 6.4375, norm(output): 0.5703, norm(x): 0.6169, norm(y): 1.0039, norm:0.4822, tok/sec: 184494.20, flops:193.68, batch-reuse:1
@ 626 train 8.1968 , allloss: 8.1968, dt: 711.23ms, fracRes: 0.0568, norm(attn): 5.9375, norm(output): 1.6953, norm(x): 1.7349, norm(y): 1.0034, norm:22.3608, tok/sec: 184289.30, flops:193.47, batch-reuse:1
@ 627 train 5.2773 , allloss: 5.2773, dt: 712.86ms, fracRes: 0.0571, norm(attn): 6.4375, norm(output): 0.5977, norm(x): 0.6359, norm(y): 1.0042, norm:0.8320, tok/sec: 183868.63, flops:193.03, batch-reuse:1
@ 628 train 5.4176 , allloss: 5.4176, dt: 711.51ms, fracRes: 0.0572, norm(attn): 6.4062, norm(output): 0.6133, norm(x): 0.6540, norm(y): 1.0042, norm:0.4688, tok/sec: 184217.54, flops:193.39, batch-reuse:1
@ 629 train 5.4862 , allloss: 5.4862, dt: 701.55ms, fracRes: 0.0573, norm(attn): 6.4688, norm(output): 0.6289, norm(x): 0.6728, norm(y): 1.0042, norm:0.5383, tok/sec: 186832.97, flops:196.14, batch-reuse:1
@ 630 train 5.4048 , allloss: 5.4048, dt: 699.18ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.6367, norm(x): 0.6878, norm(y): 1.0042, norm:0.5579, tok/sec: 187465.73, flops:196.80, batch-reuse:1
@ 631 train 5.3783 , allloss: 5.3783, dt: 697.67ms, fracRes: 0.0568, norm(attn): 6.5000, norm(output): 0.6406, norm(x): 0.6878, norm(y): 1.0043, norm:0.4585, tok/sec: 187871.90, flops:197.23, batch-reuse:1
@ 632 train 5.6589 , allloss: 5.6589, dt: 693.05ms, fracRes: 0.0568, norm(attn): 6.5000, norm(output): 0.6445, norm(x): 0.6932, norm(y): 1.0042, norm:0.6225, tok/sec: 189123.07, flops:198.54, batch-reuse:1
@ 633 train 5.3898 , allloss: 5.3898, dt: 708.12ms, fracRes: 0.0568, norm(attn): 6.5000, norm(output): 0.6562, norm(x): 0.6975, norm(y): 1.0042, norm:0.5608, tok/sec: 185099.42, flops:194.32, batch-reuse:1
@ 634 train 5.3774 , allloss: 5.3774, dt: 698.58ms, fracRes: 0.0565, norm(attn): 6.5312, norm(output): 0.6523, norm(x): 0.7029, norm(y): 1.0041, norm:0.6232, tok/sec: 187625.10, flops:196.97, batch-reuse:1
@ 635 train 5.3463 , allloss: 5.3463, dt: 705.13ms, fracRes: 0.0571, norm(attn): 6.4688, norm(output): 0.6367, norm(x): 0.6865, norm(y): 1.0043, norm:0.8716, tok/sec: 185883.55, flops:195.14, batch-reuse:1
@ 636 train 5.4412 , allloss: 5.4412, dt: 699.49ms, fracRes: 0.0563, norm(attn): 6.3438, norm(output): 0.6406, norm(x): 0.6903, norm(y): 1.0042, norm:1.0202, tok/sec: 187381.45, flops:196.71, batch-reuse:1
@ 637 train 5.3033 , allloss: 5.3033, dt: 699.83ms, fracRes: 0.0568, norm(attn): 6.4688, norm(output): 0.6406, norm(x): 0.6924, norm(y): 1.0043, norm:0.5129, tok/sec: 187292.01, flops:196.62, batch-reuse:1
@ 638 train 5.2957 , allloss: 5.2957, dt: 707.26ms, fracRes: 0.0571, norm(attn): 6.5000, norm(output): 0.6367, norm(x): 0.6874, norm(y): 1.0044, norm:0.6880, tok/sec: 185323.86, flops:194.55, batch-reuse:1
@ 639 train 5.3643 , allloss: 5.3643, dt: 703.03ms, fracRes: 0.0572, norm(attn): 6.4375, norm(output): 0.6289, norm(x): 0.6773, norm(y): 1.0044, norm:0.7659, tok/sec: 186439.24, flops:195.72, batch-reuse:1
@ 640 train 5.2769 , allloss: 5.2769, dt: 710.99ms, fracRes: 0.0574, norm(attn): 6.4688, norm(output): 0.6211, norm(x): 0.6649, norm(y): 1.0045, norm:0.4922, tok/sec: 184350.98, flops:193.53, batch-reuse:1
@ 641 train 5.2499 , allloss: 5.2499, dt: 711.94ms, fracRes: 0.0576, norm(attn): 6.3750, norm(output): 0.6133, norm(x): 0.6580, norm(y): 1.0045, norm:0.7266, tok/sec: 184105.94, flops:193.27, batch-reuse:1
@ 642 train 5.2312 , allloss: 5.2312, dt: 700.95ms, fracRes: 0.0563, norm(attn): 6.4375, norm(output): 0.6094, norm(x): 0.6513, norm(y): 1.0045, norm:0.5804, tok/sec: 186992.98, flops:196.31, batch-reuse:1
@ 643 train 5.3341 , allloss: 5.3341, dt: 699.76ms, fracRes: 0.0560, norm(attn): 6.4688, norm(output): 0.6094, norm(x): 0.6511, norm(y): 1.0045, norm:0.5007, tok/sec: 187309.24, flops:196.64, batch-reuse:1
@ 644 train 5.4310 , allloss: 5.4310, dt: 706.10ms, fracRes: 0.0564, norm(attn): 6.5000, norm(output): 0.6094, norm(x): 0.6523, norm(y): 1.0046, norm:0.7377, tok/sec: 185627.41, flops:194.87, batch-reuse:1
@ 645 train 5.3488 , allloss: 5.3488, dt: 701.45ms, fracRes: 0.0568, norm(attn): 6.5000, norm(output): 0.6133, norm(x): 0.6507, norm(y): 1.0046, norm:0.4561, tok/sec: 186857.41, flops:196.16, batch-reuse:1
@ 646 train 5.3040 , allloss: 5.3040, dt: 699.48ms, fracRes: 0.0570, norm(attn): 6.5000, norm(output): 0.5977, norm(x): 0.6469, norm(y): 1.0046, norm:0.5287, tok/sec: 187384.39, flops:196.72, batch-reuse:1
@ 647 train 5.3645 , allloss: 5.3645, dt: 703.03ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.5977, norm(x): 0.6394, norm(y): 1.0047, norm:0.5569, tok/sec: 186438.99, flops:195.72, batch-reuse:1
@ 648 train 5.2855 , allloss: 5.2855, dt: 710.82ms, fracRes: 0.0570, norm(attn): 6.5000, norm(output): 0.5977, norm(x): 0.6386, norm(y): 1.0046, norm:0.4142, tok/sec: 184395.68, flops:193.58, batch-reuse:1
@ 649 train 5.3223 , allloss: 5.3223, dt: 706.76ms, fracRes: 0.0574, norm(attn): 6.4688, norm(output): 0.5898, norm(x): 0.6316, norm(y): 1.0046, norm:0.4796, tok/sec: 185454.27, flops:194.69, batch-reuse:1
@ 650 train 5.2250 , allloss: 5.2250, dt: 709.38ms, fracRes: 0.0578, norm(attn): 6.5000, norm(output): 0.5859, norm(x): 0.6303, norm(y): 1.0047, norm:0.4632, tok/sec: 184770.01, flops:193.97, batch-reuse:1
@ 651 train 5.2610 , allloss: 5.2610, dt: 702.97ms, fracRes: 0.0575, norm(attn): 6.5000, norm(output): 0.5859, norm(x): 0.6300, norm(y): 1.0047, norm:0.4185, tok/sec: 186453.47, flops:195.74, batch-reuse:1
@ 652 train 5.2343 , allloss: 5.2343, dt: 713.32ms, fracRes: 0.0574, norm(attn): 6.5000, norm(output): 0.5781, norm(x): 0.6273, norm(y): 1.0047, norm:0.4955, tok/sec: 183750.21, flops:192.90, batch-reuse:1
@ 653 train 5.2184 , allloss: 5.2184, dt: 710.41ms, fracRes: 0.0577, norm(attn): 6.5312, norm(output): 0.5703, norm(x): 0.6241, norm(y): 1.0047, norm:0.4853, tok/sec: 184500.89, flops:193.69, batch-reuse:1
@ 654 train 5.2402 , allloss: 5.2402, dt: 710.31ms, fracRes: 0.0573, norm(attn): 6.5000, norm(output): 0.5703, norm(x): 0.6182, norm(y): 1.0047, norm:0.3961, tok/sec: 184528.20, flops:193.72, batch-reuse:1
@ 655 train 5.2726 , allloss: 5.2726, dt: 700.19ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.5703, norm(x): 0.6120, norm(y): 1.0047, norm:0.4385, tok/sec: 187195.78, flops:196.52, batch-reuse:1
@ 656 train 5.0916 , allloss: 5.0916, dt: 703.43ms, fracRes: 0.0575, norm(attn): 6.4688, norm(output): 0.5625, norm(x): 0.6027, norm(y): 1.0047, norm:0.3957, tok/sec: 186332.26, flops:195.61, batch-reuse:1
@ 657 train 5.1954 , allloss: 5.1954, dt: 705.41ms, fracRes: 0.0574, norm(attn): 6.5000, norm(output): 0.5586, norm(x): 0.6016, norm(y): 1.0048, norm:0.5667, tok/sec: 185810.74, flops:195.06, batch-reuse:1
@ 658 train 5.2783 , allloss: 5.2783, dt: 698.23ms, fracRes: 0.0572, norm(attn): 6.4688, norm(output): 0.5508, norm(x): 0.5987, norm(y): 1.0047, norm:0.4079, tok/sec: 187721.40, flops:197.07, batch-reuse:1
@ 659 train 5.2696 , allloss: 5.2696, dt: 700.11ms, fracRes: 0.0563, norm(attn): 6.4688, norm(output): 0.5547, norm(x): 0.5939, norm(y): 1.0047, norm:0.4283, tok/sec: 187216.05, flops:196.54, batch-reuse:1
@ 660 train 5.2722 , allloss: 5.2722, dt: 709.36ms, fracRes: 0.0561, norm(attn): 6.5000, norm(output): 0.5469, norm(x): 0.5914, norm(y): 1.0047, norm:0.4660, tok/sec: 184774.42, flops:193.98, batch-reuse:1
@ 661 train 5.1934 , allloss: 5.1934, dt: 709.52ms, fracRes: 0.0554, norm(attn): 6.5000, norm(output): 0.5430, norm(x): 0.5902, norm(y): 1.0047, norm:0.4537, tok/sec: 184734.18, flops:193.93, batch-reuse:1
@ 662 train 5.3136 , allloss: 5.3136, dt: 700.91ms, fracRes: 0.0553, norm(attn): 6.5000, norm(output): 0.5391, norm(x): 0.5873, norm(y): 1.0047, norm:0.3955, tok/sec: 187002.71, flops:196.32, batch-reuse:1
@ 663 train 5.2472 , allloss: 5.2472, dt: 708.06ms, fracRes: 0.0560, norm(attn): 6.4688, norm(output): 0.5391, norm(x): 0.5837, norm(y): 1.0047, norm:0.4541, tok/sec: 185113.31, flops:194.33, batch-reuse:1
@ 664 train 5.1896 , allloss: 5.1896, dt: 705.17ms, fracRes: 0.0561, norm(attn): 6.4688, norm(output): 0.5273, norm(x): 0.5707, norm(y): 1.0048, norm:0.4010, tok/sec: 185872.93, flops:195.13, batch-reuse:1
@ 665 train 5.2124 , allloss: 5.2124, dt: 708.19ms, fracRes: 0.0559, norm(attn): 6.4688, norm(output): 0.5234, norm(x): 0.5690, norm(y): 1.0047, norm:0.4153, tok/sec: 185081.03, flops:194.30, batch-reuse:1
@ 666 train 5.1224 , allloss: 5.1224, dt: 709.26ms, fracRes: 0.0550, norm(attn): 6.5000, norm(output): 0.5312, norm(x): 0.5763, norm(y): 1.0047, norm:0.6527, tok/sec: 184801.31, flops:194.00, batch-reuse:1
@ 667 train 5.0928 , allloss: 5.0928, dt: 713.87ms, fracRes: 0.0551, norm(attn): 6.4688, norm(output): 0.5391, norm(x): 0.5795, norm(y): 1.0047, norm:1.0846, tok/sec: 183607.46, flops:192.75, batch-reuse:1
@ 668 train 5.2689 , allloss: 5.2689, dt: 701.13ms, fracRes: 0.0553, norm(attn): 6.5000, norm(output): 0.5234, norm(x): 0.5680, norm(y): 1.0048, norm:0.6164, tok/sec: 186943.58, flops:196.25, batch-reuse:1
@ 669 train 5.1794 , allloss: 5.1794, dt: 702.98ms, fracRes: 0.0565, norm(attn): 6.5312, norm(output): 0.5312, norm(x): 0.5739, norm(y): 1.0048, norm:0.5585, tok/sec: 186452.90, flops:195.74, batch-reuse:1
@ 670 train 5.3086 , allloss: 5.3086, dt: 696.47ms, fracRes: 0.0565, norm(attn): 6.5000, norm(output): 0.5234, norm(x): 0.5687, norm(y): 1.0047, norm:0.4781, tok/sec: 188193.65, flops:197.57, batch-reuse:1
@ 671 train 5.1875 , allloss: 5.1875, dt: 704.24ms, fracRes: 0.0562, norm(attn): 6.5000, norm(output): 0.5234, norm(x): 0.5638, norm(y): 1.0047, norm:0.4504, tok/sec: 186119.67, flops:195.39, batch-reuse:1
@ 672 train 5.2585 , allloss: 5.2585, dt: 693.78ms, fracRes: 0.0561, norm(attn): 6.5000, norm(output): 0.5273, norm(x): 0.5728, norm(y): 1.0046, norm:0.5324, tok/sec: 188924.59, flops:198.33, batch-reuse:1
@ 673 train 5.2771 , allloss: 5.2771, dt: 697.90ms, fracRes: 0.0555, norm(attn): 6.5000, norm(output): 0.5273, norm(x): 0.5717, norm(y): 1.0046, norm:0.4122, tok/sec: 187807.91, flops:197.16, batch-reuse:1
@ 674 train 5.2435 , allloss: 5.2435, dt: 706.64ms, fracRes: 0.0557, norm(attn): 6.5312, norm(output): 0.5273, norm(x): 0.5693, norm(y): 1.0046, norm:0.4613, tok/sec: 185486.81, flops:194.72, batch-reuse:1
@ 675 train 5.1514 , allloss: 5.1514, dt: 695.96ms, fracRes: 0.0557, norm(attn): 6.5312, norm(output): 0.5156, norm(x): 0.5633, norm(y): 1.0047, norm:0.5086, tok/sec: 188333.36, flops:197.71, batch-reuse:1
@ 676 train 5.1427 , allloss: 5.1427, dt: 706.55ms, fracRes: 0.0557, norm(attn): 6.5000, norm(output): 0.5156, norm(x): 0.5598, norm(y): 1.0047, norm:0.4118, tok/sec: 185509.90, flops:194.75, batch-reuse:1
@ 677 train 5.3100 , allloss: 5.3100, dt: 705.73ms, fracRes: 0.0556, norm(attn): 6.5000, norm(output): 0.5195, norm(x): 0.5609, norm(y): 1.0047, norm:0.5480, tok/sec: 185724.24, flops:194.97, batch-reuse:1
@ 678 train 5.1412 , allloss: 5.1412, dt: 699.20ms, fracRes: 0.0551, norm(attn): 6.5312, norm(output): 0.5156, norm(x): 0.5564, norm(y): 1.0048, norm:0.4843, tok/sec: 187460.62, flops:196.80, batch-reuse:1
@ 679 train 5.1610 , allloss: 5.1610, dt: 711.61ms, fracRes: 0.0552, norm(attn): 6.5312, norm(output): 0.5078, norm(x): 0.5523, norm(y): 1.0047, norm:0.4520, tok/sec: 184191.87, flops:193.36, batch-reuse:1
@ 680 train 5.1593 , allloss: 5.1593, dt: 711.89ms, fracRes: 0.0549, norm(attn): 6.5000, norm(output): 0.5156, norm(x): 0.5562, norm(y): 1.0047, norm:0.4627, tok/sec: 184117.91, flops:193.29, batch-reuse:1
@ 681 train 5.1876 , allloss: 5.1876, dt: 718.72ms, fracRes: 0.0548, norm(attn): 6.6250, norm(output): 0.5117, norm(x): 0.5549, norm(y): 1.0047, norm:0.5018, tok/sec: 182368.42, flops:191.45, batch-reuse:1
@ 682 train 5.1975 , allloss: 5.1975, dt: 707.13ms, fracRes: 0.0548, norm(attn): 6.5312, norm(output): 0.5039, norm(x): 0.5484, norm(y): 1.0047, norm:0.4364, tok/sec: 185357.66, flops:194.59, batch-reuse:1
@ 683 train 5.1400 , allloss: 5.1400, dt: 700.70ms, fracRes: 0.0555, norm(attn): 6.5312, norm(output): 0.5000, norm(x): 0.5434, norm(y): 1.0047, norm:0.3915, tok/sec: 187058.39, flops:196.37, batch-reuse:1
@ 684 train 5.1137 , allloss: 5.1137, dt: 706.67ms, fracRes: 0.0557, norm(attn): 6.5312, norm(output): 0.4980, norm(x): 0.5404, norm(y): 1.0047, norm:0.3887, tok/sec: 185478.80, flops:194.72, batch-reuse:1
@ 685 train 5.1914 , allloss: 5.1914, dt: 699.29ms, fracRes: 0.0558, norm(attn): 6.5000, norm(output): 0.4980, norm(x): 0.5387, norm(y): 1.0046, norm:0.3887, tok/sec: 187435.75, flops:196.77, batch-reuse:1
@ 686 train 5.2333 , allloss: 5.2333, dt: 710.54ms, fracRes: 0.0552, norm(attn): 6.5312, norm(output): 0.4961, norm(x): 0.5370, norm(y): 1.0046, norm:0.3368, tok/sec: 184467.39, flops:193.65, batch-reuse:1
@ 687 train 5.2155 , allloss: 5.2155, dt: 704.70ms, fracRes: 0.0553, norm(attn): 6.5000, norm(output): 0.4941, norm(x): 0.5347, norm(y): 1.0046, norm:0.3474, tok/sec: 185996.00, flops:195.26, batch-reuse:1
@ 688 train 5.1201 , allloss: 5.1201, dt: 697.98ms, fracRes: 0.0558, norm(attn): 6.5000, norm(output): 0.4863, norm(x): 0.5300, norm(y): 1.0046, norm:0.3798, tok/sec: 187787.96, flops:197.14, batch-reuse:1
@ 689 train 5.1419 , allloss: 5.1419, dt: 695.57ms, fracRes: 0.0556, norm(attn): 6.4688, norm(output): 0.4727, norm(x): 0.5217, norm(y): 1.0046, norm:0.4015, tok/sec: 188437.10, flops:197.82, batch-reuse:1
@ 690 train 5.1040 , allloss: 5.1040, dt: 693.28ms, fracRes: 0.0557, norm(attn): 6.5000, norm(output): 0.4727, norm(x): 0.5217, norm(y): 1.0046, norm:0.4875, tok/sec: 189061.94, flops:198.48, batch-reuse:1
@ 691 train 5.1980 , allloss: 5.1980, dt: 709.33ms, fracRes: 0.0553, norm(attn): 6.4375, norm(output): 0.4727, norm(x): 0.5203, norm(y): 1.0046, norm:0.7060, tok/sec: 184783.30, flops:193.99, batch-reuse:1
@ 692 train 5.1586 , allloss: 5.1586, dt: 706.99ms, fracRes: 0.0553, norm(attn): 6.5312, norm(output): 0.4922, norm(x): 0.5341, norm(y): 1.0046, norm:0.6487, tok/sec: 185394.98, flops:194.63, batch-reuse:1
@ 693 train 5.2048 , allloss: 5.2048, dt: 700.88ms, fracRes: 0.0549, norm(attn): 6.5312, norm(output): 0.5000, norm(x): 0.5423, norm(y): 1.0045, norm:0.3914, tok/sec: 187011.87, flops:196.33, batch-reuse:1
@ 694 train 5.0840 , allloss: 5.0840, dt: 704.04ms, fracRes: 0.0551, norm(attn): 6.6250, norm(output): 0.5000, norm(x): 0.5413, norm(y): 1.0044, norm:0.4944, tok/sec: 186171.86, flops:195.44, batch-reuse:1
@ 695 train 5.1439 , allloss: 5.1439, dt: 696.54ms, fracRes: 0.0556, norm(attn): 6.8750, norm(output): 0.4961, norm(x): 0.5395, norm(y): 1.0044, norm:0.7148, tok/sec: 188175.68, flops:197.55, batch-reuse:1
@ 696 train 5.0318 , allloss: 5.0318, dt: 698.62ms, fracRes: 0.0555, norm(attn): 6.5312, norm(output): 0.4961, norm(x): 0.5363, norm(y): 1.0044, norm:0.5545, tok/sec: 187616.78, flops:196.96, batch-reuse:1
@ 697 train 5.0312 , allloss: 5.0312, dt: 717.71ms, fracRes: 0.0557, norm(attn): 6.4062, norm(output): 0.4941, norm(x): 0.5369, norm(y): 1.0044, norm:0.3639, tok/sec: 182625.71, flops:191.72, batch-reuse:1
@ 698 train 5.1341 , allloss: 5.1341, dt: 710.23ms, fracRes: 0.0556, norm(attn): 6.2500, norm(output): 0.4961, norm(x): 0.5361, norm(y): 1.0045, norm:0.4435, tok/sec: 184548.64, flops:193.74, batch-reuse:1
@ 699 train 5.1357 , allloss: 5.1357, dt: 700.99ms, fracRes: 0.0556, norm(attn): 6.5312, norm(output): 0.4961, norm(x): 0.5374, norm(y): 1.0044, norm:0.5452, tok/sec: 186981.72, flops:196.29, batch-reuse:1
@ 700 train 5.0811 , allloss: 5.0811, dt: 704.26ms, fracRes: 0.0557, norm(attn): 6.6875, norm(output): 0.5000, norm(x): 0.5419, norm(y): 1.0045, norm:0.5152, tok/sec: 186111.92, flops:195.38, batch-reuse:1
@ 701 train 5.1079 , allloss: 5.1079, dt: 707.60ms, fracRes: 0.0558, norm(attn): 6.9062, norm(output): 0.5039, norm(x): 0.5452, norm(y): 1.0046, norm:0.3783, tok/sec: 185234.69, flops:194.46, batch-reuse:1
@ 702 train 5.0761 , allloss: 5.0761, dt: 708.24ms, fracRes: 0.0560, norm(attn): 6.9688, norm(output): 0.4980, norm(x): 0.5411, norm(y): 1.0046, norm:0.4830, tok/sec: 185066.08, flops:194.28, batch-reuse:1
@ 703 train 5.1381 , allloss: 5.1381, dt: 710.52ms, fracRes: 0.0563, norm(attn): 7.0000, norm(output): 0.4980, norm(x): 0.5383, norm(y): 1.0047, norm:0.4507, tok/sec: 184473.65, flops:193.66, batch-reuse:1
@ 704 train 5.0281 , allloss: 5.0281, dt: 697.08ms, fracRes: 0.0563, norm(attn): 7.0312, norm(output): 0.4961, norm(x): 0.5383, norm(y): 1.0047, norm:0.3751, tok/sec: 188031.19, flops:197.40, batch-reuse:1
@ 705 train 5.1368 , allloss: 5.1368, dt: 705.37ms, fracRes: 0.0562, norm(attn): 7.0312, norm(output): 0.4961, norm(x): 0.5400, norm(y): 1.0047, norm:0.4666, tok/sec: 185818.97, flops:195.07, batch-reuse:1
@ 706 train 5.0476 , allloss: 5.0476, dt: 707.06ms, fracRes: 0.0565, norm(attn): 7.0625, norm(output): 0.4961, norm(x): 0.5397, norm(y): 1.0048, norm:0.4635, tok/sec: 185375.91, flops:194.61, batch-reuse:1
@ 707 train 5.0854 , allloss: 5.0854, dt: 707.48ms, fracRes: 0.0565, norm(attn): 7.0625, norm(output): 0.4941, norm(x): 0.5368, norm(y): 1.0047, norm:0.4588, tok/sec: 185266.71, flops:194.49, batch-reuse:1
@ 708 train 5.0881 , allloss: 5.0881, dt: 697.76ms, fracRes: 0.0563, norm(attn): 7.0938, norm(output): 0.4863, norm(x): 0.5361, norm(y): 1.0047, norm:0.4595, tok/sec: 187847.82, flops:197.20, batch-reuse:1
@ 709 train 5.0659 , allloss: 5.0659, dt: 722.04ms, fracRes: 0.0560, norm(attn): 7.1250, norm(output): 0.4883, norm(x): 0.5309, norm(y): 1.0048, norm:0.4702, tok/sec: 181530.42, flops:190.57, batch-reuse:1
@ 710 train 5.2427 , allloss: 5.2427, dt: 713.73ms, fracRes: 0.0556, norm(attn): 7.0938, norm(output): 0.4902, norm(x): 0.5374, norm(y): 1.0046, norm:0.4997, tok/sec: 183644.45, flops:192.79, batch-reuse:1
@ 711 train 5.1562 , allloss: 5.1562, dt: 706.07ms, fracRes: 0.0557, norm(attn): 7.1875, norm(output): 0.4844, norm(x): 0.5280, norm(y): 1.0048, norm:0.4259, tok/sec: 185635.75, flops:194.88, batch-reuse:1
@ 712 train 5.0841 , allloss: 5.0841, dt: 700.35ms, fracRes: 0.0555, norm(attn): 7.1875, norm(output): 0.4785, norm(x): 0.5243, norm(y): 1.0048, norm:0.5262, tok/sec: 187153.27, flops:196.47, batch-reuse:1
@ 713 train 5.0584 , allloss: 5.0584, dt: 697.78ms, fracRes: 0.0550, norm(attn): 7.0938, norm(output): 0.4805, norm(x): 0.5266, norm(y): 1.0047, norm:0.6575, tok/sec: 187841.08, flops:197.20, batch-reuse:1
@ 714 train 5.0237 , allloss: 5.0237, dt: 689.67ms, fracRes: 0.0549, norm(attn): 7.2500, norm(output): 0.4746, norm(x): 0.5204, norm(y): 1.0048, norm:0.4422, tok/sec: 190050.09, flops:199.51, batch-reuse:1
@ 715 train 5.0361 , allloss: 5.0361, dt: 705.63ms, fracRes: 0.0549, norm(attn): 7.3438, norm(output): 0.4746, norm(x): 0.5189, norm(y): 1.0048, norm:0.5316, tok/sec: 185750.59, flops:195.00, batch-reuse:1
@ 716 train 5.0707 , allloss: 5.0707, dt: 708.95ms, fracRes: 0.0548, norm(attn): 7.2188, norm(output): 0.4707, norm(x): 0.5144, norm(y): 1.0048, norm:0.6758, tok/sec: 184882.04, flops:194.09, batch-reuse:1
@ 717 train 4.9668 , allloss: 4.9668, dt: 696.18ms, fracRes: 0.0564, norm(attn): 7.3750, norm(output): 0.4746, norm(x): 0.5142, norm(y): 1.0049, norm:0.5012, tok/sec: 188272.28, flops:197.65, batch-reuse:1
@ 718 train 5.0466 , allloss: 5.0466, dt: 710.74ms, fracRes: 0.0565, norm(attn): 7.3750, norm(output): 0.4688, norm(x): 0.5100, norm(y): 1.0049, norm:0.5696, tok/sec: 184416.59, flops:193.60, batch-reuse:1
@ 719 train 5.0322 , allloss: 5.0322, dt: 710.57ms, fracRes: 0.0558, norm(attn): 7.2500, norm(output): 0.4688, norm(x): 0.5085, norm(y): 1.0048, norm:0.8265, tok/sec: 184461.27, flops:193.65, batch-reuse:1
@ 720 train 4.9897 , allloss: 4.9897, dt: 711.04ms, fracRes: 0.0557, norm(attn): 7.4375, norm(output): 0.4668, norm(x): 0.5094, norm(y): 1.0049, norm:0.4332, tok/sec: 184338.80, flops:193.52, batch-reuse:1
@ 721 train 4.9203 , allloss: 4.9203, dt: 702.81ms, fracRes: 0.0562, norm(attn): 7.4062, norm(output): 0.4668, norm(x): 0.5082, norm(y): 1.0049, norm:0.4966, tok/sec: 186496.29, flops:195.78, batch-reuse:1
@ 722 train 4.9996 , allloss: 4.9996, dt: 713.37ms, fracRes: 0.0561, norm(attn): 7.4062, norm(output): 0.4590, norm(x): 0.5060, norm(y): 1.0049, norm:0.4551, tok/sec: 183737.56, flops:192.89, batch-reuse:1
@ 723 train 5.1283 , allloss: 5.1283, dt: 699.65ms, fracRes: 0.0562, norm(attn): 7.4062, norm(output): 0.4648, norm(x): 0.5062, norm(y): 1.0049, norm:0.4090, tok/sec: 187339.43, flops:196.67, batch-reuse:1
@ 724 train 5.0440 , allloss: 5.0440, dt: 698.42ms, fracRes: 0.0563, norm(attn): 7.4688, norm(output): 0.4512, norm(x): 0.5002, norm(y): 1.0049, norm:0.5621, tok/sec: 187668.14, flops:197.01, batch-reuse:1
@ 725 train 5.0350 , allloss: 5.0350, dt: 696.86ms, fracRes: 0.0560, norm(attn): 7.4062, norm(output): 0.4590, norm(x): 0.5008, norm(y): 1.0049, norm:0.3506, tok/sec: 188088.19, flops:197.46, batch-reuse:1
@ 726 train 5.0581 , allloss: 5.0581, dt: 691.53ms, fracRes: 0.0560, norm(attn): 7.4688, norm(output): 0.4531, norm(x): 0.4976, norm(y): 1.0049, norm:0.4463, tok/sec: 189537.96, flops:198.98, batch-reuse:1
@ 727 train 5.0180 , allloss: 5.0180, dt: 706.72ms, fracRes: 0.0561, norm(attn): 7.4688, norm(output): 0.4473, norm(x): 0.4937, norm(y): 1.0049, norm:0.4042, tok/sec: 185464.72, flops:194.70, batch-reuse:1
@ 728 train 5.0575 , allloss: 5.0575, dt: 707.91ms, fracRes: 0.0562, norm(attn): 7.4688, norm(output): 0.4414, norm(x): 0.4883, norm(y): 1.0049, norm:0.3729, tok/sec: 185153.78, flops:194.37, batch-reuse:1
@ 729 train 5.0231 , allloss: 5.0231, dt: 713.59ms, fracRes: 0.0561, norm(attn): 7.4375, norm(output): 0.4453, norm(x): 0.4897, norm(y): 1.0049, norm:0.4555, tok/sec: 183679.30, flops:192.83, batch-reuse:1
@ 730 train 5.0217 , allloss: 5.0217, dt: 708.51ms, fracRes: 0.0560, norm(attn): 7.4688, norm(output): 0.4453, norm(x): 0.4914, norm(y): 1.0049, norm:0.3803, tok/sec: 184997.45, flops:194.21, batch-reuse:1
@ 731 train 5.0521 , allloss: 5.0521, dt: 706.75ms, fracRes: 0.0562, norm(attn): 7.4688, norm(output): 0.4453, norm(x): 0.4914, norm(y): 1.0049, norm:0.3875, tok/sec: 185458.65, flops:194.69, batch-reuse:1
@ 732 train 4.9872 , allloss: 4.9872, dt: 707.13ms, fracRes: 0.0566, norm(attn): 7.4375, norm(output): 0.4375, norm(x): 0.4817, norm(y): 1.0049, norm:0.4251, tok/sec: 185357.48, flops:194.59, batch-reuse:1
@ 733 train 5.0523 , allloss: 5.0523, dt: 705.14ms, fracRes: 0.0569, norm(attn): 7.4688, norm(output): 0.4375, norm(x): 0.4835, norm(y): 1.0048, norm:0.3652, tok/sec: 185881.35, flops:195.14, batch-reuse:1
@ 734 train 5.0413 , allloss: 5.0413, dt: 713.86ms, fracRes: 0.0563, norm(attn): 7.4688, norm(output): 0.4375, norm(x): 0.4849, norm(y): 1.0048, norm:0.3342, tok/sec: 183609.49, flops:192.75, batch-reuse:1
@ 735 train 5.0582 , allloss: 5.0582, dt: 716.89ms, fracRes: 0.0564, norm(attn): 7.4688, norm(output): 0.4414, norm(x): 0.4874, norm(y): 1.0048, norm:0.3401, tok/sec: 182833.74, flops:191.94, batch-reuse:1
@ 736 train 5.1149 , allloss: 5.1149, dt: 714.45ms, fracRes: 0.0565, norm(attn): 7.4375, norm(output): 0.4395, norm(x): 0.4803, norm(y): 1.0048, norm:0.3582, tok/sec: 183459.43, flops:192.60, batch-reuse:1
@ 737 train 5.0295 , allloss: 5.0295, dt: 700.60ms, fracRes: 0.0563, norm(attn): 7.4062, norm(output): 0.4336, norm(x): 0.4738, norm(y): 1.0048, norm:0.3730, tok/sec: 187085.95, flops:196.40, batch-reuse:1
@ 738 train 5.0529 , allloss: 5.0529, dt: 706.35ms, fracRes: 0.0564, norm(attn): 7.4062, norm(output): 0.4336, norm(x): 0.4750, norm(y): 1.0048, norm:0.3862, tok/sec: 185561.25, flops:194.80, batch-reuse:1
@ 739 train 4.9955 , allloss: 4.9955, dt: 712.31ms, fracRes: 0.0556, norm(attn): 7.3750, norm(output): 0.4316, norm(x): 0.4730, norm(y): 1.0048, norm:0.3803, tok/sec: 184009.07, flops:193.17, batch-reuse:1
@ 740 train 5.0304 , allloss: 5.0304, dt: 719.92ms, fracRes: 0.0556, norm(attn): 7.4688, norm(output): 0.4336, norm(x): 0.4751, norm(y): 1.0048, norm:0.4125, tok/sec: 182065.06, flops:191.13, batch-reuse:1
@ 741 train 5.1593 , allloss: 5.1593, dt: 720.83ms, fracRes: 0.0561, norm(attn): 7.4688, norm(output): 0.4355, norm(x): 0.4783, norm(y): 1.0048, norm:0.5211, tok/sec: 181834.48, flops:190.89, batch-reuse:1
@ 742 train 5.1741 , allloss: 5.1741, dt: 715.22ms, fracRes: 0.0559, norm(attn): 7.4688, norm(output): 0.4395, norm(x): 0.4815, norm(y): 1.0047, norm:0.3506, tok/sec: 183260.18, flops:192.39, batch-reuse:1
@ 743 train 5.1740 , allloss: 5.1740, dt: 715.65ms, fracRes: 0.0560, norm(attn): 7.4688, norm(output): 0.4414, norm(x): 0.4836, norm(y): 1.0047, norm:0.5068, tok/sec: 183150.78, flops:192.27, batch-reuse:1
@ 744 train 5.1596 , allloss: 5.1596, dt: 702.07ms, fracRes: 0.0559, norm(attn): 7.4688, norm(output): 0.4355, norm(x): 0.4775, norm(y): 1.0048, norm:0.4865, tok/sec: 186694.78, flops:195.99, batch-reuse:1
@ 745 train 5.1618 , allloss: 5.1618, dt: 708.54ms, fracRes: 0.0557, norm(attn): 7.4688, norm(output): 0.4375, norm(x): 0.4791, norm(y): 1.0047, norm:0.3660, tok/sec: 184990.04, flops:194.20, batch-reuse:1
@ 746 train 5.1806 , allloss: 5.1806, dt: 723.74ms, fracRes: 0.0558, norm(attn): 7.4688, norm(output): 0.4336, norm(x): 0.4742, norm(y): 1.0047, norm:0.3983, tok/sec: 181103.21, flops:190.12, batch-reuse:1
@ 747 train 5.1823 , allloss: 5.1823, dt: 712.56ms, fracRes: 0.0561, norm(attn): 7.5000, norm(output): 0.4355, norm(x): 0.4751, norm(y): 1.0047, norm:0.5520, tok/sec: 183946.21, flops:193.11, batch-reuse:1
@ 748 train 5.1757 , allloss: 5.1757, dt: 715.37ms, fracRes: 0.0559, norm(attn): 7.4688, norm(output): 0.4297, norm(x): 0.4705, norm(y): 1.0046, norm:0.5251, tok/sec: 183223.05, flops:192.35, batch-reuse:1
@ 749 train 5.2209 , allloss: 5.2209, dt: 717.69ms, fracRes: 0.0566, norm(attn): 7.4688, norm(output): 0.4199, norm(x): 0.4670, norm(y): 1.0047, norm:0.5890, tok/sec: 182629.96, flops:191.73, batch-reuse:1
@ 750 train 5.2871 , allloss: 5.2871, dt: 704.33ms, fracRes: 0.0564, norm(attn): 7.4688, norm(output): 0.4219, norm(x): 0.4640, norm(y): 1.0047, norm:0.4264, tok/sec: 186095.41, flops:195.36, batch-reuse:1
@ 751 train 5.1732 , allloss: 5.1732, dt: 710.12ms, fracRes: 0.0564, norm(attn): 7.4688, norm(output): 0.4199, norm(x): 0.4656, norm(y): 1.0047, norm:0.4137, tok/sec: 184577.57, flops:193.77, batch-reuse:1
@ 752 train 5.0935 , allloss: 5.0935, dt: 706.87ms, fracRes: 0.0566, norm(attn): 7.4688, norm(output): 0.4238, norm(x): 0.4679, norm(y): 1.0047, norm:0.4668, tok/sec: 185425.18, flops:194.66, batch-reuse:1
@ 753 train 5.1648 , allloss: 5.1648, dt: 729.17ms, fracRes: 0.0558, norm(attn): 7.3750, norm(output): 0.4219, norm(x): 0.4637, norm(y): 1.0047, norm:0.4238, tok/sec: 179753.87, flops:188.71, batch-reuse:1
@ 754 train 5.1532 , allloss: 5.1532, dt: 725.12ms, fracRes: 0.0561, norm(attn): 7.4688, norm(output): 0.4199, norm(x): 0.4634, norm(y): 1.0047, norm:0.4090, tok/sec: 180758.32, flops:189.76, batch-reuse:1
@ 755 train 5.2492 , allloss: 5.2492, dt: 712.16ms, fracRes: 0.0563, norm(attn): 7.4375, norm(output): 0.4141, norm(x): 0.4589, norm(y): 1.0047, norm:0.4521, tok/sec: 184047.76, flops:193.21, batch-reuse:1
@ 756 train 5.1281 , allloss: 5.1281, dt: 719.40ms, fracRes: 0.0565, norm(attn): 7.4375, norm(output): 0.4141, norm(x): 0.4581, norm(y): 1.0047, norm:0.4201, tok/sec: 182197.14, flops:191.27, batch-reuse:1
@ 757 train 5.1858 , allloss: 5.1858, dt: 705.34ms, fracRes: 0.0568, norm(attn): 7.4688, norm(output): 0.4238, norm(x): 0.4667, norm(y): 1.0047, norm:0.4098, tok/sec: 185829.01, flops:195.08, batch-reuse:1
@ 758 train 5.1447 , allloss: 5.1447, dt: 719.84ms, fracRes: 0.0568, norm(attn): 7.5000, norm(output): 0.4199, norm(x): 0.4655, norm(y): 1.0046, norm:0.4774, tok/sec: 182086.10, flops:191.15, batch-reuse:1
@ 759 train 5.2075 , allloss: 5.2075, dt: 712.88ms, fracRes: 0.0566, norm(attn): 7.4688, norm(output): 0.4180, norm(x): 0.4617, norm(y): 1.0046, norm:0.3836, tok/sec: 183861.93, flops:193.02, batch-reuse:1
@ 760 train 5.2221 , allloss: 5.2221, dt: 713.62ms, fracRes: 0.0568, norm(attn): 7.5000, norm(output): 0.4160, norm(x): 0.4610, norm(y): 1.0046, norm:0.4101, tok/sec: 183671.14, flops:192.82, batch-reuse:1
@ 761 train 5.2239 , allloss: 5.2239, dt: 709.05ms, fracRes: 0.0571, norm(attn): 7.5000, norm(output): 0.4160, norm(x): 0.4638, norm(y): 1.0046, norm:0.4211, tok/sec: 184855.37, flops:194.06, batch-reuse:1
@ 762 train 5.1703 , allloss: 5.1703, dt: 747.61ms, fracRes: 0.0568, norm(attn): 7.4688, norm(output): 0.4102, norm(x): 0.4615, norm(y): 1.0046, norm:0.4915, tok/sec: 175320.55, flops:184.05, batch-reuse:1
@ 763 train 5.2146 , allloss: 5.2146, dt: 712.10ms, fracRes: 0.0571, norm(attn): 7.5000, norm(output): 0.4141, norm(x): 0.4621, norm(y): 1.0046, norm:0.3863, tok/sec: 184065.26, flops:193.23, batch-reuse:1
@ 764 train 5.1232 , allloss: 5.1232, dt: 710.28ms, fracRes: 0.0571, norm(attn): 7.5000, norm(output): 0.4121, norm(x): 0.4601, norm(y): 1.0046, norm:0.4025, tok/sec: 184535.57, flops:193.73, batch-reuse:1
@ 765 train 5.1123 , allloss: 5.1123, dt: 710.57ms, fracRes: 0.0568, norm(attn): 7.5000, norm(output): 0.4141, norm(x): 0.4582, norm(y): 1.0045, norm:0.5216, tok/sec: 184459.22, flops:193.65, batch-reuse:1
@ 766 train 5.0591 , allloss: 5.0591, dt: 707.33ms, fracRes: 0.0574, norm(attn): 7.5000, norm(output): 0.4043, norm(x): 0.4504, norm(y): 1.0046, norm:0.4801, tok/sec: 185305.37, flops:194.53, batch-reuse:1
@ 767 train 5.1943 , allloss: 5.1943, dt: 700.56ms, fracRes: 0.0569, norm(attn): 7.5000, norm(output): 0.4102, norm(x): 0.4506, norm(y): 1.0045, norm:0.3739, tok/sec: 187096.71, flops:196.41, batch-reuse:1
@ 768 train 5.2973 , allloss: 5.2973, dt: 704.88ms, fracRes: 0.0567, norm(attn): 7.5000, norm(output): 0.4062, norm(x): 0.4533, norm(y): 1.0045, norm:0.4370, tok/sec: 185949.32, flops:195.21, batch-reuse:1
@ 769 train 5.1513 , allloss: 5.1513, dt: 696.45ms, fracRes: 0.0571, norm(attn): 7.5312, norm(output): 0.4102, norm(x): 0.4523, norm(y): 1.0045, norm:0.4472, tok/sec: 188200.16, flops:197.57, batch-reuse:1
@ 770 train 5.1052 , allloss: 5.1052, dt: 708.76ms, fracRes: 0.0573, norm(attn): 7.4688, norm(output): 0.4043, norm(x): 0.4509, norm(y): 1.0044, norm:0.5030, tok/sec: 184930.43, flops:194.14, batch-reuse:1
@ 771 train 5.1199 , allloss: 5.1199, dt: 708.97ms, fracRes: 0.0579, norm(attn): 7.5000, norm(output): 0.4043, norm(x): 0.4481, norm(y): 1.0045, norm:0.3828, tok/sec: 184876.57, flops:194.08, batch-reuse:1
@ 772 train 5.1312 , allloss: 5.1312, dt: 692.35ms, fracRes: 0.0583, norm(attn): 7.5312, norm(output): 0.4062, norm(x): 0.4506, norm(y): 1.0045, norm:0.5366, tok/sec: 189313.83, flops:198.74, batch-reuse:1
@ 773 train 5.1847 , allloss: 5.1847, dt: 699.39ms, fracRes: 0.0576, norm(attn): 7.5000, norm(output): 0.3984, norm(x): 0.4433, norm(y): 1.0044, norm:0.5635, tok/sec: 187408.53, flops:196.74, batch-reuse:1
@ 774 train 5.0201 , allloss: 5.0201, dt: 691.64ms, fracRes: 0.0572, norm(attn): 7.5000, norm(output): 0.4082, norm(x): 0.4506, norm(y): 1.0044, norm:0.4397, tok/sec: 189509.22, flops:198.95, batch-reuse:1
@ 775 train 5.1591 , allloss: 5.1591, dt: 705.89ms, fracRes: 0.0572, norm(attn): 7.5000, norm(output): 0.4004, norm(x): 0.4416, norm(y): 1.0044, norm:0.4707, tok/sec: 185684.34, flops:194.93, batch-reuse:1
@ 776 train 5.0477 , allloss: 5.0477, dt: 695.18ms, fracRes: 0.0571, norm(attn): 7.4688, norm(output): 0.4023, norm(x): 0.4444, norm(y): 1.0043, norm:0.6107, tok/sec: 188542.76, flops:197.93, batch-reuse:1
@ 777 train 5.0817 , allloss: 5.0817, dt: 697.07ms, fracRes: 0.0577, norm(attn): 7.5000, norm(output): 0.3926, norm(x): 0.4390, norm(y): 1.0044, norm:0.4732, tok/sec: 188033.89, flops:197.40, batch-reuse:1
@ 778 train 5.0843 , allloss: 5.0843, dt: 702.32ms, fracRes: 0.0577, norm(attn): 7.4688, norm(output): 0.3887, norm(x): 0.4337, norm(y): 1.0045, norm:0.4122, tok/sec: 186626.71, flops:195.92, batch-reuse:1
@ 779 train 5.1552 , allloss: 5.1552, dt: 702.94ms, fracRes: 0.0576, norm(attn): 7.4688, norm(output): 0.3965, norm(x): 0.4347, norm(y): 1.0044, norm:0.4811, tok/sec: 186463.84, flops:195.75, batch-reuse:1
@ 780 train 5.1385 , allloss: 5.1385, dt: 705.98ms, fracRes: 0.0580, norm(attn): 7.5000, norm(output): 0.3965, norm(x): 0.4370, norm(y): 1.0044, norm:0.4296, tok/sec: 185660.20, flops:194.91, batch-reuse:1
@ 781 train 5.1333 , allloss: 5.1333, dt: 707.88ms, fracRes: 0.0582, norm(attn): 7.5000, norm(output): 0.3867, norm(x): 0.4325, norm(y): 1.0044, norm:0.4965, tok/sec: 185161.82, flops:194.38, batch-reuse:1
@ 782 train 5.1352 , allloss: 5.1352, dt: 707.08ms, fracRes: 0.0579, norm(attn): 7.5000, norm(output): 0.3945, norm(x): 0.4378, norm(y): 1.0043, norm:0.4325, tok/sec: 185371.91, flops:194.60, batch-reuse:1
@ 783 train 5.0791 , allloss: 5.0791, dt: 704.67ms, fracRes: 0.0579, norm(attn): 7.5000, norm(output): 0.3965, norm(x): 0.4394, norm(y): 1.0043, norm:0.4299, tok/sec: 186004.31, flops:195.27, batch-reuse:1
@ 784 train 5.0705 , allloss: 5.0705, dt: 711.54ms, fracRes: 0.0571, norm(attn): 7.5000, norm(output): 0.4004, norm(x): 0.4417, norm(y): 1.0042, norm:0.4399, tok/sec: 184207.61, flops:193.38, batch-reuse:1
@ 785 train 5.0506 , allloss: 5.0506, dt: 689.83ms, fracRes: 0.0575, norm(attn): 7.5000, norm(output): 0.3926, norm(x): 0.4380, norm(y): 1.0042, norm:0.3536, tok/sec: 190005.36, flops:199.47, batch-reuse:1
@ 786 train 5.0242 , allloss: 5.0242, dt: 700.74ms, fracRes: 0.0579, norm(attn): 7.5312, norm(output): 0.3926, norm(x): 0.4348, norm(y): 1.0043, norm:0.3723, tok/sec: 187048.40, flops:196.36, batch-reuse:1
@ 787 train 5.0406 , allloss: 5.0406, dt: 705.78ms, fracRes: 0.0579, norm(attn): 7.5312, norm(output): 0.3887, norm(x): 0.4336, norm(y): 1.0043, norm:0.3446, tok/sec: 185711.88, flops:194.96, batch-reuse:1
@ 788 train 5.1410 , allloss: 5.1410, dt: 700.42ms, fracRes: 0.0573, norm(attn): 7.5000, norm(output): 0.3809, norm(x): 0.4266, norm(y): 1.0042, norm:0.4223, tok/sec: 187133.46, flops:196.45, batch-reuse:1
@ 789 train 5.0287 , allloss: 5.0287, dt: 698.69ms, fracRes: 0.0575, norm(attn): 7.5000, norm(output): 0.3789, norm(x): 0.4239, norm(y): 1.0043, norm:0.3568, tok/sec: 187598.02, flops:196.94, batch-reuse:1
@ 790 train 5.0014 , allloss: 5.0014, dt: 695.24ms, fracRes: 0.0580, norm(attn): 7.5000, norm(output): 0.3789, norm(x): 0.4200, norm(y): 1.0043, norm:0.3492, tok/sec: 188528.73, flops:197.92, batch-reuse:1
@ 791 train 5.1823 , allloss: 5.1823, dt: 709.94ms, fracRes: 0.0580, norm(attn): 7.5000, norm(output): 0.3809, norm(x): 0.4238, norm(y): 1.0042, norm:0.4084, tok/sec: 184623.13, flops:193.82, batch-reuse:1
@ 792 train 5.0976 , allloss: 5.0976, dt: 715.19ms, fracRes: 0.0580, norm(attn): 7.4688, norm(output): 0.3750, norm(x): 0.4195, norm(y): 1.0042, norm:0.4708, tok/sec: 183269.41, flops:192.40, batch-reuse:1
@ 793 train 5.0832 , allloss: 5.0832, dt: 706.47ms, fracRes: 0.0585, norm(attn): 7.5312, norm(output): 0.3750, norm(x): 0.4221, norm(y): 1.0041, norm:0.4445, tok/sec: 185530.19, flops:194.77, batch-reuse:1
@ 794 train 5.1054 , allloss: 5.1054, dt: 713.82ms, fracRes: 0.0582, norm(attn): 7.5312, norm(output): 0.3828, norm(x): 0.4275, norm(y): 1.0040, norm:0.3819, tok/sec: 183620.22, flops:192.76, batch-reuse:1
@ 795 train 4.9797 , allloss: 4.9797, dt: 714.01ms, fracRes: 0.0574, norm(attn): 7.6250, norm(output): 0.3809, norm(x): 0.4256, norm(y): 1.0040, norm:0.4835, tok/sec: 183571.17, flops:192.71, batch-reuse:1
@ 796 train 4.9214 , allloss: 4.9214, dt: 707.19ms, fracRes: 0.0580, norm(attn): 7.6250, norm(output): 0.3809, norm(x): 0.4269, norm(y): 1.0041, norm:0.6483, tok/sec: 185340.85, flops:194.57, batch-reuse:1
@ 797 train 5.0671 , allloss: 5.0671, dt: 700.38ms, fracRes: 0.0572, norm(attn): 7.5312, norm(output): 0.3789, norm(x): 0.4236, norm(y): 1.0039, norm:0.4101, tok/sec: 187143.14, flops:196.46, batch-reuse:1
@ 798 train 5.0659 , allloss: 5.0659, dt: 703.85ms, fracRes: 0.0568, norm(attn): 7.5000, norm(output): 0.3809, norm(x): 0.4227, norm(y): 1.0039, norm:0.4362, tok/sec: 186220.98, flops:195.50, batch-reuse:1
@ 799 train 5.0879 , allloss: 5.0879, dt: 702.02ms, fracRes: 0.0580, norm(attn): 7.6250, norm(output): 0.3750, norm(x): 0.4193, norm(y): 1.0041, norm:0.5848, tok/sec: 186707.46, flops:196.01, batch-reuse:1
@ 800 train 5.0446 , allloss: 5.0446, dt: 699.09ms, fracRes: 0.0583, norm(attn): 7.6875, norm(output): 0.3750, norm(x): 0.4190, norm(y): 1.0041, norm:0.4449, tok/sec: 187490.54, flops:196.83, batch-reuse:1
@ 801 train 5.0530 , allloss: 5.0530, dt: 702.51ms, fracRes: 0.0586, norm(attn): 7.7500, norm(output): 0.3730, norm(x): 0.4195, norm(y): 1.0041, norm:0.3823, tok/sec: 186577.88, flops:195.87, batch-reuse:1
@ 802 train 5.0418 , allloss: 5.0418, dt: 707.50ms, fracRes: 0.0589, norm(attn): 7.8750, norm(output): 0.3789, norm(x): 0.4226, norm(y): 1.0041, norm:0.4487, tok/sec: 185260.78, flops:194.49, batch-reuse:1
@ 803 train 5.0822 , allloss: 5.0822, dt: 704.34ms, fracRes: 0.0587, norm(attn): 7.8750, norm(output): 0.3789, norm(x): 0.4232, norm(y): 1.0041, norm:0.3441, tok/sec: 186091.95, flops:195.36, batch-reuse:1
@ 804 train 5.0619 , allloss: 5.0619, dt: 714.20ms, fracRes: 0.0588, norm(attn): 7.7812, norm(output): 0.3789, norm(x): 0.4223, norm(y): 1.0041, norm:0.4341, tok/sec: 183521.65, flops:192.66, batch-reuse:1
@ 805 train 5.1066 , allloss: 5.1066, dt: 711.14ms, fracRes: 0.0590, norm(attn): 7.8750, norm(output): 0.3770, norm(x): 0.4208, norm(y): 1.0041, norm:0.4505, tok/sec: 184311.30, flops:193.49, batch-reuse:1
@ 806 train 5.0633 , allloss: 5.0633, dt: 719.34ms, fracRes: 0.0589, norm(attn): 7.8750, norm(output): 0.3809, norm(x): 0.4250, norm(y): 1.0040, norm:0.3634, tok/sec: 182210.79, flops:191.29, batch-reuse:1
@ 807 train 5.0059 , allloss: 5.0059, dt: 706.71ms, fracRes: 0.0588, norm(attn): 7.6250, norm(output): 0.3730, norm(x): 0.4183, norm(y): 1.0040, norm:0.3745, tok/sec: 185468.35, flops:194.71, batch-reuse:1
@ 808 train 5.1043 , allloss: 5.1043, dt: 706.62ms, fracRes: 0.0584, norm(attn): 7.8750, norm(output): 0.3730, norm(x): 0.4170, norm(y): 1.0040, norm:0.4172, tok/sec: 185491.31, flops:194.73, batch-reuse:1
@ 809 train 5.0435 , allloss: 5.0435, dt: 719.07ms, fracRes: 0.0582, norm(attn): 7.9062, norm(output): 0.3789, norm(x): 0.4219, norm(y): 1.0039, norm:0.3803, tok/sec: 182279.24, flops:191.36, batch-reuse:1
@ 810 train 5.0487 , allloss: 5.0487, dt: 710.98ms, fracRes: 0.0582, norm(attn): 7.8750, norm(output): 0.3770, norm(x): 0.4214, norm(y): 1.0039, norm:0.3826, tok/sec: 184352.89, flops:193.53, batch-reuse:1
@ 811 train 5.0143 , allloss: 5.0143, dt: 698.28ms, fracRes: 0.0583, norm(attn): 7.8750, norm(output): 0.3730, norm(x): 0.4149, norm(y): 1.0039, norm:0.4258, tok/sec: 187706.59, flops:197.05, batch-reuse:1
@ 812 train 4.9794 , allloss: 4.9794, dt: 704.20ms, fracRes: 0.0583, norm(attn): 7.7188, norm(output): 0.3711, norm(x): 0.4094, norm(y): 1.0038, norm:0.4251, tok/sec: 186128.18, flops:195.40, batch-reuse:1
@ 813 train 5.0616 , allloss: 5.0616, dt: 706.04ms, fracRes: 0.0586, norm(attn): 7.7500, norm(output): 0.3672, norm(x): 0.4117, norm(y): 1.0039, norm:0.5113, tok/sec: 185642.58, flops:194.89, batch-reuse:1
@ 814 train 5.0901 , allloss: 5.0901, dt: 707.92ms, fracRes: 0.0586, norm(attn): 7.6875, norm(output): 0.3711, norm(x): 0.4110, norm(y): 1.0038, norm:0.3945, tok/sec: 185151.03, flops:194.37, batch-reuse:1
@ 815 train 5.0180 , allloss: 5.0180, dt: 706.19ms, fracRes: 0.0584, norm(attn): 7.6562, norm(output): 0.3711, norm(x): 0.4128, norm(y): 1.0037, norm:0.4468, tok/sec: 185603.66, flops:194.85, batch-reuse:1
@ 816 train 5.0030 , allloss: 5.0030, dt: 699.25ms, fracRes: 0.0585, norm(attn): 7.6562, norm(output): 0.3691, norm(x): 0.4148, norm(y): 1.0037, norm:0.4517, tok/sec: 187447.70, flops:196.78, batch-reuse:1
@ 817 train 4.9919 , allloss: 4.9919, dt: 697.11ms, fracRes: 0.0581, norm(attn): 7.5938, norm(output): 0.3633, norm(x): 0.4090, norm(y): 1.0037, norm:0.4090, tok/sec: 188022.06, flops:197.39, batch-reuse:1
@ 818 train 4.9961 , allloss: 4.9961, dt: 694.29ms, fracRes: 0.0580, norm(attn): 7.5312, norm(output): 0.3594, norm(x): 0.4062, norm(y): 1.0036, norm:0.3942, tok/sec: 188786.46, flops:198.19, batch-reuse:1
@ 819 train 5.1614 , allloss: 5.1614, dt: 698.60ms, fracRes: 0.0585, norm(attn): 7.5625, norm(output): 0.3574, norm(x): 0.4056, norm(y): 1.0036, norm:0.4726, tok/sec: 187619.66, flops:196.96, batch-reuse:1
@ 820 train 5.1697 , allloss: 5.1697, dt: 715.48ms, fracRes: 0.0587, norm(attn): 7.6250, norm(output): 0.3496, norm(x): 0.3994, norm(y): 1.0037, norm:0.4324, tok/sec: 183194.96, flops:192.32, batch-reuse:1
@ 821 train 5.0565 , allloss: 5.0565, dt: 696.69ms, fracRes: 0.0583, norm(attn): 7.5625, norm(output): 0.3574, norm(x): 0.4035, norm(y): 1.0036, norm:0.5085, tok/sec: 188136.46, flops:197.51, batch-reuse:1
@ 822 train 4.9461 , allloss: 4.9461, dt: 711.28ms, fracRes: 0.0585, norm(attn): 7.6562, norm(output): 0.3691, norm(x): 0.4115, norm(y): 1.0036, norm:0.4507, tok/sec: 184275.16, flops:193.45, batch-reuse:1
@ 823 train 4.9675 , allloss: 4.9675, dt: 710.16ms, fracRes: 0.0587, norm(attn): 7.6250, norm(output): 0.3633, norm(x): 0.4075, norm(y): 1.0035, norm:0.5192, tok/sec: 184566.85, flops:193.76, batch-reuse:1
@ 824 train 5.0387 , allloss: 5.0387, dt: 703.68ms, fracRes: 0.0583, norm(attn): 7.5938, norm(output): 0.3652, norm(x): 0.4105, norm(y): 1.0035, norm:0.4532, tok/sec: 186267.23, flops:195.54, batch-reuse:1
@ 825 train 5.0273 , allloss: 5.0273, dt: 706.32ms, fracRes: 0.0582, norm(attn): 7.5312, norm(output): 0.3555, norm(x): 0.4029, norm(y): 1.0035, norm:0.4101, tok/sec: 185571.33, flops:194.81, batch-reuse:1
@ 826 train 5.0510 , allloss: 5.0510, dt: 710.64ms, fracRes: 0.0584, norm(attn): 7.5312, norm(output): 0.3574, norm(x): 0.4017, norm(y): 1.0035, norm:0.3689, tok/sec: 184442.02, flops:193.63, batch-reuse:1
@ 827 train 5.0888 , allloss: 5.0888, dt: 713.35ms, fracRes: 0.0583, norm(attn): 7.5312, norm(output): 0.3594, norm(x): 0.4039, norm(y): 1.0034, norm:0.6329, tok/sec: 183740.32, flops:192.89, batch-reuse:1
@ 828 train 5.0832 , allloss: 5.0832, dt: 719.53ms, fracRes: 0.0572, norm(attn): 7.5938, norm(output): 0.3633, norm(x): 0.4064, norm(y): 1.0033, norm:0.3799, tok/sec: 182163.09, flops:191.24, batch-reuse:1
@ 829 train 5.0493 , allloss: 5.0493, dt: 718.04ms, fracRes: 0.0573, norm(attn): 7.6875, norm(output): 0.3594, norm(x): 0.4029, norm(y): 1.0033, norm:0.3745, tok/sec: 182541.00, flops:191.63, batch-reuse:1
@ 830 train 5.0802 , allloss: 5.0802, dt: 707.70ms, fracRes: 0.0579, norm(attn): 7.6250, norm(output): 0.3535, norm(x): 0.3992, norm(y): 1.0031, norm:0.4712, tok/sec: 185207.29, flops:194.43, batch-reuse:1
@ 831 train 5.0088 , allloss: 5.0088, dt: 705.03ms, fracRes: 0.0588, norm(attn): 7.7188, norm(output): 0.3516, norm(x): 0.3978, norm(y): 1.0033, norm:0.4308, tok/sec: 185909.83, flops:195.17, batch-reuse:1
@ 832 train 5.0538 , allloss: 5.0538, dt: 703.12ms, fracRes: 0.0586, norm(attn): 7.6562, norm(output): 0.3516, norm(x): 0.3969, norm(y): 1.0033, norm:0.4045, tok/sec: 186415.22, flops:195.70, batch-reuse:1
@ 833 train 4.9651 , allloss: 4.9651, dt: 712.26ms, fracRes: 0.0585, norm(attn): 7.8750, norm(output): 0.3555, norm(x): 0.4014, norm(y): 1.0034, norm:0.4051, tok/sec: 184023.80, flops:193.19, batch-reuse:1
@ 834 train 4.9973 , allloss: 4.9973, dt: 695.70ms, fracRes: 0.0583, norm(attn): 7.8750, norm(output): 0.3652, norm(x): 0.4080, norm(y): 1.0033, norm:0.3884, tok/sec: 188403.13, flops:197.79, batch-reuse:1
@ 835 train 4.9102 , allloss: 4.9102, dt: 703.43ms, fracRes: 0.0580, norm(attn): 7.9062, norm(output): 0.3652, norm(x): 0.4047, norm(y): 1.0032, norm:0.3987, tok/sec: 186333.21, flops:195.61, batch-reuse:1
@ 836 train 4.9177 , allloss: 4.9177, dt: 705.35ms, fracRes: 0.0580, norm(attn): 7.8750, norm(output): 0.3555, norm(x): 0.4006, norm(y): 1.0032, norm:0.4122, tok/sec: 185826.19, flops:195.08, batch-reuse:1
@ 837 train 4.8758 , allloss: 4.8758, dt: 715.60ms, fracRes: 0.0582, norm(attn): 7.9062, norm(output): 0.3516, norm(x): 0.3978, norm(y): 1.0031, norm:0.3892, tok/sec: 183164.51, flops:192.29, batch-reuse:1
@ 838 train 4.9761 , allloss: 4.9761, dt: 718.19ms, fracRes: 0.0580, norm(attn): 7.9688, norm(output): 0.3438, norm(x): 0.3918, norm(y): 1.0031, norm:0.3624, tok/sec: 182503.25, flops:191.59, batch-reuse:1
@ 839 train 4.9666 , allloss: 4.9666, dt: 699.09ms, fracRes: 0.0575, norm(attn): 7.9688, norm(output): 0.3555, norm(x): 0.3973, norm(y): 1.0029, norm:0.4603, tok/sec: 187489.39, flops:196.83, batch-reuse:1
@ 840 train 4.9595 , allloss: 4.9595, dt: 701.22ms, fracRes: 0.0571, norm(attn): 7.9375, norm(output): 0.3496, norm(x): 0.3969, norm(y): 1.0029, norm:0.4337, tok/sec: 186920.12, flops:196.23, batch-reuse:1
@ 841 train 4.9183 , allloss: 4.9183, dt: 706.69ms, fracRes: 0.0571, norm(attn): 7.8750, norm(output): 0.3496, norm(x): 0.3930, norm(y): 1.0028, norm:0.3555, tok/sec: 185474.23, flops:194.71, batch-reuse:1
@ 842 train 4.9810 , allloss: 4.9810, dt: 708.56ms, fracRes: 0.0576, norm(attn): 7.8750, norm(output): 0.3457, norm(x): 0.3901, norm(y): 1.0028, norm:0.3945, tok/sec: 184982.51, flops:194.19, batch-reuse:1
@ 843 train 5.0142 , allloss: 5.0142, dt: 699.71ms, fracRes: 0.0580, norm(attn): 7.8125, norm(output): 0.3438, norm(x): 0.3897, norm(y): 1.0027, norm:0.3891, tok/sec: 187322.45, flops:196.65, batch-reuse:1
@ 844 train 5.0401 , allloss: 5.0401, dt: 706.61ms, fracRes: 0.0581, norm(attn): 7.8750, norm(output): 0.3438, norm(x): 0.3877, norm(y): 1.0027, norm:0.4146, tok/sec: 185494.44, flops:194.73, batch-reuse:1
@ 845 train 5.0015 , allloss: 5.0015, dt: 709.17ms, fracRes: 0.0583, norm(attn): 7.9375, norm(output): 0.3398, norm(x): 0.3887, norm(y): 1.0027, norm:0.4406, tok/sec: 184825.60, flops:194.03, batch-reuse:1
@ 846 train 4.9513 , allloss: 4.9513, dt: 706.53ms, fracRes: 0.0581, norm(attn): 7.9062, norm(output): 0.3438, norm(x): 0.3889, norm(y): 1.0022, norm:0.4424, tok/sec: 185514.22, flops:194.75, batch-reuse:1
@ 847 train 5.0382 , allloss: 5.0382, dt: 712.44ms, fracRes: 0.0582, norm(attn): 7.9688, norm(output): 0.3438, norm(x): 0.3890, norm(y): 1.0024, norm:0.4114, tok/sec: 183975.94, flops:193.14, batch-reuse:1
@ 848 train 4.9573 , allloss: 4.9573, dt: 710.40ms, fracRes: 0.0581, norm(attn): 7.9062, norm(output): 0.3477, norm(x): 0.3897, norm(y): 1.0018, norm:0.4018, tok/sec: 184504.91, flops:193.69, batch-reuse:1
@ 849 train 4.9442 , allloss: 4.9442, dt: 712.22ms, fracRes: 0.0584, norm(attn): 7.9688, norm(output): 0.3398, norm(x): 0.3831, norm(y): 1.0018, norm:0.3947, tok/sec: 184033.59, flops:193.20, batch-reuse:1
@ 850 train 4.9031 , allloss: 4.9031, dt: 704.72ms, fracRes: 0.0582, norm(attn): 7.9688, norm(output): 0.3438, norm(x): 0.3858, norm(y): 1.0018, norm:0.4214, tok/sec: 185992.92, flops:195.26, batch-reuse:1
@ 851 train 5.1798 , allloss: 5.1798, dt: 703.69ms, fracRes: 0.0580, norm(attn): 7.9375, norm(output): 0.3457, norm(x): 0.3908, norm(y): 1.0013, norm:0.5695, tok/sec: 186264.83, flops:195.54, batch-reuse:1
@ 852 train 5.0158 , allloss: 5.0158, dt: 693.82ms, fracRes: 0.0579, norm(attn): 8.0000, norm(output): 0.3457, norm(x): 0.3903, norm(y): 1.0022, norm:0.5114, tok/sec: 188912.90, flops:198.32, batch-reuse:1
@ 853 train 4.9801 , allloss: 4.9801, dt: 709.93ms, fracRes: 0.0579, norm(attn): 7.9688, norm(output): 0.3438, norm(x): 0.3862, norm(y): 1.0017, norm:0.3825, tok/sec: 184625.92, flops:193.82, batch-reuse:1
@ 854 train 4.9651 , allloss: 4.9651, dt: 709.30ms, fracRes: 0.0581, norm(attn): 7.9375, norm(output): 0.3418, norm(x): 0.3850, norm(y): 1.0010, norm:0.4275, tok/sec: 184790.57, flops:193.99, batch-reuse:1
@ 855 train 4.9777 , allloss: 4.9777, dt: 699.53ms, fracRes: 0.0584, norm(attn): 8.0000, norm(output): 0.3438, norm(x): 0.3869, norm(y): 1.0015, norm:0.4413, tok/sec: 187371.49, flops:196.70, batch-reuse:1
@ 856 train 4.9634 , allloss: 4.9634, dt: 707.69ms, fracRes: 0.0577, norm(attn): 7.9688, norm(output): 0.3398, norm(x): 0.3813, norm(y): 1.0008, norm:0.4523, tok/sec: 185211.97, flops:194.44, batch-reuse:1
@ 857 train 4.9105 , allloss: 4.9105, dt: 699.59ms, fracRes: 0.0573, norm(attn): 7.9688, norm(output): 0.3438, norm(x): 0.3815, norm(y): 1.0012, norm:0.3961, tok/sec: 187356.67, flops:196.69, batch-reuse:1
@ 858 train 5.0447 , allloss: 5.0447, dt: 705.80ms, fracRes: 0.0580, norm(attn): 8.0000, norm(output): 0.3379, norm(x): 0.3837, norm(y): 1.0018, norm:0.4165, tok/sec: 185706.98, flops:194.96, batch-reuse:1
@ 859 train 4.9638 , allloss: 4.9638, dt: 707.27ms, fracRes: 0.0582, norm(attn): 7.9688, norm(output): 0.3398, norm(x): 0.3827, norm(y): 1.0015, norm:0.3674, tok/sec: 185321.23, flops:194.55, batch-reuse:1
@ 860 train 4.9821 , allloss: 4.9821, dt: 695.21ms, fracRes: 0.0586, norm(attn): 7.8750, norm(output): 0.3398, norm(x): 0.3800, norm(y): 0.9995, norm:0.3961, tok/sec: 188534.62, flops:197.92, batch-reuse:1
@ 861 train 4.9866 , allloss: 4.9866, dt: 697.31ms, fracRes: 0.0585, norm(attn): 7.9688, norm(output): 0.3398, norm(x): 0.3783, norm(y): 1.0011, norm:0.3513, tok/sec: 187968.63, flops:197.33, batch-reuse:1
@ 862 train 4.9733 , allloss: 4.9733, dt: 697.75ms, fracRes: 0.0588, norm(attn): 7.9375, norm(output): 0.3398, norm(x): 0.3843, norm(y): 1.0004, norm:0.3934, tok/sec: 187849.62, flops:197.20, batch-reuse:1
@ 863 train 4.9416 , allloss: 4.9416, dt: 701.34ms, fracRes: 0.0586, norm(attn): 8.0000, norm(output): 0.3340, norm(x): 0.3815, norm(y): 0.9994, norm:0.4231, tok/sec: 186887.14, flops:196.19, batch-reuse:1
@ 864 train 4.9591 , allloss: 4.9591, dt: 707.95ms, fracRes: 0.0582, norm(attn): 7.8750, norm(output): 0.3340, norm(x): 0.3762, norm(y): 0.9918, norm:0.4743, tok/sec: 185144.17, flops:194.36, batch-reuse:1
@ 865 train 4.8747 , allloss: 4.8747, dt: 705.34ms, fracRes: 0.0583, norm(attn): 8.0625, norm(output): 0.3379, norm(x): 0.3783, norm(y): 1.0024, norm:0.4498, tok/sec: 185829.01, flops:195.08, batch-reuse:1
@ 866 train 4.8819 , allloss: 4.8819, dt: 707.82ms, fracRes: 0.0580, norm(attn): 8.0625, norm(output): 0.3398, norm(x): 0.3820, norm(y): 1.0029, norm:0.4045, tok/sec: 185177.72, flops:194.40, batch-reuse:1
@ 867 train 4.9206 , allloss: 4.9206, dt: 708.10ms, fracRes: 0.0577, norm(attn): 8.0625, norm(output): 0.3398, norm(x): 0.3854, norm(y): 1.0030, norm:0.3571, tok/sec: 185102.53, flops:194.32, batch-reuse:1
@ 868 train 4.9423 , allloss: 4.9423, dt: 708.08ms, fracRes: 0.0574, norm(attn): 8.0000, norm(output): 0.3457, norm(x): 0.3858, norm(y): 1.0030, norm:0.3515, tok/sec: 185109.32, flops:194.33, batch-reuse:1
@ 869 train 4.9454 , allloss: 4.9454, dt: 702.05ms, fracRes: 0.0574, norm(attn): 8.0000, norm(output): 0.3457, norm(x): 0.3876, norm(y): 1.0031, norm:0.3429, tok/sec: 186699.02, flops:196.00, batch-reuse:1
@ 870 train 4.9516 , allloss: 4.9516, dt: 709.96ms, fracRes: 0.0579, norm(attn): 7.9688, norm(output): 0.3477, norm(x): 0.3903, norm(y): 1.0031, norm:0.3460, tok/sec: 184618.11, flops:193.81, batch-reuse:1
@ 871 train 4.9515 , allloss: 4.9515, dt: 693.92ms, fracRes: 0.0577, norm(attn): 7.9688, norm(output): 0.3398, norm(x): 0.3818, norm(y): 1.0032, norm:0.3255, tok/sec: 188886.81, flops:198.29, batch-reuse:1
@ 872 train 4.9177 , allloss: 4.9177, dt: 698.66ms, fracRes: 0.0580, norm(attn): 7.9688, norm(output): 0.3379, norm(x): 0.3820, norm(y): 1.0033, norm:0.3574, tok/sec: 187604.17, flops:196.95, batch-reuse:1
@ 873 train 4.9429 , allloss: 4.9429, dt: 686.45ms, fracRes: 0.0581, norm(attn): 7.9375, norm(output): 0.3516, norm(x): 0.3920, norm(y): 1.0031, norm:0.4210, tok/sec: 190941.07, flops:200.45, batch-reuse:1
@ 874 train 4.8556 , allloss: 4.8556, dt: 703.39ms, fracRes: 0.0581, norm(attn): 7.9688, norm(output): 0.3379, norm(x): 0.3824, norm(y): 1.0033, norm:0.3898, tok/sec: 186342.62, flops:195.62, batch-reuse:1
@ 875 train 4.9200 , allloss: 4.9200, dt: 698.73ms, fracRes: 0.0580, norm(attn): 7.8750, norm(output): 0.3398, norm(x): 0.3838, norm(y): 1.0030, norm:0.4802, tok/sec: 187586.76, flops:196.93, batch-reuse:1
@ 876 train 4.9314 , allloss: 4.9314, dt: 697.88ms, fracRes: 0.0580, norm(attn): 8.0000, norm(output): 0.3359, norm(x): 0.3790, norm(y): 1.0032, norm:0.4459, tok/sec: 187813.36, flops:197.17, batch-reuse:1
@ 877 train 4.9387 , allloss: 4.9387, dt: 701.40ms, fracRes: 0.0577, norm(attn): 8.1250, norm(output): 0.3418, norm(x): 0.3874, norm(y): 1.0033, norm:0.4295, tok/sec: 186871.26, flops:196.18, batch-reuse:1
@ 878 train 4.9282 , allloss: 4.9282, dt: 717.42ms, fracRes: 0.0576, norm(attn): 8.3750, norm(output): 0.3379, norm(x): 0.3821, norm(y): 1.0034, norm:0.3951, tok/sec: 182699.64, flops:191.80, batch-reuse:1
@ 879 train 4.8514 , allloss: 4.8514, dt: 708.06ms, fracRes: 0.0577, norm(attn): 8.4375, norm(output): 0.3457, norm(x): 0.3919, norm(y): 1.0034, norm:0.4610, tok/sec: 185113.50, flops:194.33, batch-reuse:1
@ 880 train 4.9880 , allloss: 4.9880, dt: 704.79ms, fracRes: 0.0571, norm(attn): 8.3750, norm(output): 0.3477, norm(x): 0.3912, norm(y): 1.0034, norm:0.5054, tok/sec: 185972.53, flops:195.23, batch-reuse:1
@ 881 train 4.8297 , allloss: 4.8297, dt: 703.54ms, fracRes: 0.0574, norm(attn): 8.4375, norm(output): 0.3418, norm(x): 0.3829, norm(y): 1.0035, norm:0.4882, tok/sec: 186303.28, flops:195.58, batch-reuse:1
@ 882 train 4.8050 , allloss: 4.8050, dt: 705.17ms, fracRes: 0.0572, norm(attn): 8.3750, norm(output): 0.3418, norm(x): 0.3843, norm(y): 1.0034, norm:0.3676, tok/sec: 185874.06, flops:195.13, batch-reuse:1
@ 883 train 4.8188 , allloss: 4.8188, dt: 698.24ms, fracRes: 0.0574, norm(attn): 8.4375, norm(output): 0.3457, norm(x): 0.3866, norm(y): 1.0034, norm:0.3968, tok/sec: 187716.72, flops:197.07, batch-reuse:1
@ 884 train 4.7991 , allloss: 4.7991, dt: 714.80ms, fracRes: 0.0576, norm(attn): 8.4375, norm(output): 0.3398, norm(x): 0.3841, norm(y): 1.0035, norm:0.4339, tok/sec: 183368.68, flops:192.50, batch-reuse:1
@ 885 train 4.8271 , allloss: 4.8271, dt: 710.69ms, fracRes: 0.0579, norm(attn): 8.5000, norm(output): 0.3418, norm(x): 0.3848, norm(y): 1.0035, norm:0.3952, tok/sec: 184429.46, flops:193.61, batch-reuse:1
@ 886 train 4.9083 , allloss: 4.9083, dt: 714.97ms, fracRes: 0.0582, norm(attn): 8.5000, norm(output): 0.3418, norm(x): 0.3823, norm(y): 1.0035, norm:0.3612, tok/sec: 183326.06, flops:192.46, batch-reuse:1
@ 887 train 4.9121 , allloss: 4.9121, dt: 694.69ms, fracRes: 0.0581, norm(attn): 8.5000, norm(output): 0.3398, norm(x): 0.3824, norm(y): 1.0035, norm:0.3985, tok/sec: 188675.80, flops:198.07, batch-reuse:1
@ 888 train 4.8024 , allloss: 4.8024, dt: 710.98ms, fracRes: 0.0582, norm(attn): 8.5000, norm(output): 0.3359, norm(x): 0.3792, norm(y): 1.0034, norm:0.3768, tok/sec: 184354.56, flops:193.54, batch-reuse:1
@ 889 train 4.8978 , allloss: 4.8978, dt: 708.04ms, fracRes: 0.0576, norm(attn): 8.5000, norm(output): 0.3398, norm(x): 0.3811, norm(y): 1.0034, norm:0.3769, tok/sec: 185118.24, flops:194.34, batch-reuse:1
@ 890 train 4.8497 , allloss: 4.8497, dt: 705.77ms, fracRes: 0.0578, norm(attn): 8.4375, norm(output): 0.3379, norm(x): 0.3842, norm(y): 1.0034, norm:0.3928, tok/sec: 185714.76, flops:194.96, batch-reuse:1
@ 891 train 4.8260 , allloss: 4.8260, dt: 709.30ms, fracRes: 0.0573, norm(attn): 8.5000, norm(output): 0.3398, norm(x): 0.3825, norm(y): 1.0034, norm:0.3660, tok/sec: 184790.01, flops:193.99, batch-reuse:1
@ 892 train 4.8173 , allloss: 4.8173, dt: 691.67ms, fracRes: 0.0568, norm(attn): 8.5000, norm(output): 0.3379, norm(x): 0.3791, norm(y): 1.0034, norm:0.3933, tok/sec: 189500.33, flops:198.94, batch-reuse:1
@ 893 train 4.7713 , allloss: 4.7713, dt: 692.77ms, fracRes: 0.0567, norm(attn): 8.5000, norm(output): 0.3379, norm(x): 0.3775, norm(y): 1.0034, norm:0.3759, tok/sec: 189198.90, flops:198.62, batch-reuse:1
@ 894 train 4.8503 , allloss: 4.8503, dt: 689.60ms, fracRes: 0.0568, norm(attn): 8.5000, norm(output): 0.3359, norm(x): 0.3798, norm(y): 1.0034, norm:0.4298, tok/sec: 190070.33, flops:199.54, batch-reuse:1
@ 895 train 4.8100 , allloss: 4.8100, dt: 699.99ms, fracRes: 0.0566, norm(attn): 8.5000, norm(output): 0.3320, norm(x): 0.3753, norm(y): 1.0033, norm:0.3598, tok/sec: 187248.38, flops:196.57, batch-reuse:1
@ 896 train 4.7777 , allloss: 4.7777, dt: 684.57ms, fracRes: 0.0564, norm(attn): 8.5625, norm(output): 0.3301, norm(x): 0.3712, norm(y): 1.0033, norm:0.3705, tok/sec: 191466.76, flops:201.00, batch-reuse:1
@ 897 train 4.8394 , allloss: 4.8394, dt: 701.72ms, fracRes: 0.0564, norm(attn): 8.5000, norm(output): 0.3281, norm(x): 0.3706, norm(y): 1.0034, norm:0.4380, tok/sec: 186787.13, flops:196.09, batch-reuse:1
@ 898 train 4.8859 , allloss: 4.8859, dt: 708.89ms, fracRes: 0.0567, norm(attn): 8.5000, norm(output): 0.3359, norm(x): 0.3794, norm(y): 1.0033, norm:0.4236, tok/sec: 184898.09, flops:194.11, batch-reuse:1
@ 899 train 4.8540 , allloss: 4.8540, dt: 702.46ms, fracRes: 0.0572, norm(attn): 8.5625, norm(output): 0.3359, norm(x): 0.3782, norm(y): 1.0033, norm:0.3816, tok/sec: 186589.65, flops:195.88, batch-reuse:1
@ 900 train 4.8992 , allloss: 4.8992, dt: 704.76ms, fracRes: 0.0569, norm(attn): 8.5000, norm(output): 0.3281, norm(x): 0.3739, norm(y): 1.0033, norm:0.3913, tok/sec: 185981.53, flops:195.24, batch-reuse:1
@ 901 train 4.8757 , allloss: 4.8757, dt: 696.54ms, fracRes: 0.0567, norm(attn): 8.5000, norm(output): 0.3262, norm(x): 0.3724, norm(y): 1.0032, norm:0.4172, tok/sec: 188175.29, flops:197.55, batch-reuse:1
@ 902 train 4.8372 , allloss: 4.8372, dt: 702.32ms, fracRes: 0.0569, norm(attn): 8.5000, norm(output): 0.3301, norm(x): 0.3743, norm(y): 1.0032, norm:0.4337, tok/sec: 186627.34, flops:195.92, batch-reuse:1
@ 903 train 4.8043 , allloss: 4.8043, dt: 706.55ms, fracRes: 0.0573, norm(attn): 8.5625, norm(output): 0.3320, norm(x): 0.3745, norm(y): 1.0032, norm:0.3874, tok/sec: 185509.21, flops:194.75, batch-reuse:1
@ 904 train 4.7520 , allloss: 4.7520, dt: 696.94ms, fracRes: 0.0575, norm(attn): 8.5625, norm(output): 0.3281, norm(x): 0.3708, norm(y): 1.0032, norm:0.3852, tok/sec: 188067.21, flops:197.43, batch-reuse:1
@ 905 train 4.7912 , allloss: 4.7912, dt: 701.67ms, fracRes: 0.0573, norm(attn): 8.5625, norm(output): 0.3242, norm(x): 0.3675, norm(y): 1.0032, norm:0.3954, tok/sec: 186800.84, flops:196.10, batch-reuse:1
@ 906 train 4.8155 , allloss: 4.8155, dt: 705.00ms, fracRes: 0.0570, norm(attn): 8.5625, norm(output): 0.3242, norm(x): 0.3657, norm(y): 1.0031, norm:0.4428, tok/sec: 185917.88, flops:195.18, batch-reuse:1
@ 907 train 4.6272 , allloss: 4.6272, dt: 693.06ms, fracRes: 0.0566, norm(attn): 8.5625, norm(output): 0.3242, norm(x): 0.3658, norm(y): 1.0031, norm:0.4144, tok/sec: 189120.34, flops:198.54, batch-reuse:1
@ 908 train 4.8468 , allloss: 4.8468, dt: 709.55ms, fracRes: 0.0563, norm(attn): 8.5625, norm(output): 0.3281, norm(x): 0.3699, norm(y): 1.0031, norm:0.4742, tok/sec: 184726.80, flops:193.93, batch-reuse:1
@ 909 train 5.1111 , allloss: 5.1111, dt: 701.09ms, fracRes: 0.0562, norm(attn): 8.5625, norm(output): 0.3301, norm(x): 0.3759, norm(y): 1.0029, norm:0.5586, tok/sec: 186955.65, flops:196.27, batch-reuse:1
@ 910 train 4.8295 , allloss: 4.8295, dt: 710.82ms, fracRes: 0.0556, norm(attn): 8.5625, norm(output): 0.3203, norm(x): 0.3659, norm(y): 1.0030, norm:0.5088, tok/sec: 184395.81, flops:193.58, batch-reuse:1
@ 911 train 4.8420 , allloss: 4.8420, dt: 708.97ms, fracRes: 0.0563, norm(attn): 8.5625, norm(output): 0.3262, norm(x): 0.3682, norm(y): 1.0030, norm:0.4993, tok/sec: 184876.01, flops:194.08, batch-reuse:1
@ 912 train 4.8268 , allloss: 4.8268, dt: 709.77ms, fracRes: 0.0565, norm(attn): 8.5625, norm(output): 0.3301, norm(x): 0.3728, norm(y): 1.0029, norm:0.7029, tok/sec: 184667.97, flops:193.86, batch-reuse:1
@ 913 train 4.7803 , allloss: 4.7803, dt: 699.75ms, fracRes: 0.0566, norm(attn): 8.6250, norm(output): 0.3359, norm(x): 0.3787, norm(y): 1.0030, norm:0.4891, tok/sec: 187311.60, flops:196.64, batch-reuse:1
@ 914 train 4.8466 , allloss: 4.8466, dt: 705.44ms, fracRes: 0.0567, norm(attn): 8.6875, norm(output): 0.3340, norm(x): 0.3755, norm(y): 1.0030, norm:0.5468, tok/sec: 185801.82, flops:195.06, batch-reuse:1
@ 915 train 4.8832 , allloss: 4.8832, dt: 692.48ms, fracRes: 0.0563, norm(attn): 8.5625, norm(output): 0.3262, norm(x): 0.3716, norm(y): 1.0028, norm:0.4776, tok/sec: 189280.13, flops:198.71, batch-reuse:1
@ 916 train 4.7443 , allloss: 4.7443, dt: 705.48ms, fracRes: 0.0566, norm(attn): 8.6250, norm(output): 0.3184, norm(x): 0.3609, norm(y): 1.0029, norm:0.4223, tok/sec: 185791.71, flops:195.04, batch-reuse:1
@ 917 train 4.8064 , allloss: 4.8064, dt: 705.02ms, fracRes: 0.0568, norm(attn): 8.6250, norm(output): 0.3164, norm(x): 0.3611, norm(y): 1.0028, norm:0.4726, tok/sec: 185911.34, flops:195.17, batch-reuse:1
@ 918 train 4.8202 , allloss: 4.8202, dt: 696.83ms, fracRes: 0.0562, norm(attn): 8.6250, norm(output): 0.3164, norm(x): 0.3603, norm(y): 1.0027, norm:0.4994, tok/sec: 188097.39, flops:197.46, batch-reuse:1
@ 919 train 4.7471 , allloss: 4.7471, dt: 701.45ms, fracRes: 0.0562, norm(attn): 8.6875, norm(output): 0.3203, norm(x): 0.3593, norm(y): 1.0027, norm:0.4421, tok/sec: 186857.99, flops:196.16, batch-reuse:1
@ 920 train 4.8328 , allloss: 4.8328, dt: 714.33ms, fracRes: 0.0559, norm(attn): 8.6250, norm(output): 0.3164, norm(x): 0.3569, norm(y): 1.0026, norm:0.4410, tok/sec: 183489.62, flops:192.63, batch-reuse:1
@ 921 train 4.7930 , allloss: 4.7930, dt: 717.89ms, fracRes: 0.0561, norm(attn): 8.6250, norm(output): 0.3184, norm(x): 0.3588, norm(y): 1.0025, norm:0.4558, tok/sec: 182578.77, flops:191.67, batch-reuse:1
@ 922 train 4.7958 , allloss: 4.7958, dt: 716.57ms, fracRes: 0.0563, norm(attn): 8.6250, norm(output): 0.3203, norm(x): 0.3647, norm(y): 1.0023, norm:0.3913, tok/sec: 182915.74, flops:192.03, batch-reuse:1
@ 923 train 4.7958 , allloss: 4.7958, dt: 719.66ms, fracRes: 0.0562, norm(attn): 8.6875, norm(output): 0.3125, norm(x): 0.3590, norm(y): 1.0023, norm:0.3984, tok/sec: 182131.34, flops:191.20, batch-reuse:1
@ 924 train 4.7587 , allloss: 4.7587, dt: 708.59ms, fracRes: 0.0559, norm(attn): 8.6875, norm(output): 0.3164, norm(x): 0.3580, norm(y): 1.0022, norm:0.3960, tok/sec: 184977.03, flops:194.19, batch-reuse:1
@ 925 train 4.8082 , allloss: 4.8082, dt: 688.11ms, fracRes: 0.0558, norm(attn): 8.6250, norm(output): 0.3203, norm(x): 0.3619, norm(y): 1.0022, norm:0.4140, tok/sec: 190482.33, flops:199.97, batch-reuse:1
@ 926 train 4.7884 , allloss: 4.7884, dt: 703.33ms, fracRes: 0.0555, norm(attn): 8.6875, norm(output): 0.3203, norm(x): 0.3619, norm(y): 1.0023, norm:0.3660, tok/sec: 186360.05, flops:195.64, batch-reuse:1
@ 927 train 4.7376 , allloss: 4.7376, dt: 709.19ms, fracRes: 0.0550, norm(attn): 8.8750, norm(output): 0.3242, norm(x): 0.3650, norm(y): 1.0024, norm:0.3946, tok/sec: 184819.95, flops:194.02, batch-reuse:1
@ 928 train 4.9358 , allloss: 4.9358, dt: 702.26ms, fracRes: 0.0546, norm(attn): 8.8750, norm(output): 0.3184, norm(x): 0.3589, norm(y): 1.0024, norm:0.4206, tok/sec: 186643.12, flops:195.94, batch-reuse:1
@ 929 train 4.9549 , allloss: 4.9549, dt: 700.90ms, fracRes: 0.0550, norm(attn): 8.8750, norm(output): 0.3223, norm(x): 0.3647, norm(y): 1.0024, norm:0.4124, tok/sec: 187004.18, flops:196.32, batch-reuse:1
@ 930 train 4.9806 , allloss: 4.9806, dt: 706.94ms, fracRes: 0.0554, norm(attn): 8.9375, norm(output): 0.3242, norm(x): 0.3667, norm(y): 1.0024, norm:0.4254, tok/sec: 185407.86, flops:194.64, batch-reuse:1
@ 931 train 5.0374 , allloss: 5.0374, dt: 707.55ms, fracRes: 0.0557, norm(attn): 8.8125, norm(output): 0.3203, norm(x): 0.3628, norm(y): 1.0024, norm:0.4341, tok/sec: 185248.61, flops:194.47, batch-reuse:1
@ 932 train 5.0200 , allloss: 5.0200, dt: 708.09ms, fracRes: 0.0551, norm(attn): 8.8750, norm(output): 0.3184, norm(x): 0.3606, norm(y): 1.0022, norm:0.3972, tok/sec: 185105.83, flops:194.32, batch-reuse:1
@ 933 train 5.0087 , allloss: 5.0087, dt: 711.76ms, fracRes: 0.0549, norm(attn): 8.9375, norm(output): 0.3184, norm(x): 0.3600, norm(y): 1.0022, norm:0.4244, tok/sec: 184153.18, flops:193.32, batch-reuse:1
@ 934 train 4.9649 , allloss: 4.9649, dt: 709.94ms, fracRes: 0.0557, norm(attn): 9.0000, norm(output): 0.3203, norm(x): 0.3631, norm(y): 1.0022, norm:0.4183, tok/sec: 184625.12, flops:193.82, batch-reuse:1
@ 935 train 4.8765 , allloss: 4.8765, dt: 705.50ms, fracRes: 0.0548, norm(attn): 8.9375, norm(output): 0.3203, norm(x): 0.3639, norm(y): 1.0020, norm:0.4060, tok/sec: 185785.81, flops:195.04, batch-reuse:1
@ 936 train 4.9653 , allloss: 4.9653, dt: 695.09ms, fracRes: 0.0548, norm(attn): 8.9375, norm(output): 0.3223, norm(x): 0.3638, norm(y): 1.0020, norm:0.3642, tok/sec: 188569.41, flops:197.96, batch-reuse:1
@ 937 train 4.9880 , allloss: 4.9880, dt: 705.98ms, fracRes: 0.0548, norm(attn): 9.0000, norm(output): 0.3223, norm(x): 0.3606, norm(y): 1.0022, norm:0.4034, tok/sec: 185660.57, flops:194.91, batch-reuse:1
@ 938 train 4.9427 , allloss: 4.9427, dt: 698.03ms, fracRes: 0.0549, norm(attn): 8.9375, norm(output): 0.3223, norm(x): 0.3634, norm(y): 1.0023, norm:0.3666, tok/sec: 187774.04, flops:197.13, batch-reuse:1
@ 939 train 5.0010 , allloss: 5.0010, dt: 706.82ms, fracRes: 0.0551, norm(attn): 9.0000, norm(output): 0.3223, norm(x): 0.3645, norm(y): 1.0022, norm:0.4372, tok/sec: 185438.57, flops:194.67, batch-reuse:1
@ 940 train 4.9909 , allloss: 4.9909, dt: 701.62ms, fracRes: 0.0550, norm(attn): 8.9375, norm(output): 0.3203, norm(x): 0.3643, norm(y): 1.0019, norm:0.4229, tok/sec: 186813.28, flops:196.12, batch-reuse:1
@ 941 train 4.9887 , allloss: 4.9887, dt: 705.69ms, fracRes: 0.0553, norm(attn): 8.9375, norm(output): 0.3184, norm(x): 0.3630, norm(y): 1.0019, norm:0.4105, tok/sec: 185735.09, flops:194.99, batch-reuse:1
@ 942 train 5.0793 , allloss: 5.0793, dt: 705.21ms, fracRes: 0.0548, norm(attn): 8.9375, norm(output): 0.3262, norm(x): 0.3660, norm(y): 1.0018, norm:0.4194, tok/sec: 185862.63, flops:195.12, batch-reuse:1
@ 943 train 4.9070 , allloss: 4.9070, dt: 695.95ms, fracRes: 0.0556, norm(attn): 8.9375, norm(output): 0.3203, norm(x): 0.3607, norm(y): 1.0017, norm:0.3383, tok/sec: 188334.07, flops:197.71, batch-reuse:1
@ 944 train 4.9798 , allloss: 4.9798, dt: 704.33ms, fracRes: 0.0551, norm(attn): 8.9375, norm(output): 0.3184, norm(x): 0.3587, norm(y): 1.0012, norm:0.4038, tok/sec: 186095.85, flops:195.36, batch-reuse:1
@ 945 train 5.0334 , allloss: 5.0334, dt: 714.86ms, fracRes: 0.0552, norm(attn): 8.9375, norm(output): 0.3223, norm(x): 0.3644, norm(y): 1.0004, norm:0.4796, tok/sec: 183352.54, flops:192.48, batch-reuse:1
@ 946 train 4.9633 , allloss: 4.9633, dt: 706.99ms, fracRes: 0.0553, norm(attn): 8.9375, norm(output): 0.3203, norm(x): 0.3614, norm(y): 0.9992, norm:0.4367, tok/sec: 185395.61, flops:194.63, batch-reuse:1
@ 947 train 4.9933 , allloss: 4.9933, dt: 712.79ms, fracRes: 0.0549, norm(attn): 8.9375, norm(output): 0.3145, norm(x): 0.3575, norm(y): 0.9965, norm:0.3839, tok/sec: 183885.24, flops:193.04, batch-reuse:1
@ 948 train 4.9933 , allloss: 4.9933, dt: 701.51ms, fracRes: 0.0552, norm(attn): 8.8750, norm(output): 0.3223, norm(x): 0.3639, norm(y): 0.9952, norm:0.4211, tok/sec: 186841.41, flops:196.15, batch-reuse:1
@ 949 train 5.0048 , allloss: 5.0048, dt: 703.50ms, fracRes: 0.0552, norm(attn): 8.9375, norm(output): 0.3184, norm(x): 0.3599, norm(y): 0.9991, norm:0.4079, tok/sec: 186313.31, flops:195.59, batch-reuse:1
@ 950 train 4.9413 , allloss: 4.9413, dt: 704.25ms, fracRes: 0.0553, norm(attn): 9.0000, norm(output): 0.3164, norm(x): 0.3597, norm(y): 1.0009, norm:0.4196, tok/sec: 186115.20, flops:195.38, batch-reuse:1
@ 951 train 4.9630 , allloss: 4.9630, dt: 704.58ms, fracRes: 0.0557, norm(attn): 9.0625, norm(output): 0.3164, norm(x): 0.3608, norm(y): 1.0011, norm:0.4528, tok/sec: 186029.48, flops:195.29, batch-reuse:1
@ 952 train 4.9123 , allloss: 4.9123, dt: 702.90ms, fracRes: 0.0563, norm(attn): 9.0000, norm(output): 0.3184, norm(x): 0.3602, norm(y): 1.0003, norm:0.4774, tok/sec: 186472.00, flops:195.76, batch-reuse:1
@ 953 train 4.9356 , allloss: 4.9356, dt: 700.09ms, fracRes: 0.0559, norm(attn): 8.9375, norm(output): 0.3145, norm(x): 0.3557, norm(y): 0.9995, norm:0.4544, tok/sec: 187221.92, flops:196.55, batch-reuse:1
@ 954 train 4.8652 , allloss: 4.8652, dt: 716.53ms, fracRes: 0.0549, norm(attn): 8.9375, norm(output): 0.3066, norm(x): 0.3501, norm(y): 0.9992, norm:0.3822, tok/sec: 182926.27, flops:192.04, batch-reuse:1
@ 955 train 4.9795 , allloss: 4.9795, dt: 711.54ms, fracRes: 0.0554, norm(attn): 8.9375, norm(output): 0.3145, norm(x): 0.3538, norm(y): 0.9996, norm:0.4128, tok/sec: 184209.46, flops:193.38, batch-reuse:1
@ 956 train 4.9117 , allloss: 4.9117, dt: 704.85ms, fracRes: 0.0554, norm(attn): 9.0000, norm(output): 0.3125, norm(x): 0.3541, norm(y): 1.0003, norm:0.4182, tok/sec: 185956.43, flops:195.22, batch-reuse:1
@ 957 train 4.9418 , allloss: 4.9418, dt: 713.46ms, fracRes: 0.0554, norm(attn): 9.0000, norm(output): 0.3145, norm(x): 0.3588, norm(y): 0.9992, norm:0.3684, tok/sec: 183712.93, flops:192.86, batch-reuse:1
@ 958 train 4.9449 , allloss: 4.9449, dt: 708.68ms, fracRes: 0.0550, norm(attn): 9.0000, norm(output): 0.3145, norm(x): 0.3580, norm(y): 0.9951, norm:0.4006, tok/sec: 184951.39, flops:194.16, batch-reuse:1
@ 959 train 4.8262 , allloss: 4.8262, dt: 702.52ms, fracRes: 0.0559, norm(attn): 8.9375, norm(output): 0.3164, norm(x): 0.3588, norm(y): 0.9909, norm:0.3707, tok/sec: 186575.22, flops:195.87, batch-reuse:1
@ 960 train 4.9831 , allloss: 4.9831, dt: 702.85ms, fracRes: 0.0552, norm(attn): 8.8750, norm(output): 0.3105, norm(x): 0.3512, norm(y): 0.9824, norm:0.4470, tok/sec: 186486.36, flops:195.77, batch-reuse:1
@ 961 train 4.8866 , allloss: 4.8866, dt: 703.99ms, fracRes: 0.0557, norm(attn): 8.9375, norm(output): 0.3164, norm(x): 0.3552, norm(y): 0.9844, norm:1.4980, tok/sec: 186185.54, flops:195.46, batch-reuse:1
@ 962 train 4.9943 , allloss: 4.9943, dt: 715.08ms, fracRes: 0.0555, norm(attn): 9.1250, norm(output): 0.3184, norm(x): 0.3575, norm(y): 1.0015, norm:0.4499, tok/sec: 183296.05, flops:192.42, batch-reuse:1
@ 963 train 4.9635 , allloss: 4.9635, dt: 702.84ms, fracRes: 0.0551, norm(attn): 9.1875, norm(output): 0.3223, norm(x): 0.3617, norm(y): 1.0022, norm:0.3584, tok/sec: 186489.52, flops:195.78, batch-reuse:1
@ 964 train 4.9983 , allloss: 4.9983, dt: 727.77ms, fracRes: 0.0548, norm(attn): 9.3750, norm(output): 0.3281, norm(x): 0.3692, norm(y): 1.0024, norm:0.4868, tok/sec: 180101.78, flops:189.07, batch-reuse:1
@ 965 train 4.9923 , allloss: 4.9923, dt: 723.88ms, fracRes: 0.0551, norm(attn): 9.3750, norm(output): 0.3281, norm(x): 0.3672, norm(y): 1.0026, norm:0.5398, tok/sec: 181069.81, flops:190.09, batch-reuse:1
@ 966 train 4.9076 , allloss: 4.9076, dt: 713.54ms, fracRes: 0.0549, norm(attn): 9.5000, norm(output): 0.3340, norm(x): 0.3733, norm(y): 1.0027, norm:0.4146, tok/sec: 183692.98, flops:192.84, batch-reuse:1
@ 967 train 4.7679 , allloss: 4.7679, dt: 707.69ms, fracRes: 0.0568, norm(attn): 9.5000, norm(output): 0.3477, norm(x): 0.3895, norm(y): 1.0027, norm:0.6531, tok/sec: 185211.35, flops:194.44, batch-reuse:1
@ 968 train 5.0660 , allloss: 5.0660, dt: 709.91ms, fracRes: 0.0549, norm(attn): 9.6250, norm(output): 0.3320, norm(x): 0.3709, norm(y): 1.0027, norm:0.4962, tok/sec: 184632.68, flops:193.83, batch-reuse:1
@ 969 train 4.9453 , allloss: 4.9453, dt: 709.60ms, fracRes: 0.0551, norm(attn): 9.6875, norm(output): 0.3398, norm(x): 0.3812, norm(y): 1.0026, norm:0.4916, tok/sec: 184712.71, flops:193.91, batch-reuse:1
@ 970 train 4.9216 , allloss: 4.9216, dt: 709.77ms, fracRes: 0.0549, norm(attn): 9.6875, norm(output): 0.3320, norm(x): 0.3712, norm(y): 1.0025, norm:0.5595, tok/sec: 184668.03, flops:193.86, batch-reuse:1
@ 971 train 4.9861 , allloss: 4.9861, dt: 701.96ms, fracRes: 0.0552, norm(attn): 9.8125, norm(output): 0.3301, norm(x): 0.3703, norm(y): 1.0027, norm:0.6134, tok/sec: 186723.50, flops:196.02, batch-reuse:1
@ 972 train 4.9646 , allloss: 4.9646, dt: 701.88ms, fracRes: 0.0554, norm(attn): 9.8750, norm(output): 0.3340, norm(x): 0.3753, norm(y): 1.0027, norm:0.4419, tok/sec: 186743.99, flops:196.04, batch-reuse:1
@ 973 train 4.9721 , allloss: 4.9721, dt: 703.42ms, fracRes: 0.0556, norm(attn): 9.9375, norm(output): 0.3418, norm(x): 0.3826, norm(y): 1.0026, norm:0.4902, tok/sec: 186336.24, flops:195.62, batch-reuse:1
@ 974 train 4.9242 , allloss: 4.9242, dt: 700.53ms, fracRes: 0.0553, norm(attn): 10.0000, norm(output): 0.3301, norm(x): 0.3722, norm(y): 1.0028, norm:0.5573, tok/sec: 187105.25, flops:196.42, batch-reuse:1
@ 975 train 4.9691 , allloss: 4.9691, dt: 704.32ms, fracRes: 0.0551, norm(attn): 10.0000, norm(output): 0.3262, norm(x): 0.3660, norm(y): 1.0028, norm:0.4937, tok/sec: 186097.05, flops:195.37, batch-reuse:1
@ 976 train 4.8958 , allloss: 4.8958, dt: 695.56ms, fracRes: 0.0552, norm(attn): 10.0000, norm(output): 0.3262, norm(x): 0.3673, norm(y): 1.0028, norm:0.5496, tok/sec: 188440.26, flops:197.82, batch-reuse:1
@ 977 train 4.9235 , allloss: 4.9235, dt: 701.32ms, fracRes: 0.0557, norm(attn): 10.0625, norm(output): 0.3359, norm(x): 0.3751, norm(y): 1.0030, norm:0.6035, tok/sec: 186893.43, flops:196.20, batch-reuse:1
@ 978 train 4.9229 , allloss: 4.9229, dt: 704.61ms, fracRes: 0.0556, norm(attn): 10.1250, norm(output): 0.3418, norm(x): 0.3783, norm(y): 1.0030, norm:0.4119, tok/sec: 186020.73, flops:195.28, batch-reuse:1
@ 979 train 4.8344 , allloss: 4.8344, dt: 706.92ms, fracRes: 0.0553, norm(attn): 10.1250, norm(output): 0.3359, norm(x): 0.3759, norm(y): 1.0030, norm:0.5374, tok/sec: 185412.99, flops:194.65, batch-reuse:1
@ 980 train 4.8201 , allloss: 4.8201, dt: 700.13ms, fracRes: 0.0550, norm(attn): 10.1875, norm(output): 0.3320, norm(x): 0.3716, norm(y): 1.0030, norm:0.3914, tok/sec: 187209.99, flops:196.53, batch-reuse:1
@ 981 train 4.8213 , allloss: 4.8213, dt: 713.51ms, fracRes: 0.0555, norm(attn): 10.1875, norm(output): 0.3379, norm(x): 0.3783, norm(y): 1.0030, norm:0.5449, tok/sec: 183699.31, flops:192.85, batch-reuse:1
@ 982 train 4.8318 , allloss: 4.8318, dt: 707.35ms, fracRes: 0.0552, norm(attn): 10.3125, norm(output): 0.3398, norm(x): 0.3775, norm(y): 1.0030, norm:0.7329, tok/sec: 185301.25, flops:194.53, batch-reuse:1
@ 983 train 4.8928 , allloss: 4.8928, dt: 699.43ms, fracRes: 0.0555, norm(attn): 10.3125, norm(output): 0.3457, norm(x): 0.3872, norm(y): 1.0029, norm:0.5273, tok/sec: 187397.93, flops:196.73, batch-reuse:1
@ 984 train 4.8462 , allloss: 4.8462, dt: 695.80ms, fracRes: 0.0541, norm(attn): 10.3750, norm(output): 0.3359, norm(x): 0.3754, norm(y): 1.0030, norm:0.4789, tok/sec: 188375.44, flops:197.76, batch-reuse:1
@ 985 train 4.8783 , allloss: 4.8783, dt: 699.85ms, fracRes: 0.0540, norm(attn): 10.3750, norm(output): 0.3379, norm(x): 0.3772, norm(y): 1.0030, norm:0.4087, tok/sec: 187286.97, flops:196.61, batch-reuse:1
@ 986 train 4.9071 , allloss: 4.9071, dt: 710.07ms, fracRes: 0.0538, norm(attn): 10.3750, norm(output): 0.3418, norm(x): 0.3774, norm(y): 1.0029, norm:0.5305, tok/sec: 184590.65, flops:193.78, batch-reuse:1
@ 987 train 4.8102 , allloss: 4.8102, dt: 712.15ms, fracRes: 0.0530, norm(attn): 10.3750, norm(output): 0.3359, norm(x): 0.3725, norm(y): 1.0029, norm:0.3703, tok/sec: 184051.89, flops:193.22, batch-reuse:1
@ 988 train 4.9559 , allloss: 4.9559, dt: 702.31ms, fracRes: 0.0554, norm(attn): 10.3750, norm(output): 0.3340, norm(x): 0.3731, norm(y): 1.0029, norm:0.4676, tok/sec: 186630.07, flops:195.92, batch-reuse:1
@ 989 train 4.9383 , allloss: 4.9383, dt: 712.13ms, fracRes: 0.0560, norm(attn): 10.4375, norm(output): 0.3379, norm(x): 0.3746, norm(y): 1.0028, norm:0.3805, tok/sec: 184055.34, flops:193.22, batch-reuse:1
@ 990 train 4.8727 , allloss: 4.8727, dt: 713.77ms, fracRes: 0.0554, norm(attn): 10.3750, norm(output): 0.3379, norm(x): 0.3756, norm(y): 1.0028, norm:0.5412, tok/sec: 183632.18, flops:192.78, batch-reuse:1
@ 991 train 4.8530 , allloss: 4.8530, dt: 703.42ms, fracRes: 0.0553, norm(attn): 10.6250, norm(output): 0.3281, norm(x): 0.3680, norm(y): 1.0029, norm:0.5596, tok/sec: 186335.80, flops:195.62, batch-reuse:1
@ 992 train 4.9363 , allloss: 4.9363, dt: 705.48ms, fracRes: 0.0554, norm(attn): 10.6250, norm(output): 0.3281, norm(x): 0.3678, norm(y): 1.0028, norm:0.4222, tok/sec: 185790.20, flops:195.04, batch-reuse:1
@ 993 train 4.7919 , allloss: 4.7919, dt: 713.13ms, fracRes: 0.0554, norm(attn): 10.6250, norm(output): 0.3242, norm(x): 0.3686, norm(y): 1.0027, norm:0.5627, tok/sec: 183797.08, flops:192.95, batch-reuse:1
@ 994 train 4.8655 , allloss: 4.8655, dt: 706.00ms, fracRes: 0.0560, norm(attn): 10.6250, norm(output): 0.3281, norm(x): 0.3689, norm(y): 1.0028, norm:0.4335, tok/sec: 185653.36, flops:194.90, batch-reuse:1
@ 995 train 4.8164 , allloss: 4.8164, dt: 702.42ms, fracRes: 0.0559, norm(attn): 10.6250, norm(output): 0.3242, norm(x): 0.3674, norm(y): 1.0027, norm:0.4680, tok/sec: 186599.66, flops:195.89, batch-reuse:1
@ 996 train 4.7160 , allloss: 4.7160, dt: 710.44ms, fracRes: 0.0559, norm(attn): 10.5625, norm(output): 0.3203, norm(x): 0.3651, norm(y): 1.0025, norm:0.6107, tok/sec: 184495.00, flops:193.68, batch-reuse:1
@ 997 train 4.8607 , allloss: 4.8607, dt: 709.34ms, fracRes: 0.0556, norm(attn): 10.6250, norm(output): 0.3242, norm(x): 0.3683, norm(y): 1.0026, norm:0.4555, tok/sec: 184781.31, flops:193.98, batch-reuse:1
@ 998 train 5.0141 , allloss: 5.0141, dt: 702.01ms, fracRes: 0.0556, norm(attn): 10.6875, norm(output): 0.3281, norm(x): 0.3714, norm(y): 1.0028, norm:0.4663, tok/sec: 186708.73, flops:196.01, batch-reuse:1
@ 999 train 4.8084 , allloss: 4.8084, dt: 707.72ms, fracRes: 0.0548, norm(attn): 10.8750, norm(output): 0.3281, norm(x): 0.3671, norm(y): 1.0029, norm:0.3922, tok/sec: 185202.12, flops:194.43, batch-reuse:1
@ 1000 train 4.7967 , allloss: 4.7967, dt: 704.55ms, fracRes: 0.0547, norm(attn): 10.8750, norm(output): 0.3340, norm(x): 0.3737, norm(y): 1.0028, norm:0.4261, tok/sec: 186037.35, flops:195.30, batch-reuse:1
@ 1001 train 4.9319 , allloss: 4.9319, dt: 701.84ms, fracRes: 0.0549, norm(attn): 10.8750, norm(output): 0.3320, norm(x): 0.3736, norm(y): 1.0028, norm:0.4058, tok/sec: 186754.90, flops:196.06, batch-reuse:1
@ 1002 train 4.8741 , allloss: 4.8741, dt: 702.21ms, fracRes: 0.0544, norm(attn): 10.8750, norm(output): 0.3320, norm(x): 0.3718, norm(y): 1.0027, norm:0.4122, tok/sec: 186655.79, flops:195.95, batch-reuse:1
@ 1003 train 4.9126 , allloss: 4.9126, dt: 713.71ms, fracRes: 0.0550, norm(attn): 10.8750, norm(output): 0.3320, norm(x): 0.3710, norm(y): 1.0027, norm:0.3897, tok/sec: 183648.19, flops:192.79, batch-reuse:1
@ 1004 train 4.8070 , allloss: 4.8070, dt: 714.14ms, fracRes: 0.0551, norm(attn): 10.8750, norm(output): 0.3281, norm(x): 0.3703, norm(y): 1.0026, norm:0.3883, tok/sec: 183538.01, flops:192.68, batch-reuse:1
@ 1005 train 4.8857 , allloss: 4.8857, dt: 701.45ms, fracRes: 0.0552, norm(attn): 10.6875, norm(output): 0.3320, norm(x): 0.3711, norm(y): 1.0025, norm:0.4526, tok/sec: 186859.07, flops:196.16, batch-reuse:1
@ 1006 train 4.9010 , allloss: 4.9010, dt: 693.26ms, fracRes: 0.0554, norm(attn): 10.7500, norm(output): 0.3281, norm(x): 0.3711, norm(y): 1.0023, norm:0.3481, tok/sec: 189066.68, flops:198.48, batch-reuse:1
@ 1007 train 4.8638 , allloss: 4.8638, dt: 716.08ms, fracRes: 0.0551, norm(attn): 10.8750, norm(output): 0.3242, norm(x): 0.3670, norm(y): 1.0024, norm:0.3891, tok/sec: 183040.77, flops:192.16, batch-reuse:1
@ 1008 train 4.8487 , allloss: 4.8487, dt: 715.55ms, fracRes: 0.0553, norm(attn): 10.8125, norm(output): 0.3262, norm(x): 0.3700, norm(y): 1.0025, norm:0.3589, tok/sec: 183175.80, flops:192.30, batch-reuse:1
@ 1009 train 4.8187 , allloss: 4.8187, dt: 715.22ms, fracRes: 0.0546, norm(attn): 10.9375, norm(output): 0.3359, norm(x): 0.3761, norm(y): 1.0026, norm:0.4413, tok/sec: 183260.06, flops:192.39, batch-reuse:1
@ 1010 train 4.8954 , allloss: 4.8954, dt: 719.51ms, fracRes: 0.0540, norm(attn): 10.9375, norm(output): 0.3320, norm(x): 0.3672, norm(y): 1.0027, norm:0.3838, tok/sec: 182169.12, flops:191.24, batch-reuse:1
@ 1011 train 4.8291 , allloss: 4.8291, dt: 719.62ms, fracRes: 0.0537, norm(attn): 10.8750, norm(output): 0.3262, norm(x): 0.3661, norm(y): 1.0026, norm:0.3674, tok/sec: 182139.49, flops:191.21, batch-reuse:1
@ 1012 train 4.8679 , allloss: 4.8679, dt: 707.12ms, fracRes: 0.0538, norm(attn): 10.8750, norm(output): 0.3262, norm(x): 0.3666, norm(y): 1.0026, norm:0.4114, tok/sec: 185360.66, flops:194.59, batch-reuse:1
@ 1013 train 4.8808 , allloss: 4.8808, dt: 717.43ms, fracRes: 0.0537, norm(attn): 10.8750, norm(output): 0.3203, norm(x): 0.3605, norm(y): 1.0025, norm:0.3787, tok/sec: 182697.69, flops:191.80, batch-reuse:1
@ 1014 train 4.8545 , allloss: 4.8545, dt: 717.93ms, fracRes: 0.0535, norm(attn): 10.8750, norm(output): 0.3242, norm(x): 0.3660, norm(y): 1.0024, norm:0.4616, tok/sec: 182570.58, flops:191.66, batch-reuse:1
@ 1015 train 4.9284 , allloss: 4.9284, dt: 721.32ms, fracRes: 0.0537, norm(attn): 10.8125, norm(output): 0.3262, norm(x): 0.3690, norm(y): 1.0022, norm:0.4807, tok/sec: 181710.91, flops:190.76, batch-reuse:1
@ 1016 train 4.9819 , allloss: 4.9819, dt: 693.82ms, fracRes: 0.0542, norm(attn): 10.6875, norm(output): 0.3262, norm(x): 0.3688, norm(y): 1.0020, norm:0.4136, tok/sec: 188912.45, flops:198.32, batch-reuse:1
@ 1017 train 4.8213 , allloss: 4.8213, dt: 707.60ms, fracRes: 0.0545, norm(attn): 10.6875, norm(output): 0.3184, norm(x): 0.3617, norm(y): 1.0020, norm:0.4021, tok/sec: 185234.94, flops:194.46, batch-reuse:1
@ 1018 train 4.9192 , allloss: 4.9192, dt: 709.67ms, fracRes: 0.0549, norm(attn): 10.6875, norm(output): 0.3242, norm(x): 0.3668, norm(y): 1.0020, norm:0.4132, tok/sec: 184693.10, flops:193.89, batch-reuse:1
@ 1019 train 4.8539 , allloss: 4.8539, dt: 693.56ms, fracRes: 0.0547, norm(attn): 10.8125, norm(output): 0.3223, norm(x): 0.3643, norm(y): 1.0022, norm:0.3531, tok/sec: 188984.21, flops:198.40, batch-reuse:1
@ 1020 train 4.7982 , allloss: 4.7982, dt: 700.49ms, fracRes: 0.0549, norm(attn): 10.8750, norm(output): 0.3164, norm(x): 0.3618, norm(y): 1.0023, norm:0.3580, tok/sec: 187113.59, flops:196.43, batch-reuse:1
@ 1021 train 4.7875 , allloss: 4.7875, dt: 709.53ms, fracRes: 0.0551, norm(attn): 10.8750, norm(output): 0.3184, norm(x): 0.3609, norm(y): 1.0024, norm:0.3938, tok/sec: 184731.02, flops:193.93, batch-reuse:1
@ 1022 train 4.7057 , allloss: 4.7057, dt: 703.43ms, fracRes: 0.0551, norm(attn): 10.8750, norm(output): 0.3203, norm(x): 0.3591, norm(y): 1.0025, norm:0.3452, tok/sec: 186331.37, flops:195.61, batch-reuse:1
@ 1023 train 4.7597 , allloss: 4.7597, dt: 711.98ms, fracRes: 0.0549, norm(attn): 10.8125, norm(output): 0.3242, norm(x): 0.3643, norm(y): 1.0025, norm:0.3738, tok/sec: 184094.72, flops:193.26, batch-reuse:1
@ 1024 train 4.7506 , allloss: 4.7506, dt: 705.87ms, fracRes: 0.0545, norm(attn): 10.8750, norm(output): 0.3164, norm(x): 0.3599, norm(y): 1.0025, norm:0.3472, tok/sec: 185688.10, flops:194.94, batch-reuse:1
@ 1025 train 4.8001 , allloss: 4.8001, dt: 719.10ms, fracRes: 0.0545, norm(attn): 10.6875, norm(output): 0.3203, norm(x): 0.3591, norm(y): 1.0025, norm:0.4327, tok/sec: 182271.80, flops:191.35, batch-reuse:1
@ 1026 train 4.8122 , allloss: 4.8122, dt: 699.18ms, fracRes: 0.0551, norm(attn): 10.6875, norm(output): 0.3262, norm(x): 0.3674, norm(y): 1.0023, norm:0.4041, tok/sec: 187464.26, flops:196.80, batch-reuse:1
@ 1027 train 4.8355 , allloss: 4.8355, dt: 701.85ms, fracRes: 0.0547, norm(attn): 10.6875, norm(output): 0.3223, norm(x): 0.3650, norm(y): 1.0021, norm:0.4311, tok/sec: 186751.22, flops:196.05, batch-reuse:1
@ 1028 train 4.7897 , allloss: 4.7897, dt: 713.14ms, fracRes: 0.0544, norm(attn): 10.6875, norm(output): 0.3184, norm(x): 0.3578, norm(y): 1.0019, norm:0.3886, tok/sec: 183794.56, flops:192.95, batch-reuse:1
@ 1029 train 4.8018 , allloss: 4.8018, dt: 707.54ms, fracRes: 0.0544, norm(attn): 10.6875, norm(output): 0.3203, norm(x): 0.3598, norm(y): 1.0016, norm:0.3536, tok/sec: 185250.98, flops:194.48, batch-reuse:1
@ 1030 train 4.7586 , allloss: 4.7586, dt: 707.23ms, fracRes: 0.0551, norm(attn): 10.6875, norm(output): 0.3203, norm(x): 0.3626, norm(y): 1.0014, norm:0.4066, tok/sec: 185331.04, flops:194.56, batch-reuse:1
@ 1031 train 4.8338 , allloss: 4.8338, dt: 704.95ms, fracRes: 0.0548, norm(attn): 10.6250, norm(output): 0.3164, norm(x): 0.3587, norm(y): 1.0014, norm:0.3954, tok/sec: 185931.14, flops:195.19, batch-reuse:1
@ 1032 train 4.7451 , allloss: 4.7451, dt: 714.31ms, fracRes: 0.0546, norm(attn): 10.5000, norm(output): 0.3145, norm(x): 0.3543, norm(y): 1.0012, norm:0.3748, tok/sec: 183495.56, flops:192.63, batch-reuse:1
@ 1033 train 4.8038 , allloss: 4.8038, dt: 712.72ms, fracRes: 0.0542, norm(attn): 10.5625, norm(output): 0.3203, norm(x): 0.3602, norm(y): 1.0009, norm:0.4065, tok/sec: 183903.08, flops:193.06, batch-reuse:1
@ 1034 train 4.7781 , allloss: 4.7781, dt: 713.06ms, fracRes: 0.0548, norm(attn): 10.5625, norm(output): 0.3262, norm(x): 0.3661, norm(y): 1.0014, norm:0.4544, tok/sec: 183816.68, flops:192.97, batch-reuse:1
@ 1035 train 4.7683 , allloss: 4.7683, dt: 714.69ms, fracRes: 0.0548, norm(attn): 10.6250, norm(output): 0.3223, norm(x): 0.3618, norm(y): 1.0015, norm:0.4859, tok/sec: 183397.19, flops:192.53, batch-reuse:1
@ 1036 train 4.8129 , allloss: 4.8129, dt: 694.79ms, fracRes: 0.0552, norm(attn): 10.6250, norm(output): 0.3320, norm(x): 0.3716, norm(y): 1.0017, norm:0.3633, tok/sec: 188650.68, flops:198.05, batch-reuse:1
@ 1037 train 4.7781 , allloss: 4.7781, dt: 714.28ms, fracRes: 0.0554, norm(attn): 10.6250, norm(output): 0.3145, norm(x): 0.3544, norm(y): 1.0021, norm:0.5647, tok/sec: 183502.85, flops:192.64, batch-reuse:1
@ 1038 train 4.7372 , allloss: 4.7372, dt: 694.56ms, fracRes: 0.0551, norm(attn): 10.6875, norm(output): 0.3184, norm(x): 0.3595, norm(y): 1.0020, norm:0.5522, tok/sec: 188711.94, flops:198.11, batch-reuse:1
@ 1039 train 4.7920 , allloss: 4.7920, dt: 704.80ms, fracRes: 0.0550, norm(attn): 10.6250, norm(output): 0.3262, norm(x): 0.3660, norm(y): 1.0022, norm:0.4007, tok/sec: 185969.82, flops:195.23, batch-reuse:1
@ 1040 train 4.7289 , allloss: 4.7289, dt: 693.97ms, fracRes: 0.0545, norm(attn): 10.6250, norm(output): 0.3184, norm(x): 0.3563, norm(y): 1.0022, norm:0.5936, tok/sec: 188873.64, flops:198.28, batch-reuse:1
@ 1041 train 4.8269 , allloss: 4.8269, dt: 694.77ms, fracRes: 0.0543, norm(attn): 10.6250, norm(output): 0.3203, norm(x): 0.3649, norm(y): 1.0019, norm:0.6553, tok/sec: 188655.08, flops:198.05, batch-reuse:1
@ 1042 train 4.7093 , allloss: 4.7093, dt: 708.81ms, fracRes: 0.0544, norm(attn): 10.6250, norm(output): 0.3164, norm(x): 0.3580, norm(y): 1.0020, norm:0.4526, tok/sec: 184917.18, flops:194.13, batch-reuse:1
@ 1043 train 4.8026 , allloss: 4.8026, dt: 708.45ms, fracRes: 0.0550, norm(attn): 10.6250, norm(output): 0.3184, norm(x): 0.3595, norm(y): 1.0019, norm:0.5462, tok/sec: 185011.09, flops:194.22, batch-reuse:1
@ 1044 train 4.7559 , allloss: 4.7559, dt: 698.26ms, fracRes: 0.0554, norm(attn): 10.6250, norm(output): 0.3125, norm(x): 0.3540, norm(y): 1.0018, norm:0.5155, tok/sec: 187712.23, flops:197.06, batch-reuse:1
@ 1045 train 4.8233 , allloss: 4.8233, dt: 711.33ms, fracRes: 0.0554, norm(attn): 10.3750, norm(output): 0.3184, norm(x): 0.3600, norm(y): 1.0016, norm:0.4047, tok/sec: 184262.00, flops:193.44, batch-reuse:1
@ 1046 train 4.8227 , allloss: 4.8227, dt: 704.65ms, fracRes: 0.0556, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3534, norm(y): 1.0015, norm:0.4557, tok/sec: 186010.91, flops:195.27, batch-reuse:1
@ 1047 train 4.7319 , allloss: 4.7319, dt: 704.74ms, fracRes: 0.0557, norm(attn): 10.3750, norm(output): 0.3301, norm(x): 0.3705, norm(y): 1.0015, norm:0.3850, tok/sec: 185987.57, flops:195.25, batch-reuse:1
@ 1048 train 4.7601 , allloss: 4.7601, dt: 714.14ms, fracRes: 0.0557, norm(attn): 10.5000, norm(output): 0.3203, norm(x): 0.3594, norm(y): 1.0014, norm:0.4050, tok/sec: 183537.22, flops:192.68, batch-reuse:1
@ 1049 train 4.7051 , allloss: 4.7051, dt: 708.87ms, fracRes: 0.0551, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3510, norm(y): 1.0015, norm:0.3805, tok/sec: 184901.44, flops:194.11, batch-reuse:1
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0051,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.7773,     0.2207,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.1484,     0.6055,     0.2422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1377,     0.3574,     0.2637,     0.0327,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0197,     0.0649,     0.2080,     0.0284,     0.5312,     0.1475,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0128,     0.2295,     0.0610,     0.0093,     0.0776,     0.5547,     0.0535,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0996,     0.0762,     0.0275,     0.0042,     0.0447,     0.6016,     0.1309,     0.0159,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0172,     0.0571,     0.0315,     0.0079,     0.2178,     0.5000,     0.0986,     0.0137,     0.0562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0047,     0.0884,     0.2656,     0.0483,     0.0625,     0.0540,     0.1094,     0.2148,     0.0762,     0.0757,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0175,     0.0645,     0.0233,     0.0042,     0.0674,     0.4746,     0.0547,     0.0127,     0.1377,     0.0427,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1069,     0.0496,     0.0559,     0.0154,     0.0242,     0.0459,     0.2715,     0.0654,     0.1670,     0.0284,     0.1709,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.0579,     0.0198,     0.0062,     0.0649,     0.3867,     0.0669,     0.0178,     0.1260,     0.0347,     0.0491,     0.0125,     0.0133,     0.0000,     0.0000],
        [    0.0330,     0.0292,     0.0150,     0.0018,     0.1318,     0.4922,     0.0728,     0.0079,     0.0615,     0.0171,     0.0635,     0.0072,     0.0067,     0.0608,     0.0000],
        [    0.0010,     0.0283,     0.0476,     0.0479,     0.0718,     0.0192,     0.0583,     0.0669,     0.1309,     0.0796,     0.0781,     0.1455,     0.0217,     0.1797,     0.0237]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0010,     -0.5703,     -0.5586,     -0.6484,     -0.5234,     -0.3555,     -0.4863,     -0.5234,     -0.4805,     -0.6016,     -0.5938,     -0.6445,     -0.3496,     -0.4648,     -0.5664],
        [    -0.0021,      5.2812,      4.2812,      1.7344,      3.3750,      3.5781,      3.3750,      1.4141,      3.9688,      3.2969,      3.7344,      2.0938,     -0.0044,      4.0312,      2.7500],
        [     0.0063,      7.4375,      6.1875,      5.8438,      4.5625,      3.2188,      4.5000,      5.6875,      5.4375,      5.0938,      3.8906,      6.3438,      3.3594,      5.0938,      5.0938],
        [     0.0066,      3.2969,      4.6875,      3.7812,      3.6562,      1.5234,      2.9844,      4.3750,      2.2656,      3.6406,      2.6250,      5.1875,      2.7969,      2.1094,      3.3750],
        [     0.0132,      0.9648,      0.6641,     -1.4219,      0.4375,      4.2188,      1.9062,      0.1191,      2.1250,      0.1152,      0.3184,     -0.8867,     -0.3613,      2.2812,     -0.4238],
        [    -0.0181,      1.1797,      2.3438,      0.3555,      3.2812,      2.0000,      2.0469,      0.8711,      1.8203,      1.2734,      1.2266,      0.8398,     -0.5273,      2.1719,      0.7812],
        [     0.0151,      2.8906,      1.5703,     -0.3086,      1.8203,      3.7812,      1.4375,     -0.0962,      2.3281,      0.8594,      1.7109,      0.0006,     -0.4766,      2.9688,      1.3906],
        [    -0.0052,     -0.2754,     -1.2969,     -3.1719,     -0.8086,      1.7891,      0.2695,     -1.8438,      0.0237,     -1.1406,     -0.7188,     -2.3906,     -1.8281,      0.5273,     -1.1562],
        [     0.0021,      1.2031,      0.6055,     -0.7773,      2.5469,      3.3750,      1.7500,     -0.2236,      1.1875,      0.7461,      1.6875,     -0.0177,     -0.6211,      1.6953,      0.8789],
        [    -0.0045,      2.9375,      4.0312,      2.3281,      2.5938,      2.4375,      3.1562,      3.8281,      2.7812,      2.7812,      1.6016,      3.6719,      1.5625,      2.7344,      1.9844],
        [     0.0115,      1.3125,      0.2988,     -1.4141,      1.3594,      3.3125,      1.1484,     -0.3086,      2.0781,      0.9062,      1.7734,     -0.1582,     -0.9336,      2.5000,      0.4395],
        [     0.0182,      6.1875,      5.4375,      5.5625,      4.2500,      4.7188,      5.3438,      7.1250,      5.7188,      6.6562,      4.8750,      6.6562,      4.7812,      5.8438,      5.0625],
        [    -0.0038,     -0.9258,     -2.0000,     -3.1562,     -0.8125,      0.9727,     -0.7773,     -2.0938,     -0.1475,     -1.4375,     -1.0859,     -2.4531,     -2.3906,      0.1885,     -1.6406],
        [    -0.0107,     -0.1348,     -0.8008,     -2.9062,      1.3672,      2.6875,      0.7812,     -1.4453,      0.6094,     -0.6719,      0.6406,     -1.5312,     -1.6094,      0.6016,     -0.7734],
        [     0.0173,      3.3125,      3.8281,      3.8438,      4.2500,      2.9219,      4.0312,      4.1562,      4.8438,      4.3438,      4.3438,      4.9375,      3.0469,      5.1562,      3.1406]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.1696],
        [0.1010],
        [0.1388],
        [0.2441],
        [0.2133],
        [0.1619],
        [0.2971],
        [0.1948],
        [0.1270],
        [0.1821],
        [0.0562],
        [0.2060],
        [0.1505],
        [0.0769]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.8711,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0811,     0.0176,     0.9023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0101,     0.0859,     0.0245,     0.8789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0065,     0.0026,     0.0114,     0.4043,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0615,     0.0096,     0.0371,     0.1885,     0.1885,     0.5156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0009,     0.0007,     0.0166,     0.0209,     0.0009,     0.0197,     0.9414,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0065,     0.0337,     0.0107,     0.0039,     0.0142,     0.0214,     0.5781,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0282,     0.0152,     0.0066,     0.0151,     0.0021,     0.0002,     0.0085,     0.0713,     0.0928,     0.7617,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0006,     0.0005,     0.9453,     0.0537,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0124,     0.0046,     0.5156,     0.0129,     0.0037,     0.0305,     0.3086,     0.0825,     0.0016,     0.0146,     0.0090,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.0002,     0.0002,     0.0000,     0.0005,     0.0150,     0.7773,     0.0077,     0.0064,     0.0000,     0.1934,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0001,     0.0015,     0.0022,     0.9492,     0.0044,     0.0004,     0.0322,     0.0110,     0.0000],
        [    0.0159,     0.0074,     0.0130,     0.0029,     0.0003,     0.0003,     0.0004,     0.0056,     0.0070,     0.3652,     0.0270,     0.0242,     0.0986,     0.0476,     0.3848]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.0149,      0.0299,      0.0017,     -0.0074,      0.0029,      0.0009,      0.0164,     -0.0058,      0.0149,     -0.0121,     -0.0037,     -0.0067,     -0.0250,      0.0133],
        [     0.0137,      8.4375,     12.4375,      7.9062,      4.7500,      3.6875,      6.0000,      7.0000,      0.1875,      2.3438,      1.1797,     -0.8906,      3.8906,     -1.0938,      1.0703],
        [     0.0032,      7.8750,      5.9688,     10.5625,      9.1250,      3.7344,      6.3750,      8.4375,      4.6562,      1.0391,      3.7188,     -3.1719,      2.5312,      2.1250,     -0.7422],
        [     0.0120,      8.5000,      6.9375,     10.8750,     12.0000,      5.3125,      7.9688,      9.5625,      9.0000,      1.1797,      4.2812,     -2.0156,      4.3125,      5.0000,      1.5781],
        [     0.0280,      5.5625,      7.6875,      6.4375,     10.0000,     12.5625,     10.8750,      9.6250,      2.1406,      4.7812,      0.2578,      0.9727,     -0.1670,     -2.1406,      3.2031],
        [     0.0309,      5.7188,      4.8125,      6.2812,      9.8750,     10.1875,     11.2500,     11.4375,      9.1875,      7.1250,      4.0625,      0.6328,      3.6250,      4.8125,      5.0625],
        [     0.0265,      5.5938,      3.7344,      5.0625,      6.7188,      6.6875,      7.7188,      8.6875,      7.5625,      2.0469,     -0.3184,      0.9258,      0.8555,      2.6875,      1.6328],
        [     0.0479,      4.5625,      4.3750,      7.5000,      7.7188,      4.5312,      7.6562,     11.5000,     12.8125,      8.0625,      6.4688,      1.6562,      8.3125,      9.8125,      7.1875],
        [     0.0515,      1.7109,      3.3594,      2.2188,      1.2031,      2.5000,      2.9062,      6.1875,      5.6562,     11.0625,      5.0938,      1.9141,      6.3125,      4.9062,      8.5000],
        [     0.0233,     -0.5977,     -1.4297,     -0.6016,     -2.5938,     -4.8125,     -1.1719,      0.9531,      1.2109,      3.3125,      7.2500,     -0.8984,      2.1875,      1.8125,      1.0469],
        [     0.0253,     -1.8438,     -0.7773,     -4.1562,     -5.8750,     -3.1562,     -1.9453,      0.2793,     -0.0337,      7.5938,      4.7188,      4.7188,      4.4062,      2.9219,      6.6250],
        [     0.0132,      1.8281,      0.8320,      5.5625,      1.8672,      0.6328,      2.7344,      5.0312,      3.7188,     -0.2363,      2.0000,      1.5078,      5.5625,      4.4062,     -0.5625],
        [     0.0403,      2.8125,      0.9375,      4.2500,      3.8281,      1.5234,      5.0312,      8.3750,     12.3125,      7.7188,      7.5312,      1.9375,     10.9375,     12.8125,      8.8125],
        [     0.0442,     -0.2383,      1.6016,     -0.3242,     -1.1875,      0.4922,      0.8594,      4.1562,      4.5312,     10.6250,      5.2500,      2.8594,      7.2500,      6.1562,      9.3750],
        [     0.0006,     -0.7578,     -0.2002,     -1.7109,     -3.8438,     -4.0312,     -3.6719,     -1.0469,     -0.8203,      3.1406,      0.5312,      0.4238,      1.8281,      1.1016,      3.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4617],
        [0.2469],
        [0.4190],
        [0.4139],
        [0.4719],
        [0.2688],
        [0.2255],
        [0.2988],
        [0.3148],
        [0.2764],
        [0.2317],
        [0.1420],
        [0.2425],
        [0.1489]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8945,     0.1069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.5430,     0.2656,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0142,     0.0001,     0.0078,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0815,     0.3398,     0.2012,     0.0371,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0018,     0.0000,     0.0005,     0.0096,     0.0026,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.0027,     0.0045,     0.2715,     0.0047,     0.0581,     0.6562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.5078,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0020,     0.0040,     0.0297,     0.0001,     0.0894,     0.0027,     0.7969,     0.0732,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0023,     0.0000,     0.0025,     0.0281,     0.9648,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0007,     0.0004,     0.0128,     0.0000,     0.0008,     0.0002,     0.8008,     0.0142,     0.0031,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0038,     0.0166,     0.0076,     0.1011,     0.0056,     0.0248,     0.1865,     0.5508,     0.0381,     0.0136,     0.0272,     0.0265,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0002,     0.0938,     0.5156,     0.0000,     0.0000,     0.0004,     0.0002,     0.3906,     0.0000,     0.0000],
        [    0.0002,     0.0045,     0.0026,     0.0289,     0.0000,     0.0137,     0.0002,     0.3809,     0.0415,     0.0067,     0.0771,     0.0140,     0.3379,     0.0923,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0013,     0.0000,     0.0001,     0.0001,     0.6758,     0.0002,     0.0000,     0.0015,     0.0002,     0.2432,     0.0004,     0.0771]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0010,      0.0028,      0.0282,      0.0028,      0.0405,      0.0562,      0.0586,      0.0223,     -0.0034,      0.0089,      0.0219,      0.0535,      0.0146,      0.0227],
        [     0.0297,     -2.0938,     -0.0608,     -1.5469,      0.0073,     -0.2461,      4.7500,      1.9453,     -2.4062,     -0.6484,      1.5703,      0.5352,      4.3438,     -1.3984,      4.6875],
        [     0.0105,     -0.7031,     -1.0234,      2.7344,      0.8164,      5.9688,     10.2500,      7.3750,      1.2891,     -1.7812,     -1.2656,      2.0156,      5.4688,     -0.1602,      1.2344],
        [     0.0160,     -4.5625,     -0.5859,      4.2500,     -0.0757,      6.2812,     13.3125,     11.2500,      0.2910,      0.4395,      3.7188,      3.1250,      9.8125,     -0.2002,      9.0625],
        [    -0.0035,      1.4219,      0.8984,     -0.7930,      1.4219,     -0.2031,     -4.0312,     -3.6719,      1.7656,      1.0625,     -1.4531,     -1.2656,     -4.0625,      0.5625,     -4.0938],
        [     0.0383,     -7.0625,     -1.1641,      1.6953,      0.3691,      6.3125,     14.6875,      9.2500,     -2.1094,     -0.5117,      3.0000,      2.4531,     10.3750,     -2.0625,      8.3125],
        [    -0.0032,      0.1875,      0.6719,      4.7812,      0.7344,      3.2500,      5.6562,      7.0000,      2.5156,      1.9219,      2.4062,      2.8750,      5.3438,      1.7188,      5.3438],
        [     0.0110,     -4.6562,     -0.7422,      6.2188,     -0.4609,      8.1250,     15.8750,     15.8750,      1.9219,      1.5859,      5.6875,      4.6875,     13.8750,      1.5312,     11.9375],
        [    -0.0175,      0.9922,      1.7109,      3.7031,     -1.7969,      4.8125,      1.3125,      7.0000,      4.6250,      2.7500,      4.6875,      3.2031,      6.4062,      4.5000,      4.9062],
        [    -0.0074,      0.0933,     -0.1357,      4.7188,     -0.8359,      4.8125,      7.2500,     10.7500,      3.5000,      0.6133,      3.8125,      3.7031,      9.0625,      3.3438,      6.1875],
        [    -0.0242,      2.4844,      2.0469,      5.4062,     -2.4219,      2.6719,      1.1484,      9.5000,      5.5000,      3.9688,      7.9375,      4.7500,      9.2500,      6.7812,      9.3125],
        [    -0.0066,      1.4609,      0.6836,      3.2656,      0.3691,      1.8672,      3.8750,      4.9688,      2.2969,      1.2656,      1.9531,      1.9297,      3.3281,      2.2812,      3.4375],
        [     0.0067,     -1.8203,     -0.3672,      5.0000,     -1.0938,      4.8438,     11.2500,     12.9375,      1.3594,      1.4375,      5.8125,      4.8438,     12.6875,      2.4375,     11.1875],
        [    -0.0275,      2.8594,      2.3125,      4.7188,     -2.5938,      3.9844,     -0.3652,      7.3125,      5.0938,      3.2500,      5.7188,      4.0000,      7.1875,      5.8750,      6.1562],
        [    -0.0206,      1.8828,      1.9141,      7.5938,     -2.6875,      5.3750,      5.3438,     13.8125,      5.4688,      3.3438,      7.7188,      5.5938,     12.8125,      6.2812,     11.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.3289],
        [    0.2562],
        [    0.0985],
        [    0.0408],
        [    0.0214],
        [    0.0857],
        [    0.0884],
        [    0.0319],
        [    0.0090],
        [    0.0007],
        [    0.0969],
        [    0.0608],
        [    0.0026],
        [    0.0871]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9375,     0.0339,     0.0031,     0.0065,     0.0205,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0098,     0.1123,     0.7773,     0.0986,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0036,     0.0001,     0.0001,     0.0002,     0.0002,     0.0001,     0.0006,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,     -0.2988,     -0.4824,     -0.4648,     -0.3652,     -0.3281,     -0.4062,     -0.3711,     -0.4141,     -0.2734,     -0.3652,     -0.4922,     -0.4277,     -0.4961,     -0.5859],
        [     0.0014,    -12.2500,    -19.2500,    -18.1250,    -13.6250,    -13.3125,    -16.0000,    -13.9375,    -15.5000,     -9.8750,    -13.7500,    -18.6250,    -16.3750,    -19.3750,    -23.0000],
        [     0.0068,    -17.7500,    -28.8750,    -26.3750,    -20.3750,    -18.2500,    -23.3750,    -20.6250,    -23.0000,    -14.6250,    -19.6250,    -28.3750,    -23.5000,    -27.3750,    -32.7500],
        [     0.0101,    -14.9375,    -24.7500,    -22.5000,    -17.6250,    -18.2500,    -20.8750,    -17.1250,    -19.5000,    -13.5625,    -17.7500,    -24.0000,    -20.1250,    -24.2500,    -30.5000],
        [     0.0035,     -3.3125,     -5.7188,     -4.9688,     -3.8125,     -5.1250,     -4.8125,     -4.2188,     -5.4062,     -3.2656,     -4.1250,     -5.1562,     -5.0000,     -6.0625,     -6.9688],
        [     0.0095,      5.3438,      7.7812,      9.6875,      7.6562,      3.4062,      7.9375,      7.9062,      6.7188,      4.8750,      6.0000,      8.5625,      7.6875,      7.4062,      8.1250],
        [     0.0032,    -12.4375,    -18.8750,    -16.8750,    -14.6875,    -13.6250,    -16.0000,    -15.8125,    -16.0000,    -10.9375,    -14.4375,    -18.6250,    -18.1250,    -19.3750,    -22.5000],
        [     0.0061,     -7.6875,    -12.0000,    -10.1875,     -8.3125,    -10.5625,    -10.0000,     -9.0625,     -9.6875,     -5.9062,     -8.8125,    -11.6875,    -10.3125,    -12.0000,    -15.0000],
        [    -0.0029,     -5.6250,     -9.7500,     -9.5625,     -8.4375,     -8.4375,     -9.6250,     -7.4688,    -10.5625,     -5.6562,     -7.7500,    -10.3125,     -8.7500,    -11.3750,    -12.0000],
        [     0.0104,    -11.2500,    -18.5000,    -16.6250,    -12.6250,    -12.0000,    -14.6875,    -12.7500,    -14.5000,     -9.5000,    -13.0625,    -18.1250,    -14.8750,    -17.8750,    -21.6250],
        [    -0.0058,    -20.3750,    -32.2500,    -31.3750,    -25.0000,    -22.0000,    -27.8750,    -26.0000,    -28.5000,    -18.2500,    -23.6250,    -33.0000,    -29.5000,    -33.0000,    -37.7500],
        [     0.0045,    -15.2500,    -25.1250,    -23.6250,    -18.7500,    -16.0000,    -20.5000,    -17.0000,    -20.5000,    -12.5000,    -17.1250,    -24.1250,    -19.8750,    -24.0000,    -28.0000],
        [    -0.0054,    -17.2500,    -26.6250,    -25.5000,    -20.6250,    -20.2500,    -22.7500,    -21.5000,    -23.3750,    -14.3125,    -19.5000,    -27.1250,    -23.8750,    -26.7500,    -31.0000],
        [    -0.0052,    -19.1250,    -30.5000,    -29.6250,    -24.1250,    -21.5000,    -26.8750,    -23.1250,    -27.3750,    -16.7500,    -22.5000,    -30.7500,    -26.3750,    -31.5000,    -35.5000],
        [     0.0122,    -21.7500,    -35.2500,    -32.5000,    -25.0000,    -22.0000,    -28.2500,    -24.1250,    -28.7500,    -17.8750,    -24.5000,    -34.7500,    -28.2500,    -34.5000,    -40.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7746],
        [0.7202],
        [0.6503],
        [0.6497],
        [0.5292],
        [0.6791],
        [0.5920],
        [0.6559],
        [0.5996],
        [0.6897],
        [0.6619],
        [0.6436],
        [0.6811],
        [0.6729]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0157,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1357,     0.0481,     0.8164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0427,     0.5156,     0.4395,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0308,     0.0156,     0.0081,     0.0310,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0752,     0.2695,     0.2598,     0.0011,     0.3926,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3340,     0.1973,     0.0033,     0.0095,     0.0007,     0.1309,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0206,     0.0035,     0.0058,     0.0001,     0.0459,     0.4277,     0.4961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2891,     0.2676,     0.0199,     0.0327,     0.0028,     0.1108,     0.0374,     0.2354,     0.0048,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0349,     0.0017,     0.0079,     0.0055,     0.2773,     0.2617,     0.0039,     0.0045,     0.3984,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1250,     0.0209,     0.0513,     0.0327,     0.1240,     0.2139,     0.0405,     0.0457,     0.2080,     0.0396,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0630,     0.0138,     0.7422,     0.0126,     0.0244,     0.0003,     0.0508,     0.0026,     0.0229,     0.0688,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0117,     0.0002,     0.0003,     0.0000,     0.0128,     0.0014,     0.1177,     0.0005,     0.0039,     0.0002,     0.0001,     0.0552,     0.0000,     0.0000],
        [    0.7422,     0.0439,     0.0049,     0.0066,     0.0037,     0.0525,     0.0058,     0.0505,     0.0150,     0.0219,     0.0149,     0.0065,     0.0255,     0.0058,     0.0000],
        [    0.9492,     0.0073,     0.0004,     0.0006,     0.0004,     0.0107,     0.0019,     0.0112,     0.0031,     0.0056,     0.0031,     0.0004,     0.0046,     0.0008,     0.0010]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0540,     -0.0693,     -0.0698,     -0.0457,     -0.0469,     -0.0762,     -0.0586,     -0.0317,     -0.0488,     -0.0413,     -0.0669,     -0.0625,     -0.0483,     -0.0598],
        [     0.0131,      4.1562,      8.1875,      6.2500,      8.0625,      6.7812,      8.8125,      5.6875,      5.3750,      5.5312,      5.5312,      6.9688,      6.5312,      6.6250,      6.5000],
        [     0.0006,     -1.0391,      1.7891,      0.6445,      3.8125,      2.1094,      1.1953,     -0.3828,      4.0938,      0.6562,      2.6875,      1.8438,      0.6016,      3.9062,      0.6445],
        [     0.0195,      6.1250,      8.6250,      8.4375,      7.8438,      8.1250,     11.7500,      7.8438,      5.1875,      6.8125,      6.0312,      8.3750,      8.3750,      6.7812,      7.7812],
        [     0.0011,     -3.3906,     -4.0625,     -4.7188,     -3.3906,     -2.8594,     -4.0312,     -3.9531,     -3.0625,     -4.2500,     -3.8281,     -4.4375,     -3.8906,     -4.1250,     -3.5469],
        [     0.0128,      9.7500,     11.0625,     11.0000,      5.5625,     11.4375,     14.0000,     13.8125,      3.5781,      9.3125,      6.0938,     10.0000,     14.2500,      6.0625,     10.5625],
        [     0.0011,     -0.5273,     -4.6250,     -3.5625,     -6.1562,     -0.9336,     -0.0342,      0.8516,     -5.5938,     -2.0156,     -4.6562,     -4.7500,     -0.2578,     -6.5000,     -3.0469],
        [     0.0117,      4.0312,      2.2500,      2.7656,     -1.6016,      4.8125,      7.0625,      7.2188,     -2.1250,      2.9375,     -1.2188,      0.9141,      6.7188,     -1.9531,      2.4375],
        [    -0.0025,     -0.0835,     -2.6875,     -2.1875,     -4.6562,     -0.9648,     -2.0469,     -0.2109,     -4.1250,     -1.5469,     -2.8906,     -2.5625,     -0.9219,     -4.2812,     -1.6484],
        [    -0.0032,     -3.0156,     -1.4922,     -1.8594,      2.0625,      2.0156,     -2.2031,     -2.0469,      2.4375,     -1.8750,      0.9805,     -0.1943,     -0.3867,      1.5156,     -1.7969],
        [    -0.0023,     -1.7969,     -0.8945,     -1.3438,     -0.0083,      0.5352,     -1.1328,     -1.0078,      0.5039,     -1.1562,     -0.2305,     -0.4707,     -0.4004,      0.0952,     -0.9531],
        [     0.0160,      2.7500,      8.9375,      7.3750,     11.3750,      7.3125,      7.9688,      3.4844,      8.6875,      5.6875,      7.9062,      9.0000,      5.2500,      9.8125,      6.9062],
        [    -0.0095,     -4.2188,     -8.1875,     -8.0625,    -10.4375,     -4.1250,     -6.3750,     -1.9219,     -7.3750,     -5.3125,     -8.1250,     -9.1875,     -2.6719,     -9.1250,     -7.4375],
        [    -0.0078,     -2.8281,     -5.0312,     -4.7188,     -5.3125,     -2.6562,     -4.8438,     -2.7031,     -3.9062,     -3.5312,     -3.9219,     -4.7500,     -3.3750,     -4.8750,     -4.3438],
        [    -0.0057,     -4.8750,     -7.8750,     -7.3125,     -7.8750,     -4.5000,     -6.2500,     -4.4375,     -5.7188,     -5.1250,     -5.7500,     -7.7812,     -5.3438,     -7.0312,     -6.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2982],
        [0.0416],
        [0.1023],
        [0.1938],
        [0.0933],
        [0.1996],
        [0.1438],
        [0.0689],
        [0.0195],
        [0.0236],
        [0.0059],
        [0.1066],
        [0.0790],
        [0.0969]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9961,     0.0002,     0.0000,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.6992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4121,     0.4141,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1719,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.3535,     0.4590,     0.0162,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2715,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4102,     0.2617,     0.0566,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1504,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.5156,     0.2715,     0.0618,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.3613,     0.4219,     0.0212,     0.0001,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0002,     0.3066,     0.5039,     0.4414,     0.3320,     0.4629,     0.3262,     0.4414,     0.4688,     0.5000,     0.5117,     0.4824,     0.4707,     0.4277,     0.4316],
        [    0.0251,    39.7500,    63.0000,    55.5000,    38.0000,    56.5000,    41.5000,    54.5000,    55.7500,    63.0000,    63.0000,    61.2500,    57.2500,    51.2500,    54.5000],
        [    0.0405,    66.0000,   108.5000,    95.5000,    67.5000,    98.5000,    72.0000,    94.0000,    98.0000,   109.0000,   109.0000,   106.0000,    99.5000,    90.0000,    94.0000],
        [    0.0352,    56.2500,    92.0000,    81.0000,    56.7500,    83.5000,    61.0000,    80.0000,    82.5000,    93.0000,    92.5000,    90.5000,    84.5000,    76.5000,    80.0000],
        [    0.0228,    41.5000,    70.5000,    61.7500,    47.0000,    65.0000,    46.2500,    61.5000,    66.0000,    71.0000,    71.5000,    68.5000,    65.5000,    59.5000,    60.2500],
        [    0.0352,    62.5000,   102.5000,    90.0000,    63.7500,    93.0000,    68.5000,    89.0000,    91.5000,   103.5000,   103.0000,   101.0000,    94.0000,    84.0000,    89.0000],
        [    0.0232,    39.5000,    65.5000,    57.0000,    40.5000,    59.5000,    43.5000,    56.5000,    58.7500,    66.0000,    65.5000,    64.0000,    59.7500,    54.0000,    56.5000],
        [    0.0302,    52.7500,    84.5000,    74.0000,    51.0000,    76.0000,    56.7500,    73.5000,    73.5000,    84.5000,    84.5000,    83.0000,    77.0000,    67.5000,    73.5000],
        [    0.0354,    58.2500,    97.5000,    85.5000,    61.7500,    89.0000,    65.0000,    84.5000,    88.5000,    98.5000,    98.5000,    96.0000,    90.0000,    81.5000,    84.5000],
        [    0.0425,    67.5000,   112.5000,    99.0000,    70.5000,   102.5000,    74.5000,    97.5000,   102.5000,   113.5000,   113.5000,   110.5000,   103.5000,    94.5000,    97.5000],
        [    0.0420,    68.0000,   112.0000,    98.5000,    70.0000,   102.0000,    74.5000,    97.0000,   101.5000,   113.0000,   113.0000,   110.0000,   103.0000,    93.0000,    97.0000],
        [    0.0437,    69.5000,   115.0000,   101.5000,    72.5000,   105.0000,    76.5000,    99.5000,   105.0000,   116.0000,   116.0000,   113.0000,   106.0000,    96.5000,    99.5000],
        [    0.0325,    57.2500,    92.0000,    81.0000,    56.2500,    83.5000,    62.0000,    80.0000,    81.0000,    92.5000,    92.0000,    90.5000,    84.0000,    74.5000,    80.0000],
        [    0.0342,    52.2500,    87.5000,    76.5000,    53.7500,    79.0000,    59.0000,    75.5000,    78.0000,    88.5000,    88.0000,    86.5000,    79.5000,    72.0000,    76.0000],
        [    0.0378,    60.0000,    99.0000,    87.0000,    62.5000,    90.5000,    65.5000,    86.0000,    90.0000,    99.5000,   100.0000,    97.0000,    91.0000,    82.5000,    85.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0030],
        [    0.0007],
        [    0.0005],
        [    0.0037],
        [    0.0004],
        [    0.0010],
        [    0.0047],
        [    0.0001],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0018],
        [    0.0002],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7031,     0.2988,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5625,     0.1748,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4199,     0.1152,     0.1826,     0.2832,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3301,     0.1079,     0.1592,     0.2402,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2715,     0.0962,     0.1377,     0.2051,     0.1406,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2402,     0.0776,     0.1152,     0.1748,     0.1172,     0.1245,     0.1514,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1953,     0.0781,     0.1069,     0.1562,     0.1104,     0.1172,     0.1396,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1865,     0.0698,     0.0981,     0.1445,     0.1011,     0.1074,     0.1279,     0.0874,     0.0776,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1641,     0.0684,     0.0923,     0.1338,     0.0957,     0.1016,     0.1201,     0.0850,     0.0752,     0.0635,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1611,     0.0620,     0.0859,     0.1260,     0.0889,     0.0942,     0.1118,     0.0771,     0.0688,     0.0576,     0.0664,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.0571,     0.0801,     0.1177,     0.0825,     0.0874,     0.1040,     0.0713,     0.0635,     0.0530,     0.0610,     0.0718,     0.0000,     0.0000],
        [    0.0000,     0.1299,     0.0566,     0.0747,     0.1074,     0.0781,     0.0830,     0.0977,     0.0698,     0.0618,     0.0525,     0.0598,     0.0693,     0.0598,     0.0000],
        [    0.0000,     0.1416,     0.0491,     0.0708,     0.1060,     0.0728,     0.0771,     0.0923,     0.0618,     0.0549,     0.0457,     0.0530,     0.0623,     0.0518,     0.0608]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.0723,      0.0654,      0.0684,      0.0693,      0.0679,      0.0679,      0.0688,      0.0659,      0.0664,      0.0654,      0.0659,      0.0664,      0.0654,      0.0669],
        [    -0.0461,     34.7500,     33.0000,     33.7500,     34.2500,     33.7500,     33.7500,     34.0000,     33.5000,     33.2500,     33.0000,     33.2500,     33.5000,     33.2500,     33.5000],
        [    -0.0537,     36.2500,     35.5000,     35.7500,     36.0000,     35.7500,     35.7500,     36.0000,     35.5000,     35.5000,     35.2500,     35.5000,     35.5000,     35.5000,     35.5000],
        [    -0.0508,     35.2500,     34.2500,     34.5000,     35.0000,     34.7500,     34.7500,     35.0000,     34.5000,     34.2500,     34.2500,     34.2500,     34.5000,     34.2500,     34.5000],
        [    -0.0491,     35.2500,     33.7500,     34.2500,     34.7500,     34.2500,     34.5000,     34.5000,     34.0000,     34.0000,     33.7500,     34.0000,     34.2500,     34.0000,     34.2500],
        [    -0.0513,     35.5000,     34.2500,     34.7500,     35.2500,     34.7500,     34.7500,     35.0000,     34.5000,     34.5000,     34.2500,     34.5000,     34.5000,     34.5000,     34.5000],
        [    -0.0518,     36.0000,     35.0000,     35.5000,     35.7500,     35.5000,     35.5000,     35.7500,     35.2500,     35.2500,     35.0000,     35.2500,     35.2500,     35.2500,     35.2500],
        [    -0.0508,     36.0000,     35.0000,     35.2500,     35.7500,     35.2500,     35.2500,     35.5000,     35.2500,     35.0000,     34.7500,     35.0000,     35.2500,     35.0000,     35.2500],
        [    -0.0532,     36.2500,     35.2500,     35.5000,     36.0000,     35.5000,     35.7500,     35.7500,     35.5000,     35.2500,     35.2500,     35.2500,     35.5000,     35.2500,     35.5000],
        [    -0.0525,     35.7500,     34.7500,     35.0000,     35.5000,     35.0000,     35.2500,     35.2500,     35.0000,     34.7500,     34.7500,     34.7500,     35.0000,     34.7500,     35.0000],
        [    -0.0537,     36.0000,     35.2500,     35.5000,     35.7500,     35.5000,     35.5000,     35.7500,     35.2500,     35.2500,     35.0000,     35.2500,     35.2500,     35.2500,     35.2500],
        [    -0.0527,     35.7500,     34.7500,     35.2500,     35.5000,     35.2500,     35.2500,     35.5000,     35.0000,     35.0000,     34.7500,     35.0000,     35.0000,     35.0000,     35.0000],
        [    -0.0525,     36.0000,     35.0000,     35.5000,     35.7500,     35.5000,     35.5000,     35.7500,     35.2500,     35.2500,     35.0000,     35.0000,     35.2500,     35.0000,     35.2500],
        [    -0.0540,     36.5000,     35.7500,     36.0000,     36.2500,     36.0000,     36.0000,     36.2500,     35.7500,     35.7500,     35.5000,     35.7500,     35.7500,     35.7500,     35.7500],
        [    -0.0520,     35.5000,     34.5000,     35.0000,     35.2500,     35.0000,     35.0000,     35.2500,     34.7500,     34.7500,     34.5000,     34.7500,     34.7500,     34.5000,     34.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3320,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2500,     0.2520,     0.2480,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.2002,     0.2021,     0.1982,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1660,     0.1680,     0.1650,     0.1660,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1426,     0.1436,     0.1416,     0.1426,     0.1436,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1240,     0.1245,     0.1260,     0.1235,     0.1245,     0.1260,     0.1270,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.1108,     0.1118,     0.1099,     0.1108,     0.1118,     0.1128,     0.1113,     0.1104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.0996,     0.1006,     0.0991,     0.0996,     0.1006,     0.1016,     0.1001,     0.0991,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0908,     0.0918,     0.0898,     0.0908,     0.0918,     0.0923,     0.0913,     0.0903,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0825,     0.0830,     0.0840,     0.0825,     0.0830,     0.0840,     0.0845,     0.0835,     0.0825,     0.0830,     0.0830,     0.0845,     0.0000,     0.0000],
        [    0.0000,     0.0762,     0.0767,     0.0771,     0.0762,     0.0767,     0.0771,     0.0781,     0.0767,     0.0762,     0.0767,     0.0767,     0.0776,     0.0781,     0.0000],
        [    0.0000,     0.0708,     0.0713,     0.0718,     0.0708,     0.0713,     0.0718,     0.0723,     0.0713,     0.0708,     0.0713,     0.0708,     0.0723,     0.0723,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0003,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309,     0.1309],
        [    0.0166,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0168,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0166,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0166,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0168,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0170,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0168,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0167,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750],
        [    0.0168,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750,    24.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5234,     0.4766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3555,     0.3223,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2656,     0.2412,     0.2402,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2139,     0.1943,     0.1934,     0.2021,     0.1973,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1768,     0.1602,     0.1592,     0.1670,     0.1631,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1504,     0.1367,     0.1367,     0.1426,     0.1396,     0.1484,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1328,     0.1206,     0.1201,     0.1260,     0.1226,     0.1309,     0.1270,     0.1201,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1187,     0.1079,     0.1074,     0.1123,     0.1099,     0.1172,     0.1138,     0.1074,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1074,     0.0977,     0.0972,     0.1021,     0.0991,     0.1060,     0.1030,     0.0977,     0.0957,     0.0938,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0981,     0.0894,     0.0889,     0.0928,     0.0908,     0.0967,     0.0942,     0.0889,     0.0874,     0.0854,     0.0869,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0898,     0.0815,     0.0815,     0.0850,     0.0830,     0.0889,     0.0864,     0.0815,     0.0801,     0.0786,     0.0796,     0.0840,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0752,     0.0752,     0.0786,     0.0767,     0.0815,     0.0796,     0.0752,     0.0737,     0.0723,     0.0732,     0.0776,     0.0786,     0.0000],
        [    0.0000,     0.0771,     0.0703,     0.0698,     0.0732,     0.0713,     0.0762,     0.0742,     0.0698,     0.0688,     0.0674,     0.0684,     0.0723,     0.0732,     0.0688]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0452,      0.0449,      0.0449,      0.0452,      0.0449,      0.0452,      0.0452,      0.0449,      0.0449,      0.0447,      0.0449,      0.0449,      0.0452,      0.0449],
        [    -0.0153,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.6250,     22.5000,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.6250,     22.6250,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000],
        [    -0.0154,     22.6250,     22.5000,     22.5000,     22.6250,     22.6250,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000],
        [    -0.0154,     22.6250,     22.5000,     22.5000,     22.6250,     22.5000,     22.6250,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.6250,     22.5000],
        [    -0.0153,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.6250,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000,     22.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4941,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3281,     0.3379,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2471,     0.2539,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1973,     0.2021,     0.2002,     0.1992,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1641,     0.1680,     0.1670,     0.1660,     0.1680,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1406,     0.1445,     0.1436,     0.1426,     0.1445,     0.1426,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1230,     0.1260,     0.1250,     0.1245,     0.1260,     0.1245,     0.1235,     0.1260,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1094,     0.1123,     0.1113,     0.1108,     0.1118,     0.1108,     0.1099,     0.1118,     0.1123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0986,     0.1011,     0.1001,     0.0996,     0.1006,     0.0996,     0.0986,     0.1006,     0.1011,     0.1011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0894,     0.0918,     0.0908,     0.0903,     0.0913,     0.0903,     0.0898,     0.0913,     0.0918,     0.0918,     0.0918,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0820,     0.0840,     0.0830,     0.0830,     0.0840,     0.0830,     0.0820,     0.0835,     0.0840,     0.0840,     0.0840,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0757,     0.0776,     0.0767,     0.0767,     0.0776,     0.0767,     0.0757,     0.0771,     0.0776,     0.0776,     0.0776,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0703,     0.0718,     0.0713,     0.0708,     0.0718,     0.0708,     0.0703,     0.0718,     0.0718,     0.0718,     0.0718,     0.0713,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299,     0.1299],
        [    0.0098,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.7500,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750],
        [    0.0098,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750,    28.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.1992,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1670,     0.1660,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1108,     0.1108,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.0996,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0908,     0.0908,     0.0913,     0.0913,     0.0913,     0.0913,     0.0913,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0830,     0.0830,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0767,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0718,     0.0718,     0.0718,     0.0718,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825,     0.0825],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500],
        [    0.0742,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500,    36.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3340, 0.3340, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2500, 0.2500, 0.2500, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2002, 0.2002, 0.2002, 0.2002, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1670, 0.1670, 0.1670, 0.1670, 0.1670, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0000, 0.0000],
        [0.0000, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0000],
        [0.0000, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0002,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006,     0.1006],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000],
        [    0.3145,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000,   208.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,,,,,,,,,,,,,,,
@ 1050 train 4.8021 , allloss: 4.8021, dt: 1185.30ms, fracRes: 0.0547, norm(attn): 10.3750, norm(output): 0.3105, norm(x): 0.3488, norm(y): 1.0015, norm:0.4159, tok/sec: 110581.08, flops:116.09, batch-reuse:1
@ 1051 train 4.7524 , allloss: 4.7524, dt: 711.72ms, fracRes: 0.0549, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3489, norm(y): 1.0016, norm:0.4179, tok/sec: 184162.99, flops:193.33, batch-reuse:1
@ 1052 train 4.7779 , allloss: 4.7779, dt: 709.37ms, fracRes: 0.0546, norm(attn): 10.5000, norm(output): 0.3125, norm(x): 0.3531, norm(y): 1.0016, norm:0.3440, tok/sec: 184772.99, flops:193.98, batch-reuse:1
@ 1053 train 4.7468 , allloss: 4.7468, dt: 712.80ms, fracRes: 0.0547, norm(attn): 10.5000, norm(output): 0.3125, norm(x): 0.3537, norm(y): 1.0017, norm:0.3511, tok/sec: 183883.64, flops:193.04, batch-reuse:1
@ 1054 train 4.7170 , allloss: 4.7170, dt: 712.73ms, fracRes: 0.0547, norm(attn): 10.3750, norm(output): 0.3184, norm(x): 0.3574, norm(y): 1.0016, norm:0.3673, tok/sec: 183902.34, flops:193.06, batch-reuse:1
@ 1055 train 4.7307 , allloss: 4.7307, dt: 689.18ms, fracRes: 0.0543, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3496, norm(y): 1.0017, norm:0.3379, tok/sec: 190186.58, flops:199.66, batch-reuse:1
@ 1056 train 4.7287 , allloss: 4.7287, dt: 703.20ms, fracRes: 0.0546, norm(attn): 10.3750, norm(output): 0.3145, norm(x): 0.3492, norm(y): 1.0016, norm:0.3654, tok/sec: 186393.73, flops:195.68, batch-reuse:1
@ 1057 train 4.7513 , allloss: 4.7513, dt: 707.05ms, fracRes: 0.0545, norm(attn): 10.3750, norm(output): 0.3105, norm(x): 0.3494, norm(y): 1.0016, norm:0.3749, tok/sec: 185378.10, flops:194.61, batch-reuse:1
@ 1058 train 4.7961 , allloss: 4.7961, dt: 703.65ms, fracRes: 0.0540, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3500, norm(y): 1.0015, norm:0.3550, tok/sec: 186273.29, flops:195.55, batch-reuse:1
@ 1059 train 4.7668 , allloss: 4.7668, dt: 702.98ms, fracRes: 0.0539, norm(attn): 10.3125, norm(output): 0.3164, norm(x): 0.3555, norm(y): 1.0014, norm:0.3743, tok/sec: 186451.38, flops:195.74, batch-reuse:1
@ 1060 train 4.8131 , allloss: 4.8131, dt: 697.39ms, fracRes: 0.0535, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3523, norm(y): 1.0015, norm:0.3805, tok/sec: 187946.85, flops:197.31, batch-reuse:1
@ 1061 train 4.7905 , allloss: 4.7905, dt: 704.41ms, fracRes: 0.0539, norm(attn): 10.3750, norm(output): 0.3145, norm(x): 0.3509, norm(y): 1.0015, norm:0.4022, tok/sec: 186072.68, flops:195.34, batch-reuse:1
@ 1062 train 4.6789 , allloss: 4.6789, dt: 702.40ms, fracRes: 0.0540, norm(attn): 10.3750, norm(output): 0.3105, norm(x): 0.3482, norm(y): 1.0015, norm:0.3533, tok/sec: 186606.63, flops:195.90, batch-reuse:1
@ 1063 train 4.6725 , allloss: 4.6725, dt: 703.58ms, fracRes: 0.0541, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3506, norm(y): 1.0013, norm:0.3978, tok/sec: 186292.10, flops:195.57, batch-reuse:1
@ 1064 train 4.8353 , allloss: 4.8353, dt: 696.88ms, fracRes: 0.0542, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3499, norm(y): 1.0011, norm:0.3467, tok/sec: 188084.39, flops:197.45, batch-reuse:1
@ 1065 train 4.8473 , allloss: 4.8473, dt: 699.25ms, fracRes: 0.0540, norm(attn): 10.2500, norm(output): 0.3125, norm(x): 0.3487, norm(y): 1.0010, norm:0.3908, tok/sec: 187446.36, flops:196.78, batch-reuse:1
@ 1066 train 4.7748 , allloss: 4.7748, dt: 707.51ms, fracRes: 0.0545, norm(attn): 10.2500, norm(output): 0.3203, norm(x): 0.3568, norm(y): 1.0009, norm:0.3529, tok/sec: 185257.41, flops:194.48, batch-reuse:1
@ 1067 train 4.6438 , allloss: 4.6438, dt: 699.95ms, fracRes: 0.0550, norm(attn): 10.2500, norm(output): 0.3184, norm(x): 0.3571, norm(y): 1.0010, norm:0.3658, tok/sec: 187259.35, flops:196.59, batch-reuse:1
@ 1068 train 4.7345 , allloss: 4.7345, dt: 716.17ms, fracRes: 0.0550, norm(attn): 10.2500, norm(output): 0.3145, norm(x): 0.3528, norm(y): 1.0012, norm:0.4048, tok/sec: 183018.41, flops:192.13, batch-reuse:1
@ 1069 train 4.6685 , allloss: 4.6685, dt: 713.81ms, fracRes: 0.0543, norm(attn): 10.1875, norm(output): 0.3125, norm(x): 0.3472, norm(y): 1.0012, norm:0.4206, tok/sec: 183622.43, flops:192.77, batch-reuse:1
@ 1070 train 4.6884 , allloss: 4.6884, dt: 707.67ms, fracRes: 0.0544, norm(attn): 10.2500, norm(output): 0.3086, norm(x): 0.3456, norm(y): 1.0013, norm:0.4225, tok/sec: 185215.16, flops:194.44, batch-reuse:1
@ 1071 train 4.5748 , allloss: 4.5748, dt: 702.24ms, fracRes: 0.0540, norm(attn): 10.1875, norm(output): 0.3105, norm(x): 0.3458, norm(y): 1.0011, norm:0.3789, tok/sec: 186649.14, flops:195.94, batch-reuse:1
@ 1072 train 4.6989 , allloss: 4.6989, dt: 694.52ms, fracRes: 0.0539, norm(attn): 10.1875, norm(output): 0.3066, norm(x): 0.3450, norm(y): 1.0012, norm:0.3707, tok/sec: 188722.05, flops:198.12, batch-reuse:1
@ 1073 train 4.6178 , allloss: 4.6178, dt: 700.83ms, fracRes: 0.0537, norm(attn): 10.1875, norm(output): 0.3105, norm(x): 0.3459, norm(y): 1.0013, norm:0.3539, tok/sec: 187023.20, flops:196.34, batch-reuse:1
@ 1074 train 4.5996 , allloss: 4.5996, dt: 709.96ms, fracRes: 0.0539, norm(attn): 10.1875, norm(output): 0.3125, norm(x): 0.3481, norm(y): 1.0013, norm:0.4078, tok/sec: 184618.17, flops:193.81, batch-reuse:1
@ 1075 train 4.6806 , allloss: 4.6806, dt: 700.92ms, fracRes: 0.0536, norm(attn): 10.3125, norm(output): 0.3086, norm(x): 0.3431, norm(y): 1.0013, norm:0.4504, tok/sec: 186999.28, flops:196.31, batch-reuse:1
@ 1076 train 4.7551 , allloss: 4.7551, dt: 710.77ms, fracRes: 0.0535, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3477, norm(y): 1.0012, norm:0.4216, tok/sec: 184407.37, flops:193.59, batch-reuse:1
@ 1077 train 4.5971 , allloss: 4.5971, dt: 708.91ms, fracRes: 0.0537, norm(attn): 10.3125, norm(output): 0.3027, norm(x): 0.3390, norm(y): 1.0011, norm:0.4241, tok/sec: 184892.12, flops:194.10, batch-reuse:1
@ 1078 train 4.8992 , allloss: 4.8992, dt: 700.91ms, fracRes: 0.0552, norm(attn): 10.2500, norm(output): 0.3125, norm(x): 0.3510, norm(y): 1.0011, norm:0.8616, tok/sec: 187003.48, flops:196.32, batch-reuse:1
@ 1079 train 4.5969 , allloss: 4.5969, dt: 712.78ms, fracRes: 0.0533, norm(attn): 10.1250, norm(output): 0.3047, norm(x): 0.3410, norm(y): 1.0012, norm:0.5506, tok/sec: 183889.30, flops:193.05, batch-reuse:1
@ 1080 train 4.7175 , allloss: 4.7175, dt: 714.36ms, fracRes: 0.0527, norm(attn): 10.3125, norm(output): 0.3066, norm(x): 0.3441, norm(y): 1.0012, norm:0.4605, tok/sec: 183480.74, flops:192.62, batch-reuse:1
@ 1081 train 4.7027 , allloss: 4.7027, dt: 708.87ms, fracRes: 0.0525, norm(attn): 10.3125, norm(output): 0.3125, norm(x): 0.3500, norm(y): 1.0011, norm:0.5144, tok/sec: 184903.31, flops:194.11, batch-reuse:1
@ 1082 train 4.8475 , allloss: 4.8475, dt: 719.23ms, fracRes: 0.0530, norm(attn): 10.0625, norm(output): 0.3164, norm(x): 0.3540, norm(y): 1.0006, norm:0.5027, tok/sec: 182239.66, flops:191.32, batch-reuse:1
@ 1083 train 4.6625 , allloss: 4.6625, dt: 704.42ms, fracRes: 0.0527, norm(attn): 10.1250, norm(output): 0.3027, norm(x): 0.3430, norm(y): 1.0002, norm:0.4395, tok/sec: 186071.67, flops:195.34, batch-reuse:1
@ 1084 train 4.6265 , allloss: 4.6265, dt: 722.01ms, fracRes: 0.0526, norm(attn): 10.1250, norm(output): 0.3047, norm(x): 0.3415, norm(y): 0.9999, norm:0.3979, tok/sec: 181538.76, flops:190.58, batch-reuse:1
@ 1085 train 4.6575 , allloss: 4.6575, dt: 699.84ms, fracRes: 0.0555, norm(attn): 10.0625, norm(output): 0.3164, norm(x): 0.3567, norm(y): 1.0003, norm:0.6612, tok/sec: 187287.48, flops:196.61, batch-reuse:1
@ 1086 train 4.7000 , allloss: 4.7000, dt: 709.67ms, fracRes: 0.0534, norm(attn): 10.1250, norm(output): 0.3008, norm(x): 0.3387, norm(y): 1.0005, norm:0.4321, tok/sec: 184693.59, flops:193.89, batch-reuse:1
@ 1087 train 4.6729 , allloss: 4.6729, dt: 709.10ms, fracRes: 0.0532, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3410, norm(y): 1.0002, norm:0.5104, tok/sec: 184843.63, flops:194.05, batch-reuse:1
@ 1088 train 4.7211 , allloss: 4.7211, dt: 705.21ms, fracRes: 0.0532, norm(attn): 10.0625, norm(output): 0.3066, norm(x): 0.3443, norm(y): 1.0002, norm:0.4789, tok/sec: 185863.32, flops:195.12, batch-reuse:1
@ 1089 train 4.6186 , allloss: 4.6186, dt: 704.99ms, fracRes: 0.0531, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3448, norm(y): 1.0000, norm:0.4244, tok/sec: 185920.45, flops:195.18, batch-reuse:1
@ 1090 train 4.6299 , allloss: 4.6299, dt: 696.68ms, fracRes: 0.0532, norm(attn): 10.0625, norm(output): 0.2930, norm(x): 0.3347, norm(y): 0.9999, norm:0.4787, tok/sec: 188139.04, flops:197.51, batch-reuse:1
@ 1091 train 4.7071 , allloss: 4.7071, dt: 704.39ms, fracRes: 0.0534, norm(attn): 10.0625, norm(output): 0.2949, norm(x): 0.3347, norm(y): 1.0003, norm:0.4245, tok/sec: 186079.29, flops:195.35, batch-reuse:1
@ 1092 train 4.7940 , allloss: 4.7940, dt: 711.61ms, fracRes: 0.0536, norm(attn): 10.1250, norm(output): 0.3027, norm(x): 0.3426, norm(y): 1.0004, norm:0.4650, tok/sec: 184190.70, flops:193.36, batch-reuse:1
@ 1093 train 4.6714 , allloss: 4.6714, dt: 729.56ms, fracRes: 0.0528, norm(attn): 10.0625, norm(output): 0.2988, norm(x): 0.3412, norm(y): 1.0004, norm:0.4317, tok/sec: 179659.06, flops:188.61, batch-reuse:1
@ 1094 train 4.6209 , allloss: 4.6209, dt: 722.84ms, fracRes: 0.0524, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3388, norm(y): 1.0003, norm:0.4325, tok/sec: 181329.42, flops:190.36, batch-reuse:1
@ 1095 train 4.6342 , allloss: 4.6342, dt: 722.81ms, fracRes: 0.0523, norm(attn): 10.0625, norm(output): 0.2969, norm(x): 0.3347, norm(y): 1.0005, norm:0.4088, tok/sec: 181337.08, flops:190.37, batch-reuse:1
@ 1096 train 4.6805 , allloss: 4.6805, dt: 715.07ms, fracRes: 0.0521, norm(attn): 10.0625, norm(output): 0.2988, norm(x): 0.3382, norm(y): 1.0006, norm:0.3788, tok/sec: 183299.53, flops:192.43, batch-reuse:1
@ 1097 train 4.5890 , allloss: 4.5890, dt: 706.51ms, fracRes: 0.0526, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3428, norm(y): 1.0005, norm:0.3875, tok/sec: 185519.17, flops:194.76, batch-reuse:1
@ 1098 train 4.5914 , allloss: 4.5914, dt: 709.80ms, fracRes: 0.0529, norm(attn): 10.1250, norm(output): 0.3008, norm(x): 0.3394, norm(y): 1.0004, norm:0.3730, tok/sec: 184660.22, flops:193.86, batch-reuse:1
@ 1099 train 4.6438 , allloss: 4.6438, dt: 711.68ms, fracRes: 0.0533, norm(attn): 10.0625, norm(output): 0.3027, norm(x): 0.3405, norm(y): 1.0002, norm:0.3484, tok/sec: 184171.63, flops:193.34, batch-reuse:1
@ 1100 train 4.6107 , allloss: 4.6107, dt: 704.92ms, fracRes: 0.0531, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3381, norm(y): 1.0001, norm:0.3679, tok/sec: 185938.31, flops:195.20, batch-reuse:1
@ 1101 train 4.7340 , allloss: 4.7340, dt: 702.64ms, fracRes: 0.0529, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3413, norm(y): 0.9999, norm:0.4401, tok/sec: 186543.37, flops:195.83, batch-reuse:1
@ 1102 train 4.6713 , allloss: 4.6713, dt: 695.54ms, fracRes: 0.0528, norm(attn): 10.0000, norm(output): 0.2988, norm(x): 0.3358, norm(y): 0.9993, norm:0.3744, tok/sec: 188446.08, flops:197.83, batch-reuse:1
@ 1103 train 4.7372 , allloss: 4.7372, dt: 709.33ms, fracRes: 0.0529, norm(attn): 10.0000, norm(output): 0.2969, norm(x): 0.3333, norm(y): 0.9991, norm:0.3884, tok/sec: 184781.75, flops:193.98, batch-reuse:1
@ 1104 train 4.6779 , allloss: 4.6779, dt: 706.47ms, fracRes: 0.0539, norm(attn): 10.0000, norm(output): 0.3066, norm(x): 0.3426, norm(y): 0.9991, norm:0.4599, tok/sec: 185531.63, flops:194.77, batch-reuse:1
@ 1105 train 4.6504 , allloss: 4.6504, dt: 702.47ms, fracRes: 0.0533, norm(attn): 10.0000, norm(output): 0.3047, norm(x): 0.3395, norm(y): 0.9986, norm:0.4250, tok/sec: 186587.69, flops:195.88, batch-reuse:1
@ 1106 train 4.6775 , allloss: 4.6775, dt: 714.41ms, fracRes: 0.0530, norm(attn): 10.0000, norm(output): 0.3027, norm(x): 0.3390, norm(y): 0.9986, norm:0.3797, tok/sec: 183469.29, flops:192.61, batch-reuse:1
@ 1107 train 4.7019 , allloss: 4.7019, dt: 702.57ms, fracRes: 0.0537, norm(attn): 10.0000, norm(output): 0.3047, norm(x): 0.3426, norm(y): 0.9988, norm:0.4649, tok/sec: 186560.59, flops:195.85, batch-reuse:1
@ 1108 train 4.6190 , allloss: 4.6190, dt: 716.01ms, fracRes: 0.0530, norm(attn): 10.0000, norm(output): 0.3027, norm(x): 0.3401, norm(y): 0.9988, norm:0.3858, tok/sec: 183058.63, flops:192.18, batch-reuse:1
@ 1109 train 4.6462 , allloss: 4.6462, dt: 702.13ms, fracRes: 0.0531, norm(attn): 10.0000, norm(output): 0.2988, norm(x): 0.3376, norm(y): 0.9988, norm:0.3687, tok/sec: 186678.61, flops:195.98, batch-reuse:1
@ 1110 train 4.6632 , allloss: 4.6632, dt: 703.66ms, fracRes: 0.0529, norm(attn): 10.0625, norm(output): 0.2969, norm(x): 0.3327, norm(y): 0.9991, norm:0.3883, tok/sec: 186272.79, flops:195.55, batch-reuse:1
@ 1111 train 4.6521 , allloss: 4.6521, dt: 716.70ms, fracRes: 0.0529, norm(attn): 10.0000, norm(output): 0.3008, norm(x): 0.3389, norm(y): 0.9990, norm:0.3655, tok/sec: 182882.45, flops:191.99, batch-reuse:1
@ 1112 train 4.7568 , allloss: 4.7568, dt: 700.22ms, fracRes: 0.0535, norm(attn): 10.0000, norm(output): 0.3047, norm(x): 0.3405, norm(y): 0.9991, norm:0.3781, tok/sec: 187185.90, flops:196.51, batch-reuse:1
@ 1113 train 4.7894 , allloss: 4.7894, dt: 709.88ms, fracRes: 0.0537, norm(attn): 10.0000, norm(output): 0.3066, norm(x): 0.3413, norm(y): 0.9991, norm:0.3935, tok/sec: 184639.26, flops:193.83, batch-reuse:1
@ 1114 train 4.9703 , allloss: 4.9703, dt: 693.36ms, fracRes: 0.0539, norm(attn): 10.0000, norm(output): 0.3125, norm(x): 0.3504, norm(y): 0.9986, norm:0.6011, tok/sec: 189037.95, flops:198.45, batch-reuse:1
@ 1115 train 4.8591 , allloss: 4.8591, dt: 699.91ms, fracRes: 0.0536, norm(attn): 10.0000, norm(output): 0.3105, norm(x): 0.3495, norm(y): 0.9986, norm:0.6007, tok/sec: 187270.13, flops:196.60, batch-reuse:1
@ 1116 train 4.7010 , allloss: 4.7010, dt: 716.91ms, fracRes: 0.0534, norm(attn): 10.0000, norm(output): 0.3008, norm(x): 0.3386, norm(y): 0.9983, norm:0.3899, tok/sec: 182828.75, flops:191.93, batch-reuse:1
@ 1117 train 4.7650 , allloss: 4.7650, dt: 704.26ms, fracRes: 0.0539, norm(attn): 10.0000, norm(output): 0.2969, norm(x): 0.3336, norm(y): 0.9981, norm:0.5426, tok/sec: 186114.38, flops:195.38, batch-reuse:1
@ 1118 train 4.8388 , allloss: 4.8388, dt: 700.59ms, fracRes: 0.0542, norm(attn): 10.0000, norm(output): 0.3008, norm(x): 0.3357, norm(y): 0.9981, norm:0.4297, tok/sec: 187087.29, flops:196.40, batch-reuse:1
@ 1119 train 4.8710 , allloss: 4.8710, dt: 704.74ms, fracRes: 0.0538, norm(attn): 10.0000, norm(output): 0.2988, norm(x): 0.3371, norm(y): 0.9984, norm:0.4877, tok/sec: 185986.75, flops:195.25, batch-reuse:1
@ 1120 train 4.8093 , allloss: 4.8093, dt: 692.40ms, fracRes: 0.0538, norm(attn): 10.0000, norm(output): 0.3008, norm(x): 0.3387, norm(y): 0.9982, norm:0.4224, tok/sec: 189302.03, flops:198.73, batch-reuse:1
@ 1121 train 4.8385 , allloss: 4.8385, dt: 704.74ms, fracRes: 0.0542, norm(attn): 10.0000, norm(output): 0.3027, norm(x): 0.3401, norm(y): 0.9980, norm:0.4782, tok/sec: 185985.68, flops:195.25, batch-reuse:1
@ 1122 train 4.8184 , allloss: 4.8184, dt: 697.79ms, fracRes: 0.0543, norm(attn): 10.0000, norm(output): 0.2988, norm(x): 0.3358, norm(y): 0.9985, norm:0.4533, tok/sec: 187839.29, flops:197.19, batch-reuse:1
@ 1123 train 4.8472 , allloss: 4.8472, dt: 713.87ms, fracRes: 0.0539, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3424, norm(y): 0.9986, norm:0.4837, tok/sec: 183606.42, flops:192.75, batch-reuse:1
@ 1124 train 4.7982 , allloss: 4.7982, dt: 715.84ms, fracRes: 0.0538, norm(attn): 10.1250, norm(output): 0.3047, norm(x): 0.3421, norm(y): 0.9987, norm:0.4349, tok/sec: 183102.34, flops:192.22, batch-reuse:1
@ 1125 train 4.7785 , allloss: 4.7785, dt: 700.38ms, fracRes: 0.0540, norm(attn): 10.0625, norm(output): 0.2988, norm(x): 0.3388, norm(y): 0.9982, norm:0.4189, tok/sec: 187144.29, flops:196.46, batch-reuse:1
@ 1126 train 4.8532 , allloss: 4.8532, dt: 706.02ms, fracRes: 0.0537, norm(attn): 10.0625, norm(output): 0.2969, norm(x): 0.3352, norm(y): 0.9983, norm:0.4143, tok/sec: 185648.29, flops:194.89, batch-reuse:1
@ 1127 train 4.7921 , allloss: 4.7921, dt: 703.63ms, fracRes: 0.0541, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3407, norm(y): 0.9986, norm:0.4317, tok/sec: 186280.55, flops:195.56, batch-reuse:1
@ 1128 train 4.7647 , allloss: 4.7647, dt: 697.82ms, fracRes: 0.0539, norm(attn): 10.0625, norm(output): 0.3066, norm(x): 0.3453, norm(y): 0.9981, norm:0.4329, tok/sec: 187829.79, flops:197.18, batch-reuse:1
@ 1129 train 4.7935 , allloss: 4.7935, dt: 694.07ms, fracRes: 0.0535, norm(attn): 10.0625, norm(output): 0.2988, norm(x): 0.3381, norm(y): 0.9974, norm:0.3967, tok/sec: 188845.54, flops:198.25, batch-reuse:1
@ 1130 train 4.7609 , allloss: 4.7609, dt: 714.96ms, fracRes: 0.0537, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3375, norm(y): 0.9974, norm:0.4221, tok/sec: 183327.16, flops:192.46, batch-reuse:1
@ 1131 train 4.7933 , allloss: 4.7933, dt: 715.96ms, fracRes: 0.0539, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3417, norm(y): 0.9976, norm:0.4028, tok/sec: 183070.94, flops:192.19, batch-reuse:1
@ 1132 train 4.7806 , allloss: 4.7806, dt: 714.90ms, fracRes: 0.0536, norm(attn): 10.0000, norm(output): 0.3008, norm(x): 0.3381, norm(y): 0.9969, norm:0.4191, tok/sec: 183342.45, flops:192.47, batch-reuse:1
@ 1133 train 4.7895 , allloss: 4.7895, dt: 693.60ms, fracRes: 0.0542, norm(attn): 10.0000, norm(output): 0.2969, norm(x): 0.3385, norm(y): 0.9969, norm:0.4093, tok/sec: 188973.81, flops:198.39, batch-reuse:1
@ 1134 train 4.7435 , allloss: 4.7435, dt: 705.82ms, fracRes: 0.0542, norm(attn): 10.0625, norm(output): 0.2969, norm(x): 0.3355, norm(y): 0.9978, norm:0.3669, tok/sec: 185700.84, flops:194.95, batch-reuse:1
@ 1135 train 4.8129 , allloss: 4.8129, dt: 705.66ms, fracRes: 0.0539, norm(attn): 10.1250, norm(output): 0.3008, norm(x): 0.3399, norm(y): 0.9978, norm:0.4188, tok/sec: 185745.13, flops:195.00, batch-reuse:1
@ 1136 train 4.8126 , allloss: 4.8126, dt: 705.28ms, fracRes: 0.0538, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3414, norm(y): 0.9973, norm:0.3662, tok/sec: 185844.28, flops:195.10, batch-reuse:1
@ 1137 train 4.8044 , allloss: 4.8044, dt: 704.52ms, fracRes: 0.0539, norm(attn): 10.0625, norm(output): 0.2988, norm(x): 0.3361, norm(y): 0.9967, norm:0.4070, tok/sec: 186045.03, flops:195.31, batch-reuse:1
@ 1138 train 4.9631 , allloss: 4.9631, dt: 707.10ms, fracRes: 0.0542, norm(attn): 10.0625, norm(output): 0.3027, norm(x): 0.3422, norm(y): 0.9965, norm:0.4090, tok/sec: 185365.91, flops:194.60, batch-reuse:1
@ 1139 train 4.7314 , allloss: 4.7314, dt: 707.11ms, fracRes: 0.0548, norm(attn): 10.0625, norm(output): 0.3047, norm(x): 0.3416, norm(y): 0.9960, norm:0.4565, tok/sec: 185362.29, flops:194.59, batch-reuse:1
@ 1140 train 4.7523 , allloss: 4.7523, dt: 712.55ms, fracRes: 0.0550, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3404, norm(y): 0.9962, norm:0.4148, tok/sec: 183947.14, flops:193.11, batch-reuse:1
@ 1141 train 4.6609 , allloss: 4.6609, dt: 711.60ms, fracRes: 0.0548, norm(attn): 10.1250, norm(output): 0.2988, norm(x): 0.3366, norm(y): 0.9967, norm:0.4044, tok/sec: 184192.24, flops:193.37, batch-reuse:1
@ 1142 train 4.7309 , allloss: 4.7309, dt: 711.89ms, fracRes: 0.0547, norm(attn): 10.1250, norm(output): 0.3008, norm(x): 0.3404, norm(y): 0.9971, norm:0.3894, tok/sec: 184117.97, flops:193.29, batch-reuse:1
@ 1143 train 4.7716 , allloss: 4.7716, dt: 709.16ms, fracRes: 0.0569, norm(attn): 10.1250, norm(output): 0.3164, norm(x): 0.3580, norm(y): 0.9970, norm:1.0126, tok/sec: 184826.35, flops:194.03, batch-reuse:1
@ 1144 train 4.8160 , allloss: 4.8160, dt: 718.03ms, fracRes: 0.0546, norm(attn): 10.0625, norm(output): 0.3105, norm(x): 0.3477, norm(y): 0.9962, norm:0.6499, tok/sec: 182544.03, flops:191.64, batch-reuse:1
@ 1145 train 4.8247 , allloss: 4.8247, dt: 717.14ms, fracRes: 0.0550, norm(attn): 10.0625, norm(output): 0.3008, norm(x): 0.3401, norm(y): 0.9965, norm:0.5199, tok/sec: 182769.37, flops:191.87, batch-reuse:1
@ 1146 train 4.7906 , allloss: 4.7906, dt: 709.60ms, fracRes: 0.0552, norm(attn): 10.1875, norm(output): 0.2930, norm(x): 0.3321, norm(y): 0.9973, norm:0.5230, tok/sec: 184713.08, flops:193.91, batch-reuse:1
@ 1147 train 4.7855 , allloss: 4.7855, dt: 723.51ms, fracRes: 0.0552, norm(attn): 10.1875, norm(output): 0.3047, norm(x): 0.3413, norm(y): 0.9970, norm:0.4879, tok/sec: 181160.56, flops:190.18, batch-reuse:1
@ 1148 train 4.7380 , allloss: 4.7380, dt: 720.50ms, fracRes: 0.0549, norm(attn): 10.1250, norm(output): 0.2969, norm(x): 0.3375, norm(y): 0.9968, norm:0.4307, tok/sec: 181917.63, flops:190.98, batch-reuse:1
@ 1149 train 4.7817 , allloss: 4.7817, dt: 706.22ms, fracRes: 0.0542, norm(attn): 10.1250, norm(output): 0.3027, norm(x): 0.3406, norm(y): 0.9971, norm:0.4454, tok/sec: 185596.52, flops:194.84, batch-reuse:1
@ 1150 train 4.8105 , allloss: 4.8105, dt: 710.80ms, fracRes: 0.0546, norm(attn): 10.1250, norm(output): 0.3008, norm(x): 0.3382, norm(y): 0.9975, norm:0.4041, tok/sec: 184399.77, flops:193.58, batch-reuse:1
@ 1151 train 4.8390 , allloss: 4.8390, dt: 717.82ms, fracRes: 0.0551, norm(attn): 10.2500, norm(output): 0.3047, norm(x): 0.3409, norm(y): 0.9977, norm:0.4501, tok/sec: 182596.17, flops:191.69, batch-reuse:1
@ 1152 train 4.6987 , allloss: 4.6987, dt: 714.08ms, fracRes: 0.0555, norm(attn): 10.1250, norm(output): 0.3125, norm(x): 0.3510, norm(y): 0.9972, norm:0.4763, tok/sec: 183552.41, flops:192.69, batch-reuse:1
@ 1153 train 4.7080 , allloss: 4.7080, dt: 708.04ms, fracRes: 0.0556, norm(attn): 10.1875, norm(output): 0.3008, norm(x): 0.3427, norm(y): 0.9965, norm:0.4486, tok/sec: 185119.61, flops:194.34, batch-reuse:1
@ 1154 train 4.7788 , allloss: 4.7788, dt: 701.80ms, fracRes: 0.0563, norm(attn): 10.1250, norm(output): 0.3066, norm(x): 0.3463, norm(y): 0.9952, norm:0.4441, tok/sec: 186764.61, flops:196.07, batch-reuse:1
@ 1155 train 4.7312 , allloss: 4.7312, dt: 708.65ms, fracRes: 0.0554, norm(attn): 10.2500, norm(output): 0.3047, norm(x): 0.3415, norm(y): 0.9959, norm:0.4529, tok/sec: 184960.04, flops:194.17, batch-reuse:1
@ 1156 train 4.7218 , allloss: 4.7218, dt: 700.87ms, fracRes: 0.0557, norm(attn): 10.3125, norm(output): 0.3008, norm(x): 0.3408, norm(y): 0.9968, norm:0.4607, tok/sec: 187014.42, flops:196.33, batch-reuse:1
@ 1157 train 4.7288 , allloss: 4.7288, dt: 698.80ms, fracRes: 0.0541, norm(attn): 10.3750, norm(output): 0.2949, norm(x): 0.3345, norm(y): 0.9962, norm:0.3912, tok/sec: 187566.15, flops:196.91, batch-reuse:1
@ 1158 train 4.7387 , allloss: 4.7387, dt: 713.31ms, fracRes: 0.0534, norm(attn): 10.3750, norm(output): 0.2969, norm(x): 0.3326, norm(y): 0.9953, norm:0.4224, tok/sec: 183751.50, flops:192.90, batch-reuse:1
@ 1159 train 4.7658 , allloss: 4.7658, dt: 714.26ms, fracRes: 0.0545, norm(attn): 10.2500, norm(output): 0.3047, norm(x): 0.3430, norm(y): 0.9954, norm:0.4682, tok/sec: 183508.48, flops:192.65, batch-reuse:1
@ 1160 train 4.8294 , allloss: 4.8294, dt: 713.68ms, fracRes: 0.0537, norm(attn): 10.1875, norm(output): 0.2969, norm(x): 0.3350, norm(y): 0.9954, norm:0.4731, tok/sec: 183657.58, flops:192.80, batch-reuse:1
@ 1161 train 4.6817 , allloss: 4.6817, dt: 713.59ms, fracRes: 0.0532, norm(attn): 10.1250, norm(output): 0.3574, norm(x): 0.3982, norm(y): 0.9939, norm:0.4794, tok/sec: 183679.42, flops:192.83, batch-reuse:1
@ 1162 train 4.6895 , allloss: 4.6895, dt: 711.23ms, fracRes: 0.0536, norm(attn): 10.1875, norm(output): 0.5195, norm(x): 0.5588, norm(y): 0.9938, norm:0.4683, tok/sec: 184289.49, flops:193.47, batch-reuse:1
@ 1163 train 4.7641 , allloss: 4.7641, dt: 703.80ms, fracRes: 0.0541, norm(attn): 10.1875, norm(output): 0.4512, norm(x): 0.4925, norm(y): 0.9943, norm:0.4305, tok/sec: 186233.66, flops:195.51, batch-reuse:1
@ 1164 train 4.7602 , allloss: 4.7602, dt: 700.93ms, fracRes: 0.0541, norm(attn): 10.1250, norm(output): 0.4824, norm(x): 0.5233, norm(y): 0.9943, norm:0.4532, tok/sec: 186997.88, flops:196.31, batch-reuse:1
@ 1165 train 4.7350 , allloss: 4.7350, dt: 707.05ms, fracRes: 0.0544, norm(attn): 10.1875, norm(output): 0.4805, norm(x): 0.5197, norm(y): 0.9939, norm:0.5321, tok/sec: 185378.73, flops:194.61, batch-reuse:1
@ 1166 train 4.7697 , allloss: 4.7697, dt: 711.45ms, fracRes: 0.0545, norm(attn): 10.2500, norm(output): 0.5000, norm(x): 0.5430, norm(y): 0.9935, norm:1.0540, tok/sec: 184232.24, flops:193.41, batch-reuse:1
@ 1167 train 4.7195 , allloss: 4.7195, dt: 694.66ms, fracRes: 0.0540, norm(attn): 10.2500, norm(output): 0.5156, norm(x): 0.5576, norm(y): 0.9936, norm:0.4156, tok/sec: 188686.36, flops:198.08, batch-reuse:1
@ 1168 train 4.6619 , allloss: 4.6619, dt: 706.03ms, fracRes: 0.0536, norm(attn): 10.2500, norm(output): 0.5703, norm(x): 0.6057, norm(y): 0.9930, norm:0.4848, tok/sec: 185646.97, flops:194.89, batch-reuse:1
@ 1169 train 4.7036 , allloss: 4.7036, dt: 705.37ms, fracRes: 0.0540, norm(attn): 10.3125, norm(output): 0.4863, norm(x): 0.5266, norm(y): 0.9928, norm:0.4345, tok/sec: 185820.85, flops:195.08, batch-reuse:1
@ 1170 train 4.6962 , allloss: 4.6962, dt: 699.80ms, fracRes: 0.0539, norm(attn): 10.3125, norm(output): 0.4316, norm(x): 0.4700, norm(y): 0.9924, norm:0.4012, tok/sec: 187299.22, flops:196.63, batch-reuse:1
@ 1171 train 4.7491 , allloss: 4.7491, dt: 703.56ms, fracRes: 0.0535, norm(attn): 10.3125, norm(output): 0.4473, norm(x): 0.4867, norm(y): 0.9919, norm:0.5233, tok/sec: 186298.35, flops:195.58, batch-reuse:1
@ 1172 train 4.7795 , allloss: 4.7795, dt: 704.95ms, fracRes: 0.0542, norm(attn): 10.3125, norm(output): 0.4121, norm(x): 0.4512, norm(y): 0.9924, norm:0.4325, tok/sec: 185931.96, flops:195.19, batch-reuse:1
@ 1173 train 4.6767 , allloss: 4.6767, dt: 697.77ms, fracRes: 0.0541, norm(attn): 10.3750, norm(output): 0.3086, norm(x): 0.3474, norm(y): 0.9919, norm:0.8063, tok/sec: 187844.29, flops:197.20, batch-reuse:1
@ 1174 train 4.6920 , allloss: 4.6920, dt: 707.44ms, fracRes: 0.0538, norm(attn): 10.2500, norm(output): 0.4980, norm(x): 0.5361, norm(y): 0.9892, norm:0.4760, tok/sec: 185277.45, flops:194.50, batch-reuse:1
@ 1175 train 4.7781 , allloss: 4.7781, dt: 698.35ms, fracRes: 0.0544, norm(attn): 10.2500, norm(output): 0.4492, norm(x): 0.4878, norm(y): 0.9844, norm:0.4043, tok/sec: 187686.98, flops:197.03, batch-reuse:1
@ 1176 train 4.6699 , allloss: 4.6699, dt: 705.22ms, fracRes: 0.0552, norm(attn): 10.2500, norm(output): 0.4004, norm(x): 0.4416, norm(y): 0.9802, norm:0.4573, tok/sec: 185859.61, flops:195.12, batch-reuse:1
@ 1177 train 4.7132 , allloss: 4.7132, dt: 719.22ms, fracRes: 0.0552, norm(attn): 10.3125, norm(output): 0.4453, norm(x): 0.4891, norm(y): 0.9856, norm:0.4782, tok/sec: 182240.68, flops:191.32, batch-reuse:1
@ 1178 train 4.8945 , allloss: 4.8945, dt: 715.13ms, fracRes: 0.0553, norm(attn): 10.3125, norm(output): 0.4258, norm(x): 0.4682, norm(y): 0.9788, norm:0.4357, tok/sec: 183283.65, flops:192.41, batch-reuse:1
@ 1179 train 4.7369 , allloss: 4.7369, dt: 702.56ms, fracRes: 0.0550, norm(attn): 10.0625, norm(output): 0.4375, norm(x): 0.4812, norm(y): 0.9719, norm:2.7532, tok/sec: 186563.19, flops:195.85, batch-reuse:1
@ 1180 train 4.7524 , allloss: 4.7524, dt: 714.31ms, fracRes: 0.0539, norm(attn): 10.2500, norm(output): 0.3887, norm(x): 0.4244, norm(y): 0.9752, norm:1.5401, tok/sec: 183495.38, flops:192.63, batch-reuse:1
@ 1181 train 4.7671 , allloss: 4.7671, dt: 702.05ms, fracRes: 0.0528, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3496, norm(y): 0.9901, norm:0.7679, tok/sec: 186698.01, flops:196.00, batch-reuse:1
@ 1182 train 4.7447 , allloss: 4.7447, dt: 714.90ms, fracRes: 0.0539, norm(attn): 10.6875, norm(output): 0.3047, norm(x): 0.3436, norm(y): 0.9923, norm:0.7404, tok/sec: 183342.81, flops:192.47, batch-reuse:1
@ 1183 train 4.7684 , allloss: 4.7684, dt: 707.60ms, fracRes: 0.0515, norm(attn): 10.9375, norm(output): 0.3027, norm(x): 0.3402, norm(y): 0.9946, norm:0.5278, tok/sec: 185233.75, flops:194.46, batch-reuse:1
@ 1184 train 4.7752 , allloss: 4.7752, dt: 707.78ms, fracRes: 0.0515, norm(attn): 11.0625, norm(output): 0.3145, norm(x): 0.3497, norm(y): 0.9968, norm:0.4905, tok/sec: 185186.96, flops:194.41, batch-reuse:1
@ 1185 train 4.7315 , allloss: 4.7315, dt: 694.54ms, fracRes: 0.0524, norm(attn): 11.0625, norm(output): 0.3223, norm(x): 0.3587, norm(y): 0.9984, norm:0.6086, tok/sec: 188716.41, flops:198.11, batch-reuse:1
@ 1186 train 4.7613 , allloss: 4.7613, dt: 704.81ms, fracRes: 0.0516, norm(attn): 11.0625, norm(output): 0.3184, norm(x): 0.3535, norm(y): 0.9981, norm:0.4459, tok/sec: 185968.38, flops:195.23, batch-reuse:1
@ 1187 train 4.7523 , allloss: 4.7523, dt: 705.24ms, fracRes: 0.0520, norm(attn): 11.1250, norm(output): 0.3184, norm(x): 0.3534, norm(y): 0.9978, norm:0.4743, tok/sec: 185854.52, flops:195.11, batch-reuse:1
@ 1188 train 4.6570 , allloss: 4.6570, dt: 703.11ms, fracRes: 0.0523, norm(attn): 11.3125, norm(output): 0.3125, norm(x): 0.3485, norm(y): 0.9976, norm:0.4426, tok/sec: 186416.73, flops:195.70, batch-reuse:1
@ 1189 train 4.6868 , allloss: 4.6868, dt: 699.55ms, fracRes: 0.0537, norm(attn): 11.1250, norm(output): 0.3203, norm(x): 0.3589, norm(y): 0.9966, norm:0.4354, tok/sec: 187367.27, flops:196.70, batch-reuse:1
@ 1190 train 4.7201 , allloss: 4.7201, dt: 695.74ms, fracRes: 0.0549, norm(attn): 11.0625, norm(output): 0.3242, norm(x): 0.3635, norm(y): 0.9927, norm:0.5382, tok/sec: 188392.74, flops:197.78, batch-reuse:1
@ 1191 train 4.8330 , allloss: 4.8330, dt: 692.34ms, fracRes: 0.0540, norm(attn): 11.0000, norm(output): 0.3184, norm(x): 0.3573, norm(y): 0.9796, norm:0.4283, tok/sec: 189317.81, flops:198.75, batch-reuse:1
@ 1192 train 4.7069 , allloss: 4.7069, dt: 694.51ms, fracRes: 0.0531, norm(attn): 10.9375, norm(output): 0.3125, norm(x): 0.3472, norm(y): 0.9733, norm:0.3828, tok/sec: 188726.58, flops:198.13, batch-reuse:1
@ 1193 train 4.7305 , allloss: 4.7305, dt: 705.34ms, fracRes: 0.0535, norm(attn): 11.0625, norm(output): 0.3164, norm(x): 0.3517, norm(y): 0.9809, norm:0.4521, tok/sec: 185827.07, flops:195.08, batch-reuse:1
@ 1194 train 4.7414 , allloss: 4.7414, dt: 696.95ms, fracRes: 0.0535, norm(attn): 11.0625, norm(output): 0.3203, norm(x): 0.3596, norm(y): 0.9889, norm:0.4655, tok/sec: 188065.02, flops:197.43, batch-reuse:1
@ 1195 train 4.7153 , allloss: 4.7153, dt: 690.79ms, fracRes: 0.0527, norm(attn): 11.2500, norm(output): 0.3184, norm(x): 0.3554, norm(y): 0.9923, norm:0.4438, tok/sec: 189741.48, flops:199.19, batch-reuse:1
@ 1196 train 4.6510 , allloss: 4.6510, dt: 703.85ms, fracRes: 0.0529, norm(attn): 11.3125, norm(output): 0.3145, norm(x): 0.3488, norm(y): 0.9940, norm:0.3918, tok/sec: 186222.75, flops:195.50, batch-reuse:1
@ 1197 train 4.6249 , allloss: 4.6249, dt: 711.22ms, fracRes: 0.0531, norm(attn): 11.3125, norm(output): 0.3164, norm(x): 0.3531, norm(y): 0.9949, norm:0.3904, tok/sec: 184290.85, flops:193.47, batch-reuse:1
@ 1198 train 4.6618 , allloss: 4.6618, dt: 714.29ms, fracRes: 0.0524, norm(attn): 11.3750, norm(output): 0.3184, norm(x): 0.3516, norm(y): 0.9939, norm:0.3644, tok/sec: 183499.23, flops:192.64, batch-reuse:1
@ 1199 train 4.7201 , allloss: 4.7201, dt: 700.12ms, fracRes: 0.0527, norm(attn): 11.3125, norm(output): 0.3145, norm(x): 0.3494, norm(y): 0.9925, norm:0.3754, tok/sec: 187214.84, flops:196.54, batch-reuse:1
@ 1200 train 4.6250 , allloss: 4.6250, dt: 693.17ms, fracRes: 0.0530, norm(attn): 11.3125, norm(output): 0.3125, norm(x): 0.3476, norm(y): 0.9913, norm:0.3838, tok/sec: 189091.20, flops:198.51, batch-reuse:1
@ 1201 train 4.6586 , allloss: 4.6586, dt: 713.19ms, fracRes: 0.0533, norm(attn): 11.3125, norm(output): 0.3125, norm(x): 0.3485, norm(y): 0.9912, norm:0.3698, tok/sec: 183781.47, flops:192.93, batch-reuse:1
@ 1202 train 4.6929 , allloss: 4.6929, dt: 702.56ms, fracRes: 0.0536, norm(attn): 11.3125, norm(output): 0.3125, norm(x): 0.3476, norm(y): 0.9911, norm:0.3758, tok/sec: 186563.69, flops:195.85, batch-reuse:1
@ 1203 train 5.1081 , allloss: 5.1081, dt: 711.11ms, fracRes: 0.0543, norm(attn): 11.3125, norm(output): 0.3242, norm(x): 0.3599, norm(y): 0.9900, norm:0.6323, tok/sec: 184321.49, flops:193.50, batch-reuse:1
@ 1204 train 4.6579 , allloss: 4.6579, dt: 720.67ms, fracRes: 0.0533, norm(attn): 11.3750, norm(output): 0.3164, norm(x): 0.3524, norm(y): 0.9922, norm:0.4634, tok/sec: 181875.38, flops:190.93, batch-reuse:1
@ 1205 train 4.6147 , allloss: 4.6147, dt: 693.07ms, fracRes: 0.0533, norm(attn): 11.3125, norm(output): 0.3105, norm(x): 0.3473, norm(y): 0.9927, norm:0.4559, tok/sec: 189117.67, flops:198.54, batch-reuse:1
@ 1206 train 4.6308 , allloss: 4.6308, dt: 692.56ms, fracRes: 0.0534, norm(attn): 11.3125, norm(output): 0.3125, norm(x): 0.3471, norm(y): 0.9928, norm:0.4161, tok/sec: 189256.61, flops:198.68, batch-reuse:1
@ 1207 train 4.6042 , allloss: 4.6042, dt: 706.68ms, fracRes: 0.0541, norm(attn): 11.4375, norm(output): 0.3145, norm(x): 0.3519, norm(y): 0.9928, norm:0.4092, tok/sec: 185475.98, flops:194.71, batch-reuse:1
@ 1208 train 4.5994 , allloss: 4.5994, dt: 706.67ms, fracRes: 0.0532, norm(attn): 11.5625, norm(output): 0.3125, norm(x): 0.3501, norm(y): 0.9923, norm:0.3788, tok/sec: 185479.55, flops:194.72, batch-reuse:1
@ 1209 train 4.7331 , allloss: 4.7331, dt: 709.44ms, fracRes: 0.0528, norm(attn): 11.3750, norm(output): 0.3125, norm(x): 0.3516, norm(y): 0.9916, norm:0.4378, tok/sec: 184755.04, flops:193.96, batch-reuse:1
@ 1210 train 4.5633 , allloss: 4.5633, dt: 694.77ms, fracRes: 0.0536, norm(attn): 11.3750, norm(output): 0.3145, norm(x): 0.3525, norm(y): 0.9901, norm:0.4117, tok/sec: 188654.11, flops:198.05, batch-reuse:1
@ 1211 train 4.6651 , allloss: 4.6651, dt: 703.11ms, fracRes: 0.0536, norm(attn): 11.3125, norm(output): 0.3203, norm(x): 0.3595, norm(y): 0.9899, norm:0.4264, tok/sec: 186416.42, flops:195.70, batch-reuse:1
@ 1212 train 4.7519 , allloss: 4.7519, dt: 709.89ms, fracRes: 0.0539, norm(attn): 11.5000, norm(output): 0.3145, norm(x): 0.3544, norm(y): 0.9917, norm:0.3999, tok/sec: 184637.95, flops:193.83, batch-reuse:1
@ 1213 train 4.5527 , allloss: 4.5527, dt: 703.73ms, fracRes: 0.0539, norm(attn): 11.6250, norm(output): 0.3047, norm(x): 0.3425, norm(y): 0.9927, norm:0.3901, tok/sec: 186253.85, flops:195.53, batch-reuse:1
@ 1214 train 4.6184 , allloss: 4.6184, dt: 710.21ms, fracRes: 0.0536, norm(attn): 11.6250, norm(output): 0.3027, norm(x): 0.3424, norm(y): 0.9904, norm:0.4067, tok/sec: 184553.35, flops:193.74, batch-reuse:1
@ 1215 train 4.6760 , allloss: 4.6760, dt: 710.04ms, fracRes: 0.0541, norm(attn): 11.3125, norm(output): 0.3066, norm(x): 0.3477, norm(y): 0.9844, norm:0.3658, tok/sec: 184599.33, flops:193.79, batch-reuse:1
@ 1216 train 4.6133 , allloss: 4.6133, dt: 709.54ms, fracRes: 0.0542, norm(attn): 11.3125, norm(output): 0.3066, norm(x): 0.3472, norm(y): 0.9795, norm:0.4054, tok/sec: 184727.98, flops:193.93, batch-reuse:1
@ 1217 train 4.6548 , allloss: 4.6548, dt: 715.35ms, fracRes: 0.0543, norm(attn): 11.0000, norm(output): 0.3105, norm(x): 0.3497, norm(y): 0.9623, norm:0.3913, tok/sec: 183226.65, flops:192.35, batch-reuse:1
@ 1218 train 4.4693 , allloss: 4.4693, dt: 707.61ms, fracRes: 0.0544, norm(attn): 10.3750, norm(output): 0.3125, norm(x): 0.3508, norm(y): 0.9242, norm:0.4292, tok/sec: 185232.26, flops:194.46, batch-reuse:1
@ 1219 train 9.3831 , allloss: 9.3831, dt: 716.89ms, fracRes: 0.0543, norm(attn): 10.3750, norm(output): 4.4375, norm(x): 4.4469, norm(y): 0.9271, norm:8.6588, tok/sec: 182835.07, flops:191.94, batch-reuse:1
@ 1220 train 4.6865 , allloss: 4.6865, dt: 706.19ms, fracRes: 0.0547, norm(attn): 10.1250, norm(output): 0.3125, norm(x): 0.3547, norm(y): 0.9204, norm:0.7067, tok/sec: 185604.85, flops:194.85, batch-reuse:1
@ 1221 train 9.2237 , allloss: 9.2237, dt: 715.81ms, fracRes: 0.0590, norm(attn): 8.4375, norm(output): 9.8750, norm(x): 9.7725, norm(y): 0.9588, norm:18.9499, tok/sec: 183110.58, flops:192.23, batch-reuse:1
@ 1222 train 4.6478 , allloss: 4.6478, dt: 709.39ms, fracRes: 0.0544, norm(attn): 12.1250, norm(output): 0.3086, norm(x): 0.3473, norm(y): 0.9805, norm:0.7362, tok/sec: 184767.65, flops:193.97, batch-reuse:1
@ 1223 train 4.5947 , allloss: 4.5947, dt: 700.87ms, fracRes: 0.0536, norm(attn): 12.2500, norm(output): 0.3242, norm(x): 0.3623, norm(y): 0.9966, norm:0.9759, tok/sec: 187013.02, flops:196.33, batch-reuse:1
@ 1224 train 4.5708 , allloss: 4.5708, dt: 708.88ms, fracRes: 0.0547, norm(attn): 12.6875, norm(output): 0.3125, norm(x): 0.3528, norm(y): 0.9991, norm:0.5745, tok/sec: 184899.14, flops:194.11, batch-reuse:1
@ 1225 train 4.6143 , allloss: 4.6143, dt: 707.24ms, fracRes: 0.0559, norm(attn): 12.7500, norm(output): 0.3359, norm(x): 0.3768, norm(y): 0.9998, norm:0.7182, tok/sec: 185328.36, flops:194.56, batch-reuse:1
@ 1226 train 4.6983 , allloss: 4.6983, dt: 705.40ms, fracRes: 0.0547, norm(attn): 13.0000, norm(output): 0.3242, norm(x): 0.3652, norm(y): 1.0004, norm:0.6302, tok/sec: 185812.87, flops:195.07, batch-reuse:1
@ 1227 train 4.5778 , allloss: 4.5778, dt: 704.85ms, fracRes: 0.0543, norm(attn): 13.0625, norm(output): 0.3242, norm(x): 0.3637, norm(y): 1.0007, norm:0.4568, tok/sec: 185958.06, flops:195.22, batch-reuse:1
@ 1228 train 4.5809 , allloss: 4.5809, dt: 711.14ms, fracRes: 0.0543, norm(attn): 13.3125, norm(output): 0.3281, norm(x): 0.3639, norm(y): 1.0008, norm:0.4958, tok/sec: 184312.72, flops:193.49, batch-reuse:1
@ 1229 train 4.6164 , allloss: 4.6164, dt: 707.78ms, fracRes: 0.0548, norm(attn): 13.7500, norm(output): 0.3242, norm(x): 0.3634, norm(y): 1.0010, norm:0.5102, tok/sec: 185186.71, flops:194.41, batch-reuse:1
@ 1230 train 4.6767 , allloss: 4.6767, dt: 710.12ms, fracRes: 0.0541, norm(attn): 13.7500, norm(output): 0.3281, norm(x): 0.3642, norm(y): 1.0011, norm:0.4543, tok/sec: 184577.57, flops:193.77, batch-reuse:1
@ 1231 train 4.5815 , allloss: 4.5815, dt: 697.13ms, fracRes: 0.0545, norm(attn): 13.9375, norm(output): 0.3262, norm(x): 0.3676, norm(y): 1.0012, norm:0.4586, tok/sec: 188015.69, flops:197.38, batch-reuse:1
@ 1232 train 4.5778 , allloss: 4.5778, dt: 706.62ms, fracRes: 0.0543, norm(attn): 13.8750, norm(output): 0.3281, norm(x): 0.3675, norm(y): 1.0013, norm:0.4754, tok/sec: 185490.75, flops:194.73, batch-reuse:1
@ 1233 train 4.6302 , allloss: 4.6302, dt: 705.87ms, fracRes: 0.0548, norm(attn): 13.9375, norm(output): 0.3301, norm(x): 0.3670, norm(y): 1.0013, norm:0.4401, tok/sec: 185688.61, flops:194.94, batch-reuse:1
@ 1234 train 4.6338 , allloss: 4.6338, dt: 709.81ms, fracRes: 0.0548, norm(attn): 13.8750, norm(output): 0.3281, norm(x): 0.3651, norm(y): 1.0013, norm:0.3925, tok/sec: 184658.61, flops:193.85, batch-reuse:1
@ 1235 train 4.6720 , allloss: 4.6720, dt: 702.02ms, fracRes: 0.0540, norm(attn): 13.9375, norm(output): 0.3379, norm(x): 0.3747, norm(y): 1.0013, norm:0.4772, tok/sec: 186707.71, flops:196.01, batch-reuse:1
@ 1236 train 4.5661 , allloss: 4.5661, dt: 703.28ms, fracRes: 0.0554, norm(attn): 13.9375, norm(output): 0.3301, norm(x): 0.3700, norm(y): 1.0015, norm:0.4892, tok/sec: 186371.74, flops:195.65, batch-reuse:1
@ 1237 train 4.6458 , allloss: 4.6458, dt: 700.50ms, fracRes: 0.0547, norm(attn): 14.0000, norm(output): 0.3320, norm(x): 0.3716, norm(y): 1.0016, norm:0.5377, tok/sec: 187112.89, flops:196.43, batch-reuse:1
@ 1238 train 4.5980 , allloss: 4.5980, dt: 696.11ms, fracRes: 0.0540, norm(attn): 14.0625, norm(output): 0.3223, norm(x): 0.3657, norm(y): 1.0016, norm:0.4505, tok/sec: 188292.21, flops:197.67, batch-reuse:1
@ 1239 train 4.4993 , allloss: 4.4993, dt: 710.62ms, fracRes: 0.0543, norm(attn): 14.0000, norm(output): 0.3262, norm(x): 0.3674, norm(y): 1.0016, norm:0.4250, tok/sec: 184448.21, flops:193.63, batch-reuse:1
@ 1240 train 4.5420 , allloss: 4.5420, dt: 707.42ms, fracRes: 0.0538, norm(attn): 14.0000, norm(output): 0.3262, norm(x): 0.3683, norm(y): 1.0016, norm:0.4535, tok/sec: 185282.76, flops:194.51, batch-reuse:1
@ 1241 train 4.5387 , allloss: 4.5387, dt: 698.70ms, fracRes: 0.0539, norm(attn): 14.0000, norm(output): 0.3223, norm(x): 0.3612, norm(y): 1.0017, norm:0.3737, tok/sec: 187595.33, flops:196.94, batch-reuse:1
@ 1242 train 4.6259 , allloss: 4.6259, dt: 709.48ms, fracRes: 0.0539, norm(attn): 14.0000, norm(output): 0.3262, norm(x): 0.3612, norm(y): 1.0018, norm:0.4085, tok/sec: 184744.43, flops:193.95, batch-reuse:1
@ 1243 train 4.5952 , allloss: 4.5952, dt: 711.50ms, fracRes: 0.0539, norm(attn): 14.0625, norm(output): 0.3242, norm(x): 0.3613, norm(y): 1.0018, norm:0.4369, tok/sec: 184219.89, flops:193.39, batch-reuse:1
@ 1244 train 4.6077 , allloss: 4.6077, dt: 707.96ms, fracRes: 0.0539, norm(attn): 14.0625, norm(output): 0.3242, norm(x): 0.3631, norm(y): 1.0018, norm:0.4352, tok/sec: 185141.30, flops:194.36, batch-reuse:1
@ 1245 train 4.6171 , allloss: 4.6171, dt: 720.96ms, fracRes: 0.0540, norm(attn): 14.0625, norm(output): 0.3242, norm(x): 0.3632, norm(y): 1.0018, norm:0.3595, tok/sec: 181801.71, flops:190.86, batch-reuse:1
@ 1246 train 4.5848 , allloss: 4.5848, dt: 716.67ms, fracRes: 0.0538, norm(attn): 14.0625, norm(output): 0.3281, norm(x): 0.3642, norm(y): 1.0018, norm:0.3880, tok/sec: 182889.45, flops:192.00, batch-reuse:1
@ 1247 train 4.5004 , allloss: 4.5004, dt: 711.39ms, fracRes: 0.0539, norm(attn): 14.0625, norm(output): 0.3242, norm(x): 0.3609, norm(y): 1.0019, norm:0.3651, tok/sec: 184246.56, flops:193.42, batch-reuse:1
@ 1248 train 4.6336 , allloss: 4.6336, dt: 699.91ms, fracRes: 0.0540, norm(attn): 14.1875, norm(output): 0.3262, norm(x): 0.3632, norm(y): 1.0019, norm:0.3698, tok/sec: 187268.73, flops:196.60, batch-reuse:1
@ 1249 train 4.5228 , allloss: 4.5228, dt: 704.70ms, fracRes: 0.0542, norm(attn): 14.2500, norm(output): 0.3223, norm(x): 0.3610, norm(y): 1.0019, norm:0.3342, tok/sec: 185995.62, flops:195.26, batch-reuse:1
@ 1250 train 4.6072 , allloss: 4.6072, dt: 709.08ms, fracRes: 0.0550, norm(attn): 14.1875, norm(output): 0.3281, norm(x): 0.3667, norm(y): 1.0019, norm:0.3517, tok/sec: 184846.86, flops:194.05, batch-reuse:1
@ 1251 train 4.5165 , allloss: 4.5165, dt: 705.32ms, fracRes: 0.0541, norm(attn): 14.2500, norm(output): 0.3301, norm(x): 0.3652, norm(y): 1.0019, norm:0.3900, tok/sec: 185832.16, flops:195.09, batch-reuse:1
@ 1252 train 4.5313 , allloss: 4.5313, dt: 709.82ms, fracRes: 0.0550, norm(attn): 14.2500, norm(output): 0.3340, norm(x): 0.3721, norm(y): 1.0019, norm:0.3811, tok/sec: 184656.06, flops:193.85, batch-reuse:1
@ 1253 train 4.4107 , allloss: 4.4107, dt: 705.64ms, fracRes: 0.0550, norm(attn): 14.2500, norm(output): 0.3223, norm(x): 0.3602, norm(y): 1.0019, norm:0.4185, tok/sec: 185750.15, flops:195.00, batch-reuse:1
@ 1254 train 4.5041 , allloss: 4.5041, dt: 706.40ms, fracRes: 0.0540, norm(attn): 14.2500, norm(output): 0.3203, norm(x): 0.3585, norm(y): 1.0019, norm:0.4197, tok/sec: 185548.53, flops:194.79, batch-reuse:1
@ 1255 train 4.5416 , allloss: 4.5416, dt: 706.73ms, fracRes: 0.0539, norm(attn): 14.2500, norm(output): 0.3242, norm(x): 0.3586, norm(y): 1.0019, norm:0.3458, tok/sec: 185462.21, flops:194.70, batch-reuse:1
@ 1256 train 4.4777 , allloss: 4.4777, dt: 706.64ms, fracRes: 0.0543, norm(attn): 14.2500, norm(output): 0.3223, norm(x): 0.3594, norm(y): 1.0019, norm:0.4807, tok/sec: 185487.24, flops:194.72, batch-reuse:1
@ 1257 train 4.5605 , allloss: 4.5605, dt: 699.70ms, fracRes: 0.0541, norm(attn): 14.2500, norm(output): 0.3184, norm(x): 0.3557, norm(y): 1.0019, norm:0.4371, tok/sec: 187326.48, flops:196.66, batch-reuse:1
@ 1258 train 4.5158 , allloss: 4.5158, dt: 707.11ms, fracRes: 0.0545, norm(attn): 14.2500, norm(output): 0.3203, norm(x): 0.3571, norm(y): 1.0019, norm:0.3974, tok/sec: 185364.04, flops:194.60, batch-reuse:1
@ 1259 train 4.5494 , allloss: 4.5494, dt: 703.21ms, fracRes: 0.0547, norm(attn): 14.2500, norm(output): 0.3164, norm(x): 0.3590, norm(y): 1.0018, norm:0.3816, tok/sec: 186390.51, flops:195.67, batch-reuse:1
@ 1260 train 4.4910 , allloss: 4.4910, dt: 714.23ms, fracRes: 0.0547, norm(attn): 14.2500, norm(output): 0.3164, norm(x): 0.3557, norm(y): 1.0018, norm:0.3564, tok/sec: 183514.79, flops:192.65, batch-reuse:1
@ 1261 train 4.4920 , allloss: 4.4920, dt: 712.69ms, fracRes: 0.0546, norm(attn): 14.2500, norm(output): 0.3184, norm(x): 0.3583, norm(y): 1.0017, norm:0.3525, tok/sec: 183912.80, flops:193.07, batch-reuse:1
@ 1262 train 4.4279 , allloss: 4.4279, dt: 715.20ms, fracRes: 0.0552, norm(attn): 14.2500, norm(output): 0.3145, norm(x): 0.3544, norm(y): 1.0018, norm:0.3508, tok/sec: 183266.90, flops:192.39, batch-reuse:1
@ 1263 train 4.4782 , allloss: 4.4782, dt: 702.54ms, fracRes: 0.0548, norm(attn): 14.2500, norm(output): 0.3184, norm(x): 0.3571, norm(y): 1.0018, norm:0.3869, tok/sec: 186569.33, flops:195.86, batch-reuse:1
@ 1264 train 4.5279 , allloss: 4.5279, dt: 713.32ms, fracRes: 0.0553, norm(attn): 14.2500, norm(output): 0.3242, norm(x): 0.3629, norm(y): 1.0017, norm:0.3735, tok/sec: 183749.47, flops:192.90, batch-reuse:1
@ 1265 train 4.5517 , allloss: 4.5517, dt: 714.68ms, fracRes: 0.0540, norm(attn): 14.3125, norm(output): 0.3164, norm(x): 0.3565, norm(y): 1.0017, norm:0.4096, tok/sec: 183400.61, flops:192.53, batch-reuse:1
@ 1266 train 4.5230 , allloss: 4.5230, dt: 709.96ms, fracRes: 0.0545, norm(attn): 14.2500, norm(output): 0.3203, norm(x): 0.3606, norm(y): 1.0016, norm:0.4169, tok/sec: 184617.80, flops:193.81, batch-reuse:1
@ 1267 train 4.5888 , allloss: 4.5888, dt: 713.92ms, fracRes: 0.0543, norm(attn): 14.3750, norm(output): 0.3164, norm(x): 0.3555, norm(y): 1.0015, norm:0.4710, tok/sec: 183594.40, flops:192.74, batch-reuse:1
@ 1268 train 4.5107 , allloss: 4.5107, dt: 709.11ms, fracRes: 0.0546, norm(attn): 14.2500, norm(output): 0.3184, norm(x): 0.3588, norm(y): 1.0014, norm:0.4097, tok/sec: 184840.95, flops:194.05, batch-reuse:1
@ 1269 train 4.5092 , allloss: 4.5092, dt: 719.89ms, fracRes: 0.0546, norm(attn): 14.2500, norm(output): 0.3203, norm(x): 0.3556, norm(y): 1.0014, norm:0.3806, tok/sec: 182071.27, flops:191.14, batch-reuse:1
@ 1270 train 4.3842 , allloss: 4.3842, dt: 717.57ms, fracRes: 0.0554, norm(attn): 14.1875, norm(output): 0.3203, norm(x): 0.3594, norm(y): 1.0013, norm:0.4177, tok/sec: 182660.12, flops:191.76, batch-reuse:1
@ 1271 train 4.4657 , allloss: 4.4657, dt: 696.33ms, fracRes: 0.0545, norm(attn): 14.2500, norm(output): 0.3223, norm(x): 0.3613, norm(y): 1.0012, norm:0.3872, tok/sec: 188232.31, flops:197.61, batch-reuse:1
@ 1272 train 4.4377 , allloss: 4.4377, dt: 707.95ms, fracRes: 0.0549, norm(attn): 14.1250, norm(output): 0.3184, norm(x): 0.3582, norm(y): 1.0010, norm:0.4010, tok/sec: 185143.42, flops:194.36, batch-reuse:1
@ 1273 train 4.6373 , allloss: 4.6373, dt: 696.48ms, fracRes: 0.0544, norm(attn): 14.1250, norm(output): 0.3164, norm(x): 0.3566, norm(y): 1.0011, norm:0.4176, tok/sec: 188191.08, flops:197.56, batch-reuse:1
@ 1274 train 4.4374 , allloss: 4.4374, dt: 700.28ms, fracRes: 0.0557, norm(attn): 14.0625, norm(output): 0.3262, norm(x): 0.3659, norm(y): 1.0011, norm:0.4773, tok/sec: 187170.60, flops:196.49, batch-reuse:1
@ 1275 train 4.6242 , allloss: 4.6242, dt: 693.97ms, fracRes: 0.0553, norm(attn): 14.1250, norm(output): 0.3164, norm(x): 0.3574, norm(y): 1.0011, norm:0.5110, tok/sec: 188873.38, flops:198.28, batch-reuse:1
@ 1276 train 4.4363 , allloss: 4.4363, dt: 709.87ms, fracRes: 0.0545, norm(attn): 14.1250, norm(output): 0.3145, norm(x): 0.3523, norm(y): 1.0010, norm:0.4015, tok/sec: 184641.12, flops:193.84, batch-reuse:1
@ 1277 train 4.4375 , allloss: 4.4375, dt: 696.02ms, fracRes: 0.0548, norm(attn): 14.1250, norm(output): 0.3125, norm(x): 0.3512, norm(y): 1.0010, norm:0.4595, tok/sec: 188315.43, flops:197.69, batch-reuse:1
@ 1278 train 4.5484 , allloss: 4.5484, dt: 692.10ms, fracRes: 0.0556, norm(attn): 14.0625, norm(output): 0.3105, norm(x): 0.3491, norm(y): 1.0009, norm:0.4736, tok/sec: 189382.31, flops:198.81, batch-reuse:1
@ 1279 train 4.6122 , allloss: 4.6122, dt: 695.55ms, fracRes: 0.0557, norm(attn): 14.0625, norm(output): 0.3184, norm(x): 0.3554, norm(y): 1.0008, norm:0.4503, tok/sec: 188444.59, flops:197.83, batch-reuse:1
@ 1280 train 4.4152 , allloss: 4.4152, dt: 702.91ms, fracRes: 0.0546, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3490, norm(y): 1.0008, norm:0.3551, tok/sec: 186469.91, flops:195.76, batch-reuse:1
@ 1281 train 4.4317 , allloss: 4.4317, dt: 700.21ms, fracRes: 0.0546, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3486, norm(y): 1.0007, norm:0.3688, tok/sec: 187189.91, flops:196.51, batch-reuse:1
@ 1282 train 4.4547 , allloss: 4.4547, dt: 698.62ms, fracRes: 0.0541, norm(attn): 14.0625, norm(output): 0.3105, norm(x): 0.3466, norm(y): 1.0006, norm:0.3865, tok/sec: 187616.84, flops:196.96, batch-reuse:1
@ 1283 train 4.5254 , allloss: 4.5254, dt: 713.33ms, fracRes: 0.0541, norm(attn): 14.0625, norm(output): 0.3105, norm(x): 0.3440, norm(y): 1.0005, norm:0.3738, tok/sec: 183747.75, flops:192.90, batch-reuse:1
@ 1284 train 4.4172 , allloss: 4.4172, dt: 706.54ms, fracRes: 0.0551, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3542, norm(y): 1.0005, norm:0.4189, tok/sec: 185512.34, flops:194.75, batch-reuse:1
@ 1285 train 4.3498 , allloss: 4.3498, dt: 692.21ms, fracRes: 0.0544, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3518, norm(y): 1.0004, norm:0.4101, tok/sec: 189352.11, flops:198.78, batch-reuse:1
@ 1286 train 4.6150 , allloss: 4.6150, dt: 698.92ms, fracRes: 0.0549, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3522, norm(y): 1.0002, norm:0.4076, tok/sec: 187533.77, flops:196.87, batch-reuse:1
@ 1287 train 4.5136 , allloss: 4.5136, dt: 702.31ms, fracRes: 0.0544, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3516, norm(y): 1.0000, norm:0.4523, tok/sec: 186628.80, flops:195.92, batch-reuse:1
@ 1288 train 4.4598 , allloss: 4.4598, dt: 707.44ms, fracRes: 0.0538, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3492, norm(y): 0.9999, norm:0.4629, tok/sec: 185276.64, flops:194.50, batch-reuse:1
@ 1289 train 4.4105 , allloss: 4.4105, dt: 694.18ms, fracRes: 0.0541, norm(attn): 14.0000, norm(output): 0.3164, norm(x): 0.3546, norm(y): 0.9994, norm:0.4292, tok/sec: 188814.93, flops:198.22, batch-reuse:1
@ 1290 train 4.4112 , allloss: 4.4112, dt: 701.44ms, fracRes: 0.0541, norm(attn): 14.0000, norm(output): 0.3164, norm(x): 0.3534, norm(y): 0.9989, norm:0.4233, tok/sec: 186861.03, flops:196.17, batch-reuse:1
@ 1291 train 4.4673 , allloss: 4.4673, dt: 697.63ms, fracRes: 0.0541, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3462, norm(y): 0.9983, norm:0.4306, tok/sec: 187883.07, flops:197.24, batch-reuse:1
@ 1292 train 4.4314 , allloss: 4.4314, dt: 700.40ms, fracRes: 0.0537, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3424, norm(y): 0.9981, norm:0.4293, tok/sec: 187137.54, flops:196.46, batch-reuse:1
@ 1293 train 4.4998 , allloss: 4.4998, dt: 690.20ms, fracRes: 0.0543, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3427, norm(y): 0.9973, norm:0.3884, tok/sec: 189903.96, flops:199.36, batch-reuse:1
@ 1294 train 4.4211 , allloss: 4.4211, dt: 711.93ms, fracRes: 0.0546, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3443, norm(y): 0.9976, norm:0.4543, tok/sec: 184107.73, flops:193.28, batch-reuse:1
@ 1295 train 4.5552 , allloss: 4.5552, dt: 694.79ms, fracRes: 0.0546, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3499, norm(y): 0.9982, norm:0.5484, tok/sec: 188650.74, flops:198.05, batch-reuse:1
@ 1296 train 4.5301 , allloss: 4.5301, dt: 708.28ms, fracRes: 0.0548, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3452, norm(y): 0.9985, norm:0.4227, tok/sec: 185057.11, flops:194.27, batch-reuse:1
@ 1297 train 4.6098 , allloss: 4.6098, dt: 696.29ms, fracRes: 0.0546, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3477, norm(y): 0.9985, norm:0.4082, tok/sec: 188243.27, flops:197.62, batch-reuse:1
@ 1298 train 4.7037 , allloss: 4.7037, dt: 703.97ms, fracRes: 0.0555, norm(attn): 14.0625, norm(output): 0.3223, norm(x): 0.3602, norm(y): 0.9978, norm:0.4228, tok/sec: 186189.89, flops:195.46, batch-reuse:1
@ 1299 train 4.6758 , allloss: 4.6758, dt: 708.60ms, fracRes: 0.0549, norm(attn): 14.0625, norm(output): 0.3184, norm(x): 0.3521, norm(y): 0.9984, norm:0.3951, tok/sec: 184972.61, flops:194.18, batch-reuse:1
@ 1300 train 4.6036 , allloss: 4.6036, dt: 696.85ms, fracRes: 0.0548, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3535, norm(y): 0.9990, norm:0.4318, tok/sec: 188092.11, flops:197.46, batch-reuse:1
@ 1301 train 4.7079 , allloss: 4.7079, dt: 710.07ms, fracRes: 0.0553, norm(attn): 14.0625, norm(output): 0.3242, norm(x): 0.3614, norm(y): 0.9990, norm:0.4307, tok/sec: 184589.60, flops:193.78, batch-reuse:1
@ 1302 train 4.6690 , allloss: 4.6690, dt: 710.41ms, fracRes: 0.0560, norm(attn): 14.0000, norm(output): 0.3223, norm(x): 0.3585, norm(y): 0.9987, norm:0.4118, tok/sec: 184502.12, flops:193.69, batch-reuse:1
@ 1303 train 4.7031 , allloss: 4.7031, dt: 706.97ms, fracRes: 0.0566, norm(attn): 14.0000, norm(output): 0.3184, norm(x): 0.3599, norm(y): 0.9985, norm:0.5094, tok/sec: 185399.61, flops:194.63, batch-reuse:1
@ 1304 train 4.6918 , allloss: 4.6918, dt: 697.55ms, fracRes: 0.0559, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3520, norm(y): 0.9988, norm:0.4587, tok/sec: 187902.91, flops:197.26, batch-reuse:1
@ 1305 train 4.5947 , allloss: 4.5947, dt: 706.93ms, fracRes: 0.0559, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3544, norm(y): 0.9988, norm:0.4397, tok/sec: 185410.05, flops:194.64, batch-reuse:1
@ 1306 train 4.5105 , allloss: 4.5105, dt: 705.10ms, fracRes: 0.0562, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3502, norm(y): 0.9986, norm:0.4770, tok/sec: 185891.98, flops:195.15, batch-reuse:1
@ 1307 train 4.7291 , allloss: 4.7291, dt: 712.98ms, fracRes: 0.0559, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3548, norm(y): 0.9988, norm:0.4107, tok/sec: 183836.05, flops:192.99, batch-reuse:1
@ 1308 train 4.6959 , allloss: 4.6959, dt: 701.78ms, fracRes: 0.0561, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3538, norm(y): 0.9988, norm:0.4105, tok/sec: 186769.68, flops:196.07, batch-reuse:1
@ 1309 train 4.6297 , allloss: 4.6297, dt: 708.09ms, fracRes: 0.0555, norm(attn): 14.0625, norm(output): 0.3203, norm(x): 0.3591, norm(y): 0.9990, norm:0.4950, tok/sec: 185105.52, flops:194.32, batch-reuse:1
@ 1310 train 4.6502 , allloss: 4.6502, dt: 695.48ms, fracRes: 0.0553, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3513, norm(y): 0.9987, norm:0.4168, tok/sec: 188461.45, flops:197.85, batch-reuse:1
@ 1311 train 4.5584 , allloss: 4.5584, dt: 703.67ms, fracRes: 0.0568, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3501, norm(y): 0.9987, norm:0.4477, tok/sec: 186269.44, flops:195.55, batch-reuse:1
@ 1312 train 4.6710 , allloss: 4.6710, dt: 699.31ms, fracRes: 0.0558, norm(attn): 14.0625, norm(output): 0.3105, norm(x): 0.3488, norm(y): 0.9988, norm:0.3647, tok/sec: 187429.56, flops:196.76, batch-reuse:1
@ 1313 train 4.6891 , allloss: 4.6891, dt: 697.37ms, fracRes: 0.0568, norm(attn): 14.1250, norm(output): 0.3184, norm(x): 0.3593, norm(y): 0.9992, norm:0.4751, tok/sec: 187951.09, flops:197.31, batch-reuse:1
@ 1314 train 4.6524 , allloss: 4.6524, dt: 706.72ms, fracRes: 0.0552, norm(attn): 14.1875, norm(output): 0.3086, norm(x): 0.3465, norm(y): 0.9994, norm:0.5096, tok/sec: 185464.65, flops:194.70, batch-reuse:1
@ 1315 train 4.6454 , allloss: 4.6454, dt: 693.40ms, fracRes: 0.0554, norm(attn): 14.1250, norm(output): 0.3164, norm(x): 0.3544, norm(y): 0.9994, norm:0.5481, tok/sec: 189027.61, flops:198.44, batch-reuse:1
@ 1316 train 4.5772 , allloss: 4.5772, dt: 707.93ms, fracRes: 0.0561, norm(attn): 14.1875, norm(output): 0.3145, norm(x): 0.3541, norm(y): 0.9995, norm:0.4738, tok/sec: 185146.98, flops:194.37, batch-reuse:1
@ 1317 train 4.5960 , allloss: 4.5960, dt: 708.54ms, fracRes: 0.0568, norm(attn): 14.1250, norm(output): 0.3145, norm(x): 0.3539, norm(y): 0.9994, norm:0.5116, tok/sec: 184988.49, flops:194.20, batch-reuse:1
@ 1318 train 4.5883 , allloss: 4.5883, dt: 708.01ms, fracRes: 0.0553, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3500, norm(y): 0.9993, norm:0.5548, tok/sec: 185127.46, flops:194.35, batch-reuse:1
@ 1319 train 4.6494 , allloss: 4.6494, dt: 708.80ms, fracRes: 0.0556, norm(attn): 14.0625, norm(output): 0.3184, norm(x): 0.3555, norm(y): 0.9991, norm:0.4976, tok/sec: 184921.84, flops:194.13, batch-reuse:1
@ 1320 train 4.6931 , allloss: 4.6931, dt: 710.39ms, fracRes: 0.0549, norm(attn): 14.1250, norm(output): 0.3125, norm(x): 0.3498, norm(y): 0.9988, norm:0.5455, tok/sec: 184506.58, flops:193.70, batch-reuse:1
@ 1321 train 4.6646 , allloss: 4.6646, dt: 708.97ms, fracRes: 0.0551, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3467, norm(y): 0.9978, norm:0.5136, tok/sec: 184876.51, flops:194.08, batch-reuse:1
@ 1322 train 4.6312 , allloss: 4.6312, dt: 703.33ms, fracRes: 0.0554, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3486, norm(y): 0.9970, norm:0.4326, tok/sec: 186359.04, flops:195.64, batch-reuse:1
@ 1323 train 4.6164 , allloss: 4.6164, dt: 700.36ms, fracRes: 0.0567, norm(attn): 14.1250, norm(output): 0.3184, norm(x): 0.3547, norm(y): 0.9964, norm:0.5670, tok/sec: 187149.77, flops:196.47, batch-reuse:1
@ 1324 train 4.6247 , allloss: 4.6247, dt: 708.19ms, fracRes: 0.0563, norm(attn): 14.0625, norm(output): 0.3203, norm(x): 0.3569, norm(y): 0.9951, norm:0.4168, tok/sec: 185081.53, flops:194.30, batch-reuse:1
@ 1325 train 4.5912 , allloss: 4.5912, dt: 694.30ms, fracRes: 0.0555, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3476, norm(y): 0.9946, norm:0.3934, tok/sec: 188783.87, flops:198.19, batch-reuse:1
@ 1326 train 4.5913 , allloss: 4.5913, dt: 695.94ms, fracRes: 0.0558, norm(attn): 14.1250, norm(output): 0.3164, norm(x): 0.3523, norm(y): 0.9954, norm:0.4126, tok/sec: 188339.23, flops:197.72, batch-reuse:1
@ 1327 train 4.6380 , allloss: 4.6380, dt: 704.40ms, fracRes: 0.0569, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3548, norm(y): 0.9950, norm:0.4673, tok/sec: 186076.96, flops:195.34, batch-reuse:1
@ 1328 train 4.6324 , allloss: 4.6324, dt: 710.56ms, fracRes: 0.0563, norm(attn): 14.0625, norm(output): 0.3164, norm(x): 0.3549, norm(y): 0.9942, norm:0.4411, tok/sec: 184462.44, flops:193.65, batch-reuse:1
@ 1329 train 4.6712 , allloss: 4.6712, dt: 711.36ms, fracRes: 0.0551, norm(attn): 14.1875, norm(output): 0.3066, norm(x): 0.3445, norm(y): 0.9936, norm:0.3786, tok/sec: 184254.84, flops:193.43, batch-reuse:1
@ 1330 train 4.6920 , allloss: 4.6920, dt: 710.13ms, fracRes: 0.0571, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3489, norm(y): 0.9930, norm:0.4582, tok/sec: 184573.73, flops:193.77, batch-reuse:1
@ 1331 train 4.6773 , allloss: 4.6773, dt: 703.32ms, fracRes: 0.0567, norm(attn): 14.0625, norm(output): 0.3105, norm(x): 0.3518, norm(y): 0.9925, norm:0.4015, tok/sec: 186363.15, flops:195.64, batch-reuse:1
@ 1332 train 4.5863 , allloss: 4.5863, dt: 700.49ms, fracRes: 0.0558, norm(attn): 14.1875, norm(output): 0.3047, norm(x): 0.3451, norm(y): 0.9924, norm:0.4179, tok/sec: 187115.44, flops:196.43, batch-reuse:1
@ 1333 train 4.6041 , allloss: 4.6041, dt: 700.88ms, fracRes: 0.0559, norm(attn): 14.1875, norm(output): 0.3047, norm(x): 0.3441, norm(y): 0.9933, norm:0.3787, tok/sec: 187011.68, flops:196.33, batch-reuse:1
@ 1334 train 4.6096 , allloss: 4.6096, dt: 696.39ms, fracRes: 0.0558, norm(attn): 14.1875, norm(output): 0.3086, norm(x): 0.3480, norm(y): 0.9944, norm:0.4470, tok/sec: 188216.65, flops:197.59, batch-reuse:1
@ 1335 train 4.6700 , allloss: 4.6700, dt: 706.79ms, fracRes: 0.0553, norm(attn): 14.2500, norm(output): 0.3125, norm(x): 0.3491, norm(y): 0.9956, norm:0.4390, tok/sec: 185447.07, flops:194.68, batch-reuse:1
@ 1336 train 4.5459 , allloss: 4.5459, dt: 717.03ms, fracRes: 0.0558, norm(attn): 14.1875, norm(output): 0.3184, norm(x): 0.3541, norm(y): 0.9961, norm:0.5187, tok/sec: 182797.32, flops:191.90, batch-reuse:1
@ 1337 train 4.6136 , allloss: 4.6136, dt: 715.74ms, fracRes: 0.0561, norm(attn): 14.1875, norm(output): 0.3164, norm(x): 0.3538, norm(y): 0.9962, norm:0.4929, tok/sec: 183127.11, flops:192.25, batch-reuse:1
@ 1338 train 4.6122 , allloss: 4.6122, dt: 711.14ms, fracRes: 0.0550, norm(attn): 14.1250, norm(output): 0.3105, norm(x): 0.3479, norm(y): 0.9961, norm:0.4717, tok/sec: 184313.15, flops:193.49, batch-reuse:1
@ 1339 train 4.6069 , allloss: 4.6069, dt: 702.02ms, fracRes: 0.0561, norm(attn): 14.2500, norm(output): 0.3184, norm(x): 0.3583, norm(y): 0.9965, norm:0.4425, tok/sec: 186706.89, flops:196.01, batch-reuse:1
@ 1340 train 4.6102 , allloss: 4.6102, dt: 690.83ms, fracRes: 0.0555, norm(attn): 14.2500, norm(output): 0.3125, norm(x): 0.3502, norm(y): 0.9960, norm:0.5079, tok/sec: 189729.95, flops:199.18, batch-reuse:1
@ 1341 train 4.6769 , allloss: 4.6769, dt: 699.32ms, fracRes: 0.0548, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3475, norm(y): 0.9950, norm:0.4096, tok/sec: 187428.34, flops:196.76, batch-reuse:1
@ 1342 train 4.6788 , allloss: 4.6788, dt: 693.52ms, fracRes: 0.0565, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3525, norm(y): 0.9943, norm:0.5196, tok/sec: 188994.34, flops:198.41, batch-reuse:1
@ 1343 train 4.5770 , allloss: 4.5770, dt: 708.77ms, fracRes: 0.0565, norm(attn): 14.0625, norm(output): 0.3145, norm(x): 0.3540, norm(y): 0.9925, norm:0.4299, tok/sec: 184929.06, flops:194.14, batch-reuse:1
@ 1344 train 4.5823 , allloss: 4.5823, dt: 701.58ms, fracRes: 0.0561, norm(attn): 14.0000, norm(output): 0.3105, norm(x): 0.3503, norm(y): 0.9820, norm:0.4897, tok/sec: 186824.46, flops:196.13, batch-reuse:1
@ 1345 train 4.5413 , allloss: 4.5413, dt: 716.60ms, fracRes: 0.0547, norm(attn): 13.6250, norm(output): 0.3086, norm(x): 0.3471, norm(y): 0.9639, norm:0.4973, tok/sec: 182907.22, flops:192.02, batch-reuse:1
@ 1346 train 4.5618 , allloss: 4.5618, dt: 719.60ms, fracRes: 0.0564, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3463, norm(y): 0.9912, norm:0.4149, tok/sec: 182145.10, flops:191.22, batch-reuse:1
@ 1347 train 4.5457 , allloss: 4.5457, dt: 717.06ms, fracRes: 0.0564, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3470, norm(y): 0.9931, norm:0.4095, tok/sec: 182791.55, flops:191.89, batch-reuse:1
@ 1348 train 4.5747 , allloss: 4.5747, dt: 706.42ms, fracRes: 0.0564, norm(attn): 14.1250, norm(output): 0.3125, norm(x): 0.3502, norm(y): 0.9906, norm:0.3859, tok/sec: 185542.84, flops:194.78, batch-reuse:1
@ 1349 train 4.6366 , allloss: 4.6366, dt: 707.06ms, fracRes: 0.0552, norm(attn): 14.0000, norm(output): 0.2969, norm(x): 0.3402, norm(y): 0.9808, norm:0.4087, tok/sec: 185376.54, flops:194.61, batch-reuse:1
@ 1350 train 4.4889 , allloss: 4.4889, dt: 705.10ms, fracRes: 0.0561, norm(attn): 14.0000, norm(output): 0.3086, norm(x): 0.3483, norm(y): 0.9827, norm:0.3787, tok/sec: 185891.41, flops:195.15, batch-reuse:1
@ 1351 train 4.4959 , allloss: 4.4959, dt: 700.68ms, fracRes: 0.0571, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3464, norm(y): 0.9861, norm:0.3953, tok/sec: 187064.37, flops:196.38, batch-reuse:1
@ 1352 train 4.6453 , allloss: 4.6453, dt: 691.24ms, fracRes: 0.0577, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3523, norm(y): 0.9843, norm:0.4260, tok/sec: 189619.94, flops:199.06, batch-reuse:1
@ 1353 train 4.5703 , allloss: 4.5703, dt: 699.64ms, fracRes: 0.0565, norm(attn): 14.0000, norm(output): 0.3027, norm(x): 0.3432, norm(y): 0.9787, norm:0.4336, tok/sec: 187342.75, flops:196.67, batch-reuse:1
@ 1354 train 4.5739 , allloss: 4.5739, dt: 713.93ms, fracRes: 0.0567, norm(attn): 14.0000, norm(output): 0.3086, norm(x): 0.3479, norm(y): 0.9803, norm:0.3907, tok/sec: 183591.95, flops:192.74, batch-reuse:1
@ 1355 train 4.6483 , allloss: 4.6483, dt: 704.02ms, fracRes: 0.0565, norm(attn): 14.0625, norm(output): 0.3125, norm(x): 0.3518, norm(y): 0.9817, norm:0.4377, tok/sec: 186176.27, flops:195.45, batch-reuse:1
@ 1356 train 4.5629 , allloss: 4.5629, dt: 707.88ms, fracRes: 0.0570, norm(attn): 14.0625, norm(output): 0.3086, norm(x): 0.3500, norm(y): 0.9840, norm:0.4618, tok/sec: 185160.57, flops:194.38, batch-reuse:1
@ 1357 train 4.6274 , allloss: 4.6274, dt: 710.16ms, fracRes: 0.0558, norm(attn): 14.0625, norm(output): 0.3184, norm(x): 0.3578, norm(y): 0.9818, norm:0.5302, tok/sec: 184567.10, flops:193.76, batch-reuse:1
@ 1358 train 4.5971 , allloss: 4.5971, dt: 702.57ms, fracRes: 0.0554, norm(attn): 14.0625, norm(output): 0.3066, norm(x): 0.3462, norm(y): 0.9800, norm:0.4748, tok/sec: 186560.91, flops:195.85, batch-reuse:1
@ 1359 train 4.5051 , allloss: 4.5051, dt: 699.61ms, fracRes: 0.0566, norm(attn): 14.1875, norm(output): 0.3066, norm(x): 0.3459, norm(y): 0.9864, norm:0.3745, tok/sec: 187349.78, flops:196.68, batch-reuse:1
@ 1360 train 4.5231 , allloss: 4.5231, dt: 708.01ms, fracRes: 0.0569, norm(attn): 14.2500, norm(output): 0.3125, norm(x): 0.3518, norm(y): 0.9928, norm:0.4388, tok/sec: 185126.28, flops:194.35, batch-reuse:1
@ 1361 train 4.5880 , allloss: 4.5880, dt: 713.90ms, fracRes: 0.0563, norm(attn): 14.5625, norm(output): 0.3164, norm(x): 0.3577, norm(y): 0.9949, norm:0.4489, tok/sec: 183598.69, flops:192.74, batch-reuse:1
@ 1362 train 4.6628 , allloss: 4.6628, dt: 711.45ms, fracRes: 0.0562, norm(attn): 14.5625, norm(output): 0.3125, norm(x): 0.3492, norm(y): 0.9960, norm:0.4331, tok/sec: 184233.04, flops:193.41, batch-reuse:1
@ 1363 train 4.6184 , allloss: 4.6184, dt: 689.79ms, fracRes: 0.0553, norm(attn): 14.7500, norm(output): 0.3086, norm(x): 0.3449, norm(y): 0.9969, norm:0.3880, tok/sec: 190016.59, flops:199.48, batch-reuse:1
@ 1364 train 4.5061 , allloss: 4.5061, dt: 696.67ms, fracRes: 0.0566, norm(attn): 14.7500, norm(output): 0.3125, norm(x): 0.3500, norm(y): 0.9970, norm:0.4535, tok/sec: 188141.68, flops:197.51, batch-reuse:1
@ 1365 train 4.5945 , allloss: 4.5945, dt: 712.06ms, fracRes: 0.0581, norm(attn): 14.5000, norm(output): 0.3203, norm(x): 0.3603, norm(y): 0.9960, norm:0.5619, tok/sec: 184073.33, flops:193.24, batch-reuse:1
@ 1366 train 4.5549 , allloss: 4.5549, dt: 707.97ms, fracRes: 0.0574, norm(attn): 14.3750, norm(output): 0.3125, norm(x): 0.3556, norm(y): 0.9960, norm:0.3792, tok/sec: 185136.75, flops:194.36, batch-reuse:1
@ 1367 train 4.5181 , allloss: 4.5181, dt: 698.54ms, fracRes: 0.0569, norm(attn): 14.6875, norm(output): 0.3066, norm(x): 0.3482, norm(y): 0.9965, norm:0.4340, tok/sec: 187638.10, flops:196.98, batch-reuse:1
@ 1368 train 4.6413 , allloss: 4.6413, dt: 726.60ms, fracRes: 0.0567, norm(attn): 14.6875, norm(output): 0.3164, norm(x): 0.3558, norm(y): 0.9970, norm:0.4265, tok/sec: 180390.40, flops:189.37, batch-reuse:1
@ 1369 train 4.6901 , allloss: 4.6901, dt: 712.16ms, fracRes: 0.0555, norm(attn): 14.8125, norm(output): 0.3086, norm(x): 0.3479, norm(y): 0.9970, norm:0.4322, tok/sec: 184049.42, flops:193.22, batch-reuse:1
@ 1370 train 4.5639 , allloss: 4.5639, dt: 710.17ms, fracRes: 0.0551, norm(attn): 14.8125, norm(output): 0.3105, norm(x): 0.3472, norm(y): 0.9966, norm:0.4019, tok/sec: 184563.76, flops:193.76, batch-reuse:1
@ 1371 train 4.7631 , allloss: 4.7631, dt: 700.33ms, fracRes: 0.0557, norm(attn): 14.8125, norm(output): 0.3145, norm(x): 0.3551, norm(y): 0.9963, norm:0.5105, tok/sec: 187156.71, flops:196.48, batch-reuse:1
@ 1372 train 4.5286 , allloss: 4.5286, dt: 712.41ms, fracRes: 0.0560, norm(attn): 14.7500, norm(output): 0.3105, norm(x): 0.3457, norm(y): 0.9968, norm:0.4774, tok/sec: 183982.84, flops:193.15, batch-reuse:1
@ 1373 train 4.5557 , allloss: 4.5557, dt: 702.21ms, fracRes: 0.0556, norm(attn): 14.8125, norm(output): 0.3047, norm(x): 0.3429, norm(y): 0.9965, norm:0.4302, tok/sec: 186655.22, flops:195.95, batch-reuse:1
@ 1374 train 4.5079 , allloss: 4.5079, dt: 706.06ms, fracRes: 0.0559, norm(attn): 14.6250, norm(output): 0.3125, norm(x): 0.3544, norm(y): 0.9952, norm:0.4342, tok/sec: 185638.76, flops:194.88, batch-reuse:1
@ 1375 train 4.5294 , allloss: 4.5294, dt: 704.98ms, fracRes: 0.0553, norm(attn): 14.8125, norm(output): 0.3086, norm(x): 0.3497, norm(y): 0.9929, norm:0.4237, tok/sec: 185922.65, flops:195.18, batch-reuse:1
@ 1376 train 4.4997 , allloss: 4.4997, dt: 713.10ms, fracRes: 0.0567, norm(attn): 14.6875, norm(output): 0.3262, norm(x): 0.3656, norm(y): 0.9919, norm:0.5390, tok/sec: 183806.61, flops:192.96, batch-reuse:1
@ 1377 train 4.4777 , allloss: 4.4777, dt: 686.82ms, fracRes: 0.0562, norm(attn): 14.7500, norm(output): 0.3086, norm(x): 0.3457, norm(y): 0.9899, norm:0.4362, tok/sec: 190839.46, flops:200.34, batch-reuse:1
@ 1378 train 4.5845 , allloss: 4.5845, dt: 692.61ms, fracRes: 0.0577, norm(attn): 14.6875, norm(output): 0.3086, norm(x): 0.3487, norm(y): 0.9877, norm:0.3967, tok/sec: 189243.58, flops:198.67, batch-reuse:1
@ 1379 train 4.5391 , allloss: 4.5391, dt: 700.53ms, fracRes: 0.0574, norm(attn): 14.6875, norm(output): 0.3105, norm(x): 0.3500, norm(y): 0.9873, norm:0.3920, tok/sec: 187105.18, flops:196.42, batch-reuse:1
@ 1380 train 4.5065 , allloss: 4.5065, dt: 711.44ms, fracRes: 0.0561, norm(attn): 14.7500, norm(output): 0.3066, norm(x): 0.3444, norm(y): 0.9882, norm:0.3721, tok/sec: 184234.03, flops:193.41, batch-reuse:1
@ 1381 train 4.5273 , allloss: 4.5273, dt: 714.25ms, fracRes: 0.0567, norm(attn): 14.6875, norm(output): 0.3105, norm(x): 0.3500, norm(y): 0.9876, norm:0.4398, tok/sec: 183510.01, flops:192.65, batch-reuse:1
@ 1382 train 4.5217 , allloss: 4.5217, dt: 707.85ms, fracRes: 0.0564, norm(attn): 14.8125, norm(output): 0.3086, norm(x): 0.3476, norm(y): 0.9897, norm:0.3754, tok/sec: 185169.74, flops:194.39, batch-reuse:1
@ 1383 train 4.5475 , allloss: 4.5475, dt: 709.99ms, fracRes: 0.0569, norm(attn): 14.8125, norm(output): 0.3125, norm(x): 0.3559, norm(y): 0.9919, norm:0.3972, tok/sec: 184611.79, flops:193.81, batch-reuse:1
@ 1384 train 4.4164 , allloss: 4.4164, dt: 706.91ms, fracRes: 0.0563, norm(attn): 14.9375, norm(output): 0.3047, norm(x): 0.3444, norm(y): 0.9930, norm:0.4205, tok/sec: 185415.49, flops:194.65, batch-reuse:1
@ 1385 train 4.5457 , allloss: 4.5457, dt: 718.84ms, fracRes: 0.0559, norm(attn): 14.9375, norm(output): 0.3008, norm(x): 0.3425, norm(y): 0.9939, norm:0.4027, tok/sec: 182338.48, flops:191.42, batch-reuse:1
@ 1386 train 4.5133 , allloss: 4.5133, dt: 708.55ms, fracRes: 0.0559, norm(attn): 14.9375, norm(output): 0.3105, norm(x): 0.3468, norm(y): 0.9950, norm:0.4099, tok/sec: 184986.43, flops:194.20, batch-reuse:1
@ 1387 train 4.5341 , allloss: 4.5341, dt: 709.23ms, fracRes: 0.0561, norm(attn): 14.9375, norm(output): 0.3105, norm(x): 0.3463, norm(y): 0.9950, norm:0.4348, tok/sec: 184809.51, flops:194.01, batch-reuse:1
@ 1388 train 4.5732 , allloss: 4.5732, dt: 700.96ms, fracRes: 0.0563, norm(attn): 14.9375, norm(output): 0.3125, norm(x): 0.3469, norm(y): 0.9932, norm:0.4152, tok/sec: 186989.93, flops:196.30, batch-reuse:1
@ 1389 train 4.4120 , allloss: 4.4120, dt: 711.43ms, fracRes: 0.0561, norm(attn): 14.8125, norm(output): 0.3047, norm(x): 0.3438, norm(y): 0.9885, norm:0.4159, tok/sec: 184237.79, flops:193.41, batch-reuse:1
@ 1390 train 4.5928 , allloss: 4.5928, dt: 702.80ms, fracRes: 0.0580, norm(attn): 14.3125, norm(output): 0.3066, norm(x): 0.3506, norm(y): 0.9815, norm:0.5440, tok/sec: 186501.03, flops:195.79, batch-reuse:1
@ 1391 train 4.5077 , allloss: 4.5077, dt: 706.98ms, fracRes: 0.0558, norm(attn): 14.0000, norm(output): 0.3184, norm(x): 0.3575, norm(y): 0.9612, norm:0.4842, tok/sec: 185396.04, flops:194.63, batch-reuse:1
@ 1392 train 4.5073 , allloss: 4.5073, dt: 693.63ms, fracRes: 0.0548, norm(attn): 14.9375, norm(output): 0.3086, norm(x): 0.3447, norm(y): 0.9926, norm:0.4506, tok/sec: 188966.41, flops:198.38, batch-reuse:1
@ 1393 train 4.5204 , allloss: 4.5204, dt: 704.61ms, fracRes: 0.0543, norm(attn): 15.0000, norm(output): 0.3066, norm(x): 0.3412, norm(y): 0.9974, norm:0.4013, tok/sec: 186019.35, flops:195.28, batch-reuse:1
@ 1394 train 4.4620 , allloss: 4.4620, dt: 702.86ms, fracRes: 0.0549, norm(attn): 15.0000, norm(output): 0.3066, norm(x): 0.3437, norm(y): 0.9988, norm:0.4402, tok/sec: 186483.76, flops:195.77, batch-reuse:1
@ 1395 train 4.4958 , allloss: 4.4958, dt: 705.59ms, fracRes: 0.0550, norm(attn): 15.0625, norm(output): 0.3047, norm(x): 0.3438, norm(y): 0.9994, norm:0.4066, tok/sec: 185761.33, flops:195.01, batch-reuse:1
@ 1396 train 4.5023 , allloss: 4.5023, dt: 707.72ms, fracRes: 0.0549, norm(attn): 15.0625, norm(output): 0.3066, norm(x): 0.3447, norm(y): 0.9996, norm:0.3835, tok/sec: 185202.74, flops:194.43, batch-reuse:1
@ 1397 train 4.5257 , allloss: 4.5257, dt: 710.84ms, fracRes: 0.0552, norm(attn): 15.0625, norm(output): 0.3145, norm(x): 0.3497, norm(y): 0.9997, norm:0.4270, tok/sec: 184389.37, flops:193.57, batch-reuse:1
@ 1398 train 4.4721 , allloss: 4.4721, dt: 708.86ms, fracRes: 0.0553, norm(attn): 15.0625, norm(output): 0.3105, norm(x): 0.3492, norm(y): 0.9999, norm:0.3902, tok/sec: 184904.24, flops:194.11, batch-reuse:1
@ 1399 train 4.4447 , allloss: 4.4447, dt: 702.66ms, fracRes: 0.0557, norm(attn): 15.1250, norm(output): 0.3145, norm(x): 0.3522, norm(y): 1.0000, norm:0.4078, tok/sec: 186538.18, flops:195.83, batch-reuse:1
@ 1400 train 4.5676 , allloss: 4.5676, dt: 702.22ms, fracRes: 0.0568, norm(attn): 15.1875, norm(output): 0.3164, norm(x): 0.3528, norm(y): 1.0001, norm:0.3875, tok/sec: 186654.46, flops:195.95, batch-reuse:1
@ 1401 train 4.4617 , allloss: 4.4617, dt: 719.05ms, fracRes: 0.0562, norm(attn): 15.2500, norm(output): 0.3105, norm(x): 0.3467, norm(y): 1.0001, norm:0.4873, tok/sec: 182285.04, flops:191.36, batch-reuse:1
@ 1402 train 4.4184 , allloss: 4.4184, dt: 711.36ms, fracRes: 0.0558, norm(attn): 15.2500, norm(output): 0.3086, norm(x): 0.3490, norm(y): 1.0002, norm:0.4179, tok/sec: 184256.50, flops:193.43, batch-reuse:1
@ 1403 train 4.5383 , allloss: 4.5383, dt: 707.11ms, fracRes: 0.0564, norm(attn): 15.3750, norm(output): 0.3184, norm(x): 0.3594, norm(y): 1.0002, norm:0.5008, tok/sec: 185361.73, flops:194.59, batch-reuse:1
@ 1404 train 4.4527 , allloss: 4.4527, dt: 713.64ms, fracRes: 0.0556, norm(attn): 15.6250, norm(output): 0.3125, norm(x): 0.3501, norm(y): 1.0001, norm:0.4574, tok/sec: 183666.29, flops:192.81, batch-reuse:1
@ 1405 train 4.4579 , allloss: 4.4579, dt: 718.41ms, fracRes: 0.0559, norm(attn): 15.7500, norm(output): 0.3105, norm(x): 0.3519, norm(y): 1.0002, norm:0.4794, tok/sec: 182447.16, flops:191.53, batch-reuse:1
@ 1406 train 4.6136 , allloss: 4.6136, dt: 701.67ms, fracRes: 0.0553, norm(attn): 15.6250, norm(output): 0.3125, norm(x): 0.3515, norm(y): 1.0003, norm:0.4221, tok/sec: 186800.78, flops:196.10, batch-reuse:1
@ 1407 train 4.4797 , allloss: 4.4797, dt: 697.48ms, fracRes: 0.0550, norm(attn): 15.7500, norm(output): 0.3125, norm(x): 0.3524, norm(y): 1.0000, norm:0.4710, tok/sec: 187923.40, flops:197.28, batch-reuse:1
@ 1408 train 4.4522 , allloss: 4.4522, dt: 710.77ms, fracRes: 0.0554, norm(attn): 15.6250, norm(output): 0.3145, norm(x): 0.3505, norm(y): 0.9998, norm:0.4093, tok/sec: 184409.35, flops:193.59, batch-reuse:1
@ 1409 train 4.4824 , allloss: 4.4824, dt: 692.32ms, fracRes: 0.0554, norm(attn): 15.6875, norm(output): 0.3066, norm(x): 0.3437, norm(y): 0.9996, norm:0.4050, tok/sec: 189322.17, flops:198.75, batch-reuse:1
@ 1410 train 4.4859 , allloss: 4.4859, dt: 702.08ms, fracRes: 0.0547, norm(attn): 15.8125, norm(output): 0.3008, norm(x): 0.3391, norm(y): 0.9997, norm:0.4004, tok/sec: 186690.72, flops:195.99, batch-reuse:1
@ 1411 train 4.4496 , allloss: 4.4496, dt: 702.52ms, fracRes: 0.0551, norm(attn): 15.8125, norm(output): 0.3105, norm(x): 0.3472, norm(y): 0.9995, norm:0.4575, tok/sec: 186574.14, flops:195.87, batch-reuse:1
@ 1412 train 4.4115 , allloss: 4.4115, dt: 705.14ms, fracRes: 0.0552, norm(attn): 15.8125, norm(output): 0.3105, norm(x): 0.3508, norm(y): 0.9994, norm:0.4054, tok/sec: 185879.91, flops:195.14, batch-reuse:1
@ 1413 train 4.5000 , allloss: 4.5000, dt: 709.98ms, fracRes: 0.0550, norm(attn): 15.8750, norm(output): 0.3047, norm(x): 0.3422, norm(y): 0.9993, norm:0.4216, tok/sec: 184612.41, flops:193.81, batch-reuse:1
@ 1414 train 4.4070 , allloss: 4.4070, dt: 709.97ms, fracRes: 0.0554, norm(attn): 15.8750, norm(output): 0.3008, norm(x): 0.3394, norm(y): 0.9993, norm:0.3811, tok/sec: 184616.00, flops:193.81, batch-reuse:1
@ 1415 train 4.5702 , allloss: 4.5702, dt: 709.35ms, fracRes: 0.0539, norm(attn): 15.8125, norm(output): 0.3066, norm(x): 0.3425, norm(y): 0.9994, norm:0.4355, tok/sec: 184777.71, flops:193.98, batch-reuse:1
@ 1416 train 4.4690 , allloss: 4.4690, dt: 704.45ms, fracRes: 0.0568, norm(attn): 15.8125, norm(output): 0.3105, norm(x): 0.3526, norm(y): 0.9994, norm:0.4737, tok/sec: 186061.91, flops:195.33, batch-reuse:1
@ 1417 train 4.5198 , allloss: 4.5198, dt: 712.06ms, fracRes: 0.0552, norm(attn): 15.8125, norm(output): 0.3105, norm(x): 0.3476, norm(y): 0.9992, norm:0.4376, tok/sec: 184074.81, flops:193.24, batch-reuse:1
@ 1418 train 4.4606 , allloss: 4.4606, dt: 712.17ms, fracRes: 0.0559, norm(attn): 15.8750, norm(output): 0.3145, norm(x): 0.3520, norm(y): 0.9993, norm:0.4310, tok/sec: 184045.17, flops:193.21, batch-reuse:1
@ 1419 train 4.5457 , allloss: 4.5457, dt: 713.90ms, fracRes: 0.0552, norm(attn): 15.9375, norm(output): 0.3086, norm(x): 0.3453, norm(y): 0.9994, norm:0.4552, tok/sec: 183601.15, flops:192.74, batch-reuse:1
@ 1420 train 4.5287 , allloss: 4.5287, dt: 713.64ms, fracRes: 0.0567, norm(attn): 15.8750, norm(output): 0.3203, norm(x): 0.3589, norm(y): 0.9994, norm:0.4438, tok/sec: 183665.68, flops:192.81, batch-reuse:1
@ 1421 train 4.4667 , allloss: 4.4667, dt: 700.34ms, fracRes: 0.0567, norm(attn): 15.9375, norm(output): 0.3145, norm(x): 0.3533, norm(y): 0.9995, norm:0.4014, tok/sec: 187153.91, flops:196.47, batch-reuse:1
@ 1422 train 4.4629 , allloss: 4.4629, dt: 694.17ms, fracRes: 0.0560, norm(attn): 15.9375, norm(output): 0.3066, norm(x): 0.3445, norm(y): 0.9995, norm:0.3886, tok/sec: 188817.52, flops:198.22, batch-reuse:1
@ 1423 train 4.4431 , allloss: 4.4431, dt: 693.36ms, fracRes: 0.0570, norm(attn): 15.9375, norm(output): 0.3105, norm(x): 0.3503, norm(y): 0.9994, norm:0.4586, tok/sec: 189039.77, flops:198.45, batch-reuse:1
@ 1424 train 4.4729 , allloss: 4.4729, dt: 712.20ms, fracRes: 0.0569, norm(attn): 15.9375, norm(output): 0.3066, norm(x): 0.3458, norm(y): 0.9992, norm:0.3703, tok/sec: 184037.16, flops:193.20, batch-reuse:1
@ 1425 train 4.4576 , allloss: 4.4576, dt: 695.88ms, fracRes: 0.0566, norm(attn): 15.9375, norm(output): 0.3066, norm(x): 0.3458, norm(y): 0.9990, norm:0.3859, tok/sec: 188355.36, flops:197.74, batch-reuse:1
@ 1426 train 4.3536 , allloss: 4.3536, dt: 699.86ms, fracRes: 0.0578, norm(attn): 15.9375, norm(output): 0.3125, norm(x): 0.3488, norm(y): 0.9985, norm:0.3528, tok/sec: 187284.23, flops:196.61, batch-reuse:1
@ 1427 train 4.4407 , allloss: 4.4407, dt: 713.86ms, fracRes: 0.0574, norm(attn): 15.9375, norm(output): 0.3105, norm(x): 0.3460, norm(y): 0.9980, norm:0.3813, tok/sec: 183609.85, flops:192.75, batch-reuse:1
@ 1428 train 4.4387 , allloss: 4.4387, dt: 698.24ms, fracRes: 0.0571, norm(attn): 15.9375, norm(output): 0.3086, norm(x): 0.3439, norm(y): 0.9980, norm:0.3743, tok/sec: 187718.00, flops:197.07, batch-reuse:1
@ 1429 train 4.3951 , allloss: 4.3951, dt: 706.61ms, fracRes: 0.0592, norm(attn): 15.9375, norm(output): 0.3262, norm(x): 0.3655, norm(y): 0.9980, norm:0.4573, tok/sec: 185494.32, flops:194.73, batch-reuse:1
@ 1430 train 4.4915 , allloss: 4.4915, dt: 705.21ms, fracRes: 0.0572, norm(attn): 16.0000, norm(output): 0.3066, norm(x): 0.3444, norm(y): 0.9984, norm:0.4318, tok/sec: 185862.31, flops:195.12, batch-reuse:1
@ 1431 train 4.4287 , allloss: 4.4287, dt: 707.06ms, fracRes: 0.0563, norm(attn): 15.9375, norm(output): 0.3027, norm(x): 0.3411, norm(y): 0.9985, norm:0.4329, tok/sec: 185375.66, flops:194.61, batch-reuse:1
@ 1432 train 4.4097 , allloss: 4.4097, dt: 712.90ms, fracRes: 0.0558, norm(attn): 16.0000, norm(output): 0.2988, norm(x): 0.3377, norm(y): 0.9984, norm:0.3866, tok/sec: 183858.36, flops:193.01, batch-reuse:1
@ 1433 train 4.4476 , allloss: 4.4476, dt: 700.76ms, fracRes: 0.0578, norm(attn): 16.0000, norm(output): 0.3086, norm(x): 0.3475, norm(y): 0.9983, norm:0.3892, tok/sec: 187042.03, flops:196.36, batch-reuse:1
@ 1434 train 4.4690 , allloss: 4.4690, dt: 699.07ms, fracRes: 0.0581, norm(attn): 15.9375, norm(output): 0.3145, norm(x): 0.3554, norm(y): 0.9982, norm:0.4376, tok/sec: 187494.37, flops:196.83, batch-reuse:1
@ 1435 train 4.4121 , allloss: 4.4121, dt: 704.91ms, fracRes: 0.0565, norm(attn): 15.9375, norm(output): 0.3086, norm(x): 0.3477, norm(y): 0.9971, norm:0.3887, tok/sec: 185942.09, flops:195.20, batch-reuse:1
@ 1436 train 4.4242 , allloss: 4.4242, dt: 707.43ms, fracRes: 0.0567, norm(attn): 15.9375, norm(output): 0.2969, norm(x): 0.3407, norm(y): 0.9963, norm:0.3877, tok/sec: 185279.95, flops:194.51, batch-reuse:1
@ 1437 train 4.4330 , allloss: 4.4330, dt: 703.68ms, fracRes: 0.0567, norm(attn): 16.0000, norm(output): 0.3008, norm(x): 0.3431, norm(y): 0.9958, norm:0.3721, tok/sec: 186265.46, flops:195.54, batch-reuse:1
@ 1438 train 4.3119 , allloss: 4.3119, dt: 697.06ms, fracRes: 0.0575, norm(attn): 15.9375, norm(output): 0.3066, norm(x): 0.3471, norm(y): 0.9954, norm:0.3903, tok/sec: 188035.11, flops:197.40, batch-reuse:1
@ 1439 train 4.3485 , allloss: 4.3485, dt: 706.51ms, fracRes: 0.0580, norm(attn): 15.9375, norm(output): 0.3047, norm(x): 0.3456, norm(y): 0.9935, norm:0.4050, tok/sec: 185521.61, flops:194.76, batch-reuse:1
@ 1440 train 4.3749 , allloss: 4.3749, dt: 709.25ms, fracRes: 0.0580, norm(attn): 15.9375, norm(output): 0.3008, norm(x): 0.3427, norm(y): 0.9930, norm:0.3769, tok/sec: 184803.36, flops:194.01, batch-reuse:1
@ 1441 train 4.3618 , allloss: 4.3618, dt: 712.57ms, fracRes: 0.0574, norm(attn): 15.9375, norm(output): 0.3047, norm(x): 0.3433, norm(y): 0.9921, norm:0.3798, tok/sec: 183943.75, flops:193.10, batch-reuse:1
@ 1442 train 4.3789 , allloss: 4.3789, dt: 701.72ms, fracRes: 0.0564, norm(attn): 15.9375, norm(output): 0.3145, norm(x): 0.3524, norm(y): 0.9925, norm:0.4899, tok/sec: 186786.50, flops:196.09, batch-reuse:1
@ 1443 train 4.3556 , allloss: 4.3556, dt: 702.11ms, fracRes: 0.0563, norm(attn): 15.9375, norm(output): 0.3086, norm(x): 0.3471, norm(y): 0.9927, norm:0.4130, tok/sec: 186682.98, flops:195.98, batch-reuse:1
@ 1444 train 4.3453 , allloss: 4.3453, dt: 707.78ms, fracRes: 0.0568, norm(attn): 15.9375, norm(output): 0.3027, norm(x): 0.3428, norm(y): 0.9907, norm:0.4018, tok/sec: 185187.64, flops:194.41, batch-reuse:1
@ 1445 train 4.3595 , allloss: 4.3595, dt: 705.78ms, fracRes: 0.0578, norm(attn): 15.8125, norm(output): 0.3066, norm(x): 0.3476, norm(y): 0.9857, norm:0.4531, tok/sec: 185712.94, flops:194.96, batch-reuse:1
@ 1446 train 4.3928 , allloss: 4.3928, dt: 696.62ms, fracRes: 0.0577, norm(attn): 15.7500, norm(output): 0.3145, norm(x): 0.3543, norm(y): 0.9814, norm:0.4817, tok/sec: 188155.01, flops:197.53, batch-reuse:1
@ 1447 train 4.3958 , allloss: 4.3958, dt: 698.00ms, fracRes: 0.0579, norm(attn): 15.0625, norm(output): 0.3047, norm(x): 0.3447, norm(y): 0.9637, norm:0.6276, tok/sec: 187782.76, flops:197.13, batch-reuse:1
@ 1448 train 4.3980 , allloss: 4.3980, dt: 709.62ms, fracRes: 0.0582, norm(attn): 13.7500, norm(output): 0.3164, norm(x): 0.3560, norm(y): 0.9251, norm:15.1387, tok/sec: 184706.25, flops:193.90, batch-reuse:1
@ 1449 train 4.5619 , allloss: 4.5619, dt: 708.61ms, fracRes: 0.0601, norm(attn): 16.0000, norm(output): 0.3262, norm(x): 0.3664, norm(y): 0.9916, norm:1.1805, tok/sec: 184969.38, flops:194.18, batch-reuse:1
@ 1450 train 4.4761 , allloss: 4.4761, dt: 711.94ms, fracRes: 0.0572, norm(attn): 16.2500, norm(output): 0.2969, norm(x): 0.3364, norm(y): 0.9978, norm:0.7745, tok/sec: 184104.46, flops:193.27, batch-reuse:1
@ 1451 train 4.4159 , allloss: 4.4159, dt: 708.33ms, fracRes: 0.0586, norm(attn): 16.2500, norm(output): 0.2910, norm(x): 0.3347, norm(y): 0.9986, norm:0.7007, tok/sec: 185044.71, flops:194.26, batch-reuse:1
@ 1452 train 4.3855 , allloss: 4.3855, dt: 694.70ms, fracRes: 0.0574, norm(attn): 16.2500, norm(output): 0.3066, norm(x): 0.3463, norm(y): 0.9988, norm:0.6126, tok/sec: 188674.51, flops:198.07, batch-reuse:1
@ 1453 train 4.4765 , allloss: 4.4765, dt: 691.19ms, fracRes: 0.0571, norm(attn): 16.1250, norm(output): 0.3184, norm(x): 0.3573, norm(y): 0.9989, norm:0.5849, tok/sec: 189631.26, flops:199.08, batch-reuse:1
@ 1454 train 4.4327 , allloss: 4.4327, dt: 701.37ms, fracRes: 0.0562, norm(attn): 16.2500, norm(output): 0.3145, norm(x): 0.3515, norm(y): 0.9990, norm:0.6029, tok/sec: 186879.33, flops:196.19, batch-reuse:1
@ 1455 train 4.3355 , allloss: 4.3355, dt: 699.65ms, fracRes: 0.0556, norm(attn): 16.5000, norm(output): 0.3105, norm(x): 0.3453, norm(y): 0.9985, norm:0.5247, tok/sec: 187338.35, flops:196.67, batch-reuse:1
@ 1456 train 4.3659 , allloss: 4.3659, dt: 700.06ms, fracRes: 0.0569, norm(attn): 16.6250, norm(output): 0.3125, norm(x): 0.3510, norm(y): 0.9975, norm:0.5207, tok/sec: 187229.44, flops:196.55, batch-reuse:1
@ 1457 train 4.3999 , allloss: 4.3999, dt: 705.07ms, fracRes: 0.0568, norm(attn): 16.6250, norm(output): 0.3086, norm(x): 0.3460, norm(y): 0.9956, norm:0.4535, tok/sec: 185898.39, flops:195.16, batch-reuse:1
@ 1458 train 4.4238 , allloss: 4.4238, dt: 712.09ms, fracRes: 0.0582, norm(attn): 16.6250, norm(output): 0.3105, norm(x): 0.3480, norm(y): 0.9929, norm:0.5415, tok/sec: 184067.91, flops:193.23, batch-reuse:1
@ 1459 train 4.4339 , allloss: 4.4339, dt: 699.21ms, fracRes: 0.0559, norm(attn): 16.7500, norm(output): 0.2930, norm(x): 0.3341, norm(y): 0.9898, norm:5.2236, tok/sec: 187457.48, flops:196.79, batch-reuse:1
@ 1460 train 4.4669 , allloss: 4.4669, dt: 706.01ms, fracRes: 0.0540, norm(attn): 17.0000, norm(output): 0.2852, norm(x): 0.3248, norm(y): 0.9961, norm:0.6642, tok/sec: 185651.17, flops:194.90, batch-reuse:1
@ 1461 train 4.3455 , allloss: 4.3455, dt: 691.79ms, fracRes: 0.0531, norm(attn): 17.0000, norm(output): 0.2949, norm(x): 0.3301, norm(y): 0.9979, norm:0.4113, tok/sec: 189467.74, flops:198.90, batch-reuse:1
@ 1462 train 4.4008 , allloss: 4.4008, dt: 688.49ms, fracRes: 0.0519, norm(attn): 17.1250, norm(output): 0.3184, norm(x): 0.3523, norm(y): 0.9979, norm:24.5940, tok/sec: 190375.14, flops:199.86, batch-reuse:1
@ 1463 train 4.4496 , allloss: 4.4496, dt: 706.70ms, fracRes: 0.0507, norm(attn): 17.0000, norm(output): 0.3164, norm(x): 0.3517, norm(y): 1.0002, norm:0.8255, tok/sec: 185471.04, flops:194.71, batch-reuse:1
@ 1464 train 4.4354 , allloss: 4.4354, dt: 704.13ms, fracRes: 0.0491, norm(attn): 17.1250, norm(output): 0.3125, norm(x): 0.3451, norm(y): 1.0005, norm:0.5104, tok/sec: 186146.33, flops:195.42, batch-reuse:1
@ 1465 train 4.3188 , allloss: 4.3188, dt: 705.07ms, fracRes: 0.0504, norm(attn): 17.2500, norm(output): 0.3145, norm(x): 0.3469, norm(y): 1.0009, norm:2.9858, tok/sec: 185899.33, flops:195.16, batch-reuse:1
@ 1466 train 4.3378 , allloss: 4.3378, dt: 716.57ms, fracRes: 0.0493, norm(attn): 17.2500, norm(output): 0.3125, norm(x): 0.3431, norm(y): 1.0012, norm:0.6861, tok/sec: 182914.77, flops:192.02, batch-reuse:1
@ 1467 train 4.4144 , allloss: 4.4144, dt: 715.97ms, fracRes: 0.0492, norm(attn): 17.2500, norm(output): 0.3164, norm(x): 0.3476, norm(y): 1.0012, norm:0.4699, tok/sec: 183067.89, flops:192.19, batch-reuse:1
@ 1468 train 4.4855 , allloss: 4.4855, dt: 717.95ms, fracRes: 0.0567, norm(attn): 15.8750, norm(output): 0.3633, norm(x): 0.3978, norm(y): 1.0003, norm:11.1568, tok/sec: 182564.82, flops:191.66, batch-reuse:1
@ 1469 train 10.9054 , allloss: 10.9054, dt: 720.43ms, fracRes: 0.0570, norm(attn): 13.2500, norm(output): 18.0000, norm(x): 17.9920, norm(y): 0.9968, norm:10.3104, tok/sec: 181935.39, flops:191.00, batch-reuse:1
@ 1470 train 9.6113 , allloss: 9.6113, dt: 714.10ms, fracRes: 0.0576, norm(attn): 13.4375, norm(output): 18.7500, norm(x): 18.7786, norm(y): 0.9972, norm:7.9828, tok/sec: 183547.33, flops:192.69, batch-reuse:1
@ 1471 train 8.5020 , allloss: 8.5020, dt: 714.98ms, fracRes: 0.0591, norm(attn): 13.1250, norm(output): 19.2500, norm(x): 19.3060, norm(y): 0.9974, norm:4.9277, tok/sec: 183323.68, flops:192.45, batch-reuse:1
@ 1472 train 7.9826 , allloss: 7.9826, dt: 716.82ms, fracRes: 0.0614, norm(attn): 13.0000, norm(output): 19.2500, norm(x): 19.2198, norm(y): 0.9976, norm:2.1508, tok/sec: 182852.28, flops:191.96, batch-reuse:1
@ 1473 train 8.2932 , allloss: 8.2932, dt: 712.92ms, fracRes: 0.0684, norm(attn): 12.3750, norm(output): 18.7500, norm(x): 18.8585, norm(y): 0.9978, norm:3.0455, tok/sec: 183851.60, flops:193.01, batch-reuse:1
@ 1474 train 8.3586 , allloss: 8.3586, dt: 723.58ms, fracRes: 0.0718, norm(attn): 12.7500, norm(output): 19.2500, norm(x): 19.3006, norm(y): 0.9978, norm:2.9489, tok/sec: 181143.97, flops:190.17, batch-reuse:1
@ 1475 train 7.9251 , allloss: 7.9251, dt: 719.67ms, fracRes: 0.0784, norm(attn): 12.8750, norm(output): 19.8750, norm(x): 19.7909, norm(y): 0.9980, norm:2.2382, tok/sec: 182127.91, flops:191.20, batch-reuse:1
@ 1476 train 7.7257 , allloss: 7.7257, dt: 724.11ms, fracRes: 0.0935, norm(attn): 13.0000, norm(output): 20.1250, norm(x): 20.3346, norm(y): 0.9982, norm:3.2645, tok/sec: 181011.50, flops:190.03, batch-reuse:1
@ 1477 train 7.8403 , allloss: 7.8403, dt: 713.36ms, fracRes: 0.0966, norm(attn): 13.0000, norm(output): 20.2500, norm(x): 20.5440, norm(y): 0.9982, norm:4.1805, tok/sec: 183737.80, flops:192.89, batch-reuse:1
@ 1478 train 7.8149 , allloss: 7.8149, dt: 714.12ms, fracRes: 0.0970, norm(attn): 13.0625, norm(output): 20.1250, norm(x): 20.2162, norm(y): 0.9983, norm:4.6325, tok/sec: 183542.49, flops:192.68, batch-reuse:1
@ 1479 train 7.6766 , allloss: 7.6766, dt: 719.91ms, fracRes: 0.0982, norm(attn): 14.2500, norm(output): 18.1250, norm(x): 18.2026, norm(y): 0.9990, norm:3.0556, tok/sec: 182066.32, flops:191.13, batch-reuse:1
@ 1480 train 7.6126 , allloss: 7.6126, dt: 718.72ms, fracRes: 0.1020, norm(attn): 12.3750, norm(output): 18.0000, norm(x): 18.1868, norm(y): 0.9991, norm:2.0080, tok/sec: 182367.52, flops:191.45, batch-reuse:1
@ 1481 train 7.5685 , allloss: 7.5685, dt: 714.42ms, fracRes: 0.1030, norm(attn): 12.0625, norm(output): 18.1250, norm(x): 18.2292, norm(y): 0.9988, norm:1.2008, tok/sec: 183465.19, flops:192.60, batch-reuse:1
@ 1482 train 7.5449 , allloss: 7.5449, dt: 716.89ms, fracRes: 0.1041, norm(attn): 12.2500, norm(output): 17.8750, norm(x): 18.0133, norm(y): 0.9987, norm:1.3567, tok/sec: 182834.89, flops:191.94, batch-reuse:1
@ 1483 train 7.4548 , allloss: 7.4548, dt: 697.90ms, fracRes: 0.1046, norm(attn): 13.0000, norm(output): 17.7500, norm(x): 17.6504, norm(y): 0.9992, norm:0.9855, tok/sec: 187808.87, flops:197.16, batch-reuse:1
@ 1484 train 7.4366 , allloss: 7.4366, dt: 695.93ms, fracRes: 0.1093, norm(attn): 13.1250, norm(output): 17.0000, norm(x): 17.0643, norm(y): 0.9991, norm:1.0661, tok/sec: 188339.49, flops:197.72, batch-reuse:1
@ 1485 train 7.3891 , allloss: 7.3891, dt: 710.64ms, fracRes: 0.1024, norm(attn): 13.7500, norm(output): 16.1250, norm(x): 16.3214, norm(y): 0.9988, norm:0.9048, tok/sec: 184441.83, flops:193.63, batch-reuse:1
@ 1486 train 7.2566 , allloss: 7.2566, dt: 709.38ms, fracRes: 0.1161, norm(attn): 12.9375, norm(output): 15.1875, norm(x): 15.3855, norm(y): 0.9983, norm:0.8296, tok/sec: 184770.13, flops:193.97, batch-reuse:1
@ 1487 train 7.1120 , allloss: 7.1120, dt: 695.48ms, fracRes: 0.1153, norm(attn): 12.8125, norm(output): 14.0625, norm(x): 14.1720, norm(y): 0.9987, norm:0.7643, tok/sec: 188463.13, flops:197.85, batch-reuse:1
@ 1488 train 7.0146 , allloss: 7.0146, dt: 704.43ms, fracRes: 0.1107, norm(attn): 12.7500, norm(output): 12.8125, norm(x): 12.8098, norm(y): 0.9985, norm:1.2823, tok/sec: 186069.46, flops:195.34, batch-reuse:1
@ 1489 train 8.9815 , allloss: 8.9815, dt: 716.57ms, fracRes: 0.1140, norm(attn): 11.8750, norm(output): 24.5000, norm(x): 24.6069, norm(y): 0.9962, norm:13.9962, tok/sec: 182916.77, flops:192.03, batch-reuse:1
@ 1490 train 7.2113 , allloss: 7.2113, dt: 713.00ms, fracRes: 0.0742, norm(attn): 12.3750, norm(output): 13.8125, norm(x): 13.8691, norm(y): 0.9967, norm:4.7226, tok/sec: 183832.67, flops:192.99, batch-reuse:1
@ 1491 train 7.0839 , allloss: 7.0839, dt: 718.47ms, fracRes: 0.0477, norm(attn): 14.0000, norm(output): 10.8750, norm(x): 10.9319, norm(y): 0.9986, norm:2.8048, tok/sec: 182432.15, flops:191.52, batch-reuse:1
@ 1492 train 7.1833 , allloss: 7.1833, dt: 712.38ms, fracRes: 0.1085, norm(attn): 14.0625, norm(output): 8.0000, norm(x): 8.0385, norm(y): 0.9988, norm:5.4148, tok/sec: 183991.34, flops:193.15, batch-reuse:1
@ 1493 train 7.2029 , allloss: 7.2029, dt: 704.49ms, fracRes: 0.1265, norm(attn): 14.8125, norm(output): 7.1250, norm(x): 7.2633, norm(y): 0.9989, norm:4.7971, tok/sec: 186053.09, flops:195.32, batch-reuse:1
@ 1494 train 6.8293 , allloss: 6.8293, dt: 704.09ms, fracRes: 0.1236, norm(attn): 15.0000, norm(output): 6.8750, norm(x): 6.9123, norm(y): 0.9989, norm:2.2574, tok/sec: 186158.74, flops:195.43, batch-reuse:1
@ 1495 train 6.7954 , allloss: 6.7954, dt: 703.10ms, fracRes: 0.1253, norm(attn): 14.9375, norm(output): 6.4688, norm(x): 6.5049, norm(y): 0.9987, norm:169.9934, tok/sec: 186420.40, flops:195.70, batch-reuse:1
@ 1496 train 7.6511 , allloss: 7.6511, dt: 705.63ms, fracRes: 0.1241, norm(attn): 14.1250, norm(output): 6.7500, norm(x): 6.8340, norm(y): 0.9982, norm:39.3728, tok/sec: 185751.79, flops:195.00, batch-reuse:1
@ 1497 train 8.0294 , allloss: 8.0294, dt: 693.65ms, fracRes: 0.1225, norm(attn): 12.9375, norm(output): 21.6250, norm(x): 21.7903, norm(y): 0.9977, norm:19.6913, tok/sec: 188960.82, flops:198.37, batch-reuse:1
@ 1498 train 7.9325 , allloss: 7.9325, dt: 709.24ms, fracRes: 0.1274, norm(attn): 11.6875, norm(output): 25.8750, norm(x): 25.6737, norm(y): 0.9970, norm:2.8385, tok/sec: 184806.34, flops:194.01, batch-reuse:1
@ 1499 train 7.9348 , allloss: 7.9348, dt: 719.00ms, fracRes: 0.1373, norm(attn): 11.3125, norm(output): 25.3750, norm(x): 25.3699, norm(y): 0.9964, norm:2.2460, tok/sec: 182298.27, flops:191.38, batch-reuse:1
@ 1500 train 7.7578 , allloss: 7.7578, dt: 702.97ms, fracRes: 0.1444, norm(attn): 11.0000, norm(output): 24.0000, norm(x): 24.0520, norm(y): 0.9965, norm:1.7079, tok/sec: 186454.99, flops:195.74, batch-reuse:1
@ 1501 train 7.4574 , allloss: 7.4574, dt: 703.64ms, fracRes: 0.1428, norm(attn): 10.6875, norm(output): 22.0000, norm(x): 21.9579, norm(y): 0.9967, norm:2.1385, tok/sec: 186277.27, flops:195.55, batch-reuse:1
@ 1502 train 7.3512 , allloss: 7.3512, dt: 692.49ms, fracRes: 0.1394, norm(attn): 10.0000, norm(output): 15.6875, norm(x): 15.8157, norm(y): 0.9965, norm:7.4055, tok/sec: 189275.77, flops:198.70, batch-reuse:1
@ 1503 train 7.3158 , allloss: 7.3158, dt: 709.75ms, fracRes: 0.1420, norm(attn): 10.1875, norm(output): 19.0000, norm(x): 19.1234, norm(y): 0.9960, norm:2.6225, tok/sec: 184674.42, flops:193.87, batch-reuse:1
@ 1504 train 7.2164 , allloss: 7.2164, dt: 703.76ms, fracRes: 0.1436, norm(attn): 10.0625, norm(output): 18.0000, norm(x): 18.0239, norm(y): 0.9953, norm:1.8392, tok/sec: 186246.60, flops:195.52, batch-reuse:1
@ 1505 train 9.3220 , allloss: 9.3220, dt: 705.46ms, fracRes: 0.1456, norm(attn): 9.3750, norm(output): 23.6250, norm(x): 23.6652, norm(y): 0.9959, norm:214.0766, tok/sec: 185795.60, flops:195.05, batch-reuse:1
@ 1506 train 8.7419 , allloss: 8.7419, dt: 703.29ms, fracRes: 0.1407, norm(attn): 9.9375, norm(output): 19.8750, norm(x): 19.8850, norm(y): 0.9960, norm:47.2444, tok/sec: 186368.90, flops:195.65, batch-reuse:1
@ 1507 train 7.3887 , allloss: 7.3887, dt: 706.95ms, fracRes: 0.1390, norm(attn): 12.7500, norm(output): 14.1250, norm(x): 14.3357, norm(y): 0.9962, norm:2.7526, tok/sec: 185405.80, flops:194.64, batch-reuse:1
@ 1508 train 7.1079 , allloss: 7.1079, dt: 697.00ms, fracRes: 0.1380, norm(attn): 14.0625, norm(output): 14.8125, norm(x): 14.9027, norm(y): 0.9987, norm:2.3491, tok/sec: 188052.16, flops:197.42, batch-reuse:1
@ 1509 train 7.0934 , allloss: 7.0934, dt: 702.88ms, fracRes: 0.1371, norm(attn): 15.0625, norm(output): 15.0000, norm(x): 15.1212, norm(y): 0.9994, norm:2.5770, tok/sec: 186478.01, flops:195.76, batch-reuse:1
@ 1510 train 7.0625 , allloss: 7.0625, dt: 713.29ms, fracRes: 0.1357, norm(attn): 15.7500, norm(output): 15.0000, norm(x): 15.0414, norm(y): 0.9998, norm:1.9856, tok/sec: 183757.21, flops:192.91, batch-reuse:1
@ 1511 train 6.9442 , allloss: 6.9442, dt: 710.67ms, fracRes: 0.1352, norm(attn): 16.0000, norm(output): 14.3750, norm(x): 14.5758, norm(y): 1.0002, norm:1.2140, tok/sec: 184435.09, flops:193.62, batch-reuse:1
@ 1512 train 6.9294 , allloss: 6.9294, dt: 713.82ms, fracRes: 0.1351, norm(attn): 16.1250, norm(output): 13.7500, norm(x): 13.9074, norm(y): 1.0003, norm:1.7979, tok/sec: 183620.59, flops:192.77, batch-reuse:1
@ 1513 train 6.7953 , allloss: 6.7953, dt: 697.97ms, fracRes: 0.1348, norm(attn): 16.2500, norm(output): 13.0625, norm(x): 13.0778, norm(y): 1.0006, norm:1.1203, tok/sec: 187790.39, flops:197.14, batch-reuse:1
@ 1514 train 6.8427 , allloss: 6.8427, dt: 709.38ms, fracRes: 0.1354, norm(attn): 16.6250, norm(output): 12.0000, norm(x): 12.0890, norm(y): 1.0008, norm:2.1480, tok/sec: 184770.63, flops:193.97, batch-reuse:1
@ 1515 train 6.6541 , allloss: 6.6541, dt: 707.96ms, fracRes: 0.1386, norm(attn): 16.8750, norm(output): 11.1875, norm(x): 11.3599, norm(y): 1.0010, norm:1.4762, tok/sec: 185140.62, flops:194.36, batch-reuse:1
@ 1516 train 6.4982 , allloss: 6.4982, dt: 705.23ms, fracRes: 0.1433, norm(attn): 16.8750, norm(output): 10.6250, norm(x): 10.6923, norm(y): 1.0013, norm:1.3705, tok/sec: 185857.85, flops:195.11, batch-reuse:1
@ 1517 train 6.4606 , allloss: 6.4606, dt: 707.44ms, fracRes: 0.1463, norm(attn): 16.8750, norm(output): 9.8750, norm(x): 9.9807, norm(y): 1.0015, norm:0.9413, tok/sec: 185277.58, flops:194.50, batch-reuse:1
@ 1518 train 6.4112 , allloss: 6.4112, dt: 710.39ms, fracRes: 0.1511, norm(attn): 16.3750, norm(output): 8.9375, norm(x): 8.9993, norm(y): 1.0018, norm:2.2677, tok/sec: 184507.51, flops:193.70, batch-reuse:1
@ 1519 train 6.3480 , allloss: 6.3480, dt: 709.17ms, fracRes: 0.1513, norm(attn): 16.2500, norm(output): 8.2500, norm(x): 8.3413, norm(y): 1.0020, norm:1.8810, tok/sec: 184825.73, flops:194.03, batch-reuse:1
@ 1520 train 6.3081 , allloss: 6.3081, dt: 710.75ms, fracRes: 0.1509, norm(attn): 16.2500, norm(output): 7.7188, norm(x): 7.8388, norm(y): 1.0021, norm:1.3200, tok/sec: 184414.73, flops:193.60, batch-reuse:1
@ 1521 train 6.2211 , allloss: 6.2211, dt: 702.00ms, fracRes: 0.1521, norm(attn): 16.8750, norm(output): 7.0625, norm(x): 7.1800, norm(y): 1.0023, norm:1.4012, tok/sec: 186711.90, flops:196.01, batch-reuse:1
@ 1522 train 6.1648 , allloss: 6.1648, dt: 708.92ms, fracRes: 0.1517, norm(attn): 16.2500, norm(output): 6.4375, norm(x): 6.5067, norm(y): 1.0026, norm:0.9739, tok/sec: 184890.44, flops:194.10, batch-reuse:1
@ 1523 train 6.0847 , allloss: 6.0847, dt: 702.31ms, fracRes: 0.1507, norm(attn): 15.9375, norm(output): 5.8438, norm(x): 5.9160, norm(y): 1.0026, norm:1.1241, tok/sec: 186629.18, flops:195.92, batch-reuse:1
@ 1524 train 6.0944 , allloss: 6.0944, dt: 693.37ms, fracRes: 0.1520, norm(attn): 15.7500, norm(output): 5.0625, norm(x): 5.2456, norm(y): 1.0029, norm:2.9889, tok/sec: 189036.91, flops:198.45, batch-reuse:1
@ 1525 train 6.0134 , allloss: 6.0134, dt: 758.32ms, fracRes: 0.1516, norm(attn): 15.9375, norm(output): 5.0000, norm(x): 5.0837, norm(y): 1.0030, norm:1.9672, tok/sec: 172845.11, flops:181.45, batch-reuse:1
@ 1526 train 6.1506 , allloss: 6.1506, dt: 697.37ms, fracRes: 0.1499, norm(attn): 16.0000, norm(output): 5.0625, norm(x): 5.1107, norm(y): 1.0029, norm:2.4629, tok/sec: 187951.73, flops:197.31, batch-reuse:1
@ 1527 train 5.9045 , allloss: 5.9045, dt: 697.77ms, fracRes: 0.1498, norm(attn): 16.0000, norm(output): 4.9375, norm(x): 5.0006, norm(y): 1.0029, norm:1.7066, tok/sec: 187843.14, flops:197.20, batch-reuse:1
@ 1528 train 5.9804 , allloss: 5.9804, dt: 694.23ms, fracRes: 0.1499, norm(attn): 16.1250, norm(output): 4.5938, norm(x): 4.6741, norm(y): 1.0030, norm:1.9805, tok/sec: 188802.28, flops:198.20, batch-reuse:1
@ 1529 train 5.8058 , allloss: 5.8058, dt: 698.04ms, fracRes: 0.1487, norm(attn): 16.0000, norm(output): 4.4688, norm(x): 4.5228, norm(y): 1.0031, norm:1.2120, tok/sec: 187770.57, flops:197.12, batch-reuse:1
@ 1530 train 5.8509 , allloss: 5.8509, dt: 701.40ms, fracRes: 0.1477, norm(attn): 15.9375, norm(output): 4.2500, norm(x): 4.3348, norm(y): 1.0031, norm:2.0669, tok/sec: 186872.09, flops:196.18, batch-reuse:1
@ 1531 train 5.6255 , allloss: 5.6255, dt: 706.51ms, fracRes: 0.1487, norm(attn): 15.9375, norm(output): 4.0312, norm(x): 4.0969, norm(y): 1.0033, norm:1.4000, tok/sec: 185521.05, flops:194.76, batch-reuse:1
@ 1532 train 5.7858 , allloss: 5.7858, dt: 701.50ms, fracRes: 0.1506, norm(attn): 16.0000, norm(output): 3.6406, norm(x): 3.7210, norm(y): 1.0034, norm:2.5134, tok/sec: 186844.78, flops:196.15, batch-reuse:1
@ 1533 train 5.7197 , allloss: 5.7197, dt: 717.61ms, fracRes: 0.1498, norm(attn): 15.9375, norm(output): 3.4688, norm(x): 3.5420, norm(y): 1.0034, norm:2.3814, tok/sec: 182651.62, flops:191.75, batch-reuse:1
@ 1534 train 5.6222 , allloss: 5.6222, dt: 727.98ms, fracRes: 0.1476, norm(attn): 15.9375, norm(output): 3.4062, norm(x): 3.4589, norm(y): 1.0034, norm:0.8858, tok/sec: 180049.52, flops:189.02, batch-reuse:1
@ 1535 train 5.5899 , allloss: 5.5899, dt: 724.54ms, fracRes: 0.1465, norm(attn): 15.8750, norm(output): 3.2812, norm(x): 3.3607, norm(y): 1.0034, norm:1.4975, tok/sec: 180904.64, flops:189.91, batch-reuse:1
@ 1536 train 5.4955 , allloss: 5.4955, dt: 721.17ms, fracRes: 0.1467, norm(attn): 15.9375, norm(output): 3.1094, norm(x): 3.1797, norm(y): 1.0034, norm:0.9459, tok/sec: 181750.26, flops:190.80, batch-reuse:1
@ 1537 train 5.4593 , allloss: 5.4593, dt: 707.23ms, fracRes: 0.1471, norm(attn): 15.8125, norm(output): 2.9062, norm(x): 2.9883, norm(y): 1.0034, norm:1.2040, tok/sec: 185330.54, flops:194.56, batch-reuse:1
@ 1538 train 5.3687 , allloss: 5.3687, dt: 717.24ms, fracRes: 0.1468, norm(attn): 15.7500, norm(output): 2.7500, norm(x): 2.7907, norm(y): 1.0033, norm:1.3180, tok/sec: 182744.64, flops:191.85, batch-reuse:1
@ 1539 train 5.3227 , allloss: 5.3227, dt: 710.39ms, fracRes: 0.1468, norm(attn): 15.0625, norm(output): 2.4219, norm(x): 2.4838, norm(y): 1.0034, norm:0.7561, tok/sec: 184507.45, flops:193.70, batch-reuse:1
@ 1540 train 5.2831 , allloss: 5.2831, dt: 711.53ms, fracRes: 0.1470, norm(attn): 14.9375, norm(output): 2.1094, norm(x): 2.1769, norm(y): 1.0035, norm:1.1912, tok/sec: 184212.73, flops:193.39, batch-reuse:1
@ 1541 train 5.2462 , allloss: 5.2462, dt: 700.09ms, fracRes: 0.1452, norm(attn): 14.2500, norm(output): 1.9062, norm(x): 1.9957, norm(y): 1.0032, norm:1.9385, tok/sec: 187220.90, flops:196.54, batch-reuse:1
@ 1542 train 5.1787 , allloss: 5.1787, dt: 698.47ms, fracRes: 0.1459, norm(attn): 14.0625, norm(output): 1.7188, norm(x): 1.7991, norm(y): 1.0032, norm:0.7397, tok/sec: 187654.88, flops:197.00, batch-reuse:1
@ 1543 train 8.5003 , allloss: 8.5003, dt: 695.17ms, fracRes: 0.1406, norm(attn): 11.0000, norm(output): 10.8750, norm(x): 10.7591, norm(y): 0.9988, norm:3.7982, tok/sec: 188547.87, flops:197.94, batch-reuse:1
@ 1544 train 8.1488 , allloss: 8.1488, dt: 706.99ms, fracRes: 0.1460, norm(attn): 10.8125, norm(output): 15.0625, norm(x): 15.1216, norm(y): 1.0002, norm:4.2591, tok/sec: 185394.67, flops:194.63, batch-reuse:1
@ 1545 train 5.6106 , allloss: 5.6106, dt: 716.40ms, fracRes: 0.1351, norm(attn): 12.3125, norm(output): 1.2656, norm(x): 1.3378, norm(y): 1.0033, norm:59.4864, tok/sec: 182960.48, flops:192.07, batch-reuse:1
@ 1546 train 7.8413 , allloss: 7.8413, dt: 711.40ms, fracRes: 0.1380, norm(attn): 11.8750, norm(output): 7.3750, norm(x): 7.4046, norm(y): 1.0013, norm:44.0066, tok/sec: 184246.38, flops:193.42, batch-reuse:1
@ 1547 train 8.2082 , allloss: 8.2082, dt: 699.08ms, fracRes: 0.1265, norm(attn): 14.6250, norm(output): 9.0625, norm(x): 9.2142, norm(y): 1.0028, norm:977.2509, tok/sec: 187491.50, flops:196.83, batch-reuse:1
@ 1548 train 8.8446 , allloss: 8.8446, dt: 695.14ms, fracRes: 0.1435, norm(attn): 14.0625, norm(output): 7.2188, norm(x): 7.2994, norm(y): 1.0020, norm:12.5773, tok/sec: 188554.01, flops:197.94, batch-reuse:1
@ 1549 train 6.6568 , allloss: 6.6568, dt: 708.12ms, fracRes: 0.1294, norm(attn): 15.1250, norm(output): 2.3438, norm(x): 2.4081, norm(y): 1.0032, norm:8.2008, tok/sec: 185098.36, flops:194.32, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9492, 0.0527, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8672, 0.0596, 0.0723, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.0147, 0.1855, 0.1157, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6133, 0.0337, 0.1299, 0.1201, 0.1045, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1309, 0.0227, 0.3203, 0.2373, 0.2354, 0.0518, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2080, 0.0703, 0.0635, 0.0356, 0.0576, 0.3945, 0.1719, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6758, 0.0420, 0.0408, 0.0216, 0.0217, 0.0762, 0.0767, 0.0471, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0947, 0.0186, 0.0503, 0.0248, 0.0771, 0.4336, 0.2041, 0.0420, 0.0544, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0281, 0.2598, 0.0603, 0.1196, 0.0776, 0.0884, 0.2070, 0.0396, 0.0417, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0077, 0.0298, 0.0530, 0.0177, 0.0265, 0.4922, 0.0728, 0.0278, 0.1797, 0.0603, 0.0332, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0146, 0.0272, 0.0596, 0.0547, 0.0299, 0.1021, 0.0684, 0.2256, 0.0923, 0.2354, 0.0276, 0.0635, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.0234, 0.0255, 0.0064, 0.0283, 0.1104, 0.0742, 0.0204, 0.1079, 0.0225, 0.0212, 0.0086, 0.0164, 0.0000, 0.0000],
        [0.0840, 0.0110, 0.0386, 0.0128, 0.0603, 0.2988, 0.1719, 0.0303, 0.0894, 0.0139, 0.0154, 0.0088, 0.0437, 0.1206, 0.0000],
        [0.0182, 0.0082, 0.0275, 0.0209, 0.0500, 0.0371, 0.0645, 0.0413, 0.2139, 0.0598, 0.0801, 0.0664, 0.0820, 0.2139, 0.0170]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0023,     -0.7422,     -0.8125,     -0.8477,     -0.7852,     -0.5234,     -0.5391,     -0.7188,     -0.6250,     -0.8789,     -0.9297,     -0.9844,     -0.5586,     -0.6289,     -0.7148],
        [    -0.0119,     -2.9062,     -2.1875,     -4.1250,     -3.4219,     -2.0156,     -0.9922,     -3.5469,     -1.5859,     -3.2656,     -3.8125,     -4.5938,     -3.6094,     -2.0312,     -2.8594],
        [    -0.0118,     -2.6875,     -2.5000,     -1.5703,     -2.9062,     -3.3750,     -2.7031,     -1.9688,     -2.4219,     -3.2031,     -3.9219,     -2.3750,     -2.1562,     -3.0000,     -3.1094],
        [    -0.0132,     -3.8594,     -1.3203,     -1.7891,     -1.0859,     -3.2344,     -2.0312,     -0.7305,     -3.2344,     -2.3281,     -3.0469,     -1.1172,     -1.3672,     -3.5156,     -2.2344],
        [     0.0197,     -2.8750,     -1.5312,     -1.6094,     -1.7500,      2.0312,      0.5039,     -1.1875,      0.5430,     -2.4062,     -3.4375,     -3.5938,     -0.7266,      0.3145,     -1.5156],
        [    -0.0150,     -1.7656,      0.8828,      0.5820,      0.5742,     -0.9414,      0.1484,      0.4414,     -0.3379,     -0.8203,     -0.9297,     -0.1172,     -0.3887,     -0.1650,     -0.2676],
        [     0.0226,     -1.0625,     -1.1641,     -1.7422,     -1.2578,      0.6641,     -0.1680,     -1.8125,      0.1738,     -1.6797,     -1.8984,     -2.8906,     -1.2656,      0.1064,     -0.4434],
        [    -0.0030,     -2.7812,     -2.8125,     -3.4375,     -3.4375,     -2.1875,     -2.1719,     -2.6719,     -2.2656,     -3.3594,     -3.3594,     -3.4219,     -2.0156,     -2.3438,     -2.2969],
        [     0.0096,     -1.6172,     -0.6250,     -1.3281,     -0.1963,      1.5312,      0.7773,     -0.8008,     -0.5430,     -1.7500,     -1.8281,     -2.3906,     -0.4336,      0.0289,     -0.4492],
        [     0.0093,     -1.0078,      1.2109,     -0.2480,      0.4375,      0.0089,      0.1348,      0.9883,     -0.6680,     -0.6133,     -1.1016,      0.4004,     -0.1777,     -0.6797,      0.3789],
        [     0.0386,      1.3906,      1.9688,      0.8672,      1.2734,      4.1875,      2.2812,      1.3203,      3.1875,      2.0938,      1.4922,      0.5156,      1.2109,      3.0625,      2.2344],
        [     0.0311,      0.6523,      1.4375,      1.3516,      0.7500,      1.9766,      1.5781,      2.7656,      1.8750,      2.8125,      0.6719,      1.5000,      2.0312,      2.0938,      1.3203],
        [     0.0021,     -3.1250,     -3.0469,     -4.4375,     -2.9375,     -1.5781,     -1.9688,     -3.2656,     -1.5938,     -3.1719,     -3.2188,     -4.1250,     -3.4844,     -1.7734,     -2.4062],
        [     0.0051,     -2.0312,     -0.7734,     -1.8828,     -0.3281,      1.2734,      0.7148,     -1.0156,      0.0625,     -1.7969,     -1.6875,     -2.2500,     -0.6523,      0.3652,     -0.6016],
        [     0.0327,     -0.7578,      0.4473,      0.1758,      1.0469,      0.7500,      1.2969,      0.8516,      2.5000,      1.2266,      1.5156,      1.3281,      1.5391,      2.5000,     -0.0349]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2474],
        [0.1727],
        [0.1502],
        [0.2591],
        [0.1387],
        [0.1412],
        [0.1394],
        [0.1854],
        [0.0788],
        [0.1813],
        [0.0130],
        [0.0825],
        [0.1401],
        [0.0390]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0791,     0.1221,     0.8008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0145,     0.1279,     0.0708,     0.7852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0049,     0.2207,     0.0476,     0.7266,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0060,     0.0002,     0.6367,     0.1719,     0.1855,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.1504,     0.0011,     0.0032,     0.2910,     0.0015,     0.5508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.3203,     0.0000,     0.1079,     0.5156,     0.0001,     0.0287,     0.0271,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0155,     0.0854,     0.0231,     0.0240,     0.1875,     0.0212,     0.1338,     0.0058,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0054,     0.0408,     0.0004,     0.0129,     0.0879,     0.0001,     0.0006,     0.0003,     0.1768,     0.6758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0022,     0.1943,     0.0037,     0.0001,     0.0137,     0.0002,     0.0003,     0.0007,     0.0005,     0.1084,     0.6758,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0153,     0.0002,     0.0116,     0.4082,     0.0058,     0.0010,     0.0070,     0.3945,     0.0000,     0.1543,     0.0022,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0006,     0.0000,     0.0024,     0.0004,     0.0000,     0.0001,     0.0001,     0.9766,     0.0030,     0.0013,     0.0000,     0.0173,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.9961,     0.0005,     0.0002,     0.0002,     0.0046,     0.0000],
        [    0.0025,     0.0371,     0.0040,     0.0000,     0.0162,     0.0000,     0.0000,     0.0000,     0.0036,     0.0728,     0.0295,     0.0020,     0.0036,     0.0432,     0.7852]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,      0.1001,      0.0145,     -0.0737,      0.0933,      0.0023,     -0.0442,     -0.0544,     -0.0378,     -0.0452,     -0.0806,     -0.0374,     -0.0674,     -0.0552,     -0.0013],
        [    -0.0378,     -7.1250,      7.3125,     -0.2832,      0.2656,      1.4453,     -1.1094,     -2.6562,     -4.1250,     -1.3125,     -0.2988,     -0.3672,     -1.0625,     -1.5078,      0.4453],
        [    -0.0308,      0.4023,      2.2812,     15.6875,     11.1875,      7.0625,      9.1875,      5.2812,      7.1875,      3.0000,      3.5938,     -0.2432,      2.9062,      3.9375,      0.9258],
        [    -0.0425,      2.1406,      1.5469,      3.9531,     14.4375,      1.9297,      1.9453,     -0.9141,      3.1250,     -2.3281,      0.5508,     -3.4844,     -3.5469,     -0.4980,     -1.8516],
        [     0.0311,      2.9844,      6.7812,      5.2500,      7.9688,     14.5625,     10.3750,      6.3750,      0.4668,      3.3906,     -6.3750,      0.2363,     -2.0469,     -2.1250,      2.4375],
        [    -0.0056,      3.0938,     -0.5117,      7.7500,      6.4375,      6.5312,     13.3750,      8.8125,      7.0000,      3.2500,      0.0645,      0.7695,      1.0234,      2.8281,      2.2500],
        [    -0.0125,      4.5938,     -0.3535,      0.7539,      5.2812,     -0.0183,      5.9062,      7.7188,      6.9062,     -1.2656,     -0.8789,     -1.7891,     -0.3477,      3.0625,     -2.8125],
        [     0.0310,      7.0625,     -3.1094,      6.0000,      7.5625,     -0.9492,      4.6562,      4.5938,     13.3750,      6.5938,      5.6250,     -0.0535,      4.3438,     10.7500,      6.2812],
        [     0.0388,      1.7500,      0.4375,      0.4824,      2.5312,      0.3535,      2.2031,     -0.9453,      3.5156,     12.7500,      2.9375,      3.0625,      0.2949,      2.4375,     12.9375],
        [    -0.0378,      1.9766,     -2.5625,      0.8242,      2.7500,     -4.3750,     -2.2188,     -2.9531,      3.4531,      4.7812,     13.4375,      4.0625,      2.2656,      4.7812,      4.5312],
        [    -0.0222,      4.4375,      0.4902,     -3.7188,      1.7891,     -2.6406,     -1.9844,     -1.2266,     -1.5234,      3.8594,      5.6875,      5.4688,      1.3281,     -1.3438,      4.1562],
        [    -0.0396,      2.5312,     -1.9297,      2.2500,      5.8125,      1.5625,     -0.1650,      1.7500,      5.7812,     -3.3594,      4.8438,      0.5977,     12.0000,      9.1875,      0.8242],
        [    -0.0003,      4.3438,     -0.3828,      5.7812,      4.0625,     -2.8281,      2.0781,      2.5469,     11.7500,      5.9688,      5.1250,     -0.6250,      7.7500,     17.2500,     10.7500],
        [     0.0231,      1.5547,      0.3398,     -0.1377,      0.9883,     -2.1562,     -1.2266,     -2.4688,      2.7031,     11.7500,      4.0625,      2.9844,      3.1250,      6.3750,     14.8125],
        [    -0.0610,      2.6406,      0.4141,     -4.3750,      1.8125,     -6.9375,     -5.3125,     -4.1250,      0.3262,      3.3281,      2.4219,     -0.3008,      0.3223,      2.7969,      5.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6238],
        [0.2503],
        [0.2729],
        [0.2418],
        [0.3284],
        [0.1500],
        [0.2149],
        [0.2174],
        [0.1830],
        [0.1844],
        [0.0251],
        [0.1220],
        [0.1612],
        [0.0160]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3887,     0.6133,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9688,     0.0033,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.9609,     0.0408,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0000,     0.0000,     0.9961,     0.0052,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0055,     0.0000,     0.0000,     0.0260,     0.0000,     0.6914,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0009,     0.0014,     0.0000,     0.0000,     0.0019,     0.0000,     0.0408,     0.3535,     0.6016,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0020,     0.0000,     0.0000,     0.0019,     0.0000,     0.0508,     0.1143,     0.2197,     0.0009,     0.0000,     0.0109,     0.5977,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,     -0.0435,     -0.0292,      0.0271,      0.0430,     -0.0208,      0.0908,     -0.0312,     -0.0569,     -0.0547,     -0.0295,      0.0003,      0.0039,     -0.0552,      0.0009],
        [     0.0019,      0.4551,      1.0938,      2.1562,     -1.6484,      0.2734,      1.0938,      2.2344,      0.5742,      2.5156,     -0.5898,      1.5547,      3.5938,      2.2344,      4.6875],
        [     0.0260,     -5.6562,     -3.4531,      3.9375,      3.6562,     -2.1719,     15.0625,     -0.3691,     -5.6875,     -4.9375,     -3.1250,      1.3359,      2.9062,     -4.6875,      3.3125],
        [     0.0393,    -16.7500,     -9.8750,      9.8125,     15.8125,     -6.0938,     38.2500,     -3.8438,    -14.5000,    -12.9375,     -2.2969,      5.5625,      3.3125,    -14.2500,      7.4375],
        [    -0.0076,      8.2500,      5.0625,     -4.6250,     -7.0312,      6.2188,    -17.2500,      4.1562,      9.8750,      7.8125,      1.3828,     -4.4375,      1.0391,      8.5625,     -4.3125],
        [     0.0217,    -10.0000,     -3.9844,      8.5625,      3.2812,      0.4004,     23.0000,      3.1406,     -8.0625,     -5.6250,     -4.8125,      3.1406,      7.7500,     -7.6250,      5.8438],
        [     0.0264,    -10.0625,     -5.2500,      5.6250,      9.6875,      1.3516,     24.8750,      1.9375,     -5.8438,     -5.5625,     -2.2812,      3.2344,      4.6875,     -7.8438,      2.4688],
        [     0.0320,    -13.0000,     -6.4062,      8.7500,      8.8750,     -0.9609,     30.6250,      3.4219,     -8.1250,     -5.9375,     -1.7188,      4.7812,      8.1250,     -7.7188,      7.9375],
        [    -0.0007,      3.2500,      6.0312,     -0.1118,     -9.3750,      7.5938,     -9.6250,     10.8750,      9.9375,     10.8125,      2.3281,     -0.2432,      8.3750,     10.5625,      4.1562],
        [     0.0238,     -7.5625,     -3.0781,      5.6562,      2.9219,     -0.5859,     16.5000,      5.2188,     -1.3672,      0.7852,      2.0156,      3.3906,      7.5312,      0.0771,      8.9375],
        [    -0.0016,      4.4688,      4.9062,     -0.8789,     -6.0625,      5.2188,    -11.8750,      8.3125,     10.4375,     11.0000,      4.4688,      0.2910,      5.6562,     11.6250,      3.7656],
        [     0.0151,     -6.1562,     -3.7812,      5.0000,      6.0938,      1.0469,     20.0000,      4.4375,     -2.0938,     -1.3281,      0.5195,      5.6250,      6.7812,     -1.4922,      6.8750],
        [     0.0187,    -10.0000,     -4.6250,      7.0625,      7.3438,     -0.7734,     22.6250,      2.4062,     -6.3750,     -4.8125,     -1.3984,      4.1562,      6.7812,     -5.4375,      6.9375],
        [    -0.0038,      2.6406,      4.8438,     -0.4199,     -6.9375,      4.8125,     -9.7500,      8.0625,      8.8750,      9.5625,      4.0938,      0.3418,      6.5625,     10.5625,      5.0938],
        [     0.0046,     -6.3750,     -2.7500,      5.6875,      9.3750,     -1.4062,     17.7500,      1.9609,     -2.9219,     -1.5234,      2.1406,      6.6250,      5.4688,     -1.0547,      8.9375]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.3053],
        [    0.4015],
        [    0.1611],
        [    0.0739],
        [    0.0862],
        [    0.0836],
        [    0.0859],
        [    0.0915],
        [    0.0775],
        [    0.0828],
        [    0.0007],
        [    0.0846],
        [    0.0646],
        [    0.0545]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0052,     -0.9219,     -0.7422,     -0.9219,     -1.3906,     -0.6523,     -1.2109,     -0.7891,     -1.2188,     -0.7578,     -1.2188,     -0.8281,     -0.9219,     -1.2812,     -1.1250],
        [    -0.2295,    -42.5000,    -34.2500,    -41.7500,    -62.5000,    -31.1250,    -57.2500,    -36.7500,    -55.5000,    -35.2500,    -56.0000,    -39.0000,    -42.5000,    -59.0000,    -55.0000],
        [    -0.2168,    -37.2500,    -27.7500,    -37.0000,    -56.0000,    -25.6250,    -48.7500,    -31.0000,    -48.5000,    -28.6250,    -48.7500,    -34.2500,    -36.5000,    -50.5000,    -43.5000],
        [    -0.3438,    -60.0000,    -42.7500,    -58.0000,    -90.5000,    -42.2500,    -77.0000,    -51.7500,    -80.0000,    -46.5000,    -79.0000,    -53.2500,    -61.2500,    -82.5000,    -67.5000],
        [    -0.3750,    -68.5000,    -53.5000,    -66.5000,   -102.0000,    -50.2500,    -91.5000,    -60.0000,    -90.5000,    -56.0000,    -90.0000,    -61.7500,    -69.5000,    -95.0000,    -85.0000],
        [    -0.1484,    -29.0000,    -22.2500,    -26.7500,    -42.2500,    -20.0000,    -37.2500,    -24.2500,    -37.2500,    -23.1250,    -37.7500,    -24.8750,    -28.3750,    -39.0000,    -35.0000],
        [    -0.4707,    -84.5000,    -66.5000,    -82.5000,   -126.0000,    -59.7500,   -109.5000,    -72.0000,   -111.5000,    -68.0000,   -111.5000,    -75.0000,    -84.0000,   -116.0000,   -101.5000],
        [    -0.3262,    -59.5000,    -43.5000,    -56.0000,    -88.0000,    -43.5000,    -76.0000,    -52.0000,    -80.0000,    -46.5000,    -78.5000,    -52.5000,    -60.5000,    -82.0000,    -69.0000],
        [    -0.3789,    -67.0000,    -50.5000,    -64.0000,   -101.5000,    -48.7500,    -89.0000,    -57.2500,    -89.0000,    -53.5000,    -88.5000,    -59.5000,    -67.0000,    -92.5000,    -80.5000],
        [    -0.2227,    -37.5000,    -30.1250,    -37.5000,    -56.0000,    -26.0000,    -48.5000,    -31.1250,    -49.5000,    -30.1250,    -49.7500,    -33.7500,    -37.0000,    -52.0000,    -45.5000],
        [    -0.4824,    -84.5000,    -64.5000,    -82.5000,   -127.5000,    -60.7500,   -111.0000,    -72.5000,   -112.5000,    -67.5000,   -111.5000,    -75.0000,    -85.0000,   -117.0000,   -101.0000],
        [    -0.2148,    -39.5000,    -29.1250,    -39.0000,    -58.7500,    -28.0000,    -51.0000,    -35.0000,    -52.2500,    -31.7500,    -52.0000,    -35.7500,    -40.7500,    -54.2500,    -46.2500],
        [    -0.4180,    -75.0000,    -55.5000,    -71.0000,   -111.5000,    -55.0000,    -96.5000,    -65.0000,   -100.5000,    -59.0000,    -99.0000,    -66.0000,    -76.0000,   -103.5000,    -87.5000],
        [    -0.5117,    -88.0000,    -69.0000,    -86.5000,   -133.0000,    -63.5000,   -116.5000,    -74.5000,   -117.0000,    -71.0000,   -117.0000,    -79.0000,    -87.5000,   -122.0000,   -107.0000],
        [    -0.4102,    -72.0000,    -55.7500,    -71.5000,   -108.5000,    -50.2500,    -93.5000,    -60.7500,    -95.0000,    -57.5000,    -95.0000,    -65.0000,    -71.5000,    -99.0000,    -85.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7697],
        [0.6879],
        [0.6961],
        [0.6759],
        [0.6696],
        [0.6667],
        [0.6667],
        [0.6667],
        [0.6672],
        [0.6667],
        [0.6707],
        [0.6667],
        [0.6667],
        [0.6669]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0032,     -0.8555,     -0.7812,     -0.8984,     -1.3125,     -0.6523,     -0.9102,     -0.8320,     -1.0547,     -0.7930,     -1.0703,     -0.9492,     -0.8945,     -1.0547,     -0.8711],
        [    -0.2832,    -70.0000,    -65.0000,    -74.5000,   -110.0000,    -54.2500,    -76.0000,    -69.5000,    -88.5000,    -66.0000,    -89.5000,    -79.0000,    -74.5000,    -88.5000,    -72.5000],
        [    -0.4414,   -115.5000,   -105.5000,   -122.0000,   -179.0000,    -87.5000,   -125.0000,   -114.5000,   -143.0000,   -107.5000,   -145.0000,   -129.0000,   -123.0000,   -144.0000,   -119.0000],
        [    -0.4766,   -125.0000,   -113.5000,   -132.0000,   -194.0000,    -94.5000,   -136.0000,   -124.5000,   -155.0000,   -116.5000,   -158.0000,   -138.0000,   -134.0000,   -156.0000,   -128.0000],
        [    -0.3535,    -91.0000,    -83.5000,    -97.0000,   -143.0000,    -69.5000,    -99.0000,    -91.0000,   -114.5000,    -86.0000,   -116.5000,   -102.5000,    -97.5000,   -115.0000,    -94.0000],
        [    -0.3047,    -78.0000,    -71.5000,    -82.0000,   -121.5000,    -59.2500,    -83.5000,    -76.0000,    -97.0000,    -72.5000,    -98.0000,    -87.0000,    -81.5000,    -97.0000,    -79.5000],
        [    -0.4727,   -123.0000,   -110.5000,   -129.0000,   -191.0000,    -92.0000,   -134.0000,   -122.5000,   -152.0000,   -113.5000,   -155.0000,   -136.0000,   -132.0000,   -153.0000,   -125.5000],
        [    -0.4805,   -124.5000,   -112.5000,   -132.0000,   -194.0000,    -94.5000,   -135.0000,   -124.5000,   -155.0000,   -115.5000,   -157.0000,   -138.0000,   -134.0000,   -155.0000,   -127.5000],
        [    -0.4141,   -107.5000,    -97.5000,   -113.0000,   -167.0000,    -81.5000,   -116.0000,   -106.0000,   -133.0000,    -99.5000,   -135.0000,   -119.0000,   -114.0000,   -134.0000,   -109.5000],
        [    -0.4180,   -109.0000,    -99.0000,   -114.5000,   -169.0000,    -82.5000,   -117.0000,   -107.0000,   -135.0000,   -101.0000,   -137.0000,   -121.0000,   -115.0000,   -135.0000,   -111.5000],
        [    -0.4336,   -111.0000,   -101.0000,   -116.5000,   -173.0000,    -84.0000,   -119.0000,   -108.5000,   -138.0000,   -103.5000,   -140.0000,   -123.5000,   -116.5000,   -138.0000,   -113.5000],
        [    -0.3867,   -102.5000,    -92.5000,   -108.0000,   -159.0000,    -77.5000,   -111.5000,   -102.5000,   -127.0000,    -95.0000,   -129.0000,   -113.5000,   -110.0000,   -128.0000,   -105.5000],
        [    -0.4707,   -121.5000,   -110.0000,   -128.0000,   -189.0000,    -92.0000,   -132.0000,   -121.5000,   -151.0000,   -113.0000,   -153.0000,   -135.0000,   -130.0000,   -152.0000,   -124.5000],
        [    -0.4629,   -120.0000,   -109.0000,   -126.5000,   -186.0000,    -91.0000,   -129.0000,   -118.0000,   -149.0000,   -111.5000,   -151.0000,   -133.0000,   -126.5000,   -149.0000,   -122.5000],
        [    -0.5117,   -133.0000,   -120.5000,   -140.0000,   -206.0000,   -100.0000,   -143.0000,   -130.0000,   -164.0000,   -123.0000,   -167.0000,   -147.0000,   -141.0000,   -165.0000,   -136.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4690],
        [0.5261],
        [0.4170],
        [0.5072],
        [0.5623],
        [0.4167],
        [0.5005],
        [0.4737],
        [0.4302],
        [0.4880],
        [0.4051],
        [0.5002],
        [0.4851],
        [0.4172]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0425,     0.9570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.0864,     0.2988,     0.6094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0586,     0.6875,     0.0000,     0.2539,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.2051,     0.3613,     0.0664,     0.1992,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9258,     0.0000,     0.0000,     0.0023,     0.0001,     0.0012,     0.0713,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3574,     0.3594,     0.0002,     0.0767,     0.0028,     0.0000,     0.0000,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2266,     0.4551,     0.0004,     0.1279,     0.0027,     0.0000,     0.0000,     0.1377,     0.0508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0122,     0.1836,     0.0000,     0.0427,     0.0000,     0.0000,     0.0000,     0.0126,     0.0010,     0.7461,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0019,     0.0879,     0.0000,     0.0172,     0.0000,     0.0000,     0.0000,     0.0013,     0.0001,     0.6328,     0.2578,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0011,     0.0000,     0.0000],
        [    0.0000,     0.0354,     0.1855,     0.0002,     0.0557,     0.0002,     0.0000,     0.0000,     0.0320,     0.0055,     0.3672,     0.1602,     0.0000,     0.1582,     0.0000],
        [    0.0000,     0.0033,     0.0544,     0.0048,     0.0479,     0.0003,     0.0001,     0.0000,     0.0048,     0.0027,     0.6719,     0.0786,     0.0000,     0.0820,     0.0479]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,      0.4609,      0.4980,      0.3477,      0.4629,      0.3301,      0.2090,      0.0752,      0.4492,      0.4121,      0.4941,      0.5117,      0.0918,      0.4902,      0.4180],
        [     0.0378,     30.8750,     33.5000,     24.0000,     31.5000,     22.7500,     15.1250,      6.2812,     29.8750,     28.0000,     33.7500,     34.0000,      7.6875,     32.5000,     28.3750],
        [     0.0396,     28.7500,     31.8750,     23.6250,     29.8750,     21.2500,     15.1875,      5.4062,     28.0000,     26.3750,     33.0000,     32.2500,      6.8750,     31.2500,     28.0000],
        [     0.0134,      2.6562,      3.8906,      4.5938,      4.6250,      3.0156,      3.9375,      1.1016,      3.1562,      3.3750,      5.9688,      3.6406,      1.8750,      4.4688,      5.0000],
        [     0.0381,     31.3750,     33.7500,     24.1250,     32.7500,     24.0000,     14.8750,      6.3125,     31.7500,     28.8750,     35.2500,     34.7500,      7.3750,     34.5000,     28.7500],
        [     0.0107,      5.5938,      6.1562,      4.4688,      5.5625,      5.4062,      3.0312,      2.5000,      5.4688,      5.2812,      6.5000,      5.5938,      2.5938,      5.5938,      5.1562],
        [    -0.0021,    -11.3125,    -11.1875,     -6.0000,     -9.1875,     -6.6875,     -2.5625,     -1.1484,    -10.1875,     -9.0625,     -8.9375,    -11.8750,     -0.9531,    -10.1250,     -7.7500],
        [    -0.0356,    -40.7500,    -44.5000,    -31.7500,    -41.5000,    -28.5000,    -19.2500,     -5.5625,    -40.5000,    -37.0000,    -44.7500,    -48.0000,     -7.0000,    -45.0000,    -38.5000],
        [     0.0251,     19.0000,     19.0000,     11.4375,     17.5000,     14.1875,      6.0000,      4.5625,     18.5000,     16.7500,     18.1250,     18.1250,      4.5938,     18.3750,     13.6875],
        [     0.0231,     18.2500,     19.0000,     11.9375,     17.6250,     13.8125,      6.6250,      3.6562,     17.7500,     16.7500,     18.5000,     18.3750,      4.0000,     18.1250,     14.2500],
        [     0.0415,     31.7500,     34.5000,     25.0000,     33.0000,     24.2500,     15.7500,      6.6250,     31.7500,     29.2500,     35.7500,     35.2500,      7.8750,     34.7500,     29.6250],
        [     0.0439,     33.2500,     37.2500,     28.2500,     35.5000,     25.1250,     18.5000,      6.5938,     33.0000,     30.7500,     39.2500,     38.2500,      8.5000,     37.2500,     33.2500],
        [    -0.0334,    -39.7500,    -43.2500,    -30.5000,    -39.7500,    -27.6250,    -18.5000,     -5.5625,    -39.0000,    -35.5000,    -43.0000,    -46.2500,     -6.8438,    -43.0000,    -37.2500],
        [     0.0327,     22.3750,     24.0000,     17.0000,     22.7500,     17.2500,     10.6875,      5.5000,     22.2500,     20.5000,     24.6250,     23.8750,      6.2500,     23.8750,     20.1250],
        [     0.0277,     14.5000,     17.3750,     14.8750,     17.2500,     12.1250,     10.7500,      3.7500,     14.8750,     14.3125,     19.8750,     17.7500,      5.0625,     17.7500,     17.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0237],
        [    0.0002],
        [    0.0057],
        [    0.0003],
        [    0.0169],
        [    0.0959],
        [    0.2619],
        [    0.0195],
        [    0.0002],
        [    0.0001],
        [    0.0000],
        [    0.3253],
        [    0.0002],
        [    0.0001]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.8828,     0.1182,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.6172,     0.0898,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0067,     0.0009,     0.0025,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0008,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0035,     0.9961,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0034,     0.9961,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0035,     0.9961,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0036,     0.9961,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0009,     0.8281,     0.0000,     0.0000,     0.0000,     0.0000,     0.1699,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0028,     0.7969,     0.0001,     0.0000,     0.0000,     0.0000,     0.2002,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0027,     0.7969,     0.0001,     0.0000,     0.0000,     0.0000,     0.2012,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.0302,      0.0417,      0.0046,      0.0076,     -0.0001,      0.0042,      0.0142,      0.0024,      0.0037,      0.0068,      0.0184,      0.0147,      0.0040,      0.0070],
        [     0.0664,     32.7500,     12.3750,     43.7500,     41.7500,     43.0000,     47.7500,     53.0000,     44.5000,     44.0000,     42.2500,     37.7500,     51.7500,     43.7500,     42.2500],
        [     0.0435,     24.0000,      9.6875,     31.3750,     30.2500,     30.8750,     34.2500,     38.0000,     32.0000,     31.6250,     30.5000,     27.3750,     37.0000,     31.5000,     30.3750],
        [     0.0742,     37.0000,     13.8750,     49.5000,     47.5000,     48.7500,     54.5000,     60.2500,     50.5000,     50.0000,     48.0000,     42.7500,     58.7500,     49.7500,     47.7500],
        [     0.0737,     36.7500,     13.7500,     49.5000,     47.5000,     48.7500,     54.2500,     60.0000,     50.5000,     49.7500,     48.0000,     42.7500,     58.5000,     49.5000,     47.7500],
        [     0.0698,     35.0000,     12.8750,     47.2500,     45.2500,     46.5000,     51.7500,     57.0000,     48.2500,     47.5000,     45.7500,     40.5000,     55.7500,     47.2500,     45.5000],
        [     0.0776,     37.2500,     14.2500,     49.7500,     47.7500,     48.7500,     54.7500,     61.0000,     50.7500,     50.0000,     48.2500,     43.0000,     59.5000,     49.7500,     48.0000],
        [     0.0850,     38.5000,     15.3125,     50.5000,     48.5000,     49.5000,     56.0000,     63.0000,     51.5000,     50.7500,     49.0000,     44.0000,     61.5000,     50.5000,     48.7500],
        [     0.0737,     36.2500,     13.3125,     49.0000,     47.0000,     48.2500,     53.7500,     59.2500,     50.0000,     49.2500,     47.5000,     42.0000,     58.0000,     49.0000,     47.2500],
        [     0.0737,     36.5000,     13.4375,     49.2500,     47.2500,     48.5000,     54.0000,     59.7500,     50.2500,     49.5000,     47.7500,     42.2500,     58.5000,     49.2500,     47.5000],
        [     0.0732,     36.7500,     13.6250,     49.2500,     47.2500,     48.5000,     54.0000,     59.7500,     50.2500,     49.7500,     47.7500,     42.5000,     58.2500,     49.5000,     47.5000],
        [     0.0718,     36.2500,     13.6250,     48.5000,     46.5000,     47.7500,     53.0000,     58.7500,     49.5000,     48.7500,     47.0000,     41.7500,     57.2500,     48.5000,     46.7500],
        [     0.0840,     38.5000,     15.3750,     50.5000,     48.5000,     49.2500,     55.7500,     62.7500,     51.5000,     50.7500,     49.0000,     44.0000,     61.0000,     50.5000,     48.7500],
        [     0.0737,     36.5000,     13.4375,     49.2500,     47.2500,     48.5000,     54.0000,     59.5000,     50.2500,     49.5000,     47.7500,     42.2500,     58.2500,     49.2500,     47.5000],
        [     0.0737,     36.7500,     13.8125,     49.5000,     47.5000,     48.5000,     54.2500,     60.0000,     50.5000,     49.7500,     48.0000,     42.7500,     58.5000,     49.5000,     47.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0755],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6680,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0530,     0.0209,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0439,     0.0179,     0.6797,     0.2578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0271,     0.0109,     0.4531,     0.1680,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0046,     0.0017,     0.0996,     0.0339,     0.0723,     0.7891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.0003,     0.0199,     0.0065,     0.0142,     0.1709,     0.7891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0020,     0.0008,     0.0303,     0.0115,     0.0231,     0.1904,     0.7305,     0.0116,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0020,     0.0008,     0.0304,     0.0117,     0.0232,     0.1895,     0.7188,     0.0117,     0.0106,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0020,     0.0008,     0.0302,     0.0116,     0.0229,     0.1875,     0.7148,     0.0117,     0.0105,     0.0092,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0024,     0.0010,     0.0320,     0.0127,     0.0248,     0.1885,     0.6992,     0.0128,     0.0116,     0.0101,     0.0053,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0006,     0.0002,     0.0132,     0.0043,     0.0095,     0.1113,     0.5117,     0.0043,     0.0038,     0.0033,     0.0015,     0.3379,     0.0000,     0.0000],
        [    0.0000,     0.0013,     0.0005,     0.0199,     0.0076,     0.0152,     0.1240,     0.4727,     0.0077,     0.0069,     0.0060,     0.0031,     0.3281,     0.0064,     0.0000],
        [    0.0000,     0.0012,     0.0005,     0.0189,     0.0072,     0.0144,     0.1216,     0.4727,     0.0072,     0.0065,     0.0056,     0.0029,     0.3281,     0.0060,     0.0084]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,     -0.1021,     -0.1040,     -0.1030,     -0.1016,     -0.1035,     -0.1055,     -0.1094,     -0.1030,     -0.1025,     -0.1021,     -0.1016,     -0.1079,     -0.1021,     -0.1021],
        [    -0.0081,     25.0000,     24.2500,     27.5000,     26.6250,     27.2500,     29.1250,     30.5000,     26.6250,     26.5000,     26.3750,     25.7500,     30.1250,     26.5000,     26.7500],
        [    -0.0112,     24.3750,     23.6250,     26.6250,     25.7500,     26.3750,     28.1250,     29.3750,     25.7500,     25.7500,     25.6250,     25.0000,     29.0000,     25.6250,     25.8750],
        [    -0.0025,     27.0000,     26.0000,     29.7500,     28.7500,     29.5000,     31.7500,     33.2500,     28.7500,     28.7500,     28.5000,     27.8750,     32.7500,     28.6250,     29.0000],
        [    -0.0035,     26.3750,     25.5000,     29.1250,     28.1250,     28.8750,     31.0000,     32.2500,     28.1250,     28.0000,     27.8750,     27.2500,     31.8750,     28.0000,     28.2500],
        [    -0.0036,     26.6250,     25.7500,     29.3750,     28.5000,     29.1250,     31.3750,     32.7500,     28.5000,     28.3750,     28.2500,     27.5000,     32.2500,     28.2500,     28.6250],
        [    -0.0010,     28.0000,     27.0000,     31.1250,     30.0000,     30.7500,     33.2500,     34.7500,     30.0000,     29.8750,     29.7500,     29.0000,     34.2500,     29.8750,     30.2500],
        [    -0.0021,     28.6250,     27.6250,     31.7500,     30.6250,     31.5000,     34.0000,     35.5000,     30.6250,     30.5000,     30.3750,     29.6250,     35.0000,     30.5000,     30.8750],
        [    -0.0044,     26.2500,     25.3750,     28.8750,     28.0000,     28.6250,     30.7500,     32.0000,     28.0000,     27.8750,     27.7500,     27.0000,     31.7500,     27.7500,     28.1250],
        [    -0.0045,     26.1250,     25.2500,     28.8750,     27.8750,     28.6250,     30.7500,     32.0000,     27.8750,     27.7500,     27.6250,     27.0000,     31.6250,     27.7500,     28.0000],
        [    -0.0040,     26.1250,     25.2500,     28.8750,     27.8750,     28.6250,     30.7500,     32.0000,     27.8750,     27.7500,     27.6250,     27.0000,     31.6250,     27.7500,     28.0000],
        [    -0.0053,     25.7500,     24.8750,     28.3750,     27.3750,     28.1250,     30.1250,     31.3750,     27.5000,     27.3750,     27.2500,     26.5000,     31.1250,     27.2500,     27.6250],
        [    -0.0016,     28.5000,     27.5000,     31.7500,     30.6250,     31.3750,     33.7500,     35.2500,     30.6250,     30.5000,     30.2500,     29.5000,     35.0000,     30.3750,     30.7500],
        [    -0.0042,     26.1250,     25.2500,     28.8750,     27.8750,     28.6250,     30.7500,     32.0000,     27.8750,     27.8750,     27.6250,     27.0000,     31.6250,     27.7500,     28.1250],
        [    -0.0033,     26.5000,     25.5000,     29.2500,     28.2500,     28.8750,     31.0000,     32.5000,     28.2500,     28.1250,     28.0000,     27.2500,     32.0000,     28.0000,     28.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0266],
        [0.0099],
        [0.0265],
        [0.0159],
        [0.0200],
        [0.0404],
        [0.0531],
        [0.0132],
        [0.0116],
        [0.0102],
        [0.0072],
        [0.0383],
        [0.0087],
        [0.0096]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6641, 0.3359, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.2461, 0.2373, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2676, 0.2207, 0.2109, 0.3008, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2217, 0.1689, 0.1621, 0.2285, 0.2188, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1816, 0.1387, 0.1328, 0.1875, 0.1797, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1079, 0.1157, 0.1104, 0.1621, 0.1553, 0.1543, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0879, 0.0972, 0.0928, 0.1367, 0.1299, 0.1289, 0.1641, 0.1631, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1030, 0.0850, 0.0815, 0.1162, 0.1113, 0.1108, 0.1377, 0.1367, 0.1182, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0918, 0.0762, 0.0728, 0.1040, 0.0996, 0.0991, 0.1230, 0.1226, 0.1055, 0.1055, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0796, 0.0688, 0.0654, 0.0942, 0.0903, 0.0898, 0.1118, 0.1108, 0.0957, 0.0957, 0.0981, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0776, 0.0630, 0.0601, 0.0854, 0.0820, 0.0815, 0.1011, 0.1006, 0.0869, 0.0869, 0.0894, 0.0859, 0.0000, 0.0000, 0.0000],
        [0.0488, 0.0559, 0.0535, 0.0791, 0.0752, 0.0747, 0.0952, 0.0947, 0.0806, 0.0806, 0.0830, 0.0791, 0.1001, 0.0000, 0.0000],
        [0.0613, 0.0525, 0.0503, 0.0718, 0.0688, 0.0684, 0.0854, 0.0850, 0.0732, 0.0732, 0.0752, 0.0723, 0.0894, 0.0742, 0.0000],
        [0.0522, 0.0483, 0.0461, 0.0669, 0.0640, 0.0635, 0.0796, 0.0791, 0.0679, 0.0679, 0.0698, 0.0669, 0.0835, 0.0693, 0.0737]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.0031,      0.0030,      0.0044,      0.0042,      0.0042,      0.0052,      0.0053,      0.0045,      0.0045,      0.0046,      0.0044,      0.0054,      0.0046,      0.0048],
        [    -0.0006,     -0.6797,     -0.7148,     -0.4238,     -0.4609,     -0.4648,     -0.2852,     -0.2871,     -0.4102,     -0.4102,     -0.3887,     -0.4219,     -0.2461,     -0.3984,     -0.3477],
        [    -0.0005,     -0.7422,     -0.7773,     -0.4961,     -0.5312,     -0.5352,     -0.3613,     -0.3633,     -0.4824,     -0.4824,     -0.4629,     -0.4941,     -0.3223,     -0.4707,     -0.4219],
        [    -0.0018,     -0.1934,     -0.2363,      0.1172,      0.0737,      0.0688,      0.2852,      0.2793,      0.1328,      0.1328,      0.1592,      0.1196,      0.3301,      0.1484,      0.2090],
        [    -0.0016,     -0.2715,     -0.3145,      0.0306,     -0.0117,     -0.0166,      0.1943,      0.1895,      0.0457,      0.0461,      0.0713,      0.0330,      0.2383,      0.0615,      0.1201],
        [    -0.0016,     -0.2734,     -0.3164,      0.0280,     -0.0142,     -0.0192,      0.1914,      0.1865,      0.0430,      0.0435,      0.0688,      0.0304,      0.2354,      0.0586,      0.1177],
        [    -0.0025,      0.0659,      0.0187,      0.4062,      0.3594,      0.3535,      0.5898,      0.5820,      0.4219,      0.4219,      0.4512,      0.4082,      0.6367,      0.4395,      0.5039],
        [    -0.0025,      0.0972,      0.0500,      0.4375,      0.3887,      0.3848,      0.6172,      0.6133,      0.4531,      0.4531,      0.4824,      0.4395,      0.6680,      0.4707,      0.5352],
        [    -0.0018,     -0.1924,     -0.2363,      0.1182,      0.0747,      0.0698,      0.2871,      0.2812,      0.1338,      0.1338,      0.1602,      0.1206,      0.3320,      0.1504,      0.2109],
        [    -0.0018,     -0.1895,     -0.2334,      0.1216,      0.0781,      0.0728,      0.2891,      0.2852,      0.1367,      0.1377,      0.1631,      0.1240,      0.3340,      0.1533,      0.2139],
        [    -0.0019,     -0.1484,     -0.1924,      0.1680,      0.1235,      0.1182,      0.3379,      0.3320,      0.1826,      0.1836,      0.2100,      0.1699,      0.3828,      0.2002,      0.2617],
        [    -0.0018,     -0.2148,     -0.2578,      0.0933,      0.0503,      0.0452,      0.2598,      0.2559,      0.1084,      0.1094,      0.1348,      0.0957,      0.3047,      0.1250,      0.1846],
        [    -0.0026,      0.1338,      0.0854,      0.4785,      0.4316,      0.4258,      0.6641,      0.6562,      0.4941,      0.4961,      0.5234,      0.4824,      0.7109,      0.5156,      0.5820],
        [    -0.0019,     -0.1553,     -0.1992,      0.1602,      0.1157,      0.1104,      0.3301,      0.3242,      0.1748,      0.1758,      0.2021,      0.1621,      0.3750,      0.1914,      0.2539],
        [    -0.0021,     -0.0796,     -0.1250,      0.2451,      0.2002,      0.1943,      0.4199,      0.4141,      0.2617,      0.2617,      0.2891,      0.2480,      0.4668,      0.2773,      0.3418]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.0749],
        [0.0545],
        [0.0255],
        [0.0209],
        [0.0172],
        [0.0100],
        [0.0083],
        [0.0096],
        [0.0085],
        [0.0074],
        [0.0072],
        [0.0045],
        [0.0057],
        [0.0048]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5078,     0.4941,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3125,     0.3027,     0.3848,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2275,     0.2217,     0.2812,     0.2695,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1797,     0.1748,     0.2217,     0.2119,     0.2129,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1445,     0.1406,     0.1797,     0.1719,     0.1719,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1226,     0.1187,     0.1514,     0.1455,     0.1455,     0.1621,     0.1543,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1074,     0.1045,     0.1328,     0.1270,     0.1270,     0.1416,     0.1357,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0952,     0.0928,     0.1177,     0.1128,     0.1128,     0.1260,     0.1201,     0.1099,     0.1128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0854,     0.0830,     0.1055,     0.1011,     0.1016,     0.1128,     0.1079,     0.0986,     0.1011,     0.1025,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0776,     0.0757,     0.0957,     0.0918,     0.0923,     0.1025,     0.0977,     0.0898,     0.0918,     0.0928,     0.0918,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0703,     0.0684,     0.0874,     0.0835,     0.0835,     0.0933,     0.0894,     0.0815,     0.0835,     0.0845,     0.0835,     0.0908,     0.0000,     0.0000],
        [    0.0000,     0.0654,     0.0635,     0.0806,     0.0771,     0.0771,     0.0859,     0.0820,     0.0752,     0.0771,     0.0781,     0.0767,     0.0835,     0.0771,     0.0000],
        [    0.0000,     0.0603,     0.0583,     0.0742,     0.0713,     0.0713,     0.0796,     0.0762,     0.0693,     0.0713,     0.0723,     0.0713,     0.0771,     0.0713,     0.0757]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0874,      0.0864,      0.0903,      0.0894,      0.0894,      0.0913,      0.0903,      0.0894,      0.0894,      0.0898,      0.0894,      0.0908,      0.0894,      0.0903],
        [    -0.0071,     26.1250,     26.1250,     26.3750,     26.2500,     26.2500,     26.3750,     26.3750,     26.2500,     26.2500,     26.3750,     26.2500,     26.3750,     26.2500,     26.3750],
        [    -0.0070,     26.1250,     26.1250,     26.2500,     26.2500,     26.2500,     26.3750,     26.3750,     26.2500,     26.2500,     26.2500,     26.2500,     26.3750,     26.2500,     26.2500],
        [    -0.0073,     26.2500,     26.2500,     26.5000,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000,     26.3750,     26.5000],
        [    -0.0072,     26.2500,     26.1250,     26.3750,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750],
        [    -0.0072,     26.2500,     26.1250,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750],
        [    -0.0073,     26.2500,     26.2500,     26.5000,     26.5000,     26.5000,     26.6250,     26.5000,     26.5000,     26.5000,     26.5000,     26.5000,     26.6250,     26.5000,     26.5000],
        [    -0.0073,     26.2500,     26.2500,     26.5000,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000,     26.3750,     26.5000],
        [    -0.0072,     26.2500,     26.1250,     26.3750,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750],
        [    -0.0072,     26.2500,     26.2500,     26.3750,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000],
        [    -0.0072,     26.2500,     26.2500,     26.5000,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000],
        [    -0.0072,     26.2500,     26.1250,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.3750],
        [    -0.0073,     26.2500,     26.2500,     26.5000,     26.5000,     26.5000,     26.6250,     26.5000,     26.3750,     26.5000,     26.5000,     26.5000,     26.5000,     26.5000,     26.5000],
        [    -0.0072,     26.2500,     26.2500,     26.3750,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000],
        [    -0.0073,     26.2500,     26.2500,     26.5000,     26.3750,     26.3750,     26.5000,     26.5000,     26.3750,     26.3750,     26.3750,     26.3750,     26.5000,     26.3750,     26.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4169],
        [0.4168],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167],
        [0.4167]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4961,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3398,     0.3262,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2559,     0.2441,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.2041,     0.1953,     0.2002,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1680,     0.1709,     0.1631,     0.1670,     0.1660,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1445,     0.1465,     0.1406,     0.1445,     0.1426,     0.1416,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.1279,     0.1226,     0.1260,     0.1250,     0.1240,     0.1216,     0.1270,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1118,     0.1138,     0.1089,     0.1118,     0.1108,     0.1099,     0.1079,     0.1123,     0.1128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.1021,     0.0977,     0.1001,     0.0996,     0.0991,     0.0972,     0.1011,     0.1016,     0.1016,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0928,     0.0889,     0.0913,     0.0903,     0.0898,     0.0884,     0.0918,     0.0923,     0.0923,     0.0913,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0840,     0.0854,     0.0815,     0.0835,     0.0830,     0.0825,     0.0811,     0.0845,     0.0845,     0.0845,     0.0835,     0.0820,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0786,     0.0752,     0.0771,     0.0767,     0.0762,     0.0747,     0.0776,     0.0781,     0.0781,     0.0771,     0.0757,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0732,     0.0698,     0.0718,     0.0713,     0.0708,     0.0693,     0.0723,     0.0723,     0.0723,     0.0718,     0.0703,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0299,     0.0299,     0.0300,     0.0300,     0.0299,     0.0300,     0.0300,     0.0300,     0.0300,     0.0300,     0.0299,     0.0300,     0.0300,     0.0300],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    35.0000,    35.0000,    34.7500,    35.0000,    34.7500,    34.7500,    34.7500,    35.0000,    35.0000,    35.0000,    35.0000,    34.7500,    35.0000,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000],
        [    0.0654,    35.0000,    35.0000,    34.7500,    35.0000,    35.0000,    35.0000,    34.7500,    35.0000,    35.0000,    35.0000,    35.0000,    34.7500,    35.0000,    35.0000],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000,    35.0000],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500],
        [    0.0654,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500,    34.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5469, 0.4551, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3379, 0.2812, 0.3809, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2490, 0.2070, 0.2793, 0.2637, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2002, 0.1670, 0.2256, 0.2129, 0.1953, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1572, 0.1309, 0.1768, 0.1670, 0.1523, 0.2168, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1348, 0.1123, 0.1514, 0.1436, 0.1309, 0.1855, 0.1406, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1182, 0.0981, 0.1328, 0.1250, 0.1147, 0.1631, 0.1235, 0.1245, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1069, 0.0889, 0.1201, 0.1133, 0.1040, 0.1475, 0.1118, 0.1123, 0.0947, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0972, 0.0811, 0.1094, 0.1035, 0.0947, 0.1348, 0.1021, 0.1025, 0.0864, 0.0889, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0889, 0.0742, 0.1001, 0.0947, 0.0864, 0.1230, 0.0933, 0.0938, 0.0791, 0.0815, 0.0854, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0791, 0.0659, 0.0894, 0.0840, 0.0771, 0.1094, 0.0830, 0.0835, 0.0703, 0.0723, 0.0757, 0.1094, 0.0000, 0.0000],
        [0.0000, 0.0737, 0.0613, 0.0825, 0.0781, 0.0713, 0.1016, 0.0771, 0.0771, 0.0654, 0.0669, 0.0703, 0.1016, 0.0732, 0.0000],
        [0.0000, 0.0684, 0.0569, 0.0767, 0.0728, 0.0664, 0.0942, 0.0713, 0.0718, 0.0605, 0.0623, 0.0654, 0.0942, 0.0684, 0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0001,     0.0266,     0.0266,     0.0266,     0.0266,     0.0266,     0.0267,     0.0266,     0.0266,     0.0266,     0.0266,     0.0266,     0.0266,     0.0266,     0.0266],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000],
        [    0.2852,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000,   128.0000,   128.0000,   128.0000,   129.0000,   128.0000,   128.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(
:0.6719
:0.6680
:0.6758
:0.6758
:0.6758
:0.6680
:0.6758
:0.6719)


------
		(
:0.6680
:0.6758
:0.6758
:0.6758
:0.6680
:0.6758
:0.6719
:0.6680)
















@ 1550 train 5.8637 , allloss: 5.8637, dt: 1158.24ms, fracRes: 0.1231, norm(attn): 14.9375, norm(output): 1.9531, norm(x): 2.0289, norm(y): 1.0032, norm:12.1794, tok/sec: 113164.84, flops:118.80, batch-reuse:1
@ 1551 train 5.6466 , allloss: 5.6466, dt: 721.04ms, fracRes: 0.1196, norm(attn): 14.8125, norm(output): 2.0000, norm(x): 2.0641, norm(y): 1.0029, norm:1.8800, tok/sec: 181782.41, flops:190.84, batch-reuse:1
@ 1552 train 5.2681 , allloss: 5.2681, dt: 724.92ms, fracRes: 0.1232, norm(attn): 15.0625, norm(output): 1.9531, norm(x): 2.0041, norm(y): 1.0031, norm:1.1066, tok/sec: 180809.38, flops:189.81, batch-reuse:1
@ 1553 train 5.2991 , allloss: 5.2991, dt: 699.80ms, fracRes: 0.1242, norm(attn): 15.7500, norm(output): 1.8750, norm(x): 1.9411, norm(y): 1.0036, norm:1.8718, tok/sec: 187298.46, flops:196.63, batch-reuse:1
@ 1554 train 5.2092 , allloss: 5.2092, dt: 710.72ms, fracRes: 0.1235, norm(attn): 16.0000, norm(output): 1.8125, norm(x): 1.8865, norm(y): 1.0036, norm:1.1290, tok/sec: 184422.53, flops:193.61, batch-reuse:1
@ 1555 train 5.2265 , allloss: 5.2265, dt: 713.05ms, fracRes: 0.1230, norm(attn): 16.2500, norm(output): 1.7422, norm(x): 1.8104, norm(y): 1.0041, norm:1.0713, tok/sec: 183817.79, flops:192.97, batch-reuse:1
@ 1556 train 5.3094 , allloss: 5.3094, dt: 713.15ms, fracRes: 0.1243, norm(attn): 16.7500, norm(output): 1.6406, norm(x): 1.7194, norm(y): 1.0044, norm:1.8909, tok/sec: 183792.72, flops:192.95, batch-reuse:1
@ 1557 train 5.1496 , allloss: 5.1496, dt: 715.70ms, fracRes: 0.1250, norm(attn): 16.8750, norm(output): 1.6172, norm(x): 1.6732, norm(y): 1.0044, norm:0.9360, tok/sec: 183137.97, flops:192.26, batch-reuse:1
@ 1558 train 5.1015 , allloss: 5.1015, dt: 702.33ms, fracRes: 0.1251, norm(attn): 16.8750, norm(output): 1.5469, norm(x): 1.6206, norm(y): 1.0042, norm:1.9529, tok/sec: 186625.70, flops:195.92, batch-reuse:1
@ 1559 train 5.0777 , allloss: 5.0777, dt: 702.14ms, fracRes: 0.1262, norm(attn): 17.1250, norm(output): 1.5000, norm(x): 1.5653, norm(y): 1.0045, norm:0.7902, tok/sec: 186674.11, flops:195.97, batch-reuse:1
@ 1560 train 5.1723 , allloss: 5.1723, dt: 705.43ms, fracRes: 0.1279, norm(attn): 17.8750, norm(output): 1.3984, norm(x): 1.4713, norm(y): 1.0050, norm:2.2269, tok/sec: 185803.89, flops:195.06, batch-reuse:1
@ 1561 train 5.0519 , allloss: 5.0519, dt: 696.51ms, fracRes: 0.1280, norm(attn): 18.0000, norm(output): 1.3750, norm(x): 1.4320, norm(y): 1.0049, norm:1.3776, tok/sec: 188184.25, flops:197.56, batch-reuse:1
@ 1562 train 4.9979 , allloss: 4.9979, dt: 714.63ms, fracRes: 0.1287, norm(attn): 17.8750, norm(output): 1.3438, norm(x): 1.4087, norm(y): 1.0046, norm:2.0766, tok/sec: 183411.14, flops:192.55, batch-reuse:1
@ 1563 train 5.0075 , allloss: 5.0075, dt: 710.11ms, fracRes: 0.1290, norm(attn): 18.0000, norm(output): 1.3125, norm(x): 1.3788, norm(y): 1.0047, norm:1.9356, tok/sec: 184578.88, flops:193.77, batch-reuse:1
@ 1564 train 4.9631 , allloss: 4.9631, dt: 709.07ms, fracRes: 0.1312, norm(attn): 18.2500, norm(output): 1.2500, norm(x): 1.3263, norm(y): 1.0051, norm:1.3242, tok/sec: 184851.08, flops:194.06, batch-reuse:1
@ 1565 train 4.9288 , allloss: 4.9288, dt: 695.47ms, fracRes: 0.1324, norm(attn): 18.1250, norm(output): 1.2031, norm(x): 1.2745, norm(y): 1.0052, norm:1.3610, tok/sec: 188464.36, flops:197.85, batch-reuse:1
@ 1566 train 4.9062 , allloss: 4.9062, dt: 706.28ms, fracRes: 0.1315, norm(attn): 18.1250, norm(output): 1.1484, norm(x): 1.2251, norm(y): 1.0051, norm:0.7855, tok/sec: 185581.36, flops:194.82, batch-reuse:1
@ 1567 train 4.8825 , allloss: 4.8825, dt: 704.67ms, fracRes: 0.1317, norm(attn): 18.1250, norm(output): 1.1094, norm(x): 1.1719, norm(y): 1.0049, norm:1.3031, tok/sec: 186004.31, flops:195.27, batch-reuse:1
@ 1568 train 4.8324 , allloss: 4.8324, dt: 707.16ms, fracRes: 0.1318, norm(attn): 18.1250, norm(output): 1.0391, norm(x): 1.1116, norm(y): 1.0051, norm:0.6638, tok/sec: 185349.54, flops:194.58, batch-reuse:1
@ 1569 train 4.7233 , allloss: 4.7233, dt: 698.56ms, fracRes: 0.1316, norm(attn): 18.1250, norm(output): 0.9453, norm(x): 1.0234, norm(y): 1.0053, norm:1.0825, tok/sec: 187632.47, flops:196.98, batch-reuse:1
@ 1570 train 4.7954 , allloss: 4.7954, dt: 699.56ms, fracRes: 0.1321, norm(attn): 18.1250, norm(output): 0.8984, norm(x): 0.9723, norm(y): 1.0052, norm:0.7341, tok/sec: 187364.08, flops:196.70, batch-reuse:1
@ 1571 train 4.7916 , allloss: 4.7916, dt: 713.22ms, fracRes: 0.1350, norm(attn): 18.0000, norm(output): 0.9062, norm(x): 0.9787, norm(y): 1.0050, norm:0.6202, tok/sec: 183774.78, flops:192.93, batch-reuse:1
@ 1572 train 4.7467 , allloss: 4.7467, dt: 709.83ms, fracRes: 0.1379, norm(attn): 18.0000, norm(output): 0.8828, norm(x): 0.9619, norm(y): 1.0050, norm:0.9548, tok/sec: 184653.21, flops:193.85, batch-reuse:1
@ 1573 train 4.7527 , allloss: 4.7527, dt: 709.64ms, fracRes: 0.1376, norm(attn): 18.0000, norm(output): 0.8750, norm(x): 0.9512, norm(y): 1.0049, norm:0.5416, tok/sec: 184701.16, flops:193.90, batch-reuse:1
@ 1574 train 4.7069 , allloss: 4.7069, dt: 709.30ms, fracRes: 0.1376, norm(attn): 17.8750, norm(output): 0.8320, norm(x): 0.9107, norm(y): 1.0049, norm:0.7825, tok/sec: 184790.44, flops:193.99, batch-reuse:1
@ 1575 train 4.6977 , allloss: 4.6977, dt: 693.04ms, fracRes: 0.1355, norm(attn): 17.8750, norm(output): 0.7812, norm(x): 0.8591, norm(y): 1.0050, norm:0.8106, tok/sec: 189126.59, flops:198.55, batch-reuse:1
@ 1576 train 4.7044 , allloss: 4.7044, dt: 700.92ms, fracRes: 0.1360, norm(attn): 17.8750, norm(output): 0.7617, norm(x): 0.8384, norm(y): 1.0049, norm:0.4475, tok/sec: 186999.98, flops:196.31, batch-reuse:1
@ 1577 train 4.6609 , allloss: 4.6609, dt: 703.16ms, fracRes: 0.1353, norm(attn): 18.0000, norm(output): 0.7539, norm(x): 0.8232, norm(y): 1.0047, norm:0.7906, tok/sec: 186403.21, flops:195.69, batch-reuse:1
@ 1578 train 4.6282 , allloss: 4.6282, dt: 711.26ms, fracRes: 0.1350, norm(attn): 17.8750, norm(output): 0.7461, norm(x): 0.8150, norm(y): 1.0048, norm:0.8199, tok/sec: 184280.47, flops:193.46, batch-reuse:1
@ 1579 train 4.5741 , allloss: 4.5741, dt: 703.51ms, fracRes: 0.1351, norm(attn): 17.7500, norm(output): 0.7148, norm(x): 0.7925, norm(y): 1.0047, norm:0.4238, tok/sec: 186311.93, flops:195.59, batch-reuse:1
@ 1580 train 4.5958 , allloss: 4.5958, dt: 697.27ms, fracRes: 0.1355, norm(attn): 17.6250, norm(output): 0.7070, norm(x): 0.7889, norm(y): 1.0048, norm:0.5660, tok/sec: 187978.08, flops:197.34, batch-reuse:1
@ 1581 train 4.4693 , allloss: 4.4693, dt: 700.80ms, fracRes: 0.1354, norm(attn): 17.7500, norm(output): 0.7070, norm(x): 0.7850, norm(y): 1.0049, norm:0.5421, tok/sec: 187031.09, flops:196.35, batch-reuse:1
@ 1582 train 4.5754 , allloss: 4.5754, dt: 700.03ms, fracRes: 0.1351, norm(attn): 17.3750, norm(output): 0.6719, norm(x): 0.7469, norm(y): 1.0047, norm:0.4048, tok/sec: 187238.81, flops:196.56, batch-reuse:1
@ 1583 train 4.5250 , allloss: 4.5250, dt: 707.76ms, fracRes: 0.1350, norm(attn): 17.2500, norm(output): 0.6562, norm(x): 0.7368, norm(y): 1.0046, norm:0.5743, tok/sec: 185191.64, flops:194.41, batch-reuse:1
@ 1584 train 4.6017 , allloss: 4.6017, dt: 719.38ms, fracRes: 0.1354, norm(attn): 17.7500, norm(output): 0.6562, norm(x): 0.7363, norm(y): 1.0047, norm:0.4117, tok/sec: 182200.70, flops:191.27, batch-reuse:1
@ 1585 train 4.5775 , allloss: 4.5775, dt: 703.37ms, fracRes: 0.1352, norm(attn): 17.8750, norm(output): 0.6445, norm(x): 0.7306, norm(y): 1.0047, norm:0.4894, tok/sec: 186347.80, flops:195.63, batch-reuse:1
@ 1586 train 4.5628 , allloss: 4.5628, dt: 703.09ms, fracRes: 0.1354, norm(attn): 17.7500, norm(output): 0.6289, norm(x): 0.7049, norm(y): 1.0045, norm:0.4632, tok/sec: 186423.37, flops:195.71, batch-reuse:1
@ 1587 train 4.5989 , allloss: 4.5989, dt: 715.11ms, fracRes: 0.1340, norm(attn): 17.0000, norm(output): 0.6250, norm(x): 0.7084, norm(y): 1.0038, norm:3.0108, tok/sec: 183290.00, flops:192.42, batch-reuse:1
@ 1588 train 4.6121 , allloss: 4.6121, dt: 708.89ms, fracRes: 0.1367, norm(attn): 18.0000, norm(output): 0.6914, norm(x): 0.7653, norm(y): 1.0050, norm:0.7206, tok/sec: 184897.77, flops:194.11, batch-reuse:1
@ 1589 train 4.5238 , allloss: 4.5238, dt: 696.74ms, fracRes: 0.1369, norm(attn): 17.6250, norm(output): 0.7148, norm(x): 0.7918, norm(y): 1.0050, norm:6.4363, tok/sec: 188120.50, flops:197.49, batch-reuse:1
@ 1590 train 4.6762 , allloss: 4.6762, dt: 717.67ms, fracRes: 0.1356, norm(attn): 17.8750, norm(output): 0.7578, norm(x): 0.8373, norm(y): 1.0049, norm:1.1583, tok/sec: 182634.39, flops:191.73, batch-reuse:1
@ 1591 train 4.4951 , allloss: 4.4951, dt: 698.63ms, fracRes: 0.1354, norm(attn): 18.1250, norm(output): 0.8008, norm(x): 0.8762, norm(y): 1.0049, norm:0.8441, tok/sec: 187613.64, flops:196.96, batch-reuse:1
@ 1592 train 4.6330 , allloss: 4.6330, dt: 708.46ms, fracRes: 0.1355, norm(attn): 18.1250, norm(output): 0.8203, norm(x): 0.8989, norm(y): 1.0049, norm:0.6696, tok/sec: 185008.97, flops:194.22, batch-reuse:1
@ 1593 train 4.5865 , allloss: 4.5865, dt: 706.58ms, fracRes: 0.1356, norm(attn): 18.1250, norm(output): 0.8086, norm(x): 0.8822, norm(y): 1.0049, norm:0.8597, tok/sec: 185501.08, flops:194.74, batch-reuse:1
@ 1594 train 4.4655 , allloss: 4.4655, dt: 707.51ms, fracRes: 0.1342, norm(attn): 18.1250, norm(output): 0.7695, norm(x): 0.8512, norm(y): 1.0049, norm:0.6324, tok/sec: 185258.10, flops:194.48, batch-reuse:1
@ 1595 train 4.6213 , allloss: 4.6213, dt: 709.56ms, fracRes: 0.1315, norm(attn): 18.0000, norm(output): 0.7578, norm(x): 0.8440, norm(y): 1.0050, norm:0.8608, tok/sec: 184723.20, flops:193.92, batch-reuse:1
@ 1596 train 4.5272 , allloss: 4.5272, dt: 702.01ms, fracRes: 0.1306, norm(attn): 18.0000, norm(output): 0.7539, norm(x): 0.8323, norm(y): 1.0049, norm:0.5486, tok/sec: 186710.88, flops:196.01, batch-reuse:1
@ 1597 train 4.5678 , allloss: 4.5678, dt: 709.32ms, fracRes: 0.1310, norm(attn): 18.0000, norm(output): 0.7617, norm(x): 0.8431, norm(y): 1.0049, norm:0.5971, tok/sec: 184784.91, flops:193.99, batch-reuse:1
@ 1598 train 4.5087 , allloss: 4.5087, dt: 701.65ms, fracRes: 0.1313, norm(attn): 18.1250, norm(output): 0.7539, norm(x): 0.8300, norm(y): 1.0050, norm:0.6224, tok/sec: 186805.29, flops:196.11, batch-reuse:1
@ 1599 train 4.6076 , allloss: 4.6076, dt: 709.60ms, fracRes: 0.1311, norm(attn): 18.2500, norm(output): 0.7461, norm(x): 0.8191, norm(y): 1.0049, norm:0.3969, tok/sec: 184712.83, flops:193.91, batch-reuse:1
@ 1600 train 4.4970 , allloss: 4.4970, dt: 705.57ms, fracRes: 0.1307, norm(attn): 18.1250, norm(output): 0.7344, norm(x): 0.8038, norm(y): 1.0049, norm:0.5808, tok/sec: 185766.28, flops:195.02, batch-reuse:1
@ 1601 train 4.6352 , allloss: 4.6352, dt: 698.87ms, fracRes: 0.1309, norm(attn): 18.2500, norm(output): 0.7266, norm(x): 0.7987, norm(y): 1.0050, norm:0.4627, tok/sec: 187548.04, flops:196.89, batch-reuse:1
@ 1602 train 4.4859 , allloss: 4.4859, dt: 705.11ms, fracRes: 0.1310, norm(attn): 18.1250, norm(output): 0.7148, norm(x): 0.7928, norm(y): 1.0051, norm:0.4545, tok/sec: 185889.52, flops:195.15, batch-reuse:1
@ 1603 train 4.4731 , allloss: 4.4731, dt: 708.63ms, fracRes: 0.1305, norm(attn): 18.2500, norm(output): 0.7031, norm(x): 0.7770, norm(y): 1.0050, norm:0.4058, tok/sec: 184966.39, flops:194.18, batch-reuse:1
@ 1604 train 4.4740 , allloss: 4.4740, dt: 708.39ms, fracRes: 0.1304, norm(attn): 18.1250, norm(output): 0.6914, norm(x): 0.7637, norm(y): 1.0049, norm:0.3625, tok/sec: 185028.27, flops:194.24, batch-reuse:1
@ 1605 train 4.5440 , allloss: 4.5440, dt: 707.69ms, fracRes: 0.1300, norm(attn): 18.1250, norm(output): 0.6836, norm(x): 0.7571, norm(y): 1.0049, norm:0.5052, tok/sec: 185211.85, flops:194.44, batch-reuse:1
@ 1606 train 4.5324 , allloss: 4.5324, dt: 700.30ms, fracRes: 0.1303, norm(attn): 18.1250, norm(output): 0.6836, norm(x): 0.7613, norm(y): 1.0048, norm:0.4633, tok/sec: 187166.59, flops:196.49, batch-reuse:1
@ 1607 train 4.5056 , allloss: 4.5056, dt: 706.78ms, fracRes: 0.1302, norm(attn): 18.1250, norm(output): 0.6797, norm(x): 0.7596, norm(y): 1.0049, norm:0.3898, tok/sec: 185450.27, flops:194.69, batch-reuse:1
@ 1608 train 4.5380 , allloss: 4.5380, dt: 704.89ms, fracRes: 0.1299, norm(attn): 18.1250, norm(output): 0.6836, norm(x): 0.7587, norm(y): 1.0049, norm:0.4761, tok/sec: 185946.74, flops:195.21, batch-reuse:1
@ 1609 train 4.4791 , allloss: 4.4791, dt: 698.43ms, fracRes: 0.1302, norm(attn): 18.1250, norm(output): 0.6680, norm(x): 0.7438, norm(y): 1.0049, norm:0.5127, tok/sec: 187665.39, flops:197.01, batch-reuse:1
@ 1610 train 4.4322 , allloss: 4.4322, dt: 706.60ms, fracRes: 0.1300, norm(attn): 18.1250, norm(output): 0.6758, norm(x): 0.7436, norm(y): 1.0048, norm:0.3848, tok/sec: 185497.32, flops:194.74, batch-reuse:1
@ 1611 train 4.4366 , allloss: 4.4366, dt: 700.00ms, fracRes: 0.1299, norm(attn): 18.2500, norm(output): 0.6719, norm(x): 0.7500, norm(y): 1.0049, norm:0.4251, tok/sec: 187245.70, flops:196.57, batch-reuse:1
@ 1612 train 4.4842 , allloss: 4.4842, dt: 697.59ms, fracRes: 0.1296, norm(attn): 18.1250, norm(output): 0.6641, norm(x): 0.7402, norm(y): 1.0049, norm:0.3760, tok/sec: 187892.57, flops:197.25, batch-reuse:1
@ 1613 train 4.5003 , allloss: 4.5003, dt: 702.14ms, fracRes: 0.1288, norm(attn): 18.1250, norm(output): 0.6523, norm(x): 0.7250, norm(y): 1.0049, norm:0.4001, tok/sec: 186674.24, flops:195.97, batch-reuse:1
@ 1614 train 4.5689 , allloss: 4.5689, dt: 711.98ms, fracRes: 0.1275, norm(attn): 18.1250, norm(output): 0.6406, norm(x): 0.7230, norm(y): 1.0049, norm:0.4096, tok/sec: 184094.42, flops:193.26, batch-reuse:1
@ 1615 train 4.4259 , allloss: 4.4259, dt: 691.40ms, fracRes: 0.1292, norm(attn): 18.1250, norm(output): 0.6406, norm(x): 0.7195, norm(y): 1.0048, norm:0.3790, tok/sec: 189574.50, flops:199.02, batch-reuse:1
@ 1616 train 4.5251 , allloss: 4.5251, dt: 699.98ms, fracRes: 0.1295, norm(attn): 18.1250, norm(output): 0.6562, norm(x): 0.7288, norm(y): 1.0048, norm:0.3916, tok/sec: 187251.76, flops:196.58, batch-reuse:1
@ 1617 train 4.4564 , allloss: 4.4564, dt: 697.62ms, fracRes: 0.1294, norm(attn): 18.0000, norm(output): 0.6328, norm(x): 0.7093, norm(y): 1.0048, norm:0.4109, tok/sec: 187884.74, flops:197.24, batch-reuse:1
@ 1618 train 4.5201 , allloss: 4.5201, dt: 702.95ms, fracRes: 0.1292, norm(attn): 18.0000, norm(output): 0.6211, norm(x): 0.6899, norm(y): 1.0048, norm:0.4167, tok/sec: 186460.11, flops:195.75, batch-reuse:1
@ 1619 train 4.3788 , allloss: 4.3788, dt: 708.45ms, fracRes: 0.1286, norm(attn): 18.1250, norm(output): 0.6172, norm(x): 0.6931, norm(y): 1.0048, norm:0.3645, tok/sec: 185012.45, flops:194.23, batch-reuse:1
@ 1620 train 4.3629 , allloss: 4.3629, dt: 721.90ms, fracRes: 0.1293, norm(attn): 18.0000, norm(output): 0.6250, norm(x): 0.6992, norm(y): 1.0049, norm:0.4255, tok/sec: 181565.86, flops:190.61, batch-reuse:1
@ 1621 train 4.4772 , allloss: 4.4772, dt: 722.74ms, fracRes: 0.1290, norm(attn): 18.0000, norm(output): 0.6250, norm(x): 0.6989, norm(y): 1.0047, norm:0.4494, tok/sec: 181355.02, flops:190.39, batch-reuse:1
@ 1622 train 4.4753 , allloss: 4.4753, dt: 702.11ms, fracRes: 0.1288, norm(attn): 18.0000, norm(output): 0.6211, norm(x): 0.6945, norm(y): 1.0047, norm:0.4160, tok/sec: 186681.91, flops:195.98, batch-reuse:1
@ 1623 train 4.3978 , allloss: 4.3978, dt: 704.54ms, fracRes: 0.1286, norm(attn): 18.0000, norm(output): 0.6094, norm(x): 0.6835, norm(y): 1.0047, norm:0.3347, tok/sec: 186038.36, flops:195.30, batch-reuse:1
@ 1624 train 4.3447 , allloss: 4.3447, dt: 714.54ms, fracRes: 0.1284, norm(attn): 18.1250, norm(output): 0.6055, norm(x): 0.6789, norm(y): 1.0048, norm:0.3710, tok/sec: 183435.07, flops:192.57, batch-reuse:1
@ 1625 train 4.3552 , allloss: 4.3552, dt: 709.95ms, fracRes: 0.1282, norm(attn): 18.1250, norm(output): 0.6211, norm(x): 0.6933, norm(y): 1.0047, norm:0.4233, tok/sec: 184622.70, flops:193.82, batch-reuse:1
@ 1626 train 4.4117 , allloss: 4.4117, dt: 711.94ms, fracRes: 0.1281, norm(attn): 18.1250, norm(output): 0.6172, norm(x): 0.6900, norm(y): 1.0047, norm:0.4519, tok/sec: 184106.13, flops:193.27, batch-reuse:1
@ 1627 train 4.3358 , allloss: 4.3358, dt: 705.08ms, fracRes: 0.1279, norm(attn): 18.1250, norm(output): 0.6094, norm(x): 0.6847, norm(y): 1.0046, norm:0.5095, tok/sec: 185896.88, flops:195.15, batch-reuse:1
@ 1628 train 4.3502 , allloss: 4.3502, dt: 706.18ms, fracRes: 0.1273, norm(attn): 18.1250, norm(output): 0.5859, norm(x): 0.6654, norm(y): 1.0047, norm:0.4731, tok/sec: 185607.11, flops:194.85, batch-reuse:1
@ 1629 train 4.3311 , allloss: 4.3311, dt: 722.35ms, fracRes: 0.1279, norm(attn): 18.1250, norm(output): 0.6016, norm(x): 0.6727, norm(y): 1.0046, norm:0.3852, tok/sec: 181452.05, flops:190.49, batch-reuse:1
@ 1630 train 4.3768 , allloss: 4.3768, dt: 720.42ms, fracRes: 0.1279, norm(attn): 18.1250, norm(output): 0.5898, norm(x): 0.6706, norm(y): 1.0047, norm:0.4411, tok/sec: 181937.86, flops:191.00, batch-reuse:1
@ 1631 train 4.2851 , allloss: 4.2851, dt: 705.19ms, fracRes: 0.1277, norm(attn): 18.0000, norm(output): 0.5820, norm(x): 0.6605, norm(y): 1.0047, norm:0.4776, tok/sec: 185866.52, flops:195.12, batch-reuse:1
@ 1632 train 4.4127 , allloss: 4.4127, dt: 711.54ms, fracRes: 0.1275, norm(attn): 18.0000, norm(output): 0.5742, norm(x): 0.6524, norm(y): 1.0047, norm:0.4348, tok/sec: 184209.46, flops:193.38, batch-reuse:1
@ 1633 train 4.4062 , allloss: 4.4062, dt: 697.18ms, fracRes: 0.1278, norm(attn): 18.0000, norm(output): 0.5781, norm(x): 0.6569, norm(y): 1.0046, norm:0.4250, tok/sec: 188002.19, flops:197.37, batch-reuse:1
@ 1634 train 4.3865 , allloss: 4.3865, dt: 708.91ms, fracRes: 0.1279, norm(attn): 18.1250, norm(output): 0.5859, norm(x): 0.6639, norm(y): 1.0046, norm:0.3650, tok/sec: 184892.74, flops:194.10, batch-reuse:1
@ 1635 train 4.2916 , allloss: 4.2916, dt: 715.80ms, fracRes: 0.1278, norm(attn): 18.1250, norm(output): 0.5781, norm(x): 0.6596, norm(y): 1.0046, norm:0.4211, tok/sec: 183113.75, flops:192.23, batch-reuse:1
@ 1636 train 4.3126 , allloss: 4.3126, dt: 711.18ms, fracRes: 0.1277, norm(attn): 18.1250, norm(output): 0.5781, norm(x): 0.6549, norm(y): 1.0046, norm:0.3549, tok/sec: 184301.47, flops:193.48, batch-reuse:1
@ 1637 train 4.3987 , allloss: 4.3987, dt: 700.33ms, fracRes: 0.1281, norm(attn): 18.1250, norm(output): 0.5781, norm(x): 0.6539, norm(y): 1.0046, norm:0.4026, tok/sec: 187157.80, flops:196.48, batch-reuse:1
@ 1638 train 4.3735 , allloss: 4.3735, dt: 708.95ms, fracRes: 0.1278, norm(attn): 18.1250, norm(output): 0.5781, norm(x): 0.6583, norm(y): 1.0046, norm:0.4813, tok/sec: 184881.86, flops:194.09, batch-reuse:1
@ 1639 train 4.3900 , allloss: 4.3900, dt: 705.74ms, fracRes: 0.1277, norm(attn): 18.0000, norm(output): 0.5664, norm(x): 0.6492, norm(y): 1.0046, norm:0.5863, tok/sec: 185723.61, flops:194.97, batch-reuse:1
@ 1640 train 4.3859 , allloss: 4.3859, dt: 699.86ms, fracRes: 0.1276, norm(attn): 18.1250, norm(output): 0.5664, norm(x): 0.6452, norm(y): 1.0047, norm:0.5811, tok/sec: 187282.51, flops:196.61, batch-reuse:1
@ 1641 train 4.3879 , allloss: 4.3879, dt: 711.73ms, fracRes: 0.1277, norm(attn): 18.0000, norm(output): 0.5664, norm(x): 0.6428, norm(y): 1.0045, norm:0.5144, tok/sec: 184159.97, flops:193.33, batch-reuse:1
@ 1642 train 4.3630 , allloss: 4.3630, dt: 690.45ms, fracRes: 0.1279, norm(attn): 18.1250, norm(output): 0.5625, norm(x): 0.6411, norm(y): 1.0046, norm:0.4707, tok/sec: 189836.74, flops:199.29, batch-reuse:1
@ 1643 train 4.3712 , allloss: 4.3712, dt: 698.65ms, fracRes: 0.1274, norm(attn): 18.0000, norm(output): 0.5625, norm(x): 0.6415, norm(y): 1.0044, norm:0.3886, tok/sec: 187607.30, flops:196.95, batch-reuse:1
@ 1644 train 4.4355 , allloss: 4.4355, dt: 703.72ms, fracRes: 0.1274, norm(attn): 18.0000, norm(output): 0.5703, norm(x): 0.6484, norm(y): 1.0044, norm:0.3995, tok/sec: 186256.44, flops:195.53, batch-reuse:1
@ 1645 train 4.2656 , allloss: 4.2656, dt: 704.52ms, fracRes: 0.1274, norm(attn): 18.0000, norm(output): 0.5742, norm(x): 0.6522, norm(y): 1.0044, norm:0.4355, tok/sec: 186044.53, flops:195.31, batch-reuse:1
@ 1646 train 4.3767 , allloss: 4.3767, dt: 699.90ms, fracRes: 0.1268, norm(attn): 17.8750, norm(output): 0.5703, norm(x): 0.6482, norm(y): 1.0045, norm:0.4171, tok/sec: 187272.81, flops:196.60, batch-reuse:1
@ 1647 train 4.4043 , allloss: 4.4043, dt: 705.39ms, fracRes: 0.1271, norm(attn): 17.8750, norm(output): 0.5586, norm(x): 0.6372, norm(y): 1.0044, norm:0.4073, tok/sec: 185814.57, flops:195.07, batch-reuse:1
@ 1648 train 4.3528 , allloss: 4.3528, dt: 717.44ms, fracRes: 0.1274, norm(attn): 17.8750, norm(output): 0.5508, norm(x): 0.6287, norm(y): 1.0045, norm:0.3935, tok/sec: 182692.84, flops:191.79, batch-reuse:1
@ 1649 train 4.3514 , allloss: 4.3514, dt: 716.91ms, fracRes: 0.1273, norm(attn): 17.8750, norm(output): 0.5469, norm(x): 0.6248, norm(y): 1.0044, norm:0.4935, tok/sec: 182829.24, flops:191.93, batch-reuse:1
@ 1650 train 4.3725 , allloss: 4.3725, dt: 708.13ms, fracRes: 0.1277, norm(attn): 18.0000, norm(output): 0.5469, norm(x): 0.6274, norm(y): 1.0044, norm:0.4949, tok/sec: 185095.99, flops:194.31, batch-reuse:1
@ 1651 train 4.4979 , allloss: 4.4979, dt: 717.74ms, fracRes: 0.1278, norm(attn): 17.8750, norm(output): 0.5547, norm(x): 0.6312, norm(y): 1.0043, norm:0.5603, tok/sec: 182618.62, flops:191.71, batch-reuse:1
@ 1652 train 4.4430 , allloss: 4.4430, dt: 720.62ms, fracRes: 0.1278, norm(attn): 17.8750, norm(output): 0.5391, norm(x): 0.6181, norm(y): 1.0044, norm:1.8838, tok/sec: 181888.74, flops:190.95, batch-reuse:1
@ 1653 train 6.2566 , allloss: 6.2566, dt: 707.82ms, fracRes: 0.1013, norm(attn): 16.8750, norm(output): 2.6562, norm(x): 2.6918, norm(y): 1.0036, norm:3607.3770, tok/sec: 185177.72, flops:194.40, batch-reuse:1
@ 1654 train 7.2269 , allloss: 7.2269, dt: 712.79ms, fracRes: 0.1089, norm(attn): 16.0000, norm(output): 3.8438, norm(x): 3.9012, norm(y): 1.0031, norm:11654.2568, tok/sec: 183884.87, flops:193.04, batch-reuse:1
@ 1655 train 7.7094 , allloss: 7.7094, dt: 700.60ms, fracRes: 0.1185, norm(attn): 16.5000, norm(output): 1.7500, norm(x): 1.8196, norm(y): 1.0033, norm:45826.4805, tok/sec: 187084.49, flops:196.40, batch-reuse:1
@ 1656 train 9.3683 , allloss: 9.3683, dt: 708.37ms, fracRes: 0.1339, norm(attn): 18.0000, norm(output): 2.1094, norm(x): 2.1944, norm(y): 1.0033, norm:31.3039, tok/sec: 185034.00, flops:194.25, batch-reuse:1
@ 1657 train 6.0623 , allloss: 6.0623, dt: 705.13ms, fracRes: 0.1364, norm(attn): 18.1250, norm(output): 1.0938, norm(x): 1.1800, norm(y): 1.0038, norm:22.5389, tok/sec: 185884.12, flops:195.14, batch-reuse:1
@ 1658 train 5.2328 , allloss: 5.2328, dt: 708.13ms, fracRes: 0.1402, norm(attn): 17.6250, norm(output): 0.7500, norm(x): 0.8337, norm(y): 1.0047, norm:3.6183, tok/sec: 185095.68, flops:194.31, batch-reuse:1
@ 1659 train 4.8283 , allloss: 4.8283, dt: 722.38ms, fracRes: 0.1459, norm(attn): 15.3125, norm(output): 0.6758, norm(x): 0.7512, norm(y): 1.0038, norm:1.8514, tok/sec: 181444.69, flops:190.48, batch-reuse:1
@ 1660 train 4.6130 , allloss: 4.6130, dt: 712.88ms, fracRes: 0.1485, norm(attn): 16.8750, norm(output): 0.6953, norm(x): 0.7811, norm(y): 1.0045, norm:1.1143, tok/sec: 183863.84, flops:193.02, batch-reuse:1
@ 1661 train 4.6504 , allloss: 4.6504, dt: 711.36ms, fracRes: 0.1475, norm(attn): 17.3750, norm(output): 0.7305, norm(x): 0.8080, norm(y): 1.0048, norm:1.2666, tok/sec: 184256.01, flops:193.43, batch-reuse:1
@ 1662 train 4.6371 , allloss: 4.6371, dt: 711.73ms, fracRes: 0.1485, norm(attn): 17.7500, norm(output): 0.7188, norm(x): 0.8034, norm(y): 1.0049, norm:1.0429, tok/sec: 184160.59, flops:193.33, batch-reuse:1
@ 1663 train 4.5935 , allloss: 4.5935, dt: 712.59ms, fracRes: 0.1479, norm(attn): 17.5000, norm(output): 0.6953, norm(x): 0.7827, norm(y): 1.0052, norm:0.7420, tok/sec: 183937.97, flops:193.10, batch-reuse:1
@ 1664 train 4.4850 , allloss: 4.4850, dt: 702.30ms, fracRes: 0.1477, norm(attn): 17.2500, norm(output): 0.6797, norm(x): 0.7614, norm(y): 1.0054, norm:0.7977, tok/sec: 186632.47, flops:195.93, batch-reuse:1
@ 1665 train 4.5117 , allloss: 4.5117, dt: 695.71ms, fracRes: 0.1486, norm(attn): 17.1250, norm(output): 0.6680, norm(x): 0.7478, norm(y): 1.0053, norm:0.7617, tok/sec: 188401.32, flops:197.78, batch-reuse:1
@ 1666 train 4.5357 , allloss: 4.5357, dt: 711.92ms, fracRes: 0.1480, norm(attn): 16.8750, norm(output): 0.6406, norm(x): 0.7270, norm(y): 1.0053, norm:0.5639, tok/sec: 184109.40, flops:193.28, batch-reuse:1
@ 1667 train 4.6865 , allloss: 4.6865, dt: 708.13ms, fracRes: 0.1485, norm(attn): 16.7500, norm(output): 0.6328, norm(x): 0.7147, norm(y): 1.0052, norm:0.6909, tok/sec: 185096.05, flops:194.31, batch-reuse:1
@ 1668 train 4.6874 , allloss: 4.6874, dt: 703.88ms, fracRes: 0.1493, norm(attn): 16.3750, norm(output): 0.6406, norm(x): 0.7242, norm(y): 1.0050, norm:0.8879, tok/sec: 186213.86, flops:195.49, batch-reuse:1
@ 1669 train 4.6785 , allloss: 4.6785, dt: 710.22ms, fracRes: 0.1487, norm(attn): 16.5000, norm(output): 0.6328, norm(x): 0.7121, norm(y): 1.0050, norm:0.7317, tok/sec: 184551.43, flops:193.74, batch-reuse:1
@ 1670 train 4.7270 , allloss: 4.7270, dt: 708.32ms, fracRes: 0.1515, norm(attn): 16.2500, norm(output): 0.6328, norm(x): 0.7177, norm(y): 1.0048, norm:0.6416, tok/sec: 185046.27, flops:194.26, batch-reuse:1
@ 1671 train 4.6771 , allloss: 4.6771, dt: 714.29ms, fracRes: 0.1478, norm(attn): 17.1250, norm(output): 0.6211, norm(x): 0.7033, norm(y): 1.0052, norm:0.7295, tok/sec: 183498.74, flops:192.64, batch-reuse:1
@ 1672 train 4.6731 , allloss: 4.6731, dt: 704.82ms, fracRes: 0.1473, norm(attn): 17.6250, norm(output): 0.6328, norm(x): 0.7130, norm(y): 1.0053, norm:0.8525, tok/sec: 185963.97, flops:195.23, batch-reuse:1
@ 1673 train 4.5638 , allloss: 4.5638, dt: 707.55ms, fracRes: 0.1471, norm(attn): 17.7500, norm(output): 0.6172, norm(x): 0.7024, norm(y): 1.0054, norm:0.5646, tok/sec: 185248.61, flops:194.47, batch-reuse:1
@ 1674 train 4.6112 , allloss: 4.6112, dt: 693.44ms, fracRes: 0.1473, norm(attn): 17.8750, norm(output): 0.6211, norm(x): 0.7023, norm(y): 1.0053, norm:0.8088, tok/sec: 189018.12, flops:198.43, batch-reuse:1
@ 1675 train 4.7199 , allloss: 4.7199, dt: 697.82ms, fracRes: 0.1467, norm(attn): 17.7500, norm(output): 0.6055, norm(x): 0.6924, norm(y): 1.0052, norm:0.4780, tok/sec: 187830.37, flops:197.18, batch-reuse:1
@ 1676 train 4.7282 , allloss: 4.7282, dt: 704.39ms, fracRes: 0.1458, norm(attn): 17.8750, norm(output): 0.5938, norm(x): 0.6718, norm(y): 1.0054, norm:0.9775, tok/sec: 186079.35, flops:195.35, batch-reuse:1
@ 1677 train 4.5514 , allloss: 4.5514, dt: 707.96ms, fracRes: 0.1462, norm(attn): 17.7500, norm(output): 0.5938, norm(x): 0.6708, norm(y): 1.0054, norm:0.5080, tok/sec: 185140.12, flops:194.36, batch-reuse:1
@ 1678 train 4.5661 , allloss: 4.5661, dt: 695.48ms, fracRes: 0.1460, norm(attn): 17.8750, norm(output): 0.5898, norm(x): 0.6732, norm(y): 1.0052, norm:0.7619, tok/sec: 188463.20, flops:197.85, batch-reuse:1
@ 1679 train 4.6641 , allloss: 4.6641, dt: 707.13ms, fracRes: 0.1452, norm(attn): 17.7500, norm(output): 0.5898, norm(x): 0.6763, norm(y): 1.0052, norm:0.5624, tok/sec: 185357.41, flops:194.59, batch-reuse:1
@ 1680 train 4.6091 , allloss: 4.6091, dt: 715.83ms, fracRes: 0.1453, norm(attn): 17.6250, norm(output): 0.5820, norm(x): 0.6659, norm(y): 1.0051, norm:0.6404, tok/sec: 183104.23, flops:192.22, batch-reuse:1
@ 1681 train 4.5861 , allloss: 4.5861, dt: 709.49ms, fracRes: 0.1453, norm(attn): 17.5000, norm(output): 0.5781, norm(x): 0.6603, norm(y): 1.0051, norm:0.4794, tok/sec: 184742.44, flops:193.94, batch-reuse:1
@ 1682 train 4.6214 , allloss: 4.6214, dt: 717.47ms, fracRes: 0.1452, norm(attn): 17.3750, norm(output): 0.5742, norm(x): 0.6580, norm(y): 1.0050, norm:0.6250, tok/sec: 182685.31, flops:191.78, batch-reuse:1
@ 1683 train 4.4819 , allloss: 4.4819, dt: 711.47ms, fracRes: 0.1452, norm(attn): 17.2500, norm(output): 0.5664, norm(x): 0.6490, norm(y): 1.0052, norm:0.5235, tok/sec: 184227.92, flops:193.40, batch-reuse:1
@ 1684 train 4.5303 , allloss: 4.5303, dt: 709.22ms, fracRes: 0.1444, norm(attn): 17.3750, norm(output): 0.5625, norm(x): 0.6438, norm(y): 1.0052, norm:0.4670, tok/sec: 184810.94, flops:194.01, batch-reuse:1
@ 1685 train 4.6009 , allloss: 4.6009, dt: 711.75ms, fracRes: 0.1438, norm(attn): 17.5000, norm(output): 0.5586, norm(x): 0.6384, norm(y): 1.0051, norm:0.4078, tok/sec: 184154.05, flops:193.33, batch-reuse:1
@ 1686 train 4.5490 , allloss: 4.5490, dt: 708.94ms, fracRes: 0.1437, norm(attn): 17.6250, norm(output): 0.5586, norm(x): 0.6401, norm(y): 1.0051, norm:0.4464, tok/sec: 184885.15, flops:194.09, batch-reuse:1
@ 1687 train 4.5963 , allloss: 4.5963, dt: 718.02ms, fracRes: 0.1434, norm(attn): 17.6250, norm(output): 0.5547, norm(x): 0.6360, norm(y): 1.0051, norm:0.5137, tok/sec: 182546.09, flops:191.64, batch-reuse:1
@ 1688 train 4.6716 , allloss: 4.6716, dt: 702.70ms, fracRes: 0.1436, norm(attn): 17.7500, norm(output): 0.5430, norm(x): 0.6277, norm(y): 1.0049, norm:0.3926, tok/sec: 186526.16, flops:195.82, batch-reuse:1
@ 1689 train 4.5405 , allloss: 4.5405, dt: 698.19ms, fracRes: 0.1433, norm(attn): 17.7500, norm(output): 0.5469, norm(x): 0.6280, norm(y): 1.0050, norm:0.3735, tok/sec: 187731.20, flops:197.08, batch-reuse:1
@ 1690 train 4.5256 , allloss: 4.5256, dt: 700.61ms, fracRes: 0.1429, norm(attn): 17.6250, norm(output): 0.5508, norm(x): 0.6337, norm(y): 1.0051, norm:0.3667, tok/sec: 187083.15, flops:196.40, batch-reuse:1
@ 1691 train 4.4882 , allloss: 4.4882, dt: 713.21ms, fracRes: 0.1431, norm(attn): 17.6250, norm(output): 0.5391, norm(x): 0.6241, norm(y): 1.0051, norm:0.3441, tok/sec: 183776.62, flops:192.93, batch-reuse:1
@ 1692 train 4.4723 , allloss: 4.4723, dt: 704.57ms, fracRes: 0.1429, norm(attn): 17.3750, norm(output): 0.5391, norm(x): 0.6250, norm(y): 1.0049, norm:0.3504, tok/sec: 186031.94, flops:195.30, batch-reuse:1
@ 1693 train 4.7416 , allloss: 4.7416, dt: 709.01ms, fracRes: 0.1426, norm(attn): 17.7500, norm(output): 0.5352, norm(x): 0.6222, norm(y): 1.0049, norm:0.4466, tok/sec: 184865.38, flops:194.07, batch-reuse:1
@ 1694 train 4.6518 , allloss: 4.6518, dt: 703.93ms, fracRes: 0.1427, norm(attn): 17.6250, norm(output): 0.5469, norm(x): 0.6295, norm(y): 1.0049, norm:0.4269, tok/sec: 186201.43, flops:195.47, batch-reuse:1
@ 1695 train 4.5730 , allloss: 4.5730, dt: 688.88ms, fracRes: 0.1423, norm(attn): 17.8750, norm(output): 0.5352, norm(x): 0.6205, norm(y): 1.0049, norm:0.3956, tok/sec: 190267.68, flops:199.74, batch-reuse:1
@ 1696 train 4.5556 , allloss: 4.5556, dt: 714.38ms, fracRes: 0.1423, norm(attn): 17.8750, norm(output): 0.5469, norm(x): 0.6282, norm(y): 1.0049, norm:0.3467, tok/sec: 183476.08, flops:192.61, batch-reuse:1
@ 1697 train 4.5340 , allloss: 4.5340, dt: 715.28ms, fracRes: 0.1423, norm(attn): 17.8750, norm(output): 0.5391, norm(x): 0.6273, norm(y): 1.0050, norm:0.3924, tok/sec: 183245.10, flops:192.37, batch-reuse:1
@ 1698 train 4.5084 , allloss: 4.5084, dt: 706.97ms, fracRes: 0.1418, norm(attn): 18.0000, norm(output): 0.5430, norm(x): 0.6242, norm(y): 1.0049, norm:0.3391, tok/sec: 185399.04, flops:194.63, batch-reuse:1
@ 1699 train 4.5118 , allloss: 4.5118, dt: 699.19ms, fracRes: 0.1422, norm(attn): 18.0000, norm(output): 0.5508, norm(x): 0.6319, norm(y): 1.0049, norm:0.3822, tok/sec: 187461.89, flops:196.80, batch-reuse:1
@ 1700 train 4.5565 , allloss: 4.5565, dt: 698.50ms, fracRes: 0.1416, norm(attn): 17.8750, norm(output): 0.5312, norm(x): 0.6158, norm(y): 1.0048, norm:0.3620, tok/sec: 187646.81, flops:196.99, batch-reuse:1
@ 1701 train 4.5565 , allloss: 4.5565, dt: 703.38ms, fracRes: 0.1416, norm(attn): 17.7500, norm(output): 0.5273, norm(x): 0.6135, norm(y): 1.0048, norm:0.4525, tok/sec: 186345.84, flops:195.63, batch-reuse:1
@ 1702 train 4.5136 , allloss: 4.5136, dt: 697.10ms, fracRes: 0.1416, norm(attn): 17.7500, norm(output): 0.5312, norm(x): 0.6223, norm(y): 1.0048, norm:0.4070, tok/sec: 188025.85, flops:197.39, batch-reuse:1
@ 1703 train 4.4769 , allloss: 4.4769, dt: 707.30ms, fracRes: 0.1416, norm(attn): 17.7500, norm(output): 0.5391, norm(x): 0.6230, norm(y): 1.0047, norm:0.3953, tok/sec: 185313.36, flops:194.54, batch-reuse:1
@ 1704 train 4.5353 , allloss: 4.5353, dt: 714.39ms, fracRes: 0.1415, norm(attn): 17.7500, norm(output): 0.5234, norm(x): 0.6061, norm(y): 1.0047, norm:0.3441, tok/sec: 183475.10, flops:192.61, batch-reuse:1
@ 1705 train 4.4678 , allloss: 4.4678, dt: 697.85ms, fracRes: 0.1427, norm(attn): 17.3750, norm(output): 0.5312, norm(x): 0.6191, norm(y): 1.0048, norm:0.5812, tok/sec: 187822.99, flops:197.18, batch-reuse:1
@ 1706 train 4.4665 , allloss: 4.4665, dt: 713.45ms, fracRes: 0.1417, norm(attn): 17.6250, norm(output): 0.5352, norm(x): 0.6211, norm(y): 1.0046, norm:0.5115, tok/sec: 183716.99, flops:192.87, batch-reuse:1
@ 1707 train 4.4406 , allloss: 4.4406, dt: 708.44ms, fracRes: 0.1420, norm(attn): 17.7500, norm(output): 0.5312, norm(x): 0.6224, norm(y): 1.0047, norm:0.4491, tok/sec: 185014.63, flops:194.23, batch-reuse:1
@ 1708 train 4.4232 , allloss: 4.4232, dt: 711.10ms, fracRes: 0.1419, norm(attn): 17.7500, norm(output): 0.5312, norm(x): 0.6191, norm(y): 1.0047, norm:0.4494, tok/sec: 184322.61, flops:193.50, batch-reuse:1
@ 1709 train 4.5072 , allloss: 4.5072, dt: 704.67ms, fracRes: 0.1415, norm(attn): 17.6250, norm(output): 0.5195, norm(x): 0.6079, norm(y): 1.0046, norm:0.4312, tok/sec: 186005.12, flops:195.27, batch-reuse:1
@ 1710 train 4.4591 , allloss: 4.4591, dt: 700.16ms, fracRes: 0.1420, norm(attn): 17.7500, norm(output): 0.5312, norm(x): 0.6171, norm(y): 1.0045, norm:0.4922, tok/sec: 187202.85, flops:196.53, batch-reuse:1
@ 1711 train 4.4739 , allloss: 4.4739, dt: 704.56ms, fracRes: 0.1420, norm(attn): 17.6250, norm(output): 0.5352, norm(x): 0.6239, norm(y): 1.0045, norm:0.4408, tok/sec: 186033.64, flops:195.30, batch-reuse:1
@ 1712 train 4.6386 , allloss: 4.6386, dt: 705.16ms, fracRes: 0.1413, norm(attn): 17.6250, norm(output): 0.5234, norm(x): 0.6136, norm(y): 1.0044, norm:0.4045, tok/sec: 185875.63, flops:195.13, batch-reuse:1
@ 1713 train 4.3800 , allloss: 4.3800, dt: 705.83ms, fracRes: 0.1411, norm(attn): 17.7500, norm(output): 0.5078, norm(x): 0.5983, norm(y): 1.0046, norm:0.5226, tok/sec: 185698.08, flops:194.95, batch-reuse:1
@ 1714 train 4.4708 , allloss: 4.4708, dt: 701.36ms, fracRes: 0.1413, norm(attn): 17.7500, norm(output): 0.5156, norm(x): 0.6062, norm(y): 1.0046, norm:0.4470, tok/sec: 186881.49, flops:196.19, batch-reuse:1
@ 1715 train 4.4628 , allloss: 4.4628, dt: 695.37ms, fracRes: 0.1419, norm(attn): 17.2500, norm(output): 0.5234, norm(x): 0.6187, norm(y): 1.0046, norm:0.4137, tok/sec: 188491.37, flops:197.88, batch-reuse:1
@ 1716 train 4.5433 , allloss: 4.5433, dt: 705.52ms, fracRes: 0.1418, norm(attn): 17.1250, norm(output): 0.5273, norm(x): 0.6167, norm(y): 1.0045, norm:0.4557, tok/sec: 185780.85, flops:195.03, batch-reuse:1
@ 1717 train 4.6621 , allloss: 4.6621, dt: 705.74ms, fracRes: 0.1411, norm(attn): 17.0000, norm(output): 0.5078, norm(x): 0.5965, norm(y): 1.0044, norm:0.5893, tok/sec: 185721.92, flops:194.97, batch-reuse:1
@ 1718 train 4.5834 , allloss: 4.5834, dt: 707.28ms, fracRes: 0.1411, norm(attn): 17.0000, norm(output): 0.5234, norm(x): 0.6141, norm(y): 1.0041, norm:0.4508, tok/sec: 185318.67, flops:194.55, batch-reuse:1
@ 1719 train 4.5891 , allloss: 4.5891, dt: 704.96ms, fracRes: 0.1408, norm(attn): 17.1250, norm(output): 0.5273, norm(x): 0.6153, norm(y): 1.0042, norm:0.4783, tok/sec: 185927.81, flops:195.19, batch-reuse:1
@ 1720 train 4.4818 , allloss: 4.4818, dt: 708.69ms, fracRes: 0.1404, norm(attn): 17.1250, norm(output): 0.5273, norm(x): 0.6143, norm(y): 1.0042, norm:0.4528, tok/sec: 184950.34, flops:194.16, batch-reuse:1
@ 1721 train 4.5741 , allloss: 4.5741, dt: 691.31ms, fracRes: 0.1406, norm(attn): 17.1250, norm(output): 0.5117, norm(x): 0.5990, norm(y): 1.0043, norm:0.4386, tok/sec: 189600.00, flops:199.04, batch-reuse:1
@ 1722 train 4.5726 , allloss: 4.5726, dt: 706.65ms, fracRes: 0.1413, norm(attn): 17.0000, norm(output): 0.5117, norm(x): 0.6023, norm(y): 1.0043, norm:0.4203, tok/sec: 185483.05, flops:194.72, batch-reuse:1
@ 1723 train 4.5097 , allloss: 4.5097, dt: 705.65ms, fracRes: 0.1409, norm(attn): 17.0000, norm(output): 0.5156, norm(x): 0.6067, norm(y): 1.0041, norm:0.4176, tok/sec: 185746.20, flops:195.00, batch-reuse:1
@ 1724 train 4.4050 , allloss: 4.4050, dt: 710.19ms, fracRes: 0.1410, norm(attn): 17.1250, norm(output): 0.5156, norm(x): 0.6061, norm(y): 1.0041, norm:0.4076, tok/sec: 184558.92, flops:193.75, batch-reuse:1
@ 1725 train 4.4960 , allloss: 4.4960, dt: 708.35ms, fracRes: 0.1406, norm(attn): 17.2500, norm(output): 0.5000, norm(x): 0.5899, norm(y): 1.0043, norm:0.4216, tok/sec: 185038.80, flops:194.25, batch-reuse:1
@ 1726 train 4.4807 , allloss: 4.4807, dt: 703.97ms, fracRes: 0.1411, norm(attn): 17.3750, norm(output): 0.5078, norm(x): 0.5977, norm(y): 1.0043, norm:0.3920, tok/sec: 186191.03, flops:195.46, batch-reuse:1
@ 1727 train 4.4114 , allloss: 4.4114, dt: 712.71ms, fracRes: 0.1415, norm(attn): 17.6250, norm(output): 0.5156, norm(x): 0.6082, norm(y): 1.0042, norm:0.3953, tok/sec: 183905.48, flops:193.06, batch-reuse:1
@ 1728 train 4.6031 , allloss: 4.6031, dt: 716.70ms, fracRes: 0.1413, norm(attn): 17.3750, norm(output): 0.5156, norm(x): 0.6060, norm(y): 1.0040, norm:0.4604, tok/sec: 182883.61, flops:191.99, batch-reuse:1
@ 1729 train 4.7221 , allloss: 4.7221, dt: 708.74ms, fracRes: 0.1413, norm(attn): 17.3750, norm(output): 0.5156, norm(x): 0.6049, norm(y): 1.0041, norm:0.5032, tok/sec: 184935.40, flops:194.15, batch-reuse:1
@ 1730 train 4.5052 , allloss: 4.5052, dt: 719.70ms, fracRes: 0.1414, norm(attn): 17.6250, norm(output): 0.5078, norm(x): 0.5977, norm(y): 1.0042, norm:0.3787, tok/sec: 182120.30, flops:191.19, batch-reuse:1
@ 1731 train 4.4590 , allloss: 4.4590, dt: 699.36ms, fracRes: 0.1415, norm(attn): 17.2500, norm(output): 0.5117, norm(x): 0.6026, norm(y): 1.0042, norm:0.4153, tok/sec: 187417.54, flops:196.75, batch-reuse:1
@ 1732 train 4.4366 , allloss: 4.4366, dt: 703.69ms, fracRes: 0.1419, norm(attn): 17.2500, norm(output): 0.5078, norm(x): 0.5998, norm(y): 1.0041, norm:0.4652, tok/sec: 186263.63, flops:195.54, batch-reuse:1
@ 1733 train 4.4799 , allloss: 4.4799, dt: 718.01ms, fracRes: 0.1413, norm(attn): 17.2500, norm(output): 0.4961, norm(x): 0.5869, norm(y): 1.0041, norm:0.3575, tok/sec: 182548.34, flops:191.64, batch-reuse:1
@ 1734 train 4.8919 , allloss: 4.8919, dt: 716.27ms, fracRes: 0.1411, norm(attn): 17.1250, norm(output): 0.4980, norm(x): 0.5873, norm(y): 1.0042, norm:0.5631, tok/sec: 182992.45, flops:192.11, batch-reuse:1
@ 1735 train 4.5118 , allloss: 4.5118, dt: 714.07ms, fracRes: 0.1414, norm(attn): 17.2500, norm(output): 0.5039, norm(x): 0.5939, norm(y): 1.0040, norm:0.7849, tok/sec: 183556.70, flops:192.70, batch-reuse:1
@ 1736 train 4.4599 , allloss: 4.4599, dt: 705.82ms, fracRes: 0.1414, norm(attn): 17.7500, norm(output): 0.5039, norm(x): 0.5972, norm(y): 1.0042, norm:0.4860, tok/sec: 185701.90, flops:194.95, batch-reuse:1
@ 1737 train 4.4027 , allloss: 4.4027, dt: 718.71ms, fracRes: 0.1419, norm(attn): 17.8750, norm(output): 0.5156, norm(x): 0.6036, norm(y): 1.0042, norm:0.6091, tok/sec: 182370.18, flops:191.45, batch-reuse:1
@ 1738 train 4.4439 , allloss: 4.4439, dt: 712.43ms, fracRes: 0.1414, norm(attn): 17.8750, norm(output): 0.5195, norm(x): 0.6086, norm(y): 1.0040, norm:0.6386, tok/sec: 183977.55, flops:193.14, batch-reuse:1
@ 1739 train 4.4326 , allloss: 4.4326, dt: 722.03ms, fracRes: 0.1412, norm(attn): 17.1250, norm(output): 0.5000, norm(x): 0.5889, norm(y): 1.0040, norm:0.4251, tok/sec: 181532.88, flops:190.57, batch-reuse:1
@ 1740 train 4.4179 , allloss: 4.4179, dt: 724.25ms, fracRes: 0.1410, norm(attn): 16.7500, norm(output): 0.4805, norm(x): 0.5742, norm(y): 1.0039, norm:0.5415, tok/sec: 180976.76, flops:189.99, batch-reuse:1
@ 1741 train 4.5316 , allloss: 4.5316, dt: 724.73ms, fracRes: 0.1482, norm(attn): 15.0625, norm(output): 0.5117, norm(x): 0.6054, norm(y): 1.0026, norm:0.4369, tok/sec: 180856.43, flops:189.86, batch-reuse:1
@ 1742 train 4.4799 , allloss: 4.4799, dt: 700.58ms, fracRes: 0.1408, norm(attn): 16.8750, norm(output): 0.5000, norm(x): 0.5928, norm(y): 1.0038, norm:0.5704, tok/sec: 187089.45, flops:196.41, batch-reuse:1
@ 1743 train 4.5238 , allloss: 4.5238, dt: 709.67ms, fracRes: 0.1411, norm(attn): 17.1250, norm(output): 0.5039, norm(x): 0.5951, norm(y): 1.0040, norm:0.4000, tok/sec: 184694.71, flops:193.89, batch-reuse:1
@ 1744 train 4.4299 , allloss: 4.4299, dt: 722.25ms, fracRes: 0.1409, norm(attn): 17.7500, norm(output): 0.4980, norm(x): 0.5862, norm(y): 1.0041, norm:0.5012, tok/sec: 181476.61, flops:190.51, batch-reuse:1
@ 1745 train 4.4091 , allloss: 4.4091, dt: 709.69ms, fracRes: 0.1413, norm(attn): 18.0000, norm(output): 0.5117, norm(x): 0.5979, norm(y): 1.0042, norm:0.4492, tok/sec: 184689.50, flops:193.89, batch-reuse:1
@ 1746 train 4.5130 , allloss: 4.5130, dt: 700.31ms, fracRes: 0.1412, norm(attn): 18.0000, norm(output): 0.5156, norm(x): 0.6064, norm(y): 1.0043, norm:0.4362, tok/sec: 187162.51, flops:196.48, batch-reuse:1
@ 1747 train 4.3601 , allloss: 4.3601, dt: 702.60ms, fracRes: 0.1413, norm(attn): 18.1250, norm(output): 0.5000, norm(x): 0.5890, norm(y): 1.0044, norm:0.4092, tok/sec: 186553.69, flops:195.84, batch-reuse:1
@ 1748 train 4.4212 , allloss: 4.4212, dt: 708.88ms, fracRes: 0.1411, norm(attn): 18.1250, norm(output): 0.5078, norm(x): 0.5976, norm(y): 1.0043, norm:0.3960, tok/sec: 184899.83, flops:194.11, batch-reuse:1
@ 1749 train 4.5299 , allloss: 4.5299, dt: 715.19ms, fracRes: 0.1412, norm(attn): 18.1250, norm(output): 0.5039, norm(x): 0.5975, norm(y): 1.0043, norm:0.4062, tok/sec: 183268.98, flops:192.40, batch-reuse:1
@ 1750 train 4.5091 , allloss: 4.5091, dt: 714.45ms, fracRes: 0.1410, norm(attn): 18.2500, norm(output): 0.5078, norm(x): 0.5949, norm(y): 1.0044, norm:0.3935, tok/sec: 183458.88, flops:192.60, batch-reuse:1
@ 1751 train 4.6091 , allloss: 4.6091, dt: 706.93ms, fracRes: 0.1410, norm(attn): 18.2500, norm(output): 0.5156, norm(x): 0.6016, norm(y): 1.0042, norm:0.5435, tok/sec: 185409.92, flops:194.64, batch-reuse:1
@ 1752 train 4.6571 , allloss: 4.6571, dt: 697.34ms, fracRes: 0.1413, norm(attn): 18.2500, norm(output): 0.5195, norm(x): 0.6096, norm(y): 1.0043, norm:0.5116, tok/sec: 187961.31, flops:197.32, batch-reuse:1
@ 1753 train 4.4939 , allloss: 4.4939, dt: 715.35ms, fracRes: 0.1411, norm(attn): 18.5000, norm(output): 0.5039, norm(x): 0.5931, norm(y): 1.0045, norm:0.5071, tok/sec: 183226.53, flops:192.35, batch-reuse:1
@ 1754 train 4.4534 , allloss: 4.4534, dt: 706.09ms, fracRes: 0.1447, norm(attn): 18.1250, norm(output): 0.5000, norm(x): 0.5897, norm(y): 1.0042, norm:0.4157, tok/sec: 185630.42, flops:194.88, batch-reuse:1
@ 1755 train 4.4460 , allloss: 4.4460, dt: 713.73ms, fracRes: 0.1406, norm(attn): 18.6250, norm(output): 0.5000, norm(x): 0.5869, norm(y): 1.0045, norm:0.3638, tok/sec: 183644.63, flops:192.79, batch-reuse:1
@ 1756 train 4.4342 , allloss: 4.4342, dt: 692.99ms, fracRes: 0.1410, norm(attn): 18.7500, norm(output): 0.5156, norm(x): 0.6007, norm(y): 1.0045, norm:0.3978, tok/sec: 189139.54, flops:198.56, batch-reuse:1
@ 1757 train 4.5060 , allloss: 4.5060, dt: 697.34ms, fracRes: 0.1412, norm(attn): 18.8750, norm(output): 0.5117, norm(x): 0.6013, norm(y): 1.0045, norm:0.3902, tok/sec: 187960.79, flops:197.32, batch-reuse:1
@ 1758 train 4.5511 , allloss: 4.5511, dt: 702.46ms, fracRes: 0.1416, norm(attn): 18.7500, norm(output): 0.5234, norm(x): 0.6108, norm(y): 1.0044, norm:0.5576, tok/sec: 186591.11, flops:195.88, batch-reuse:1
@ 1759 train 4.5245 , allloss: 4.5245, dt: 695.32ms, fracRes: 0.1414, norm(attn): 18.8750, norm(output): 0.5391, norm(x): 0.6188, norm(y): 1.0044, norm:0.4846, tok/sec: 188505.33, flops:197.89, batch-reuse:1
@ 1760 train 4.3643 , allloss: 4.3643, dt: 704.72ms, fracRes: 0.1412, norm(attn): 19.0000, norm(output): 0.5117, norm(x): 0.5988, norm(y): 1.0045, norm:0.4017, tok/sec: 185991.97, flops:195.25, batch-reuse:1
@ 1761 train 4.3267 , allloss: 4.3267, dt: 695.83ms, fracRes: 0.1408, norm(attn): 19.0000, norm(output): 0.5000, norm(x): 0.5877, norm(y): 1.0045, norm:0.3539, tok/sec: 188366.98, flops:197.75, batch-reuse:1
@ 1762 train 4.2070 , allloss: 4.2070, dt: 704.26ms, fracRes: 0.1407, norm(attn): 19.0000, norm(output): 0.5156, norm(x): 0.5981, norm(y): 1.0045, norm:0.4380, tok/sec: 186112.36, flops:195.38, batch-reuse:1
@ 1763 train 4.4059 , allloss: 4.4059, dt: 706.35ms, fracRes: 0.1402, norm(attn): 19.2500, norm(output): 0.5195, norm(x): 0.6073, norm(y): 1.0046, norm:0.4315, tok/sec: 185561.37, flops:194.80, batch-reuse:1
@ 1764 train 4.4184 , allloss: 4.4184, dt: 704.71ms, fracRes: 0.1399, norm(attn): 19.2500, norm(output): 0.5117, norm(x): 0.5975, norm(y): 1.0046, norm:0.3839, tok/sec: 185995.24, flops:195.26, batch-reuse:1
@ 1765 train 4.3996 , allloss: 4.3996, dt: 705.20ms, fracRes: 0.1399, norm(attn): 19.2500, norm(output): 0.5039, norm(x): 0.5884, norm(y): 1.0046, norm:0.3956, tok/sec: 185866.02, flops:195.12, batch-reuse:1
@ 1766 train 4.3128 , allloss: 4.3128, dt: 705.73ms, fracRes: 0.1402, norm(attn): 19.2500, norm(output): 0.4922, norm(x): 0.5772, norm(y): 1.0047, norm:0.3971, tok/sec: 185725.12, flops:194.97, batch-reuse:1
@ 1767 train 4.4181 , allloss: 4.4181, dt: 707.02ms, fracRes: 0.1405, norm(attn): 19.2500, norm(output): 0.4980, norm(x): 0.5857, norm(y): 1.0046, norm:0.3979, tok/sec: 185387.23, flops:194.62, batch-reuse:1
@ 1768 train 4.4619 , allloss: 4.4619, dt: 701.79ms, fracRes: 0.1408, norm(attn): 19.1250, norm(output): 0.5117, norm(x): 0.6014, norm(y): 1.0045, norm:0.3779, tok/sec: 186767.91, flops:196.07, batch-reuse:1
@ 1769 train 4.3453 , allloss: 4.3453, dt: 710.91ms, fracRes: 0.1401, norm(attn): 19.1250, norm(output): 0.5000, norm(x): 0.5874, norm(y): 1.0046, norm:0.3624, tok/sec: 184372.18, flops:193.55, batch-reuse:1
@ 1770 train 4.3550 , allloss: 4.3550, dt: 716.88ms, fracRes: 0.1403, norm(attn): 19.2500, norm(output): 0.4961, norm(x): 0.5807, norm(y): 1.0046, norm:0.4025, tok/sec: 182837.26, flops:191.94, batch-reuse:1
@ 1771 train 4.3475 , allloss: 4.3475, dt: 713.20ms, fracRes: 0.1401, norm(attn): 19.2500, norm(output): 0.4961, norm(x): 0.5812, norm(y): 1.0045, norm:0.3471, tok/sec: 183779.26, flops:192.93, batch-reuse:1
@ 1772 train 4.3502 , allloss: 4.3502, dt: 716.18ms, fracRes: 0.1405, norm(attn): 19.2500, norm(output): 0.5039, norm(x): 0.5856, norm(y): 1.0045, norm:0.3357, tok/sec: 183015.18, flops:192.13, batch-reuse:1
@ 1773 train 4.2749 , allloss: 4.2749, dt: 714.76ms, fracRes: 0.1401, norm(attn): 19.2500, norm(output): 0.5000, norm(x): 0.5853, norm(y): 1.0045, norm:0.4241, tok/sec: 183377.98, flops:192.51, batch-reuse:1
@ 1774 train 4.4687 , allloss: 4.4687, dt: 704.14ms, fracRes: 0.1397, norm(attn): 19.2500, norm(output): 0.4922, norm(x): 0.5759, norm(y): 1.0046, norm:0.3950, tok/sec: 186144.94, flops:195.42, batch-reuse:1
@ 1775 train 4.3555 , allloss: 4.3555, dt: 699.18ms, fracRes: 0.1398, norm(attn): 19.2500, norm(output): 0.4922, norm(x): 0.5788, norm(y): 1.0045, norm:0.3380, tok/sec: 187464.13, flops:196.80, batch-reuse:1
@ 1776 train 4.3397 , allloss: 4.3397, dt: 708.89ms, fracRes: 0.1400, norm(attn): 19.2500, norm(output): 0.4980, norm(x): 0.5811, norm(y): 1.0044, norm:0.3647, tok/sec: 184898.52, flops:194.11, batch-reuse:1
@ 1777 train 4.2769 , allloss: 4.2769, dt: 703.30ms, fracRes: 0.1403, norm(attn): 19.2500, norm(output): 0.5039, norm(x): 0.5863, norm(y): 1.0045, norm:0.4698, tok/sec: 186366.12, flops:195.65, batch-reuse:1
@ 1778 train 4.4904 , allloss: 4.4904, dt: 699.34ms, fracRes: 0.1406, norm(attn): 19.1250, norm(output): 0.5195, norm(x): 0.6089, norm(y): 1.0044, norm:0.4726, tok/sec: 187423.68, flops:196.76, batch-reuse:1
@ 1779 train 4.3302 , allloss: 4.3302, dt: 709.40ms, fracRes: 0.1404, norm(attn): 19.2500, norm(output): 0.4980, norm(x): 0.5840, norm(y): 1.0044, norm:0.4400, tok/sec: 184764.17, flops:193.97, batch-reuse:1
@ 1780 train 4.3873 , allloss: 4.3873, dt: 706.07ms, fracRes: 0.1410, norm(attn): 19.2500, norm(output): 0.4961, norm(x): 0.5859, norm(y): 1.0044, norm:0.6189, tok/sec: 185636.50, flops:194.88, batch-reuse:1
@ 1781 train 4.3925 , allloss: 4.3925, dt: 708.09ms, fracRes: 0.1406, norm(attn): 19.1250, norm(output): 0.4844, norm(x): 0.5742, norm(y): 1.0043, norm:0.3709, tok/sec: 185107.27, flops:194.33, batch-reuse:1
@ 1782 train 4.4291 , allloss: 4.4291, dt: 713.03ms, fracRes: 0.1405, norm(attn): 18.8750, norm(output): 0.4941, norm(x): 0.5811, norm(y): 1.0042, norm:0.4982, tok/sec: 183825.23, flops:192.98, batch-reuse:1
@ 1783 train 4.4144 , allloss: 4.4144, dt: 701.42ms, fracRes: 0.1399, norm(attn): 19.0000, norm(output): 0.4766, norm(x): 0.5643, norm(y): 1.0043, norm:0.5612, tok/sec: 186866.88, flops:196.17, batch-reuse:1
@ 1784 train 4.3084 , allloss: 4.3084, dt: 705.35ms, fracRes: 0.1406, norm(attn): 19.0000, norm(output): 0.4805, norm(x): 0.5678, norm(y): 1.0043, norm:0.3630, tok/sec: 185825.75, flops:195.08, batch-reuse:1
@ 1785 train 4.3438 , allloss: 4.3438, dt: 704.89ms, fracRes: 0.1409, norm(attn): 19.0000, norm(output): 0.4844, norm(x): 0.5727, norm(y): 1.0042, norm:0.5406, tok/sec: 185947.81, flops:195.21, batch-reuse:1
@ 1786 train 4.4059 , allloss: 4.4059, dt: 696.19ms, fracRes: 0.1411, norm(attn): 19.0000, norm(output): 0.4902, norm(x): 0.5785, norm(y): 1.0042, norm:0.3778, tok/sec: 188270.67, flops:197.65, batch-reuse:1
@ 1787 train 4.3690 , allloss: 4.3690, dt: 703.54ms, fracRes: 0.1409, norm(attn): 18.7500, norm(output): 0.4785, norm(x): 0.5708, norm(y): 1.0042, norm:0.4643, tok/sec: 186303.72, flops:195.58, batch-reuse:1
@ 1788 train 4.4209 , allloss: 4.4209, dt: 699.51ms, fracRes: 0.1407, norm(attn): 18.7500, norm(output): 0.4785, norm(x): 0.5693, norm(y): 1.0041, norm:0.5130, tok/sec: 187376.72, flops:196.71, batch-reuse:1
@ 1789 train 4.4260 , allloss: 4.4260, dt: 692.17ms, fracRes: 0.1412, norm(attn): 18.7500, norm(output): 0.4941, norm(x): 0.5830, norm(y): 1.0040, norm:0.4348, tok/sec: 189364.11, flops:198.79, batch-reuse:1
@ 1790 train 4.4513 , allloss: 4.4513, dt: 698.87ms, fracRes: 0.1422, norm(attn): 18.7500, norm(output): 0.5000, norm(x): 0.5945, norm(y): 1.0040, norm:0.8165, tok/sec: 187547.91, flops:196.89, batch-reuse:1
@ 1791 train 4.3865 , allloss: 4.3865, dt: 704.50ms, fracRes: 0.1412, norm(attn): 18.7500, norm(output): 0.4824, norm(x): 0.5726, norm(y): 1.0041, norm:0.4568, tok/sec: 186048.37, flops:195.31, batch-reuse:1
@ 1792 train 4.4664 , allloss: 4.4664, dt: 697.86ms, fracRes: 0.1408, norm(attn): 18.7500, norm(output): 0.4727, norm(x): 0.5633, norm(y): 1.0041, norm:0.5109, tok/sec: 187821.19, flops:197.18, batch-reuse:1
@ 1793 train 4.4753 , allloss: 4.4753, dt: 704.25ms, fracRes: 0.1410, norm(attn): 18.7500, norm(output): 0.4707, norm(x): 0.5598, norm(y): 1.0041, norm:0.4450, tok/sec: 186114.82, flops:195.38, batch-reuse:1
@ 1794 train 4.3726 , allloss: 4.3726, dt: 704.36ms, fracRes: 0.1418, norm(attn): 18.6250, norm(output): 0.4824, norm(x): 0.5750, norm(y): 1.0040, norm:0.4657, tok/sec: 186087.85, flops:195.36, batch-reuse:1
@ 1795 train 4.4312 , allloss: 4.4312, dt: 708.41ms, fracRes: 0.1415, norm(attn): 18.7500, norm(output): 0.4805, norm(x): 0.5691, norm(y): 1.0040, norm:0.4583, tok/sec: 185021.79, flops:194.24, batch-reuse:1
@ 1796 train 4.3202 , allloss: 4.3202, dt: 709.77ms, fracRes: 0.1416, norm(attn): 18.7500, norm(output): 0.4766, norm(x): 0.5674, norm(y): 1.0040, norm:0.4269, tok/sec: 184667.04, flops:193.86, batch-reuse:1
@ 1797 train 4.3550 , allloss: 4.3550, dt: 710.90ms, fracRes: 0.1415, norm(attn): 18.7500, norm(output): 0.4707, norm(x): 0.5630, norm(y): 1.0040, norm:0.4459, tok/sec: 184376.02, flops:193.56, batch-reuse:1
@ 1798 train 4.3568 , allloss: 4.3568, dt: 703.60ms, fracRes: 0.1410, norm(attn): 18.7500, norm(output): 0.4727, norm(x): 0.5608, norm(y): 1.0039, norm:0.3685, tok/sec: 186287.43, flops:195.56, batch-reuse:1
@ 1799 train 4.4012 , allloss: 4.4012, dt: 699.49ms, fracRes: 0.1410, norm(attn): 18.7500, norm(output): 0.4766, norm(x): 0.5676, norm(y): 1.0039, norm:0.3827, tok/sec: 187382.03, flops:196.71, batch-reuse:1
@ 1800 train 4.3460 , allloss: 4.3460, dt: 707.96ms, fracRes: 0.1408, norm(attn): 18.6250, norm(output): 0.4766, norm(x): 0.5623, norm(y): 1.0040, norm:0.3980, tok/sec: 185139.31, flops:194.36, batch-reuse:1
@ 1801 train 4.2782 , allloss: 4.2782, dt: 711.75ms, fracRes: 0.1417, norm(attn): 18.6250, norm(output): 0.4785, norm(x): 0.5653, norm(y): 1.0040, norm:0.3966, tok/sec: 184153.86, flops:193.33, batch-reuse:1
@ 1802 train 4.4918 , allloss: 4.4918, dt: 704.42ms, fracRes: 0.1412, norm(attn): 18.2500, norm(output): 0.4668, norm(x): 0.5589, norm(y): 1.0040, norm:0.4299, tok/sec: 186070.79, flops:195.34, batch-reuse:1
@ 1803 train 4.3870 , allloss: 4.3870, dt: 699.34ms, fracRes: 0.1411, norm(attn): 18.3750, norm(output): 0.4707, norm(x): 0.5631, norm(y): 1.0039, norm:0.4074, tok/sec: 187421.76, flops:196.76, batch-reuse:1
@ 1804 train 4.4043 , allloss: 4.4043, dt: 707.15ms, fracRes: 0.1405, norm(attn): 18.2500, norm(output): 0.4785, norm(x): 0.5733, norm(y): 1.0036, norm:0.5061, tok/sec: 185352.73, flops:194.58, batch-reuse:1
@ 1805 train 4.3744 , allloss: 4.3744, dt: 703.43ms, fracRes: 0.1411, norm(attn): 18.5000, norm(output): 0.4727, norm(x): 0.5656, norm(y): 1.0037, norm:0.4962, tok/sec: 186333.21, flops:195.61, batch-reuse:1
@ 1806 train 4.4183 , allloss: 4.4183, dt: 708.09ms, fracRes: 0.1408, norm(attn): 18.3750, norm(output): 0.4785, norm(x): 0.5724, norm(y): 1.0036, norm:0.4307, tok/sec: 185105.34, flops:194.32, batch-reuse:1
@ 1807 train 4.4359 , allloss: 4.4359, dt: 705.76ms, fracRes: 0.1412, norm(attn): 18.5000, norm(output): 0.4688, norm(x): 0.5620, norm(y): 1.0036, norm:1.6125, tok/sec: 185717.77, flops:194.97, batch-reuse:1
@ 1808 train 4.6812 , allloss: 4.6812, dt: 718.14ms, fracRes: 0.1204, norm(attn): 18.2500, norm(output): 0.8711, norm(x): 0.9472, norm(y): 1.0018, norm:146.4508, tok/sec: 182515.25, flops:191.60, batch-reuse:1
@ 1809 train 4.4094 , allloss: 4.4094, dt: 708.84ms, fracRes: 0.1356, norm(attn): 18.2500, norm(output): 0.5117, norm(x): 0.5986, norm(y): 1.0029, norm:5.7398, tok/sec: 184909.34, flops:194.12, batch-reuse:1
@ 1810 train 4.3591 , allloss: 4.3591, dt: 715.14ms, fracRes: 0.1248, norm(attn): 18.8750, norm(output): 0.5664, norm(x): 0.6523, norm(y): 1.0034, norm:38.2193, tok/sec: 183281.39, flops:192.41, batch-reuse:1
@ 1811 train 4.3640 , allloss: 4.3640, dt: 703.35ms, fracRes: 0.1385, norm(attn): 18.7500, norm(output): 0.4746, norm(x): 0.5672, norm(y): 1.0037, norm:2.1676, tok/sec: 186354.68, flops:195.64, batch-reuse:1
@ 1812 train 4.4094 , allloss: 4.4094, dt: 706.36ms, fracRes: 0.1425, norm(attn): 18.6250, norm(output): 0.4824, norm(x): 0.5785, norm(y): 1.0037, norm:0.5471, tok/sec: 185559.56, flops:194.80, batch-reuse:1
@ 1813 train 4.2982 , allloss: 4.2982, dt: 700.07ms, fracRes: 0.1421, norm(attn): 18.1250, norm(output): 0.5078, norm(x): 0.6006, norm(y): 1.0037, norm:0.4627, tok/sec: 187227.14, flops:196.55, batch-reuse:1
@ 1814 train 4.4370 , allloss: 4.4370, dt: 710.60ms, fracRes: 0.1435, norm(attn): 18.0000, norm(output): 0.5156, norm(x): 0.6111, norm(y): 1.0037, norm:0.6171, tok/sec: 184453.22, flops:193.64, batch-reuse:1
@ 1815 train 4.3421 , allloss: 4.3421, dt: 705.09ms, fracRes: 0.1495, norm(attn): 17.7500, norm(output): 0.5273, norm(x): 0.6236, norm(y): 1.0037, norm:0.5181, tok/sec: 185894.74, flops:195.15, batch-reuse:1
@ 1816 train 4.3258 , allloss: 4.3258, dt: 706.99ms, fracRes: 0.1496, norm(attn): 17.3750, norm(output): 0.5195, norm(x): 0.6182, norm(y): 1.0037, norm:0.5003, tok/sec: 185393.67, flops:194.63, batch-reuse:1
@ 1817 train 4.3160 , allloss: 4.3160, dt: 704.97ms, fracRes: 0.1498, norm(attn): 17.2500, norm(output): 0.5352, norm(x): 0.6283, norm(y): 1.0037, norm:0.4749, tok/sec: 185926.93, flops:195.19, batch-reuse:1
@ 1818 train 4.3043 , allloss: 4.3043, dt: 719.58ms, fracRes: 0.1488, norm(attn): 17.5000, norm(output): 0.5391, norm(x): 0.6380, norm(y): 1.0036, norm:0.5302, tok/sec: 182150.05, flops:191.22, batch-reuse:1
@ 1819 train 4.4508 , allloss: 4.4508, dt: 709.62ms, fracRes: 0.1482, norm(attn): 17.6250, norm(output): 0.5430, norm(x): 0.6331, norm(y): 1.0036, norm:0.4653, tok/sec: 184708.43, flops:193.91, batch-reuse:1
@ 1820 train 4.3517 , allloss: 4.3517, dt: 694.37ms, fracRes: 0.1449, norm(attn): 17.6250, norm(output): 0.5273, norm(x): 0.6270, norm(y): 1.0037, norm:0.5641, tok/sec: 188763.06, flops:198.16, batch-reuse:1
@ 1821 train 4.2423 , allloss: 4.2423, dt: 715.35ms, fracRes: 0.1481, norm(attn): 17.7500, norm(output): 0.5352, norm(x): 0.6297, norm(y): 1.0037, norm:0.4449, tok/sec: 183226.59, flops:192.35, batch-reuse:1
@ 1822 train 4.1992 , allloss: 4.1992, dt: 700.92ms, fracRes: 0.1486, norm(attn): 17.7500, norm(output): 0.5312, norm(x): 0.6357, norm(y): 1.0037, norm:0.5091, tok/sec: 186999.85, flops:196.31, batch-reuse:1
@ 1823 train 4.2461 , allloss: 4.2461, dt: 712.61ms, fracRes: 0.1485, norm(attn): 17.7500, norm(output): 0.5352, norm(x): 0.6377, norm(y): 1.0037, norm:0.3914, tok/sec: 183931.20, flops:193.09, batch-reuse:1
@ 1824 train 4.2816 , allloss: 4.2816, dt: 711.24ms, fracRes: 0.1487, norm(attn): 17.7500, norm(output): 0.5391, norm(x): 0.6400, norm(y): 1.0037, norm:0.4109, tok/sec: 184287.14, flops:193.46, batch-reuse:1
@ 1825 train 4.3357 , allloss: 4.3357, dt: 712.84ms, fracRes: 0.1492, norm(attn): 17.6250, norm(output): 0.5430, norm(x): 0.6435, norm(y): 1.0037, norm:0.3762, tok/sec: 183873.49, flops:193.03, batch-reuse:1
@ 1826 train 4.3120 , allloss: 4.3120, dt: 713.63ms, fracRes: 0.1496, norm(attn): 17.7500, norm(output): 0.5430, norm(x): 0.6439, norm(y): 1.0037, norm:0.4172, tok/sec: 183669.11, flops:192.82, batch-reuse:1
@ 1827 train 4.3422 , allloss: 4.3422, dt: 721.25ms, fracRes: 0.1505, norm(attn): 17.8750, norm(output): 0.5508, norm(x): 0.6517, norm(y): 1.0038, norm:0.4418, tok/sec: 181728.63, flops:190.78, batch-reuse:1
@ 1828 train 4.3113 , allloss: 4.3113, dt: 717.10ms, fracRes: 0.1495, norm(attn): 17.8750, norm(output): 0.5430, norm(x): 0.6421, norm(y): 1.0038, norm:0.4422, tok/sec: 182780.79, flops:191.88, batch-reuse:1
@ 1829 train 4.3485 , allloss: 4.3485, dt: 715.43ms, fracRes: 0.1496, norm(attn): 17.8750, norm(output): 0.5391, norm(x): 0.6447, norm(y): 1.0038, norm:0.4619, tok/sec: 183206.44, flops:192.33, batch-reuse:1
@ 1830 train 4.2544 , allloss: 4.2544, dt: 697.13ms, fracRes: 0.1485, norm(attn): 17.8750, norm(output): 0.5312, norm(x): 0.6327, norm(y): 1.0039, norm:0.4223, tok/sec: 188015.88, flops:197.38, batch-reuse:1
@ 1831 train 4.2803 , allloss: 4.2803, dt: 702.39ms, fracRes: 0.1493, norm(attn): 17.7500, norm(output): 0.5430, norm(x): 0.6410, norm(y): 1.0038, norm:0.5453, tok/sec: 186608.02, flops:195.90, batch-reuse:1
@ 1832 train 4.2934 , allloss: 4.2934, dt: 694.82ms, fracRes: 0.1492, norm(attn): 17.8750, norm(output): 0.5391, norm(x): 0.6405, norm(y): 1.0038, norm:0.4461, tok/sec: 188641.16, flops:198.04, batch-reuse:1
@ 1833 train 4.4433 , allloss: 4.4433, dt: 708.83ms, fracRes: 0.1488, norm(attn): 17.8750, norm(output): 0.5312, norm(x): 0.6303, norm(y): 1.0038, norm:0.4981, tok/sec: 184912.82, flops:194.12, batch-reuse:1
@ 1834 train 4.2951 , allloss: 4.2951, dt: 711.75ms, fracRes: 0.1500, norm(attn): 17.7500, norm(output): 0.5469, norm(x): 0.6460, norm(y): 1.0038, norm:0.4327, tok/sec: 184153.62, flops:193.32, batch-reuse:1
@ 1835 train 4.2108 , allloss: 4.2108, dt: 710.33ms, fracRes: 0.1495, norm(attn): 17.5000, norm(output): 0.5312, norm(x): 0.6314, norm(y): 1.0038, norm:0.4083, tok/sec: 184523.30, flops:193.71, batch-reuse:1
@ 1836 train 4.3047 , allloss: 4.3047, dt: 720.95ms, fracRes: 0.1499, norm(attn): 17.5000, norm(output): 0.5352, norm(x): 0.6307, norm(y): 1.0038, norm:0.4126, tok/sec: 181804.35, flops:190.86, batch-reuse:1
@ 1837 train 4.3845 , allloss: 4.3845, dt: 718.26ms, fracRes: 0.1495, norm(attn): 17.5000, norm(output): 0.5195, norm(x): 0.6263, norm(y): 1.0038, norm:0.4393, tok/sec: 182485.68, flops:191.57, batch-reuse:1
@ 1838 train 4.3246 , allloss: 4.3246, dt: 720.25ms, fracRes: 0.1496, norm(attn): 17.3750, norm(output): 0.5352, norm(x): 0.6411, norm(y): 1.0038, norm:0.4271, tok/sec: 181980.74, flops:191.04, batch-reuse:1
@ 1839 train 4.2472 , allloss: 4.2472, dt: 710.38ms, fracRes: 0.1494, norm(attn): 17.6250, norm(output): 0.5195, norm(x): 0.6271, norm(y): 1.0038, norm:0.3879, tok/sec: 184510.30, flops:193.70, batch-reuse:1
@ 1840 train 4.2643 , allloss: 4.2643, dt: 703.01ms, fracRes: 0.1488, norm(attn): 17.6250, norm(output): 0.5195, norm(x): 0.6240, norm(y): 1.0038, norm:0.4779, tok/sec: 186442.72, flops:195.73, batch-reuse:1
@ 1841 train 4.3706 , allloss: 4.3706, dt: 709.43ms, fracRes: 0.1489, norm(attn): 17.3750, norm(output): 0.5234, norm(x): 0.6272, norm(y): 1.0037, norm:0.3854, tok/sec: 184757.90, flops:193.96, batch-reuse:1
@ 1842 train 4.2759 , allloss: 4.2759, dt: 712.09ms, fracRes: 0.1494, norm(attn): 17.3750, norm(output): 0.5273, norm(x): 0.6307, norm(y): 1.0036, norm:0.4091, tok/sec: 184067.79, flops:193.23, batch-reuse:1
@ 1843 train 4.2700 , allloss: 4.2700, dt: 710.05ms, fracRes: 0.1485, norm(attn): 17.2500, norm(output): 0.5156, norm(x): 0.6190, norm(y): 1.0037, norm:0.4055, tok/sec: 184594.31, flops:193.79, batch-reuse:1
@ 1844 train 4.2945 , allloss: 4.2945, dt: 711.22ms, fracRes: 0.1487, norm(attn): 17.5000, norm(output): 0.5234, norm(x): 0.6231, norm(y): 1.0036, norm:0.4524, tok/sec: 184292.27, flops:193.47, batch-reuse:1
@ 1845 train 4.2598 , allloss: 4.2598, dt: 709.05ms, fracRes: 0.1492, norm(attn): 17.2500, norm(output): 0.5234, norm(x): 0.6286, norm(y): 1.0036, norm:0.4751, tok/sec: 184855.62, flops:194.06, batch-reuse:1
@ 1846 train 4.2812 , allloss: 4.2812, dt: 708.98ms, fracRes: 0.1493, norm(attn): 17.2500, norm(output): 0.5273, norm(x): 0.6321, norm(y): 1.0035, norm:0.3585, tok/sec: 184874.08, flops:194.08, batch-reuse:1
@ 1847 train 4.2343 , allloss: 4.2343, dt: 707.56ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.5117, norm(x): 0.6197, norm(y): 1.0034, norm:0.4425, tok/sec: 185246.30, flops:194.47, batch-reuse:1
@ 1848 train 4.0968 , allloss: 4.0968, dt: 704.62ms, fracRes: 0.1480, norm(attn): 17.2500, norm(output): 0.5039, norm(x): 0.6109, norm(y): 1.0036, norm:0.3721, tok/sec: 186017.52, flops:195.28, batch-reuse:1
@ 1849 train 4.3167 , allloss: 4.3167, dt: 710.02ms, fracRes: 0.1488, norm(attn): 17.1250, norm(output): 0.5195, norm(x): 0.6253, norm(y): 1.0035, norm:0.4485, tok/sec: 184603.85, flops:193.80, batch-reuse:1
@ 1850 train 4.1866 , allloss: 4.1866, dt: 711.29ms, fracRes: 0.1483, norm(attn): 17.1250, norm(output): 0.5117, norm(x): 0.6180, norm(y): 1.0034, norm:0.4284, tok/sec: 184273.43, flops:193.45, batch-reuse:1
@ 1851 train 4.1528 , allloss: 4.1528, dt: 701.63ms, fracRes: 0.1488, norm(attn): 17.2500, norm(output): 0.5117, norm(x): 0.6158, norm(y): 1.0034, norm:0.4222, tok/sec: 186811.25, flops:196.11, batch-reuse:1
@ 1852 train 4.2469 , allloss: 4.2469, dt: 712.58ms, fracRes: 0.1493, norm(attn): 17.1250, norm(output): 0.5156, norm(x): 0.6240, norm(y): 1.0033, norm:0.3954, tok/sec: 183941.04, flops:193.10, batch-reuse:1
@ 1853 train 4.2484 , allloss: 4.2484, dt: 714.55ms, fracRes: 0.1495, norm(attn): 17.1250, norm(output): 0.5156, norm(x): 0.6229, norm(y): 1.0033, norm:0.4375, tok/sec: 183432.62, flops:192.57, batch-reuse:1
@ 1854 train 4.3023 , allloss: 4.3023, dt: 711.77ms, fracRes: 0.1494, norm(attn): 17.1250, norm(output): 0.5156, norm(x): 0.6205, norm(y): 1.0032, norm:0.4014, tok/sec: 184150.35, flops:193.32, batch-reuse:1
@ 1855 train 4.3752 , allloss: 4.3752, dt: 717.98ms, fracRes: 0.1493, norm(attn): 17.0000, norm(output): 0.5195, norm(x): 0.6303, norm(y): 1.0031, norm:0.4661, tok/sec: 182556.58, flops:191.65, batch-reuse:1
@ 1856 train 4.3759 , allloss: 4.3759, dt: 713.47ms, fracRes: 0.1482, norm(attn): 17.1250, norm(output): 0.5039, norm(x): 0.6111, norm(y): 1.0032, norm:0.4122, tok/sec: 183710.23, flops:192.86, batch-reuse:1
@ 1857 train 4.3070 , allloss: 4.3070, dt: 710.18ms, fracRes: 0.1495, norm(attn): 17.0000, norm(output): 0.5234, norm(x): 0.6263, norm(y): 1.0031, norm:0.4692, tok/sec: 184561.83, flops:193.75, batch-reuse:1
@ 1858 train 4.5464 , allloss: 4.5464, dt: 711.12ms, fracRes: 0.1487, norm(attn): 17.0000, norm(output): 0.5117, norm(x): 0.6173, norm(y): 1.0031, norm:0.5801, tok/sec: 184318.40, flops:193.50, batch-reuse:1
@ 1859 train 4.4378 , allloss: 4.4378, dt: 704.00ms, fracRes: 0.1496, norm(attn): 17.0000, norm(output): 0.5039, norm(x): 0.6135, norm(y): 1.0032, norm:0.5286, tok/sec: 186181.25, flops:195.45, batch-reuse:1
@ 1860 train 4.4234 , allloss: 4.4234, dt: 713.33ms, fracRes: 0.1498, norm(attn): 17.0000, norm(output): 0.5195, norm(x): 0.6263, norm(y): 1.0032, norm:0.5971, tok/sec: 183745.66, flops:192.90, batch-reuse:1
@ 1861 train 4.3577 , allloss: 4.3577, dt: 705.75ms, fracRes: 0.1501, norm(attn): 17.0000, norm(output): 0.5234, norm(x): 0.6297, norm(y): 1.0031, norm:0.4965, tok/sec: 185719.28, flops:194.97, batch-reuse:1
@ 1862 train 4.4260 , allloss: 4.4260, dt: 698.21ms, fracRes: 0.1499, norm(attn): 17.0000, norm(output): 0.5117, norm(x): 0.6198, norm(y): 1.0031, norm:0.5426, tok/sec: 187726.52, flops:197.08, batch-reuse:1
@ 1863 train 4.4508 , allloss: 4.4508, dt: 711.93ms, fracRes: 0.1498, norm(attn): 17.0000, norm(output): 0.5078, norm(x): 0.6121, norm(y): 1.0031, norm:0.4604, tok/sec: 184107.92, flops:193.28, batch-reuse:1
@ 1864 train 4.3928 , allloss: 4.3928, dt: 701.57ms, fracRes: 0.1493, norm(attn): 17.0000, norm(output): 0.5000, norm(x): 0.6055, norm(y): 1.0030, norm:0.4153, tok/sec: 186825.41, flops:196.13, batch-reuse:1
@ 1865 train 4.4183 , allloss: 4.4183, dt: 692.80ms, fracRes: 0.1495, norm(attn): 17.0000, norm(output): 0.5117, norm(x): 0.6152, norm(y): 1.0030, norm:0.4275, tok/sec: 189191.09, flops:198.61, batch-reuse:1
@ 1866 train 4.7224 , allloss: 4.7224, dt: 697.01ms, fracRes: 0.1518, norm(attn): 16.7500, norm(output): 0.5312, norm(x): 0.6347, norm(y): 1.0030, norm:0.6144, tok/sec: 188048.49, flops:197.41, batch-reuse:1
@ 1867 train 4.4502 , allloss: 4.4502, dt: 709.29ms, fracRes: 0.1491, norm(attn): 16.8750, norm(output): 0.5039, norm(x): 0.6072, norm(y): 1.0029, norm:0.5365, tok/sec: 184792.49, flops:194.00, batch-reuse:1
@ 1868 train 4.4964 , allloss: 4.4964, dt: 719.51ms, fracRes: 0.1493, norm(attn): 17.0000, norm(output): 0.5039, norm(x): 0.6134, norm(y): 1.0030, norm:0.4804, tok/sec: 182167.92, flops:191.24, batch-reuse:1
@ 1869 train 4.4107 , allloss: 4.4107, dt: 696.98ms, fracRes: 0.1498, norm(attn): 16.8750, norm(output): 0.5156, norm(x): 0.6257, norm(y): 1.0030, norm:0.4303, tok/sec: 188056.08, flops:197.42, batch-reuse:1
@ 1870 train 4.3499 , allloss: 4.3499, dt: 696.43ms, fracRes: 0.1500, norm(attn): 17.0000, norm(output): 0.5195, norm(x): 0.6251, norm(y): 1.0030, norm:0.4980, tok/sec: 188204.54, flops:197.58, batch-reuse:1
@ 1871 train 4.3838 , allloss: 4.3838, dt: 702.46ms, fracRes: 0.1493, norm(attn): 17.1250, norm(output): 0.5078, norm(x): 0.6120, norm(y): 1.0029, norm:0.4643, tok/sec: 186590.03, flops:195.88, batch-reuse:1
@ 1872 train 4.4565 , allloss: 4.4565, dt: 699.09ms, fracRes: 0.1496, norm(attn): 17.0000, norm(output): 0.5078, norm(x): 0.6163, norm(y): 1.0028, norm:0.4371, tok/sec: 187488.43, flops:196.83, batch-reuse:1
@ 1873 train 4.4800 , allloss: 4.4800, dt: 702.06ms, fracRes: 0.1493, norm(attn): 17.0000, norm(output): 0.5117, norm(x): 0.6189, norm(y): 1.0028, norm:0.4585, tok/sec: 186697.00, flops:195.99, batch-reuse:1
@ 1874 train 4.3273 , allloss: 4.3273, dt: 713.32ms, fracRes: 0.1487, norm(attn): 17.0000, norm(output): 0.4922, norm(x): 0.5995, norm(y): 1.0029, norm:0.4576, tok/sec: 183750.27, flops:192.90, batch-reuse:1
@ 1875 train 4.4291 , allloss: 4.4291, dt: 700.13ms, fracRes: 0.1485, norm(attn): 17.1250, norm(output): 0.4941, norm(x): 0.6017, norm(y): 1.0029, norm:0.4609, tok/sec: 187210.25, flops:196.53, batch-reuse:1
@ 1876 train 4.4868 , allloss: 4.4868, dt: 690.59ms, fracRes: 0.1496, norm(attn): 17.0000, norm(output): 0.4980, norm(x): 0.6062, norm(y): 1.0030, norm:0.4526, tok/sec: 189796.76, flops:199.25, batch-reuse:1
@ 1877 train 4.4288 , allloss: 4.4288, dt: 707.78ms, fracRes: 0.1528, norm(attn): 17.0000, norm(output): 0.4922, norm(x): 0.6053, norm(y): 1.0028, norm:0.4467, tok/sec: 185187.58, flops:194.41, batch-reuse:1
@ 1878 train 4.4277 , allloss: 4.4277, dt: 696.82ms, fracRes: 0.1502, norm(attn): 17.2500, norm(output): 0.4941, norm(x): 0.5997, norm(y): 1.0029, norm:0.4266, tok/sec: 188099.06, flops:197.47, batch-reuse:1
@ 1879 train 4.4592 , allloss: 4.4592, dt: 707.09ms, fracRes: 0.1502, norm(attn): 17.1250, norm(output): 0.5000, norm(x): 0.6100, norm(y): 1.0029, norm:0.4180, tok/sec: 185367.10, flops:194.60, batch-reuse:1
@ 1880 train 4.3831 , allloss: 4.3831, dt: 709.89ms, fracRes: 0.1501, norm(attn): 17.0000, norm(output): 0.5000, norm(x): 0.6047, norm(y): 1.0029, norm:0.4256, tok/sec: 184636.90, flops:193.83, batch-reuse:1
@ 1881 train 4.3528 , allloss: 4.3528, dt: 714.30ms, fracRes: 0.1494, norm(attn): 17.1250, norm(output): 0.4922, norm(x): 0.6009, norm(y): 1.0030, norm:0.3660, tok/sec: 183497.58, flops:192.64, batch-reuse:1
@ 1882 train 4.4818 , allloss: 4.4818, dt: 714.32ms, fracRes: 0.1495, norm(attn): 17.2500, norm(output): 0.4922, norm(x): 0.5977, norm(y): 1.0030, norm:0.3958, tok/sec: 183491.52, flops:192.63, batch-reuse:1
@ 1883 train 4.3606 , allloss: 4.3606, dt: 717.44ms, fracRes: 0.1494, norm(attn): 17.2500, norm(output): 0.4863, norm(x): 0.5906, norm(y): 1.0031, norm:0.4082, tok/sec: 182695.08, flops:191.79, batch-reuse:1
@ 1884 train 4.3068 , allloss: 4.3068, dt: 712.09ms, fracRes: 0.1490, norm(attn): 17.1250, norm(output): 0.4824, norm(x): 0.5951, norm(y): 1.0031, norm:0.3943, tok/sec: 184066.99, flops:193.23, batch-reuse:1
@ 1885 train 4.4177 , allloss: 4.4177, dt: 710.02ms, fracRes: 0.1490, norm(attn): 17.1250, norm(output): 0.4941, norm(x): 0.6004, norm(y): 1.0031, norm:0.4189, tok/sec: 184603.11, flops:193.80, batch-reuse:1
@ 1886 train 4.3285 , allloss: 4.3285, dt: 706.49ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.4883, norm(x): 0.5939, norm(y): 1.0030, norm:0.4048, tok/sec: 185525.74, flops:194.77, batch-reuse:1
@ 1887 train 4.3062 , allloss: 4.3062, dt: 704.06ms, fracRes: 0.1483, norm(attn): 17.1250, norm(output): 0.4785, norm(x): 0.5899, norm(y): 1.0030, norm:0.3549, tok/sec: 186165.24, flops:195.44, batch-reuse:1
@ 1888 train 4.4590 , allloss: 4.4590, dt: 710.23ms, fracRes: 0.1494, norm(attn): 17.0000, norm(output): 0.4922, norm(x): 0.6035, norm(y): 1.0029, norm:0.4073, tok/sec: 184549.88, flops:193.74, batch-reuse:1
@ 1889 train 4.3253 , allloss: 4.3253, dt: 702.99ms, fracRes: 0.1488, norm(attn): 17.0000, norm(output): 0.4902, norm(x): 0.5963, norm(y): 1.0029, norm:0.3934, tok/sec: 186448.35, flops:195.73, batch-reuse:1
@ 1890 train 4.4885 , allloss: 4.4885, dt: 708.23ms, fracRes: 0.1494, norm(attn): 17.0000, norm(output): 0.4941, norm(x): 0.6027, norm(y): 1.0029, norm:0.3847, tok/sec: 185070.32, flops:194.29, batch-reuse:1
@ 1891 train 4.4267 , allloss: 4.4267, dt: 697.05ms, fracRes: 0.1484, norm(attn): 17.0000, norm(output): 0.4863, norm(x): 0.5929, norm(y): 1.0029, norm:0.4383, tok/sec: 188038.46, flops:197.40, batch-reuse:1
@ 1892 train 4.3387 , allloss: 4.3387, dt: 701.58ms, fracRes: 0.1428, norm(attn): 17.1250, norm(output): 0.4805, norm(x): 0.5850, norm(y): 1.0031, norm:0.4270, tok/sec: 186824.27, flops:196.13, batch-reuse:1
@ 1893 train 4.4495 , allloss: 4.4495, dt: 702.16ms, fracRes: 0.1481, norm(attn): 17.0000, norm(output): 0.4824, norm(x): 0.5921, norm(y): 1.0028, norm:0.4275, tok/sec: 186670.31, flops:195.97, batch-reuse:1
@ 1894 train 4.2722 , allloss: 4.2722, dt: 705.27ms, fracRes: 0.1488, norm(attn): 17.1250, norm(output): 0.4805, norm(x): 0.5881, norm(y): 1.0028, norm:0.4042, tok/sec: 185845.91, flops:195.10, batch-reuse:1
@ 1895 train 4.4491 , allloss: 4.4491, dt: 714.72ms, fracRes: 0.1490, norm(attn): 17.1250, norm(output): 0.4766, norm(x): 0.5895, norm(y): 1.0028, norm:0.5208, tok/sec: 183388.56, flops:192.52, batch-reuse:1
@ 1896 train 4.5443 , allloss: 4.5443, dt: 712.28ms, fracRes: 0.1493, norm(attn): 17.1250, norm(output): 0.4883, norm(x): 0.5941, norm(y): 1.0028, norm:0.5194, tok/sec: 184016.53, flops:193.18, batch-reuse:1
@ 1897 train 4.4524 , allloss: 4.4524, dt: 717.30ms, fracRes: 0.1495, norm(attn): 17.1250, norm(output): 0.4883, norm(x): 0.5967, norm(y): 1.0028, norm:0.4515, tok/sec: 182729.76, flops:191.83, batch-reuse:1
@ 1898 train 4.4305 , allloss: 4.4305, dt: 720.37ms, fracRes: 0.1487, norm(attn): 17.1250, norm(output): 0.4805, norm(x): 0.5916, norm(y): 1.0028, norm:0.4009, tok/sec: 181950.87, flops:191.01, batch-reuse:1
@ 1899 train 4.3975 , allloss: 4.3975, dt: 708.28ms, fracRes: 0.1481, norm(attn): 17.1250, norm(output): 0.4766, norm(x): 0.5835, norm(y): 1.0027, norm:0.4683, tok/sec: 185057.17, flops:194.27, batch-reuse:1
@ 1900 train 4.3917 , allloss: 4.3917, dt: 701.02ms, fracRes: 0.1476, norm(attn): 17.1250, norm(output): 0.4766, norm(x): 0.5850, norm(y): 1.0026, norm:0.4422, tok/sec: 186972.95, flops:196.28, batch-reuse:1
@ 1901 train 4.4348 , allloss: 4.4348, dt: 706.22ms, fracRes: 0.1480, norm(attn): 17.2500, norm(output): 0.4824, norm(x): 0.5894, norm(y): 1.0026, norm:0.4623, tok/sec: 185597.64, flops:194.84, batch-reuse:1
@ 1902 train 4.3877 , allloss: 4.3877, dt: 696.48ms, fracRes: 0.1480, norm(attn): 17.2500, norm(output): 0.4785, norm(x): 0.5864, norm(y): 1.0026, norm:0.3727, tok/sec: 188190.75, flops:197.56, batch-reuse:1
@ 1903 train 4.4222 , allloss: 4.4222, dt: 693.88ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.4844, norm(x): 0.5935, norm(y): 1.0026, norm:0.5589, tok/sec: 188896.35, flops:198.30, batch-reuse:1
@ 1904 train 4.3866 , allloss: 4.3866, dt: 710.62ms, fracRes: 0.1492, norm(attn): 17.2500, norm(output): 0.4785, norm(x): 0.5888, norm(y): 1.0026, norm:0.4134, tok/sec: 184446.54, flops:193.63, batch-reuse:1
@ 1905 train 4.3505 , allloss: 4.3505, dt: 713.29ms, fracRes: 0.1485, norm(attn): 17.2500, norm(output): 0.4648, norm(x): 0.5732, norm(y): 1.0026, norm:0.4770, tok/sec: 183757.15, flops:192.91, batch-reuse:1
@ 1906 train 4.3724 , allloss: 4.3724, dt: 708.55ms, fracRes: 0.1485, norm(attn): 17.1250, norm(output): 0.4785, norm(x): 0.5865, norm(y): 1.0025, norm:0.5439, tok/sec: 184985.06, flops:194.20, batch-reuse:1
@ 1907 train 4.4005 , allloss: 4.4005, dt: 708.81ms, fracRes: 0.1488, norm(attn): 17.0000, norm(output): 0.4766, norm(x): 0.5859, norm(y): 1.0025, norm:0.3892, tok/sec: 184918.11, flops:194.13, batch-reuse:1
@ 1908 train 4.3907 , allloss: 4.3907, dt: 711.20ms, fracRes: 0.1490, norm(attn): 17.0000, norm(output): 0.4707, norm(x): 0.5785, norm(y): 1.0025, norm:0.5277, tok/sec: 184295.97, flops:193.47, batch-reuse:1
@ 1909 train 4.6120 , allloss: 4.6120, dt: 707.50ms, fracRes: 0.1488, norm(attn): 17.0000, norm(output): 0.4668, norm(x): 0.5743, norm(y): 1.0024, norm:0.5452, tok/sec: 185260.97, flops:194.49, batch-reuse:1
@ 1910 train 4.4533 , allloss: 4.4533, dt: 707.82ms, fracRes: 0.1490, norm(attn): 17.0000, norm(output): 0.4707, norm(x): 0.5783, norm(y): 1.0023, norm:0.4052, tok/sec: 185176.48, flops:194.40, batch-reuse:1
@ 1911 train 4.4732 , allloss: 4.4732, dt: 701.41ms, fracRes: 0.1492, norm(attn): 17.0000, norm(output): 0.4785, norm(x): 0.5866, norm(y): 1.0022, norm:0.5262, tok/sec: 186870.37, flops:196.18, batch-reuse:1
@ 1912 train 4.3925 , allloss: 4.3925, dt: 710.77ms, fracRes: 0.1495, norm(attn): 16.8750, norm(output): 0.4805, norm(x): 0.5885, norm(y): 1.0022, norm:0.4253, tok/sec: 184409.66, flops:193.59, batch-reuse:1
@ 1913 train 4.4095 , allloss: 4.4095, dt: 710.00ms, fracRes: 0.1491, norm(attn): 17.0000, norm(output): 0.4766, norm(x): 0.5817, norm(y): 1.0023, norm:0.4300, tok/sec: 184608.63, flops:193.80, batch-reuse:1
@ 1914 train 4.3521 , allloss: 4.3521, dt: 720.68ms, fracRes: 0.1488, norm(attn): 17.0000, norm(output): 0.4688, norm(x): 0.5780, norm(y): 1.0022, norm:0.4467, tok/sec: 181872.62, flops:190.93, batch-reuse:1
@ 1915 train 4.3812 , allloss: 4.3812, dt: 705.62ms, fracRes: 0.1486, norm(attn): 17.0000, norm(output): 0.4609, norm(x): 0.5709, norm(y): 1.0024, norm:0.5593, tok/sec: 185754.04, flops:195.00, batch-reuse:1
@ 1916 train 4.5103 , allloss: 4.5103, dt: 707.95ms, fracRes: 0.1501, norm(attn): 17.0000, norm(output): 0.4863, norm(x): 0.5996, norm(y): 1.0024, norm:0.4929, tok/sec: 185144.30, flops:194.36, batch-reuse:1
@ 1917 train 4.4173 , allloss: 4.4173, dt: 707.63ms, fracRes: 0.1496, norm(attn): 17.0000, norm(output): 0.4805, norm(x): 0.5887, norm(y): 1.0023, norm:0.5039, tok/sec: 185225.52, flops:194.45, batch-reuse:1
@ 1918 train 4.4934 , allloss: 4.4934, dt: 704.84ms, fracRes: 0.1482, norm(attn): 17.0000, norm(output): 0.4551, norm(x): 0.5646, norm(y): 1.0023, norm:0.4444, tok/sec: 185959.95, flops:195.22, batch-reuse:1
@ 1919 train 4.3110 , allloss: 4.3110, dt: 704.80ms, fracRes: 0.1483, norm(attn): 17.0000, norm(output): 0.4668, norm(x): 0.5783, norm(y): 1.0023, norm:0.4559, tok/sec: 185971.02, flops:195.23, batch-reuse:1
@ 1920 train 4.4132 , allloss: 4.4132, dt: 705.28ms, fracRes: 0.1479, norm(attn): 17.0000, norm(output): 0.4688, norm(x): 0.5785, norm(y): 1.0022, norm:0.4539, tok/sec: 185844.78, flops:195.10, batch-reuse:1
@ 1921 train 4.4064 , allloss: 4.4064, dt: 706.65ms, fracRes: 0.1483, norm(attn): 16.8750, norm(output): 0.4746, norm(x): 0.5842, norm(y): 1.0022, norm:0.4221, tok/sec: 185483.30, flops:194.72, batch-reuse:1
@ 1922 train 4.3262 , allloss: 4.3262, dt: 711.45ms, fracRes: 0.1479, norm(attn): 17.0000, norm(output): 0.4668, norm(x): 0.5738, norm(y): 1.0022, norm:0.4126, tok/sec: 184232.30, flops:193.41, batch-reuse:1
@ 1923 train 4.3727 , allloss: 4.3727, dt: 711.28ms, fracRes: 0.1490, norm(attn): 16.8750, norm(output): 0.4648, norm(x): 0.5724, norm(y): 1.0022, norm:0.4228, tok/sec: 184276.21, flops:193.45, batch-reuse:1
@ 1924 train 4.3972 , allloss: 4.3972, dt: 705.87ms, fracRes: 0.1484, norm(attn): 17.0000, norm(output): 0.4609, norm(x): 0.5683, norm(y): 1.0022, norm:0.4114, tok/sec: 185689.48, flops:194.94, batch-reuse:1
@ 1925 train 4.3793 , allloss: 4.3793, dt: 706.11ms, fracRes: 0.1487, norm(attn): 17.0000, norm(output): 0.4688, norm(x): 0.5780, norm(y): 1.0021, norm:0.4089, tok/sec: 185624.72, flops:194.87, batch-reuse:1
@ 1926 train 4.4337 , allloss: 4.4337, dt: 711.21ms, fracRes: 0.1483, norm(attn): 17.0000, norm(output): 0.4727, norm(x): 0.5779, norm(y): 1.0020, norm:0.4063, tok/sec: 184294.62, flops:193.47, batch-reuse:1
@ 1927 train 4.3748 , allloss: 4.3748, dt: 707.12ms, fracRes: 0.1489, norm(attn): 17.0000, norm(output): 0.4668, norm(x): 0.5791, norm(y): 1.0021, norm:0.4128, tok/sec: 185359.98, flops:194.59, batch-reuse:1
@ 1928 train 4.4092 , allloss: 4.4092, dt: 718.43ms, fracRes: 0.1475, norm(attn): 17.0000, norm(output): 0.4492, norm(x): 0.5623, norm(y): 1.0021, norm:0.3848, tok/sec: 182442.08, flops:191.53, batch-reuse:1
@ 1929 train 4.3920 , allloss: 4.3920, dt: 719.24ms, fracRes: 0.1479, norm(attn): 17.0000, norm(output): 0.4492, norm(x): 0.5608, norm(y): 1.0020, norm:0.3647, tok/sec: 182237.85, flops:191.31, batch-reuse:1
@ 1930 train 4.3145 , allloss: 4.3145, dt: 716.15ms, fracRes: 0.1485, norm(attn): 17.0000, norm(output): 0.4590, norm(x): 0.5684, norm(y): 1.0019, norm:0.3839, tok/sec: 183023.89, flops:192.14, batch-reuse:1
@ 1931 train 4.4462 , allloss: 4.4462, dt: 707.89ms, fracRes: 0.1499, norm(attn): 17.0000, norm(output): 0.4668, norm(x): 0.5814, norm(y): 1.0018, norm:0.3890, tok/sec: 185158.39, flops:194.38, batch-reuse:1
@ 1932 train 4.4982 , allloss: 4.4982, dt: 714.42ms, fracRes: 0.1494, norm(attn): 17.0000, norm(output): 0.4609, norm(x): 0.5719, norm(y): 1.0019, norm:0.4185, tok/sec: 183465.12, flops:192.60, batch-reuse:1
@ 1933 train 4.4451 , allloss: 4.4451, dt: 714.28ms, fracRes: 0.1491, norm(attn): 17.0000, norm(output): 0.4492, norm(x): 0.5651, norm(y): 1.0018, norm:0.4233, tok/sec: 183501.32, flops:192.64, batch-reuse:1
@ 1934 train 4.4090 , allloss: 4.4090, dt: 703.92ms, fracRes: 0.1498, norm(attn): 16.8750, norm(output): 0.4727, norm(x): 0.5839, norm(y): 1.0019, norm:0.4734, tok/sec: 186203.01, flops:195.48, batch-reuse:1
@ 1935 train 4.3525 , allloss: 4.3525, dt: 713.72ms, fracRes: 0.1492, norm(attn): 17.0000, norm(output): 0.4570, norm(x): 0.5707, norm(y): 1.0020, norm:0.4482, tok/sec: 183645.61, flops:192.79, batch-reuse:1
@ 1936 train 4.3761 , allloss: 4.3761, dt: 700.11ms, fracRes: 0.1494, norm(attn): 17.0000, norm(output): 0.4531, norm(x): 0.5681, norm(y): 1.0021, norm:0.3683, tok/sec: 187216.82, flops:196.54, batch-reuse:1
@ 1937 train 4.3471 , allloss: 4.3471, dt: 708.56ms, fracRes: 0.1550, norm(attn): 17.0000, norm(output): 0.4570, norm(x): 0.5672, norm(y): 1.0017, norm:0.5074, tok/sec: 184984.57, flops:194.20, batch-reuse:1
@ 1938 train 4.3776 , allloss: 4.3776, dt: 705.37ms, fracRes: 0.1500, norm(attn): 17.2500, norm(output): 0.4648, norm(x): 0.5760, norm(y): 1.0020, norm:0.5624, tok/sec: 185820.91, flops:195.08, batch-reuse:1
@ 1939 train 4.3515 , allloss: 4.3515, dt: 711.62ms, fracRes: 0.1498, norm(attn): 17.2500, norm(output): 0.4590, norm(x): 0.5730, norm(y): 1.0021, norm:0.4414, tok/sec: 184188.60, flops:193.36, batch-reuse:1
@ 1940 train 4.4668 , allloss: 4.4668, dt: 708.39ms, fracRes: 0.1508, norm(attn): 17.2500, norm(output): 0.4551, norm(x): 0.5716, norm(y): 1.0019, norm:0.5306, tok/sec: 185029.08, flops:194.24, batch-reuse:1
@ 1941 train 4.4496 , allloss: 4.4496, dt: 706.64ms, fracRes: 0.1497, norm(attn): 17.6250, norm(output): 0.4492, norm(x): 0.5640, norm(y): 1.0018, norm:0.4801, tok/sec: 185486.43, flops:194.72, batch-reuse:1
@ 1942 train 4.3634 , allloss: 4.3634, dt: 709.04ms, fracRes: 0.1496, norm(attn): 17.7500, norm(output): 0.4570, norm(x): 0.5699, norm(y): 1.0018, norm:0.3780, tok/sec: 184858.42, flops:194.06, batch-reuse:1
@ 1943 train 4.4469 , allloss: 4.4469, dt: 708.58ms, fracRes: 0.1493, norm(attn): 17.7500, norm(output): 0.4531, norm(x): 0.5643, norm(y): 1.0017, norm:0.3878, tok/sec: 184978.03, flops:194.19, batch-reuse:1
@ 1944 train 4.3932 , allloss: 4.3932, dt: 702.56ms, fracRes: 0.1492, norm(attn): 17.8750, norm(output): 0.4473, norm(x): 0.5577, norm(y): 1.0017, norm:0.3998, tok/sec: 186563.50, flops:195.85, batch-reuse:1
@ 1945 train 4.3314 , allloss: 4.3314, dt: 710.54ms, fracRes: 0.1494, norm(attn): 17.7500, norm(output): 0.4531, norm(x): 0.5645, norm(y): 1.0017, norm:0.3782, tok/sec: 184468.82, flops:193.66, batch-reuse:1
@ 1946 train 4.2915 , allloss: 4.2915, dt: 703.16ms, fracRes: 0.1495, norm(attn): 17.7500, norm(output): 0.4609, norm(x): 0.5702, norm(y): 1.0017, norm:0.3490, tok/sec: 186405.36, flops:195.69, batch-reuse:1
@ 1947 train 4.4944 , allloss: 4.4944, dt: 706.85ms, fracRes: 0.1492, norm(attn): 17.8750, norm(output): 0.4629, norm(x): 0.5700, norm(y): 1.0016, norm:0.4413, tok/sec: 185431.50, flops:194.67, batch-reuse:1
@ 1948 train 4.2621 , allloss: 4.2621, dt: 700.18ms, fracRes: 0.1477, norm(attn): 17.8750, norm(output): 0.4609, norm(x): 0.5685, norm(y): 1.0017, norm:0.3827, tok/sec: 187197.44, flops:196.52, batch-reuse:1
@ 1949 train 4.3967 , allloss: 4.3967, dt: 706.08ms, fracRes: 0.1486, norm(attn): 17.8750, norm(output): 0.4590, norm(x): 0.5689, norm(y): 1.0017, norm:0.3997, tok/sec: 185632.55, flops:194.88, batch-reuse:1
@ 1950 train 4.4393 , allloss: 4.4393, dt: 703.90ms, fracRes: 0.1491, norm(attn): 17.8750, norm(output): 0.4707, norm(x): 0.5777, norm(y): 1.0017, norm:0.3676, tok/sec: 186207.11, flops:195.48, batch-reuse:1
@ 1951 train 4.3311 , allloss: 4.3311, dt: 705.00ms, fracRes: 0.1497, norm(attn): 17.8750, norm(output): 0.4531, norm(x): 0.5622, norm(y): 1.0016, norm:0.4046, tok/sec: 185917.69, flops:195.18, batch-reuse:1
@ 1952 train 4.3368 , allloss: 4.3368, dt: 707.93ms, fracRes: 0.1487, norm(attn): 17.8750, norm(output): 0.4453, norm(x): 0.5603, norm(y): 1.0015, norm:0.3680, tok/sec: 185148.60, flops:194.37, batch-reuse:1
@ 1953 train 4.3455 , allloss: 4.3455, dt: 707.60ms, fracRes: 0.1482, norm(attn): 17.8750, norm(output): 0.4492, norm(x): 0.5602, norm(y): 1.0015, norm:0.4026, tok/sec: 185235.25, flops:194.46, batch-reuse:1
@ 1954 train 4.3331 , allloss: 4.3331, dt: 707.15ms, fracRes: 0.1482, norm(attn): 17.8750, norm(output): 0.4473, norm(x): 0.5587, norm(y): 1.0016, norm:0.4094, tok/sec: 185353.48, flops:194.58, batch-reuse:1
@ 1955 train 4.3102 , allloss: 4.3102, dt: 694.67ms, fracRes: 0.1468, norm(attn): 17.8750, norm(output): 0.4609, norm(x): 0.5670, norm(y): 1.0015, norm:0.4097, tok/sec: 188683.25, flops:198.08, batch-reuse:1
@ 1956 train 4.2323 , allloss: 4.2323, dt: 707.95ms, fracRes: 0.1494, norm(attn): 17.8750, norm(output): 0.4414, norm(x): 0.5554, norm(y): 1.0015, norm:0.3756, tok/sec: 185142.30, flops:194.36, batch-reuse:1
@ 1957 train 4.3044 , allloss: 4.3044, dt: 702.39ms, fracRes: 0.1495, norm(attn): 17.7500, norm(output): 0.4512, norm(x): 0.5628, norm(y): 1.0015, norm:0.3808, tok/sec: 186607.96, flops:195.90, batch-reuse:1
@ 1958 train 4.3245 , allloss: 4.3245, dt: 702.66ms, fracRes: 0.1494, norm(attn): 17.7500, norm(output): 0.4531, norm(x): 0.5644, norm(y): 1.0015, norm:0.3943, tok/sec: 186537.80, flops:195.83, batch-reuse:1
@ 1959 train 4.2702 , allloss: 4.2702, dt: 704.74ms, fracRes: 0.1488, norm(attn): 17.7500, norm(output): 0.4473, norm(x): 0.5619, norm(y): 1.0015, norm:0.3904, tok/sec: 185986.25, flops:195.25, batch-reuse:1
@ 1960 train 4.2131 , allloss: 4.2131, dt: 701.07ms, fracRes: 0.1484, norm(attn): 17.7500, norm(output): 0.4414, norm(x): 0.5557, norm(y): 1.0015, norm:0.3693, tok/sec: 186960.74, flops:196.27, batch-reuse:1
@ 1961 train 4.3535 , allloss: 4.3535, dt: 709.97ms, fracRes: 0.1497, norm(attn): 17.6250, norm(output): 0.4570, norm(x): 0.5708, norm(y): 1.0015, norm:0.3977, tok/sec: 184616.38, flops:193.81, batch-reuse:1
@ 1962 train 4.2911 , allloss: 4.2911, dt: 699.82ms, fracRes: 0.1480, norm(attn): 17.7500, norm(output): 0.4414, norm(x): 0.5530, norm(y): 1.0015, norm:0.3770, tok/sec: 187293.03, flops:196.62, batch-reuse:1
@ 1963 train 4.3782 , allloss: 4.3782, dt: 704.55ms, fracRes: 0.1492, norm(attn): 17.6250, norm(output): 0.4570, norm(x): 0.5706, norm(y): 1.0015, norm:0.3773, tok/sec: 186036.53, flops:195.30, batch-reuse:1
@ 1964 train 4.3056 , allloss: 4.3056, dt: 705.90ms, fracRes: 0.1499, norm(attn): 17.6250, norm(output): 0.4609, norm(x): 0.5765, norm(y): 1.0013, norm:0.4385, tok/sec: 185680.45, flops:194.93, batch-reuse:1
@ 1965 train 4.3604 , allloss: 4.3604, dt: 700.64ms, fracRes: 0.1489, norm(attn): 17.7500, norm(output): 0.4492, norm(x): 0.5605, norm(y): 1.0013, norm:0.4160, tok/sec: 187075.38, flops:196.39, batch-reuse:1
@ 1966 train 4.2461 , allloss: 4.2461, dt: 716.79ms, fracRes: 0.1494, norm(attn): 17.7500, norm(output): 0.4492, norm(x): 0.5617, norm(y): 1.0013, norm:0.3812, tok/sec: 182859.89, flops:191.97, batch-reuse:1
@ 1967 train 4.2929 , allloss: 4.2929, dt: 718.11ms, fracRes: 0.1491, norm(attn): 17.6250, norm(output): 0.4453, norm(x): 0.5594, norm(y): 1.0012, norm:0.4247, tok/sec: 182522.76, flops:191.61, batch-reuse:1
@ 1968 train 4.3135 , allloss: 4.3135, dt: 707.92ms, fracRes: 0.1494, norm(attn): 17.2500, norm(output): 0.4414, norm(x): 0.5531, norm(y): 1.0009, norm:0.5062, tok/sec: 185150.91, flops:194.37, batch-reuse:1
@ 1969 train 4.4028 , allloss: 4.4028, dt: 693.34ms, fracRes: 0.1496, norm(attn): 17.2500, norm(output): 0.4414, norm(x): 0.5540, norm(y): 1.0010, norm:0.4883, tok/sec: 189044.71, flops:198.46, batch-reuse:1
@ 1970 train 4.2835 , allloss: 4.2835, dt: 693.32ms, fracRes: 0.1495, norm(attn): 17.2500, norm(output): 0.4492, norm(x): 0.5657, norm(y): 1.0009, norm:0.4611, tok/sec: 189049.91, flops:198.46, batch-reuse:1
@ 1971 train 4.3301 , allloss: 4.3301, dt: 711.97ms, fracRes: 0.1495, norm(attn): 17.1250, norm(output): 0.4531, norm(x): 0.5694, norm(y): 1.0008, norm:0.5086, tok/sec: 184097.37, flops:193.27, batch-reuse:1
@ 1972 train 4.3028 , allloss: 4.3028, dt: 704.49ms, fracRes: 0.1496, norm(attn): 17.2500, norm(output): 0.4434, norm(x): 0.5597, norm(y): 1.0007, norm:0.3809, tok/sec: 186053.22, flops:195.32, batch-reuse:1
@ 1973 train 4.3045 , allloss: 4.3045, dt: 706.86ms, fracRes: 0.1487, norm(attn): 17.2500, norm(output): 0.4453, norm(x): 0.5551, norm(y): 1.0008, norm:0.4244, tok/sec: 185428.37, flops:194.66, batch-reuse:1
@ 1974 train 4.3384 , allloss: 4.3384, dt: 700.02ms, fracRes: 0.1493, norm(attn): 17.2500, norm(output): 0.4512, norm(x): 0.5655, norm(y): 1.0009, norm:0.3884, tok/sec: 187240.47, flops:196.57, batch-reuse:1
@ 1975 train 4.1615 , allloss: 4.1615, dt: 702.05ms, fracRes: 0.1498, norm(attn): 17.2500, norm(output): 0.4414, norm(x): 0.5538, norm(y): 1.0011, norm:0.4657, tok/sec: 186699.02, flops:196.00, batch-reuse:1
@ 1976 train 4.3448 , allloss: 4.3448, dt: 692.47ms, fracRes: 0.1506, norm(attn): 17.2500, norm(output): 0.4531, norm(x): 0.5654, norm(y): 1.0010, norm:0.4287, tok/sec: 189282.87, flops:198.71, batch-reuse:1
@ 1977 train 4.2231 , allloss: 4.2231, dt: 703.91ms, fracRes: 0.1488, norm(attn): 17.2500, norm(output): 0.4414, norm(x): 0.5525, norm(y): 1.0009, norm:0.3735, tok/sec: 186206.29, flops:195.48, batch-reuse:1
@ 1978 train 4.3422 , allloss: 4.3422, dt: 705.08ms, fracRes: 0.1491, norm(attn): 17.3750, norm(output): 0.4473, norm(x): 0.5630, norm(y): 1.0009, norm:0.3654, tok/sec: 185896.00, flops:195.15, batch-reuse:1
@ 1979 train 4.3366 , allloss: 4.3366, dt: 709.75ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.4414, norm(x): 0.5536, norm(y): 1.0008, norm:0.4389, tok/sec: 184674.05, flops:193.87, batch-reuse:1
@ 1980 train 4.3053 , allloss: 4.3053, dt: 709.13ms, fracRes: 0.1494, norm(attn): 17.2500, norm(output): 0.4453, norm(x): 0.5583, norm(y): 1.0007, norm:0.3683, tok/sec: 184835.24, flops:194.04, batch-reuse:1
@ 1981 train 4.3032 , allloss: 4.3032, dt: 705.84ms, fracRes: 0.1498, norm(attn): 17.2500, norm(output): 0.4473, norm(x): 0.5597, norm(y): 1.0006, norm:0.3862, tok/sec: 185696.38, flops:194.94, batch-reuse:1
@ 1982 train 4.2871 , allloss: 4.2871, dt: 708.39ms, fracRes: 0.1490, norm(attn): 17.2500, norm(output): 0.4375, norm(x): 0.5514, norm(y): 1.0007, norm:0.3837, tok/sec: 185026.96, flops:194.24, batch-reuse:1
@ 1983 train 4.3649 , allloss: 4.3649, dt: 707.05ms, fracRes: 0.1493, norm(attn): 17.3750, norm(output): 0.4395, norm(x): 0.5521, norm(y): 1.0004, norm:0.3670, tok/sec: 185379.16, flops:194.61, batch-reuse:1
@ 1984 train 4.3202 , allloss: 4.3202, dt: 706.70ms, fracRes: 0.1492, norm(attn): 17.5000, norm(output): 0.4355, norm(x): 0.5475, norm(y): 1.0005, norm:0.3681, tok/sec: 185471.41, flops:194.71, batch-reuse:1
@ 1985 train 4.3147 , allloss: 4.3147, dt: 710.89ms, fracRes: 0.1495, norm(attn): 17.3750, norm(output): 0.4336, norm(x): 0.5468, norm(y): 1.0006, norm:0.3522, tok/sec: 184376.14, flops:193.56, batch-reuse:1
@ 1986 train 4.3684 , allloss: 4.3684, dt: 705.68ms, fracRes: 0.1500, norm(attn): 17.2500, norm(output): 0.4453, norm(x): 0.5569, norm(y): 1.0007, norm:0.3614, tok/sec: 185737.98, flops:194.99, batch-reuse:1
@ 1987 train 4.3521 , allloss: 4.3521, dt: 711.80ms, fracRes: 0.1502, norm(attn): 17.5000, norm(output): 0.4453, norm(x): 0.5562, norm(y): 1.0007, norm:0.3731, tok/sec: 184141.65, flops:193.31, batch-reuse:1
@ 1988 train 4.3107 , allloss: 4.3107, dt: 712.59ms, fracRes: 0.1495, norm(attn): 17.6250, norm(output): 0.4375, norm(x): 0.5501, norm(y): 1.0007, norm:0.3482, tok/sec: 183937.53, flops:193.10, batch-reuse:1
@ 1989 train 4.3319 , allloss: 4.3319, dt: 708.08ms, fracRes: 0.1495, norm(attn): 17.6250, norm(output): 0.4414, norm(x): 0.5524, norm(y): 1.0007, norm:0.3826, tok/sec: 185109.76, flops:194.33, batch-reuse:1
@ 1990 train 4.3758 , allloss: 4.3758, dt: 711.26ms, fracRes: 0.1490, norm(attn): 17.7500, norm(output): 0.4336, norm(x): 0.5442, norm(y): 1.0007, norm:0.3730, tok/sec: 184281.64, flops:193.46, batch-reuse:1
@ 1991 train 4.2504 , allloss: 4.2504, dt: 705.97ms, fracRes: 0.1496, norm(attn): 17.7500, norm(output): 0.4395, norm(x): 0.5488, norm(y): 1.0008, norm:0.3477, tok/sec: 185661.08, flops:194.91, batch-reuse:1
@ 1992 train 4.3375 , allloss: 4.3375, dt: 707.48ms, fracRes: 0.1496, norm(attn): 17.7500, norm(output): 0.4453, norm(x): 0.5585, norm(y): 1.0008, norm:0.3568, tok/sec: 185265.90, flops:194.49, batch-reuse:1
@ 1993 train 4.1968 , allloss: 4.1968, dt: 710.79ms, fracRes: 0.1494, norm(attn): 17.6250, norm(output): 0.4297, norm(x): 0.5406, norm(y): 1.0008, norm:0.3864, tok/sec: 184402.86, flops:193.59, batch-reuse:1
@ 1994 train 4.2134 , allloss: 4.2134, dt: 699.45ms, fracRes: 0.1496, norm(attn): 17.6250, norm(output): 0.4355, norm(x): 0.5446, norm(y): 1.0008, norm:0.3945, tok/sec: 187393.20, flops:196.73, batch-reuse:1
@ 1995 train 4.2364 , allloss: 4.2364, dt: 705.14ms, fracRes: 0.1493, norm(attn): 17.5000, norm(output): 0.4336, norm(x): 0.5468, norm(y): 1.0005, norm:0.3766, tok/sec: 185880.79, flops:195.14, batch-reuse:1
@ 1996 train 4.2763 , allloss: 4.2763, dt: 699.52ms, fracRes: 0.1493, norm(attn): 17.6250, norm(output): 0.4395, norm(x): 0.5528, norm(y): 1.0004, norm:0.3775, tok/sec: 187374.68, flops:196.71, batch-reuse:1
@ 1997 train 4.2256 , allloss: 4.2256, dt: 705.07ms, fracRes: 0.1494, norm(attn): 17.7500, norm(output): 0.4375, norm(x): 0.5491, norm(y): 1.0004, norm:0.4580, tok/sec: 185898.45, flops:195.16, batch-reuse:1
@ 1998 train 4.1980 , allloss: 4.1980, dt: 712.00ms, fracRes: 0.1498, norm(attn): 17.7500, norm(output): 0.4336, norm(x): 0.5440, norm(y): 1.0001, norm:0.4874, tok/sec: 184089.61, flops:193.26, batch-reuse:1
@ 1999 train 4.1350 , allloss: 4.1350, dt: 708.59ms, fracRes: 0.1497, norm(attn): 17.7500, norm(output): 0.4277, norm(x): 0.5396, norm(y): 1.0000, norm:0.4256, tok/sec: 184975.73, flops:194.19, batch-reuse:1
@ 2000 val 4.2987
@ 2000 train 4.2100 , allloss: 4.2100, dt: 1065.41ms, fracRes: 0.1488, norm(attn): 17.6250, norm(output): 0.4258, norm(x): 0.5376, norm(y): 0.9998, norm:0.3737, tok/sec: 123024.37, flops:129.15, batch-reuse:1
@ 2001 train 4.2842 , allloss: 4.2842, dt: 695.81ms, fracRes: 0.1485, norm(attn): 17.6250, norm(output): 0.4238, norm(x): 0.5367, norm(y): 0.9997, norm:0.4300, tok/sec: 188374.02, flops:197.76, batch-reuse:1
@ 2002 train 4.2543 , allloss: 4.2543, dt: 699.40ms, fracRes: 0.1496, norm(attn): 17.2500, norm(output): 0.4375, norm(x): 0.5539, norm(y): 0.9998, norm:0.4321, tok/sec: 187405.02, flops:196.74, batch-reuse:1
@ 2003 train 4.2596 , allloss: 4.2596, dt: 709.60ms, fracRes: 0.1499, norm(attn): 17.2500, norm(output): 0.4277, norm(x): 0.5438, norm(y): 0.9997, norm:0.4848, tok/sec: 184713.76, flops:193.91, batch-reuse:1
@ 2004 train 4.2602 , allloss: 4.2602, dt: 710.29ms, fracRes: 0.1492, norm(attn): 17.3750, norm(output): 0.4258, norm(x): 0.5406, norm(y): 0.9998, norm:0.3855, tok/sec: 184533.15, flops:193.72, batch-reuse:1
@ 2005 train 4.1365 , allloss: 4.1365, dt: 711.17ms, fracRes: 0.1493, norm(attn): 17.3750, norm(output): 0.4316, norm(x): 0.5436, norm(y): 0.9999, norm:0.4952, tok/sec: 184304.01, flops:193.48, batch-reuse:1
@ 2006 train 4.2938 , allloss: 4.2938, dt: 711.21ms, fracRes: 0.1499, norm(attn): 17.5000, norm(output): 0.4375, norm(x): 0.5519, norm(y): 0.9996, norm:0.4143, tok/sec: 184293.19, flops:193.47, batch-reuse:1
@ 2007 train 4.1977 , allloss: 4.1977, dt: 720.21ms, fracRes: 0.1491, norm(attn): 17.6250, norm(output): 0.4297, norm(x): 0.5422, norm(y): 0.9995, norm:0.5086, tok/sec: 181991.34, flops:191.05, batch-reuse:1
@ 2008 train 4.2387 , allloss: 4.2387, dt: 724.77ms, fracRes: 0.1488, norm(attn): 17.7500, norm(output): 0.4180, norm(x): 0.5334, norm(y): 0.9994, norm:0.4020, tok/sec: 180846.26, flops:189.85, batch-reuse:1
@ 2009 train 4.2005 , allloss: 4.2005, dt: 706.49ms, fracRes: 0.1497, norm(attn): 17.6250, norm(output): 0.4316, norm(x): 0.5468, norm(y): 0.9995, norm:0.4421, tok/sec: 185525.49, flops:194.76, batch-reuse:1
@ 2010 train 4.3123 , allloss: 4.3123, dt: 714.25ms, fracRes: 0.1494, norm(attn): 17.7500, norm(output): 0.4258, norm(x): 0.5422, norm(y): 0.9996, norm:0.4387, tok/sec: 183510.38, flops:192.65, batch-reuse:1
@ 2011 train 4.1103 , allloss: 4.1103, dt: 703.41ms, fracRes: 0.1510, norm(attn): 17.6250, norm(output): 0.4395, norm(x): 0.5557, norm(y): 0.9995, norm:0.4080, tok/sec: 186338.32, flops:195.62, batch-reuse:1
@ 2012 train 4.1282 , allloss: 4.1282, dt: 713.40ms, fracRes: 0.1497, norm(attn): 17.7500, norm(output): 0.4375, norm(x): 0.5522, norm(y): 0.9992, norm:0.3818, tok/sec: 183727.61, flops:192.88, batch-reuse:1
@ 2013 train 4.1979 , allloss: 4.1979, dt: 706.42ms, fracRes: 0.1487, norm(attn): 17.7500, norm(output): 0.4297, norm(x): 0.5441, norm(y): 0.9991, norm:0.3966, tok/sec: 185543.09, flops:194.78, batch-reuse:1
@ 2014 train 4.1902 , allloss: 4.1902, dt: 712.05ms, fracRes: 0.1489, norm(attn): 17.7500, norm(output): 0.4277, norm(x): 0.5421, norm(y): 0.9990, norm:0.4625, tok/sec: 184078.14, flops:193.25, batch-reuse:1
@ 2015 train 4.1567 , allloss: 4.1567, dt: 714.65ms, fracRes: 0.1486, norm(attn): 17.7500, norm(output): 0.4199, norm(x): 0.5385, norm(y): 0.9989, norm:0.3938, tok/sec: 183407.59, flops:192.54, batch-reuse:1
@ 2016 train 4.2440 , allloss: 4.2440, dt: 702.74ms, fracRes: 0.1494, norm(attn): 17.6250, norm(output): 0.4355, norm(x): 0.5498, norm(y): 0.9981, norm:0.4141, tok/sec: 186515.97, flops:195.80, batch-reuse:1
@ 2017 train 4.1949 , allloss: 4.1949, dt: 699.86ms, fracRes: 0.1491, norm(attn): 17.6250, norm(output): 0.4316, norm(x): 0.5470, norm(y): 0.9964, norm:0.4155, tok/sec: 187282.63, flops:196.61, batch-reuse:1
@ 2018 train 4.2413 , allloss: 4.2413, dt: 697.61ms, fracRes: 0.1492, norm(attn): 17.5000, norm(output): 0.4258, norm(x): 0.5410, norm(y): 0.9962, norm:0.4278, tok/sec: 187888.33, flops:197.25, batch-reuse:1
@ 2019 train 4.2651 , allloss: 4.2651, dt: 706.67ms, fracRes: 0.1493, norm(attn): 17.2500, norm(output): 0.4316, norm(x): 0.5475, norm(y): 0.9961, norm:0.4387, tok/sec: 185478.42, flops:194.72, batch-reuse:1
@ 2020 train 4.1721 , allloss: 4.1721, dt: 700.29ms, fracRes: 0.1482, norm(attn): 17.3750, norm(output): 0.4141, norm(x): 0.5327, norm(y): 0.9941, norm:0.5295, tok/sec: 187168.12, flops:196.49, batch-reuse:1
@ 2021 train 4.1935 , allloss: 4.1935, dt: 716.31ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.4199, norm(x): 0.5398, norm(y): 0.9941, norm:0.3593, tok/sec: 182983.20, flops:192.10, batch-reuse:1
@ 2022 train 4.2420 , allloss: 4.2420, dt: 710.59ms, fracRes: 0.1493, norm(attn): 17.2500, norm(output): 0.4199, norm(x): 0.5375, norm(y): 0.9942, norm:0.4943, tok/sec: 184456.31, flops:193.64, batch-reuse:1
@ 2023 train 4.2263 , allloss: 4.2263, dt: 700.64ms, fracRes: 0.1504, norm(attn): 17.1250, norm(output): 0.4258, norm(x): 0.5436, norm(y): 0.9916, norm:0.4530, tok/sec: 187075.38, flops:196.39, batch-reuse:1
@ 2024 train 4.1927 , allloss: 4.1927, dt: 714.34ms, fracRes: 0.1500, norm(attn): 17.1250, norm(output): 0.4180, norm(x): 0.5362, norm(y): 0.9896, norm:0.4265, tok/sec: 183487.41, flops:192.63, batch-reuse:1
@ 2025 train 4.2675 , allloss: 4.2675, dt: 712.54ms, fracRes: 0.1495, norm(attn): 17.2500, norm(output): 0.4238, norm(x): 0.5401, norm(y): 0.9907, norm:0.4886, tok/sec: 183951.26, flops:193.11, batch-reuse:1
@ 2026 train 4.1834 , allloss: 4.1834, dt: 718.19ms, fracRes: 0.1495, norm(attn): 17.1250, norm(output): 0.4219, norm(x): 0.5390, norm(y): 0.9859, norm:0.3863, tok/sec: 182504.28, flops:191.59, batch-reuse:1
@ 2027 train 4.2535 , allloss: 4.2535, dt: 703.96ms, fracRes: 0.1484, norm(attn): 16.8750, norm(output): 0.4141, norm(x): 0.5310, norm(y): 0.9761, norm:0.5103, tok/sec: 186191.97, flops:195.46, batch-reuse:1
@ 2028 train 4.5591 , allloss: 4.5591, dt: 716.17ms, fracRes: 0.1496, norm(attn): 16.8750, norm(output): 0.4355, norm(x): 0.5514, norm(y): 0.9795, norm:0.5305, tok/sec: 183018.04, flops:192.13, batch-reuse:1
@ 2029 train 4.2050 , allloss: 4.2050, dt: 708.37ms, fracRes: 0.1503, norm(attn): 17.1250, norm(output): 0.4336, norm(x): 0.5510, norm(y): 0.9860, norm:0.5132, tok/sec: 185032.13, flops:194.25, batch-reuse:1
@ 2030 train 4.0455 , allloss: 4.0455, dt: 704.25ms, fracRes: 0.1489, norm(attn): 17.2500, norm(output): 0.4199, norm(x): 0.5360, norm(y): 0.9853, norm:0.4039, tok/sec: 186115.13, flops:195.38, batch-reuse:1
@ 2031 train 4.1116 , allloss: 4.1116, dt: 722.40ms, fracRes: 0.1494, norm(attn): 17.1250, norm(output): 0.4277, norm(x): 0.5450, norm(y): 0.9836, norm:0.5039, tok/sec: 181440.44, flops:190.48, batch-reuse:1
@ 2032 train 4.1489 , allloss: 4.1489, dt: 716.94ms, fracRes: 0.1487, norm(attn): 17.2500, norm(output): 0.4160, norm(x): 0.5312, norm(y): 0.9876, norm:0.4003, tok/sec: 182820.72, flops:191.93, batch-reuse:1
@ 2033 train 4.0989 , allloss: 4.0989, dt: 706.12ms, fracRes: 0.1491, norm(attn): 17.2500, norm(output): 0.4141, norm(x): 0.5314, norm(y): 0.9902, norm:0.4372, tok/sec: 185623.46, flops:194.87, batch-reuse:1
@ 2034 train 4.1914 , allloss: 4.1914, dt: 711.50ms, fracRes: 0.1483, norm(attn): 17.1250, norm(output): 0.4141, norm(x): 0.5277, norm(y): 0.9889, norm:0.5053, tok/sec: 184220.08, flops:193.39, batch-reuse:1
@ 2035 train 4.1196 , allloss: 4.1196, dt: 699.48ms, fracRes: 0.1483, norm(attn): 17.2500, norm(output): 0.4160, norm(x): 0.5314, norm(y): 0.9895, norm:0.4268, tok/sec: 187386.11, flops:196.72, batch-reuse:1
@ 2036 train 4.1824 , allloss: 4.1824, dt: 698.47ms, fracRes: 0.1475, norm(attn): 17.2500, norm(output): 0.4121, norm(x): 0.5293, norm(y): 0.9889, norm:0.4260, tok/sec: 187656.17, flops:197.00, batch-reuse:1
@ 2037 train 4.1355 , allloss: 4.1355, dt: 702.65ms, fracRes: 0.1491, norm(attn): 17.2500, norm(output): 0.4199, norm(x): 0.5376, norm(y): 0.9875, norm:0.4264, tok/sec: 186539.70, flops:195.83, batch-reuse:1
@ 2038 train 4.1620 , allloss: 4.1620, dt: 709.66ms, fracRes: 0.1492, norm(attn): 17.2500, norm(output): 0.4258, norm(x): 0.5423, norm(y): 0.9883, norm:0.3829, tok/sec: 184696.14, flops:193.89, batch-reuse:1
@ 2039 train 4.2524 , allloss: 4.2524, dt: 698.43ms, fracRes: 0.1501, norm(attn): 17.2500, norm(output): 0.4277, norm(x): 0.5460, norm(y): 0.9898, norm:0.4087, tok/sec: 187665.58, flops:197.01, batch-reuse:1
@ 2040 train 4.3403 , allloss: 4.3403, dt: 696.24ms, fracRes: 0.1498, norm(attn): 17.3750, norm(output): 0.4121, norm(x): 0.5318, norm(y): 0.9919, norm:0.4737, tok/sec: 188257.45, flops:197.63, batch-reuse:1
@ 2041 train 4.2567 , allloss: 4.2567, dt: 708.64ms, fracRes: 0.1508, norm(attn): 17.2500, norm(output): 0.4238, norm(x): 0.5443, norm(y): 0.9939, norm:0.4544, tok/sec: 184963.78, flops:194.18, batch-reuse:1
@ 2042 train 4.3863 , allloss: 4.3863, dt: 702.86ms, fracRes: 0.1511, norm(attn): 17.1250, norm(output): 0.4277, norm(x): 0.5450, norm(y): 0.9933, norm:0.4361, tok/sec: 186483.00, flops:195.77, batch-reuse:1
@ 2043 train 4.4038 , allloss: 4.4038, dt: 704.82ms, fracRes: 0.1509, norm(attn): 17.0000, norm(output): 0.4121, norm(x): 0.5331, norm(y): 0.9895, norm:0.4343, tok/sec: 185964.48, flops:195.23, batch-reuse:1
@ 2044 train 4.4738 , allloss: 4.4738, dt: 709.08ms, fracRes: 0.1513, norm(attn): 17.0000, norm(output): 0.4199, norm(x): 0.5396, norm(y): 0.9901, norm:0.4869, tok/sec: 184847.23, flops:194.05, batch-reuse:1
@ 2045 train 4.3478 , allloss: 4.3478, dt: 694.18ms, fracRes: 0.1506, norm(attn): 17.1250, norm(output): 0.4238, norm(x): 0.5396, norm(y): 0.9885, norm:0.3909, tok/sec: 188814.67, flops:198.22, batch-reuse:1
@ 2046 train 4.4349 , allloss: 4.4349, dt: 707.24ms, fracRes: 0.1506, norm(attn): 17.0000, norm(output): 0.4258, norm(x): 0.5453, norm(y): 0.9840, norm:0.4548, tok/sec: 185327.86, flops:194.56, batch-reuse:1
@ 2047 train 4.3283 , allloss: 4.3283, dt: 704.27ms, fracRes: 0.1507, norm(attn): 16.8750, norm(output): 0.4238, norm(x): 0.5404, norm(y): 0.9789, norm:0.4434, tok/sec: 186111.35, flops:195.38, batch-reuse:1
@ 2048 train 4.3065 , allloss: 4.3065, dt: 714.69ms, fracRes: 0.1508, norm(attn): 17.0000, norm(output): 0.4160, norm(x): 0.5319, norm(y): 0.9794, norm:0.4758, tok/sec: 183397.74, flops:192.53, batch-reuse:1
@ 2049 train 4.4033 , allloss: 4.4033, dt: 731.37ms, fracRes: 0.1500, norm(attn): 17.0000, norm(output): 0.4199, norm(x): 0.5367, norm(y): 0.9810, norm:0.4218, tok/sec: 179215.47, flops:188.14, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0718, 0.9297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.1660, 0.2812, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7461, 0.0598, 0.1406, 0.0540, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1982, 0.0820, 0.1367, 0.0684, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.1621, 0.1348, 0.1074, 0.0918, 0.1553, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1226, 0.2773, 0.0366, 0.0542, 0.0508, 0.3555, 0.1040, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3301, 0.1089, 0.0278, 0.0432, 0.0442, 0.2461, 0.1553, 0.0437, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0835, 0.1455, 0.0376, 0.0500, 0.0698, 0.4199, 0.1147, 0.0317, 0.0469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1035, 0.0879, 0.0879, 0.0420, 0.1006, 0.1963, 0.2090, 0.0898, 0.0532, 0.0297, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0732, 0.0469, 0.0136, 0.0161, 0.0284, 0.5078, 0.1006, 0.0293, 0.1299, 0.0194, 0.0359, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0177, 0.0547, 0.0684, 0.0505, 0.0488, 0.1172, 0.1934, 0.1621, 0.0996, 0.1084, 0.0190, 0.0603, 0.0000, 0.0000, 0.0000],
        [0.1138, 0.1177, 0.0223, 0.0238, 0.0352, 0.2656, 0.1494, 0.0554, 0.1094, 0.0304, 0.0225, 0.0135, 0.0410, 0.0000, 0.0000],
        [0.0369, 0.0820, 0.0325, 0.0349, 0.0542, 0.3145, 0.1050, 0.0286, 0.0791, 0.0306, 0.0618, 0.0221, 0.0579, 0.0603, 0.0000],
        [0.0103, 0.0189, 0.0398, 0.0244, 0.0339, 0.0601, 0.1406, 0.0850, 0.1226, 0.0879, 0.0579, 0.0967, 0.0996, 0.0986, 0.0238]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0019,     -0.9180,     -1.2500,     -1.0781,     -0.9766,     -0.5430,     -0.6992,     -0.8711,     -0.7930,     -1.1406,     -1.0156,     -1.3906,     -0.7500,     -0.7617,     -0.9648],
        [    -0.0024,      2.5625,      1.8281,      0.9453,      0.8984,      1.6797,      1.9922,      1.2188,      2.1875,      1.9062,      0.9102,      0.9336,      0.6719,      1.6328,      1.1484],
        [    -0.0145,     -1.2188,     -0.6914,     -0.6992,     -1.0391,     -1.5234,     -1.0469,     -0.2578,     -1.1797,     -1.3828,     -1.9844,     -0.1021,     -0.9805,     -1.3750,     -1.5391],
        [    -0.0249,     -2.5469,     -1.6875,     -2.6562,     -1.6328,     -2.6250,     -2.1250,     -1.2812,     -2.8594,     -2.5312,     -2.8594,     -1.7344,     -1.5391,     -3.2344,     -2.8438],
        [    -0.0042,     -0.9609,     -1.8438,     -1.3281,     -2.0312,      0.7109,     -0.1738,     -0.8477,     -1.2188,     -2.2500,     -2.4062,     -2.5469,     -1.1250,     -1.5938,     -1.8984],
        [    -0.0312,     -0.7969,     -0.9805,     -1.2031,     -1.3594,     -0.8359,     -0.8789,     -1.0391,     -1.2188,     -2.0156,     -1.5234,     -2.0469,     -1.5781,     -1.0234,     -1.2969],
        [    -0.0070,      0.8047,     -1.2188,     -0.8242,     -0.8867,      1.0547,     -0.1729,     -1.2031,      0.1187,     -1.4844,     -1.4766,     -2.5000,     -1.0859,      0.0752,     -0.5234],
        [    -0.0056,     -1.1172,     -2.4844,     -2.0469,     -2.0156,     -0.3008,     -0.7656,     -2.0312,     -1.3906,     -2.7344,     -2.5156,     -3.0781,     -1.3672,     -1.2422,     -1.7266],
        [     0.0085,      0.5703,     -0.7891,     -0.5000,     -0.1670,      1.6250,      0.3301,     -0.9570,     -0.5625,     -1.5625,     -0.5938,     -1.7656,     -0.0588,     -0.3418,     -0.4102],
        [    -0.0178,     -0.1797,     -0.1826,     -0.9219,     -0.0464,      0.6211,      0.6836,     -0.1572,     -0.6836,     -1.2656,     -1.4141,     -0.6992,     -0.2490,     -0.4785,     -0.1904],
        [     0.0099,     -0.4395,     -1.6797,     -1.5078,     -0.9414,      1.9453,      0.3262,     -0.9102,      0.5781,     -1.3203,     -0.7031,     -2.7188,     -0.8867,      0.3555,     -0.5898],
        [     0.0057,      1.1328,      1.3516,      1.0547,      1.0156,      1.8906,      2.3906,      2.2188,      1.7344,      1.8125,      0.0801,      1.2266,      1.8047,      1.6953,      0.8984],
        [    -0.0013,      0.0302,     -1.6250,     -1.5625,     -1.1719,      0.8438,      0.2715,     -0.7227,     -0.0410,     -1.3281,     -1.6250,     -2.1406,     -1.0234,     -0.3145,     -0.7734],
        [     0.0076,      0.8047,     -0.1250,     -0.0479,      0.3926,      2.1406,      1.0469,     -0.2500,      0.7695,     -0.1797,      0.5234,     -0.5039,      0.4551,      0.4980,      0.4297],
        [     0.0208,      0.6250,      1.3750,      0.8828,      1.2109,      1.7812,      2.6250,      2.1250,      2.5000,      2.1719,      1.7422,      2.2500,      2.2812,      2.2812,      0.8594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4019],
        [0.2406],
        [0.2445],
        [0.2641],
        [0.2413],
        [0.1903],
        [0.2548],
        [0.1939],
        [0.1534],
        [0.1877],
        [0.0736],
        [0.1501],
        [0.1502],
        [0.0704]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0052,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9570,     0.0216,     0.0222,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9727,     0.0208,     0.0002,     0.0053,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8203,     0.0010,     0.0002,     0.0010,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.4648,     0.0015,     0.0000,     0.0094,     0.0796,     0.4453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6875,     0.0022,     0.0041,     0.0146,     0.0143,     0.0459,     0.2324,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.7734,     0.0150,     0.0018,     0.0009,     0.0806,     0.0466,     0.0104,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.9766,     0.0006,     0.0014,     0.0009,     0.0004,     0.0012,     0.0002,     0.0059,     0.0117,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.6562,     0.0048,     0.0003,     0.0006,     0.0190,     0.0097,     0.0136,     0.0216,     0.2363,     0.0383,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.8203,     0.0063,     0.0018,     0.0236,     0.0476,     0.0233,     0.0322,     0.0140,     0.0005,     0.0026,     0.0277,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2432,     0.0023,     0.0006,     0.0006,     0.0079,     0.0142,     0.0217,     0.6914,     0.0139,     0.0000,     0.0032,     0.0012,     0.0000,     0.0000],
        [    0.0001,     0.1069,     0.0017,     0.0006,     0.0001,     0.0056,     0.0024,     0.0004,     0.0034,     0.8086,     0.0008,     0.0188,     0.0001,     0.0505,     0.0000],
        [    0.0003,     0.6523,     0.0184,     0.0011,     0.0010,     0.0008,     0.0012,     0.0005,     0.0039,     0.0540,     0.0211,     0.0200,     0.0005,     0.0040,     0.2197]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0022,      0.3125,      0.1426,     -0.0796,      0.0016,      0.1348,      0.1260,      0.0879,      0.0564,      0.0659,     -0.0625,      0.1250,     -0.0151,      0.0289,      0.0889],
        [     0.0240,      9.8750,      7.9375,     -1.6484,      0.6094,      5.3125,      3.6094,      2.1562,     -0.1611,      2.7812,     -0.3691,      4.7500,     -1.6484,     -0.1582,      3.7969],
        [     0.0605,     11.6875,      6.4375,     15.5625,      7.9688,      6.8438,      9.1250,      2.6250,      6.0000,      5.9375,      4.0312,      4.3125,      1.2891,      4.4062,      6.9062],
        [     0.0476,      9.5625,      5.7812,      5.8125,     13.0625,      7.7812,      6.4062,      6.0938,      6.5000,      3.8906,      2.1094,      3.8281,      0.0586,      2.8125,      3.5469],
        [     0.0703,     10.5000,      6.6562,      2.0156,      5.2812,     13.5625,      9.1875,      7.2188,      3.3438,      5.6250,     -4.6562,      4.5625,     -3.2188,      1.7109,      5.7812],
        [     0.0894,      9.8125,      3.1406,      1.5547,      3.1406,      8.3125,     11.3125,      7.7812,      6.5938,      3.3594,     -0.8906,      4.6875,     -1.5547,      3.9375,      5.3750],
        [     0.0552,      7.3125,      1.5859,     -1.9844,      3.4219,      5.5625,      7.2812,     11.1875,      7.7812,      2.8906,     -0.7383,      4.8750,      1.3047,      5.1562,      3.6406],
        [     0.0618,      9.2500,      3.5000,      4.0938,      5.3750,      5.3438,      6.5000,      8.1250,     12.6875,      7.3750,      0.7773,      5.2812,      2.6875,     10.3750,      6.8750],
        [     0.0635,      7.9688,      4.0000,      1.8828,      1.2266,      5.6875,      5.1562,      3.6562,      5.5938,     10.5000,      3.0156,      7.1562,     -0.9805,      5.2812,     10.8125],
        [    -0.0303,      8.5000,      1.0625,      1.9766,      1.5312,      0.6914,      1.8359,      0.1367,      3.4219,      4.0938,     12.0000,      5.5938,      1.2344,      4.1562,      4.6875],
        [     0.0300,      6.6875,      1.7891,     -1.0391,     -0.3535,      3.1562,      2.4844,      2.8281,      3.2969,      5.6875,      3.8594,      8.5625,      1.5703,      3.9688,      6.2812],
        [    -0.0221,      6.5938,      1.7344,      0.5039,      3.0469,      3.7656,      3.0469,      3.3750,      2.5469,     -0.8008,      0.8477,      3.2188,     11.4375,      5.2500,      1.6328],
        [     0.0356,      8.6250,      3.9688,      2.6719,      2.6875,      5.2188,      5.7812,      6.2188,      9.6875,      5.7812,     -0.4316,      4.2812,      3.3438,     13.6250,      8.2500],
        [     0.0559,      7.6250,      3.4844,      2.3906,      0.1865,      4.6875,      3.8438,      1.9688,      4.1875,      9.6875,      2.7812,      5.9062,      0.7617,      6.9062,     11.9375],
        [    -0.0161,      7.8125,      4.2500,      1.3984,      1.3125,      1.1172,      1.5547,      0.5469,      2.6875,      5.3125,      4.3750,      4.3438,      0.6367,      2.7188,      6.7188]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3113],
        [0.2601],
        [0.3075],
        [0.3527],
        [0.2970],
        [0.1244],
        [0.1231],
        [0.1809],
        [0.1986],
        [0.2332],
        [0.1755],
        [0.1138],
        [0.1553],
        [0.1080]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1250,     0.8750,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0342,     0.7422,     0.2217,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0203,     0.0026,     0.9766,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0264,     0.0118,     0.8398,     0.0266,     0.0967,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0005,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.0001,     0.0014,     0.0072,     0.0283,     0.0179,     0.9453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0010,     0.0000,     0.0214,     0.9766,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0055,     0.0021,     0.5938,     0.1406,     0.0075,     0.0104,     0.0001,     0.0037,     0.2363,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0332,     0.0330,     0.1729,     0.1445,     0.0253,     0.2891,     0.1768,     0.0542,     0.0273,     0.0439,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.0004,     0.1650,     0.4199,     0.0128,     0.0193,     0.0040,     0.0437,     0.1475,     0.0625,     0.1216,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0005,     0.0036,     0.1504,     0.0002,     0.6406,     0.0806,     0.1074,     0.0082,     0.0005,     0.0027,     0.0042,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0001,     0.0005,     0.0166,     0.0026,     0.0298,     0.9102,     0.0099,     0.0003,     0.0000,     0.0014,     0.0289,     0.0012,     0.0000,     0.0000],
        [    0.0003,     0.0002,     0.0332,     0.0898,     0.0001,     0.0043,     0.0000,     0.0089,     0.0413,     0.0099,     0.0025,     0.0093,     0.0060,     0.7930,     0.0000],
        [    0.0000,     0.0002,     0.0011,     0.5391,     0.0001,     0.0165,     0.0004,     0.0265,     0.0021,     0.0007,     0.0001,     0.0069,     0.0048,     0.0030,     0.3965]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.0121,     -0.0015,      0.0054,      0.0188,      0.0300,      0.0549,      0.0025,     -0.0259,     -0.0332,     -0.0173,      0.0129,     -0.0038,     -0.0552,      0.0152],
        [    -0.0159,      1.9297,      2.1250,     -1.5938,      1.4609,     -0.7773,      1.3047,     -3.3906,     -3.1719,     -1.5938,     -1.4922,      0.5859,     -1.8047,     -3.7969,      2.3438],
        [     0.0090,      3.0938,      1.8750,      2.2812,      0.0649,      5.3125,      1.9766,      2.8906,      3.8594,      1.4609,      0.6992,      0.2695,      1.9844,      2.2656,      2.4219],
        [    -0.0304,      3.7344,      1.6953,      7.6250,      4.7188,     12.1875,     16.1250,      7.9688,     -0.3066,     -2.3594,      2.1094,      5.5938,      4.9062,     -5.5625,      9.7500],
        [    -0.0007,     -0.8086,      3.4531,      0.0082,      1.2969,      0.5742,     -2.5469,     -2.0000,      2.6406,      2.6406,      1.0234,     -0.2295,     -1.8125,      3.1719,      3.5625],
        [    -0.0486,      2.0938,      1.9609,      5.9062,      4.3750,     13.5000,     17.3750,      7.0312,     -1.8984,     -4.5625,      1.1016,      4.7188,      2.6562,     -8.7500,     10.1875],
        [    -0.0393,     -2.3438,      1.0156,      2.6250,      4.0000,      3.5312,      7.5000,     -0.2402,     -0.7969,     -1.8594,      1.3594,      4.3438,     -2.0156,     -3.3750,      7.7188],
        [    -0.0337,      1.4219,      0.8828,      7.8438,      4.4062,     10.8750,     14.6875,      8.3125,      0.6719,     -2.5000,      2.5938,      5.6250,      3.5938,     -4.0938,      9.8125],
        [     0.0116,     -0.9688,      4.6875,      3.2500,      0.3125,      0.6406,     -3.7344,     -0.3926,      3.7656,      3.3125,      1.0859,      2.2812,     -1.2812,      5.1562,      6.1875],
        [     0.0042,     -0.0066,      1.6562,      1.4766,     -0.2695,      2.1719,      1.6797,      0.4941,     -0.1914,      0.2812,      0.2715,      1.4844,     -0.5312,     -1.3984,      3.7656],
        [     0.0126,     -2.4844,      3.6250,      4.5625,      1.0625,      1.4766,     -0.1016,      2.2969,      3.5156,      2.6562,      3.3125,      3.8281,      0.9766,      4.7812,      9.0625],
        [    -0.0016,      1.4453,      3.5000,      7.2188,      0.6055,      8.6875,      6.5938,      6.8750,      4.3125,      1.6094,      3.2188,      3.6406,      5.6562,      3.9375,      8.9375],
        [    -0.0302,     -1.0469,      0.7969,      4.2500,      2.3906,      4.8438,      8.2500,      3.7500,      0.3926,     -1.9688,      1.7812,      4.8125,      1.6250,     -1.3750,      6.6250],
        [     0.0125,     -0.3535,      4.8125,      5.8125,     -0.6094,      2.7500,     -1.7188,      3.5000,      5.0312,      3.5938,      2.2188,      3.5469,      3.0938,      7.9688,      8.3125],
        [     0.0269,      2.0312,      3.7812,      9.9375,      1.3203,      6.4688,      2.7031,      6.9375,      4.4062,      3.3125,      1.5000,      5.5938,      5.2500,      4.7812,      9.6250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4924],
        [0.0619],
        [0.1245],
        [0.1562],
        [0.0857],
        [0.0878],
        [0.0845],
        [0.1256],
        [0.0908],
        [0.0942],
        [0.0221],
        [0.0926],
        [0.1038],
        [0.0894]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0002,     0.0000,     0.0000,     0.0018,     0.0006,     0.0001,     0.0004,     0.0000,     0.0006,     0.0003,     0.0000,     0.0001,     0.0001,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0095,     -0.8281,     -1.3438,     -1.2891,     -0.7500,     -0.8867,     -0.9805,     -0.8203,     -1.1250,     -0.8281,     -0.8555,     -1.3203,     -1.0469,     -1.0547,     -1.2734],
        [    -0.3828,    -37.2500,    -57.2500,    -54.2500,    -33.2500,    -38.2500,    -42.0000,    -36.5000,    -49.0000,    -36.0000,    -37.2500,    -56.2500,    -46.5000,    -45.5000,    -54.0000],
        [    -0.3066,    -28.8750,    -45.2500,    -42.7500,    -25.2500,    -27.8750,    -32.2500,    -27.0000,    -37.5000,    -27.0000,    -28.7500,    -44.0000,    -34.2500,    -35.0000,    -41.7500],
        [    -0.2461,    -20.5000,    -33.0000,    -32.2500,    -19.0000,    -21.3750,    -25.3750,    -20.0000,    -28.3750,    -20.5000,    -22.0000,    -32.7500,    -25.0000,    -26.2500,    -31.2500],
        [    -0.4082,    -36.7500,    -59.2500,    -55.7500,    -32.7500,    -40.0000,    -42.2500,    -36.2500,    -49.2500,    -36.2500,    -37.7500,    -57.0000,    -46.0000,    -46.5000,    -56.0000],
        [    -0.2227,    -26.3750,    -37.0000,    -34.5000,    -20.7500,    -25.6250,    -26.7500,    -25.5000,    -32.5000,    -24.7500,    -23.8750,    -36.2500,    -31.6250,    -30.7500,    -36.0000],
        [    -0.5078,    -48.0000,    -73.0000,    -69.0000,    -44.0000,    -48.2500,    -53.2500,    -46.7500,    -63.2500,    -47.0000,    -47.7500,    -71.0000,    -59.0000,    -58.5000,    -68.5000],
        [    -0.4551,    -43.2500,    -65.0000,    -61.5000,    -38.5000,    -43.5000,    -47.2500,    -41.5000,    -56.2500,    -41.7500,    -42.5000,    -64.5000,    -53.2500,    -52.7500,    -61.5000],
        [    -0.5352,    -45.2500,    -73.5000,    -69.5000,    -41.0000,    -49.7500,    -53.2500,    -44.5000,    -62.2500,    -45.2500,    -47.7500,    -72.0000,    -57.5000,    -58.7500,    -70.0000],
        [    -0.2314,    -20.5000,    -32.7500,    -30.5000,    -17.8750,    -20.8750,    -23.1250,    -19.6250,    -27.8750,    -19.5000,    -21.1250,    -32.5000,    -25.0000,    -26.1250,    -30.7500],
        [    -0.4961,    -43.5000,    -67.0000,    -64.0000,    -40.0000,    -47.0000,    -50.0000,    -43.0000,    -58.7500,    -43.0000,    -45.0000,    -65.5000,    -54.5000,    -54.5000,    -63.2500],
        [    -0.2402,    -23.5000,    -36.0000,    -33.2500,    -20.3750,    -20.7500,    -24.8750,    -21.5000,    -30.8750,    -20.8750,    -23.6250,    -35.0000,    -27.1250,    -28.1250,    -31.8750],
        [    -0.4395,    -39.2500,    -61.5000,    -56.7500,    -35.0000,    -39.5000,    -42.5000,    -37.0000,    -52.5000,    -37.7500,    -39.7500,    -59.5000,    -47.7500,    -49.5000,    -56.5000],
        [    -0.4434,    -38.7500,    -62.5000,    -58.7500,    -33.7500,    -41.7500,    -44.7500,    -37.5000,    -52.5000,    -38.0000,    -40.5000,    -60.2500,    -48.2500,    -49.7500,    -59.2500],
        [    -0.0547,     -8.6875,    -12.1250,    -11.3125,     -6.3438,     -7.4062,     -8.8750,     -7.8750,    -10.8125,     -7.4062,     -8.1875,    -11.8125,     -9.0625,     -9.6250,    -11.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8542],
        [0.7253],
        [0.5978],
        [0.5978],
        [0.5108],
        [0.6712],
        [0.6714],
        [0.6672],
        [0.6278],
        [0.6683],
        [0.5877],
        [0.6674],
        [0.6683],
        [0.5028]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0055,     -0.8398,     -0.9805,     -1.0781,     -0.8945,     -1.0547,     -1.0156,     -1.0703,     -0.7656,     -0.8945,     -0.7148,     -0.7734,     -0.9766,     -0.7109,     -0.8594],
        [    -0.2637,    -39.0000,    -47.5000,    -52.5000,    -43.2500,    -51.5000,    -50.5000,    -53.5000,    -37.5000,    -43.5000,    -34.7500,    -38.0000,    -49.2500,    -34.5000,    -42.7500],
        [    -0.2852,    -43.7500,    -51.7500,    -56.5000,    -46.0000,    -56.0000,    -54.0000,    -58.0000,    -40.7500,    -48.0000,    -37.7500,    -41.2500,    -53.0000,    -38.2500,    -46.5000],
        [    -0.3457,    -55.7500,    -65.5000,    -72.0000,    -59.0000,    -69.0000,    -66.5000,    -71.5000,    -50.7500,    -59.7500,    -48.7500,    -52.2500,    -65.0000,    -47.2500,    -57.0000],
        [    -0.2188,    -36.2500,    -42.0000,    -46.5000,    -39.2500,    -45.7500,    -44.0000,    -48.2500,    -33.7500,    -39.2500,    -32.0000,    -33.5000,    -43.2500,    -31.0000,    -36.0000],
        [    -0.3789,    -56.7500,    -67.0000,    -73.5000,    -60.5000,    -71.5000,    -69.5000,    -72.5000,    -52.5000,    -61.7500,    -49.7500,    -53.0000,    -66.5000,    -48.5000,    -61.0000],
        [    -0.4043,    -61.2500,    -70.5000,    -78.0000,    -64.5000,    -76.5000,    -73.5000,    -77.5000,    -55.5000,    -65.0000,    -51.5000,    -56.2500,    -71.0000,    -52.2500,    -63.5000],
        [    -0.4688,    -68.5000,    -81.0000,    -89.0000,    -75.0000,    -87.5000,    -84.5000,    -88.0000,    -64.5000,    -74.0000,    -60.2500,    -63.5000,    -80.0000,    -59.7500,    -73.0000],
        [    -0.2812,    -41.7500,    -48.5000,    -54.5000,    -45.7500,    -53.2500,    -51.5000,    -54.0000,    -39.2500,    -45.2500,    -37.0000,    -38.2500,    -48.7500,    -36.0000,    -43.2500],
        [    -0.4004,    -62.5000,    -73.0000,    -80.0000,    -67.0000,    -78.5000,    -75.0000,    -79.5000,    -57.5000,    -67.0000,    -54.5000,    -57.7500,    -73.0000,    -53.0000,    -65.5000],
        [    -0.2305,    -35.5000,    -41.0000,    -45.5000,    -38.2500,    -44.5000,    -43.7500,    -46.5000,    -32.7500,    -37.5000,    -30.8750,    -31.8750,    -42.2500,    -29.8750,    -36.5000],
        [    -0.1943,    -32.2500,    -37.7500,    -40.7500,    -33.7500,    -40.2500,    -38.2500,    -42.2500,    -29.5000,    -34.0000,    -27.0000,    -30.2500,    -38.7500,    -27.3750,    -32.7500],
        [    -0.5859,    -87.5000,   -103.0000,   -114.0000,    -95.5000,   -111.5000,   -108.0000,   -113.0000,    -82.0000,    -94.5000,    -77.0000,    -81.0000,   -102.5000,    -75.5000,    -91.5000],
        [    -0.3047,    -46.2500,    -53.7500,    -60.0000,    -50.0000,    -58.2500,    -57.0000,    -59.5000,    -43.0000,    -49.7500,    -40.5000,    -42.5000,    -54.0000,    -39.2500,    -48.2500],
        [    -0.2891,    -42.0000,    -51.0000,    -56.0000,    -45.0000,    -54.0000,    -51.0000,    -52.2500,    -39.2500,    -46.5000,    -36.7500,    -40.7500,    -48.5000,    -36.0000,    -46.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5482],
        [0.5272],
        [0.5461],
        [0.4356],
        [0.4821],
        [0.5060],
        [0.5828],
        [0.5012],
        [0.5101],
        [0.4993],
        [0.4917],
        [0.5837],
        [0.5022],
        [0.5025]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9805,     0.0177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9961,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9961,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9844,     0.0162,     0.0002,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9922,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9961,     0.0049,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9805,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.9961,     0.0050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.8242,     0.0064,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.1709,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.7656,     0.0121,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0004,     0.0002,     0.2227,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.8906,     0.0084,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.1001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.8672,     0.0088,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.1221,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0013,     0.3262,     0.5000,     0.4629,     0.3828,     0.3789,     0.1758,     0.2637,     0.3203,     0.4199,     0.3965,     0.4844,     0.3145,     0.3828,     0.4043],
        [    0.1143,    29.5000,    42.7500,    38.7500,    32.5000,    33.5000,    17.1250,    24.1250,    26.7500,    35.2500,    32.7500,    41.7500,    27.8750,    32.2500,    34.0000],
        [    0.1426,    33.7500,    49.2500,    44.7500,    37.2500,    37.7500,    17.1250,    26.6250,    30.0000,    40.2500,    38.5000,    48.2500,    30.6250,    36.5000,    38.7500],
        [    0.1050,    26.1250,    37.5000,    33.5000,    28.1250,    28.8750,    14.1250,    20.7500,    22.7500,    30.5000,    28.6250,    36.5000,    23.6250,    27.5000,    29.5000],
        [    0.1377,    36.7500,    54.2500,    48.7500,    40.7500,    43.2500,    22.3750,    30.8750,    34.5000,    45.2500,    41.7500,    52.2500,    36.5000,    40.7500,    43.2500],
        [    0.1465,    38.7500,    57.2500,    51.5000,    43.0000,    44.5000,    22.0000,    32.0000,    35.7500,    47.0000,    44.0000,    55.5000,    37.0000,    42.7500,    45.5000],
        [    0.0947,    24.3750,    35.0000,    30.8750,    26.3750,    26.8750,    12.7500,    19.1250,    21.5000,    28.5000,    26.8750,    33.7500,    22.0000,    25.7500,    27.2500],
        [    0.1118,    28.3750,    41.7500,    37.0000,    31.2500,    31.6250,    15.1250,    23.1250,    24.6250,    33.5000,    32.5000,    40.5000,    25.7500,    29.5000,    32.5000],
        [    0.1299,    35.7500,    53.7500,    48.5000,    40.2500,    42.2500,    21.7500,    30.8750,    34.0000,    45.0000,    41.5000,    51.5000,    36.2500,    40.0000,    43.0000],
        [    0.1157,    29.7500,    44.7500,    40.7500,    34.0000,    34.5000,    17.2500,    24.8750,    27.5000,    37.5000,    35.2500,    43.2500,    28.7500,    33.0000,    35.7500],
        [    0.1494,    38.5000,    57.7500,    52.5000,    44.0000,    44.5000,    22.2500,    32.0000,    35.7500,    49.0000,    45.7500,    56.2500,    37.5000,    42.2500,    46.5000],
        [    0.1279,    31.8750,    47.5000,    42.5000,    35.7500,    35.5000,    16.6250,    25.0000,    28.8750,    39.7500,    37.0000,    45.7500,    29.0000,    34.7500,    37.5000],
        [    0.1138,    27.7500,    41.2500,    37.2500,    31.7500,    31.7500,    14.3125,    23.0000,    24.7500,    33.7500,    33.0000,    40.2500,    25.7500,    29.6250,    32.2500],
        [    0.1279,    34.5000,    51.7500,    47.0000,    39.7500,    42.2500,    21.5000,    31.0000,    33.5000,    43.7500,    40.5000,    49.5000,    36.2500,    39.7500,    41.5000],
        [    0.1235,    31.0000,    46.7500,    42.0000,    35.7500,    34.7500,    16.6250,    25.1250,    28.5000,    39.2500,    36.7500,    44.7500,    28.7500,    33.7500,    36.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0836],
        [    0.0000],
        [    0.0002],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0461,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0454,     0.9336,     0.0229,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0366,     0.7578,     0.0178,     0.1895,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0302,     0.6367,     0.0150,     0.1592,     0.1592,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0309,     0.6250,     0.0156,     0.1602,     0.1602,     0.0078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0302,     0.6211,     0.0161,     0.1621,     0.1621,     0.0081,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0282,     0.6016,     0.0146,     0.1523,     0.1523,     0.0073,     0.0004,     0.0437,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0045,     0.0938,     0.0021,     0.0231,     0.0228,     0.0010,     0.0000,     0.0064,     0.8477,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0048,     0.0977,     0.0024,     0.0250,     0.0250,     0.0012,     0.0001,     0.0072,     0.8359,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0047,     0.0977,     0.0024,     0.0250,     0.0250,     0.0012,     0.0001,     0.0072,     0.8359,     0.0009,     0.0009,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0046,     0.0986,     0.0025,     0.0255,     0.0255,     0.0013,     0.0001,     0.0074,     0.8320,     0.0009,     0.0009,     0.0002,     0.0000,     0.0000],
        [    0.0000,     0.0046,     0.0972,     0.0024,     0.0249,     0.0248,     0.0012,     0.0001,     0.0072,     0.8320,     0.0008,     0.0009,     0.0001,     0.0024,     0.0000],
        [    0.0000,     0.0049,     0.0991,     0.0025,     0.0256,     0.0258,     0.0013,     0.0001,     0.0075,     0.8281,     0.0009,     0.0009,     0.0002,     0.0025,     0.0002]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0001,      0.2656,      0.2598,      0.2500,      0.2578,      0.2578,      0.2480,      0.2402,      0.2520,      0.2656,      0.2480,      0.2471,      0.2422,      0.2500,      0.2422],
        [    -0.0547,     87.5000,     89.5000,     86.0000,     88.0000,     88.0000,     85.0000,     82.5000,     87.0000,     91.5000,     85.0000,     85.0000,     83.0000,     86.0000,     83.0000],
        [    -0.0732,     87.5000,     90.5000,     87.0000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     93.0000,     86.0000,     86.0000,     84.0000,     87.0000,     84.0000],
        [    -0.0698,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0723,     87.5000,     90.5000,     87.0000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     93.0000,     86.0000,     86.0000,     84.0000,     87.0000,     84.0000],
        [    -0.0723,     87.5000,     90.5000,     87.0000,     89.5000,     89.5000,     86.5000,     83.5000,     88.0000,     93.0000,     86.0000,     86.0000,     84.0000,     87.0000,     84.0000],
        [    -0.0688,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0669,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     87.5000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0713,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     87.5000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0747,     88.0000,     91.0000,     87.0000,     89.5000,     89.5000,     86.5000,     83.5000,     88.0000,     93.0000,     86.0000,     86.0000,     84.0000,     87.0000,     84.0000],
        [    -0.0693,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     87.5000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0693,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0679,     87.5000,     90.5000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     88.0000,     92.5000,     85.5000,     85.5000,     84.0000,     86.5000,     84.0000],
        [    -0.0703,     87.0000,     90.0000,     86.5000,     89.0000,     89.0000,     86.0000,     83.0000,     87.5000,     92.5000,     85.5000,     85.5000,     83.5000,     86.5000,     83.5000],
        [    -0.0674,     87.0000,     90.0000,     86.5000,     88.5000,     88.5000,     85.5000,     83.0000,     87.5000,     92.0000,     85.5000,     85.5000,     83.5000,     86.5000,     83.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3398,     0.6602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1758,     0.3613,     0.4629,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1318,     0.2617,     0.3340,     0.2734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1021,     0.2041,     0.2598,     0.2139,     0.2197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0781,     0.1592,     0.2051,     0.1670,     0.1719,     0.2178,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0579,     0.1270,     0.1660,     0.1338,     0.1377,     0.1758,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0542,     0.1113,     0.1426,     0.1167,     0.1196,     0.1514,     0.1719,     0.1328,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0554,     0.1016,     0.1279,     0.1060,     0.1094,     0.1357,     0.1533,     0.1191,     0.0918,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0427,     0.0903,     0.1162,     0.0947,     0.0972,     0.1230,     0.1406,     0.1084,     0.0791,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0383,     0.0811,     0.1040,     0.0850,     0.0869,     0.1108,     0.1260,     0.0972,     0.0708,     0.0972,     0.1025,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0322,     0.0713,     0.0928,     0.0752,     0.0771,     0.0986,     0.1133,     0.0864,     0.0620,     0.0869,     0.0918,     0.1123,     0.0000,     0.0000],
        [    0.0000,     0.0315,     0.0664,     0.0850,     0.0693,     0.0713,     0.0903,     0.1030,     0.0791,     0.0581,     0.0796,     0.0835,     0.1021,     0.0811,     0.0000],
        [    0.0000,     0.0281,     0.0608,     0.0786,     0.0640,     0.0654,     0.0835,     0.0947,     0.0732,     0.0527,     0.0732,     0.0771,     0.0938,     0.0752,     0.0801]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,      0.0342,      0.0156,      0.0140,      0.0147,      0.0151,      0.0144,      0.0132,      0.0135,      0.0183,      0.0126,      0.0129,      0.0128,      0.0121,      0.0116],
        [    -0.0339,     13.6250,     14.0000,     14.1875,     14.0000,     14.0625,     14.2500,     14.3750,     14.1250,     13.9375,     14.1250,     14.1250,     14.3125,     14.1250,     14.1250],
        [    -0.0432,     14.6250,     15.2500,     15.5000,     15.3125,     15.3750,     15.5625,     15.6875,     15.4375,     15.1875,     15.4375,     15.5000,     15.6875,     15.4375,     15.5000],
        [    -0.0442,     14.5625,     15.2500,     15.5000,     15.3125,     15.3750,     15.5625,     15.6875,     15.4375,     15.1250,     15.4375,     15.5000,     15.6875,     15.5000,     15.5000],
        [    -0.0437,     14.5000,     15.1875,     15.4375,     15.2500,     15.2500,     15.5000,     15.6250,     15.3750,     15.0625,     15.3750,     15.4375,     15.6250,     15.3750,     15.4375],
        [    -0.0435,     14.4375,     15.1250,     15.3750,     15.1875,     15.2500,     15.4375,     15.5625,     15.3125,     15.0625,     15.3125,     15.3750,     15.5625,     15.3125,     15.3750],
        [    -0.0442,     14.6250,     15.3750,     15.6250,     15.4375,     15.4375,     15.6875,     15.8125,     15.5625,     15.2500,     15.5625,     15.6250,     15.8125,     15.5625,     15.6250],
        [    -0.0444,     14.3750,     15.1875,     15.4375,     15.2500,     15.2500,     15.5000,     15.6250,     15.3750,     15.0625,     15.3750,     15.4375,     15.6250,     15.3750,     15.4375],
        [    -0.0439,     14.5000,     15.1875,     15.4375,     15.2500,     15.3125,     15.5000,     15.6250,     15.3750,     15.0625,     15.3750,     15.4375,     15.6250,     15.4375,     15.5000],
        [    -0.0422,     14.6875,     15.3125,     15.5625,     15.3750,     15.3750,     15.6250,     15.7500,     15.5000,     15.2500,     15.5000,     15.5000,     15.7500,     15.5000,     15.5625],
        [    -0.0444,     14.2500,     15.0000,     15.2500,     15.0625,     15.0625,     15.3125,     15.4375,     15.1875,     14.8750,     15.1875,     15.2500,     15.4375,     15.1875,     15.2500],
        [    -0.0444,     14.3125,     15.0625,     15.3125,     15.1250,     15.1250,     15.3750,     15.5000,     15.2500,     14.9375,     15.2500,     15.3125,     15.5000,     15.2500,     15.3125],
        [    -0.0447,     14.3750,     15.1875,     15.4375,     15.2500,     15.2500,     15.5000,     15.6875,     15.3750,     15.0625,     15.3750,     15.4375,     15.6250,     15.4375,     15.5000],
        [    -0.0447,     14.3750,     15.1250,     15.3750,     15.1875,     15.1875,     15.4375,     15.5625,     15.3125,     15.0000,     15.3125,     15.3750,     15.5625,     15.3125,     15.3750],
        [    -0.0449,     14.1875,     15.0000,     15.2500,     15.0000,     15.0625,     15.3125,     15.4375,     15.1875,     14.8125,     15.1875,     15.1875,     15.4375,     15.1875,     15.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6562,     0.3438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.2637,     0.2344,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4004,     0.2090,     0.1855,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.1758,     0.1562,     0.1719,     0.1611,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2891,     0.1523,     0.1348,     0.1494,     0.1396,     0.1348,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2598,     0.1357,     0.1211,     0.1338,     0.1250,     0.1206,     0.1050,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2314,     0.1216,     0.1079,     0.1191,     0.1113,     0.1074,     0.0933,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2070,     0.1084,     0.0967,     0.1064,     0.0996,     0.0957,     0.0835,     0.0972,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1895,     0.0991,     0.0879,     0.0972,     0.0908,     0.0874,     0.0762,     0.0884,     0.0962,     0.0869,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1738,     0.0913,     0.0811,     0.0894,     0.0835,     0.0806,     0.0698,     0.0815,     0.0884,     0.0801,     0.0806,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1621,     0.0850,     0.0757,     0.0835,     0.0781,     0.0752,     0.0654,     0.0762,     0.0825,     0.0747,     0.0752,     0.0664,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.0791,     0.0703,     0.0776,     0.0728,     0.0698,     0.0608,     0.0708,     0.0767,     0.0693,     0.0698,     0.0615,     0.0703,     0.0000],
        [    0.0000,     0.1406,     0.0742,     0.0659,     0.0728,     0.0679,     0.0654,     0.0569,     0.0659,     0.0718,     0.0649,     0.0654,     0.0576,     0.0659,     0.0649]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.0649,      0.0654,      0.0654,      0.0654,      0.0654,      0.0654,      0.0654,      0.0654,      0.0649,      0.0654,      0.0654,      0.0654,      0.0654,      0.0654],
        [    -0.0593,     30.7500,     30.1250,     30.0000,     30.0000,     30.0000,     30.0000,     29.7500,     30.0000,     30.0000,     29.8750,     30.0000,     29.7500,     30.0000,     29.8750],
        [    -0.0598,     31.2500,     30.6250,     30.5000,     30.6250,     30.5000,     30.5000,     30.3750,     30.5000,     30.6250,     30.5000,     30.5000,     30.3750,     30.5000,     30.5000],
        [    -0.0601,     31.5000,     30.8750,     30.7500,     30.7500,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500],
        [    -0.0601,     31.3750,     30.7500,     30.6250,     30.7500,     30.6250,     30.6250,     30.5000,     30.6250,     30.7500,     30.6250,     30.6250,     30.5000,     30.6250,     30.6250],
        [    -0.0598,     31.3750,     30.7500,     30.6250,     30.6250,     30.6250,     30.6250,     30.5000,     30.6250,     30.6250,     30.6250,     30.6250,     30.5000,     30.6250,     30.6250],
        [    -0.0601,     31.5000,     30.8750,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500],
        [    -0.0603,     31.7500,     31.1250,     31.0000,     31.1250,     31.0000,     31.0000,     30.8750,     31.0000,     31.0000,     31.0000,     31.0000,     30.8750,     31.0000,     31.0000],
        [    -0.0598,     31.3750,     30.7500,     30.6250,     30.7500,     30.6250,     30.6250,     30.5000,     30.6250,     30.6250,     30.6250,     30.6250,     30.5000,     30.6250,     30.6250],
        [    -0.0593,     31.0000,     30.3750,     30.2500,     30.2500,     30.2500,     30.2500,     30.0000,     30.2500,     30.2500,     30.2500,     30.2500,     30.1250,     30.2500,     30.2500],
        [    -0.0601,     31.5000,     30.8750,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500],
        [    -0.0601,     31.5000,     30.8750,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500],
        [    -0.0601,     31.6250,     31.0000,     30.8750,     31.0000,     30.8750,     30.8750,     30.7500,     30.8750,     31.0000,     30.8750,     30.8750,     30.7500,     30.8750,     30.8750],
        [    -0.0601,     31.5000,     30.8750,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.8750,     30.7500,     30.7500,     30.6250,     30.7500,     30.7500],
        [    -0.0601,     31.6250,     31.0000,     30.8750,     30.8750,     30.8750,     30.8750,     30.6250,     30.8750,     30.8750,     30.7500,     30.8750,     30.7500,     30.8750,     30.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.2002,     0.2002,     0.2002,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1670,     0.1670,     0.1660,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.1250,     0.1250,     0.1250,     0.1245,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1108,     0.1113,     0.1108,     0.1104,     0.1113,     0.1108,     0.1113,     0.1118,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.1001,     0.1001,     0.1001,     0.0996,     0.1001,     0.1001,     0.1001,     0.1006,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0908,     0.0908,     0.0908,     0.0903,     0.0908,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0771,     0.0767,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0767,     0.0771,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699,      0.1699],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500,     23.3750,     23.2500,     23.2500,     23.2500,     23.2500,     23.2500],
        [    -0.0177,     23.3750,     23.2500,     23.3750,     23.2500,     23.2500,     23.3750,     23.2500,     23.3750,     23.3750,     23.2500,     23.3750,     23.3750,     23.2500,     23.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.1992,     0.2002,     0.1992,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1660,     0.1670,     0.1660,     0.1680,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1426,     0.1426,     0.1426,     0.1445,     0.1426,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1245,     0.1250,     0.1250,     0.1245,     0.1260,     0.1250,     0.1260,     0.1235,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1113,     0.1113,     0.1108,     0.1123,     0.1113,     0.1118,     0.1099,     0.1104,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.1001,     0.1001,     0.0996,     0.1011,     0.1001,     0.1006,     0.0986,     0.0991,     0.1011,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0908,     0.0913,     0.0908,     0.0918,     0.0908,     0.0913,     0.0898,     0.0903,     0.0918,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0835,     0.0835,     0.0830,     0.0845,     0.0835,     0.0840,     0.0820,     0.0825,     0.0840,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0767,     0.0771,     0.0767,     0.0776,     0.0767,     0.0771,     0.0757,     0.0762,     0.0776,     0.0767,     0.0771,     0.0781,     0.0000],
        [    0.0000,     0.0708,     0.0713,     0.0713,     0.0713,     0.0723,     0.0713,     0.0718,     0.0703,     0.0708,     0.0718,     0.0713,     0.0713,     0.0723,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415,     0.0415],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500],
        [    0.0371,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.7500,    17.7500,    17.8750,    17.7500,    17.7500,    17.8750,    17.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.4023, 0.5977, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2520, 0.3730, 0.3730, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1631, 0.2412, 0.2412, 0.3555, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1309, 0.1943, 0.1943, 0.2852, 0.1943, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1021, 0.1514, 0.1514, 0.2217, 0.1514, 0.2217, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0835, 0.1235, 0.1235, 0.1816, 0.1235, 0.1816, 0.1816, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0742, 0.1104, 0.1104, 0.1611, 0.1104, 0.1611, 0.1611, 0.1104, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0669, 0.0991, 0.0991, 0.1455, 0.0991, 0.1455, 0.1455, 0.0991, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0583, 0.0864, 0.0864, 0.1270, 0.0864, 0.1270, 0.1270, 0.0864, 0.0864, 0.1270, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0537, 0.0796, 0.0796, 0.1167, 0.0796, 0.1167, 0.1167, 0.0796, 0.0796, 0.1167, 0.0796, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0498, 0.0737, 0.0737, 0.1084, 0.0737, 0.1084, 0.1084, 0.0737, 0.0737, 0.1084, 0.0737, 0.0737, 0.0000, 0.0000],
        [0.0000, 0.0449, 0.0664, 0.0664, 0.0977, 0.0664, 0.0977, 0.0977, 0.0664, 0.0664, 0.0977, 0.0664, 0.0664, 0.0977, 0.0000],
        [0.0000, 0.0408, 0.0605, 0.0605, 0.0889, 0.0605, 0.0889, 0.0889, 0.0605, 0.0605, 0.0889, 0.0608, 0.0605, 0.0889, 0.0889]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0003,     0.1318,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328,     0.1328],
        [    0.2314,    96.0000,    96.5000,    96.5000,    97.0000,    96.5000,    97.0000,    97.0000,    96.5000,    96.5000,    97.0000,    96.5000,    96.5000,    97.0000,    97.0000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    96.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.5000,    97.5000,    97.0000,    97.0000,    97.5000,    97.0000,    97.0000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2334,    97.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,,,,,,,,,,,,,,,
@ 2050 train 4.3100 , allloss: 4.3100, dt: 1199.91ms, fracRes: 0.1502, norm(attn): 17.0000, norm(output): 0.4180, norm(x): 0.5395, norm(y): 0.9807, norm:0.4484, tok/sec: 109235.24, flops:114.68, batch-reuse:1
@ 2051 train 4.3853 , allloss: 4.3853, dt: 698.61ms, fracRes: 0.1501, norm(attn): 17.0000, norm(output): 0.4258, norm(x): 0.5430, norm(y): 0.9806, norm:0.4463, tok/sec: 187618.76, flops:196.96, batch-reuse:1
@ 2052 train 4.3562 , allloss: 4.3562, dt: 707.28ms, fracRes: 0.1497, norm(attn): 17.2500, norm(output): 0.4180, norm(x): 0.5364, norm(y): 0.9825, norm:0.3869, tok/sec: 185318.80, flops:194.55, batch-reuse:1
@ 2053 train 4.3896 , allloss: 4.3896, dt: 706.80ms, fracRes: 0.1501, norm(attn): 17.2500, norm(output): 0.4180, norm(x): 0.5376, norm(y): 0.9856, norm:0.4491, tok/sec: 185444.01, flops:194.68, batch-reuse:1
@ 2054 train 4.3412 , allloss: 4.3412, dt: 706.34ms, fracRes: 0.1500, norm(attn): 17.1250, norm(output): 0.4277, norm(x): 0.5446, norm(y): 0.9851, norm:0.3670, tok/sec: 185565.82, flops:194.81, batch-reuse:1
@ 2055 train 4.3699 , allloss: 4.3699, dt: 709.89ms, fracRes: 0.1498, norm(attn): 17.0000, norm(output): 0.4219, norm(x): 0.5396, norm(y): 0.9800, norm:0.4299, tok/sec: 184638.26, flops:193.83, batch-reuse:1
@ 2056 train 4.3589 , allloss: 4.3589, dt: 715.48ms, fracRes: 0.1503, norm(attn): 17.0000, norm(output): 0.4199, norm(x): 0.5416, norm(y): 0.9781, norm:0.3667, tok/sec: 183193.56, flops:192.32, batch-reuse:1
@ 2057 train 4.4657 , allloss: 4.4657, dt: 712.95ms, fracRes: 0.1497, norm(attn): 17.1250, norm(output): 0.4180, norm(x): 0.5383, norm(y): 0.9812, norm:0.4917, tok/sec: 183845.39, flops:193.00, batch-reuse:1
@ 2058 train 4.2901 , allloss: 4.2901, dt: 699.80ms, fracRes: 0.1510, norm(attn): 17.2500, norm(output): 0.4375, norm(x): 0.5572, norm(y): 0.9839, norm:0.5219, tok/sec: 187299.99, flops:196.63, batch-reuse:1
@ 2059 train 4.3117 , allloss: 4.3117, dt: 712.94ms, fracRes: 0.1500, norm(attn): 17.0000, norm(output): 0.4141, norm(x): 0.5340, norm(y): 0.9689, norm:0.3980, tok/sec: 183846.93, flops:193.00, batch-reuse:1
@ 2060 train 4.3647 , allloss: 4.3647, dt: 715.78ms, fracRes: 0.1502, norm(attn): 16.2500, norm(output): 0.4219, norm(x): 0.5391, norm(y): 0.9436, norm:0.4155, tok/sec: 183117.35, flops:192.24, batch-reuse:1
@ 2061 train 4.3366 , allloss: 4.3366, dt: 711.65ms, fracRes: 0.1505, norm(attn): 17.2500, norm(output): 0.4238, norm(x): 0.5452, norm(y): 0.9806, norm:0.4180, tok/sec: 184180.76, flops:193.35, batch-reuse:1
@ 2062 train 4.3009 , allloss: 4.3009, dt: 701.91ms, fracRes: 0.1496, norm(attn): 17.8750, norm(output): 0.4121, norm(x): 0.5287, norm(y): 0.9926, norm:0.3570, tok/sec: 186735.36, flops:196.04, batch-reuse:1
@ 2063 train 4.4400 , allloss: 4.4400, dt: 696.32ms, fracRes: 0.1498, norm(attn): 17.8750, norm(output): 0.4121, norm(x): 0.5330, norm(y): 0.9961, norm:0.4339, tok/sec: 188234.38, flops:197.61, batch-reuse:1
@ 2064 train 4.3464 , allloss: 4.3464, dt: 709.73ms, fracRes: 0.1496, norm(attn): 17.8750, norm(output): 0.4121, norm(x): 0.5289, norm(y): 0.9978, norm:0.3635, tok/sec: 184679.88, flops:193.88, batch-reuse:1
@ 2065 train 5.1851 , allloss: 5.1851, dt: 710.16ms, fracRes: 0.1514, norm(attn): 17.8750, norm(output): 0.4414, norm(x): 0.5581, norm(y): 0.9989, norm:0.8215, tok/sec: 184566.61, flops:193.76, batch-reuse:1
@ 2066 train 4.4415 , allloss: 4.4415, dt: 711.73ms, fracRes: 0.1505, norm(attn): 17.8750, norm(output): 0.4160, norm(x): 0.5323, norm(y): 0.9990, norm:0.7457, tok/sec: 184159.23, flops:193.33, batch-reuse:1
@ 2067 train 4.3364 , allloss: 4.3364, dt: 706.32ms, fracRes: 0.1506, norm(attn): 17.8750, norm(output): 0.4102, norm(x): 0.5267, norm(y): 0.9990, norm:0.5289, tok/sec: 185570.52, flops:194.81, batch-reuse:1
@ 2068 train 4.4241 , allloss: 4.4241, dt: 692.66ms, fracRes: 0.1497, norm(attn): 18.0000, norm(output): 0.4297, norm(x): 0.5430, norm(y): 0.9988, norm:0.5485, tok/sec: 189230.10, flops:198.65, batch-reuse:1
@ 2069 train 4.3796 , allloss: 4.3796, dt: 708.45ms, fracRes: 0.1492, norm(attn): 18.0000, norm(output): 0.4316, norm(x): 0.5452, norm(y): 0.9989, norm:0.5645, tok/sec: 185012.14, flops:194.23, batch-reuse:1
@ 2070 train 4.4470 , allloss: 4.4470, dt: 706.31ms, fracRes: 0.1483, norm(attn): 18.0000, norm(output): 0.4199, norm(x): 0.5358, norm(y): 0.9990, norm:0.5661, tok/sec: 185573.78, flops:194.82, batch-reuse:1
@ 2071 train 4.4166 , allloss: 4.4166, dt: 718.33ms, fracRes: 0.1489, norm(attn): 18.0000, norm(output): 0.4199, norm(x): 0.5330, norm(y): 0.9988, norm:0.5416, tok/sec: 182468.54, flops:191.56, batch-reuse:1
@ 2072 train 4.3828 , allloss: 4.3828, dt: 707.97ms, fracRes: 0.1497, norm(attn): 18.0000, norm(output): 0.4199, norm(x): 0.5345, norm(y): 0.9987, norm:0.4510, tok/sec: 185137.31, flops:194.36, batch-reuse:1
@ 2073 train 4.3672 , allloss: 4.3672, dt: 717.76ms, fracRes: 0.1488, norm(attn): 18.1250, norm(output): 0.4102, norm(x): 0.5272, norm(y): 0.9986, norm:0.5130, tok/sec: 182613.34, flops:191.71, batch-reuse:1
@ 2074 train 4.3938 , allloss: 4.3938, dt: 707.08ms, fracRes: 0.1490, norm(attn): 18.1250, norm(output): 0.4180, norm(x): 0.5325, norm(y): 0.9986, norm:0.4879, tok/sec: 185371.98, flops:194.60, batch-reuse:1
@ 2075 train 4.3286 , allloss: 4.3286, dt: 712.64ms, fracRes: 0.1496, norm(attn): 18.1250, norm(output): 0.4199, norm(x): 0.5369, norm(y): 0.9982, norm:0.4494, tok/sec: 183923.81, flops:193.08, batch-reuse:1
@ 2076 train 4.2902 , allloss: 4.2902, dt: 714.15ms, fracRes: 0.1502, norm(attn): 18.1250, norm(output): 0.4180, norm(x): 0.5351, norm(y): 0.9986, norm:0.4280, tok/sec: 183534.70, flops:192.68, batch-reuse:1
@ 2077 train 4.3927 , allloss: 4.3927, dt: 712.51ms, fracRes: 0.1493, norm(attn): 18.2500, norm(output): 0.4062, norm(x): 0.5259, norm(y): 0.9988, norm:0.4294, tok/sec: 183958.71, flops:193.12, batch-reuse:1
@ 2078 train 4.6455 , allloss: 4.6455, dt: 704.93ms, fracRes: 0.1500, norm(attn): 18.1250, norm(output): 0.4180, norm(x): 0.5404, norm(y): 0.9983, norm:0.6863, tok/sec: 185936.80, flops:195.20, batch-reuse:1
@ 2079 train 4.4480 , allloss: 4.4480, dt: 707.19ms, fracRes: 0.1489, norm(attn): 18.1250, norm(output): 0.4160, norm(x): 0.5303, norm(y): 0.9982, norm:0.5935, tok/sec: 185341.10, flops:194.57, batch-reuse:1
@ 2080 train 4.3515 , allloss: 4.3515, dt: 710.59ms, fracRes: 0.1499, norm(attn): 18.1250, norm(output): 0.4160, norm(x): 0.5328, norm(y): 0.9978, norm:0.4422, tok/sec: 184454.71, flops:193.64, batch-reuse:1
@ 2081 train 4.4136 , allloss: 4.4136, dt: 708.09ms, fracRes: 0.1496, norm(attn): 18.1250, norm(output): 0.4219, norm(x): 0.5381, norm(y): 0.9981, norm:0.4476, tok/sec: 185106.33, flops:194.32, batch-reuse:1
@ 2082 train 4.3835 , allloss: 4.3835, dt: 704.69ms, fracRes: 0.1492, norm(attn): 18.1250, norm(output): 0.4121, norm(x): 0.5291, norm(y): 0.9986, norm:0.4392, tok/sec: 185998.39, flops:195.26, batch-reuse:1
@ 2083 train 4.2675 , allloss: 4.2675, dt: 704.45ms, fracRes: 0.1501, norm(attn): 18.1250, norm(output): 0.4238, norm(x): 0.5391, norm(y): 0.9986, norm:0.4606, tok/sec: 186062.28, flops:195.33, batch-reuse:1
@ 2084 train 4.5353 , allloss: 4.5353, dt: 706.06ms, fracRes: 0.1487, norm(attn): 18.0000, norm(output): 0.4238, norm(x): 0.5406, norm(y): 0.9980, norm:0.5577, tok/sec: 185639.70, flops:194.88, batch-reuse:1
@ 2085 train 4.3512 , allloss: 4.3512, dt: 708.48ms, fracRes: 0.1498, norm(attn): 18.0000, norm(output): 0.4238, norm(x): 0.5393, norm(y): 0.9974, norm:0.4555, tok/sec: 185004.17, flops:194.22, batch-reuse:1
@ 2086 train 4.2624 , allloss: 4.2624, dt: 696.12ms, fracRes: 0.1496, norm(attn): 17.8750, norm(output): 0.4121, norm(x): 0.5288, norm(y): 0.9973, norm:0.4208, tok/sec: 188290.27, flops:197.67, batch-reuse:1
@ 2087 train 4.2879 , allloss: 4.2879, dt: 706.85ms, fracRes: 0.1492, norm(attn): 18.0000, norm(output): 0.4160, norm(x): 0.5304, norm(y): 0.9980, norm:0.4245, tok/sec: 185432.19, flops:194.67, batch-reuse:1
@ 2088 train 4.4160 , allloss: 4.4160, dt: 717.79ms, fracRes: 0.1496, norm(attn): 18.0000, norm(output): 0.4258, norm(x): 0.5411, norm(y): 0.9987, norm:0.4155, tok/sec: 182605.09, flops:191.70, batch-reuse:1
@ 2089 train 4.3518 , allloss: 4.3518, dt: 704.96ms, fracRes: 0.1495, norm(attn): 17.8750, norm(output): 0.4160, norm(x): 0.5311, norm(y): 0.9990, norm:0.3815, tok/sec: 185928.00, flops:195.19, batch-reuse:1
@ 2090 train 4.3333 , allloss: 4.3333, dt: 713.41ms, fracRes: 0.1499, norm(attn): 17.8750, norm(output): 0.4160, norm(x): 0.5300, norm(y): 0.9989, norm:0.4008, tok/sec: 183727.18, flops:192.88, batch-reuse:1
@ 2091 train 4.3606 , allloss: 4.3606, dt: 722.20ms, fracRes: 0.1502, norm(attn): 17.8750, norm(output): 0.4160, norm(x): 0.5307, norm(y): 0.9985, norm:0.4140, tok/sec: 181489.31, flops:190.53, batch-reuse:1
@ 2092 train 4.3198 , allloss: 4.3198, dt: 698.77ms, fracRes: 0.1514, norm(attn): 17.8750, norm(output): 0.4219, norm(x): 0.5433, norm(y): 0.9976, norm:0.3927, tok/sec: 187574.40, flops:196.92, batch-reuse:1
@ 2093 train 4.3546 , allloss: 4.3546, dt: 706.82ms, fracRes: 0.1495, norm(attn): 17.8750, norm(output): 0.4082, norm(x): 0.5305, norm(y): 0.9960, norm:0.3751, tok/sec: 185438.38, flops:194.67, batch-reuse:1
@ 2094 train 4.3349 , allloss: 4.3349, dt: 710.29ms, fracRes: 0.1496, norm(attn): 17.8750, norm(output): 0.4180, norm(x): 0.5352, norm(y): 0.9943, norm:0.3944, tok/sec: 184531.85, flops:193.72, batch-reuse:1
@ 2095 train 4.2520 , allloss: 4.2520, dt: 704.65ms, fracRes: 0.1488, norm(attn): 18.0000, norm(output): 0.4082, norm(x): 0.5241, norm(y): 0.9920, norm:0.4071, tok/sec: 186010.28, flops:195.27, batch-reuse:1
@ 2096 train 4.4245 , allloss: 4.4245, dt: 701.77ms, fracRes: 0.1493, norm(attn): 18.0000, norm(output): 0.4121, norm(x): 0.5297, norm(y): 0.9874, norm:0.3673, tok/sec: 186772.66, flops:196.07, batch-reuse:1
@ 2097 train 4.3597 , allloss: 4.3597, dt: 709.99ms, fracRes: 0.1486, norm(attn): 17.8750, norm(output): 0.4082, norm(x): 0.5256, norm(y): 0.9783, norm:0.3507, tok/sec: 184610.30, flops:193.80, batch-reuse:1
@ 2098 train 4.2417 , allloss: 4.2417, dt: 705.51ms, fracRes: 0.1497, norm(attn): 17.5000, norm(output): 0.4141, norm(x): 0.5338, norm(y): 0.9641, norm:0.3575, tok/sec: 185783.49, flops:195.04, batch-reuse:1
@ 2099 train 4.3586 , allloss: 4.3586, dt: 707.92ms, fracRes: 0.1493, norm(attn): 17.6250, norm(output): 0.4043, norm(x): 0.5234, norm(y): 0.9669, norm:0.3745, tok/sec: 185152.15, flops:194.37, batch-reuse:1
@ 2100 train 4.3210 , allloss: 4.3210, dt: 725.37ms, fracRes: 0.1492, norm(attn): 17.7500, norm(output): 0.4082, norm(x): 0.5262, norm(y): 0.9744, norm:0.3704, tok/sec: 180695.58, flops:189.69, batch-reuse:1
@ 2101 train 4.3262 , allloss: 4.3262, dt: 725.86ms, fracRes: 0.1484, norm(attn): 18.0000, norm(output): 0.4062, norm(x): 0.5240, norm(y): 0.9796, norm:0.7292, tok/sec: 180575.92, flops:189.57, batch-reuse:1
@ 2102 train 4.2763 , allloss: 4.2763, dt: 710.91ms, fracRes: 0.1494, norm(attn): 18.0000, norm(output): 0.4121, norm(x): 0.5291, norm(y): 0.9827, norm:0.4022, tok/sec: 184372.18, flops:193.55, batch-reuse:1
@ 2103 train 4.3281 , allloss: 4.3281, dt: 693.85ms, fracRes: 0.1489, norm(attn): 18.1250, norm(output): 0.4082, norm(x): 0.5250, norm(y): 0.9850, norm:0.3978, tok/sec: 188904.66, flops:198.31, batch-reuse:1
@ 2104 train 4.3220 , allloss: 4.3220, dt: 708.13ms, fracRes: 0.1492, norm(attn): 18.1250, norm(output): 0.4062, norm(x): 0.5269, norm(y): 0.9848, norm:0.3747, tok/sec: 185096.11, flops:194.31, batch-reuse:1
@ 2105 train 4.2537 , allloss: 4.2537, dt: 709.06ms, fracRes: 0.1502, norm(attn): 18.0000, norm(output): 0.4199, norm(x): 0.5382, norm(y): 0.9841, norm:0.4478, tok/sec: 184853.26, flops:194.06, batch-reuse:1
@ 2106 train 4.3141 , allloss: 4.3141, dt: 702.97ms, fracRes: 0.1499, norm(attn): 18.0000, norm(output): 0.4121, norm(x): 0.5307, norm(y): 0.9872, norm:0.3936, tok/sec: 186453.47, flops:195.74, batch-reuse:1
@ 2107 train 4.3443 , allloss: 4.3443, dt: 717.52ms, fracRes: 0.1494, norm(attn): 18.1250, norm(output): 0.4004, norm(x): 0.5227, norm(y): 0.9893, norm:0.4175, tok/sec: 182673.23, flops:191.77, batch-reuse:1
@ 2108 train 4.4539 , allloss: 4.4539, dt: 715.56ms, fracRes: 0.1507, norm(attn): 18.0000, norm(output): 0.4121, norm(x): 0.5327, norm(y): 0.9906, norm:0.4293, tok/sec: 183173.91, flops:192.30, batch-reuse:1
@ 2109 train 4.2920 , allloss: 4.2920, dt: 718.35ms, fracRes: 0.1511, norm(attn): 18.1250, norm(output): 0.4199, norm(x): 0.5410, norm(y): 0.9930, norm:0.4738, tok/sec: 182461.94, flops:191.55, batch-reuse:1
@ 2110 train 4.2962 , allloss: 4.2962, dt: 718.05ms, fracRes: 0.1500, norm(attn): 18.1250, norm(output): 0.4238, norm(x): 0.5457, norm(y): 0.9940, norm:0.4830, tok/sec: 182538.15, flops:191.63, batch-reuse:1
@ 2111 train 4.2769 , allloss: 4.2769, dt: 718.23ms, fracRes: 0.1488, norm(attn): 18.1250, norm(output): 0.4062, norm(x): 0.5243, norm(y): 0.9946, norm:0.4296, tok/sec: 182493.80, flops:191.58, batch-reuse:1
@ 2112 train 4.3209 , allloss: 4.3209, dt: 710.29ms, fracRes: 0.1487, norm(attn): 18.2500, norm(output): 0.4043, norm(x): 0.5241, norm(y): 0.9962, norm:0.3692, tok/sec: 184532.84, flops:193.72, batch-reuse:1
@ 2113 train 4.2956 , allloss: 4.2956, dt: 714.81ms, fracRes: 0.1496, norm(attn): 18.2500, norm(output): 0.4199, norm(x): 0.5401, norm(y): 0.9972, norm:0.4123, tok/sec: 183365.14, flops:192.50, batch-reuse:1
@ 2114 train 4.3410 , allloss: 4.3410, dt: 697.36ms, fracRes: 0.1492, norm(attn): 18.1250, norm(output): 0.4102, norm(x): 0.5317, norm(y): 0.9957, norm:0.4130, tok/sec: 187954.11, flops:197.31, batch-reuse:1
@ 2115 train 4.3390 , allloss: 4.3390, dt: 699.81ms, fracRes: 0.1497, norm(attn): 18.1250, norm(output): 0.4160, norm(x): 0.5379, norm(y): 0.9919, norm:0.4182, tok/sec: 187296.99, flops:196.62, batch-reuse:1
@ 2116 train 4.3693 , allloss: 4.3693, dt: 704.34ms, fracRes: 0.1496, norm(attn): 18.1250, norm(output): 0.4102, norm(x): 0.5330, norm(y): 0.9878, norm:0.3977, tok/sec: 186092.14, flops:195.36, batch-reuse:1
@ 2117 train 4.2824 , allloss: 4.2824, dt: 705.25ms, fracRes: 0.1503, norm(attn): 18.1250, norm(output): 0.4180, norm(x): 0.5353, norm(y): 0.9883, norm:0.4209, tok/sec: 185851.32, flops:195.11, batch-reuse:1
@ 2118 train 4.2309 , allloss: 4.2309, dt: 701.86ms, fracRes: 0.1505, norm(attn): 18.1250, norm(output): 0.4180, norm(x): 0.5402, norm(y): 0.9885, norm:0.4126, tok/sec: 186749.76, flops:196.05, batch-reuse:1
@ 2119 train 4.3877 , allloss: 4.3877, dt: 704.98ms, fracRes: 0.1499, norm(attn): 18.0000, norm(output): 0.4219, norm(x): 0.5409, norm(y): 0.9793, norm:0.4001, tok/sec: 185923.79, flops:195.18, batch-reuse:1
@ 2120 train 4.3090 , allloss: 4.3090, dt: 693.78ms, fracRes: 0.1500, norm(attn): 17.5000, norm(output): 0.4160, norm(x): 0.5350, norm(y): 0.9597, norm:0.4153, tok/sec: 188924.07, flops:198.33, batch-reuse:1
@ 2121 train 4.2752 , allloss: 4.2752, dt: 711.88ms, fracRes: 0.1500, norm(attn): 16.8750, norm(output): 0.4199, norm(x): 0.5388, norm(y): 0.9413, norm:0.4431, tok/sec: 184121.30, flops:193.29, batch-reuse:1
@ 2122 train 11.0602 , allloss: 11.0602, dt: 719.09ms, fracRes: 0.1510, norm(attn): 16.8750, norm(output): 6.9688, norm(x): 7.0563, norm(y): 0.9368, norm:34.6865, tok/sec: 182274.34, flops:191.35, batch-reuse:1
@ 2123 train 4.3797 , allloss: 4.3797, dt: 699.86ms, fracRes: 0.1510, norm(attn): 18.1250, norm(output): 0.4238, norm(x): 0.5399, norm(y): 0.9828, norm:0.6403, tok/sec: 187283.85, flops:196.61, batch-reuse:1
@ 2124 train 4.2591 , allloss: 4.2591, dt: 709.48ms, fracRes: 0.1512, norm(attn): 18.7500, norm(output): 0.4160, norm(x): 0.5322, norm(y): 0.9976, norm:0.4505, tok/sec: 184743.81, flops:193.94, batch-reuse:1
@ 2125 train 4.3786 , allloss: 4.3786, dt: 691.94ms, fracRes: 0.1507, norm(attn): 18.7500, norm(output): 0.4141, norm(x): 0.5268, norm(y): 0.9993, norm:0.5571, tok/sec: 189425.70, flops:198.86, batch-reuse:1
@ 2126 train 4.3322 , allloss: 4.3322, dt: 711.81ms, fracRes: 0.1501, norm(attn): 18.8750, norm(output): 0.4180, norm(x): 0.5386, norm(y): 0.9999, norm:0.4742, tok/sec: 184140.23, flops:193.31, batch-reuse:1
@ 2127 train 4.3667 , allloss: 4.3667, dt: 700.95ms, fracRes: 0.1510, norm(attn): 19.0000, norm(output): 0.4375, norm(x): 0.5538, norm(y): 1.0001, norm:0.4484, tok/sec: 186992.98, flops:196.31, batch-reuse:1
@ 2128 train 4.2330 , allloss: 4.2330, dt: 700.52ms, fracRes: 0.1515, norm(attn): 19.1250, norm(output): 0.4258, norm(x): 0.5429, norm(y): 1.0003, norm:0.4161, tok/sec: 187106.46, flops:196.42, batch-reuse:1
@ 2129 train 4.3506 , allloss: 4.3506, dt: 711.46ms, fracRes: 0.1516, norm(attn): 19.2500, norm(output): 0.4160, norm(x): 0.5356, norm(y): 1.0004, norm:0.4081, tok/sec: 184228.35, flops:193.40, batch-reuse:1
@ 2130 train 4.2258 , allloss: 4.2258, dt: 707.24ms, fracRes: 0.1515, norm(attn): 19.2500, norm(output): 0.4141, norm(x): 0.5331, norm(y): 1.0004, norm:0.4280, tok/sec: 185327.67, flops:194.56, batch-reuse:1
@ 2131 train 4.3226 , allloss: 4.3226, dt: 713.39ms, fracRes: 0.1515, norm(attn): 19.6250, norm(output): 0.4238, norm(x): 0.5425, norm(y): 1.0005, norm:0.4196, tok/sec: 183730.25, flops:192.88, batch-reuse:1
@ 2132 train 4.3077 , allloss: 4.3077, dt: 719.74ms, fracRes: 0.1520, norm(attn): 19.5000, norm(output): 0.4453, norm(x): 0.5627, norm(y): 1.0006, norm:0.4401, tok/sec: 182109.93, flops:191.18, batch-reuse:1
@ 2133 train 4.3128 , allloss: 4.3128, dt: 712.81ms, fracRes: 0.1508, norm(attn): 19.5000, norm(output): 0.4297, norm(x): 0.5449, norm(y): 1.0005, norm:0.4931, tok/sec: 183879.89, flops:193.04, batch-reuse:1
@ 2134 train 4.2722 , allloss: 4.2722, dt: 707.94ms, fracRes: 0.1504, norm(attn): 19.7500, norm(output): 0.4180, norm(x): 0.5356, norm(y): 1.0005, norm:0.4484, tok/sec: 185146.67, flops:194.37, batch-reuse:1
@ 2135 train 4.3680 , allloss: 4.3680, dt: 711.33ms, fracRes: 0.1511, norm(attn): 19.7500, norm(output): 0.4160, norm(x): 0.5364, norm(y): 1.0004, norm:0.4223, tok/sec: 184263.30, flops:193.44, batch-reuse:1
@ 2136 train 4.2664 , allloss: 4.2664, dt: 695.03ms, fracRes: 0.1511, norm(attn): 19.8750, norm(output): 0.4121, norm(x): 0.5328, norm(y): 1.0005, norm:0.4423, tok/sec: 188583.38, flops:197.98, batch-reuse:1
@ 2137 train 4.2412 , allloss: 4.2412, dt: 705.14ms, fracRes: 0.1512, norm(attn): 19.8750, norm(output): 0.4219, norm(x): 0.5393, norm(y): 1.0005, norm:0.4801, tok/sec: 185880.60, flops:195.14, batch-reuse:1
@ 2138 train 4.2817 , allloss: 4.2817, dt: 703.28ms, fracRes: 0.1510, norm(attn): 19.8750, norm(output): 0.4102, norm(x): 0.5319, norm(y): 1.0005, norm:0.4137, tok/sec: 186371.42, flops:195.65, batch-reuse:1
@ 2139 train 4.2794 , allloss: 4.2794, dt: 692.68ms, fracRes: 0.1514, norm(attn): 19.8750, norm(output): 0.4180, norm(x): 0.5399, norm(y): 1.0005, norm:0.4278, tok/sec: 189223.45, flops:198.65, batch-reuse:1
@ 2140 train 4.2909 , allloss: 4.2909, dt: 707.97ms, fracRes: 0.1509, norm(attn): 19.8750, norm(output): 0.4160, norm(x): 0.5411, norm(y): 1.0004, norm:0.4412, tok/sec: 185137.38, flops:194.36, batch-reuse:1
@ 2141 train 4.1985 , allloss: 4.1985, dt: 695.91ms, fracRes: 0.1505, norm(attn): 19.8750, norm(output): 0.4199, norm(x): 0.5370, norm(y): 1.0004, norm:0.4017, tok/sec: 188346.78, flops:197.73, batch-reuse:1
@ 2142 train 4.2315 , allloss: 4.2315, dt: 698.55ms, fracRes: 0.1495, norm(attn): 19.8750, norm(output): 0.4180, norm(x): 0.5350, norm(y): 1.0004, norm:0.4078, tok/sec: 187634.97, flops:196.98, batch-reuse:1
@ 2143 train 4.2882 , allloss: 4.2882, dt: 703.60ms, fracRes: 0.1497, norm(attn): 19.8750, norm(output): 0.4316, norm(x): 0.5473, norm(y): 1.0004, norm:0.4400, tok/sec: 186288.06, flops:195.57, batch-reuse:1
@ 2144 train 4.2655 , allloss: 4.2655, dt: 704.64ms, fracRes: 0.1504, norm(attn): 19.8750, norm(output): 0.4238, norm(x): 0.5406, norm(y): 1.0005, norm:0.4108, tok/sec: 186011.42, flops:195.28, batch-reuse:1
@ 2145 train 4.2110 , allloss: 4.2110, dt: 696.67ms, fracRes: 0.1511, norm(attn): 19.8750, norm(output): 0.4238, norm(x): 0.5404, norm(y): 1.0006, norm:0.4414, tok/sec: 188142.06, flops:197.51, batch-reuse:1
@ 2146 train 4.4976 , allloss: 4.4976, dt: 701.98ms, fracRes: 0.1539, norm(attn): 19.6250, norm(output): 0.4473, norm(x): 0.5680, norm(y): 1.0006, norm:0.5821, tok/sec: 186717.92, flops:196.02, batch-reuse:1
@ 2147 train 4.2314 , allloss: 4.2314, dt: 703.04ms, fracRes: 0.1511, norm(attn): 19.8750, norm(output): 0.4277, norm(x): 0.5430, norm(y): 1.0005, norm:0.4339, tok/sec: 186436.78, flops:195.72, batch-reuse:1
@ 2148 train 4.2666 , allloss: 4.2666, dt: 700.83ms, fracRes: 0.1504, norm(attn): 20.0000, norm(output): 0.4160, norm(x): 0.5348, norm(y): 1.0006, norm:0.3732, tok/sec: 187023.83, flops:196.34, batch-reuse:1
@ 2149 train 4.2792 , allloss: 4.2792, dt: 696.63ms, fracRes: 0.1488, norm(attn): 20.0000, norm(output): 0.4121, norm(x): 0.5263, norm(y): 1.0005, norm:0.4300, tok/sec: 188152.43, flops:197.52, batch-reuse:1
@ 2150 train 4.2784 , allloss: 4.2784, dt: 705.07ms, fracRes: 0.1492, norm(attn): 20.0000, norm(output): 0.4102, norm(x): 0.5252, norm(y): 1.0004, norm:0.4051, tok/sec: 185898.45, flops:195.16, batch-reuse:1
@ 2151 train 4.2401 , allloss: 4.2401, dt: 700.32ms, fracRes: 0.1498, norm(attn): 20.0000, norm(output): 0.4160, norm(x): 0.5314, norm(y): 1.0004, norm:0.3829, tok/sec: 187160.60, flops:196.48, batch-reuse:1
@ 2152 train 4.3391 , allloss: 4.3391, dt: 703.30ms, fracRes: 0.1499, norm(attn): 20.0000, norm(output): 0.4121, norm(x): 0.5320, norm(y): 1.0004, norm:0.3930, tok/sec: 186366.12, flops:195.65, batch-reuse:1
@ 2153 train 4.2496 , allloss: 4.2496, dt: 719.77ms, fracRes: 0.1496, norm(attn): 20.0000, norm(output): 0.4180, norm(x): 0.5357, norm(y): 1.0005, norm:0.4218, tok/sec: 182101.78, flops:191.17, batch-reuse:1
@ 2154 train 4.3194 , allloss: 4.3194, dt: 701.40ms, fracRes: 0.1501, norm(attn): 20.0000, norm(output): 0.4199, norm(x): 0.5389, norm(y): 1.0005, norm:0.4082, tok/sec: 186872.15, flops:196.18, batch-reuse:1
@ 2155 train 4.2640 , allloss: 4.2640, dt: 705.96ms, fracRes: 0.1499, norm(attn): 20.0000, norm(output): 0.4102, norm(x): 0.5297, norm(y): 1.0005, norm:0.3650, tok/sec: 185663.83, flops:194.91, batch-reuse:1
@ 2156 train 4.2687 , allloss: 4.2687, dt: 694.55ms, fracRes: 0.1498, norm(attn): 20.0000, norm(output): 0.4199, norm(x): 0.5329, norm(y): 1.0005, norm:0.4177, tok/sec: 188715.57, flops:198.11, batch-reuse:1
@ 2157 train 4.2807 , allloss: 4.2807, dt: 712.06ms, fracRes: 0.1507, norm(attn): 20.0000, norm(output): 0.4258, norm(x): 0.5435, norm(y): 1.0004, norm:0.4289, tok/sec: 184074.63, flops:193.24, batch-reuse:1
@ 2158 train 4.2821 , allloss: 4.2821, dt: 712.42ms, fracRes: 0.1501, norm(attn): 20.0000, norm(output): 0.4199, norm(x): 0.5361, norm(y): 1.0004, norm:0.3773, tok/sec: 183980.69, flops:193.14, batch-reuse:1
@ 2159 train 4.2319 , allloss: 4.2319, dt: 711.37ms, fracRes: 0.1501, norm(attn): 20.0000, norm(output): 0.4160, norm(x): 0.5341, norm(y): 1.0003, norm:0.3905, tok/sec: 184253.05, flops:193.43, batch-reuse:1
@ 2160 train 4.1897 , allloss: 4.1897, dt: 699.56ms, fracRes: 0.1511, norm(attn): 20.0000, norm(output): 0.4297, norm(x): 0.5480, norm(y): 1.0003, norm:0.4316, tok/sec: 187363.44, flops:196.69, batch-reuse:1
@ 2161 train 4.1868 , allloss: 4.1868, dt: 702.71ms, fracRes: 0.1517, norm(attn): 20.0000, norm(output): 0.4258, norm(x): 0.5452, norm(y): 1.0002, norm:0.5060, tok/sec: 186523.05, flops:195.81, batch-reuse:1
@ 2162 train 4.1982 , allloss: 4.1982, dt: 702.35ms, fracRes: 0.1503, norm(attn): 20.0000, norm(output): 0.4141, norm(x): 0.5306, norm(y): 1.0003, norm:0.4634, tok/sec: 186618.16, flops:195.91, batch-reuse:1
@ 2163 train 4.2830 , allloss: 4.2830, dt: 716.10ms, fracRes: 0.1506, norm(attn): 20.0000, norm(output): 0.4199, norm(x): 0.5351, norm(y): 1.0001, norm:0.3647, tok/sec: 183034.68, flops:192.15, batch-reuse:1
@ 2164 train 4.1718 , allloss: 4.1718, dt: 714.80ms, fracRes: 0.1499, norm(attn): 20.1250, norm(output): 0.4180, norm(x): 0.5364, norm(y): 1.0000, norm:0.4405, tok/sec: 183369.48, flops:192.50, batch-reuse:1
@ 2165 train 4.1955 , allloss: 4.1955, dt: 703.68ms, fracRes: 0.1491, norm(attn): 20.2500, norm(output): 0.4043, norm(x): 0.5191, norm(y): 1.0000, norm:0.3445, tok/sec: 186267.74, flops:195.54, batch-reuse:1
@ 2166 train 4.2291 , allloss: 4.2291, dt: 703.01ms, fracRes: 0.1497, norm(attn): 20.2500, norm(output): 0.4062, norm(x): 0.5241, norm(y): 1.0001, norm:0.4176, tok/sec: 186443.92, flops:195.73, batch-reuse:1
@ 2167 train 4.2622 , allloss: 4.2622, dt: 705.47ms, fracRes: 0.1507, norm(attn): 20.1250, norm(output): 0.4121, norm(x): 0.5332, norm(y): 1.0000, norm:0.4199, tok/sec: 185793.53, flops:195.05, batch-reuse:1
@ 2168 train 4.2886 , allloss: 4.2886, dt: 702.57ms, fracRes: 0.1503, norm(attn): 20.1250, norm(output): 0.4102, norm(x): 0.5295, norm(y): 1.0000, norm:0.3675, tok/sec: 186560.40, flops:195.85, batch-reuse:1
@ 2169 train 4.2795 , allloss: 4.2795, dt: 695.64ms, fracRes: 0.1496, norm(attn): 20.1250, norm(output): 0.4102, norm(x): 0.5270, norm(y): 0.9999, norm:0.4429, tok/sec: 188420.11, flops:197.80, batch-reuse:1
@ 2170 train 4.2951 , allloss: 4.2951, dt: 705.46ms, fracRes: 0.1504, norm(attn): 20.1250, norm(output): 0.4102, norm(x): 0.5248, norm(y): 1.0000, norm:0.3961, tok/sec: 185795.42, flops:195.05, batch-reuse:1
@ 2171 train 4.2980 , allloss: 4.2980, dt: 708.49ms, fracRes: 0.1500, norm(attn): 20.2500, norm(output): 0.4141, norm(x): 0.5312, norm(y): 1.0003, norm:0.3794, tok/sec: 185002.24, flops:194.22, batch-reuse:1
@ 2172 train 4.3421 , allloss: 4.3421, dt: 697.03ms, fracRes: 0.1498, norm(attn): 20.5000, norm(output): 0.4199, norm(x): 0.5373, norm(y): 1.0005, norm:0.4082, tok/sec: 188042.44, flops:197.41, batch-reuse:1
@ 2173 train 4.2415 , allloss: 4.2415, dt: 698.48ms, fracRes: 0.1498, norm(attn): 20.6250, norm(output): 0.4141, norm(x): 0.5354, norm(y): 1.0006, norm:0.3800, tok/sec: 187651.87, flops:197.00, batch-reuse:1
@ 2174 train 4.2644 , allloss: 4.2644, dt: 707.53ms, fracRes: 0.1512, norm(attn): 20.6250, norm(output): 0.4180, norm(x): 0.5365, norm(y): 1.0005, norm:0.3827, tok/sec: 185254.23, flops:194.48, batch-reuse:1
@ 2175 train 4.2306 , allloss: 4.2306, dt: 700.46ms, fracRes: 0.1511, norm(attn): 20.6250, norm(output): 0.4199, norm(x): 0.5365, norm(y): 1.0005, norm:0.3506, tok/sec: 187123.40, flops:196.44, batch-reuse:1
@ 2176 train 4.2536 , allloss: 4.2536, dt: 708.44ms, fracRes: 0.1510, norm(attn): 20.7500, norm(output): 0.4219, norm(x): 0.5410, norm(y): 1.0005, norm:0.4111, tok/sec: 185013.95, flops:194.23, batch-reuse:1
@ 2177 train 4.2747 , allloss: 4.2747, dt: 693.78ms, fracRes: 0.1506, norm(attn): 20.7500, norm(output): 0.4199, norm(x): 0.5385, norm(y): 1.0007, norm:0.3747, tok/sec: 188924.98, flops:198.33, batch-reuse:1
@ 2178 train 4.2809 , allloss: 4.2809, dt: 702.53ms, fracRes: 0.1511, norm(attn): 20.7500, norm(output): 0.4199, norm(x): 0.5397, norm(y): 1.0007, norm:0.3696, tok/sec: 186570.47, flops:195.86, batch-reuse:1
@ 2179 train 4.2631 , allloss: 4.2631, dt: 691.05ms, fracRes: 0.1514, norm(attn): 20.7500, norm(output): 0.4199, norm(x): 0.5404, norm(y): 1.0006, norm:0.4045, tok/sec: 189669.93, flops:199.12, batch-reuse:1
@ 2180 train 4.1982 , allloss: 4.1982, dt: 690.95ms, fracRes: 0.1516, norm(attn): 20.7500, norm(output): 0.4160, norm(x): 0.5386, norm(y): 1.0005, norm:0.3483, tok/sec: 189699.05, flops:199.15, batch-reuse:1
@ 2181 train 4.1861 , allloss: 4.1861, dt: 708.22ms, fracRes: 0.1523, norm(attn): 21.0000, norm(output): 0.4297, norm(x): 0.5528, norm(y): 1.0006, norm:0.4073, tok/sec: 185072.99, flops:194.29, batch-reuse:1
@ 2182 train 4.2257 , allloss: 4.2257, dt: 708.72ms, fracRes: 0.1530, norm(attn): 21.0000, norm(output): 0.4238, norm(x): 0.5424, norm(y): 1.0005, norm:0.3982, tok/sec: 184942.56, flops:194.15, batch-reuse:1
@ 2183 train 4.0855 , allloss: 4.0855, dt: 690.00ms, fracRes: 0.1511, norm(attn): 21.2500, norm(output): 0.4219, norm(x): 0.5380, norm(y): 1.0005, norm:0.3951, tok/sec: 189958.42, flops:199.42, batch-reuse:1
@ 2184 train 4.0033 , allloss: 4.0033, dt: 701.84ms, fracRes: 0.1513, norm(attn): 21.2500, norm(output): 0.4219, norm(x): 0.5426, norm(y): 1.0005, norm:0.4634, tok/sec: 186753.95, flops:196.05, batch-reuse:1
@ 2185 train 4.2010 , allloss: 4.2010, dt: 707.93ms, fracRes: 0.1521, norm(attn): 21.1250, norm(output): 0.4316, norm(x): 0.5482, norm(y): 1.0004, norm:0.4037, tok/sec: 185148.10, flops:194.37, batch-reuse:1
@ 2186 train 4.1527 , allloss: 4.1527, dt: 703.57ms, fracRes: 0.1511, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5325, norm(y): 1.0005, norm:0.3612, tok/sec: 186295.83, flops:195.57, batch-reuse:1
@ 2187 train 4.1307 , allloss: 4.1307, dt: 706.85ms, fracRes: 0.1513, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5317, norm(y): 1.0006, norm:0.3658, tok/sec: 185431.06, flops:194.67, batch-reuse:1
@ 2188 train 4.1444 , allloss: 4.1444, dt: 697.76ms, fracRes: 0.1511, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5334, norm(y): 1.0006, norm:0.3630, tok/sec: 187847.57, flops:197.20, batch-reuse:1
@ 2189 train 4.1664 , allloss: 4.1664, dt: 694.14ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4160, norm(x): 0.5369, norm(y): 1.0006, norm:0.3678, tok/sec: 188826.15, flops:198.23, batch-reuse:1
@ 2190 train 4.0033 , allloss: 4.0033, dt: 696.98ms, fracRes: 0.1543, norm(attn): 21.2500, norm(output): 0.4277, norm(x): 0.5485, norm(y): 1.0005, norm:0.5660, tok/sec: 188056.72, flops:197.42, batch-reuse:1
@ 2191 train 4.1647 , allloss: 4.1647, dt: 703.54ms, fracRes: 0.1517, norm(attn): 21.3750, norm(output): 0.4141, norm(x): 0.5371, norm(y): 1.0005, norm:0.3699, tok/sec: 186304.16, flops:195.58, batch-reuse:1
@ 2192 train 4.1319 , allloss: 4.1319, dt: 696.98ms, fracRes: 0.1510, norm(attn): 21.3750, norm(output): 0.4102, norm(x): 0.5311, norm(y): 1.0005, norm:0.4357, tok/sec: 188057.69, flops:197.42, batch-reuse:1
@ 2193 train 4.0965 , allloss: 4.0965, dt: 697.00ms, fracRes: 0.1519, norm(attn): 21.2500, norm(output): 0.4199, norm(x): 0.5410, norm(y): 1.0005, norm:0.3613, tok/sec: 188050.55, flops:197.42, batch-reuse:1
@ 2194 train 4.2576 , allloss: 4.2576, dt: 696.95ms, fracRes: 0.1516, norm(attn): 21.3750, norm(output): 0.4238, norm(x): 0.5441, norm(y): 1.0006, norm:0.3786, tok/sec: 188065.99, flops:197.43, batch-reuse:1
@ 2195 train 4.1674 , allloss: 4.1674, dt: 712.36ms, fracRes: 0.1523, norm(attn): 21.2500, norm(output): 0.4219, norm(x): 0.5438, norm(y): 1.0005, norm:0.4375, tok/sec: 183997.68, flops:193.16, batch-reuse:1
@ 2196 train 4.2438 , allloss: 4.2438, dt: 709.26ms, fracRes: 0.1513, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5340, norm(y): 1.0005, norm:0.3961, tok/sec: 184800.26, flops:194.00, batch-reuse:1
@ 2197 train 4.0852 , allloss: 4.0852, dt: 706.69ms, fracRes: 0.1523, norm(attn): 21.2500, norm(output): 0.4258, norm(x): 0.5437, norm(y): 1.0005, norm:0.3678, tok/sec: 185473.54, flops:194.71, batch-reuse:1
@ 2198 train 4.1377 , allloss: 4.1377, dt: 695.49ms, fracRes: 0.1513, norm(attn): 21.3750, norm(output): 0.4160, norm(x): 0.5365, norm(y): 1.0004, norm:0.3930, tok/sec: 188461.06, flops:197.85, batch-reuse:1
@ 2199 train 4.2301 , allloss: 4.2301, dt: 697.66ms, fracRes: 0.1517, norm(attn): 21.2500, norm(output): 0.4238, norm(x): 0.5438, norm(y): 1.0003, norm:0.3785, tok/sec: 187872.92, flops:197.23, batch-reuse:1
@ 2200 train 4.1209 , allloss: 4.1209, dt: 702.83ms, fracRes: 0.1517, norm(attn): 21.2500, norm(output): 0.4180, norm(x): 0.5381, norm(y): 1.0004, norm:0.3910, tok/sec: 186491.17, flops:195.78, batch-reuse:1
@ 2201 train 4.1718 , allloss: 4.1718, dt: 705.08ms, fracRes: 0.1516, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5316, norm(y): 1.0004, norm:0.4069, tok/sec: 185896.88, flops:195.15, batch-reuse:1
@ 2202 train 4.2112 , allloss: 4.2112, dt: 707.51ms, fracRes: 0.1520, norm(attn): 21.2500, norm(output): 0.4277, norm(x): 0.5483, norm(y): 1.0004, norm:0.4333, tok/sec: 185258.04, flops:194.48, batch-reuse:1
@ 2203 train 4.1702 , allloss: 4.1702, dt: 690.11ms, fracRes: 0.1508, norm(attn): 21.3750, norm(output): 0.4141, norm(x): 0.5352, norm(y): 1.0005, norm:0.3855, tok/sec: 189929.28, flops:199.39, batch-reuse:1
@ 2204 train 4.2160 , allloss: 4.2160, dt: 704.89ms, fracRes: 0.1506, norm(attn): 21.3750, norm(output): 0.4160, norm(x): 0.5362, norm(y): 1.0005, norm:0.4298, tok/sec: 185946.49, flops:195.21, batch-reuse:1
@ 2205 train 4.1645 , allloss: 4.1645, dt: 716.97ms, fracRes: 0.1514, norm(attn): 21.2500, norm(output): 0.4238, norm(x): 0.5456, norm(y): 1.0003, norm:0.5089, tok/sec: 182813.92, flops:191.92, batch-reuse:1
@ 2206 train 4.0999 , allloss: 4.0999, dt: 716.44ms, fracRes: 0.1513, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5277, norm(y): 1.0003, norm:0.4061, tok/sec: 182948.30, flops:192.06, batch-reuse:1
@ 2207 train 4.1229 , allloss: 4.1229, dt: 716.53ms, fracRes: 0.1520, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5311, norm(y): 1.0002, norm:0.4173, tok/sec: 182925.11, flops:192.04, batch-reuse:1
@ 2208 train 4.1870 , allloss: 4.1870, dt: 717.09ms, fracRes: 0.1523, norm(attn): 21.3750, norm(output): 0.4199, norm(x): 0.5406, norm(y): 1.0002, norm:0.3833, tok/sec: 182782.37, flops:191.89, batch-reuse:1
@ 2209 train 4.0994 , allloss: 4.0994, dt: 719.79ms, fracRes: 0.1509, norm(attn): 21.2500, norm(output): 0.4062, norm(x): 0.5259, norm(y): 1.0001, norm:0.4036, tok/sec: 182097.38, flops:191.17, batch-reuse:1
@ 2210 train 4.0361 , allloss: 4.0361, dt: 719.36ms, fracRes: 0.1518, norm(attn): 21.3750, norm(output): 0.4102, norm(x): 0.5301, norm(y): 1.0002, norm:0.3946, tok/sec: 182205.23, flops:191.28, batch-reuse:1
@ 2211 train 4.1417 , allloss: 4.1417, dt: 708.31ms, fracRes: 0.1507, norm(attn): 21.3750, norm(output): 0.4141, norm(x): 0.5325, norm(y): 1.0002, norm:0.4173, tok/sec: 185049.45, flops:194.27, batch-reuse:1
@ 2212 train 4.0522 , allloss: 4.0522, dt: 697.12ms, fracRes: 0.1496, norm(attn): 21.3750, norm(output): 0.4102, norm(x): 0.5276, norm(y): 1.0002, norm:0.3623, tok/sec: 188019.49, flops:197.38, batch-reuse:1
@ 2213 train 4.3896 , allloss: 4.3896, dt: 703.94ms, fracRes: 0.1529, norm(attn): 21.2500, norm(output): 0.4277, norm(x): 0.5503, norm(y): 1.0003, norm:0.5183, tok/sec: 186198.53, flops:195.47, batch-reuse:1
@ 2214 train 4.2533 , allloss: 4.2533, dt: 695.67ms, fracRes: 0.1497, norm(attn): 21.3750, norm(output): 0.4004, norm(x): 0.5216, norm(y): 1.0004, norm:0.4517, tok/sec: 188411.20, flops:197.79, batch-reuse:1
@ 2215 train 4.1330 , allloss: 4.1330, dt: 703.15ms, fracRes: 0.1499, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5269, norm(y): 1.0002, norm:0.4776, tok/sec: 186406.18, flops:195.69, batch-reuse:1
@ 2216 train 4.2015 , allloss: 4.2015, dt: 708.54ms, fracRes: 0.1487, norm(attn): 21.3750, norm(output): 0.4121, norm(x): 0.5323, norm(y): 1.0000, norm:0.5049, tok/sec: 184989.67, flops:194.20, batch-reuse:1
@ 2217 train 4.1825 , allloss: 4.1825, dt: 702.65ms, fracRes: 0.1481, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5240, norm(y): 1.0001, norm:0.3734, tok/sec: 186538.50, flops:195.83, batch-reuse:1
@ 2218 train 4.0990 , allloss: 4.0990, dt: 705.21ms, fracRes: 0.1492, norm(attn): 21.3750, norm(output): 0.4062, norm(x): 0.5247, norm(y): 1.0002, norm:0.4095, tok/sec: 185863.13, flops:195.12, batch-reuse:1
@ 2219 train 4.1995 , allloss: 4.1995, dt: 703.96ms, fracRes: 0.1499, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5233, norm(y): 1.0002, norm:0.4220, tok/sec: 186191.21, flops:195.46, batch-reuse:1
@ 2220 train 4.2417 , allloss: 4.2417, dt: 708.04ms, fracRes: 0.1507, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5350, norm(y): 1.0000, norm:0.4710, tok/sec: 185119.36, flops:194.34, batch-reuse:1
@ 2221 train 4.0334 , allloss: 4.0334, dt: 702.40ms, fracRes: 0.1511, norm(attn): 21.3750, norm(output): 0.4199, norm(x): 0.5405, norm(y): 1.0000, norm:0.4524, tok/sec: 186605.55, flops:195.90, batch-reuse:1
@ 2222 train 4.1731 , allloss: 4.1731, dt: 715.46ms, fracRes: 0.1521, norm(attn): 21.2500, norm(output): 0.4160, norm(x): 0.5365, norm(y): 1.0001, norm:0.4189, tok/sec: 183199.54, flops:192.32, batch-reuse:1
@ 2223 train 4.1317 , allloss: 4.1317, dt: 711.85ms, fracRes: 0.1517, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5274, norm(y): 1.0000, norm:0.5120, tok/sec: 184128.45, flops:193.30, batch-reuse:1
@ 2224 train 4.1329 , allloss: 4.1329, dt: 718.63ms, fracRes: 0.1535, norm(attn): 21.2500, norm(output): 0.4219, norm(x): 0.5438, norm(y): 1.0000, norm:0.4620, tok/sec: 182391.78, flops:191.48, batch-reuse:1
@ 2225 train 4.2582 , allloss: 4.2582, dt: 706.42ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5300, norm(y): 1.0000, norm:0.4545, tok/sec: 185543.52, flops:194.78, batch-reuse:1
@ 2226 train 4.2094 , allloss: 4.2094, dt: 705.72ms, fracRes: 0.1513, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5295, norm(y): 1.0000, norm:0.4183, tok/sec: 185729.26, flops:194.98, batch-reuse:1
@ 2227 train 4.1442 , allloss: 4.1442, dt: 694.77ms, fracRes: 0.1522, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5340, norm(y): 1.0001, norm:0.3857, tok/sec: 188654.05, flops:198.05, batch-reuse:1
@ 2228 train 4.1333 , allloss: 4.1333, dt: 698.98ms, fracRes: 0.1519, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5289, norm(y): 0.9999, norm:0.4624, tok/sec: 187518.87, flops:196.86, batch-reuse:1
@ 2229 train 4.3204 , allloss: 4.3204, dt: 695.22ms, fracRes: 0.1526, norm(attn): 21.0000, norm(output): 0.4199, norm(x): 0.5405, norm(y): 0.9998, norm:0.5663, tok/sec: 188534.29, flops:197.92, batch-reuse:1
@ 2230 train 4.2785 , allloss: 4.2785, dt: 712.74ms, fracRes: 0.1524, norm(attn): 21.2500, norm(output): 0.4180, norm(x): 0.5397, norm(y): 0.9997, norm:0.4015, tok/sec: 183899.14, flops:193.06, batch-reuse:1
@ 2231 train 4.3989 , allloss: 4.3989, dt: 702.99ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5364, norm(y): 0.9998, norm:0.4180, tok/sec: 186448.35, flops:195.73, batch-reuse:1
@ 2232 train 4.3484 , allloss: 4.3484, dt: 711.65ms, fracRes: 0.1514, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5261, norm(y): 0.9998, norm:0.4107, tok/sec: 184179.65, flops:193.35, batch-reuse:1
@ 2233 train 4.2822 , allloss: 4.2822, dt: 712.73ms, fracRes: 0.1516, norm(attn): 21.1250, norm(output): 0.4121, norm(x): 0.5328, norm(y): 0.9996, norm:0.3871, tok/sec: 183900.74, flops:193.06, batch-reuse:1
@ 2234 train 4.3309 , allloss: 4.3309, dt: 706.83ms, fracRes: 0.1535, norm(attn): 21.2500, norm(output): 0.4258, norm(x): 0.5507, norm(y): 0.9996, norm:0.5091, tok/sec: 185436.69, flops:194.67, batch-reuse:1
@ 2235 train 4.2765 , allloss: 4.2765, dt: 705.92ms, fracRes: 0.1528, norm(attn): 20.8750, norm(output): 0.4219, norm(x): 0.5414, norm(y): 0.9993, norm:0.4054, tok/sec: 185674.43, flops:194.92, batch-reuse:1
@ 2236 train 4.2442 , allloss: 4.2442, dt: 708.24ms, fracRes: 0.1535, norm(attn): 20.7500, norm(output): 0.4199, norm(x): 0.5430, norm(y): 0.9993, norm:0.4494, tok/sec: 185068.07, flops:194.28, batch-reuse:1
@ 2237 train 4.2990 , allloss: 4.2990, dt: 709.63ms, fracRes: 0.1527, norm(attn): 20.7500, norm(output): 0.4102, norm(x): 0.5318, norm(y): 0.9993, norm:0.4355, tok/sec: 184704.76, flops:193.90, batch-reuse:1
@ 2238 train 4.2446 , allloss: 4.2446, dt: 717.65ms, fracRes: 0.1524, norm(attn): 20.7500, norm(output): 0.4082, norm(x): 0.5300, norm(y): 0.9992, norm:0.3627, tok/sec: 182641.49, flops:191.74, batch-reuse:1
@ 2239 train 4.2449 , allloss: 4.2449, dt: 709.17ms, fracRes: 0.1516, norm(attn): 20.7500, norm(output): 0.4082, norm(x): 0.5297, norm(y): 0.9992, norm:0.4075, tok/sec: 184823.93, flops:194.03, batch-reuse:1
@ 2240 train 4.3253 , allloss: 4.3253, dt: 696.55ms, fracRes: 0.1513, norm(attn): 20.8750, norm(output): 0.4062, norm(x): 0.5284, norm(y): 0.9994, norm:0.3859, tok/sec: 188173.43, flops:197.54, batch-reuse:1
@ 2241 train 4.3484 , allloss: 4.3484, dt: 709.59ms, fracRes: 0.1520, norm(attn): 20.7500, norm(output): 0.4082, norm(x): 0.5338, norm(y): 0.9993, norm:0.3903, tok/sec: 184715.81, flops:193.91, batch-reuse:1
@ 2242 train 4.3068 , allloss: 4.3068, dt: 708.07ms, fracRes: 0.1513, norm(attn): 20.7500, norm(output): 0.4102, norm(x): 0.5295, norm(y): 0.9992, norm:0.4980, tok/sec: 185111.13, flops:194.33, batch-reuse:1
@ 2243 train 4.2970 , allloss: 4.2970, dt: 714.45ms, fracRes: 0.1520, norm(attn): 20.7500, norm(output): 0.4082, norm(x): 0.5290, norm(y): 0.9992, norm:0.5072, tok/sec: 183457.41, flops:192.59, batch-reuse:1
@ 2244 train 4.3466 , allloss: 4.3466, dt: 705.90ms, fracRes: 0.1510, norm(attn): 20.7500, norm(output): 0.4160, norm(x): 0.5353, norm(y): 0.9989, norm:0.4702, tok/sec: 185681.46, flops:194.93, batch-reuse:1
@ 2245 train 4.2615 , allloss: 4.2615, dt: 703.35ms, fracRes: 0.1515, norm(attn): 20.7500, norm(output): 0.4062, norm(x): 0.5289, norm(y): 0.9989, norm:0.3714, tok/sec: 186354.55, flops:195.64, batch-reuse:1
@ 2246 train 4.2481 , allloss: 4.2481, dt: 723.38ms, fracRes: 0.1519, norm(attn): 20.7500, norm(output): 0.4102, norm(x): 0.5293, norm(y): 0.9989, norm:0.4051, tok/sec: 181192.68, flops:190.22, batch-reuse:1
@ 2247 train 4.2943 , allloss: 4.2943, dt: 719.80ms, fracRes: 0.1510, norm(attn): 20.7500, norm(output): 0.4121, norm(x): 0.5284, norm(y): 0.9990, norm:0.3569, tok/sec: 182094.00, flops:191.16, batch-reuse:1
@ 2248 train 4.3523 , allloss: 4.3523, dt: 717.91ms, fracRes: 0.1503, norm(attn): 20.7500, norm(output): 0.4062, norm(x): 0.5235, norm(y): 0.9989, norm:0.3767, tok/sec: 182573.98, flops:191.67, batch-reuse:1
@ 2249 train 4.2169 , allloss: 4.2169, dt: 717.72ms, fracRes: 0.1501, norm(attn): 20.7500, norm(output): 0.4043, norm(x): 0.5224, norm(y): 0.9988, norm:0.3669, tok/sec: 182622.56, flops:191.72, batch-reuse:1
@ 2250 train 4.3293 , allloss: 4.3293, dt: 712.40ms, fracRes: 0.1510, norm(attn): 20.8750, norm(output): 0.4102, norm(x): 0.5295, norm(y): 0.9987, norm:0.4073, tok/sec: 183987.15, flops:193.15, batch-reuse:1
@ 2251 train 4.2627 , allloss: 4.2627, dt: 706.34ms, fracRes: 0.1506, norm(attn): 21.1250, norm(output): 0.4141, norm(x): 0.5360, norm(y): 0.9990, norm:0.4907, tok/sec: 185564.13, flops:194.81, batch-reuse:1
@ 2252 train 4.2415 , allloss: 4.2415, dt: 697.05ms, fracRes: 0.1515, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5252, norm(y): 0.9991, norm:0.4468, tok/sec: 188038.59, flops:197.40, batch-reuse:1
@ 2253 train 4.2574 , allloss: 4.2574, dt: 708.40ms, fracRes: 0.1504, norm(attn): 21.2500, norm(output): 0.4004, norm(x): 0.5209, norm(y): 0.9993, norm:0.3514, tok/sec: 185025.66, flops:194.24, batch-reuse:1
@ 2254 train 4.3603 , allloss: 4.3603, dt: 700.92ms, fracRes: 0.1500, norm(attn): 21.3750, norm(output): 0.4004, norm(x): 0.5176, norm(y): 0.9991, norm:0.4907, tok/sec: 186999.72, flops:196.31, batch-reuse:1
@ 2255 train 4.2747 , allloss: 4.2747, dt: 705.40ms, fracRes: 0.1501, norm(attn): 21.6250, norm(output): 0.4043, norm(x): 0.5236, norm(y): 0.9991, norm:0.4325, tok/sec: 185812.75, flops:195.07, batch-reuse:1
@ 2256 train 4.3212 , allloss: 4.3212, dt: 693.30ms, fracRes: 0.1515, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5349, norm(y): 0.9992, norm:0.4961, tok/sec: 189056.09, flops:198.47, batch-reuse:1
@ 2257 train 4.2955 , allloss: 4.2955, dt: 719.41ms, fracRes: 0.1516, norm(attn): 21.3750, norm(output): 0.4141, norm(x): 0.5365, norm(y): 0.9992, norm:0.4441, tok/sec: 182194.00, flops:191.27, batch-reuse:1
@ 2258 train 4.2433 , allloss: 4.2433, dt: 720.43ms, fracRes: 0.1518, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5308, norm(y): 0.9994, norm:0.4488, tok/sec: 181936.18, flops:191.00, batch-reuse:1
@ 2259 train 4.3768 , allloss: 4.3768, dt: 718.67ms, fracRes: 0.1519, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5284, norm(y): 0.9992, norm:0.4738, tok/sec: 182380.64, flops:191.46, batch-reuse:1
@ 2260 train 4.2566 , allloss: 4.2566, dt: 695.33ms, fracRes: 0.1519, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5297, norm(y): 0.9990, norm:0.4219, tok/sec: 188504.43, flops:197.89, batch-reuse:1
@ 2261 train 4.3043 , allloss: 4.3043, dt: 707.98ms, fracRes: 0.1522, norm(attn): 21.2500, norm(output): 0.4160, norm(x): 0.5359, norm(y): 0.9988, norm:0.4896, tok/sec: 185135.32, flops:194.36, batch-reuse:1
@ 2262 train 4.2424 , allloss: 4.2424, dt: 698.54ms, fracRes: 0.1520, norm(attn): 21.3750, norm(output): 0.4062, norm(x): 0.5278, norm(y): 0.9990, norm:0.4407, tok/sec: 187635.93, flops:196.98, batch-reuse:1
@ 2263 train 4.3739 , allloss: 4.3739, dt: 704.78ms, fracRes: 0.1516, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5285, norm(y): 0.9990, norm:0.4278, tok/sec: 185977.00, flops:195.24, batch-reuse:1
@ 2264 train 4.2819 , allloss: 4.2819, dt: 706.99ms, fracRes: 0.1526, norm(attn): 21.3750, norm(output): 0.4180, norm(x): 0.5375, norm(y): 0.9989, norm:0.4498, tok/sec: 185393.29, flops:194.63, batch-reuse:1
@ 2265 train 4.2628 , allloss: 4.2628, dt: 705.61ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5305, norm(y): 0.9988, norm:0.4122, tok/sec: 185757.75, flops:195.01, batch-reuse:1
@ 2266 train 4.1691 , allloss: 4.1691, dt: 706.72ms, fracRes: 0.1514, norm(attn): 21.3750, norm(output): 0.3984, norm(x): 0.5200, norm(y): 0.9990, norm:0.4422, tok/sec: 185464.28, flops:194.70, batch-reuse:1
@ 2267 train 4.2824 , allloss: 4.2824, dt: 717.79ms, fracRes: 0.1530, norm(attn): 21.1250, norm(output): 0.4062, norm(x): 0.5304, norm(y): 0.9991, norm:0.4517, tok/sec: 182605.03, flops:191.70, batch-reuse:1
@ 2268 train 4.3078 , allloss: 4.3078, dt: 711.58ms, fracRes: 0.1538, norm(attn): 21.2500, norm(output): 0.4141, norm(x): 0.5381, norm(y): 0.9991, norm:0.3840, tok/sec: 184198.23, flops:193.37, batch-reuse:1
@ 2269 train 4.3407 , allloss: 4.3407, dt: 706.99ms, fracRes: 0.1526, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5359, norm(y): 0.9990, norm:0.4696, tok/sec: 185393.42, flops:194.63, batch-reuse:1
@ 2270 train 4.3754 , allloss: 4.3754, dt: 693.43ms, fracRes: 0.1523, norm(attn): 21.1250, norm(output): 0.4043, norm(x): 0.5295, norm(y): 0.9993, norm:0.4259, tok/sec: 189020.85, flops:198.43, batch-reuse:1
@ 2271 train 4.2493 , allloss: 4.2493, dt: 701.93ms, fracRes: 0.1536, norm(attn): 21.1250, norm(output): 0.4082, norm(x): 0.5327, norm(y): 0.9991, norm:0.4375, tok/sec: 186731.62, flops:196.03, batch-reuse:1
@ 2272 train 4.2202 , allloss: 4.2202, dt: 706.87ms, fracRes: 0.1527, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5352, norm(y): 0.9989, norm:0.4420, tok/sec: 185425.00, flops:194.66, batch-reuse:1
@ 2273 train 4.3412 , allloss: 4.3412, dt: 693.32ms, fracRes: 0.1522, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5337, norm(y): 0.9987, norm:0.5052, tok/sec: 189048.80, flops:198.46, batch-reuse:1
@ 2274 train 4.2489 , allloss: 4.2489, dt: 706.18ms, fracRes: 0.1518, norm(attn): 21.3750, norm(output): 0.4082, norm(x): 0.5260, norm(y): 0.9988, norm:0.4181, tok/sec: 185607.17, flops:194.85, batch-reuse:1
@ 2275 train 4.2795 , allloss: 4.2795, dt: 707.32ms, fracRes: 0.1522, norm(attn): 21.3750, norm(output): 0.4043, norm(x): 0.5237, norm(y): 0.9989, norm:0.4453, tok/sec: 185309.05, flops:194.54, batch-reuse:1
@ 2276 train 4.3669 , allloss: 4.3669, dt: 701.73ms, fracRes: 0.1511, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5256, norm(y): 0.9990, norm:0.4076, tok/sec: 186784.28, flops:196.09, batch-reuse:1
@ 2277 train 4.2866 , allloss: 4.2866, dt: 707.87ms, fracRes: 0.1510, norm(attn): 21.2500, norm(output): 0.4082, norm(x): 0.5296, norm(y): 0.9988, norm:0.4173, tok/sec: 185165.00, flops:194.39, batch-reuse:1
@ 2278 train 4.2823 , allloss: 4.2823, dt: 710.07ms, fracRes: 0.1522, norm(attn): 21.2500, norm(output): 0.4180, norm(x): 0.5395, norm(y): 0.9983, norm:0.4096, tok/sec: 184591.52, flops:193.78, batch-reuse:1
@ 2279 train 4.2598 , allloss: 4.2598, dt: 707.11ms, fracRes: 0.1514, norm(attn): 21.1250, norm(output): 0.4062, norm(x): 0.5273, norm(y): 0.9983, norm:0.4054, tok/sec: 185362.85, flops:194.59, batch-reuse:1
@ 2280 train 4.2576 , allloss: 4.2576, dt: 704.88ms, fracRes: 0.1512, norm(attn): 21.1250, norm(output): 0.3965, norm(x): 0.5210, norm(y): 0.9985, norm:0.3861, tok/sec: 185948.88, flops:195.21, batch-reuse:1
@ 2281 train 4.1871 , allloss: 4.1871, dt: 702.45ms, fracRes: 0.1522, norm(attn): 21.0000, norm(output): 0.4004, norm(x): 0.5249, norm(y): 0.9986, norm:0.4588, tok/sec: 186593.14, flops:195.89, batch-reuse:1
@ 2282 train 4.4090 , allloss: 4.4090, dt: 707.79ms, fracRes: 0.1525, norm(attn): 21.2500, norm(output): 0.4102, norm(x): 0.5318, norm(y): 0.9988, norm:0.4940, tok/sec: 185186.02, flops:194.41, batch-reuse:1
@ 2283 train 4.2178 , allloss: 4.2178, dt: 716.55ms, fracRes: 0.1529, norm(attn): 21.2500, norm(output): 0.4121, norm(x): 0.5360, norm(y): 0.9987, norm:0.4391, tok/sec: 182920.06, flops:192.03, batch-reuse:1
@ 2284 train 4.2031 , allloss: 4.2031, dt: 707.17ms, fracRes: 0.1538, norm(attn): 21.1250, norm(output): 0.4180, norm(x): 0.5410, norm(y): 0.9987, norm:0.4513, tok/sec: 185348.41, flops:194.58, batch-reuse:1
@ 2285 train 4.2365 , allloss: 4.2365, dt: 700.04ms, fracRes: 0.1529, norm(attn): 20.8750, norm(output): 0.4082, norm(x): 0.5283, norm(y): 0.9985, norm:0.4506, tok/sec: 187235.37, flops:196.56, batch-reuse:1
@ 2286 train 4.3002 , allloss: 4.3002, dt: 698.92ms, fracRes: 0.1522, norm(attn): 21.0000, norm(output): 0.4004, norm(x): 0.5203, norm(y): 0.9985, norm:0.3845, tok/sec: 187534.54, flops:196.87, batch-reuse:1
@ 2287 train 4.3439 , allloss: 4.3439, dt: 690.75ms, fracRes: 0.1517, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5242, norm(y): 0.9987, norm:0.4574, tok/sec: 189752.41, flops:199.20, batch-reuse:1
@ 2288 train 4.3809 , allloss: 4.3809, dt: 758.59ms, fracRes: 0.1515, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5269, norm(y): 0.9989, norm:0.4694, tok/sec: 172783.02, flops:181.39, batch-reuse:1
@ 2289 train 4.2476 , allloss: 4.2476, dt: 711.49ms, fracRes: 0.1512, norm(attn): 21.2500, norm(output): 0.4004, norm(x): 0.5250, norm(y): 0.9988, norm:0.4623, tok/sec: 184221.13, flops:193.40, batch-reuse:1
@ 2290 train 4.1623 , allloss: 4.1623, dt: 714.28ms, fracRes: 0.1519, norm(attn): 21.2500, norm(output): 0.3984, norm(x): 0.5210, norm(y): 0.9986, norm:0.4272, tok/sec: 183501.13, flops:192.64, batch-reuse:1
@ 2291 train 4.3801 , allloss: 4.3801, dt: 710.22ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5285, norm(y): 0.9989, norm:0.3753, tok/sec: 184550.50, flops:193.74, batch-reuse:1
@ 2292 train 4.2244 , allloss: 4.2244, dt: 708.67ms, fracRes: 0.1522, norm(attn): 21.3750, norm(output): 0.4043, norm(x): 0.5271, norm(y): 0.9987, norm:0.4660, tok/sec: 184954.07, flops:194.17, batch-reuse:1
@ 2293 train 4.3349 , allloss: 4.3349, dt: 713.31ms, fracRes: 0.1524, norm(attn): 21.2500, norm(output): 0.4043, norm(x): 0.5247, norm(y): 0.9986, norm:0.4175, tok/sec: 183751.01, flops:192.90, batch-reuse:1
@ 2294 train 4.2868 , allloss: 4.2868, dt: 711.92ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.4004, norm(x): 0.5217, norm(y): 0.9984, norm:0.3985, tok/sec: 184110.08, flops:193.28, batch-reuse:1
@ 2295 train 4.2659 , allloss: 4.2659, dt: 715.86ms, fracRes: 0.1515, norm(attn): 21.1250, norm(output): 0.4062, norm(x): 0.5296, norm(y): 0.9982, norm:0.4141, tok/sec: 183096.98, flops:192.22, batch-reuse:1
@ 2296 train 4.2305 , allloss: 4.2305, dt: 703.78ms, fracRes: 0.1512, norm(attn): 21.2500, norm(output): 0.4004, norm(x): 0.5240, norm(y): 0.9982, norm:0.3438, tok/sec: 186240.04, flops:195.52, batch-reuse:1
@ 2297 train 4.2283 , allloss: 4.2283, dt: 684.39ms, fracRes: 0.1506, norm(attn): 21.3750, norm(output): 0.3926, norm(x): 0.5166, norm(y): 0.9982, norm:0.4062, tok/sec: 191515.31, flops:201.05, batch-reuse:1
@ 2298 train 4.2533 , allloss: 4.2533, dt: 707.22ms, fracRes: 0.1518, norm(attn): 21.2500, norm(output): 0.3965, norm(x): 0.5211, norm(y): 0.9981, norm:0.3613, tok/sec: 185335.35, flops:194.57, batch-reuse:1
@ 2299 train 4.2428 , allloss: 4.2428, dt: 708.51ms, fracRes: 0.1526, norm(attn): 20.8750, norm(output): 0.4082, norm(x): 0.5324, norm(y): 0.9978, norm:0.3909, tok/sec: 184996.83, flops:194.21, batch-reuse:1
@ 2300 train 4.1218 , allloss: 4.1218, dt: 702.00ms, fracRes: 0.1528, norm(attn): 20.6250, norm(output): 0.4102, norm(x): 0.5342, norm(y): 0.9966, norm:0.3620, tok/sec: 186711.77, flops:196.01, batch-reuse:1
@ 2301 train 4.2341 , allloss: 4.2341, dt: 708.10ms, fracRes: 0.1516, norm(attn): 20.7500, norm(output): 0.4043, norm(x): 0.5248, norm(y): 0.9949, norm:0.3619, tok/sec: 185104.90, flops:194.32, batch-reuse:1
@ 2302 train 4.2462 , allloss: 4.2462, dt: 696.04ms, fracRes: 0.1521, norm(attn): 20.7500, norm(output): 0.3984, norm(x): 0.5204, norm(y): 0.9921, norm:0.3583, tok/sec: 188312.07, flops:197.69, batch-reuse:1
@ 2303 train 4.3263 , allloss: 4.3263, dt: 696.05ms, fracRes: 0.1518, norm(attn): 20.3750, norm(output): 0.3926, norm(x): 0.5179, norm(y): 0.9891, norm:0.3827, tok/sec: 188308.33, flops:197.69, batch-reuse:1
@ 2304 train 4.2611 , allloss: 4.2611, dt: 698.73ms, fracRes: 0.1529, norm(attn): 20.2500, norm(output): 0.3984, norm(x): 0.5261, norm(y): 0.9912, norm:0.4086, tok/sec: 187585.67, flops:196.93, batch-reuse:1
@ 2305 train 4.2251 , allloss: 4.2251, dt: 718.68ms, fracRes: 0.1524, norm(attn): 20.1250, norm(output): 0.3965, norm(x): 0.5217, norm(y): 0.9938, norm:0.3463, tok/sec: 182379.50, flops:191.46, batch-reuse:1
@ 2306 train 4.2524 , allloss: 4.2524, dt: 715.37ms, fracRes: 0.1537, norm(attn): 20.1250, norm(output): 0.4043, norm(x): 0.5309, norm(y): 0.9944, norm:0.4013, tok/sec: 183223.48, flops:192.35, batch-reuse:1
@ 2307 train 4.3006 , allloss: 4.3006, dt: 707.21ms, fracRes: 0.1528, norm(attn): 20.1250, norm(output): 0.4004, norm(x): 0.5231, norm(y): 0.9938, norm:0.3796, tok/sec: 185337.17, flops:194.57, batch-reuse:1
@ 2308 train 4.2659 , allloss: 4.2659, dt: 713.52ms, fracRes: 0.1526, norm(attn): 20.1250, norm(output): 0.3965, norm(x): 0.5186, norm(y): 0.9931, norm:0.4102, tok/sec: 183696.97, flops:192.85, batch-reuse:1
@ 2309 train 4.2413 , allloss: 4.2413, dt: 701.55ms, fracRes: 0.1515, norm(attn): 20.5000, norm(output): 0.3984, norm(x): 0.5246, norm(y): 0.9947, norm:0.4400, tok/sec: 186832.58, flops:196.14, batch-reuse:1
@ 2310 train 4.3481 , allloss: 4.3481, dt: 700.45ms, fracRes: 0.1510, norm(attn): 20.5000, norm(output): 0.3945, norm(x): 0.5160, norm(y): 0.9944, norm:0.4742, tok/sec: 187126.64, flops:196.45, batch-reuse:1
@ 2311 train 4.2793 , allloss: 4.2793, dt: 715.05ms, fracRes: 0.1525, norm(attn): 20.3750, norm(output): 0.4043, norm(x): 0.5267, norm(y): 0.9946, norm:0.3570, tok/sec: 183304.97, flops:192.43, batch-reuse:1
@ 2312 train 4.2951 , allloss: 4.2951, dt: 716.63ms, fracRes: 0.1531, norm(attn): 20.6250, norm(output): 0.4023, norm(x): 0.5255, norm(y): 0.9951, norm:0.3832, tok/sec: 182899.37, flops:192.01, batch-reuse:1
@ 2313 train 4.3180 , allloss: 4.3180, dt: 696.56ms, fracRes: 0.1527, norm(attn): 20.3750, norm(output): 0.3984, norm(x): 0.5223, norm(y): 0.9956, norm:0.4275, tok/sec: 188169.43, flops:197.54, batch-reuse:1
@ 2314 train 4.3005 , allloss: 4.3005, dt: 695.28ms, fracRes: 0.1511, norm(attn): 20.5000, norm(output): 0.3945, norm(x): 0.5146, norm(y): 0.9963, norm:0.3722, tok/sec: 188518.00, flops:197.91, batch-reuse:1
@ 2315 train 4.2411 , allloss: 4.2411, dt: 706.30ms, fracRes: 0.1521, norm(attn): 20.6250, norm(output): 0.4004, norm(x): 0.5237, norm(y): 0.9959, norm:0.3608, tok/sec: 185575.47, flops:194.82, batch-reuse:1
@ 2316 train 4.3577 , allloss: 4.3577, dt: 709.17ms, fracRes: 0.1529, norm(attn): 20.3750, norm(output): 0.4062, norm(x): 0.5298, norm(y): 0.9954, norm:0.4746, tok/sec: 184825.60, flops:194.03, batch-reuse:1
@ 2317 train 4.2360 , allloss: 4.2360, dt: 699.96ms, fracRes: 0.1526, norm(attn): 20.5000, norm(output): 0.4004, norm(x): 0.5237, norm(y): 0.9949, norm:0.3905, tok/sec: 187257.50, flops:196.58, batch-reuse:1
@ 2318 train 4.2522 , allloss: 4.2522, dt: 708.80ms, fracRes: 0.1520, norm(attn): 20.5000, norm(output): 0.4004, norm(x): 0.5211, norm(y): 0.9941, norm:0.3790, tok/sec: 184921.60, flops:194.13, batch-reuse:1
@ 2319 train 4.2477 , allloss: 4.2477, dt: 713.42ms, fracRes: 0.1521, norm(attn): 20.2500, norm(output): 0.4004, norm(x): 0.5212, norm(y): 0.9939, norm:0.3571, tok/sec: 183723.37, flops:192.87, batch-reuse:1
@ 2320 train 4.2179 , allloss: 4.2179, dt: 720.11ms, fracRes: 0.1516, norm(attn): 20.2500, norm(output): 0.4004, norm(x): 0.5240, norm(y): 0.9945, norm:0.4018, tok/sec: 182016.89, flops:191.08, batch-reuse:1
@ 2321 train 4.1079 , allloss: 4.1079, dt: 720.23ms, fracRes: 0.1527, norm(attn): 20.5000, norm(output): 0.4141, norm(x): 0.5349, norm(y): 0.9948, norm:0.6062, tok/sec: 181985.98, flops:191.05, batch-reuse:1
@ 2322 train 4.2502 , allloss: 4.2502, dt: 710.25ms, fracRes: 0.1510, norm(attn): 20.2500, norm(output): 0.4004, norm(x): 0.5263, norm(y): 0.9916, norm:0.4060, tok/sec: 184544.30, flops:193.73, batch-reuse:1
@ 2323 train 4.1265 , allloss: 4.1265, dt: 711.43ms, fracRes: 0.1511, norm(attn): 20.2500, norm(output): 0.4004, norm(x): 0.5217, norm(y): 0.9921, norm:0.4571, tok/sec: 184238.66, flops:193.41, batch-reuse:1
@ 2324 train 4.3042 , allloss: 4.3042, dt: 704.53ms, fracRes: 0.1505, norm(attn): 20.6250, norm(output): 0.3965, norm(x): 0.5189, norm(y): 0.9947, norm:0.5211, tok/sec: 186040.69, flops:195.31, batch-reuse:1
@ 2325 train 4.2796 , allloss: 4.2796, dt: 705.81ms, fracRes: 0.1516, norm(attn): 20.3750, norm(output): 0.3965, norm(x): 0.5196, norm(y): 0.9942, norm:0.3779, tok/sec: 185704.48, flops:194.95, batch-reuse:1
@ 2326 train 4.1887 , allloss: 4.1887, dt: 702.48ms, fracRes: 0.1521, norm(attn): 20.2500, norm(output): 0.4043, norm(x): 0.5306, norm(y): 0.9917, norm:0.4334, tok/sec: 186583.95, flops:195.88, batch-reuse:1
@ 2327 train 4.2401 , allloss: 4.2401, dt: 709.32ms, fracRes: 0.1510, norm(attn): 20.2500, norm(output): 0.3984, norm(x): 0.5177, norm(y): 0.9903, norm:0.4070, tok/sec: 184784.48, flops:193.99, batch-reuse:1
@ 2328 train 4.1799 , allloss: 4.1799, dt: 697.79ms, fracRes: 0.1517, norm(attn): 20.1250, norm(output): 0.3945, norm(x): 0.5169, norm(y): 0.9877, norm:0.3701, tok/sec: 187837.87, flops:197.19, batch-reuse:1
@ 2329 train 3.8697 , allloss: 3.8697, dt: 703.36ms, fracRes: 0.1489, norm(attn): 20.0000, norm(output): 0.4336, norm(x): 0.5626, norm(y): 0.9844, norm:1.4661, tok/sec: 186350.01, flops:195.63, batch-reuse:1
@ 2330 train 4.2445 , allloss: 4.2445, dt: 696.59ms, fracRes: 0.1518, norm(attn): 20.1250, norm(output): 0.4023, norm(x): 0.5261, norm(y): 0.9886, norm:0.5178, tok/sec: 188162.09, flops:197.53, batch-reuse:1
@ 2331 train 4.0897 , allloss: 4.0897, dt: 708.51ms, fracRes: 0.1524, norm(attn): 20.2500, norm(output): 0.3945, norm(x): 0.5227, norm(y): 0.9920, norm:0.4655, tok/sec: 184995.77, flops:194.21, batch-reuse:1
@ 2332 train 4.2551 , allloss: 4.2551, dt: 717.37ms, fracRes: 0.1522, norm(attn): 20.2500, norm(output): 0.3926, norm(x): 0.5184, norm(y): 0.9939, norm:0.5706, tok/sec: 182712.39, flops:191.81, batch-reuse:1
@ 2333 train 4.0996 , allloss: 4.0996, dt: 716.12ms, fracRes: 0.1519, norm(attn): 20.2500, norm(output): 0.3945, norm(x): 0.5179, norm(y): 0.9947, norm:0.4611, tok/sec: 183030.90, flops:192.15, batch-reuse:1
@ 2334 train 4.1220 , allloss: 4.1220, dt: 705.43ms, fracRes: 0.1523, norm(attn): 20.2500, norm(output): 0.3926, norm(x): 0.5171, norm(y): 0.9954, norm:0.3992, tok/sec: 185804.21, flops:195.06, batch-reuse:1
@ 2335 train 4.2272 , allloss: 4.2272, dt: 711.68ms, fracRes: 0.1526, norm(attn): 20.2500, norm(output): 0.4043, norm(x): 0.5299, norm(y): 0.9957, norm:0.4225, tok/sec: 184173.85, flops:193.35, batch-reuse:1
@ 2336 train 4.3040 , allloss: 4.3040, dt: 714.66ms, fracRes: 0.1520, norm(attn): 20.2500, norm(output): 0.3984, norm(x): 0.5198, norm(y): 0.9955, norm:0.4203, tok/sec: 183405.51, flops:192.54, batch-reuse:1
@ 2337 train 4.1971 , allloss: 4.1971, dt: 722.83ms, fracRes: 0.1508, norm(attn): 20.2500, norm(output): 0.3828, norm(x): 0.5082, norm(y): 0.9944, norm:0.3873, tok/sec: 181332.59, flops:190.36, batch-reuse:1
@ 2338 train 4.2247 , allloss: 4.2247, dt: 700.41ms, fracRes: 0.1518, norm(attn): 20.2500, norm(output): 0.3984, norm(x): 0.5207, norm(y): 0.9937, norm:0.3989, tok/sec: 187136.39, flops:196.46, batch-reuse:1
@ 2339 train 4.1757 , allloss: 4.1757, dt: 703.11ms, fracRes: 0.1517, norm(attn): 20.2500, norm(output): 0.3945, norm(x): 0.5152, norm(y): 0.9938, norm:0.3894, tok/sec: 186417.37, flops:195.70, batch-reuse:1
@ 2340 train 4.2313 , allloss: 4.2313, dt: 709.76ms, fracRes: 0.1513, norm(attn): 20.2500, norm(output): 0.3867, norm(x): 0.5104, norm(y): 0.9936, norm:0.4349, tok/sec: 184671.88, flops:193.87, batch-reuse:1
@ 2341 train 4.2120 , allloss: 4.2120, dt: 713.27ms, fracRes: 0.1519, norm(attn): 20.2500, norm(output): 0.3887, norm(x): 0.5129, norm(y): 0.9920, norm:0.3526, tok/sec: 183762.80, flops:192.91, batch-reuse:1
@ 2342 train 4.1280 , allloss: 4.1280, dt: 715.80ms, fracRes: 0.1525, norm(attn): 20.1250, norm(output): 0.3984, norm(x): 0.5210, norm(y): 0.9902, norm:0.4080, tok/sec: 183111.49, flops:192.23, batch-reuse:1
@ 2343 train 4.2129 , allloss: 4.2129, dt: 713.89ms, fracRes: 0.1516, norm(attn): 20.1250, norm(output): 0.3867, norm(x): 0.5112, norm(y): 0.9898, norm:0.4091, tok/sec: 183602.50, flops:192.75, batch-reuse:1
@ 2344 train 4.2598 , allloss: 4.2598, dt: 713.95ms, fracRes: 0.1524, norm(attn): 20.1250, norm(output): 0.3906, norm(x): 0.5180, norm(y): 0.9920, norm:0.3580, tok/sec: 183587.84, flops:192.73, batch-reuse:1
@ 2345 train 4.1329 , allloss: 4.1329, dt: 710.70ms, fracRes: 0.1516, norm(attn): 20.2500, norm(output): 0.3926, norm(x): 0.5173, norm(y): 0.9925, norm:0.4222, tok/sec: 184427.73, flops:193.61, batch-reuse:1
@ 2346 train 4.2275 , allloss: 4.2275, dt: 710.39ms, fracRes: 0.1527, norm(attn): 20.1250, norm(output): 0.4043, norm(x): 0.5279, norm(y): 0.9916, norm:0.3787, tok/sec: 184506.52, flops:193.70, batch-reuse:1
@ 2347 train 4.1553 , allloss: 4.1553, dt: 711.80ms, fracRes: 0.1518, norm(attn): 20.1250, norm(output): 0.3789, norm(x): 0.5041, norm(y): 0.9894, norm:0.4545, tok/sec: 184142.45, flops:193.31, batch-reuse:1
@ 2348 train 4.2428 , allloss: 4.2428, dt: 711.48ms, fracRes: 0.1521, norm(attn): 20.0000, norm(output): 0.3867, norm(x): 0.5124, norm(y): 0.9875, norm:0.4578, tok/sec: 184224.89, flops:193.40, batch-reuse:1
@ 2349 train 4.2798 , allloss: 4.2798, dt: 713.83ms, fracRes: 0.1513, norm(attn): 20.0000, norm(output): 0.3926, norm(x): 0.5183, norm(y): 0.9858, norm:0.3770, tok/sec: 183618.75, flops:192.76, batch-reuse:1
@ 2350 train 4.1573 , allloss: 4.1573, dt: 712.09ms, fracRes: 0.1516, norm(attn): 20.0000, norm(output): 0.3867, norm(x): 0.5131, norm(y): 0.9846, norm:0.3779, tok/sec: 184065.57, flops:193.23, batch-reuse:1
@ 2351 train 4.2756 , allloss: 4.2756, dt: 711.14ms, fracRes: 0.1522, norm(attn): 20.0000, norm(output): 0.3906, norm(x): 0.5175, norm(y): 0.9830, norm:0.4023, tok/sec: 184313.46, flops:193.49, batch-reuse:1
@ 2352 train 4.2193 , allloss: 4.2193, dt: 714.75ms, fracRes: 0.1533, norm(attn): 19.8750, norm(output): 0.3965, norm(x): 0.5244, norm(y): 0.9805, norm:0.4422, tok/sec: 183382.57, flops:192.52, batch-reuse:1
@ 2353 train 4.1951 , allloss: 4.1951, dt: 719.46ms, fracRes: 0.1535, norm(attn): 19.8750, norm(output): 0.3906, norm(x): 0.5190, norm(y): 0.9733, norm:0.3732, tok/sec: 182180.53, flops:191.25, batch-reuse:1
@ 2354 train 4.2499 , allloss: 4.2499, dt: 718.63ms, fracRes: 0.1526, norm(attn): 19.8750, norm(output): 0.3867, norm(x): 0.5144, norm(y): 0.9732, norm:0.3798, tok/sec: 182392.20, flops:191.48, batch-reuse:1
@ 2355 train 4.1759 , allloss: 4.1759, dt: 721.17ms, fracRes: 0.1525, norm(attn): 19.8750, norm(output): 0.3848, norm(x): 0.5098, norm(y): 0.9740, norm:0.4120, tok/sec: 181749.72, flops:190.80, batch-reuse:1
@ 2356 train 4.3525 , allloss: 4.3525, dt: 707.85ms, fracRes: 0.1516, norm(attn): 19.8750, norm(output): 0.3887, norm(x): 0.5150, norm(y): 0.9775, norm:0.4124, tok/sec: 185167.93, flops:194.39, batch-reuse:1
@ 2357 train 4.2644 , allloss: 4.2644, dt: 717.34ms, fracRes: 0.1522, norm(attn): 20.0000, norm(output): 0.3906, norm(x): 0.5182, norm(y): 0.9799, norm:0.4133, tok/sec: 182718.64, flops:191.82, batch-reuse:1
@ 2358 train 4.2513 , allloss: 4.2513, dt: 700.71ms, fracRes: 0.1529, norm(attn): 20.0000, norm(output): 0.3984, norm(x): 0.5232, norm(y): 0.9806, norm:0.4200, tok/sec: 187055.46, flops:196.37, batch-reuse:1
@ 2359 train 4.2057 , allloss: 4.2057, dt: 697.45ms, fracRes: 0.1528, norm(attn): 20.0000, norm(output): 0.3867, norm(x): 0.5131, norm(y): 0.9837, norm:0.4029, tok/sec: 187929.57, flops:197.29, batch-reuse:1
@ 2360 train 4.2752 , allloss: 4.2752, dt: 710.26ms, fracRes: 0.1522, norm(attn): 20.1250, norm(output): 0.3828, norm(x): 0.5096, norm(y): 0.9861, norm:0.3896, tok/sec: 184540.77, flops:193.73, batch-reuse:1
@ 2361 train 4.2250 , allloss: 4.2250, dt: 704.57ms, fracRes: 0.1532, norm(attn): 20.1250, norm(output): 0.3887, norm(x): 0.5173, norm(y): 0.9857, norm:0.3827, tok/sec: 186030.80, flops:195.30, batch-reuse:1
@ 2362 train 4.2215 , allloss: 4.2215, dt: 702.20ms, fracRes: 0.1525, norm(attn): 20.1250, norm(output): 0.3867, norm(x): 0.5180, norm(y): 0.9864, norm:0.3815, tok/sec: 186658.84, flops:195.95, batch-reuse:1
@ 2363 train 4.2635 , allloss: 4.2635, dt: 712.04ms, fracRes: 0.1529, norm(attn): 20.1250, norm(output): 0.3945, norm(x): 0.5211, norm(y): 0.9869, norm:0.3649, tok/sec: 184080.73, flops:193.25, batch-reuse:1
@ 2364 train 4.1823 , allloss: 4.1823, dt: 702.83ms, fracRes: 0.1561, norm(attn): 20.0000, norm(output): 0.4043, norm(x): 0.5358, norm(y): 0.9891, norm:0.4436, tok/sec: 186492.05, flops:195.78, batch-reuse:1
@ 2365 train 4.1968 , allloss: 4.1968, dt: 718.86ms, fracRes: 0.1542, norm(attn): 20.1250, norm(output): 0.3965, norm(x): 0.5234, norm(y): 0.9906, norm:0.3825, tok/sec: 182331.95, flops:191.41, batch-reuse:1
@ 2366 train 4.2270 , allloss: 4.2270, dt: 701.70ms, fracRes: 0.1535, norm(attn): 20.1250, norm(output): 0.3926, norm(x): 0.5190, norm(y): 0.9893, norm:0.4207, tok/sec: 186791.13, flops:196.09, batch-reuse:1
@ 2367 train 4.1608 , allloss: 4.1608, dt: 713.63ms, fracRes: 0.1532, norm(attn): 20.1250, norm(output): 0.3926, norm(x): 0.5165, norm(y): 0.9869, norm:0.4099, tok/sec: 183668.50, flops:192.82, batch-reuse:1
@ 2368 train 4.0387 , allloss: 4.0387, dt: 696.19ms, fracRes: 0.1530, norm(attn): 20.0000, norm(output): 0.3887, norm(x): 0.5139, norm(y): 0.9830, norm:0.4232, tok/sec: 188270.35, flops:197.65, batch-reuse:1
@ 2369 train 4.1025 , allloss: 4.1025, dt: 695.45ms, fracRes: 0.1528, norm(attn): 19.8750, norm(output): 0.3945, norm(x): 0.5195, norm(y): 0.9784, norm:0.4470, tok/sec: 188470.30, flops:197.86, batch-reuse:1
@ 2370 train 4.1484 , allloss: 4.1484, dt: 715.61ms, fracRes: 0.1525, norm(attn): 19.7500, norm(output): 0.4023, norm(x): 0.5273, norm(y): 0.9691, norm:0.5043, tok/sec: 183161.88, flops:192.28, batch-reuse:1
@ 2371 train 4.0029 , allloss: 4.0029, dt: 711.89ms, fracRes: 0.1523, norm(attn): 19.6250, norm(output): 0.3828, norm(x): 0.5112, norm(y): 0.9637, norm:0.4899, tok/sec: 184117.17, flops:193.29, batch-reuse:1
@ 2372 train 7.8014 , allloss: 7.8014, dt: 709.25ms, fracRes: 0.1453, norm(attn): 14.1875, norm(output): 4.0625, norm(x): 4.1505, norm(y): 0.9017, norm:260.7354, tok/sec: 184802.43, flops:194.01, batch-reuse:1
@ 2373 train 4.1858 , allloss: 4.1858, dt: 708.91ms, fracRes: 0.1525, norm(attn): 19.8750, norm(output): 0.3926, norm(x): 0.5186, norm(y): 0.9755, norm:0.8465, tok/sec: 184892.86, flops:194.10, batch-reuse:1
@ 2374 train 4.1053 , allloss: 4.1053, dt: 708.83ms, fracRes: 0.1524, norm(attn): 20.1250, norm(output): 0.3887, norm(x): 0.5145, norm(y): 0.9911, norm:0.6008, tok/sec: 184912.58, flops:194.12, batch-reuse:1
@ 2375 train 4.1481 , allloss: 4.1481, dt: 711.32ms, fracRes: 0.1528, norm(attn): 20.6250, norm(output): 0.3867, norm(x): 0.5134, norm(y): 0.9946, norm:0.5377, tok/sec: 184266.45, flops:193.44, batch-reuse:1
@ 2376 train 4.1656 , allloss: 4.1656, dt: 696.47ms, fracRes: 0.1532, norm(attn): 20.2500, norm(output): 0.3945, norm(x): 0.5217, norm(y): 0.9960, norm:0.5433, tok/sec: 188194.94, flops:197.57, batch-reuse:1
@ 2377 train 4.0949 , allloss: 4.0949, dt: 706.20ms, fracRes: 0.1598, norm(attn): 20.0000, norm(output): 0.4023, norm(x): 0.5315, norm(y): 0.9974, norm:0.8164, tok/sec: 185601.72, flops:194.85, batch-reuse:1
@ 2378 train 4.0911 , allloss: 4.0911, dt: 716.14ms, fracRes: 0.1523, norm(attn): 20.6250, norm(output): 0.3945, norm(x): 0.5215, norm(y): 0.9975, norm:0.5027, tok/sec: 183025.90, flops:192.14, batch-reuse:1
@ 2379 train 4.0703 , allloss: 4.0703, dt: 708.71ms, fracRes: 0.1523, norm(attn): 20.7500, norm(output): 0.3906, norm(x): 0.5143, norm(y): 0.9979, norm:0.4171, tok/sec: 184944.55, flops:194.16, batch-reuse:1
@ 2380 train 4.1567 , allloss: 4.1567, dt: 708.55ms, fracRes: 0.1538, norm(attn): 21.0000, norm(output): 0.4141, norm(x): 0.5405, norm(y): 0.9983, norm:0.7672, tok/sec: 184987.12, flops:194.20, batch-reuse:1
@ 2381 train 4.1904 , allloss: 4.1904, dt: 709.43ms, fracRes: 0.1533, norm(attn): 21.2500, norm(output): 0.4160, norm(x): 0.5409, norm(y): 0.9983, norm:0.5588, tok/sec: 184756.97, flops:193.96, batch-reuse:1
@ 2382 train 4.1517 , allloss: 4.1517, dt: 708.34ms, fracRes: 0.1527, norm(attn): 21.2500, norm(output): 0.4004, norm(x): 0.5258, norm(y): 0.9987, norm:0.4224, tok/sec: 185041.41, flops:194.26, batch-reuse:1
@ 2383 train 4.1046 , allloss: 4.1046, dt: 720.06ms, fracRes: 0.1528, norm(attn): 21.6250, norm(output): 0.3926, norm(x): 0.5170, norm(y): 0.9988, norm:0.4808, tok/sec: 182030.45, flops:191.10, batch-reuse:1
@ 2384 train 4.1156 , allloss: 4.1156, dt: 696.84ms, fracRes: 0.1536, norm(attn): 21.6250, norm(output): 0.3945, norm(x): 0.5244, norm(y): 0.9988, norm:0.4240, tok/sec: 188095.52, flops:197.46, batch-reuse:1
@ 2385 train 4.0880 , allloss: 4.0880, dt: 712.33ms, fracRes: 0.1533, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5323, norm(y): 0.9989, norm:0.4291, tok/sec: 184005.75, flops:193.17, batch-reuse:1
@ 2386 train 4.0488 , allloss: 4.0488, dt: 698.63ms, fracRes: 0.1536, norm(attn): 21.8750, norm(output): 0.4102, norm(x): 0.5342, norm(y): 0.9990, norm:0.4068, tok/sec: 187612.04, flops:196.96, batch-reuse:1
@ 2387 train 4.1188 , allloss: 4.1188, dt: 708.19ms, fracRes: 0.1527, norm(attn): 21.8750, norm(output): 0.4043, norm(x): 0.5282, norm(y): 0.9992, norm:0.4281, tok/sec: 185080.53, flops:194.30, batch-reuse:1
@ 2388 train 4.1378 , allloss: 4.1378, dt: 713.13ms, fracRes: 0.1526, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5312, norm(y): 0.9991, norm:0.3878, tok/sec: 183797.69, flops:192.95, batch-reuse:1
@ 2389 train 4.0870 , allloss: 4.0870, dt: 704.02ms, fracRes: 0.1524, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5249, norm(y): 0.9989, norm:0.3784, tok/sec: 186177.41, flops:195.45, batch-reuse:1
@ 2390 train 4.1220 , allloss: 4.1220, dt: 711.44ms, fracRes: 0.1535, norm(attn): 21.8750, norm(output): 0.4121, norm(x): 0.5377, norm(y): 0.9989, norm:0.4307, tok/sec: 184235.94, flops:193.41, batch-reuse:1
@ 2391 train 4.1746 , allloss: 4.1746, dt: 703.56ms, fracRes: 0.1529, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5305, norm(y): 0.9990, norm:0.4277, tok/sec: 186298.29, flops:195.58, batch-reuse:1
@ 2392 train 4.1865 , allloss: 4.1865, dt: 704.71ms, fracRes: 0.1538, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5319, norm(y): 0.9991, norm:0.3555, tok/sec: 185993.04, flops:195.26, batch-reuse:1
@ 2393 train 4.2078 , allloss: 4.2078, dt: 702.80ms, fracRes: 0.1564, norm(attn): 21.8750, norm(output): 0.4141, norm(x): 0.5450, norm(y): 0.9991, norm:0.4775, tok/sec: 186499.45, flops:195.79, batch-reuse:1
@ 2394 train 4.1339 , allloss: 4.1339, dt: 705.42ms, fracRes: 0.1533, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5321, norm(y): 0.9989, norm:0.3769, tok/sec: 185808.35, flops:195.06, batch-reuse:1
@ 2395 train 4.0740 , allloss: 4.0740, dt: 706.52ms, fracRes: 0.1534, norm(attn): 21.8750, norm(output): 0.4102, norm(x): 0.5370, norm(y): 0.9988, norm:0.4130, tok/sec: 185516.73, flops:194.76, batch-reuse:1
@ 2396 train 4.1132 , allloss: 4.1132, dt: 715.99ms, fracRes: 0.1519, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5285, norm(y): 0.9990, norm:0.3675, tok/sec: 183064.91, flops:192.18, batch-reuse:1
@ 2397 train 4.0744 , allloss: 4.0744, dt: 715.20ms, fracRes: 0.1520, norm(attn): 22.0000, norm(output): 0.4023, norm(x): 0.5252, norm(y): 0.9990, norm:0.3699, tok/sec: 183267.27, flops:192.39, batch-reuse:1
@ 2398 train 4.1164 , allloss: 4.1164, dt: 709.19ms, fracRes: 0.1544, norm(attn): 21.8750, norm(output): 0.4121, norm(x): 0.5374, norm(y): 0.9990, norm:0.3970, tok/sec: 184820.39, flops:194.02, batch-reuse:1
@ 2399 train 4.0958 , allloss: 4.0958, dt: 707.89ms, fracRes: 0.1528, norm(attn): 22.0000, norm(output): 0.4102, norm(x): 0.5367, norm(y): 0.9990, norm:0.3869, tok/sec: 185159.76, flops:194.38, batch-reuse:1
@ 2400 train 4.0716 , allloss: 4.0716, dt: 704.88ms, fracRes: 0.1526, norm(attn): 22.0000, norm(output): 0.4023, norm(x): 0.5248, norm(y): 0.9990, norm:0.3351, tok/sec: 185949.57, flops:195.21, batch-reuse:1
@ 2401 train 4.1709 , allloss: 4.1709, dt: 712.78ms, fracRes: 0.1526, norm(attn): 22.0000, norm(output): 0.4004, norm(x): 0.5238, norm(y): 0.9989, norm:0.3767, tok/sec: 183888.38, flops:193.05, batch-reuse:1
@ 2402 train 4.1103 , allloss: 4.1103, dt: 712.25ms, fracRes: 0.1547, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5333, norm(y): 0.9989, norm:0.3701, tok/sec: 184024.29, flops:193.19, batch-reuse:1
@ 2403 train 3.9960 , allloss: 3.9960, dt: 714.22ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.4121, norm(x): 0.5371, norm(y): 0.9989, norm:0.3737, tok/sec: 183517.92, flops:192.66, batch-reuse:1
@ 2404 train 4.0292 , allloss: 4.0292, dt: 699.99ms, fracRes: 0.1531, norm(attn): 21.8750, norm(output): 0.4082, norm(x): 0.5291, norm(y): 0.9990, norm:0.3637, tok/sec: 187247.42, flops:196.57, batch-reuse:1
@ 2405 train 4.1114 , allloss: 4.1114, dt: 709.44ms, fracRes: 0.1527, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5295, norm(y): 0.9989, norm:1.3169, tok/sec: 184753.93, flops:193.96, batch-reuse:1
@ 2406 train 4.0793 , allloss: 4.0793, dt: 717.16ms, fracRes: 0.1526, norm(attn): 22.0000, norm(output): 0.4023, norm(x): 0.5274, norm(y): 0.9989, norm:0.4079, tok/sec: 182765.60, flops:191.87, batch-reuse:1
@ 2407 train 4.0553 , allloss: 4.0553, dt: 717.69ms, fracRes: 0.1540, norm(attn): 21.8750, norm(output): 0.4082, norm(x): 0.5336, norm(y): 0.9990, norm:0.5061, tok/sec: 182630.45, flops:191.73, batch-reuse:1
@ 2408 train 4.0975 , allloss: 4.0975, dt: 709.86ms, fracRes: 0.1532, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5311, norm(y): 0.9990, norm:0.4177, tok/sec: 184644.65, flops:193.84, batch-reuse:1
@ 2409 train 4.0814 , allloss: 4.0814, dt: 715.33ms, fracRes: 0.1540, norm(attn): 22.0000, norm(output): 0.4102, norm(x): 0.5359, norm(y): 0.9989, norm:0.3900, tok/sec: 183232.21, flops:192.36, batch-reuse:1
@ 2410 train 4.0362 , allloss: 4.0362, dt: 697.44ms, fracRes: 0.1537, norm(attn): 22.0000, norm(output): 0.4082, norm(x): 0.5358, norm(y): 0.9987, norm:0.4129, tok/sec: 187933.23, flops:197.29, batch-reuse:1
@ 2411 train 4.1553 , allloss: 4.1553, dt: 714.59ms, fracRes: 0.1518, norm(attn): 22.0000, norm(output): 0.4023, norm(x): 0.5267, norm(y): 0.9989, norm:0.4247, tok/sec: 183423.38, flops:192.56, batch-reuse:1
@ 2412 train 4.1220 , allloss: 4.1220, dt: 724.36ms, fracRes: 0.1528, norm(attn): 22.0000, norm(output): 0.4121, norm(x): 0.5354, norm(y): 0.9989, norm:0.5252, tok/sec: 180948.76, flops:189.96, batch-reuse:1
@ 2413 train 4.1721 , allloss: 4.1721, dt: 723.07ms, fracRes: 0.1539, norm(attn): 22.0000, norm(output): 0.4121, norm(x): 0.5382, norm(y): 0.9989, norm:0.4613, tok/sec: 181272.20, flops:190.30, batch-reuse:1
@ 2414 train 4.1137 , allloss: 4.1137, dt: 724.94ms, fracRes: 0.1543, norm(attn): 22.0000, norm(output): 0.4043, norm(x): 0.5301, norm(y): 0.9988, norm:0.4358, tok/sec: 180803.62, flops:189.81, batch-reuse:1
@ 2415 train 4.2548 , allloss: 4.2548, dt: 713.20ms, fracRes: 0.1542, norm(attn): 22.0000, norm(output): 0.4043, norm(x): 0.5312, norm(y): 0.9990, norm:0.6035, tok/sec: 183779.02, flops:192.93, batch-reuse:1
@ 2416 train 4.2083 , allloss: 4.2083, dt: 704.80ms, fracRes: 0.1541, norm(attn): 22.0000, norm(output): 0.4102, norm(x): 0.5348, norm(y): 0.9988, norm:0.4862, tok/sec: 185971.78, flops:195.23, batch-reuse:1
@ 2417 train 4.2383 , allloss: 4.2383, dt: 708.32ms, fracRes: 0.1540, norm(attn): 22.0000, norm(output): 0.4141, norm(x): 0.5383, norm(y): 0.9988, norm:0.4370, tok/sec: 185047.02, flops:194.26, batch-reuse:1
@ 2418 train 4.2766 , allloss: 4.2766, dt: 715.04ms, fracRes: 0.1534, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5311, norm(y): 0.9989, norm:0.4759, tok/sec: 183308.46, flops:192.44, batch-reuse:1
@ 2419 train 4.2405 , allloss: 4.2405, dt: 701.08ms, fracRes: 0.1550, norm(attn): 21.8750, norm(output): 0.4277, norm(x): 0.5521, norm(y): 0.9988, norm:0.4258, tok/sec: 186956.35, flops:196.27, batch-reuse:1
@ 2420 train 4.2467 , allloss: 4.2467, dt: 717.27ms, fracRes: 0.1540, norm(attn): 22.0000, norm(output): 0.4141, norm(x): 0.5387, norm(y): 0.9987, norm:0.4834, tok/sec: 182738.20, flops:191.84, batch-reuse:1
@ 2421 train 4.2614 , allloss: 4.2614, dt: 706.32ms, fracRes: 0.1535, norm(attn): 22.0000, norm(output): 0.4043, norm(x): 0.5283, norm(y): 0.9988, norm:0.4278, tok/sec: 185569.89, flops:194.81, batch-reuse:1
@ 2422 train 4.2580 , allloss: 4.2580, dt: 707.34ms, fracRes: 0.1550, norm(attn): 22.0000, norm(output): 0.4043, norm(x): 0.5320, norm(y): 0.9987, norm:0.4735, tok/sec: 185302.81, flops:194.53, batch-reuse:1
@ 2423 train 4.3842 , allloss: 4.3842, dt: 703.49ms, fracRes: 0.1553, norm(attn): 21.8750, norm(output): 0.4121, norm(x): 0.5372, norm(y): 0.9987, norm:0.4578, tok/sec: 186317.10, flops:195.60, batch-reuse:1
@ 2424 train 4.2501 , allloss: 4.2501, dt: 708.74ms, fracRes: 0.1548, norm(attn): 22.0000, norm(output): 0.4141, norm(x): 0.5417, norm(y): 0.9988, norm:0.4326, tok/sec: 184937.64, flops:194.15, batch-reuse:1
@ 2425 train 4.1821 , allloss: 4.1821, dt: 700.87ms, fracRes: 0.1548, norm(attn): 21.8750, norm(output): 0.4160, norm(x): 0.5438, norm(y): 0.9987, norm:0.4212, tok/sec: 187013.34, flops:196.33, batch-reuse:1
@ 2426 train 4.1887 , allloss: 4.1887, dt: 701.57ms, fracRes: 0.1529, norm(attn): 22.0000, norm(output): 0.4082, norm(x): 0.5305, norm(y): 0.9987, norm:0.4942, tok/sec: 186827.12, flops:196.13, batch-reuse:1
@ 2427 train 4.3857 , allloss: 4.3857, dt: 710.70ms, fracRes: 0.1519, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5286, norm(y): 0.9988, norm:0.3956, tok/sec: 184425.44, flops:193.61, batch-reuse:1
@ 2428 train 4.2727 , allloss: 4.2727, dt: 709.95ms, fracRes: 0.1531, norm(attn): 22.0000, norm(output): 0.4102, norm(x): 0.5367, norm(y): 0.9988, norm:0.3907, tok/sec: 184622.27, flops:193.82, batch-reuse:1
@ 2429 train 4.2297 , allloss: 4.2297, dt: 703.85ms, fracRes: 0.1526, norm(attn): 22.0000, norm(output): 0.4082, norm(x): 0.5321, norm(y): 0.9988, norm:0.3565, tok/sec: 186220.29, flops:195.49, batch-reuse:1
@ 2430 train 4.2645 , allloss: 4.2645, dt: 710.12ms, fracRes: 0.1536, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5320, norm(y): 0.9987, norm:0.3982, tok/sec: 184577.82, flops:193.77, batch-reuse:1
@ 2431 train 4.2703 , allloss: 4.2703, dt: 709.60ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.4102, norm(x): 0.5356, norm(y): 0.9987, norm:0.4333, tok/sec: 184713.02, flops:193.91, batch-reuse:1
@ 2432 train 4.1556 , allloss: 4.1556, dt: 700.07ms, fracRes: 0.1541, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5254, norm(y): 0.9984, norm:0.4408, tok/sec: 187228.04, flops:196.55, batch-reuse:1
@ 2433 train 4.2428 , allloss: 4.2428, dt: 711.67ms, fracRes: 0.1536, norm(attn): 21.8750, norm(output): 0.3965, norm(x): 0.5229, norm(y): 0.9986, norm:0.3709, tok/sec: 184176.50, flops:193.35, batch-reuse:1
@ 2434 train 4.2781 , allloss: 4.2781, dt: 709.70ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5268, norm(y): 0.9985, norm:0.3998, tok/sec: 184686.71, flops:193.88, batch-reuse:1
@ 2435 train 4.3195 , allloss: 4.3195, dt: 707.94ms, fracRes: 0.1538, norm(attn): 21.8750, norm(output): 0.4102, norm(x): 0.5330, norm(y): 0.9986, norm:0.4034, tok/sec: 185145.42, flops:194.37, batch-reuse:1
@ 2436 train 4.2293 , allloss: 4.2293, dt: 709.44ms, fracRes: 0.1545, norm(attn): 21.8750, norm(output): 0.4043, norm(x): 0.5296, norm(y): 0.9984, norm:0.4290, tok/sec: 184755.04, flops:193.96, batch-reuse:1
@ 2437 train 4.1647 , allloss: 4.1647, dt: 706.58ms, fracRes: 0.1541, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5277, norm(y): 0.9984, norm:0.3901, tok/sec: 185501.83, flops:194.74, batch-reuse:1
@ 2438 train 4.1912 , allloss: 4.1912, dt: 718.42ms, fracRes: 0.1549, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5304, norm(y): 0.9984, norm:0.3938, tok/sec: 182445.04, flops:191.53, batch-reuse:1
@ 2439 train 4.2715 , allloss: 4.2715, dt: 710.76ms, fracRes: 0.1551, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5323, norm(y): 0.9983, norm:0.3811, tok/sec: 184412.32, flops:193.60, batch-reuse:1
@ 2440 train 4.1930 , allloss: 4.1930, dt: 717.08ms, fracRes: 0.1606, norm(attn): 21.5000, norm(output): 0.4434, norm(x): 0.5748, norm(y): 0.9985, norm:0.6147, tok/sec: 182784.92, flops:191.89, batch-reuse:1
@ 2441 train 4.1637 , allloss: 4.1637, dt: 717.15ms, fracRes: 0.1560, norm(attn): 21.7500, norm(output): 0.4219, norm(x): 0.5485, norm(y): 0.9983, norm:0.4915, tok/sec: 182768.45, flops:191.87, batch-reuse:1
@ 2442 train 4.1899 , allloss: 4.1899, dt: 712.18ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.3984, norm(x): 0.5239, norm(y): 0.9981, norm:0.5119, tok/sec: 184042.65, flops:193.21, batch-reuse:1
@ 2443 train 4.3195 , allloss: 4.3195, dt: 711.74ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.4043, norm(x): 0.5262, norm(y): 0.9982, norm:0.3813, tok/sec: 184158.30, flops:193.33, batch-reuse:1
@ 2444 train 4.1974 , allloss: 4.1974, dt: 703.28ms, fracRes: 0.1541, norm(attn): 21.8750, norm(output): 0.4121, norm(x): 0.5368, norm(y): 0.9981, norm:0.4894, tok/sec: 186373.26, flops:195.65, batch-reuse:1
@ 2445 train 4.1713 , allloss: 4.1713, dt: 708.64ms, fracRes: 0.1555, norm(attn): 21.8750, norm(output): 0.4082, norm(x): 0.5362, norm(y): 0.9981, norm:0.4707, tok/sec: 184961.97, flops:194.17, batch-reuse:1
@ 2446 train 4.4058 , allloss: 4.4058, dt: 704.65ms, fracRes: 0.1558, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5335, norm(y): 0.9983, norm:0.4426, tok/sec: 186011.17, flops:195.27, batch-reuse:1
@ 2447 train 4.2990 , allloss: 4.2990, dt: 701.44ms, fracRes: 0.1556, norm(attn): 21.7500, norm(output): 0.4023, norm(x): 0.5321, norm(y): 0.9980, norm:0.4316, tok/sec: 186860.34, flops:196.17, batch-reuse:1
@ 2448 train 4.2454 , allloss: 4.2454, dt: 711.13ms, fracRes: 0.1558, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5359, norm(y): 0.9979, norm:0.3959, tok/sec: 184315.13, flops:193.49, batch-reuse:1
@ 2449 train 4.2395 , allloss: 4.2395, dt: 711.26ms, fracRes: 0.1557, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5309, norm(y): 0.9975, norm:0.4353, tok/sec: 184282.69, flops:193.46, batch-reuse:1
@ 2450 train 4.1939 , allloss: 4.1939, dt: 710.34ms, fracRes: 0.1558, norm(attn): 21.7500, norm(output): 0.3945, norm(x): 0.5247, norm(y): 0.9974, norm:0.3492, tok/sec: 184519.53, flops:193.71, batch-reuse:1
@ 2451 train 4.3284 , allloss: 4.3284, dt: 704.74ms, fracRes: 0.1563, norm(attn): 21.7500, norm(output): 0.4004, norm(x): 0.5330, norm(y): 0.9973, norm:0.4187, tok/sec: 185985.99, flops:195.25, batch-reuse:1
@ 2452 train 4.1345 , allloss: 4.1345, dt: 706.51ms, fracRes: 0.1576, norm(attn): 21.6250, norm(output): 0.4043, norm(x): 0.5338, norm(y): 0.9971, norm:0.4373, tok/sec: 185519.67, flops:194.76, batch-reuse:1
@ 2453 train 4.1854 , allloss: 4.1854, dt: 705.20ms, fracRes: 0.1568, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5356, norm(y): 0.9971, norm:0.4350, tok/sec: 185864.13, flops:195.12, batch-reuse:1
@ 2454 train 4.1476 , allloss: 4.1476, dt: 705.38ms, fracRes: 0.1572, norm(attn): 21.7500, norm(output): 0.4023, norm(x): 0.5318, norm(y): 0.9971, norm:0.3765, tok/sec: 185817.65, flops:195.07, batch-reuse:1
@ 2455 train 4.2426 , allloss: 4.2426, dt: 692.32ms, fracRes: 0.1564, norm(attn): 21.6250, norm(output): 0.3984, norm(x): 0.5257, norm(y): 0.9970, norm:0.4735, tok/sec: 189323.74, flops:198.75, batch-reuse:1
@ 2456 train 4.2569 , allloss: 4.2569, dt: 707.63ms, fracRes: 0.1555, norm(attn): 21.7500, norm(output): 0.3965, norm(x): 0.5303, norm(y): 0.9972, norm:0.3669, tok/sec: 185227.14, flops:194.45, batch-reuse:1
@ 2457 train 4.3916 , allloss: 4.3916, dt: 714.50ms, fracRes: 0.1551, norm(attn): 21.8750, norm(output): 0.4102, norm(x): 0.5384, norm(y): 0.9972, norm:0.4767, tok/sec: 183445.23, flops:192.58, batch-reuse:1
@ 2458 train 4.1075 , allloss: 4.1075, dt: 694.31ms, fracRes: 0.1542, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5263, norm(y): 0.9972, norm:0.4483, tok/sec: 188779.66, flops:198.18, batch-reuse:1
@ 2459 train 4.2244 , allloss: 4.2244, dt: 701.08ms, fracRes: 0.1544, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5264, norm(y): 0.9973, norm:0.3719, tok/sec: 186958.32, flops:196.27, batch-reuse:1
@ 2460 train 4.3072 , allloss: 4.3072, dt: 698.46ms, fracRes: 0.1562, norm(attn): 21.6250, norm(output): 0.4141, norm(x): 0.5441, norm(y): 0.9973, norm:0.5190, tok/sec: 187658.73, flops:197.00, batch-reuse:1
@ 2461 train 4.2164 , allloss: 4.2164, dt: 700.95ms, fracRes: 0.1547, norm(attn): 21.8750, norm(output): 0.3965, norm(x): 0.5226, norm(y): 0.9966, norm:0.4567, tok/sec: 186992.98, flops:196.31, batch-reuse:1
@ 2462 train 4.2922 , allloss: 4.2922, dt: 709.98ms, fracRes: 0.1557, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5321, norm(y): 0.9962, norm:0.4825, tok/sec: 184612.78, flops:193.81, batch-reuse:1
@ 2463 train 4.2997 , allloss: 4.2997, dt: 705.40ms, fracRes: 0.1546, norm(attn): 21.7500, norm(output): 0.3965, norm(x): 0.5260, norm(y): 0.9965, norm:0.4842, tok/sec: 185811.93, flops:195.07, batch-reuse:1
@ 2464 train 4.2220 , allloss: 4.2220, dt: 707.92ms, fracRes: 0.1543, norm(attn): 21.7500, norm(output): 0.4023, norm(x): 0.5306, norm(y): 0.9967, norm:0.3857, tok/sec: 185152.15, flops:194.37, batch-reuse:1
@ 2465 train 4.1891 , allloss: 4.1891, dt: 714.44ms, fracRes: 0.1526, norm(attn): 21.8750, norm(output): 0.3965, norm(x): 0.5190, norm(y): 0.9965, norm:0.4395, tok/sec: 183462.19, flops:192.60, batch-reuse:1
@ 2466 train 4.3172 , allloss: 4.3172, dt: 702.14ms, fracRes: 0.1537, norm(attn): 21.8750, norm(output): 0.4023, norm(x): 0.5287, norm(y): 0.9964, norm:0.3874, tok/sec: 186674.87, flops:195.97, batch-reuse:1
@ 2467 train 4.1930 , allloss: 4.1930, dt: 704.89ms, fracRes: 0.1532, norm(attn): 21.8750, norm(output): 0.3984, norm(x): 0.5225, norm(y): 0.9964, norm:0.4172, tok/sec: 185946.87, flops:195.21, batch-reuse:1
@ 2468 train 4.2619 , allloss: 4.2619, dt: 697.30ms, fracRes: 0.1541, norm(attn): 21.8750, norm(output): 0.3984, norm(x): 0.5259, norm(y): 0.9961, norm:0.3419, tok/sec: 187969.53, flops:197.33, batch-reuse:1
@ 2469 train 4.3761 , allloss: 4.3761, dt: 702.85ms, fracRes: 0.1555, norm(attn): 21.7500, norm(output): 0.4062, norm(x): 0.5331, norm(y): 0.9960, norm:0.4370, tok/sec: 186486.86, flops:195.77, batch-reuse:1
@ 2470 train 4.1543 , allloss: 4.1543, dt: 709.70ms, fracRes: 0.1537, norm(attn): 21.8750, norm(output): 0.3965, norm(x): 0.5222, norm(y): 0.9960, norm:0.3691, tok/sec: 184687.08, flops:193.88, batch-reuse:1
@ 2471 train 4.1898 , allloss: 4.1898, dt: 705.91ms, fracRes: 0.1530, norm(attn): 21.7500, norm(output): 0.3965, norm(x): 0.5234, norm(y): 0.9956, norm:0.3921, tok/sec: 185677.51, flops:194.92, batch-reuse:1
@ 2472 train 4.2629 , allloss: 4.2629, dt: 703.51ms, fracRes: 0.1531, norm(attn): 21.7500, norm(output): 0.3906, norm(x): 0.5214, norm(y): 0.9949, norm:0.4111, tok/sec: 186312.37, flops:195.59, batch-reuse:1
@ 2473 train 4.1657 , allloss: 4.1657, dt: 705.76ms, fracRes: 0.1525, norm(attn): 21.8750, norm(output): 0.3848, norm(x): 0.5180, norm(y): 0.9945, norm:0.3801, tok/sec: 185716.33, flops:194.97, batch-reuse:1
@ 2474 train 4.1728 , allloss: 4.1728, dt: 715.58ms, fracRes: 0.1532, norm(attn): 21.8750, norm(output): 0.3867, norm(x): 0.5187, norm(y): 0.9944, norm:0.3849, tok/sec: 183168.84, flops:192.29, batch-reuse:1
@ 2475 train 4.2458 , allloss: 4.2458, dt: 705.96ms, fracRes: 0.1538, norm(attn): 21.8750, norm(output): 0.3926, norm(x): 0.5235, norm(y): 0.9946, norm:0.4111, tok/sec: 185664.65, flops:194.91, batch-reuse:1
@ 2476 train 4.1797 , allloss: 4.1797, dt: 708.38ms, fracRes: 0.1546, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5334, norm(y): 0.9945, norm:0.3823, tok/sec: 185030.70, flops:194.25, batch-reuse:1
@ 2477 train 4.1985 , allloss: 4.1985, dt: 700.50ms, fracRes: 0.1540, norm(attn): 21.6250, norm(output): 0.4062, norm(x): 0.5338, norm(y): 0.9947, norm:0.3988, tok/sec: 187113.33, flops:196.43, batch-reuse:1
@ 2478 train 4.1686 , allloss: 4.1686, dt: 710.67ms, fracRes: 0.1534, norm(attn): 21.7500, norm(output): 0.3984, norm(x): 0.5236, norm(y): 0.9952, norm:0.3921, tok/sec: 184434.90, flops:193.62, batch-reuse:1
@ 2479 train 4.1831 , allloss: 4.1831, dt: 718.78ms, fracRes: 0.1528, norm(attn): 21.8750, norm(output): 0.3945, norm(x): 0.5220, norm(y): 0.9954, norm:0.4213, tok/sec: 182354.03, flops:191.44, batch-reuse:1
@ 2480 train 4.2580 , allloss: 4.2580, dt: 704.92ms, fracRes: 0.1527, norm(attn): 21.8750, norm(output): 0.3926, norm(x): 0.5214, norm(y): 0.9951, norm:0.3815, tok/sec: 185940.07, flops:195.20, batch-reuse:1
@ 2481 train 4.1717 , allloss: 4.1717, dt: 711.92ms, fracRes: 0.1529, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5252, norm(y): 0.9945, norm:0.3987, tok/sec: 184110.20, flops:193.28, batch-reuse:1
@ 2482 train 4.3310 , allloss: 4.3310, dt: 710.42ms, fracRes: 0.1544, norm(attn): 21.5000, norm(output): 0.4082, norm(x): 0.5355, norm(y): 0.9930, norm:0.4348, tok/sec: 184500.51, flops:193.69, batch-reuse:1
@ 2483 train 4.2258 , allloss: 4.2258, dt: 714.13ms, fracRes: 0.1563, norm(attn): 21.3750, norm(output): 0.4160, norm(x): 0.5459, norm(y): 0.9897, norm:0.4700, tok/sec: 183540.83, flops:192.68, batch-reuse:1
@ 2484 train 4.2438 , allloss: 4.2438, dt: 705.31ms, fracRes: 0.1550, norm(attn): 21.2500, norm(output): 0.3965, norm(x): 0.5254, norm(y): 0.9865, norm:0.4662, tok/sec: 185835.55, flops:195.09, batch-reuse:1
@ 2485 train 4.1510 , allloss: 4.1510, dt: 702.16ms, fracRes: 0.1542, norm(attn): 21.2500, norm(output): 0.3945, norm(x): 0.5191, norm(y): 0.9830, norm:0.4403, tok/sec: 186668.72, flops:195.97, batch-reuse:1
@ 2486 train 4.1775 , allloss: 4.1775, dt: 711.76ms, fracRes: 0.1548, norm(attn): 20.7500, norm(output): 0.3965, norm(x): 0.5246, norm(y): 0.9738, norm:0.4385, tok/sec: 184151.70, flops:193.32, batch-reuse:1
@ 2487 train 4.2623 , allloss: 4.2623, dt: 704.78ms, fracRes: 0.1550, norm(attn): 20.2500, norm(output): 0.3965, norm(x): 0.5250, norm(y): 0.9484, norm:0.4073, tok/sec: 185974.61, flops:195.24, batch-reuse:1
@ 2488 train 8.7418 , allloss: 8.7418, dt: 698.78ms, fracRes: 0.1551, norm(attn): 20.0000, norm(output): 8.0625, norm(x): 8.2745, norm(y): 0.9346, norm:12.8665, tok/sec: 187572.99, flops:196.91, batch-reuse:1
@ 2489 train 4.2410 , allloss: 4.2410, dt: 704.40ms, fracRes: 0.1540, norm(attn): 20.3750, norm(output): 0.4023, norm(x): 0.5281, norm(y): 0.9547, norm:1.3568, tok/sec: 186075.45, flops:195.34, batch-reuse:1
@ 2490 train 4.1895 , allloss: 4.1895, dt: 697.19ms, fracRes: 0.1548, norm(attn): 21.7500, norm(output): 0.4043, norm(x): 0.5295, norm(y): 0.9939, norm:0.4986, tok/sec: 188000.71, flops:197.36, batch-reuse:1
@ 2491 train 4.3434 , allloss: 4.3434, dt: 708.93ms, fracRes: 0.1543, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5270, norm(y): 0.9971, norm:0.5391, tok/sec: 184887.89, flops:194.10, batch-reuse:1
@ 2492 train 4.2894 , allloss: 4.2894, dt: 705.00ms, fracRes: 0.1550, norm(attn): 21.8750, norm(output): 0.3984, norm(x): 0.5286, norm(y): 0.9980, norm:0.5090, tok/sec: 185916.87, flops:195.18, batch-reuse:1
@ 2493 train 4.2430 , allloss: 4.2430, dt: 705.68ms, fracRes: 0.1548, norm(attn): 22.0000, norm(output): 0.3984, norm(x): 0.5278, norm(y): 0.9983, norm:0.4294, tok/sec: 185738.48, flops:194.99, batch-reuse:1
@ 2494 train 4.2228 , allloss: 4.2228, dt: 705.15ms, fracRes: 0.1545, norm(attn): 22.1250, norm(output): 0.4043, norm(x): 0.5279, norm(y): 0.9986, norm:0.4447, tok/sec: 185878.97, flops:195.14, batch-reuse:1
@ 2495 train 4.2255 , allloss: 4.2255, dt: 705.27ms, fracRes: 0.1542, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5220, norm(y): 0.9986, norm:0.4209, tok/sec: 185847.04, flops:195.10, batch-reuse:1
@ 2496 train 4.1672 , allloss: 4.1672, dt: 706.32ms, fracRes: 0.1549, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5271, norm(y): 0.9985, norm:0.4838, tok/sec: 185570.77, flops:194.81, batch-reuse:1
@ 2497 train 4.2361 , allloss: 4.2361, dt: 717.01ms, fracRes: 0.1565, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5368, norm(y): 0.9987, norm:0.4502, tok/sec: 182804.62, flops:191.91, batch-reuse:1
@ 2498 train 4.2389 , allloss: 4.2389, dt: 712.15ms, fracRes: 0.1571, norm(attn): 22.1250, norm(output): 0.4121, norm(x): 0.5392, norm(y): 0.9986, norm:0.4290, tok/sec: 184050.29, flops:193.22, batch-reuse:1
@ 2499 train 4.2007 , allloss: 4.2007, dt: 710.99ms, fracRes: 0.1562, norm(attn): 22.1250, norm(output): 0.4121, norm(x): 0.5392, norm(y): 0.9986, norm:0.4651, tok/sec: 184350.54, flops:193.53, batch-reuse:1
@ 2500 train 4.1734 , allloss: 4.1734, dt: 706.09ms, fracRes: 0.1561, norm(attn): 22.1250, norm(output): 0.4141, norm(x): 0.5412, norm(y): 0.9988, norm:0.3964, tok/sec: 185629.73, flops:194.87, batch-reuse:1
@ 2501 train 4.1139 , allloss: 4.1139, dt: 718.06ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.4082, norm(x): 0.5340, norm(y): 0.9987, norm:0.4288, tok/sec: 182536.64, flops:191.63, batch-reuse:1
@ 2502 train 4.2649 , allloss: 4.2649, dt: 702.99ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.4219, norm(x): 0.5482, norm(y): 0.9988, norm:0.4767, tok/sec: 186450.50, flops:195.74, batch-reuse:1
@ 2503 train 4.1896 , allloss: 4.1896, dt: 716.50ms, fracRes: 0.1567, norm(attn): 22.1250, norm(output): 0.4160, norm(x): 0.5435, norm(y): 0.9988, norm:0.3891, tok/sec: 182933.88, flops:192.04, batch-reuse:1
@ 2504 train 4.2237 , allloss: 4.2237, dt: 717.47ms, fracRes: 0.1556, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5338, norm(y): 0.9990, norm:0.4875, tok/sec: 182686.40, flops:191.78, batch-reuse:1
@ 2505 train 4.2191 , allloss: 4.2191, dt: 710.12ms, fracRes: 0.1563, norm(attn): 22.1250, norm(output): 0.4180, norm(x): 0.5441, norm(y): 0.9985, norm:0.4949, tok/sec: 184577.02, flops:193.77, batch-reuse:1
@ 2506 train 4.2898 , allloss: 4.2898, dt: 697.80ms, fracRes: 0.1556, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5361, norm(y): 0.9987, norm:0.4193, tok/sec: 187836.85, flops:197.19, batch-reuse:1
@ 2507 train 4.2032 , allloss: 4.2032, dt: 705.33ms, fracRes: 0.1563, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5358, norm(y): 0.9988, norm:0.4999, tok/sec: 185831.84, flops:195.09, batch-reuse:1
@ 2508 train 4.1463 , allloss: 4.1463, dt: 705.09ms, fracRes: 0.1541, norm(attn): 22.5000, norm(output): 0.4062, norm(x): 0.5295, norm(y): 0.9989, norm:0.4128, tok/sec: 185893.11, flops:195.15, batch-reuse:1
@ 2509 train 4.1199 , allloss: 4.1199, dt: 708.29ms, fracRes: 0.1546, norm(attn): 22.3750, norm(output): 0.4102, norm(x): 0.5354, norm(y): 0.9988, norm:0.4947, tok/sec: 185053.37, flops:194.27, batch-reuse:1
@ 2510 train 4.2106 , allloss: 4.2106, dt: 699.05ms, fracRes: 0.1545, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5262, norm(y): 0.9990, norm:0.4259, tok/sec: 187499.81, flops:196.84, batch-reuse:1
@ 2511 train 4.1723 , allloss: 4.1723, dt: 709.13ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5188, norm(y): 0.9990, norm:0.4336, tok/sec: 184835.98, flops:194.04, batch-reuse:1
@ 2512 train 4.1707 , allloss: 4.1707, dt: 708.42ms, fracRes: 0.1543, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5266, norm(y): 0.9988, norm:0.5102, tok/sec: 185020.86, flops:194.24, batch-reuse:1
@ 2513 train 4.2111 , allloss: 4.2111, dt: 710.11ms, fracRes: 0.1541, norm(attn): 22.1250, norm(output): 0.4121, norm(x): 0.5370, norm(y): 0.9989, norm:0.3716, tok/sec: 184580.67, flops:193.77, batch-reuse:1
@ 2514 train 4.2490 , allloss: 4.2490, dt: 711.53ms, fracRes: 0.1551, norm(attn): 22.2500, norm(output): 0.4141, norm(x): 0.5394, norm(y): 0.9990, norm:0.4900, tok/sec: 184211.93, flops:193.39, batch-reuse:1
@ 2515 train 4.1682 , allloss: 4.1682, dt: 698.32ms, fracRes: 0.1529, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5230, norm(y): 0.9989, norm:0.4272, tok/sec: 187697.11, flops:197.04, batch-reuse:1
@ 2516 train 4.0620 , allloss: 4.0620, dt: 705.44ms, fracRes: 0.1543, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5310, norm(y): 0.9987, norm:0.4251, tok/sec: 185800.69, flops:195.05, batch-reuse:1
@ 2517 train 4.1240 , allloss: 4.1240, dt: 710.11ms, fracRes: 0.1548, norm(attn): 22.3750, norm(output): 0.4043, norm(x): 0.5322, norm(y): 0.9988, norm:0.4750, tok/sec: 184580.92, flops:193.77, batch-reuse:1
@ 2518 train 4.0960 , allloss: 4.0960, dt: 698.12ms, fracRes: 0.1553, norm(attn): 22.2500, norm(output): 0.4141, norm(x): 0.5422, norm(y): 0.9988, norm:0.4065, tok/sec: 187749.80, flops:197.10, batch-reuse:1
@ 2519 train 4.2280 , allloss: 4.2280, dt: 703.55ms, fracRes: 0.1541, norm(attn): 22.3750, norm(output): 0.4062, norm(x): 0.5337, norm(y): 0.9989, norm:0.4158, tok/sec: 186300.56, flops:195.58, batch-reuse:1
@ 2520 train 4.2063 , allloss: 4.2063, dt: 717.42ms, fracRes: 0.1548, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5381, norm(y): 0.9989, norm:0.3739, tok/sec: 182699.88, flops:191.80, batch-reuse:1
@ 2521 train 4.1207 , allloss: 4.1207, dt: 703.21ms, fracRes: 0.1547, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5363, norm(y): 0.9989, norm:0.4270, tok/sec: 186390.38, flops:195.67, batch-reuse:1
@ 2522 train 4.2330 , allloss: 4.2330, dt: 699.23ms, fracRes: 0.1546, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5303, norm(y): 0.9988, norm:0.3945, tok/sec: 187451.35, flops:196.79, batch-reuse:1
@ 2523 train 4.1636 , allloss: 4.1636, dt: 700.54ms, fracRes: 0.1539, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5274, norm(y): 0.9990, norm:0.3663, tok/sec: 187101.81, flops:196.42, batch-reuse:1
@ 2524 train 4.1451 , allloss: 4.1451, dt: 699.44ms, fracRes: 0.1536, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5257, norm(y): 0.9987, norm:0.3792, tok/sec: 187396.78, flops:196.73, batch-reuse:1
@ 2525 train 4.1232 , allloss: 4.1232, dt: 710.40ms, fracRes: 0.1550, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5397, norm(y): 0.9987, norm:0.3674, tok/sec: 184504.97, flops:193.69, batch-reuse:1
@ 2526 train 4.2429 , allloss: 4.2429, dt: 704.29ms, fracRes: 0.1547, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5314, norm(y): 0.9988, norm:0.3982, tok/sec: 186104.86, flops:195.37, batch-reuse:1
@ 2527 train 4.1563 , allloss: 4.1563, dt: 720.46ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5308, norm(y): 0.9989, norm:0.3776, tok/sec: 181928.17, flops:190.99, batch-reuse:1
@ 2528 train 4.1900 , allloss: 4.1900, dt: 705.31ms, fracRes: 0.1537, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5288, norm(y): 0.9988, norm:0.3581, tok/sec: 185835.92, flops:195.09, batch-reuse:1
@ 2529 train 4.1966 , allloss: 4.1966, dt: 708.11ms, fracRes: 0.1531, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5255, norm(y): 0.9987, norm:0.4129, tok/sec: 185100.35, flops:194.32, batch-reuse:1
@ 2530 train 4.1456 , allloss: 4.1456, dt: 709.20ms, fracRes: 0.1537, norm(attn): 22.3750, norm(output): 0.3926, norm(x): 0.5211, norm(y): 0.9986, norm:0.3745, tok/sec: 184816.72, flops:194.02, batch-reuse:1
@ 2531 train 4.1128 , allloss: 4.1128, dt: 710.13ms, fracRes: 0.1536, norm(attn): 22.2500, norm(output): 0.3984, norm(x): 0.5254, norm(y): 0.9986, norm:0.3717, tok/sec: 184574.97, flops:193.77, batch-reuse:1
@ 2532 train 4.1577 , allloss: 4.1577, dt: 699.66ms, fracRes: 0.1538, norm(attn): 22.3750, norm(output): 0.4004, norm(x): 0.5296, norm(y): 0.9986, norm:0.4077, tok/sec: 187335.60, flops:196.67, batch-reuse:1
@ 2533 train 4.0923 , allloss: 4.0923, dt: 709.17ms, fracRes: 0.1553, norm(attn): 22.1250, norm(output): 0.4258, norm(x): 0.5543, norm(y): 0.9986, norm:0.4174, tok/sec: 184823.74, flops:194.03, batch-reuse:1
@ 2534 train 4.2628 , allloss: 4.2628, dt: 700.48ms, fracRes: 0.1548, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5352, norm(y): 0.9986, norm:0.3927, tok/sec: 187118.11, flops:196.44, batch-reuse:1
@ 2535 train 4.1105 , allloss: 4.1105, dt: 698.78ms, fracRes: 0.1537, norm(attn): 22.2500, norm(output): 0.4062, norm(x): 0.5303, norm(y): 0.9986, norm:0.3770, tok/sec: 187571.65, flops:196.91, batch-reuse:1
@ 2536 train 4.1645 , allloss: 4.1645, dt: 706.60ms, fracRes: 0.1550, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5307, norm(y): 0.9985, norm:0.4053, tok/sec: 185496.32, flops:194.73, batch-reuse:1
@ 2537 train 4.1649 , allloss: 4.1649, dt: 710.57ms, fracRes: 0.1545, norm(attn): 22.2500, norm(output): 0.3984, norm(x): 0.5272, norm(y): 0.9984, norm:0.3841, tok/sec: 184459.10, flops:193.65, batch-reuse:1
@ 2538 train 4.2756 , allloss: 4.2756, dt: 691.50ms, fracRes: 0.1540, norm(attn): 22.2500, norm(output): 0.4023, norm(x): 0.5272, norm(y): 0.9984, norm:0.3784, tok/sec: 189548.42, flops:198.99, batch-reuse:1
@ 2539 train 4.1591 , allloss: 4.1591, dt: 711.51ms, fracRes: 0.1546, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5297, norm(y): 0.9985, norm:0.3929, tok/sec: 184217.42, flops:193.39, batch-reuse:1
@ 2540 train 4.2196 , allloss: 4.2196, dt: 704.46ms, fracRes: 0.1548, norm(attn): 22.2500, norm(output): 0.3906, norm(x): 0.5188, norm(y): 0.9985, norm:0.3863, tok/sec: 186059.39, flops:195.33, batch-reuse:1
@ 2541 train 4.2065 , allloss: 4.2065, dt: 702.15ms, fracRes: 0.1557, norm(attn): 22.1250, norm(output): 0.4082, norm(x): 0.5335, norm(y): 0.9986, norm:0.4022, tok/sec: 186672.46, flops:195.97, batch-reuse:1
@ 2542 train 4.2268 , allloss: 4.2268, dt: 707.91ms, fracRes: 0.1569, norm(attn): 22.1250, norm(output): 0.4180, norm(x): 0.5477, norm(y): 0.9985, norm:0.6916, tok/sec: 185154.65, flops:194.38, batch-reuse:1
@ 2543 train 4.1636 , allloss: 4.1636, dt: 720.19ms, fracRes: 0.1535, norm(attn): 22.5000, norm(output): 0.3887, norm(x): 0.5139, norm(y): 0.9985, norm:0.4065, tok/sec: 181997.61, flops:191.06, batch-reuse:1
@ 2544 train 4.2277 , allloss: 4.2277, dt: 697.11ms, fracRes: 0.1554, norm(attn): 22.3750, norm(output): 0.4004, norm(x): 0.5281, norm(y): 0.9986, norm:0.4563, tok/sec: 188023.15, flops:197.39, batch-reuse:1
@ 2545 train 4.2014 , allloss: 4.2014, dt: 701.26ms, fracRes: 0.1548, norm(attn): 22.1250, norm(output): 0.4121, norm(x): 0.5381, norm(y): 0.9987, norm:0.4197, tok/sec: 186908.75, flops:196.22, batch-reuse:1
@ 2546 train 4.1930 , allloss: 4.1930, dt: 697.54ms, fracRes: 0.1532, norm(attn): 22.2500, norm(output): 0.4043, norm(x): 0.5295, norm(y): 0.9985, norm:0.3769, tok/sec: 187905.87, flops:197.26, batch-reuse:1
@ 2547 train 4.2136 , allloss: 4.2136, dt: 706.55ms, fracRes: 0.1527, norm(attn): 22.3750, norm(output): 0.3984, norm(x): 0.5235, norm(y): 0.9984, norm:0.4345, tok/sec: 185509.71, flops:194.75, batch-reuse:1
@ 2548 train 4.3138 , allloss: 4.3138, dt: 707.80ms, fracRes: 0.1556, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5358, norm(y): 0.9982, norm:0.5658, tok/sec: 185183.46, flops:194.41, batch-reuse:1
@ 2549 train 4.3012 , allloss: 4.3012, dt: 695.85ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5360, norm(y): 0.9986, norm:0.5217, tok/sec: 188362.59, flops:197.74, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0547, 0.9453, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6953, 0.1445, 0.1582, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6211, 0.1118, 0.2207, 0.0464, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.1689, 0.0947, 0.0947, 0.0593, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5156, 0.1152, 0.1021, 0.0923, 0.0903, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2715, 0.2119, 0.0645, 0.0469, 0.0874, 0.2246, 0.0933, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3867, 0.1338, 0.0452, 0.0432, 0.0684, 0.1387, 0.1289, 0.0549, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1318, 0.1279, 0.0586, 0.0381, 0.0850, 0.3066, 0.1387, 0.0566, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1592, 0.1182, 0.1108, 0.0337, 0.0801, 0.1147, 0.2207, 0.0864, 0.0498, 0.0276, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0742, 0.0532, 0.0284, 0.0256, 0.0674, 0.3203, 0.1484, 0.0630, 0.1455, 0.0237, 0.0496, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0369, 0.1030, 0.0544, 0.0371, 0.0601, 0.1543, 0.2285, 0.1309, 0.0840, 0.0693, 0.0177, 0.0245, 0.0000, 0.0000, 0.0000],
        [0.1836, 0.0737, 0.0135, 0.0148, 0.0525, 0.2393, 0.1826, 0.0559, 0.1060, 0.0161, 0.0267, 0.0076, 0.0276, 0.0000, 0.0000],
        [0.0554, 0.0566, 0.0260, 0.0217, 0.0520, 0.2695, 0.1348, 0.0537, 0.1021, 0.0221, 0.0728, 0.0168, 0.0503, 0.0669, 0.0000],
        [0.0298, 0.0243, 0.0184, 0.0182, 0.0374, 0.1021, 0.1670, 0.0884, 0.1904, 0.0444, 0.0598, 0.0339, 0.0645, 0.0962, 0.0250]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0009,     -1.0312,     -1.3984,     -1.1719,     -1.1328,     -0.7344,     -0.9023,     -0.9102,     -0.9766,     -1.4375,     -1.2031,     -1.6094,     -0.8867,     -0.9414,     -1.0469],
        [     0.0160,      2.8594,      1.9531,      1.0469,      1.5703,      1.7656,      2.2969,      1.1016,      2.3594,      1.9844,      1.5859,      1.0156,      0.9766,      1.6797,      2.0781],
        [    -0.0332,     -1.6094,     -1.5156,     -1.7812,     -1.8828,     -2.1719,     -1.8047,     -0.8750,     -2.0625,     -1.7344,     -2.8594,     -1.3594,     -1.2734,     -2.3750,     -2.2812],
        [    -0.0354,     -1.7500,     -1.0703,     -2.6250,     -1.5703,     -2.4844,     -2.1562,     -1.3906,     -2.8438,     -2.1094,     -2.9844,     -2.0625,     -1.5547,     -3.2031,     -2.6094],
        [    -0.0136,     -1.2500,     -1.8281,     -1.8281,     -2.2969,     -0.4492,     -1.0547,     -1.3359,     -2.0469,     -2.6562,     -3.1719,     -3.2031,     -1.5312,     -2.3750,     -2.1719],
        [    -0.0153,     -1.5156,     -1.6328,     -1.7344,     -1.7500,     -1.8125,     -1.5312,     -1.4609,     -2.1094,     -2.4062,     -2.1250,     -2.6562,     -1.7031,     -1.9688,     -2.0469],
        [     0.0032,     -0.2441,     -1.4375,     -1.7500,     -1.1328,     -0.1855,     -1.0625,     -1.4766,     -0.9648,     -2.2969,     -2.1094,     -3.0625,     -1.4766,     -1.0312,     -0.9922],
        [     0.0017,     -1.0625,     -2.1406,     -2.1875,     -1.7344,     -1.0234,     -1.1016,     -1.9531,     -1.8047,     -3.0938,     -2.3906,     -3.2031,     -1.6484,     -1.8125,     -1.7031],
        [     0.0287,      0.0026,     -0.7812,     -1.2109,     -0.4102,      0.8750,      0.0806,     -0.8164,     -0.8047,     -2.0938,     -0.8789,     -2.0938,     -0.6836,     -0.6289,     -0.6641],
        [     0.0067,     -0.2891,     -0.3535,     -1.5391,     -0.6797,     -0.3164,      0.3359,     -0.6055,     -1.1562,     -1.7422,     -1.8672,     -1.3203,     -0.9648,     -1.1016,     -0.8750],
        [     0.0332,     -0.3008,     -0.9297,     -1.0312,     -0.0669,      1.4922,      0.7266,     -0.1299,      0.7070,     -1.1094,     -0.3711,     -1.8594,     -0.5391,      0.4531,      0.0219],
        [     0.0266,      1.0547,      0.4180,      0.0349,      0.5156,      1.4609,      1.8516,      1.2969,      0.8555,      0.6602,     -0.7031,     -0.3770,      0.8750,      0.5352,      0.2969],
        [     0.0364,     -0.8750,     -2.5781,     -2.4844,     -1.2109,      0.3027,      0.0294,     -1.1562,     -0.5156,     -2.3906,     -1.8906,     -3.1562,     -1.8594,     -1.0391,     -1.2422],
        [     0.0457,      0.0669,     -0.7109,     -0.8867,     -0.0178,      1.6250,      0.9297,      0.0134,      0.6562,     -0.8750,      0.3203,     -1.1484,     -0.0530,      0.2324,      0.0918],
        [     0.0503,     -0.1553,     -0.4316,     -0.4395,      0.2773,      1.2812,      1.7734,      1.1406,      1.9062,      0.4492,      0.7461,      0.1777,      0.8242,      1.2266,     -0.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4232],
        [0.2599],
        [0.2327],
        [0.2839],
        [0.2146],
        [0.1780],
        [0.2139],
        [0.1559],
        [0.1212],
        [0.1522],
        [0.0805],
        [0.1871],
        [0.1220],
        [0.0660]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9023,     0.0349,     0.0645,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9609,     0.0298,     0.0001,     0.0111,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8867,     0.0025,     0.0007,     0.0055,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7266,     0.0121,     0.0001,     0.0134,     0.0481,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4258,     0.0114,     0.0010,     0.0107,     0.0129,     0.0142,     0.5234,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6328,     0.0376,     0.0006,     0.0040,     0.1172,     0.0195,     0.0430,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9609,     0.0017,     0.0027,     0.0030,     0.0008,     0.0033,     0.0010,     0.0133,     0.0132,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.6172,     0.0067,     0.0004,     0.0101,     0.0201,     0.0150,     0.0354,     0.0669,     0.1582,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.6289,     0.0177,     0.0046,     0.0330,     0.0535,     0.0442,     0.1787,     0.0171,     0.0013,     0.0042,     0.0166,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1060,     0.0036,     0.0016,     0.0006,     0.0019,     0.0064,     0.0496,     0.7930,     0.0095,     0.0001,     0.0017,     0.0245,     0.0000,     0.0000],
        [    0.0001,     0.1807,     0.0060,     0.0011,     0.0005,     0.0148,     0.0032,     0.0039,     0.0179,     0.6719,     0.0007,     0.0232,     0.0011,     0.0762,     0.0000],
        [    0.0003,     0.5391,     0.0640,     0.0009,     0.0044,     0.0017,     0.0019,     0.0037,     0.0105,     0.0549,     0.0021,     0.0058,     0.0003,     0.0021,     0.3086]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0019,      0.4199,      0.2100,     -0.0693,      0.0840,      0.1777,      0.1670,      0.2090,      0.1592,      0.1387,     -0.0659,      0.1729,      0.0396,      0.0427,      0.1406],
        [     0.0281,      9.0000,      7.8438,      0.2373,      3.2188,      5.1875,      3.5625,      4.4688,      2.8750,      4.5312,      1.1094,      4.7812,      0.0525,      1.2656,      4.0312],
        [     0.0444,     11.6250,      6.4375,     14.5625,      8.2500,      6.3438,      9.3125,      4.5000,      7.5000,      6.5000,      3.7031,      3.8594,      2.9844,      5.8750,      7.1875],
        [     0.0630,     10.2500,      7.0312,      7.6250,     14.0625,      7.8125,      8.4375,      8.6250,      8.6875,      6.4688,      2.1719,      5.9375,      5.2188,      3.5938,      5.5312],
        [     0.0801,     11.1250,      7.6562,      2.1562,      6.6875,     13.0000,      9.0000,      9.4375,      6.7188,      8.1250,     -1.7188,      7.8125,      0.7344,      2.8438,      6.1250],
        [     0.0635,      9.6875,      3.8438,      2.6250,      4.6250,      7.5938,     11.1250,      9.3125,      8.5000,      5.1562,      1.1875,      5.5938,      2.4688,      5.0938,      5.1562],
        [     0.0532,      8.6875,      4.5625,     -0.2500,      4.6562,      5.9375,      7.3750,     11.8125,      9.1250,      5.4688,      1.1328,      6.1875,      4.9062,      5.9062,      4.9375],
        [     0.0625,      9.6250,      6.0000,      3.5625,      5.9375,      6.1250,      6.2188,      9.8125,     12.9375,      8.1250,      0.8242,      5.2188,      5.3750,     10.1875,      8.0625],
        [     0.0850,      8.8125,      6.0000,      1.8203,      3.7500,      7.1250,      5.3438,      6.1250,      7.3438,     10.2500,      2.2188,      7.3438,      1.0859,      4.8750,      9.5000],
        [    -0.0581,      8.8125,      2.4688,      2.9375,      3.0312,      1.7266,      3.1406,      1.9141,      4.5312,      4.5312,     11.7500,      6.1875,      3.2500,      5.4062,      5.6875],
        [     0.0339,      8.1875,      3.6875,      0.8047,      4.0938,      4.7812,      4.5000,      5.3438,      6.0000,      6.8438,      6.0312,     10.1875,      4.5312,      5.5000,      7.1250],
        [    -0.0266,      6.9062,      3.3438,      2.0000,      3.9688,      4.4375,      4.2500,      5.6562,      3.3125,      0.6992,      1.9062,      3.2812,     12.0000,      4.9688,      3.1406],
        [     0.0048,      8.9375,      5.5625,      4.7812,      3.8438,      4.9375,      6.1250,      8.1875,     10.9375,      6.5312,      1.7422,      4.8125,      7.4688,     14.3125,     10.0000],
        [     0.0479,      8.1250,      4.6875,      2.9531,      2.2031,      5.5938,      4.0625,      4.2500,      5.7812,      9.4375,      2.4844,      6.0312,      2.9531,      7.2500,     12.4375],
        [     0.0210,      7.5312,      5.4062,      1.1328,      2.7188,      1.7969,      1.8594,      2.5469,      3.5938,      5.2500,      2.0000,      3.0000,      0.1143,      1.9609,      6.9688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3255],
        [0.3104],
        [0.2848],
        [0.2754],
        [0.3200],
        [0.1480],
        [0.1508],
        [0.1568],
        [0.2418],
        [0.2319],
        [0.1939],
        [0.1185],
        [0.1392],
        [0.1157]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0280,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0281,     0.1416,     0.8320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0378,     0.3633,     0.2773,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0879,     0.1846,     0.6250,     0.0286,     0.0742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0033,     0.0007,     0.0011,     0.0000,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0042,     0.0197,     0.0258,     0.0261,     0.0048,     0.0270,     0.8906,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0009,     0.0000,     0.0184,     0.8945,     0.0859,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0015,     0.0041,     0.1465,     0.0229,     0.0009,     0.0090,     0.0003,     0.0393,     0.7734,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0043,     0.0205,     0.2246,     0.0530,     0.0083,     0.2441,     0.0457,     0.1553,     0.0806,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0002,     0.0601,     0.0084,     0.0006,     0.0029,     0.0005,     0.1455,     0.5938,     0.1035,     0.0845,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0002,     0.0096,     0.0322,     0.0001,     0.3945,     0.1099,     0.4199,     0.0156,     0.0013,     0.0007,     0.0143,     0.0000,     0.0000,     0.0000],
        [    0.0045,     0.0028,     0.0054,     0.0044,     0.0002,     0.0261,     0.6055,     0.1416,     0.0012,     0.0011,     0.0030,     0.1162,     0.0869,     0.0000,     0.0000],
        [    0.0001,     0.0001,     0.0096,     0.0009,     0.0000,     0.0002,     0.0000,     0.0023,     0.0952,     0.0245,     0.0104,     0.0024,     0.0018,     0.8516,     0.0000],
        [    0.0002,     0.0004,     0.0352,     0.0728,     0.0013,     0.0095,     0.0013,     0.0806,     0.0840,     0.0215,     0.0024,     0.0121,     0.1865,     0.3203,     0.1729]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0007,      0.0038,     -0.0374,     -0.0405,     -0.0247,     -0.0347,     -0.0064,     -0.0415,     -0.0613,     -0.0430,     -0.0486,     -0.0063,     -0.0430,     -0.0703,     -0.0361],
        [    -0.0347,      3.5156,      3.1406,     -0.6836,     -0.0559,      1.7891,      1.0156,      0.1147,     -0.1387,      1.0625,      0.3066,      1.1484,      0.4531,     -1.1875,      4.9062],
        [     0.0698,      1.6875,      3.4531,      4.3750,     -0.0747,      7.5625,      3.4844,      5.0625,      4.5625,      1.8672,      0.3066,      2.1719,      4.9062,      3.0781,      1.8750],
        [    -0.0415,      2.2188,      1.9453,      2.0938,     -0.9023,      7.6250,     11.4375,      6.4688,     -1.9062,     -2.3594,     -1.4453,      3.6094,      6.6875,     -3.8906,      6.0625],
        [    -0.0110,      0.7266,      1.9531,     -1.1406,     -0.1836,     -2.4375,     -5.3125,     -1.9219,      4.2500,      3.4844,      3.3125,      0.6367,     -3.0312,      5.0312,      3.5469],
        [    -0.0618,      1.2734,     -0.2695,      0.2041,     -4.6250,      6.9688,     11.6875,      5.5312,     -5.9062,     -5.4688,     -4.2812,      3.4531,      4.5312,     -9.3750,      4.2500],
        [    -0.0483,      1.4922,      1.7656,      1.7812,      0.0864,      1.8125,      5.3125,      3.0781,      1.0312,      0.0776,      1.2109,      4.1562,      1.9531,      0.6914,      6.3750],
        [    -0.0111,      0.9961,      1.3438,      3.9844,     -1.8281,      6.9688,     10.8750,      8.5000,     -1.4219,     -1.9766,     -1.5859,      4.5625,      7.8125,     -3.4375,      5.1875],
        [     0.0393,      1.0078,      4.5938,      2.7500,     -0.5000,      1.8125,     -1.7109,      3.2812,      6.2500,      4.3438,      3.4375,      2.8438,      2.2500,      6.8125,      6.9688],
        [     0.0344,      1.5859,      3.9844,      2.5469,      0.6836,      4.0625,      2.3906,      3.6094,      2.9531,      3.6719,      1.2031,      2.8438,      3.5312,      2.5156,      3.4375],
        [     0.0625,      0.2930,      5.9688,      4.0000,      1.3359,      2.9375,      1.2734,      6.8438,      8.2500,      6.5312,      6.3125,      4.6562,      7.1250,      9.5625,      9.7500],
        [     0.0522,      0.2734,      4.0312,      5.2500,     -0.3770,      7.7500,      6.4688,      7.8125,      4.5312,      2.0000,      1.4219,      4.4375,      8.0625,      4.1562,      5.7812],
        [    -0.0449,     -0.5234,      0.1348,     -0.0623,     -3.1562,      1.7188,      4.8750,      3.4062,     -1.3594,     -1.4922,     -0.4375,      3.2031,      2.9219,     -1.6562,      4.8750],
        [     0.0356,      0.0211,      4.7188,      2.3750,     -0.5625,      0.7031,     -2.7188,      3.2969,      7.0000,      5.6562,      4.7812,      3.3281,      3.0469,      9.1875,      8.4375],
        [     0.0645,      0.7383,      5.1562,      5.8750,      1.8594,      3.8438,      1.8672,      6.0000,      6.0312,      4.6562,      2.4844,      4.0938,      6.8125,      7.3750,      6.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5036],
        [0.1125],
        [0.2062],
        [0.1687],
        [0.0948],
        [0.0917],
        [0.0923],
        [0.1681],
        [0.1427],
        [0.1604],
        [0.0491],
        [0.1046],
        [0.1586],
        [0.1101]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0004,     0.0005,     0.0000,     0.0004,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0128,     -0.9492,     -1.1016,     -1.2891,     -0.9844,     -1.0234,     -0.9961,     -1.2031,     -1.1406,     -0.8750,     -0.9219,     -1.4375,     -1.0625,     -1.0469,     -1.3125],
        [    -0.3105,    -24.6250,    -28.1250,    -34.5000,    -25.6250,    -27.5000,    -26.6250,    -32.5000,    -29.8750,    -23.5000,    -24.2500,    -37.2500,    -29.1250,    -27.2500,    -35.5000],
        [    -0.1768,    -13.1250,    -15.1875,    -18.5000,    -14.8125,    -14.5000,    -14.7500,    -16.8750,    -15.6250,    -12.6875,    -12.6250,    -20.6250,    -14.8125,    -14.2500,    -17.5000],
        [    -0.1768,    -15.7500,    -16.3750,    -21.2500,    -17.6250,    -16.8750,    -17.8750,    -21.5000,    -19.0000,    -15.5000,    -15.4375,    -23.6250,    -18.6250,    -17.0000,    -20.3750],
        [    -0.3594,    -26.0000,    -30.3750,    -36.0000,    -27.8750,    -29.8750,    -27.7500,    -33.5000,    -31.8750,    -25.2500,    -25.0000,    -40.5000,    -29.8750,    -29.1250,    -36.2500],
        [    -0.0537,     -7.9688,     -7.6875,    -11.1250,     -7.9375,     -8.0625,     -7.5312,    -12.5000,     -9.7500,     -8.7500,     -7.5625,    -11.5000,    -11.1875,     -8.5625,    -11.1875],
        [    -0.4121,    -32.2500,    -35.7500,    -43.0000,    -34.0000,    -31.6250,    -33.2500,    -41.5000,    -38.5000,    -29.7500,    -30.3750,    -48.0000,    -36.7500,    -34.5000,    -42.7500],
        [    -0.4473,    -36.7500,    -39.2500,    -49.0000,    -38.7500,    -37.0000,    -38.0000,    -47.5000,    -43.5000,    -33.5000,    -34.5000,    -55.0000,    -42.5000,    -39.5000,    -46.7500],
        [    -0.5078,    -37.0000,    -42.7500,    -50.5000,    -38.2500,    -41.0000,    -39.2500,    -47.2500,    -45.2500,    -34.0000,    -36.7500,    -55.7500,    -41.5000,    -41.2500,    -50.7500],
        [    -0.2949,    -25.7500,    -26.5000,    -33.2500,    -25.2500,    -25.8750,    -25.8750,    -32.7500,    -30.0000,    -22.2500,    -24.5000,    -36.5000,    -29.1250,    -27.2500,    -33.2500],
        [    -0.3594,    -28.6250,    -31.7500,    -38.7500,    -28.5000,    -31.5000,    -29.7500,    -37.5000,    -34.2500,    -26.3750,    -27.8750,    -42.0000,    -33.5000,    -31.2500,    -38.7500],
        [    -0.3477,    -28.3750,    -30.8750,    -38.0000,    -30.1250,    -27.5000,    -29.0000,    -36.2500,    -34.2500,    -25.1250,    -28.0000,    -42.0000,    -31.5000,    -30.7500,    -36.2500],
        [    -0.4062,    -33.2500,    -35.0000,    -43.0000,    -34.5000,    -33.0000,    -33.5000,    -41.7500,    -38.7500,    -29.8750,    -30.3750,    -49.2500,    -37.2500,    -35.2500,    -40.7500],
        [    -0.4668,    -35.0000,    -40.2500,    -47.7500,    -35.7500,    -38.5000,    -36.5000,    -44.7500,    -42.7500,    -31.8750,    -34.7500,    -52.5000,    -39.2500,    -38.7500,    -48.0000],
        [    -0.1177,    -13.6875,    -14.7500,    -18.6250,    -13.3750,    -11.8125,    -14.0000,    -19.7500,    -16.2500,    -12.6250,    -13.6250,    -19.0000,    -17.2500,    -14.2500,    -20.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7617],
        [0.6391],
        [0.5143],
        [0.6062],
        [0.5013],
        [0.6686],
        [0.6645],
        [0.6399],
        [0.5907],
        [0.6648],
        [0.5063],
        [0.6656],
        [0.6656],
        [0.5644]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0063,     -1.0234,     -0.9648,     -1.2031,     -0.9883,     -1.3750,     -1.0859,     -1.3203,     -0.9023,     -1.1094,     -0.6562,     -0.9844,     -1.1562,     -0.8633,     -0.7148],
        [    -0.2285,    -35.2500,    -34.7500,    -43.5000,    -34.2500,    -50.5000,    -39.2500,    -48.5000,    -31.6250,    -41.0000,    -23.2500,    -36.2500,    -43.0000,    -30.5000,    -27.0000],
        [    -0.1885,    -30.1250,    -27.8750,    -35.0000,    -27.1250,    -41.5000,    -30.7500,    -39.5000,    -25.2500,    -33.7500,    -19.1250,    -30.0000,    -35.0000,    -24.7500,    -21.2500],
        [    -0.3223,    -52.7500,    -50.2500,    -62.2500,    -51.0000,    -71.5000,    -55.0000,    -67.5000,    -46.5000,    -57.5000,    -33.7500,    -51.2500,    -59.5000,    -44.5000,    -37.2500],
        [    -0.2334,    -43.5000,    -40.5000,    -50.7500,    -41.2500,    -57.0000,    -46.7500,    -58.2500,    -38.7500,    -45.2500,    -28.0000,    -39.7500,    -50.2500,    -37.0000,    -29.6250],
        [    -0.3984,    -64.5000,    -61.0000,    -76.5000,    -61.7500,    -87.5000,    -69.5000,    -84.5000,    -56.2500,    -71.5000,    -42.2500,    -63.2500,    -74.0000,    -54.0000,    -47.0000],
        [    -0.4199,    -65.0000,    -59.7500,    -75.0000,    -61.5000,    -86.5000,    -69.0000,    -82.0000,    -55.7500,    -70.5000,    -40.5000,    -63.0000,    -71.5000,    -53.7500,    -45.5000],
        [    -0.4258,    -69.5000,    -66.5000,    -83.0000,    -68.5000,    -94.0000,    -75.5000,    -91.0000,    -62.0000,    -75.5000,    -45.0000,    -67.0000,    -79.0000,    -59.0000,    -50.0000],
        [    -0.2520,    -43.0000,    -40.2500,    -51.5000,    -43.0000,    -58.2500,    -46.2500,    -57.0000,    -39.7500,    -46.7500,    -29.1250,    -40.5000,    -49.2500,    -37.7500,    -30.1250],
        [    -0.2910,    -51.7500,    -49.5000,    -60.5000,    -50.5000,    -69.5000,    -54.5000,    -68.5000,    -45.7500,    -54.7500,    -33.5000,    -49.0000,    -59.0000,    -43.2500,    -37.0000],
        [    -0.1729,    -35.0000,    -33.2500,    -41.7500,    -34.2500,    -45.0000,    -38.7500,    -48.0000,    -31.0000,    -35.0000,    -22.1250,    -31.3750,    -41.0000,    -28.8750,    -23.8750],
        [    -0.1592,    -26.3750,    -25.1250,    -30.1250,    -24.8750,    -36.2500,    -26.0000,    -33.7500,    -23.1250,    -29.1250,    -16.8750,    -25.7500,    -30.1250,    -22.2500,    -18.6250],
        [    -0.5039,    -79.5000,    -75.0000,    -94.0000,    -78.0000,   -107.5000,    -85.0000,   -102.5000,    -71.0000,    -86.5000,    -51.5000,    -77.5000,    -89.0000,    -67.5000,    -57.0000],
        [    -0.3184,    -53.7500,    -50.5000,    -64.0000,    -53.2500,    -72.5000,    -57.5000,    -70.5000,    -49.0000,    -58.2500,    -35.7500,    -51.0000,    -61.0000,    -46.2500,    -37.5000],
        [    -0.2930,    -44.2500,    -43.0000,    -52.0000,    -43.2500,    -60.7500,    -46.0000,    -54.7500,    -39.2500,    -50.0000,    -28.5000,    -45.0000,    -48.5000,    -37.5000,    -32.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6343],
        [0.6122],
        [0.6688],
        [0.6067],
        [0.4795],
        [0.6672],
        [0.6458],
        [0.6984],
        [0.7170],
        [0.6232],
        [0.5792],
        [0.6648],
        [0.6857],
        [0.5943]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8555,     0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4336,     0.1484,     0.4180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0332,     0.0092,     0.3223,     0.6367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0000,     0.0015,     0.0014,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0016,     0.0011,     0.0021,     0.0074,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0007,     0.0002,     0.0029,     0.0066,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0000,     0.0031,     0.0038,     0.9141,     0.0000,     0.0000,     0.0786,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0117,     0.0007,     0.0977,     0.0564,     0.6562,     0.0000,     0.0000,     0.1660,     0.0110,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0020,     0.0001,     0.0225,     0.0164,     0.8164,     0.0000,     0.0000,     0.1406,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0057,     0.0016,     0.0200,     0.0149,     0.4043,     0.0000,     0.0000,     0.0152,     0.0009,     0.0000,     0.5352,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0007,     0.0001,     0.0019,     0.0045,     0.9844,     0.0000,     0.0000,     0.0036,     0.0000,     0.0000,     0.0063,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.0000,     0.0037,     0.0040,     0.8750,     0.0000,     0.0000,     0.0854,     0.0002,     0.0000,     0.0240,     0.0000,     0.0058,     0.0000],
        [    0.0000,     0.0034,     0.0006,     0.0334,     0.0344,     0.2734,     0.0000,     0.0000,     0.0703,     0.0027,     0.0000,     0.5781,     0.0000,     0.0034,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0019,     0.3262,     0.2910,     0.3594,     0.3496,     0.3867,     0.0488,     0.2002,     0.3809,     0.3262,     0.2598,     0.4023,     0.1836,     0.3438,     0.1562],
        [    0.1089,    20.2500,    18.5000,    20.8750,    20.6250,    27.0000,     8.1250,    15.1250,    21.8750,    15.9375,    13.4375,    21.2500,    14.2500,    20.2500,    10.0625],
        [    0.1270,    22.0000,    20.2500,    22.0000,    21.1250,    24.8750,     6.4688,    12.7500,    21.3750,    17.2500,    12.3750,    25.1250,    11.2500,    19.0000,     9.3125],
        [    0.1050,    18.2500,    17.2500,    18.2500,    18.5000,    22.0000,     6.4375,    12.1250,    17.7500,    14.7500,    10.5000,    20.5000,    10.4375,    16.0000,     8.2500],
        [    0.1436,    25.2500,    24.0000,    27.5000,    28.1250,    33.7500,     8.8125,    19.0000,    30.2500,    23.8750,    19.3750,    28.7500,    18.1250,    27.7500,    12.8125],
        [    0.1748,    31.0000,    28.1250,    32.5000,    32.5000,    39.0000,     7.8125,    21.0000,    34.7500,    27.3750,    22.2500,    35.7500,    19.7500,    31.8750,    14.7500],
        [    0.0835,    16.7500,    16.3750,    17.0000,    18.2500,    23.1250,    10.1250,    14.3125,    17.5000,    13.0625,    10.8750,    16.8750,    13.5000,    16.1250,     8.6875],
        [    0.1060,    19.2500,    17.7500,    20.6250,    21.5000,    26.5000,     8.3750,    16.3750,    21.0000,    16.6250,    13.7500,    21.6250,    14.8125,    19.1250,     9.7500],
        [    0.1523,    27.0000,    24.1250,    29.2500,    29.3750,    35.0000,     6.6875,    19.2500,    32.5000,    26.3750,    21.3750,    31.2500,    18.0000,    29.6250,    13.1250],
        [    0.1133,    19.5000,    16.6250,    21.6250,    21.0000,    23.5000,     3.7031,    12.7500,    22.1250,    19.3750,    14.7500,    23.6250,    10.7500,    19.5000,     8.9375],
        [    0.1514,    25.8750,    23.2500,    28.2500,    28.0000,    31.8750,     6.0625,    17.3750,    30.1250,    25.2500,    20.3750,    31.1250,    15.8750,    27.2500,    12.3125],
        [    0.1270,    21.7500,    20.5000,    23.0000,    22.7500,    26.0000,     5.0625,    13.5625,    22.7500,    19.8750,    15.0625,    26.2500,    11.8750,    20.2500,    10.0625],
        [    0.1172,    21.0000,    19.5000,    22.1250,    22.8750,    28.3750,     8.7500,    16.6250,    22.7500,    17.5000,    14.3125,    23.2500,    15.3125,    20.7500,    10.2500],
        [    0.1514,    26.6250,    23.8750,    29.0000,    29.0000,    34.5000,     6.5000,    18.8750,    32.2500,    26.0000,    21.1250,    30.8750,    17.7500,    29.5000,    13.0000],
        [    0.1309,    23.6250,    21.7500,    25.8750,    25.8750,    28.0000,     5.0938,    14.8125,    26.6250,    23.3750,    17.5000,    28.7500,    13.0625,    23.6250,    11.1875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.1985],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0002],
        [    0.0000],
        [    0.0074],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0008],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3184,     0.6836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1904,     0.4102,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0898,     0.1924,     0.1885,     0.5312,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0562,     0.1206,     0.1182,     0.3320,     0.3730,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0537,     0.1143,     0.1118,     0.3105,     0.3496,     0.0583,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0055,     0.0118,     0.0115,     0.0322,     0.0364,     0.0058,     0.8984,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0054,     0.0116,     0.0114,     0.0317,     0.0359,     0.0058,     0.8789,     0.0211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0048,     0.0103,     0.0100,     0.0282,     0.0317,     0.0051,     0.7812,     0.0187,     0.1099,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0040,     0.0085,     0.0084,     0.0234,     0.0264,     0.0042,     0.6484,     0.0155,     0.0913,     0.1699,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0038,     0.0082,     0.0081,     0.0227,     0.0255,     0.0041,     0.6250,     0.0150,     0.0884,     0.1641,     0.0364,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0021,     0.0046,     0.0045,     0.0126,     0.0142,     0.0022,     0.3496,     0.0084,     0.0491,     0.0913,     0.0203,     0.4414,     0.0000],
        [    0.0000,     0.0000,     0.0019,     0.0041,     0.0040,     0.0114,     0.0128,     0.0020,     0.3145,     0.0075,     0.0442,     0.0825,     0.0183,     0.3984,     0.0991]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.1729,      0.2637,      0.2656,      0.2656,      0.2676,      0.2676,      0.2656,      0.2715,      0.2656,      0.2695,      0.2695,      0.2676,      0.2715,      0.2695],
        [    -0.0371,     28.7500,     49.2500,     49.5000,     49.5000,     50.0000,     50.0000,     49.2500,     51.7500,     49.7500,     50.7500,     51.0000,     50.2500,     51.7500,     51.0000],
        [    -0.1118,     47.2500,     87.5000,     88.0000,     88.0000,     89.0000,     89.0000,     87.5000,     92.5000,     88.5000,     90.5000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1128,     47.0000,     87.0000,     88.0000,     88.0000,     89.0000,     89.0000,     87.0000,     92.0000,     88.5000,     90.5000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1128,     47.0000,     87.0000,     88.0000,     88.0000,     89.0000,     89.0000,     87.0000,     92.5000,     88.5000,     90.5000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1133,     47.0000,     87.0000,     88.0000,     88.0000,     89.0000,     89.0000,     87.0000,     92.0000,     88.5000,     90.0000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1138,     47.0000,     87.0000,     88.0000,     88.0000,     89.0000,     89.0000,     87.0000,     92.0000,     88.5000,     90.0000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1104,     47.0000,     87.0000,     87.5000,     87.5000,     88.5000,     88.5000,     87.0000,     92.0000,     88.0000,     90.0000,     90.5000,     89.0000,     92.0000,     90.5000],
        [    -0.1162,     46.2500,     86.0000,     87.0000,     87.0000,     88.0000,     88.0000,     86.0000,     91.0000,     87.5000,     89.0000,     90.0000,     88.5000,     91.5000,     90.0000],
        [    -0.1128,     47.0000,     87.0000,     88.0000,     88.0000,     89.0000,     89.0000,     87.5000,     92.5000,     88.5000,     90.5000,     91.0000,     89.5000,     92.5000,     91.0000],
        [    -0.1147,     46.7500,     86.5000,     87.5000,     87.5000,     88.5000,     88.5000,     87.0000,     92.0000,     88.0000,     90.0000,     90.5000,     89.0000,     92.0000,     90.5000],
        [    -0.1152,     46.5000,     86.5000,     87.0000,     87.0000,     88.0000,     88.5000,     86.5000,     91.5000,     88.0000,     89.5000,     90.0000,     88.5000,     92.0000,     90.5000],
        [    -0.1138,     46.7500,     87.0000,     87.5000,     87.5000,     88.5000,     88.5000,     87.0000,     92.0000,     88.0000,     90.0000,     90.5000,     89.0000,     92.0000,     90.5000],
        [    -0.1167,     46.2500,     86.0000,     86.5000,     86.5000,     87.5000,     88.0000,     86.0000,     91.0000,     87.5000,     89.0000,     89.5000,     88.0000,     91.5000,     90.0000],
        [    -0.1152,     46.5000,     86.5000,     87.0000,     87.0000,     88.0000,     88.5000,     86.5000,     91.5000,     88.0000,     89.5000,     90.0000,     88.5000,     92.0000,     90.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2513],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0016,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.5078,     0.4922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0005,     0.3418,     0.3320,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     0.2578,     0.2520,     0.2480,     0.2422,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     0.2080,     0.2021,     0.1992,     0.1953,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.1709,     0.1660,     0.1641,     0.1611,     0.1611,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0003,     0.1514,     0.1475,     0.1455,     0.1426,     0.1426,     0.1562,     0.1143,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.1309,     0.1270,     0.1260,     0.1230,     0.1230,     0.1348,     0.0981,     0.1367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.1177,     0.1143,     0.1128,     0.1104,     0.1104,     0.1201,     0.0879,     0.1216,     0.1055,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.1069,     0.1040,     0.1025,     0.1006,     0.1006,     0.1099,     0.0801,     0.1108,     0.0957,     0.0894,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0977,     0.0947,     0.0933,     0.0913,     0.0913,     0.0996,     0.0728,     0.1006,     0.0874,     0.0811,     0.0898,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0903,     0.0879,     0.0864,     0.0850,     0.0850,     0.0933,     0.0684,     0.0942,     0.0815,     0.0757,     0.0840,     0.0674,     0.0000],
        [    0.0000,     0.0002,     0.0845,     0.0820,     0.0811,     0.0791,     0.0791,     0.0864,     0.0630,     0.0874,     0.0757,     0.0703,     0.0781,     0.0625,     0.0698]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0005,      0.0938,      0.0747,      0.0742,      0.0737,      0.0757,      0.0752,      0.0791,      0.0757,      0.0776,      0.0752,      0.0757,      0.0752,      0.0757,      0.0757],
        [     0.0035,     11.0625,     12.6250,     12.6250,     12.5625,     12.6250,     12.6250,     12.8125,     12.5625,     12.8125,     12.6250,     12.6250,     12.6250,     12.5625,     12.6250],
        [    -0.0330,     14.7500,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     20.8750,     21.2500,     21.0000,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0330,     14.7500,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0332,     14.7500,     21.2500,     21.2500,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0325,     14.8750,     21.2500,     21.2500,     21.2500,     21.1250,     21.1250,     21.2500,     21.0000,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0325,     14.8750,     21.2500,     21.2500,     21.2500,     21.1250,     21.1250,     21.2500,     21.0000,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0310,     14.9375,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     20.8750,     21.2500,     21.0000,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0315,     14.9375,     21.2500,     21.1250,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0317,     14.9375,     21.2500,     21.1250,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0322,     14.8750,     21.2500,     21.2500,     21.2500,     21.1250,     21.1250,     21.2500,     21.0000,     21.2500,     21.1250,     21.0000,     21.1250,     21.0000,     21.0000],
        [    -0.0317,     14.9375,     21.2500,     21.1250,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0322,     14.8750,     21.2500,     21.2500,     21.2500,     21.1250,     21.1250,     21.2500,     21.0000,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0312,     14.9375,     21.1250,     21.1250,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.0000,     21.0000,     21.1250,     20.8750,     21.0000],
        [    -0.0320,     14.9375,     21.2500,     21.2500,     21.1250,     21.1250,     21.1250,     21.2500,     20.8750,     21.2500,     21.1250,     21.0000,     21.1250,     20.8750,     21.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5195,     0.4805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3535,     0.3242,     0.3223,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2656,     0.2451,     0.2432,     0.2461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2139,     0.1963,     0.1953,     0.1973,     0.1973,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1777,     0.1641,     0.1631,     0.1641,     0.1650,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1533,     0.1406,     0.1396,     0.1416,     0.1416,     0.1416,     0.1406,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1348,     0.1240,     0.1230,     0.1240,     0.1245,     0.1250,     0.1240,     0.1211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1196,     0.1104,     0.1094,     0.1104,     0.1108,     0.1108,     0.1104,     0.1074,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1079,     0.0996,     0.0986,     0.0996,     0.1001,     0.1001,     0.0996,     0.0972,     0.1001,     0.0977,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0981,     0.0903,     0.0898,     0.0908,     0.0908,     0.0913,     0.0903,     0.0884,     0.0913,     0.0889,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0898,     0.0830,     0.0825,     0.0830,     0.0835,     0.0835,     0.0830,     0.0811,     0.0835,     0.0815,     0.0830,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0767,     0.0762,     0.0767,     0.0771,     0.0771,     0.0767,     0.0747,     0.0771,     0.0752,     0.0767,     0.0767,     0.0752,     0.0000],
        [    0.0000,     0.0776,     0.0713,     0.0708,     0.0713,     0.0718,     0.0718,     0.0713,     0.0693,     0.0718,     0.0698,     0.0713,     0.0713,     0.0698,     0.0703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.0840,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835,      0.0835],
        [    -0.0542,     25.5000,     25.5000,     25.5000,     25.5000,     25.5000,     25.5000,     25.5000,     25.3750,     25.5000,     25.5000,     25.5000,     25.5000,     25.3750,     25.5000],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750],
        [    -0.0540,     25.5000,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750,     25.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3359,     0.3320,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2520,     0.2490,     0.2500,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.1992,     0.2002,     0.1992,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1680,     0.1660,     0.1660,     0.1660,     0.1660,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1426,     0.1426,     0.1426,     0.1436,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.1245,     0.1250,     0.1245,     0.1245,     0.1260,     0.1250,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1118,     0.1108,     0.1113,     0.1108,     0.1108,     0.1118,     0.1113,     0.1108,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1011,     0.1001,     0.1001,     0.1001,     0.1001,     0.1006,     0.1001,     0.1001,     0.0986,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0918,     0.0908,     0.0908,     0.0908,     0.0908,     0.0918,     0.0908,     0.0908,     0.0894,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0840,     0.0830,     0.0835,     0.0835,     0.0835,     0.0840,     0.0835,     0.0835,     0.0820,     0.0835,     0.0835,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0776,     0.0767,     0.0771,     0.0771,     0.0771,     0.0776,     0.0771,     0.0771,     0.0757,     0.0771,     0.0771,     0.0767,     0.0771,     0.0000],
        [    0.0000,     0.0723,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0703,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742,      0.0742],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.6875,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500],
        [    -0.0133,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500,     15.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2520,     0.2490,     0.2500,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.2002,     0.2002,     0.1992,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1660,     0.1670,     0.1660,     0.1660,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1436,     0.1426,     0.1426,     0.1426,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.1250,     0.1250,     0.1245,     0.1245,     0.1250,     0.1250,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1118,     0.1108,     0.1113,     0.1108,     0.1108,     0.1108,     0.1113,     0.1108,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.1001,     0.1001,     0.0996,     0.0996,     0.1001,     0.1001,     0.0996,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0908,     0.0913,     0.0908,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0840,     0.0835,     0.0835,     0.0830,     0.0830,     0.0835,     0.0835,     0.0830,     0.0830,     0.0830,     0.0830,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0771,     0.0767,     0.0767,     0.0771,     0.0771,     0.0767,     0.0767,     0.0767,     0.0767,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474,     0.0474],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500],
        [    0.0454,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500,    27.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.4980, 0.5039, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3320, 0.3340, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2480, 0.2500, 0.2500, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1982, 0.2002, 0.2002, 0.2002, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1650, 0.1670, 0.1670, 0.1670, 0.1670, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1416, 0.1436, 0.1436, 0.1426, 0.1426, 0.1426, 0.1436, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1240, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1104, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0991, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0903, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0825, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0000, 0.0000],
        [0.0000, 0.0762, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0000],
        [0.0000, 0.0708, 0.0718, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0004,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982,     0.1982],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000],
        [    0.2695,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000,   139.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		( and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001)
 and
------
		( and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001 and:0.0001)
 and and and and and and and and and and and and and and and
@ 2550 train 4.2740 , allloss: 4.2740, dt: 1173.02ms, fracRes: 0.1534, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5258, norm(y): 0.9986, norm:0.4755, tok/sec: 111739.37, flops:117.30, batch-reuse:1
@ 2551 train 4.7386 , allloss: 4.7386, dt: 709.94ms, fracRes: 0.1536, norm(attn): 22.2500, norm(output): 0.4141, norm(x): 0.5398, norm(y): 0.9991, norm:1.4004, tok/sec: 184623.69, flops:193.82, batch-reuse:1
@ 2552 train 4.2307 , allloss: 4.2307, dt: 703.02ms, fracRes: 0.1525, norm(attn): 22.3750, norm(output): 0.4141, norm(x): 0.5392, norm(y): 0.9980, norm:0.7204, tok/sec: 186442.53, flops:195.73, batch-reuse:1
@ 2553 train 4.2356 , allloss: 4.2356, dt: 703.36ms, fracRes: 0.1530, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5369, norm(y): 0.9981, norm:0.5568, tok/sec: 186352.41, flops:195.63, batch-reuse:1
@ 2554 train 4.2080 , allloss: 4.2080, dt: 706.13ms, fracRes: 0.1529, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5211, norm(y): 0.9984, norm:0.4392, tok/sec: 185620.77, flops:194.87, batch-reuse:1
@ 2555 train 4.0327 , allloss: 4.0327, dt: 709.72ms, fracRes: 0.1540, norm(attn): 22.2500, norm(output): 0.3867, norm(x): 0.5131, norm(y): 0.9985, norm:0.5995, tok/sec: 184680.44, flops:193.88, batch-reuse:1
@ 2556 train 4.0928 , allloss: 4.0928, dt: 688.60ms, fracRes: 0.1568, norm(attn): 22.2500, norm(output): 0.4121, norm(x): 0.5402, norm(y): 0.9983, norm:0.4597, tok/sec: 190346.73, flops:199.83, batch-reuse:1
@ 2557 train 4.1404 , allloss: 4.1404, dt: 701.75ms, fracRes: 0.1553, norm(attn): 22.1250, norm(output): 0.4141, norm(x): 0.5398, norm(y): 0.9979, norm:0.5619, tok/sec: 186778.82, flops:196.08, batch-reuse:1
@ 2558 train 4.1690 , allloss: 4.1690, dt: 697.72ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5280, norm(y): 0.9979, norm:0.4435, tok/sec: 187857.45, flops:197.21, batch-reuse:1
@ 2559 train 4.1290 , allloss: 4.1290, dt: 707.97ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.3926, norm(x): 0.5226, norm(y): 0.9981, norm:0.4472, tok/sec: 185138.81, flops:194.36, batch-reuse:1
@ 2560 train 4.0362 , allloss: 4.0362, dt: 710.28ms, fracRes: 0.1532, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5173, norm(y): 0.9979, norm:0.5208, tok/sec: 184535.44, flops:193.73, batch-reuse:1
@ 2561 train 4.0906 , allloss: 4.0906, dt: 706.56ms, fracRes: 0.1568, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5295, norm(y): 0.9980, norm:0.5175, tok/sec: 185506.84, flops:194.75, batch-reuse:1
@ 2562 train 4.1017 , allloss: 4.1017, dt: 705.01ms, fracRes: 0.1560, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5232, norm(y): 0.9974, norm:0.6039, tok/sec: 185914.36, flops:195.17, batch-reuse:1
@ 2563 train 4.0700 , allloss: 4.0700, dt: 706.75ms, fracRes: 0.1552, norm(attn): 22.2500, norm(output): 0.4062, norm(x): 0.5306, norm(y): 0.9971, norm:0.4878, tok/sec: 185457.52, flops:194.69, batch-reuse:1
@ 2564 train 4.0076 , allloss: 4.0076, dt: 703.59ms, fracRes: 0.1530, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5223, norm(y): 0.9969, norm:0.6061, tok/sec: 186290.14, flops:195.57, batch-reuse:1
@ 2565 train 4.1886 , allloss: 4.1886, dt: 707.38ms, fracRes: 0.1532, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5244, norm(y): 0.9965, norm:0.4996, tok/sec: 185292.32, flops:194.52, batch-reuse:1
@ 2566 train 4.1262 , allloss: 4.1262, dt: 696.40ms, fracRes: 0.1542, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5223, norm(y): 0.9961, norm:0.4693, tok/sec: 188214.85, flops:197.59, batch-reuse:1
@ 2567 train 4.1040 , allloss: 4.1040, dt: 709.03ms, fracRes: 0.1537, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5257, norm(y): 0.9967, norm:0.4725, tok/sec: 184861.84, flops:194.07, batch-reuse:1
@ 2568 train 4.1027 , allloss: 4.1027, dt: 709.94ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5251, norm(y): 0.9971, norm:0.4106, tok/sec: 184623.01, flops:193.82, batch-reuse:1
@ 2569 train 4.1674 , allloss: 4.1674, dt: 711.93ms, fracRes: 0.1537, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5169, norm(y): 0.9972, norm:0.4542, tok/sec: 184108.10, flops:193.28, batch-reuse:1
@ 2570 train 4.0825 , allloss: 4.0825, dt: 710.45ms, fracRes: 0.1541, norm(attn): 22.2500, norm(output): 0.3965, norm(x): 0.5213, norm(y): 0.9969, norm:0.4064, tok/sec: 184490.92, flops:193.68, batch-reuse:1
@ 2571 train 4.0683 , allloss: 4.0683, dt: 707.20ms, fracRes: 0.1539, norm(attn): 22.1250, norm(output): 0.4121, norm(x): 0.5359, norm(y): 0.9971, norm:0.3989, tok/sec: 185339.10, flops:194.57, batch-reuse:1
@ 2572 train 4.1870 , allloss: 4.1870, dt: 706.84ms, fracRes: 0.1528, norm(attn): 22.2500, norm(output): 0.4062, norm(x): 0.5314, norm(y): 0.9974, norm:0.3925, tok/sec: 185432.94, flops:194.67, batch-reuse:1
@ 2573 train 4.1080 , allloss: 4.1080, dt: 719.51ms, fracRes: 0.1521, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5257, norm(y): 0.9975, norm:0.4069, tok/sec: 182168.16, flops:191.24, batch-reuse:1
@ 2574 train 4.0592 , allloss: 4.0592, dt: 704.04ms, fracRes: 0.1531, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5227, norm(y): 0.9975, norm:0.4006, tok/sec: 186171.16, flops:195.44, batch-reuse:1
@ 2575 train 4.1057 , allloss: 4.1057, dt: 716.14ms, fracRes: 0.1539, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5244, norm(y): 0.9976, norm:0.3673, tok/sec: 183026.57, flops:192.14, batch-reuse:1
@ 2576 train 4.0702 , allloss: 4.0702, dt: 719.07ms, fracRes: 0.1544, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5199, norm(y): 0.9976, norm:0.4302, tok/sec: 182280.44, flops:191.36, batch-reuse:1
@ 2577 train 4.1445 , allloss: 4.1445, dt: 695.94ms, fracRes: 0.1542, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5263, norm(y): 0.9977, norm:0.3600, tok/sec: 188338.52, flops:197.72, batch-reuse:1
@ 2578 train 3.9501 , allloss: 3.9501, dt: 704.02ms, fracRes: 0.1544, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5177, norm(y): 0.9975, norm:0.4382, tok/sec: 186177.09, flops:195.45, batch-reuse:1
@ 2579 train 4.1445 , allloss: 4.1445, dt: 700.34ms, fracRes: 0.1553, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5242, norm(y): 0.9977, norm:0.3846, tok/sec: 187156.01, flops:196.48, batch-reuse:1
@ 2580 train 4.0978 , allloss: 4.0978, dt: 695.20ms, fracRes: 0.1539, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5178, norm(y): 0.9978, norm:0.4111, tok/sec: 188537.59, flops:197.93, batch-reuse:1
@ 2581 train 4.0503 , allloss: 4.0503, dt: 707.09ms, fracRes: 0.1538, norm(attn): 22.2500, norm(output): 0.3984, norm(x): 0.5219, norm(y): 0.9977, norm:0.3888, tok/sec: 185368.73, flops:194.60, batch-reuse:1
@ 2582 train 4.0328 , allloss: 4.0328, dt: 694.40ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.3926, norm(x): 0.5246, norm(y): 0.9976, norm:0.3950, tok/sec: 188755.09, flops:198.16, batch-reuse:1
@ 2583 train 4.0368 , allloss: 4.0368, dt: 705.45ms, fracRes: 0.1544, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5234, norm(y): 0.9976, norm:0.3754, tok/sec: 185798.62, flops:195.05, batch-reuse:1
@ 2584 train 4.0765 , allloss: 4.0765, dt: 703.37ms, fracRes: 0.1545, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5249, norm(y): 0.9976, norm:0.3637, tok/sec: 186348.36, flops:195.63, batch-reuse:1
@ 2585 train 4.0823 , allloss: 4.0823, dt: 706.78ms, fracRes: 0.1547, norm(attn): 22.2500, norm(output): 0.4043, norm(x): 0.5273, norm(y): 0.9976, norm:0.3643, tok/sec: 185450.58, flops:194.69, batch-reuse:1
@ 2586 train 3.9823 , allloss: 3.9823, dt: 707.73ms, fracRes: 0.1547, norm(attn): 22.2500, norm(output): 0.3984, norm(x): 0.5274, norm(y): 0.9976, norm:0.3983, tok/sec: 185201.31, flops:194.42, batch-reuse:1
@ 2587 train 4.1582 , allloss: 4.1582, dt: 706.68ms, fracRes: 0.1550, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5295, norm(y): 0.9977, norm:0.4053, tok/sec: 185474.92, flops:194.71, batch-reuse:1
@ 2588 train 4.0263 , allloss: 4.0263, dt: 708.70ms, fracRes: 0.1538, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5226, norm(y): 0.9972, norm:0.4141, tok/sec: 184945.86, flops:194.16, batch-reuse:1
@ 2589 train 4.1260 , allloss: 4.1260, dt: 710.10ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5263, norm(y): 0.9974, norm:0.3717, tok/sec: 184581.17, flops:193.77, batch-reuse:1
@ 2590 train 4.0572 , allloss: 4.0572, dt: 706.94ms, fracRes: 0.1533, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5196, norm(y): 0.9974, norm:0.4145, tok/sec: 185408.17, flops:194.64, batch-reuse:1
@ 2591 train 4.1198 , allloss: 4.1198, dt: 700.25ms, fracRes: 0.1533, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5190, norm(y): 0.9975, norm:0.3815, tok/sec: 187177.81, flops:196.50, batch-reuse:1
@ 2592 train 4.1514 , allloss: 4.1514, dt: 703.50ms, fracRes: 0.1537, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5256, norm(y): 0.9975, norm:0.3862, tok/sec: 186315.46, flops:195.59, batch-reuse:1
@ 2593 train 4.0371 , allloss: 4.0371, dt: 701.60ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.4141, norm(x): 0.5405, norm(y): 0.9975, norm:0.3970, tok/sec: 186818.74, flops:196.12, batch-reuse:1
@ 2594 train 4.0739 , allloss: 4.0739, dt: 708.87ms, fracRes: 0.1528, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5227, norm(y): 0.9970, norm:0.3927, tok/sec: 184901.75, flops:194.11, batch-reuse:1
@ 2595 train 4.0844 , allloss: 4.0844, dt: 709.64ms, fracRes: 0.1531, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5183, norm(y): 0.9968, norm:0.3630, tok/sec: 184702.22, flops:193.90, batch-reuse:1
@ 2596 train 4.1873 , allloss: 4.1873, dt: 701.79ms, fracRes: 0.1554, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5321, norm(y): 0.9970, norm:0.4196, tok/sec: 186768.79, flops:196.07, batch-reuse:1
@ 2597 train 4.0341 , allloss: 4.0341, dt: 702.31ms, fracRes: 0.1551, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5247, norm(y): 0.9969, norm:0.3765, tok/sec: 186630.00, flops:195.92, batch-reuse:1
@ 2598 train 4.0366 , allloss: 4.0366, dt: 711.86ms, fracRes: 0.1541, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5226, norm(y): 0.9968, norm:0.4000, tok/sec: 184126.66, flops:193.30, batch-reuse:1
@ 2599 train 3.9891 , allloss: 3.9891, dt: 707.54ms, fracRes: 0.1549, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5241, norm(y): 0.9967, norm:0.3605, tok/sec: 185250.42, flops:194.48, batch-reuse:1
@ 2600 train 3.9856 , allloss: 3.9856, dt: 716.73ms, fracRes: 0.1550, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5182, norm(y): 0.9969, norm:0.3709, tok/sec: 182873.88, flops:191.98, batch-reuse:1
@ 2601 train 4.1790 , allloss: 4.1790, dt: 702.24ms, fracRes: 0.1559, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5246, norm(y): 0.9968, norm:0.3954, tok/sec: 186647.49, flops:195.94, batch-reuse:1
@ 2602 train 4.1713 , allloss: 4.1713, dt: 703.49ms, fracRes: 0.1557, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5279, norm(y): 0.9967, norm:0.3708, tok/sec: 186316.98, flops:195.60, batch-reuse:1
@ 2603 train 4.2981 , allloss: 4.2981, dt: 712.19ms, fracRes: 0.1561, norm(attn): 22.1250, norm(output): 0.4043, norm(x): 0.5298, norm(y): 0.9967, norm:0.4134, tok/sec: 184041.85, flops:193.21, batch-reuse:1
@ 2604 train 4.2497 , allloss: 4.2497, dt: 713.61ms, fracRes: 0.1567, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5303, norm(y): 0.9967, norm:0.4084, tok/sec: 183673.35, flops:192.82, batch-reuse:1
@ 2605 train 4.2024 , allloss: 4.2024, dt: 710.22ms, fracRes: 0.1573, norm(attn): 22.0000, norm(output): 0.4004, norm(x): 0.5309, norm(y): 0.9964, norm:0.3939, tok/sec: 184552.42, flops:193.74, batch-reuse:1
@ 2606 train 4.2686 , allloss: 4.2686, dt: 694.82ms, fracRes: 0.1565, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5272, norm(y): 0.9955, norm:0.4068, tok/sec: 188642.14, flops:198.04, batch-reuse:1
@ 2607 train 4.1765 , allloss: 4.1765, dt: 707.01ms, fracRes: 0.1583, norm(attn): 22.0000, norm(output): 0.4023, norm(x): 0.5376, norm(y): 0.9936, norm:0.4193, tok/sec: 185388.73, flops:194.62, batch-reuse:1
@ 2608 train 4.2408 , allloss: 4.2408, dt: 710.31ms, fracRes: 0.1574, norm(attn): 22.0000, norm(output): 0.4004, norm(x): 0.5271, norm(y): 0.9907, norm:0.3800, tok/sec: 184527.27, flops:193.72, batch-reuse:1
@ 2609 train 4.4253 , allloss: 4.4253, dt: 704.29ms, fracRes: 0.1571, norm(attn): 22.0000, norm(output): 0.4102, norm(x): 0.5372, norm(y): 0.9916, norm:0.4350, tok/sec: 186105.68, flops:195.37, batch-reuse:1
@ 2610 train 4.3684 , allloss: 4.3684, dt: 696.26ms, fracRes: 0.1575, norm(attn): 22.0000, norm(output): 0.3984, norm(x): 0.5310, norm(y): 0.9936, norm:0.4581, tok/sec: 188252.68, flops:197.63, batch-reuse:1
@ 2611 train 4.2666 , allloss: 4.2666, dt: 714.02ms, fracRes: 0.1573, norm(attn): 22.1250, norm(output): 0.4043, norm(x): 0.5308, norm(y): 0.9954, norm:0.4260, tok/sec: 183570.13, flops:192.71, batch-reuse:1
@ 2612 train 4.2665 , allloss: 4.2665, dt: 713.14ms, fracRes: 0.1574, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5319, norm(y): 0.9958, norm:0.4913, tok/sec: 183796.53, flops:192.95, batch-reuse:1
@ 2613 train 4.1095 , allloss: 4.1095, dt: 711.41ms, fracRes: 0.1561, norm(attn): 22.1250, norm(output): 0.4043, norm(x): 0.5333, norm(y): 0.9956, norm:0.4209, tok/sec: 184242.80, flops:193.42, batch-reuse:1
@ 2614 train 4.2684 , allloss: 4.2684, dt: 704.65ms, fracRes: 0.1542, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5251, norm(y): 0.9943, norm:0.3743, tok/sec: 186009.53, flops:195.27, batch-reuse:1
@ 2615 train 4.2590 , allloss: 4.2590, dt: 707.53ms, fracRes: 0.1540, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5243, norm(y): 0.9930, norm:0.4438, tok/sec: 185254.23, flops:194.48, batch-reuse:1
@ 2616 train 4.2536 , allloss: 4.2536, dt: 704.51ms, fracRes: 0.1543, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5301, norm(y): 0.9929, norm:0.3733, tok/sec: 186046.98, flops:195.31, batch-reuse:1
@ 2617 train 4.1699 , allloss: 4.1699, dt: 706.04ms, fracRes: 0.1539, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5232, norm(y): 0.9922, norm:0.3955, tok/sec: 185643.02, flops:194.89, batch-reuse:1
@ 2618 train 4.1030 , allloss: 4.1030, dt: 708.87ms, fracRes: 0.1549, norm(attn): 22.0000, norm(output): 0.3984, norm(x): 0.5271, norm(y): 0.9870, norm:0.4216, tok/sec: 184902.25, flops:194.11, batch-reuse:1
@ 2619 train 4.1701 , allloss: 4.1701, dt: 708.03ms, fracRes: 0.1564, norm(attn): 21.8750, norm(output): 0.4062, norm(x): 0.5319, norm(y): 0.9810, norm:0.3837, tok/sec: 185120.98, flops:194.34, batch-reuse:1
@ 2620 train 4.2563 , allloss: 4.2563, dt: 694.95ms, fracRes: 0.1559, norm(attn): 21.8750, norm(output): 0.4004, norm(x): 0.5289, norm(y): 0.9776, norm:0.3985, tok/sec: 188607.51, flops:198.00, batch-reuse:1
@ 2621 train 4.2028 , allloss: 4.2028, dt: 706.73ms, fracRes: 0.1564, norm(attn): 22.0000, norm(output): 0.4004, norm(x): 0.5289, norm(y): 0.9900, norm:0.4171, tok/sec: 185462.53, flops:194.70, batch-reuse:1
@ 2622 train 4.2126 , allloss: 4.2126, dt: 706.65ms, fracRes: 0.1560, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5294, norm(y): 0.9930, norm:0.3753, tok/sec: 185484.37, flops:194.72, batch-reuse:1
@ 2623 train 4.2886 , allloss: 4.2886, dt: 698.68ms, fracRes: 0.1579, norm(attn): 22.0000, norm(output): 0.4062, norm(x): 0.5368, norm(y): 0.9951, norm:0.4229, tok/sec: 187598.66, flops:196.94, batch-reuse:1
@ 2624 train 4.2769 , allloss: 4.2769, dt: 710.12ms, fracRes: 0.1566, norm(attn): 22.0000, norm(output): 0.4082, norm(x): 0.5348, norm(y): 0.9962, norm:0.3781, tok/sec: 184577.08, flops:193.77, batch-reuse:1
@ 2625 train 4.2348 , allloss: 4.2348, dt: 704.57ms, fracRes: 0.1564, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5342, norm(y): 0.9966, norm:0.4048, tok/sec: 186031.62, flops:195.30, batch-reuse:1
@ 2626 train 4.1968 , allloss: 4.1968, dt: 700.33ms, fracRes: 0.1560, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5291, norm(y): 0.9968, norm:0.4075, tok/sec: 187158.05, flops:196.48, batch-reuse:1
@ 2627 train 4.2460 , allloss: 4.2460, dt: 715.67ms, fracRes: 0.1563, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5263, norm(y): 0.9971, norm:0.3820, tok/sec: 183144.68, flops:192.27, batch-reuse:1
@ 2628 train 4.1105 , allloss: 4.1105, dt: 715.97ms, fracRes: 0.1568, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5347, norm(y): 0.9972, norm:0.3623, tok/sec: 183068.99, flops:192.19, batch-reuse:1
@ 2629 train 4.1831 , allloss: 4.1831, dt: 713.44ms, fracRes: 0.1558, norm(attn): 22.1250, norm(output): 0.4043, norm(x): 0.5275, norm(y): 0.9972, norm:0.3775, tok/sec: 183718.09, flops:192.87, batch-reuse:1
@ 2630 train 4.2734 , allloss: 4.2734, dt: 697.00ms, fracRes: 0.1572, norm(attn): 22.1250, norm(output): 0.4141, norm(x): 0.5393, norm(y): 0.9971, norm:0.4064, tok/sec: 188050.48, flops:197.42, batch-reuse:1
@ 2631 train 4.1627 , allloss: 4.1627, dt: 705.66ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5230, norm(y): 0.9971, norm:0.4110, tok/sec: 185743.50, flops:194.99, batch-reuse:1
@ 2632 train 4.2062 , allloss: 4.2062, dt: 694.97ms, fracRes: 0.1585, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5331, norm(y): 0.9972, norm:0.4032, tok/sec: 188601.82, flops:197.99, batch-reuse:1
@ 2633 train 4.2122 , allloss: 4.2122, dt: 702.58ms, fracRes: 0.1572, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5321, norm(y): 0.9971, norm:0.4133, tok/sec: 186559.26, flops:195.85, batch-reuse:1
@ 2634 train 4.1679 , allloss: 4.1679, dt: 712.90ms, fracRes: 0.1568, norm(attn): 22.2500, norm(output): 0.4082, norm(x): 0.5355, norm(y): 0.9971, norm:0.4271, tok/sec: 183858.43, flops:193.01, batch-reuse:1
@ 2635 train 4.1560 , allloss: 4.1560, dt: 707.28ms, fracRes: 0.1561, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5275, norm(y): 0.9971, norm:0.3838, tok/sec: 185318.99, flops:194.55, batch-reuse:1
@ 2636 train 4.2416 , allloss: 4.2416, dt: 709.92ms, fracRes: 0.1560, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5306, norm(y): 0.9974, norm:0.3743, tok/sec: 184627.97, flops:193.82, batch-reuse:1
@ 2637 train 4.2357 , allloss: 4.2357, dt: 711.86ms, fracRes: 0.1572, norm(attn): 22.2500, norm(output): 0.4004, norm(x): 0.5293, norm(y): 0.9971, norm:0.4098, tok/sec: 184126.11, flops:193.30, batch-reuse:1
@ 2638 train 4.2584 , allloss: 4.2584, dt: 709.56ms, fracRes: 0.1584, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5285, norm(y): 0.9969, norm:0.3904, tok/sec: 184722.45, flops:193.92, batch-reuse:1
@ 2639 train 4.2878 , allloss: 4.2878, dt: 711.39ms, fracRes: 0.1592, norm(attn): 22.1250, norm(output): 0.4102, norm(x): 0.5398, norm(y): 0.9970, norm:0.4249, tok/sec: 184248.97, flops:193.42, batch-reuse:1
@ 2640 train 4.1364 , allloss: 4.1364, dt: 700.53ms, fracRes: 0.1576, norm(attn): 22.1250, norm(output): 0.4062, norm(x): 0.5351, norm(y): 0.9970, norm:0.4605, tok/sec: 187102.89, flops:196.42, batch-reuse:1
@ 2641 train 4.2334 , allloss: 4.2334, dt: 703.52ms, fracRes: 0.1588, norm(attn): 22.1250, norm(output): 0.4082, norm(x): 0.5423, norm(y): 0.9972, norm:0.3989, tok/sec: 186308.89, flops:195.59, batch-reuse:1
@ 2642 train 4.2205 , allloss: 4.2205, dt: 697.55ms, fracRes: 0.1577, norm(attn): 22.2500, norm(output): 0.3945, norm(x): 0.5266, norm(y): 0.9971, norm:0.3933, tok/sec: 187903.10, flops:197.26, batch-reuse:1
@ 2643 train 4.1032 , allloss: 4.1032, dt: 699.15ms, fracRes: 0.1564, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5216, norm(y): 0.9969, norm:0.3888, tok/sec: 187473.15, flops:196.81, batch-reuse:1
@ 2644 train 4.2062 , allloss: 4.2062, dt: 707.75ms, fracRes: 0.1552, norm(attn): 22.2500, norm(output): 0.3867, norm(x): 0.5166, norm(y): 0.9968, norm:0.3489, tok/sec: 185196.13, flops:194.42, batch-reuse:1
@ 2645 train 4.2376 , allloss: 4.2376, dt: 709.15ms, fracRes: 0.1561, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5270, norm(y): 0.9965, norm:0.4162, tok/sec: 184829.46, flops:194.03, batch-reuse:1
@ 2646 train 4.2785 , allloss: 4.2785, dt: 703.49ms, fracRes: 0.1578, norm(attn): 22.2500, norm(output): 0.3906, norm(x): 0.5214, norm(y): 0.9969, norm:0.4914, tok/sec: 186317.86, flops:195.60, batch-reuse:1
@ 2647 train 4.2157 , allloss: 4.2157, dt: 707.91ms, fracRes: 0.1574, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5338, norm(y): 0.9968, norm:0.4462, tok/sec: 185152.90, flops:194.37, batch-reuse:1
@ 2648 train 4.1503 , allloss: 4.1503, dt: 709.30ms, fracRes: 0.1553, norm(attn): 22.2500, norm(output): 0.3965, norm(x): 0.5247, norm(y): 0.9964, norm:0.4219, tok/sec: 184791.75, flops:193.99, batch-reuse:1
@ 2649 train 4.1646 , allloss: 4.1646, dt: 706.32ms, fracRes: 0.1565, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5291, norm(y): 0.9959, norm:0.4529, tok/sec: 185571.52, flops:194.81, batch-reuse:1
@ 2650 train 4.1780 , allloss: 4.1780, dt: 708.80ms, fracRes: 0.1562, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5193, norm(y): 0.9957, norm:0.4804, tok/sec: 184920.10, flops:194.13, batch-reuse:1
@ 2651 train 4.1669 , allloss: 4.1669, dt: 701.01ms, fracRes: 0.1571, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5236, norm(y): 0.9961, norm:0.3793, tok/sec: 186976.00, flops:196.29, batch-reuse:1
@ 2652 train 4.1735 , allloss: 4.1735, dt: 694.45ms, fracRes: 0.1567, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5279, norm(y): 0.9960, norm:0.4662, tok/sec: 188740.90, flops:198.14, batch-reuse:1
@ 2653 train 4.2245 , allloss: 4.2245, dt: 700.88ms, fracRes: 0.1568, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5220, norm(y): 0.9956, norm:0.4434, tok/sec: 187010.54, flops:196.32, batch-reuse:1
@ 2654 train 4.1514 , allloss: 4.1514, dt: 692.31ms, fracRes: 0.1573, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5294, norm(y): 0.9953, norm:0.4125, tok/sec: 189324.72, flops:198.75, batch-reuse:1
@ 2655 train 4.1500 , allloss: 4.1500, dt: 711.46ms, fracRes: 0.1558, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5270, norm(y): 0.9953, norm:0.4062, tok/sec: 184230.51, flops:193.41, batch-reuse:1
@ 2656 train 4.2686 , allloss: 4.2686, dt: 708.47ms, fracRes: 0.1553, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5173, norm(y): 0.9956, norm:0.4040, tok/sec: 185006.85, flops:194.22, batch-reuse:1
@ 2657 train 4.1590 , allloss: 4.1590, dt: 709.24ms, fracRes: 0.1548, norm(attn): 22.2500, norm(output): 0.3848, norm(x): 0.5131, norm(y): 0.9958, norm:0.4119, tok/sec: 184806.22, flops:194.01, batch-reuse:1
@ 2658 train 4.1825 , allloss: 4.1825, dt: 706.77ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5196, norm(y): 0.9959, norm:0.4236, tok/sec: 185451.14, flops:194.69, batch-reuse:1
@ 2659 train 4.1407 , allloss: 4.1407, dt: 707.50ms, fracRes: 0.1565, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5259, norm(y): 0.9959, norm:0.4288, tok/sec: 185261.34, flops:194.49, batch-reuse:1
@ 2660 train 4.1343 , allloss: 4.1343, dt: 707.33ms, fracRes: 0.1572, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5256, norm(y): 0.9949, norm:0.4082, tok/sec: 185306.31, flops:194.53, batch-reuse:1
@ 2661 train 4.1586 , allloss: 4.1586, dt: 708.78ms, fracRes: 0.1556, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5259, norm(y): 0.9937, norm:0.4208, tok/sec: 184927.19, flops:194.14, batch-reuse:1
@ 2662 train 4.0585 , allloss: 4.0585, dt: 713.30ms, fracRes: 0.1562, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5303, norm(y): 0.9924, norm:0.4680, tok/sec: 183754.32, flops:192.91, batch-reuse:1
@ 2663 train 4.1918 , allloss: 4.1918, dt: 710.43ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.3848, norm(x): 0.5140, norm(y): 0.9927, norm:0.4389, tok/sec: 184496.06, flops:193.68, batch-reuse:1
@ 2664 train 4.2205 , allloss: 4.2205, dt: 708.47ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5239, norm(y): 0.9936, norm:0.4066, tok/sec: 185008.10, flops:194.22, batch-reuse:1
@ 2665 train 4.1408 , allloss: 4.1408, dt: 705.04ms, fracRes: 0.1560, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5199, norm(y): 0.9947, norm:0.4782, tok/sec: 185906.06, flops:195.16, batch-reuse:1
@ 2666 train 4.2510 , allloss: 4.2510, dt: 707.72ms, fracRes: 0.1565, norm(attn): 22.1250, norm(output): 0.4023, norm(x): 0.5296, norm(y): 0.9946, norm:0.4212, tok/sec: 185203.30, flops:194.43, batch-reuse:1
@ 2667 train 4.2326 , allloss: 4.2326, dt: 702.37ms, fracRes: 0.1564, norm(attn): 22.1250, norm(output): 0.3926, norm(x): 0.5262, norm(y): 0.9940, norm:0.4176, tok/sec: 186612.77, flops:195.91, batch-reuse:1
@ 2668 train 4.2209 , allloss: 4.2209, dt: 709.67ms, fracRes: 0.1563, norm(attn): 22.0000, norm(output): 0.3906, norm(x): 0.5217, norm(y): 0.9926, norm:0.4341, tok/sec: 184694.53, flops:193.89, batch-reuse:1
@ 2669 train 4.1621 , allloss: 4.1621, dt: 715.20ms, fracRes: 0.1559, norm(attn): 22.1250, norm(output): 0.3828, norm(x): 0.5145, norm(y): 0.9922, norm:0.4737, tok/sec: 183266.48, flops:192.39, batch-reuse:1
@ 2670 train 4.1717 , allloss: 4.1717, dt: 714.20ms, fracRes: 0.1557, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5211, norm(y): 0.9930, norm:0.4334, tok/sec: 183522.39, flops:192.66, batch-reuse:1
@ 2671 train 4.2120 , allloss: 4.2120, dt: 706.80ms, fracRes: 0.1568, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5248, norm(y): 0.9937, norm:0.4285, tok/sec: 185444.95, flops:194.68, batch-reuse:1
@ 2672 train 4.1500 , allloss: 4.1500, dt: 705.53ms, fracRes: 0.1562, norm(attn): 22.1250, norm(output): 0.3867, norm(x): 0.5178, norm(y): 0.9938, norm:0.4142, tok/sec: 185777.27, flops:195.03, batch-reuse:1
@ 2673 train 4.1111 , allloss: 4.1111, dt: 710.63ms, fracRes: 0.1550, norm(attn): 22.1250, norm(output): 0.3867, norm(x): 0.5162, norm(y): 0.9925, norm:0.3980, tok/sec: 184444.49, flops:193.63, batch-reuse:1
@ 2674 train 4.1971 , allloss: 4.1971, dt: 708.37ms, fracRes: 0.1559, norm(attn): 22.0000, norm(output): 0.3984, norm(x): 0.5276, norm(y): 0.9913, norm:0.5233, tok/sec: 185033.13, flops:194.25, batch-reuse:1
@ 2675 train 4.2083 , allloss: 4.2083, dt: 695.89ms, fracRes: 0.1564, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5224, norm(y): 0.9920, norm:0.4583, tok/sec: 188351.17, flops:197.73, batch-reuse:1
@ 2676 train 4.1459 , allloss: 4.1459, dt: 700.52ms, fracRes: 0.1563, norm(attn): 22.1250, norm(output): 0.3867, norm(x): 0.5190, norm(y): 0.9938, norm:0.4211, tok/sec: 187105.76, flops:196.42, batch-reuse:1
@ 2677 train 4.1461 , allloss: 4.1461, dt: 703.33ms, fracRes: 0.1574, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5184, norm(y): 0.9945, norm:0.3919, tok/sec: 186358.85, flops:195.64, batch-reuse:1
@ 2678 train 4.2509 , allloss: 4.2509, dt: 705.77ms, fracRes: 0.1570, norm(attn): 22.1250, norm(output): 0.4004, norm(x): 0.5285, norm(y): 0.9948, norm:0.4265, tok/sec: 185715.45, flops:194.96, batch-reuse:1
@ 2679 train 4.2133 , allloss: 4.2133, dt: 707.41ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5264, norm(y): 0.9948, norm:0.4218, tok/sec: 185285.13, flops:194.51, batch-reuse:1
@ 2680 train 4.0908 , allloss: 4.0908, dt: 701.29ms, fracRes: 0.1557, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5210, norm(y): 0.9941, norm:0.3918, tok/sec: 186900.04, flops:196.21, batch-reuse:1
@ 2681 train 4.2033 , allloss: 4.2033, dt: 711.11ms, fracRes: 0.1546, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5157, norm(y): 0.9938, norm:0.4107, tok/sec: 184321.00, flops:193.50, batch-reuse:1
@ 2682 train 4.1023 , allloss: 4.1023, dt: 692.51ms, fracRes: 0.1550, norm(attn): 22.1250, norm(output): 0.3945, norm(x): 0.5249, norm(y): 0.9941, norm:0.4361, tok/sec: 189271.86, flops:198.70, batch-reuse:1
@ 2683 train 4.1365 , allloss: 4.1365, dt: 706.83ms, fracRes: 0.1552, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5272, norm(y): 0.9941, norm:0.4156, tok/sec: 185435.13, flops:194.67, batch-reuse:1
@ 2684 train 4.1841 , allloss: 4.1841, dt: 713.97ms, fracRes: 0.1554, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5254, norm(y): 0.9938, norm:0.4206, tok/sec: 183581.83, flops:192.72, batch-reuse:1
@ 2685 train 4.2002 , allloss: 4.2002, dt: 700.75ms, fracRes: 0.1543, norm(attn): 22.1250, norm(output): 0.3926, norm(x): 0.5201, norm(y): 0.9934, norm:0.4053, tok/sec: 187045.72, flops:196.36, batch-reuse:1
@ 2686 train 4.2757 , allloss: 4.2757, dt: 704.86ms, fracRes: 0.1544, norm(attn): 22.0000, norm(output): 0.3828, norm(x): 0.5162, norm(y): 0.9928, norm:0.4134, tok/sec: 185954.73, flops:195.22, batch-reuse:1
@ 2687 train 4.1430 , allloss: 4.1430, dt: 700.77ms, fracRes: 0.1564, norm(attn): 22.0000, norm(output): 0.3945, norm(x): 0.5256, norm(y): 0.9930, norm:0.3936, tok/sec: 187040.00, flops:196.35, batch-reuse:1
@ 2688 train 4.1529 , allloss: 4.1529, dt: 704.17ms, fracRes: 0.1547, norm(attn): 22.1250, norm(output): 0.3867, norm(x): 0.5164, norm(y): 0.9936, norm:0.3783, tok/sec: 186135.68, flops:195.41, batch-reuse:1
@ 2689 train 4.1921 , allloss: 4.1921, dt: 699.41ms, fracRes: 0.1563, norm(attn): 22.1250, norm(output): 0.3984, norm(x): 0.5238, norm(y): 0.9943, norm:0.4150, tok/sec: 187402.85, flops:196.74, batch-reuse:1
@ 2690 train 4.1599 , allloss: 4.1599, dt: 702.47ms, fracRes: 0.1554, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5188, norm(y): 0.9942, norm:0.3807, tok/sec: 186588.39, flops:195.88, batch-reuse:1
@ 2691 train 4.1978 , allloss: 4.1978, dt: 705.78ms, fracRes: 0.1566, norm(attn): 22.1250, norm(output): 0.3906, norm(x): 0.5199, norm(y): 0.9942, norm:0.4122, tok/sec: 185712.07, flops:194.96, batch-reuse:1
@ 2692 train 4.0249 , allloss: 4.0249, dt: 700.65ms, fracRes: 0.1575, norm(attn): 22.1250, norm(output): 0.3887, norm(x): 0.5196, norm(y): 0.9931, norm:0.4172, tok/sec: 187071.12, flops:196.39, batch-reuse:1
@ 2693 train 4.1992 , allloss: 4.1992, dt: 703.43ms, fracRes: 0.1578, norm(attn): 22.0000, norm(output): 0.3828, norm(x): 0.5167, norm(y): 0.9903, norm:0.3845, tok/sec: 186331.88, flops:195.61, batch-reuse:1
@ 2694 train 4.2133 , allloss: 4.2133, dt: 714.87ms, fracRes: 0.1581, norm(attn): 21.8750, norm(output): 0.3926, norm(x): 0.5249, norm(y): 0.9805, norm:0.4635, tok/sec: 183350.34, flops:192.48, batch-reuse:1
@ 2695 train 4.1278 , allloss: 4.1278, dt: 685.77ms, fracRes: 0.1543, norm(attn): 21.3750, norm(output): 0.3926, norm(x): 0.5221, norm(y): 0.9451, norm:2.2705, tok/sec: 191131.73, flops:200.65, batch-reuse:1
@ 2696 train 4.1456 , allloss: 4.1456, dt: 706.16ms, fracRes: 0.1570, norm(attn): 22.0000, norm(output): 0.3887, norm(x): 0.5175, norm(y): 0.9912, norm:0.4763, tok/sec: 185612.50, flops:194.86, batch-reuse:1
@ 2697 train 4.0892 , allloss: 4.0892, dt: 698.80ms, fracRes: 0.1563, norm(attn): 22.1250, norm(output): 0.3965, norm(x): 0.5210, norm(y): 0.9953, norm:0.3713, tok/sec: 187566.91, flops:196.91, batch-reuse:1
@ 2698 train 4.1152 , allloss: 4.1152, dt: 715.89ms, fracRes: 0.1566, norm(attn): 22.5000, norm(output): 0.3926, norm(x): 0.5213, norm(y): 0.9961, norm:0.3967, tok/sec: 183089.72, flops:192.21, batch-reuse:1
@ 2699 train 4.2145 , allloss: 4.2145, dt: 694.33ms, fracRes: 0.1575, norm(attn): 22.5000, norm(output): 0.3945, norm(x): 0.5249, norm(y): 0.9966, norm:0.4322, tok/sec: 188774.73, flops:198.18, batch-reuse:1
@ 2700 train 4.0756 , allloss: 4.0756, dt: 704.60ms, fracRes: 0.1583, norm(attn): 22.3750, norm(output): 0.3984, norm(x): 0.5253, norm(y): 0.9965, norm:0.3664, tok/sec: 186023.19, flops:195.29, batch-reuse:1
@ 2701 train 4.0779 , allloss: 4.0779, dt: 705.97ms, fracRes: 0.1571, norm(attn): 22.5000, norm(output): 0.3867, norm(x): 0.5173, norm(y): 0.9967, norm:0.3824, tok/sec: 185661.51, flops:194.91, batch-reuse:1
@ 2702 train 4.1740 , allloss: 4.1740, dt: 704.38ms, fracRes: 0.1586, norm(attn): 22.5000, norm(output): 0.4004, norm(x): 0.5292, norm(y): 0.9969, norm:0.3750, tok/sec: 186081.75, flops:195.35, batch-reuse:1
@ 2703 train 4.1945 , allloss: 4.1945, dt: 702.86ms, fracRes: 0.1567, norm(attn): 22.6250, norm(output): 0.3984, norm(x): 0.5262, norm(y): 0.9969, norm:0.4267, tok/sec: 186483.45, flops:195.77, batch-reuse:1
@ 2704 train 4.2600 , allloss: 4.2600, dt: 693.57ms, fracRes: 0.1560, norm(attn): 22.6250, norm(output): 0.4043, norm(x): 0.5355, norm(y): 0.9968, norm:0.3859, tok/sec: 188982.26, flops:198.39, batch-reuse:1
@ 2705 train 4.1271 , allloss: 4.1271, dt: 713.42ms, fracRes: 0.1568, norm(attn): 22.6250, norm(output): 0.4004, norm(x): 0.5316, norm(y): 0.9970, norm:0.3981, tok/sec: 183723.43, flops:192.87, batch-reuse:1
@ 2706 train 4.0893 , allloss: 4.0893, dt: 713.31ms, fracRes: 0.1568, norm(attn): 22.7500, norm(output): 0.3984, norm(x): 0.5223, norm(y): 0.9968, norm:0.4312, tok/sec: 183751.37, flops:192.90, batch-reuse:1
@ 2707 train 4.1701 , allloss: 4.1701, dt: 711.44ms, fracRes: 0.1577, norm(attn): 22.6250, norm(output): 0.4004, norm(x): 0.5286, norm(y): 0.9969, norm:0.4375, tok/sec: 184235.70, flops:193.41, batch-reuse:1
@ 2708 train 4.0937 , allloss: 4.0937, dt: 709.57ms, fracRes: 0.1513, norm(attn): 23.2500, norm(output): 0.4004, norm(x): 0.5239, norm(y): 0.9970, norm:0.4281, tok/sec: 184721.58, flops:193.92, batch-reuse:1
@ 2709 train 4.0731 , allloss: 4.0731, dt: 688.85ms, fracRes: 0.1574, norm(attn): 22.8750, norm(output): 0.3945, norm(x): 0.5251, norm(y): 0.9969, norm:0.4399, tok/sec: 190277.82, flops:199.75, batch-reuse:1
@ 2710 train 4.2308 , allloss: 4.2308, dt: 705.08ms, fracRes: 0.1578, norm(attn): 23.1250, norm(output): 0.4023, norm(x): 0.5306, norm(y): 0.9969, norm:0.4541, tok/sec: 185896.50, flops:195.15, batch-reuse:1
@ 2711 train 4.3049 , allloss: 4.3049, dt: 703.53ms, fracRes: 0.1585, norm(attn): 23.3750, norm(output): 0.4102, norm(x): 0.5386, norm(y): 0.9971, norm:0.4624, tok/sec: 186306.75, flops:195.59, batch-reuse:1
@ 2712 train 4.1930 , allloss: 4.1930, dt: 701.55ms, fracRes: 0.1587, norm(attn): 23.2500, norm(output): 0.4062, norm(x): 0.5356, norm(y): 0.9968, norm:0.4730, tok/sec: 186833.09, flops:196.14, batch-reuse:1
@ 2713 train 4.1201 , allloss: 4.1201, dt: 710.96ms, fracRes: 0.1592, norm(attn): 23.3750, norm(output): 0.4082, norm(x): 0.5419, norm(y): 0.9970, norm:0.4461, tok/sec: 184360.37, flops:193.54, batch-reuse:1
@ 2714 train 4.1580 , allloss: 4.1580, dt: 717.36ms, fracRes: 0.1592, norm(attn): 23.3750, norm(output): 0.4102, norm(x): 0.5439, norm(y): 0.9970, norm:0.4437, tok/sec: 182714.76, flops:191.81, batch-reuse:1
@ 2715 train 4.1209 , allloss: 4.1209, dt: 704.77ms, fracRes: 0.1569, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5294, norm(y): 0.9968, norm:0.4531, tok/sec: 185979.01, flops:195.24, batch-reuse:1
@ 2716 train 4.0857 , allloss: 4.0857, dt: 712.97ms, fracRes: 0.1575, norm(attn): 23.5000, norm(output): 0.4043, norm(x): 0.5322, norm(y): 0.9968, norm:0.3643, tok/sec: 183839.37, flops:192.99, batch-reuse:1
@ 2717 train 4.1343 , allloss: 4.1343, dt: 712.59ms, fracRes: 0.1584, norm(attn): 23.3750, norm(output): 0.4062, norm(x): 0.5364, norm(y): 0.9970, norm:0.3815, tok/sec: 183936.86, flops:193.10, batch-reuse:1
@ 2718 train 4.0871 , allloss: 4.0871, dt: 700.93ms, fracRes: 0.1568, norm(attn): 23.3750, norm(output): 0.3945, norm(x): 0.5254, norm(y): 0.9970, norm:0.3805, tok/sec: 186998.26, flops:196.31, batch-reuse:1
@ 2719 train 4.1766 , allloss: 4.1766, dt: 706.78ms, fracRes: 0.1577, norm(attn): 23.6250, norm(output): 0.4023, norm(x): 0.5355, norm(y): 0.9969, norm:0.3729, tok/sec: 185448.39, flops:194.68, batch-reuse:1
@ 2720 train 4.1776 , allloss: 4.1776, dt: 700.86ms, fracRes: 0.1587, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5355, norm(y): 0.9969, norm:0.4127, tok/sec: 187015.63, flops:196.33, batch-reuse:1
@ 2721 train 4.0693 , allloss: 4.0693, dt: 706.20ms, fracRes: 0.1590, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5311, norm(y): 0.9968, norm:0.4216, tok/sec: 185601.47, flops:194.84, batch-reuse:1
@ 2722 train 4.1474 , allloss: 4.1474, dt: 722.44ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5277, norm(y): 0.9967, norm:0.3989, tok/sec: 181428.64, flops:190.46, batch-reuse:1
@ 2723 train 4.2065 , allloss: 4.2065, dt: 708.95ms, fracRes: 0.1578, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5333, norm(y): 0.9968, norm:0.4307, tok/sec: 184882.48, flops:194.09, batch-reuse:1
@ 2724 train 4.1020 , allloss: 4.1020, dt: 702.12ms, fracRes: 0.1570, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5297, norm(y): 0.9964, norm:0.6598, tok/sec: 186680.64, flops:195.98, batch-reuse:1
@ 2725 train 4.1336 , allloss: 4.1336, dt: 714.49ms, fracRes: 0.1570, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5290, norm(y): 0.9970, norm:0.3865, tok/sec: 183448.23, flops:192.58, batch-reuse:1
@ 2726 train 4.1027 , allloss: 4.1027, dt: 699.27ms, fracRes: 0.1572, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5340, norm(y): 0.9969, norm:0.4118, tok/sec: 187441.31, flops:196.78, batch-reuse:1
@ 2727 train 4.1742 , allloss: 4.1742, dt: 700.61ms, fracRes: 0.1583, norm(attn): 23.6250, norm(output): 0.4043, norm(x): 0.5341, norm(y): 0.9968, norm:0.4102, tok/sec: 187082.32, flops:196.40, batch-reuse:1
@ 2728 train 4.1964 , allloss: 4.1964, dt: 718.05ms, fracRes: 0.1588, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5315, norm(y): 0.9968, norm:0.3834, tok/sec: 182539.61, flops:191.63, batch-reuse:1
@ 2729 train 4.1545 , allloss: 4.1545, dt: 714.25ms, fracRes: 0.1594, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5378, norm(y): 0.9969, norm:0.3916, tok/sec: 183510.08, flops:192.65, batch-reuse:1
@ 2730 train 4.1614 , allloss: 4.1614, dt: 715.79ms, fracRes: 0.1585, norm(attn): 23.6250, norm(output): 0.4023, norm(x): 0.5322, norm(y): 0.9969, norm:0.3882, tok/sec: 183114.24, flops:192.23, batch-reuse:1
@ 2731 train 4.0936 , allloss: 4.0936, dt: 708.15ms, fracRes: 0.1584, norm(attn): 23.7500, norm(output): 0.4043, norm(x): 0.5331, norm(y): 0.9966, norm:0.3816, tok/sec: 185091.19, flops:194.31, batch-reuse:1
@ 2732 train 4.1162 , allloss: 4.1162, dt: 716.38ms, fracRes: 0.1596, norm(attn): 23.7500, norm(output): 0.4121, norm(x): 0.5401, norm(y): 0.9966, norm:0.3990, tok/sec: 182964.26, flops:192.08, batch-reuse:1
@ 2733 train 4.1894 , allloss: 4.1894, dt: 718.27ms, fracRes: 0.1583, norm(attn): 23.7500, norm(output): 0.4043, norm(x): 0.5325, norm(y): 0.9967, norm:0.4587, tok/sec: 182482.29, flops:191.57, batch-reuse:1
@ 2734 train 4.0577 , allloss: 4.0577, dt: 714.26ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5294, norm(y): 0.9966, norm:0.3417, tok/sec: 183506.34, flops:192.65, batch-reuse:1
@ 2735 train 4.1807 , allloss: 4.1807, dt: 696.99ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5310, norm(y): 0.9965, norm:0.4347, tok/sec: 188054.86, flops:197.42, batch-reuse:1
@ 2736 train 4.1729 , allloss: 4.1729, dt: 699.75ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5368, norm(y): 0.9966, norm:0.4536, tok/sec: 187313.20, flops:196.64, batch-reuse:1
@ 2737 train 4.1998 , allloss: 4.1998, dt: 711.19ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5328, norm(y): 0.9967, norm:0.4095, tok/sec: 184299.13, flops:193.48, batch-reuse:1
@ 2738 train 4.0143 , allloss: 4.0143, dt: 709.20ms, fracRes: 0.1591, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5419, norm(y): 0.9966, norm:0.5675, tok/sec: 184816.91, flops:194.02, batch-reuse:1
@ 2739 train 4.1183 , allloss: 4.1183, dt: 705.18ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5383, norm(y): 0.9965, norm:0.4795, tok/sec: 185869.98, flops:195.13, batch-reuse:1
@ 2740 train 3.9726 , allloss: 3.9726, dt: 704.53ms, fracRes: 0.1569, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5294, norm(y): 0.9964, norm:0.3941, tok/sec: 186042.89, flops:195.31, batch-reuse:1
@ 2741 train 4.0718 , allloss: 4.0718, dt: 716.05ms, fracRes: 0.1558, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5216, norm(y): 0.9964, norm:0.4492, tok/sec: 183047.53, flops:192.16, batch-reuse:1
@ 2742 train 4.0446 , allloss: 4.0446, dt: 706.32ms, fracRes: 0.1570, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5263, norm(y): 0.9963, norm:0.4019, tok/sec: 185571.08, flops:194.81, batch-reuse:1
@ 2743 train 4.0337 , allloss: 4.0337, dt: 711.86ms, fracRes: 0.1574, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5316, norm(y): 0.9963, norm:0.4357, tok/sec: 184125.61, flops:193.30, batch-reuse:1
@ 2744 train 4.0291 , allloss: 4.0291, dt: 703.38ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5328, norm(y): 0.9964, norm:0.4318, tok/sec: 186347.04, flops:195.63, batch-reuse:1
@ 2745 train 3.9838 , allloss: 3.9838, dt: 720.28ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5394, norm(y): 0.9963, norm:0.4168, tok/sec: 181974.66, flops:191.04, batch-reuse:1
@ 2746 train 3.9875 , allloss: 3.9875, dt: 709.12ms, fracRes: 0.1571, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5305, norm(y): 0.9962, norm:0.4317, tok/sec: 184836.48, flops:194.04, batch-reuse:1
@ 2747 train 4.0298 , allloss: 4.0298, dt: 692.32ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5343, norm(y): 0.9962, norm:0.4000, tok/sec: 189322.50, flops:198.75, batch-reuse:1
@ 2748 train 4.1332 , allloss: 4.1332, dt: 712.81ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5378, norm(y): 0.9964, norm:0.4473, tok/sec: 183880.38, flops:193.04, batch-reuse:1
@ 2749 train 4.0573 , allloss: 4.0573, dt: 712.29ms, fracRes: 0.1578, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5285, norm(y): 0.9963, norm:0.4417, tok/sec: 184014.00, flops:193.18, batch-reuse:1
@ 2750 train 4.0031 , allloss: 4.0031, dt: 700.09ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5413, norm(y): 0.9964, norm:0.4749, tok/sec: 187222.11, flops:196.55, batch-reuse:1
@ 2751 train 4.1111 , allloss: 4.1111, dt: 706.62ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.3867, norm(x): 0.5200, norm(y): 0.9962, norm:0.5263, tok/sec: 185490.94, flops:194.73, batch-reuse:1
@ 2752 train 4.0638 , allloss: 4.0638, dt: 710.35ms, fracRes: 0.1592, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5323, norm(y): 0.9959, norm:0.4177, tok/sec: 184516.74, flops:193.71, batch-reuse:1
@ 2753 train 4.0752 , allloss: 4.0752, dt: 700.75ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.4141, norm(x): 0.5427, norm(y): 0.9955, norm:0.5000, tok/sec: 187045.85, flops:196.36, batch-reuse:1
@ 2754 train 4.0334 , allloss: 4.0334, dt: 703.32ms, fracRes: 0.1577, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5281, norm(y): 0.9954, norm:0.4711, tok/sec: 186362.77, flops:195.64, batch-reuse:1
@ 2755 train 4.0574 , allloss: 4.0574, dt: 719.71ms, fracRes: 0.1576, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5240, norm(y): 0.9958, norm:0.4686, tok/sec: 182118.98, flops:191.19, batch-reuse:1
@ 2756 train 3.9987 , allloss: 3.9987, dt: 704.14ms, fracRes: 0.1585, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5309, norm(y): 0.9958, norm:0.4396, tok/sec: 186143.93, flops:195.41, batch-reuse:1
@ 2757 train 4.0715 , allloss: 4.0715, dt: 718.02ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5346, norm(y): 0.9959, norm:0.4218, tok/sec: 182545.61, flops:191.64, batch-reuse:1
@ 2758 train 4.0678 , allloss: 4.0678, dt: 716.44ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5255, norm(y): 0.9956, norm:0.3800, tok/sec: 182949.52, flops:192.06, batch-reuse:1
@ 2759 train 4.0502 , allloss: 4.0502, dt: 714.90ms, fracRes: 0.1587, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5278, norm(y): 0.9957, norm:0.4276, tok/sec: 183343.06, flops:192.47, batch-reuse:1
@ 2760 train 3.9821 , allloss: 3.9821, dt: 717.79ms, fracRes: 0.1574, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5241, norm(y): 0.9959, norm:0.4036, tok/sec: 182604.73, flops:191.70, batch-reuse:1
@ 2761 train 4.1359 , allloss: 4.1359, dt: 717.53ms, fracRes: 0.1576, norm(attn): 23.7500, norm(output): 0.4043, norm(x): 0.5292, norm(y): 0.9958, norm:0.4102, tok/sec: 182671.47, flops:191.77, batch-reuse:1
@ 2762 train 4.0921 , allloss: 4.0921, dt: 721.23ms, fracRes: 0.1581, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5331, norm(y): 0.9958, norm:0.4049, tok/sec: 181735.00, flops:190.79, batch-reuse:1
@ 2763 train 4.0283 , allloss: 4.0283, dt: 719.23ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5338, norm(y): 0.9958, norm:0.4588, tok/sec: 182238.81, flops:191.31, batch-reuse:1
@ 2764 train 4.0353 , allloss: 4.0353, dt: 715.92ms, fracRes: 0.1575, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5276, norm(y): 0.9958, norm:0.3765, tok/sec: 183080.76, flops:192.20, batch-reuse:1
@ 2765 train 4.0809 , allloss: 4.0809, dt: 700.38ms, fracRes: 0.1585, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5313, norm(y): 0.9954, norm:0.4131, tok/sec: 187143.84, flops:196.46, batch-reuse:1
@ 2766 train 4.0691 , allloss: 4.0691, dt: 720.78ms, fracRes: 0.1589, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5306, norm(y): 0.9954, norm:0.3709, tok/sec: 181846.51, flops:190.90, batch-reuse:1
@ 2767 train 4.0631 , allloss: 4.0631, dt: 720.15ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5274, norm(y): 0.9955, norm:0.4089, tok/sec: 182005.80, flops:191.07, batch-reuse:1
@ 2768 train 4.0472 , allloss: 4.0472, dt: 713.57ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5244, norm(y): 0.9955, norm:0.3833, tok/sec: 183685.93, flops:192.83, batch-reuse:1
@ 2769 train 4.0597 , allloss: 4.0597, dt: 715.76ms, fracRes: 0.1580, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5350, norm(y): 0.9956, norm:0.3880, tok/sec: 183123.81, flops:192.24, batch-reuse:1
@ 2770 train 4.0482 , allloss: 4.0482, dt: 706.83ms, fracRes: 0.1564, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5326, norm(y): 0.9955, norm:0.3662, tok/sec: 185437.25, flops:194.67, batch-reuse:1
@ 2771 train 4.1603 , allloss: 4.1603, dt: 710.63ms, fracRes: 0.1573, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5303, norm(y): 0.9956, norm:0.4090, tok/sec: 184445.36, flops:193.63, batch-reuse:1
@ 2772 train 3.9981 , allloss: 3.9981, dt: 692.88ms, fracRes: 0.1573, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5249, norm(y): 0.9954, norm:0.4495, tok/sec: 189170.71, flops:198.59, batch-reuse:1
@ 2773 train 4.0007 , allloss: 4.0007, dt: 706.86ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5291, norm(y): 0.9952, norm:0.4295, tok/sec: 185429.62, flops:194.66, batch-reuse:1
@ 2774 train 3.9692 , allloss: 3.9692, dt: 702.90ms, fracRes: 0.1585, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5274, norm(y): 0.9952, norm:0.4050, tok/sec: 186472.44, flops:195.76, batch-reuse:1
@ 2775 train 4.0727 , allloss: 4.0727, dt: 701.80ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5278, norm(y): 0.9951, norm:0.3885, tok/sec: 186764.80, flops:196.07, batch-reuse:1
@ 2776 train 4.1734 , allloss: 4.1734, dt: 700.17ms, fracRes: 0.1603, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5354, norm(y): 0.9952, norm:0.4114, tok/sec: 187201.20, flops:196.52, batch-reuse:1
@ 2777 train 4.0122 , allloss: 4.0122, dt: 709.20ms, fracRes: 0.1602, norm(attn): 23.7500, norm(output): 0.4102, norm(x): 0.5430, norm(y): 0.9946, norm:0.4103, tok/sec: 184815.41, flops:194.02, batch-reuse:1
@ 2778 train 4.1663 , allloss: 4.1663, dt: 708.92ms, fracRes: 0.1601, norm(attn): 23.8750, norm(output): 0.4180, norm(x): 0.5455, norm(y): 0.9949, norm:0.4469, tok/sec: 184890.25, flops:194.10, batch-reuse:1
@ 2779 train 4.0101 , allloss: 4.0101, dt: 708.58ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5357, norm(y): 0.9944, norm:0.4248, tok/sec: 184978.22, flops:194.19, batch-reuse:1
@ 2780 train 3.9121 , allloss: 3.9121, dt: 705.74ms, fracRes: 0.1576, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5265, norm(y): 0.9945, norm:0.4738, tok/sec: 185723.36, flops:194.97, batch-reuse:1
@ 2781 train 3.9047 , allloss: 3.9047, dt: 699.71ms, fracRes: 0.1577, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5321, norm(y): 0.9944, norm:0.4011, tok/sec: 187322.65, flops:196.65, batch-reuse:1
@ 2782 train 4.0172 , allloss: 4.0172, dt: 697.34ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5385, norm(y): 0.9945, norm:0.4535, tok/sec: 187958.67, flops:197.32, batch-reuse:1
@ 2783 train 4.0673 , allloss: 4.0673, dt: 707.74ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5337, norm(y): 0.9941, norm:0.4642, tok/sec: 185198.81, flops:194.42, batch-reuse:1
@ 2784 train 4.0828 , allloss: 4.0828, dt: 702.80ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5291, norm(y): 0.9944, norm:0.3935, tok/sec: 186498.82, flops:195.79, batch-reuse:1
@ 2785 train 4.1903 , allloss: 4.1903, dt: 714.42ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5271, norm(y): 0.9939, norm:0.3946, tok/sec: 183465.68, flops:192.60, batch-reuse:1
@ 2786 train 4.1023 , allloss: 4.1023, dt: 707.93ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5391, norm(y): 0.9933, norm:0.4100, tok/sec: 185149.04, flops:194.37, batch-reuse:1
@ 2787 train 4.1795 , allloss: 4.1795, dt: 713.14ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5303, norm(y): 0.9933, norm:0.3906, tok/sec: 183796.47, flops:192.95, batch-reuse:1
@ 2788 train 4.2085 , allloss: 4.2085, dt: 712.89ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5224, norm(y): 0.9938, norm:0.4104, tok/sec: 183859.22, flops:193.02, batch-reuse:1
@ 2789 train 4.2076 , allloss: 4.2076, dt: 692.06ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5280, norm(y): 0.9938, norm:0.3841, tok/sec: 189394.51, flops:198.83, batch-reuse:1
@ 2790 train 4.2314 , allloss: 4.2314, dt: 707.59ms, fracRes: 0.1602, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5369, norm(y): 0.9941, norm:0.4248, tok/sec: 185236.31, flops:194.46, batch-reuse:1
@ 2791 train 4.1676 , allloss: 4.1676, dt: 712.56ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5262, norm(y): 0.9944, norm:0.3757, tok/sec: 183946.46, flops:193.11, batch-reuse:1
@ 2792 train 4.8267 , allloss: 4.8267, dt: 707.77ms, fracRes: 0.1588, norm(attn): 23.7500, norm(output): 0.3945, norm(x): 0.5244, norm(y): 0.9948, norm:0.5572, tok/sec: 185190.26, flops:194.41, batch-reuse:1
@ 2793 train 4.2301 , allloss: 4.2301, dt: 719.59ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5352, norm(y): 0.9949, norm:0.4840, tok/sec: 182147.22, flops:191.22, batch-reuse:1
@ 2794 train 4.1594 , allloss: 4.1594, dt: 703.75ms, fracRes: 0.1588, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5362, norm(y): 0.9942, norm:0.4541, tok/sec: 186247.99, flops:195.52, batch-reuse:1
@ 2795 train 4.1553 , allloss: 4.1553, dt: 708.18ms, fracRes: 0.1573, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5338, norm(y): 0.9931, norm:0.4187, tok/sec: 185081.72, flops:194.30, batch-reuse:1
@ 2796 train 4.2759 , allloss: 4.2759, dt: 692.62ms, fracRes: 0.1572, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5300, norm(y): 0.9926, norm:0.4666, tok/sec: 189239.67, flops:198.66, batch-reuse:1
@ 2797 train 4.1558 , allloss: 4.1558, dt: 710.84ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5293, norm(y): 0.9927, norm:0.4522, tok/sec: 184391.42, flops:193.57, batch-reuse:1
@ 2798 train 4.1831 , allloss: 4.1831, dt: 705.67ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5398, norm(y): 0.9919, norm:0.4781, tok/sec: 185741.37, flops:194.99, batch-reuse:1
@ 2799 train 4.1591 , allloss: 4.1591, dt: 708.25ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5413, norm(y): 0.9886, norm:0.4467, tok/sec: 185064.15, flops:194.28, batch-reuse:1
@ 2800 train 4.3449 , allloss: 4.3449, dt: 708.77ms, fracRes: 0.1591, norm(attn): 23.7500, norm(output): 0.4082, norm(x): 0.5396, norm(y): 0.9858, norm:0.5082, tok/sec: 184929.99, flops:194.14, batch-reuse:1
@ 2801 train 4.2326 , allloss: 4.2326, dt: 711.58ms, fracRes: 0.1578, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5369, norm(y): 0.9860, norm:0.7589, tok/sec: 184199.21, flops:193.37, batch-reuse:1
@ 2802 train 4.2086 , allloss: 4.2086, dt: 713.31ms, fracRes: 0.1583, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5257, norm(y): 0.9853, norm:0.4709, tok/sec: 183752.36, flops:192.90, batch-reuse:1
@ 2803 train 4.1607 , allloss: 4.1607, dt: 715.27ms, fracRes: 0.1595, norm(attn): 23.7500, norm(output): 0.4043, norm(x): 0.5356, norm(y): 0.9824, norm:0.4963, tok/sec: 183248.09, flops:192.37, batch-reuse:1
@ 2804 train 4.2196 , allloss: 4.2196, dt: 715.83ms, fracRes: 0.1603, norm(attn): 23.6250, norm(output): 0.4043, norm(x): 0.5356, norm(y): 0.9806, norm:0.5002, tok/sec: 183105.27, flops:192.22, batch-reuse:1
@ 2805 train 4.0492 , allloss: 4.0492, dt: 711.85ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4082, norm(x): 0.5434, norm(y): 0.9826, norm:0.7862, tok/sec: 184128.94, flops:193.30, batch-reuse:1
@ 2806 train 4.0834 , allloss: 4.0834, dt: 713.29ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5348, norm(y): 0.9923, norm:0.5119, tok/sec: 183756.78, flops:192.91, batch-reuse:1
@ 2807 train 4.3946 , allloss: 4.3946, dt: 713.35ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5310, norm(y): 0.9945, norm:0.4913, tok/sec: 183741.92, flops:192.89, batch-reuse:1
@ 2808 train 4.1585 , allloss: 4.1585, dt: 713.82ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.3906, norm(x): 0.5248, norm(y): 0.9954, norm:0.4851, tok/sec: 183620.53, flops:192.77, batch-reuse:1
@ 2809 train 4.1281 , allloss: 4.1281, dt: 713.17ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5353, norm(y): 0.9959, norm:0.4481, tok/sec: 183787.13, flops:192.94, batch-reuse:1
@ 2810 train 4.1433 , allloss: 4.1433, dt: 699.39ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4199, norm(x): 0.5469, norm(y): 0.9962, norm:0.5479, tok/sec: 187408.98, flops:196.74, batch-reuse:1
@ 2811 train 4.2140 , allloss: 4.2140, dt: 709.47ms, fracRes: 0.1583, norm(attn): 24.0000, norm(output): 0.4082, norm(x): 0.5373, norm(y): 0.9964, norm:0.5050, tok/sec: 184745.23, flops:193.95, batch-reuse:1
@ 2812 train 4.1971 , allloss: 4.1971, dt: 704.61ms, fracRes: 0.1604, norm(attn): 23.8750, norm(output): 0.4141, norm(x): 0.5449, norm(y): 0.9964, norm:0.4447, tok/sec: 186019.47, flops:195.28, batch-reuse:1
@ 2813 train 4.2225 , allloss: 4.2225, dt: 717.68ms, fracRes: 0.1606, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5466, norm(y): 0.9965, norm:0.5416, tok/sec: 182633.90, flops:191.73, batch-reuse:1
@ 2814 train 4.1931 , allloss: 4.1931, dt: 713.37ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5360, norm(y): 0.9966, norm:0.4343, tok/sec: 183735.16, flops:192.89, batch-reuse:1
@ 2815 train 4.2428 , allloss: 4.2428, dt: 711.33ms, fracRes: 0.1604, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5477, norm(y): 0.9971, norm:0.5686, tok/sec: 184262.80, flops:193.44, batch-reuse:1
@ 2816 train 4.1381 , allloss: 4.1381, dt: 708.69ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.4219, norm(x): 0.5514, norm(y): 0.9969, norm:0.5198, tok/sec: 184948.72, flops:194.16, batch-reuse:1
@ 2817 train 4.2472 , allloss: 4.2472, dt: 703.00ms, fracRes: 0.1612, norm(attn): 24.0000, norm(output): 0.4102, norm(x): 0.5458, norm(y): 0.9970, norm:0.4691, tok/sec: 186445.63, flops:195.73, batch-reuse:1
@ 2818 train 4.1881 , allloss: 4.1881, dt: 709.34ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5379, norm(y): 0.9968, norm:0.4221, tok/sec: 184781.19, flops:193.98, batch-reuse:1
@ 2819 train 4.1962 , allloss: 4.1962, dt: 707.10ms, fracRes: 0.1596, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5377, norm(y): 0.9967, norm:0.4220, tok/sec: 185364.73, flops:194.60, batch-reuse:1
@ 2820 train 4.1808 , allloss: 4.1808, dt: 706.77ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4180, norm(x): 0.5495, norm(y): 0.9965, norm:0.4293, tok/sec: 185451.39, flops:194.69, batch-reuse:1
@ 2821 train 4.1293 , allloss: 4.1293, dt: 708.50ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5468, norm(y): 0.9965, norm:0.4713, tok/sec: 184999.32, flops:194.21, batch-reuse:1
@ 2822 train 4.1333 , allloss: 4.1333, dt: 710.49ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5365, norm(y): 0.9966, norm:0.3862, tok/sec: 184480.83, flops:193.67, batch-reuse:1
@ 2823 train 4.1975 , allloss: 4.1975, dt: 699.86ms, fracRes: 0.1592, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5383, norm(y): 0.9970, norm:0.4935, tok/sec: 187284.36, flops:196.61, batch-reuse:1
@ 2824 train 4.1212 , allloss: 4.1212, dt: 719.05ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5397, norm(y): 0.9970, norm:0.4061, tok/sec: 182284.92, flops:191.36, batch-reuse:1
@ 2825 train 4.1651 , allloss: 4.1651, dt: 713.61ms, fracRes: 0.1593, norm(attn): 24.0000, norm(output): 0.4102, norm(x): 0.5431, norm(y): 0.9968, norm:0.4187, tok/sec: 183673.35, flops:192.82, batch-reuse:1
@ 2826 train 4.2047 , allloss: 4.2047, dt: 702.35ms, fracRes: 0.1591, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5420, norm(y): 0.9966, norm:0.4057, tok/sec: 186620.06, flops:195.91, batch-reuse:1
@ 2827 train 4.2295 , allloss: 4.2295, dt: 710.60ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5413, norm(y): 0.9967, norm:0.4350, tok/sec: 184453.22, flops:193.64, batch-reuse:1
@ 2828 train 4.1919 , allloss: 4.1919, dt: 710.70ms, fracRes: 0.1608, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5409, norm(y): 0.9966, norm:0.4380, tok/sec: 184425.50, flops:193.61, batch-reuse:1
@ 2829 train 4.1766 , allloss: 4.1766, dt: 697.28ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5353, norm(y): 0.9967, norm:0.4025, tok/sec: 187975.90, flops:197.34, batch-reuse:1
@ 2830 train 4.1929 , allloss: 4.1929, dt: 703.79ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4219, norm(x): 0.5561, norm(y): 0.9966, norm:0.4628, tok/sec: 186237.64, flops:195.51, batch-reuse:1
@ 2831 train 4.2288 , allloss: 4.2288, dt: 703.73ms, fracRes: 0.1581, norm(attn): 24.0000, norm(output): 0.4082, norm(x): 0.5398, norm(y): 0.9969, norm:0.4116, tok/sec: 186252.78, flops:195.53, batch-reuse:1
@ 2832 train 4.1363 , allloss: 4.1363, dt: 703.06ms, fracRes: 0.1581, norm(attn): 24.0000, norm(output): 0.3965, norm(x): 0.5293, norm(y): 0.9966, norm:0.4068, tok/sec: 186431.46, flops:195.72, batch-reuse:1
@ 2833 train 4.2149 , allloss: 4.2149, dt: 707.35ms, fracRes: 0.1578, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5290, norm(y): 0.9965, norm:0.3985, tok/sec: 185300.06, flops:194.53, batch-reuse:1
@ 2834 train 4.2299 , allloss: 4.2299, dt: 698.21ms, fracRes: 0.1591, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5365, norm(y): 0.9967, norm:0.4142, tok/sec: 187724.67, flops:197.07, batch-reuse:1
@ 2835 train 4.1895 , allloss: 4.1895, dt: 711.37ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5439, norm(y): 0.9971, norm:0.4699, tok/sec: 184251.81, flops:193.43, batch-reuse:1
@ 2836 train 4.1917 , allloss: 4.1917, dt: 701.21ms, fracRes: 0.1580, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5442, norm(y): 0.9968, norm:0.5219, tok/sec: 186923.87, flops:196.23, batch-reuse:1
@ 2837 train 4.2759 , allloss: 4.2759, dt: 704.03ms, fracRes: 0.1572, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5404, norm(y): 0.9968, norm:0.4527, tok/sec: 186172.80, flops:195.44, batch-reuse:1
@ 2838 train 4.3816 , allloss: 4.3816, dt: 710.48ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5406, norm(y): 0.9968, norm:0.4485, tok/sec: 184484.91, flops:193.67, batch-reuse:1
@ 2839 train 4.1277 , allloss: 4.1277, dt: 699.10ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5334, norm(y): 0.9968, norm:0.4461, tok/sec: 187485.68, flops:196.82, batch-reuse:1
@ 2840 train 4.1817 , allloss: 4.1817, dt: 702.52ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5382, norm(y): 0.9967, norm:0.4209, tok/sec: 186574.08, flops:195.87, batch-reuse:1
@ 2841 train 4.1731 , allloss: 4.1731, dt: 692.21ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5429, norm(y): 0.9966, norm:0.4137, tok/sec: 189351.78, flops:198.78, batch-reuse:1
@ 2842 train 4.2001 , allloss: 4.2001, dt: 697.06ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5467, norm(y): 0.9966, norm:0.4198, tok/sec: 188034.53, flops:197.40, batch-reuse:1
@ 2843 train 4.1393 , allloss: 4.1393, dt: 696.71ms, fracRes: 0.1580, norm(attn): 24.0000, norm(output): 0.4023, norm(x): 0.5321, norm(y): 0.9966, norm:0.4086, tok/sec: 188129.25, flops:197.50, batch-reuse:1
@ 2844 train 4.1236 , allloss: 4.1236, dt: 689.43ms, fracRes: 0.1572, norm(attn): 24.0000, norm(output): 0.3984, norm(x): 0.5283, norm(y): 0.9966, norm:0.3967, tok/sec: 190116.21, flops:199.58, batch-reuse:1
@ 2845 train 4.1465 , allloss: 4.1465, dt: 691.54ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5369, norm(y): 0.9965, norm:0.4068, tok/sec: 189536.07, flops:198.98, batch-reuse:1
@ 2846 train 4.1898 , allloss: 4.1898, dt: 704.73ms, fracRes: 0.1584, norm(attn): 24.0000, norm(output): 0.4199, norm(x): 0.5498, norm(y): 0.9964, norm:0.4220, tok/sec: 185988.70, flops:195.25, batch-reuse:1
@ 2847 train 4.1721 , allloss: 4.1721, dt: 695.48ms, fracRes: 0.1570, norm(attn): 24.0000, norm(output): 0.4121, norm(x): 0.5438, norm(y): 0.9965, norm:0.4152, tok/sec: 188462.29, flops:197.85, batch-reuse:1
@ 2848 train 4.2146 , allloss: 4.2146, dt: 704.71ms, fracRes: 0.1554, norm(attn): 24.0000, norm(output): 0.4023, norm(x): 0.5270, norm(y): 0.9968, norm:0.3431, tok/sec: 185995.12, flops:195.26, batch-reuse:1
@ 2849 train 4.1830 , allloss: 4.1830, dt: 704.84ms, fracRes: 0.1575, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5317, norm(y): 0.9968, norm:0.3915, tok/sec: 185958.63, flops:195.22, batch-reuse:1
@ 2850 train 4.1083 , allloss: 4.1083, dt: 703.82ms, fracRes: 0.1573, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5286, norm(y): 0.9962, norm:0.3638, tok/sec: 186229.75, flops:195.50, batch-reuse:1
@ 2851 train 4.1049 , allloss: 4.1049, dt: 694.01ms, fracRes: 0.1580, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5437, norm(y): 0.9964, norm:0.3901, tok/sec: 188862.61, flops:198.27, batch-reuse:1
@ 2852 train 4.1148 , allloss: 4.1148, dt: 708.46ms, fracRes: 0.1574, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5380, norm(y): 0.9963, norm:0.3631, tok/sec: 185010.52, flops:194.22, batch-reuse:1
@ 2853 train 4.1624 , allloss: 4.1624, dt: 716.78ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.4121, norm(x): 0.5439, norm(y): 0.9965, norm:0.3850, tok/sec: 182862.38, flops:191.97, batch-reuse:1
@ 2854 train 4.1262 , allloss: 4.1262, dt: 697.04ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.4180, norm(x): 0.5514, norm(y): 0.9966, norm:0.4461, tok/sec: 188040.77, flops:197.41, batch-reuse:1
@ 2855 train 4.1363 , allloss: 4.1363, dt: 709.06ms, fracRes: 0.1582, norm(attn): 24.0000, norm(output): 0.4004, norm(x): 0.5268, norm(y): 0.9963, norm:0.4247, tok/sec: 184852.14, flops:194.06, batch-reuse:1
@ 2856 train 4.1524 , allloss: 4.1524, dt: 708.45ms, fracRes: 0.1591, norm(attn): 24.0000, norm(output): 0.4062, norm(x): 0.5353, norm(y): 0.9963, norm:0.3915, tok/sec: 185011.89, flops:194.23, batch-reuse:1
@ 2857 train 4.1011 , allloss: 4.1011, dt: 706.23ms, fracRes: 0.1596, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5399, norm(y): 0.9961, norm:0.3942, tok/sec: 185594.45, flops:194.84, batch-reuse:1
@ 2858 train 4.0837 , allloss: 4.0837, dt: 703.63ms, fracRes: 0.1603, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5382, norm(y): 0.9961, norm:0.3841, tok/sec: 186278.85, flops:195.56, batch-reuse:1
@ 2859 train 4.0834 , allloss: 4.0834, dt: 703.50ms, fracRes: 0.1592, norm(attn): 23.8750, norm(output): 0.4141, norm(x): 0.5447, norm(y): 0.9960, norm:0.8999, tok/sec: 186313.82, flops:195.59, batch-reuse:1
@ 2860 train 4.2077 , allloss: 4.2077, dt: 703.51ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4102, norm(x): 0.5435, norm(y): 0.9965, norm:0.6243, tok/sec: 186310.91, flops:195.59, batch-reuse:1
@ 2861 train 4.3583 , allloss: 4.3583, dt: 708.19ms, fracRes: 0.1618, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5500, norm(y): 0.9970, norm:0.5656, tok/sec: 185079.60, flops:194.30, batch-reuse:1
@ 2862 train 4.2459 , allloss: 4.2459, dt: 707.78ms, fracRes: 0.1612, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5305, norm(y): 0.9965, norm:0.8524, tok/sec: 185187.83, flops:194.41, batch-reuse:1
@ 2863 train 4.2324 , allloss: 4.2324, dt: 699.69ms, fracRes: 0.1614, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5364, norm(y): 0.9965, norm:0.5754, tok/sec: 187329.09, flops:196.66, batch-reuse:1
@ 2864 train 4.0758 , allloss: 4.0758, dt: 705.34ms, fracRes: 0.1616, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5387, norm(y): 0.9964, norm:0.6182, tok/sec: 185826.82, flops:195.08, batch-reuse:1
@ 2865 train 4.1726 , allloss: 4.1726, dt: 714.05ms, fracRes: 0.1610, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5444, norm(y): 0.9967, norm:0.5928, tok/sec: 183560.93, flops:192.70, batch-reuse:1
@ 2866 train 4.2466 , allloss: 4.2466, dt: 696.78ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5293, norm(y): 0.9965, norm:0.4564, tok/sec: 188110.13, flops:197.48, batch-reuse:1
@ 2867 train 4.2045 , allloss: 4.2045, dt: 700.92ms, fracRes: 0.1568, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5251, norm(y): 0.9966, norm:0.5491, tok/sec: 186999.34, flops:196.31, batch-reuse:1
@ 2868 train 4.2680 , allloss: 4.2680, dt: 705.36ms, fracRes: 0.1582, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5364, norm(y): 0.9968, norm:0.4713, tok/sec: 185821.79, flops:195.08, batch-reuse:1
@ 2869 train 4.1204 , allloss: 4.1204, dt: 705.43ms, fracRes: 0.1584, norm(attn): 23.7500, norm(output): 0.4082, norm(x): 0.5386, norm(y): 0.9968, norm:0.5160, tok/sec: 185805.53, flops:195.06, batch-reuse:1
@ 2870 train 4.2401 , allloss: 4.2401, dt: 705.15ms, fracRes: 0.1576, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5325, norm(y): 0.9962, norm:0.4865, tok/sec: 185877.02, flops:195.13, batch-reuse:1
@ 2871 train 4.1051 , allloss: 4.1051, dt: 700.46ms, fracRes: 0.1579, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5296, norm(y): 0.9959, norm:0.4205, tok/sec: 187121.74, flops:196.44, batch-reuse:1
@ 2872 train 4.2021 , allloss: 4.2021, dt: 724.07ms, fracRes: 0.1578, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5342, norm(y): 0.9961, norm:0.5272, tok/sec: 181020.20, flops:190.04, batch-reuse:1
@ 2873 train 4.2203 , allloss: 4.2203, dt: 725.59ms, fracRes: 0.1602, norm(attn): 23.7500, norm(output): 0.4141, norm(x): 0.5467, norm(y): 0.9964, norm:0.5408, tok/sec: 180642.62, flops:189.64, batch-reuse:1
@ 2874 train 4.1398 , allloss: 4.1398, dt: 705.39ms, fracRes: 0.1577, norm(attn): 23.7500, norm(output): 0.4102, norm(x): 0.5365, norm(y): 0.9963, norm:0.4326, tok/sec: 185815.51, flops:195.07, batch-reuse:1
@ 2875 train 4.3107 , allloss: 4.3107, dt: 708.60ms, fracRes: 0.1567, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5314, norm(y): 0.9964, norm:0.4447, tok/sec: 184973.80, flops:194.19, batch-reuse:1
@ 2876 train 4.1635 , allloss: 4.1635, dt: 719.56ms, fracRes: 0.1573, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5308, norm(y): 0.9963, norm:0.4724, tok/sec: 182156.75, flops:191.23, batch-reuse:1
@ 2877 train 4.2244 , allloss: 4.2244, dt: 706.66ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5392, norm(y): 0.9962, norm:0.4345, tok/sec: 185482.11, flops:194.72, batch-reuse:1
@ 2878 train 4.1734 , allloss: 4.1734, dt: 708.70ms, fracRes: 0.1578, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5303, norm(y): 0.9962, norm:0.4145, tok/sec: 184946.79, flops:194.16, batch-reuse:1
@ 2879 train 4.1328 , allloss: 4.1328, dt: 686.04ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5357, norm(y): 0.9960, norm:0.4263, tok/sec: 191056.00, flops:200.57, batch-reuse:1
@ 2880 train 4.1665 , allloss: 4.1665, dt: 702.72ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5307, norm(y): 0.9961, norm:0.3795, tok/sec: 186521.16, flops:195.81, batch-reuse:1
@ 2881 train 4.1653 , allloss: 4.1653, dt: 690.90ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5250, norm(y): 0.9961, norm:0.4159, tok/sec: 189712.86, flops:199.16, batch-reuse:1
@ 2882 train 4.1527 , allloss: 4.1527, dt: 699.87ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5269, norm(y): 0.9959, norm:0.3641, tok/sec: 187280.08, flops:196.61, batch-reuse:1
@ 2883 train 4.1910 , allloss: 4.1910, dt: 706.11ms, fracRes: 0.1583, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5389, norm(y): 0.9959, norm:0.3907, tok/sec: 185625.28, flops:194.87, batch-reuse:1
@ 2884 train 4.0400 , allloss: 4.0400, dt: 706.62ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5369, norm(y): 0.9958, norm:0.3798, tok/sec: 185490.19, flops:194.73, batch-reuse:1
@ 2885 train 4.0586 , allloss: 4.0586, dt: 698.13ms, fracRes: 0.1589, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5291, norm(y): 0.9959, norm:0.3429, tok/sec: 187747.87, flops:197.10, batch-reuse:1
@ 2886 train 4.0825 , allloss: 4.0825, dt: 700.27ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5262, norm(y): 0.9958, norm:0.3544, tok/sec: 187174.17, flops:196.50, batch-reuse:1
@ 2887 train 4.0541 , allloss: 4.0541, dt: 694.15ms, fracRes: 0.1603, norm(attn): 23.7500, norm(output): 0.4141, norm(x): 0.5435, norm(y): 0.9957, norm:0.3942, tok/sec: 188822.65, flops:198.23, batch-reuse:1
@ 2888 train 4.0972 , allloss: 4.0972, dt: 704.76ms, fracRes: 0.1591, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5368, norm(y): 0.9957, norm:0.3678, tok/sec: 185981.21, flops:195.24, batch-reuse:1
@ 2889 train 4.1101 , allloss: 4.1101, dt: 702.79ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5313, norm(y): 0.9958, norm:0.3594, tok/sec: 186503.63, flops:195.79, batch-reuse:1
@ 2890 train 4.1351 , allloss: 4.1351, dt: 702.13ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5327, norm(y): 0.9962, norm:0.3605, tok/sec: 186677.91, flops:195.97, batch-reuse:1
@ 2891 train 4.1296 , allloss: 4.1296, dt: 700.52ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5297, norm(y): 0.9958, norm:0.3866, tok/sec: 187107.41, flops:196.43, batch-reuse:1
@ 2892 train 4.0843 , allloss: 4.0843, dt: 692.27ms, fracRes: 0.1594, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5353, norm(y): 0.9959, norm:0.3543, tok/sec: 189335.61, flops:198.76, batch-reuse:1
@ 2893 train 4.0408 , allloss: 4.0408, dt: 700.93ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5338, norm(y): 0.9957, norm:0.3629, tok/sec: 186998.07, flops:196.31, batch-reuse:1
@ 2894 train 4.0655 , allloss: 4.0655, dt: 703.27ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5327, norm(y): 0.9956, norm:0.3879, tok/sec: 186373.82, flops:195.66, batch-reuse:1
@ 2895 train 4.1922 , allloss: 4.1922, dt: 701.63ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5387, norm(y): 0.9958, norm:0.4122, tok/sec: 186811.95, flops:196.12, batch-reuse:1
@ 2896 train 4.1701 , allloss: 4.1701, dt: 692.79ms, fracRes: 0.1601, norm(attn): 23.7500, norm(output): 0.4141, norm(x): 0.5424, norm(y): 0.9958, norm:0.4455, tok/sec: 189193.30, flops:198.62, batch-reuse:1
@ 2897 train 4.0996 , allloss: 4.0996, dt: 693.72ms, fracRes: 0.1598, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5327, norm(y): 0.9957, norm:0.3948, tok/sec: 188940.56, flops:198.35, batch-reuse:1
@ 2898 train 4.1118 , allloss: 4.1118, dt: 703.33ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5368, norm(y): 0.9955, norm:0.4098, tok/sec: 186358.85, flops:195.64, batch-reuse:1
@ 2899 train 4.1281 , allloss: 4.1281, dt: 702.90ms, fracRes: 0.1595, norm(attn): 23.7500, norm(output): 0.4082, norm(x): 0.5360, norm(y): 0.9954, norm:0.3854, tok/sec: 186474.47, flops:195.76, batch-reuse:1
@ 2900 train 4.1445 , allloss: 4.1445, dt: 699.90ms, fracRes: 0.1600, norm(attn): 23.7500, norm(output): 0.4121, norm(x): 0.5414, norm(y): 0.9955, norm:0.4218, tok/sec: 187272.04, flops:196.60, batch-reuse:1
@ 2901 train 4.0978 , allloss: 4.0978, dt: 701.84ms, fracRes: 0.1601, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5276, norm(y): 0.9956, norm:0.3967, tok/sec: 186753.63, flops:196.05, batch-reuse:1
@ 2902 train 4.1347 , allloss: 4.1347, dt: 710.11ms, fracRes: 0.1601, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5231, norm(y): 0.9956, norm:0.3916, tok/sec: 184579.93, flops:193.77, batch-reuse:1
@ 2903 train 4.2207 , allloss: 4.2207, dt: 703.43ms, fracRes: 0.1607, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5377, norm(y): 0.9955, norm:0.4792, tok/sec: 186331.69, flops:195.61, batch-reuse:1
@ 2904 train 4.1222 , allloss: 4.1222, dt: 709.54ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4141, norm(x): 0.5440, norm(y): 0.9956, norm:0.4892, tok/sec: 184728.66, flops:193.93, batch-reuse:1
@ 2905 train 4.2812 , allloss: 4.2812, dt: 705.59ms, fracRes: 0.1606, norm(attn): 23.7500, norm(output): 0.4141, norm(x): 0.5432, norm(y): 0.9957, norm:0.6347, tok/sec: 185762.96, flops:195.01, batch-reuse:1
@ 2906 train 4.0867 , allloss: 4.0867, dt: 709.93ms, fracRes: 0.1580, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5321, norm(y): 0.9958, norm:0.5061, tok/sec: 184627.54, flops:193.82, batch-reuse:1
@ 2907 train 4.1631 , allloss: 4.1631, dt: 709.06ms, fracRes: 0.1592, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5340, norm(y): 0.9957, norm:0.4630, tok/sec: 184852.39, flops:194.06, batch-reuse:1
@ 2908 train 4.1075 , allloss: 4.1075, dt: 711.96ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5270, norm(y): 0.9956, norm:0.4963, tok/sec: 184101.38, flops:193.27, batch-reuse:1
@ 2909 train 4.0734 , allloss: 4.0734, dt: 710.50ms, fracRes: 0.1618, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5379, norm(y): 0.9954, norm:0.4555, tok/sec: 184478.04, flops:193.67, batch-reuse:1
@ 2910 train 4.0903 , allloss: 4.0903, dt: 701.69ms, fracRes: 0.1606, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5316, norm(y): 0.9950, norm:0.4785, tok/sec: 186793.61, flops:196.10, batch-reuse:1
@ 2911 train 4.1596 , allloss: 4.1596, dt: 700.57ms, fracRes: 0.1594, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5309, norm(y): 0.9952, norm:0.4261, tok/sec: 187092.83, flops:196.41, batch-reuse:1
@ 2912 train 4.1518 , allloss: 4.1518, dt: 713.52ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4102, norm(x): 0.5426, norm(y): 0.9951, norm:0.4431, tok/sec: 183698.39, flops:192.85, batch-reuse:1
@ 2913 train 4.1219 , allloss: 4.1219, dt: 696.65ms, fracRes: 0.1603, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5315, norm(y): 0.9954, norm:0.4057, tok/sec: 188146.44, flops:197.52, batch-reuse:1
@ 2914 train 4.0346 , allloss: 4.0346, dt: 687.54ms, fracRes: 0.1602, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5281, norm(y): 0.9956, norm:0.3791, tok/sec: 190638.15, flops:200.13, batch-reuse:1
@ 2915 train 4.0593 , allloss: 4.0593, dt: 694.14ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5331, norm(y): 0.9955, norm:0.3962, tok/sec: 188826.21, flops:198.23, batch-reuse:1
@ 2916 train 4.0063 , allloss: 4.0063, dt: 706.03ms, fracRes: 0.1606, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5340, norm(y): 0.9951, norm:0.4245, tok/sec: 185646.53, flops:194.89, batch-reuse:1
@ 2917 train 4.0708 , allloss: 4.0708, dt: 702.85ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5347, norm(y): 0.9953, norm:0.4474, tok/sec: 186485.28, flops:195.77, batch-reuse:1
@ 2918 train 4.1736 , allloss: 4.1736, dt: 710.70ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5362, norm(y): 0.9957, norm:0.4021, tok/sec: 184426.12, flops:193.61, batch-reuse:1
@ 2919 train 4.0540 , allloss: 4.0540, dt: 709.61ms, fracRes: 0.1607, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5297, norm(y): 0.9955, norm:0.4051, tok/sec: 184710.23, flops:193.91, batch-reuse:1
@ 2920 train 4.1785 , allloss: 4.1785, dt: 707.44ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5357, norm(y): 0.9955, norm:0.4183, tok/sec: 185277.20, flops:194.50, batch-reuse:1
@ 2921 train 4.1173 , allloss: 4.1173, dt: 694.66ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5310, norm(y): 0.9953, norm:0.3659, tok/sec: 188685.71, flops:198.08, batch-reuse:1
@ 2922 train 4.0781 , allloss: 4.0781, dt: 691.99ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5359, norm(y): 0.9955, norm:0.4077, tok/sec: 189412.13, flops:198.85, batch-reuse:1
@ 2923 train 4.0373 , allloss: 4.0373, dt: 706.50ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5362, norm(y): 0.9954, norm:0.4156, tok/sec: 185522.30, flops:194.76, batch-reuse:1
@ 2924 train 4.1464 , allloss: 4.1464, dt: 728.10ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5370, norm(y): 0.9952, norm:0.3594, tok/sec: 180019.68, flops:188.98, batch-reuse:1
@ 2925 train 4.2408 , allloss: 4.2408, dt: 694.52ms, fracRes: 0.1598, norm(attn): 23.8750, norm(output): 0.4160, norm(x): 0.5451, norm(y): 0.9955, norm:0.4362, tok/sec: 188722.69, flops:198.12, batch-reuse:1
@ 2926 train 4.0966 , allloss: 4.0966, dt: 706.44ms, fracRes: 0.1600, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5342, norm(y): 0.9955, norm:0.3735, tok/sec: 185539.45, flops:194.78, batch-reuse:1
@ 2927 train 4.0000 , allloss: 4.0000, dt: 705.81ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5393, norm(y): 0.9955, norm:0.3785, tok/sec: 185703.35, flops:194.95, batch-reuse:1
@ 2928 train 4.0867 , allloss: 4.0867, dt: 704.03ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5313, norm(y): 0.9954, norm:0.4043, tok/sec: 186173.62, flops:195.45, batch-reuse:1
@ 2929 train 4.0670 , allloss: 4.0670, dt: 714.31ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5275, norm(y): 0.9953, norm:0.3655, tok/sec: 183493.42, flops:192.63, batch-reuse:1
@ 2930 train 4.0048 , allloss: 4.0048, dt: 710.23ms, fracRes: 0.1582, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5294, norm(y): 0.9950, norm:0.3713, tok/sec: 184549.20, flops:193.74, batch-reuse:1
@ 2931 train 3.9871 , allloss: 3.9871, dt: 710.41ms, fracRes: 0.1592, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5346, norm(y): 0.9951, norm:0.3805, tok/sec: 184500.70, flops:193.69, batch-reuse:1
@ 2932 train 3.9077 , allloss: 3.9077, dt: 695.17ms, fracRes: 0.1586, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5273, norm(y): 0.9949, norm:0.4104, tok/sec: 188546.90, flops:197.94, batch-reuse:1
@ 2933 train 4.0530 , allloss: 4.0530, dt: 697.92ms, fracRes: 0.1594, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5383, norm(y): 0.9949, norm:0.4088, tok/sec: 187804.51, flops:197.16, batch-reuse:1
@ 2934 train 4.0813 , allloss: 4.0813, dt: 700.65ms, fracRes: 0.1585, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5322, norm(y): 0.9948, norm:0.4075, tok/sec: 187072.27, flops:196.39, batch-reuse:1
@ 2935 train 4.0111 , allloss: 4.0111, dt: 709.73ms, fracRes: 0.1587, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5345, norm(y): 0.9951, norm:0.4069, tok/sec: 184679.32, flops:193.88, batch-reuse:1
@ 2936 train 3.9274 , allloss: 3.9274, dt: 715.69ms, fracRes: 0.1569, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5271, norm(y): 0.9949, norm:0.3959, tok/sec: 183140.53, flops:192.26, batch-reuse:1
@ 2937 train 3.9888 , allloss: 3.9888, dt: 702.41ms, fracRes: 0.1571, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5252, norm(y): 0.9949, norm:0.3810, tok/sec: 186603.02, flops:195.90, batch-reuse:1
@ 2938 train 4.0003 , allloss: 4.0003, dt: 707.92ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5344, norm(y): 0.9952, norm:0.4147, tok/sec: 185151.47, flops:194.37, batch-reuse:1
@ 2939 train 4.0589 , allloss: 4.0589, dt: 704.10ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5268, norm(y): 0.9951, norm:0.3750, tok/sec: 186155.21, flops:195.43, batch-reuse:1
@ 2940 train 4.0156 , allloss: 4.0156, dt: 700.15ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5225, norm(y): 0.9950, norm:0.3703, tok/sec: 187204.89, flops:196.53, batch-reuse:1
@ 2941 train 3.8931 , allloss: 3.8931, dt: 705.23ms, fracRes: 0.1586, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5270, norm(y): 0.9948, norm:0.3923, tok/sec: 185858.35, flops:195.11, batch-reuse:1
@ 2942 train 4.0405 , allloss: 4.0405, dt: 696.24ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5369, norm(y): 0.9950, norm:0.4306, tok/sec: 188255.97, flops:197.63, batch-reuse:1
@ 2943 train 3.9849 , allloss: 3.9849, dt: 687.37ms, fracRes: 0.1599, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5358, norm(y): 0.9947, norm:0.4463, tok/sec: 190685.56, flops:200.18, batch-reuse:1
@ 2944 train 4.0711 , allloss: 4.0711, dt: 692.60ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5313, norm(y): 0.9950, norm:0.4129, tok/sec: 189247.36, flops:198.67, batch-reuse:1
@ 2945 train 4.0667 , allloss: 4.0667, dt: 708.18ms, fracRes: 0.1591, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5225, norm(y): 0.9948, norm:0.3965, tok/sec: 185082.15, flops:194.30, batch-reuse:1
@ 2946 train 3.9924 , allloss: 3.9924, dt: 704.46ms, fracRes: 0.1595, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5279, norm(y): 0.9945, norm:0.4073, tok/sec: 186059.26, flops:195.33, batch-reuse:1
@ 2947 train 4.0091 , allloss: 4.0091, dt: 707.49ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5349, norm(y): 0.9948, norm:0.4067, tok/sec: 185263.34, flops:194.49, batch-reuse:1
@ 2948 train 3.9166 , allloss: 3.9166, dt: 704.15ms, fracRes: 0.1605, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5270, norm(y): 0.9944, norm:0.4017, tok/sec: 186140.91, flops:195.41, batch-reuse:1
@ 2949 train 3.9880 , allloss: 3.9880, dt: 706.56ms, fracRes: 0.1592, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5241, norm(y): 0.9944, norm:0.3877, tok/sec: 185508.28, flops:194.75, batch-reuse:1
@ 2950 train 4.0447 , allloss: 4.0447, dt: 710.89ms, fracRes: 0.1617, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5453, norm(y): 0.9945, norm:0.3889, tok/sec: 184377.75, flops:193.56, batch-reuse:1
@ 2951 train 3.9689 , allloss: 3.9689, dt: 710.03ms, fracRes: 0.1612, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5374, norm(y): 0.9947, norm:0.4178, tok/sec: 184599.64, flops:193.79, batch-reuse:1
@ 2952 train 4.0686 , allloss: 4.0686, dt: 706.15ms, fracRes: 0.1608, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5328, norm(y): 0.9948, norm:0.5240, tok/sec: 185615.63, flops:194.86, batch-reuse:1
@ 2953 train 4.0342 , allloss: 4.0342, dt: 712.44ms, fracRes: 0.1614, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5377, norm(y): 0.9948, norm:0.3907, tok/sec: 183976.38, flops:193.14, batch-reuse:1
@ 2954 train 3.9922 , allloss: 3.9922, dt: 697.65ms, fracRes: 0.1604, norm(attn): 23.8750, norm(output): 0.4062, norm(x): 0.5382, norm(y): 0.9947, norm:0.4247, tok/sec: 187875.11, flops:197.23, batch-reuse:1
@ 2955 train 4.0263 , allloss: 4.0263, dt: 709.32ms, fracRes: 0.1589, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5238, norm(y): 0.9945, norm:0.4401, tok/sec: 184786.28, flops:193.99, batch-reuse:1
@ 2956 train 3.9822 , allloss: 3.9822, dt: 705.37ms, fracRes: 0.1584, norm(attn): 23.8750, norm(output): 0.3887, norm(x): 0.5208, norm(y): 0.9945, norm:0.3474, tok/sec: 185821.29, flops:195.08, batch-reuse:1
@ 2957 train 4.0773 , allloss: 4.0773, dt: 707.66ms, fracRes: 0.1588, norm(attn): 23.8750, norm(output): 0.3906, norm(x): 0.5229, norm(y): 0.9944, norm:0.3909, tok/sec: 185217.90, flops:194.44, batch-reuse:1
@ 2958 train 4.0264 , allloss: 4.0264, dt: 705.00ms, fracRes: 0.1600, norm(attn): 23.8750, norm(output): 0.3887, norm(x): 0.5249, norm(y): 0.9945, norm:0.3683, tok/sec: 185917.31, flops:195.18, batch-reuse:1
@ 2959 train 4.0492 , allloss: 4.0492, dt: 694.85ms, fracRes: 0.1603, norm(attn): 23.8750, norm(output): 0.3906, norm(x): 0.5256, norm(y): 0.9945, norm:0.3529, tok/sec: 188632.94, flops:198.03, batch-reuse:1
@ 2960 train 4.0263 , allloss: 4.0263, dt: 703.25ms, fracRes: 0.1602, norm(attn): 23.8750, norm(output): 0.3867, norm(x): 0.5207, norm(y): 0.9942, norm:0.3601, tok/sec: 186379.83, flops:195.66, batch-reuse:1
@ 2961 train 3.9218 , allloss: 3.9218, dt: 704.80ms, fracRes: 0.1607, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5244, norm(y): 0.9939, norm:0.3614, tok/sec: 185970.77, flops:195.23, batch-reuse:1
@ 2962 train 3.9875 , allloss: 3.9875, dt: 698.67ms, fracRes: 0.1601, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5230, norm(y): 0.9941, norm:0.3741, tok/sec: 187601.35, flops:196.94, batch-reuse:1
@ 2963 train 4.0163 , allloss: 4.0163, dt: 704.26ms, fracRes: 0.1593, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5234, norm(y): 0.9939, norm:0.3729, tok/sec: 186113.94, flops:195.38, batch-reuse:1
@ 2964 train 4.0432 , allloss: 4.0432, dt: 718.10ms, fracRes: 0.1604, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5306, norm(y): 0.9941, norm:0.4415, tok/sec: 182526.88, flops:191.62, batch-reuse:1
@ 2965 train 3.9983 , allloss: 3.9983, dt: 718.96ms, fracRes: 0.1624, norm(attn): 23.6250, norm(output): 0.4043, norm(x): 0.5385, norm(y): 0.9942, norm:0.4194, tok/sec: 182307.77, flops:191.39, batch-reuse:1
@ 2966 train 3.9132 , allloss: 3.9132, dt: 708.19ms, fracRes: 0.1604, norm(attn): 23.6250, norm(output): 0.4043, norm(x): 0.5359, norm(y): 0.9940, norm:0.3964, tok/sec: 185079.91, flops:194.30, batch-reuse:1
@ 2967 train 4.0201 , allloss: 4.0201, dt: 706.68ms, fracRes: 0.1584, norm(attn): 23.7500, norm(output): 0.3906, norm(x): 0.5210, norm(y): 0.9938, norm:0.3823, tok/sec: 185475.79, flops:194.71, batch-reuse:1
@ 2968 train 4.0247 , allloss: 4.0247, dt: 704.49ms, fracRes: 0.1590, norm(attn): 23.8750, norm(output): 0.3887, norm(x): 0.5193, norm(y): 0.9938, norm:0.4009, tok/sec: 186053.28, flops:195.32, batch-reuse:1
@ 2969 train 3.9367 , allloss: 3.9367, dt: 706.20ms, fracRes: 0.1601, norm(attn): 23.7500, norm(output): 0.3906, norm(x): 0.5243, norm(y): 0.9940, norm:0.4141, tok/sec: 185602.16, flops:194.85, batch-reuse:1
@ 2970 train 3.9541 , allloss: 3.9541, dt: 705.63ms, fracRes: 0.1600, norm(attn): 23.7500, norm(output): 0.3945, norm(x): 0.5264, norm(y): 0.9938, norm:0.3605, tok/sec: 185750.97, flops:195.00, batch-reuse:1
@ 2971 train 3.9925 , allloss: 3.9925, dt: 710.20ms, fracRes: 0.1608, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5308, norm(y): 0.9936, norm:0.3826, tok/sec: 184557.50, flops:193.75, batch-reuse:1
@ 2972 train 3.8816 , allloss: 3.8816, dt: 706.78ms, fracRes: 0.1590, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5271, norm(y): 0.9935, norm:0.4202, tok/sec: 185450.02, flops:194.69, batch-reuse:1
@ 2973 train 3.9996 , allloss: 3.9996, dt: 700.72ms, fracRes: 0.1608, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5322, norm(y): 0.9935, norm:0.4679, tok/sec: 187052.28, flops:196.37, batch-reuse:1
@ 2974 train 3.9250 , allloss: 3.9250, dt: 705.39ms, fracRes: 0.1603, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5313, norm(y): 0.9936, norm:0.4193, tok/sec: 185814.57, flops:195.07, batch-reuse:1
@ 2975 train 4.1009 , allloss: 4.1009, dt: 715.90ms, fracRes: 0.1604, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5295, norm(y): 0.9934, norm:0.4026, tok/sec: 183087.10, flops:192.21, batch-reuse:1
@ 2976 train 4.1420 , allloss: 4.1420, dt: 717.77ms, fracRes: 0.1611, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5302, norm(y): 0.9937, norm:0.4070, tok/sec: 182610.43, flops:191.70, batch-reuse:1
@ 2977 train 4.1719 , allloss: 4.1719, dt: 699.78ms, fracRes: 0.1613, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5287, norm(y): 0.9936, norm:0.4490, tok/sec: 187304.39, flops:196.63, batch-reuse:1
@ 2978 train 4.1658 , allloss: 4.1658, dt: 708.16ms, fracRes: 0.1619, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5265, norm(y): 0.9930, norm:0.4457, tok/sec: 185087.82, flops:194.31, batch-reuse:1
@ 2979 train 4.2076 , allloss: 4.2076, dt: 706.51ms, fracRes: 0.1628, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5322, norm(y): 0.9934, norm:0.5210, tok/sec: 185521.42, flops:194.76, batch-reuse:1
@ 2980 train 4.0394 , allloss: 4.0394, dt: 708.11ms, fracRes: 0.1637, norm(attn): 23.7500, norm(output): 0.4102, norm(x): 0.5437, norm(y): 0.9934, norm:0.4582, tok/sec: 185100.04, flops:194.32, batch-reuse:1
@ 2981 train 4.1369 , allloss: 4.1369, dt: 704.25ms, fracRes: 0.1622, norm(attn): 23.6250, norm(output): 0.4062, norm(x): 0.5430, norm(y): 0.9935, norm:0.6375, tok/sec: 186116.39, flops:195.39, batch-reuse:1
@ 2982 train 4.2126 , allloss: 4.2126, dt: 710.97ms, fracRes: 0.1616, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5315, norm(y): 0.9933, norm:0.4045, tok/sec: 184356.54, flops:193.54, batch-reuse:1
@ 2983 train 4.1149 , allloss: 4.1149, dt: 704.85ms, fracRes: 0.1608, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5303, norm(y): 0.9930, norm:0.5028, tok/sec: 185956.74, flops:195.22, batch-reuse:1
@ 2984 train 4.1692 , allloss: 4.1692, dt: 703.98ms, fracRes: 0.1610, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5245, norm(y): 0.9925, norm:0.4233, tok/sec: 186186.42, flops:195.46, batch-reuse:1
@ 2985 train 4.2060 , allloss: 4.2060, dt: 706.23ms, fracRes: 0.1620, norm(attn): 23.5000, norm(output): 0.4043, norm(x): 0.5368, norm(y): 0.9926, norm:0.4122, tok/sec: 185593.95, flops:194.84, batch-reuse:1
@ 2986 train 4.1207 , allloss: 4.1207, dt: 698.06ms, fracRes: 0.1610, norm(attn): 23.6250, norm(output): 0.3965, norm(x): 0.5308, norm(y): 0.9929, norm:0.3780, tok/sec: 187765.32, flops:197.12, batch-reuse:1
@ 2987 train 4.1943 , allloss: 4.1943, dt: 713.13ms, fracRes: 0.1600, norm(attn): 23.5000, norm(output): 0.3926, norm(x): 0.5258, norm(y): 0.9927, norm:0.3875, tok/sec: 183798.80, flops:192.95, batch-reuse:1
@ 2988 train 4.2487 , allloss: 4.2487, dt: 710.09ms, fracRes: 0.1608, norm(attn): 23.6250, norm(output): 0.4102, norm(x): 0.5404, norm(y): 0.9927, norm:0.3858, tok/sec: 184585.20, flops:193.78, batch-reuse:1
@ 2989 train 4.1975 , allloss: 4.1975, dt: 700.84ms, fracRes: 0.1601, norm(attn): 23.6250, norm(output): 0.4004, norm(x): 0.5315, norm(y): 0.9928, norm:0.3872, tok/sec: 187022.31, flops:196.34, batch-reuse:1
@ 2990 train 4.2353 , allloss: 4.2353, dt: 694.60ms, fracRes: 0.1605, norm(attn): 23.6250, norm(output): 0.3906, norm(x): 0.5239, norm(y): 0.9930, norm:0.4262, tok/sec: 188701.71, flops:198.10, batch-reuse:1
@ 2991 train 4.1277 , allloss: 4.1277, dt: 700.21ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.3926, norm(x): 0.5239, norm(y): 0.9931, norm:0.3866, tok/sec: 187188.77, flops:196.51, batch-reuse:1
@ 2992 train 4.1773 , allloss: 4.1773, dt: 710.97ms, fracRes: 0.1618, norm(attn): 23.7500, norm(output): 0.3906, norm(x): 0.5253, norm(y): 0.9931, norm:0.3809, tok/sec: 184357.53, flops:193.54, batch-reuse:1
@ 2993 train 4.1574 , allloss: 4.1574, dt: 702.41ms, fracRes: 0.1617, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5348, norm(y): 0.9933, norm:0.4249, tok/sec: 186602.26, flops:195.90, batch-reuse:1
@ 2994 train 4.1873 , allloss: 4.1873, dt: 704.88ms, fracRes: 0.1604, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5336, norm(y): 0.9931, norm:0.4109, tok/sec: 185948.56, flops:195.21, batch-reuse:1
@ 2995 train 4.0718 , allloss: 4.0718, dt: 700.98ms, fracRes: 0.1609, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5331, norm(y): 0.9927, norm:0.3821, tok/sec: 186984.33, flops:196.30, batch-reuse:1
@ 2996 train 4.1072 , allloss: 4.1072, dt: 713.06ms, fracRes: 0.1605, norm(attn): 23.6250, norm(output): 0.4023, norm(x): 0.5362, norm(y): 0.9926, norm:0.4221, tok/sec: 183815.02, flops:192.97, batch-reuse:1
@ 2997 train 4.1499 , allloss: 4.1499, dt: 712.65ms, fracRes: 0.1618, norm(attn): 23.7500, norm(output): 0.3984, norm(x): 0.5296, norm(y): 0.9917, norm:0.3890, tok/sec: 183920.86, flops:193.08, batch-reuse:1
@ 2998 train 4.2012 , allloss: 4.2012, dt: 714.31ms, fracRes: 0.1607, norm(attn): 23.6250, norm(output): 0.3965, norm(x): 0.5258, norm(y): 0.9908, norm:0.4489, tok/sec: 183493.54, flops:192.63, batch-reuse:1
@ 2999 train 4.0685 , allloss: 4.0685, dt: 698.31ms, fracRes: 0.1614, norm(attn): 23.5000, norm(output): 0.3945, norm(x): 0.5276, norm(y): 0.9902, norm:0.3852, tok/sec: 187699.35, flops:197.05, batch-reuse:1
@ 3000 train 4.1869 , allloss: 4.1869, dt: 701.71ms, fracRes: 0.1622, norm(attn): 23.5000, norm(output): 0.4043, norm(x): 0.5397, norm(y): 0.9901, norm:0.4303, tok/sec: 186790.62, flops:196.09, batch-reuse:1
@ 3001 train 4.2369 , allloss: 4.2369, dt: 700.26ms, fracRes: 0.1609, norm(attn): 23.6250, norm(output): 0.4004, norm(x): 0.5359, norm(y): 0.9901, norm:0.3740, tok/sec: 187176.53, flops:196.50, batch-reuse:1
@ 3002 train 4.0998 , allloss: 4.0998, dt: 701.19ms, fracRes: 0.1633, norm(attn): 23.5000, norm(output): 0.4121, norm(x): 0.5448, norm(y): 0.9886, norm:0.4416, tok/sec: 186928.76, flops:196.24, batch-reuse:1
@ 3003 train 4.1492 , allloss: 4.1492, dt: 710.42ms, fracRes: 0.1608, norm(attn): 23.5000, norm(output): 0.3906, norm(x): 0.5241, norm(y): 0.9885, norm:0.4402, tok/sec: 184499.52, flops:193.69, batch-reuse:1
@ 3004 train 4.2258 , allloss: 4.2258, dt: 715.01ms, fracRes: 0.1612, norm(attn): 23.6250, norm(output): 0.3906, norm(x): 0.5251, norm(y): 0.9895, norm:0.4728, tok/sec: 183315.98, flops:192.45, batch-reuse:1
@ 3005 train 4.4044 , allloss: 4.4044, dt: 696.74ms, fracRes: 0.1634, norm(attn): 23.3750, norm(output): 0.4141, norm(x): 0.5506, norm(y): 0.9901, norm:0.5345, tok/sec: 188121.66, flops:197.49, batch-reuse:1
@ 3006 train 4.1323 , allloss: 4.1323, dt: 701.33ms, fracRes: 0.1618, norm(attn): 23.7500, norm(output): 0.3945, norm(x): 0.5277, norm(y): 0.9898, norm:0.5103, tok/sec: 186891.91, flops:196.20, batch-reuse:1
@ 3007 train 4.2305 , allloss: 4.2305, dt: 704.18ms, fracRes: 0.1603, norm(attn): 23.7500, norm(output): 0.3906, norm(x): 0.5235, norm(y): 0.9896, norm:0.4260, tok/sec: 186133.91, flops:195.40, batch-reuse:1
@ 3008 train 4.1799 , allloss: 4.1799, dt: 703.22ms, fracRes: 0.1598, norm(attn): 23.7500, norm(output): 0.3887, norm(x): 0.5236, norm(y): 0.9883, norm:0.5049, tok/sec: 186388.55, flops:195.67, batch-reuse:1
@ 3009 train 4.0942 , allloss: 4.0942, dt: 700.16ms, fracRes: 0.1604, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5241, norm(y): 0.9865, norm:0.5635, tok/sec: 187202.92, flops:196.53, batch-reuse:1
@ 3010 train 4.1333 , allloss: 4.1333, dt: 717.41ms, fracRes: 0.1610, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5328, norm(y): 0.9891, norm:0.4128, tok/sec: 182701.03, flops:191.80, batch-reuse:1
@ 3011 train 4.1974 , allloss: 4.1974, dt: 704.52ms, fracRes: 0.1604, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5333, norm(y): 0.9895, norm:0.4753, tok/sec: 186043.71, flops:195.31, batch-reuse:1
@ 3012 train 4.2765 , allloss: 4.2765, dt: 699.09ms, fracRes: 0.1631, norm(attn): 23.5000, norm(output): 0.4062, norm(x): 0.5418, norm(y): 0.9883, norm:0.5242, tok/sec: 187488.94, flops:196.83, batch-reuse:1
@ 3013 train 4.3281 , allloss: 4.3281, dt: 705.11ms, fracRes: 0.1637, norm(attn): 23.6250, norm(output): 0.4004, norm(x): 0.5377, norm(y): 0.9875, norm:0.4958, tok/sec: 185887.76, flops:195.15, batch-reuse:1
@ 3014 train 4.1598 , allloss: 4.1598, dt: 717.03ms, fracRes: 0.1646, norm(attn): 23.5000, norm(output): 0.4062, norm(x): 0.5434, norm(y): 0.9881, norm:0.5297, tok/sec: 182797.75, flops:191.90, batch-reuse:1
@ 3015 train 4.1341 , allloss: 4.1341, dt: 702.06ms, fracRes: 0.1620, norm(attn): 23.6250, norm(output): 0.3945, norm(x): 0.5287, norm(y): 0.9864, norm:0.4419, tok/sec: 186696.17, flops:195.99, batch-reuse:1
@ 3016 train 4.1002 , allloss: 4.1002, dt: 711.24ms, fracRes: 0.1618, norm(attn): 23.6250, norm(output): 0.3867, norm(x): 0.5240, norm(y): 0.9834, norm:0.3838, tok/sec: 184287.02, flops:193.46, batch-reuse:1
@ 3017 train 4.0800 , allloss: 4.0800, dt: 709.35ms, fracRes: 0.1628, norm(attn): 23.7500, norm(output): 0.3945, norm(x): 0.5331, norm(y): 0.9804, norm:0.4325, tok/sec: 184776.34, flops:193.98, batch-reuse:1
@ 3018 train 4.1553 , allloss: 4.1553, dt: 702.69ms, fracRes: 0.1630, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5300, norm(y): 0.9776, norm:0.3727, tok/sec: 186528.88, flops:195.82, batch-reuse:1
@ 3019 train 4.3333 , allloss: 4.3333, dt: 701.13ms, fracRes: 0.1637, norm(attn): 23.6250, norm(output): 0.3984, norm(x): 0.5373, norm(y): 0.9783, norm:0.4861, tok/sec: 186942.94, flops:196.25, batch-reuse:1
@ 3020 train 4.0817 , allloss: 4.0817, dt: 715.80ms, fracRes: 0.1631, norm(attn): 23.7500, norm(output): 0.3848, norm(x): 0.5242, norm(y): 0.9795, norm:0.3942, tok/sec: 183113.38, flops:192.23, batch-reuse:1
@ 3021 train 4.1221 , allloss: 4.1221, dt: 710.57ms, fracRes: 0.1640, norm(attn): 23.6250, norm(output): 0.3926, norm(x): 0.5308, norm(y): 0.9799, norm:0.4175, tok/sec: 184459.72, flops:193.65, batch-reuse:1
@ 3022 train 4.1723 , allloss: 4.1723, dt: 726.30ms, fracRes: 0.1632, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5344, norm(y): 0.9805, norm:0.3992, tok/sec: 180464.84, flops:189.45, batch-reuse:1
@ 3023 train 4.2347 , allloss: 4.2347, dt: 709.57ms, fracRes: 0.1616, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5303, norm(y): 0.9830, norm:0.4690, tok/sec: 184721.58, flops:193.92, batch-reuse:1
@ 3024 train 4.1373 , allloss: 4.1373, dt: 696.84ms, fracRes: 0.1610, norm(attn): 23.8750, norm(output): 0.3887, norm(x): 0.5226, norm(y): 0.9846, norm:0.4180, tok/sec: 188096.04, flops:197.46, batch-reuse:1
@ 3025 train 4.1433 , allloss: 4.1433, dt: 702.99ms, fracRes: 0.1605, norm(attn): 23.8750, norm(output): 0.3906, norm(x): 0.5238, norm(y): 0.9837, norm:0.4472, tok/sec: 186449.04, flops:195.73, batch-reuse:1
@ 3026 train 4.1773 , allloss: 4.1773, dt: 708.12ms, fracRes: 0.1623, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5381, norm(y): 0.9825, norm:0.4734, tok/sec: 185097.98, flops:194.32, batch-reuse:1
@ 3027 train 4.2001 , allloss: 4.2001, dt: 703.71ms, fracRes: 0.1625, norm(attn): 23.7500, norm(output): 0.4062, norm(x): 0.5394, norm(y): 0.9842, norm:0.4335, tok/sec: 186259.28, flops:195.54, batch-reuse:1
@ 3028 train 4.1754 , allloss: 4.1754, dt: 699.48ms, fracRes: 0.1606, norm(attn): 23.7500, norm(output): 0.4004, norm(x): 0.5324, norm(y): 0.9855, norm:0.4393, tok/sec: 187383.62, flops:196.72, batch-reuse:1
@ 3029 train 4.0519 , allloss: 4.0519, dt: 709.59ms, fracRes: 0.1604, norm(attn): 23.7500, norm(output): 0.3926, norm(x): 0.5256, norm(y): 0.9842, norm:0.3957, tok/sec: 184714.20, flops:193.91, batch-reuse:1
@ 3030 train 4.1280 , allloss: 4.1280, dt: 692.90ms, fracRes: 0.1597, norm(attn): 23.8750, norm(output): 0.3887, norm(x): 0.5237, norm(y): 0.9811, norm:0.4871, tok/sec: 189165.44, flops:198.59, batch-reuse:1
@ 3031 train 4.1364 , allloss: 4.1364, dt: 698.25ms, fracRes: 0.1596, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5265, norm(y): 0.9821, norm:0.4051, tok/sec: 187716.20, flops:197.06, batch-reuse:1
@ 3032 train 4.1446 , allloss: 4.1446, dt: 701.54ms, fracRes: 0.1608, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5331, norm(y): 0.9806, norm:0.3963, tok/sec: 186833.60, flops:196.14, batch-reuse:1
@ 3033 train 4.0853 , allloss: 4.0853, dt: 700.41ms, fracRes: 0.1615, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5321, norm(y): 0.9784, norm:0.4053, tok/sec: 187135.63, flops:196.46, batch-reuse:1
@ 3034 train 4.1726 , allloss: 4.1726, dt: 720.06ms, fracRes: 0.1621, norm(attn): 23.8750, norm(output): 0.4023, norm(x): 0.5343, norm(y): 0.9784, norm:0.3860, tok/sec: 182030.51, flops:191.10, batch-reuse:1
@ 3035 train 4.2018 , allloss: 4.2018, dt: 720.06ms, fracRes: 0.1619, norm(attn): 23.8750, norm(output): 0.3945, norm(x): 0.5300, norm(y): 0.9789, norm:0.3886, tok/sec: 182030.03, flops:191.10, batch-reuse:1
@ 3036 train 4.1293 , allloss: 4.1293, dt: 707.33ms, fracRes: 0.1606, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5284, norm(y): 0.9781, norm:0.4098, tok/sec: 185305.62, flops:194.53, batch-reuse:1
@ 3037 train 4.1974 , allloss: 4.1974, dt: 703.59ms, fracRes: 0.1612, norm(attn): 23.7500, norm(output): 0.3906, norm(x): 0.5262, norm(y): 0.9781, norm:0.4178, tok/sec: 186291.22, flops:195.57, batch-reuse:1
@ 3038 train 4.1453 , allloss: 4.1453, dt: 698.83ms, fracRes: 0.1615, norm(attn): 23.7500, norm(output): 0.3965, norm(x): 0.5316, norm(y): 0.9794, norm:0.4157, tok/sec: 187559.62, flops:196.90, batch-reuse:1
@ 3039 train 4.4064 , allloss: 4.4064, dt: 697.31ms, fracRes: 0.1642, norm(attn): 23.3750, norm(output): 0.4004, norm(x): 0.5392, norm(y): 0.9799, norm:0.5606, tok/sec: 187968.96, flops:197.33, batch-reuse:1
@ 3040 train 4.1136 , allloss: 4.1136, dt: 695.25ms, fracRes: 0.1612, norm(attn): 23.6250, norm(output): 0.3848, norm(x): 0.5214, norm(y): 0.9765, norm:0.5725, tok/sec: 188526.27, flops:197.92, batch-reuse:1
@ 3041 train 4.1767 , allloss: 4.1767, dt: 696.78ms, fracRes: 0.1618, norm(attn): 23.5000, norm(output): 0.3945, norm(x): 0.5271, norm(y): 0.9727, norm:0.4829, tok/sec: 188110.78, flops:197.48, batch-reuse:1
@ 3042 train 4.0753 , allloss: 4.0753, dt: 697.52ms, fracRes: 0.1617, norm(attn): 23.6250, norm(output): 0.4082, norm(x): 0.5394, norm(y): 0.9710, norm:0.5800, tok/sec: 187911.45, flops:197.27, batch-reuse:1
@ 3043 train 4.1343 , allloss: 4.1343, dt: 700.09ms, fracRes: 0.1612, norm(attn): 23.6250, norm(output): 0.3945, norm(x): 0.5289, norm(y): 0.9661, norm:0.4550, tok/sec: 187221.98, flops:196.55, batch-reuse:1
@ 3044 train 4.1675 , allloss: 4.1675, dt: 713.13ms, fracRes: 0.1607, norm(attn): 23.0000, norm(output): 0.3926, norm(x): 0.5276, norm(y): 0.9337, norm:3.4859, tok/sec: 183797.82, flops:192.95, batch-reuse:1
@ 3045 train 4.3866 , allloss: 4.3866, dt: 713.72ms, fracRes: 0.1635, norm(attn): 23.2500, norm(output): 0.3906, norm(x): 0.5293, norm(y): 0.9701, norm:0.6494, tok/sec: 183645.43, flops:192.79, batch-reuse:1
@ 3046 train 4.1755 , allloss: 4.1755, dt: 700.22ms, fracRes: 0.1630, norm(attn): 23.8750, norm(output): 0.3867, norm(x): 0.5247, norm(y): 0.9745, norm:0.4749, tok/sec: 187187.49, flops:196.51, batch-reuse:1
@ 3047 train 4.1626 , allloss: 4.1626, dt: 705.21ms, fracRes: 0.1639, norm(attn): 23.6250, norm(output): 0.4043, norm(x): 0.5396, norm(y): 0.9794, norm:0.5006, tok/sec: 185862.31, flops:195.12, batch-reuse:1
@ 3048 train 4.0813 , allloss: 4.0813, dt: 695.89ms, fracRes: 0.1625, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5372, norm(y): 0.9830, norm:0.4806, tok/sec: 188351.36, flops:197.73, batch-reuse:1
@ 3049 train 4.3035 , allloss: 4.3035, dt: 704.31ms, fracRes: 0.1629, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5390, norm(y): 0.9829, norm:0.4543, tok/sec: 186100.33, flops:195.37, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1045, 0.8945, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7773, 0.1543, 0.0698, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4336, 0.2734, 0.2275, 0.0659, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6797, 0.1709, 0.0459, 0.0703, 0.0317, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5898, 0.1309, 0.0781, 0.0623, 0.0540, 0.0854, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2334, 0.2500, 0.0703, 0.0596, 0.0645, 0.2197, 0.1021, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3320, 0.1562, 0.0786, 0.0549, 0.0854, 0.1289, 0.1064, 0.0579, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.1885, 0.0835, 0.0549, 0.0889, 0.2246, 0.1367, 0.0586, 0.0420, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1069, 0.1660, 0.1357, 0.0635, 0.1045, 0.1167, 0.1641, 0.0752, 0.0417, 0.0249, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0928, 0.0610, 0.0234, 0.0386, 0.0576, 0.3496, 0.1650, 0.0530, 0.0981, 0.0159, 0.0447, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0415, 0.1650, 0.0576, 0.0457, 0.0649, 0.1582, 0.2012, 0.0830, 0.0918, 0.0432, 0.0227, 0.0247, 0.0000, 0.0000, 0.0000],
        [0.1924, 0.0854, 0.0146, 0.0236, 0.0581, 0.1855, 0.1680, 0.0732, 0.1050, 0.0170, 0.0297, 0.0125, 0.0354, 0.0000, 0.0000],
        [0.0410, 0.0781, 0.0308, 0.0231, 0.0459, 0.2139, 0.1650, 0.0679, 0.0845, 0.0374, 0.0654, 0.0366, 0.0649, 0.0449, 0.0000],
        [0.0123, 0.0393, 0.0284, 0.0173, 0.0378, 0.0669, 0.1206, 0.0610, 0.1680, 0.1035, 0.0767, 0.0618, 0.0571, 0.1035, 0.0447]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0112,     -1.0078,     -1.4844,     -1.1875,     -1.1719,     -0.7617,     -0.8906,     -0.9492,     -1.0234,     -1.6250,     -1.2500,     -1.6641,     -0.9180,     -1.0312,     -1.1562],
        [     0.0327,      2.1875,      0.9805,      0.3242,      0.5352,      1.1953,      1.2656,      0.5195,      1.3750,      0.7500,      0.6953,     -0.1855,      0.3945,      0.8633,      1.0469],
        [    -0.0168,     -1.6328,     -2.4219,     -2.2500,     -2.4531,     -2.0625,     -2.4062,     -2.0625,     -2.3281,     -2.9062,     -3.0312,     -2.5938,     -2.3125,     -2.7656,     -2.8438],
        [    -0.0310,     -0.4902,     -0.6719,     -1.9062,     -1.5312,     -1.8828,     -1.8516,     -1.4219,     -2.6094,     -2.0312,     -2.2969,     -1.3984,     -1.3125,     -2.8906,     -2.0000],
        [     0.0011,     -1.3828,     -2.7031,     -2.2656,     -3.0625,     -0.9375,     -1.8047,     -2.0000,     -2.6719,     -3.7188,     -3.5469,     -3.4844,     -2.0156,     -2.9062,     -3.0781],
        [    -0.0062,     -1.5156,     -2.0312,     -2.2500,     -2.3906,     -1.9375,     -2.0781,     -2.1562,     -2.6406,     -3.1406,     -2.6250,     -2.8594,     -1.9062,     -2.4219,     -2.4219],
        [     0.0239,      0.0928,     -1.1797,     -1.3438,     -1.2656,     -0.0374,     -0.8008,     -1.2734,     -1.0469,     -2.3281,     -2.0000,     -2.5781,     -1.1875,     -1.1562,     -0.8867],
        [     0.0098,     -0.7422,     -1.4297,     -1.7891,     -1.3516,     -0.9336,     -1.1250,     -1.7344,     -1.7344,     -2.5000,     -2.0938,     -2.3594,     -1.6172,     -1.7266,     -1.5781],
        [     0.0320,      0.4551,     -0.3555,     -0.7734,     -0.2969,      0.6328,      0.1387,     -0.7109,     -1.0391,     -1.6797,     -0.9336,     -1.2969,     -0.3887,     -1.0078,     -0.7148],
        [     0.0330,      0.4707,      0.2676,     -0.4863,      0.0111,      0.1196,      0.4629,     -0.3184,     -0.9102,     -1.4219,     -1.2891,     -0.3789,     -0.5664,     -0.9062,     -0.0649],
        [     0.0664,     -0.3535,     -1.3125,     -0.8086,     -0.4102,      1.3906,      0.6445,     -0.4941,      0.1250,     -1.7031,     -0.6641,     -2.0781,     -0.5625,     -0.1699,     -0.3125],
        [     0.0562,      1.4375,      0.3848,      0.1523,      0.5039,      1.3984,      1.6406,      0.7539,      0.8477,      0.0962,     -0.5469,     -0.4609,      0.5195,      0.3145,      0.4062],
        [     0.0635,     -0.7422,     -2.5156,     -2.0312,     -1.1328,      0.0292,     -0.0713,     -0.8984,     -0.5430,     -2.3594,     -1.8047,     -2.6719,     -1.6250,     -1.4062,     -1.3359],
        [     0.0603,      0.7070,     -0.2256,     -0.5117,      0.1768,      1.7188,      1.4531,      0.5703,      0.7812,     -0.0342,      0.5312,     -0.0535,      0.5234,      0.1533,      0.3770],
        [     0.0583,      1.2188,      0.8984,      0.4004,      1.1797,      1.7578,      2.3438,      1.6562,      2.6719,      2.1875,      1.8906,      1.6719,      1.5938,      2.1875,      1.3516]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4287],
        [0.3129],
        [0.1829],
        [0.2614],
        [0.2185],
        [0.1622],
        [0.1776],
        [0.1485],
        [0.0893],
        [0.1390],
        [0.0616],
        [0.1932],
        [0.1122],
        [0.0447]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0157,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9766,     0.0145,     0.0072,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9766,     0.0154,     0.0005,     0.0057,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9023,     0.0073,     0.0025,     0.0037,     0.0830,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7227,     0.0129,     0.0001,     0.0093,     0.0469,     0.2100,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7500,     0.0221,     0.0010,     0.0062,     0.0062,     0.0554,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.7852,     0.0598,     0.0068,     0.0013,     0.0466,     0.0459,     0.0132,     0.0420,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.9688,     0.0043,     0.0007,     0.0016,     0.0010,     0.0028,     0.0008,     0.0101,     0.0095,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.7344,     0.0124,     0.0008,     0.0073,     0.0223,     0.0332,     0.0227,     0.0938,     0.0474,     0.0269,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.6914,     0.0127,     0.0015,     0.0270,     0.0454,     0.0177,     0.1621,     0.0195,     0.0028,     0.0022,     0.0176,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1514,     0.0045,     0.0014,     0.0001,     0.0016,     0.0190,     0.0034,     0.7891,     0.0269,     0.0003,     0.0019,     0.0005,     0.0000,     0.0000],
        [    0.0001,     0.1533,     0.0102,     0.0045,     0.0003,     0.0100,     0.0054,     0.0012,     0.0059,     0.7305,     0.0004,     0.0148,     0.0001,     0.0645,     0.0000],
        [    0.0002,     0.8086,     0.0552,     0.0021,     0.0065,     0.0010,     0.0037,     0.0019,     0.0060,     0.0278,     0.0013,     0.0030,     0.0001,     0.0016,     0.0815]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0039,      0.4805,      0.2539,     -0.0293,      0.1025,      0.2236,      0.2197,      0.2344,      0.1211,      0.1143,     -0.1738,      0.1641,     -0.0057,     -0.0032,      0.1035],
        [     0.0347,      7.4688,      6.5938,      1.1016,      1.9062,      3.9062,      3.4062,      3.7031,      1.8359,      2.6719,     -0.8438,      3.2500,     -0.8008,      0.3750,      2.5938],
        [     0.0698,     11.4375,      7.3125,     12.6250,      7.6250,      6.1562,      7.8438,      2.5781,      5.4688,      5.6875,      1.7812,      3.9375,     -1.2266,      4.5312,      6.3125],
        [     0.1011,     11.0000,      6.7812,      6.0938,     14.0000,      6.8438,      7.5938,      6.0312,      5.7812,      5.5312,      0.2314,      3.7812,      1.7812,      0.6289,      4.8750],
        [     0.1318,     10.8125,      6.6875,      3.3125,      5.6875,     11.8125,      8.3750,      8.0625,      4.0938,      6.0625,     -5.8125,      6.1875,     -1.0625,      1.1797,      4.9062],
        [     0.0923,      9.3125,      4.4688,      3.4062,      3.7812,      6.9062,     10.3750,      8.4375,      7.4062,      4.2500,     -1.4922,      4.5312,      0.2871,      3.8438,      3.9688],
        [     0.0669,      8.7500,      4.7500,     -0.2041,      4.4375,      6.0312,      7.5312,     11.6875,      8.2500,      5.0312,     -1.6562,      5.4062,      3.3125,      3.7031,      4.1875],
        [     0.0562,      9.0000,      5.5000,      2.4531,      4.2188,      4.2188,      6.4375,      7.5000,     12.1250,      6.4688,     -0.4688,      3.1562,      1.9453,      8.4375,      5.6250],
        [     0.0835,      7.6562,      5.0938,      2.9219,      1.2812,      4.8438,      4.8438,      3.5938,      4.7500,      8.6875,      0.0187,      5.3438,     -2.4062,      3.3750,      7.9688],
        [    -0.0184,      7.5625,      2.1406,      0.3145,      1.1172,      0.6953,      1.7109,      0.4570,      2.9844,      2.9375,     11.0000,      5.2188,      1.8516,      5.1250,      4.2812],
        [     0.0645,      7.3750,      3.2969,      0.6055,      2.7812,      3.8906,      4.2812,      3.9062,      5.3438,      4.6562,      4.0625,     10.0625,      2.8281,      5.3438,      5.9688],
        [    -0.0491,      6.8750,      2.8750,      0.7031,      3.6094,      4.1562,      3.2031,      5.4062,      3.2969,      1.3359,      1.0938,      3.1875,     12.6250,      5.1562,      4.3125],
        [    -0.0266,      8.0625,      4.5625,      3.3906,      1.0234,      3.5000,      6.0000,      4.2812,      9.7500,      6.3438,      1.8281,      3.7031,      2.3906,     12.8750,      8.0000],
        [     0.0408,      7.2500,      4.5312,      3.7188,      0.8672,      4.5000,      3.9062,      2.3750,      3.9844,      8.8125,      1.2578,      4.9062,     -0.2236,      6.3750,     10.8750],
        [     0.0172,      8.1875,      5.5000,      2.2500,      3.3594,      1.4531,      2.8125,      2.1094,      3.2812,      4.8125,      1.7578,      2.5781,     -1.0469,      1.9375,      5.9062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3445],
        [0.3200],
        [0.2858],
        [0.2773],
        [0.3494],
        [0.1882],
        [0.2131],
        [0.2513],
        [0.2360],
        [0.2592],
        [0.2169],
        [0.2026],
        [0.1883],
        [0.1575]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0275,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0254,     0.1543,     0.8203,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1104,     0.6914,     0.1562,     0.0413,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0972,     0.1348,     0.4492,     0.1484,     0.1709,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2031,     0.4570,     0.0183,     0.0243,     0.0028,     0.2949,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0170,     0.2578,     0.0361,     0.0118,     0.0189,     0.0214,     0.6367,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0053,     0.0420,     0.0027,     0.0034,     0.0012,     0.0081,     0.7344,     0.2051,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.0002,     0.0042,     0.0003,     0.0003,     0.0001,     0.0000,     0.0001,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0231,     0.1011,     0.1650,     0.0219,     0.0115,     0.0869,     0.0352,     0.0918,     0.1611,     0.3027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.0044,     0.0164,     0.0005,     0.0019,     0.0013,     0.0004,     0.0115,     0.6680,     0.0525,     0.2422,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0021,     0.0405,     0.1104,     0.0005,     0.1914,     0.0289,     0.4355,     0.0874,     0.0381,     0.0221,     0.0425,     0.0000,     0.0000,     0.0000],
        [    0.0186,     0.0664,     0.0032,     0.0041,     0.0019,     0.0097,     0.2910,     0.0771,     0.0082,     0.0129,     0.0131,     0.4355,     0.0576,     0.0000,     0.0000],
        [    0.0041,     0.0090,     0.0092,     0.0023,     0.0007,     0.0040,     0.0003,     0.0079,     0.1689,     0.0483,     0.0459,     0.0297,     0.0250,     0.6445,     0.0000],
        [    0.0021,     0.0364,     0.0297,     0.0144,     0.0066,     0.0259,     0.0093,     0.1167,     0.1260,     0.0330,     0.0356,     0.0261,     0.0601,     0.2295,     0.2490]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0010,      0.0033,     -0.0513,     -0.0439,     -0.0166,     -0.0449,     -0.0250,     -0.0496,     -0.0496,     -0.0400,     -0.0488,     -0.0138,     -0.0339,     -0.0432,     -0.0366],
        [    -0.0806,      3.4844,      0.5664,     -1.7344,      1.3359,      1.1250,      1.2500,      1.2656,     -0.5508,     -0.8867,     -0.3359,      0.8750,     -0.1484,     -1.7500,      3.2188],
        [     0.0562,      1.8594,      3.5312,      4.2188,      1.1875,      5.1250,      4.4062,      5.8750,      4.2812,      2.4531,      2.9531,      3.0938,      3.3750,      2.1250,      3.2500],
        [    -0.1094,      1.7266,      0.2402,     -1.0938,      0.0135,      0.0165,      1.9688,      1.0312,      1.5078,     -0.6602,      0.9805,      2.6719,     -1.1641,      1.3125,      5.7812],
        [     0.0481,      0.3711,      1.5781,      0.4688,      0.6094,     -0.8945,     -4.5000,     -0.9727,      7.0312,      2.3438,      4.4688,      1.8672,     -1.4844,      4.5312,      2.7188],
        [    -0.1514,      0.6562,     -2.5625,     -2.2812,     -4.4375,      0.2168,      4.8750,      2.5156,     -5.4375,     -3.0312,     -3.8750,      3.1719,     -3.7344,     -7.7812,      3.6719],
        [    -0.0874,      2.6406,      0.6719,     -0.4414,      0.0254,      0.1445,      3.5469,      2.7656,      2.4531,      0.2891,      1.8125,      3.9062,     -2.6719,     -0.0942,      5.8125],
        [    -0.0884,      1.9766,     -0.7617,     -0.5469,     -1.5781,      0.3320,      4.8438,      3.5625,     -0.4668,     -0.1865,     -0.1865,      4.8750,     -0.9844,     -1.7969,      4.0625],
        [     0.0444,     -0.6836,      2.3750,     -0.3906,     -0.4316,     -1.4844,     -5.5312,     -1.0000,      7.8438,      3.6719,      4.9375,      3.2812,     -2.0781,      6.5000,      4.8750],
        [    -0.0128,      1.4688,      1.9531,     -0.0635,     -0.7070,      1.3203,      0.4121,      1.3750,      1.9297,      2.5625,      1.9375,      1.8281,     -1.0391,      1.2109,      3.1875],
        [     0.0496,      2.6250,      3.9375,      0.4941,      1.7656,      1.3750,      0.1797,      3.5781,      7.6562,      5.0938,      6.6250,      3.5781,      1.2422,      6.0938,      6.6250],
        [     0.0620,      1.0781,      4.0312,      5.0312,     -0.4609,      5.5938,      3.6875,      6.4062,      4.8125,      3.9688,      3.4219,      4.0938,      3.0469,      3.7656,      4.9375],
        [    -0.0923,      1.1797,     -1.8516,     -1.6172,     -2.3750,     -0.7422,      2.6562,      1.3281,     -0.9180,     -0.4609,     -0.4473,      3.0625,      1.0391,      0.0576,      3.9688],
        [     0.0018,      0.7852,      0.7969,     -0.5742,     -1.7188,     -0.0221,     -2.5000,      0.6484,      3.7188,      2.4531,      2.4062,      1.9688,      1.8047,      5.0625,      4.9375],
        [     0.0170,      2.8438,      2.6406,      1.9297,      1.1484,      2.5156,      1.4922,      4.0312,      4.0938,      2.7500,      2.8281,      2.5156,      3.3594,      4.6875,      4.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4982],
        [0.2357],
        [0.3622],
        [0.2732],
        [0.1977],
        [0.1780],
        [0.1973],
        [0.1888],
        [0.1936],
        [0.1725],
        [0.1060],
        [0.1160],
        [0.1091],
        [0.0945]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0151,     -0.9844,     -1.2500,     -1.3359,     -0.7109,     -0.8359,     -0.9688,     -1.1328,     -1.1094,     -1.0859,     -0.9102,     -1.3750,     -1.2891,     -1.0312,     -1.1562],
        [    -0.4961,    -35.5000,    -43.5000,    -47.0000,    -23.8750,    -30.1250,    -34.0000,    -40.5000,    -40.2500,    -38.7500,    -33.7500,    -49.7500,    -46.5000,    -37.7500,    -42.0000],
        [    -0.1943,    -13.7500,    -15.9375,    -17.7500,     -9.5625,    -12.1875,    -13.3125,    -15.6875,    -15.3125,    -15.4375,    -14.3125,    -19.6250,    -17.8750,    -15.5000,    -16.6250],
        [    -0.1670,    -14.2500,    -17.2500,    -18.1250,     -9.1875,    -13.3125,    -14.3125,    -16.8750,    -15.9375,    -17.2500,    -14.8125,    -20.3750,    -18.0000,    -14.5625,    -16.7500],
        [    -0.2832,    -18.8750,    -23.5000,    -23.7500,    -13.3750,    -16.3750,    -17.6250,    -19.8750,    -20.2500,    -21.1250,    -17.1250,    -25.0000,    -23.1250,    -19.6250,    -22.2500],
        [    -0.1611,    -12.6250,    -16.0000,    -18.5000,     -7.7500,    -12.3125,    -13.1250,    -16.7500,    -15.9375,    -16.6250,    -13.6875,    -19.3750,    -18.8750,    -14.5000,    -16.5000],
        [    -0.4160,    -29.2500,    -34.2500,    -36.5000,    -19.8750,    -23.1250,    -27.2500,    -32.7500,    -31.6250,    -31.5000,    -24.8750,    -37.5000,    -36.0000,    -28.3750,    -31.2500],
        [    -0.4004,    -29.6250,    -34.2500,    -38.0000,    -19.5000,    -25.1250,    -28.5000,    -34.7500,    -33.2500,    -32.0000,    -26.6250,    -39.2500,    -37.7500,    -29.7500,    -32.0000],
        [    -0.6094,    -39.5000,    -49.2500,    -52.0000,    -27.8750,    -34.2500,    -39.0000,    -45.0000,    -44.2500,    -42.7500,    -35.2500,    -52.7500,    -50.2500,    -40.2500,    -44.7500],
        [    -0.3750,    -28.7500,    -31.5000,    -35.5000,    -18.7500,    -25.1250,    -27.6250,    -33.0000,    -31.3750,    -30.2500,    -25.6250,    -37.2500,    -36.2500,    -28.0000,    -30.2500],
        [    -0.4492,    -31.0000,    -38.0000,    -42.0000,    -20.8750,    -27.2500,    -31.0000,    -37.2500,    -35.2500,    -34.7500,    -29.0000,    -43.7500,    -41.5000,    -32.2500,    -36.0000],
        [    -0.5039,    -36.5000,    -43.0000,    -46.7500,    -25.1250,    -31.1250,    -35.2500,    -43.2500,    -41.2500,    -39.0000,    -32.7500,    -48.0000,    -46.5000,    -36.7500,    -39.0000],
        [    -0.5078,    -34.7500,    -41.7500,    -44.7500,    -24.5000,    -30.5000,    -34.2500,    -40.5000,    -38.7500,    -37.5000,    -30.7500,    -45.7500,    -44.0000,    -35.2500,    -37.7500],
        [    -0.5469,    -36.5000,    -46.7500,    -49.7500,    -25.8750,    -31.8750,    -36.5000,    -43.2500,    -42.0000,    -41.0000,    -34.0000,    -51.2500,    -48.2500,    -38.2500,    -42.7500],
        [    -0.1396,    -12.8125,    -16.1250,    -18.0000,     -8.2500,    -11.3125,    -13.0625,    -17.2500,    -15.2500,    -15.8750,    -12.8750,    -19.5000,    -18.8750,    -13.5625,    -15.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7213],
        [0.5993],
        [0.5100],
        [0.6320],
        [0.5074],
        [0.6684],
        [0.6588],
        [0.6672],
        [0.5992],
        [0.6646],
        [0.6322],
        [0.6671],
        [0.6675],
        [0.5547]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0084,     -1.2500,     -1.3750,     -1.8359,     -1.0625,     -1.6250,     -1.4375,     -1.7578,     -1.1562,     -1.7891,     -0.9453,     -1.4141,     -1.7188,     -1.5469,     -1.4766],
        [    -0.3301,    -46.2500,    -51.0000,    -68.5000,    -39.5000,    -61.2500,    -54.2500,    -66.0000,    -43.5000,    -67.5000,    -35.5000,    -52.5000,    -65.0000,    -59.0000,    -56.5000],
        [    -0.2637,    -38.5000,    -40.5000,    -54.7500,    -29.1250,    -48.7500,    -42.7500,    -53.0000,    -33.0000,    -54.2500,    -28.0000,    -41.7500,    -53.2500,    -47.0000,    -45.0000],
        [    -0.3418,    -52.5000,    -57.2500,    -76.0000,    -43.5000,    -67.5000,    -59.5000,    -73.0000,    -47.0000,    -74.0000,    -39.0000,    -59.0000,    -71.5000,    -63.7500,    -61.7500],
        [    -0.2334,    -39.2500,    -42.0000,    -56.2500,    -31.6250,    -51.0000,    -44.5000,    -55.0000,    -35.5000,    -54.5000,    -30.2500,    -42.5000,    -54.0000,    -47.5000,    -45.2500],
        [    -0.4512,    -65.0000,    -71.0000,    -95.0000,    -54.5000,    -86.5000,    -74.5000,    -91.5000,    -60.2500,    -93.5000,    -49.7500,    -72.5000,    -89.5000,    -82.5000,    -78.5000],
        [    -0.4238,    -60.0000,    -64.0000,    -86.0000,    -48.2500,    -75.0000,    -68.0000,    -81.5000,    -52.5000,    -84.0000,    -43.0000,    -66.0000,    -80.0000,    -72.0000,    -69.0000],
        [    -0.4766,    -70.0000,    -76.5000,   -102.5000,    -59.2500,    -91.5000,    -80.5000,    -98.0000,    -64.5000,    -99.5000,    -52.5000,    -78.5000,    -96.0000,    -86.5000,    -83.5000],
        [    -0.4082,    -59.0000,    -65.5000,    -88.0000,    -52.7500,    -79.5000,    -68.0000,    -83.5000,    -57.5000,    -87.0000,    -47.0000,    -66.5000,    -81.0000,    -76.5000,    -71.5000],
        [    -0.3125,    -49.5000,    -54.5000,    -72.5000,    -42.7500,    -65.5000,    -56.5000,    -70.0000,    -46.0000,    -70.5000,    -38.2500,    -55.2500,    -68.5000,    -61.0000,    -60.0000],
        [    -0.2695,    -43.0000,    -47.2500,    -63.0000,    -36.7500,    -55.7500,    -49.2500,    -60.0000,    -39.7500,    -59.7500,    -32.7500,    -47.7500,    -58.5000,    -51.7500,    -50.2500],
        [    -0.2500,    -37.7500,    -40.2500,    -54.0000,    -29.3750,    -47.5000,    -42.0000,    -52.5000,    -32.5000,    -52.7500,    -27.2500,    -41.5000,    -52.2500,    -45.5000,    -44.2500],
        [    -0.5781,    -83.0000,    -91.5000,   -121.5000,    -71.5000,   -108.0000,    -95.0000,   -115.0000,    -77.0000,   -118.0000,    -62.5000,    -93.0000,   -112.5000,   -103.0000,    -98.5000],
        [    -0.4453,    -66.0000,    -72.0000,    -97.0000,    -56.2500,    -86.5000,    -75.0000,    -92.5000,    -61.5000,    -95.0000,    -50.5000,    -73.5000,    -90.5000,    -82.5000,    -79.0000],
        [    -0.3574,    -51.5000,    -57.7500,    -76.0000,    -45.5000,    -65.5000,    -59.5000,    -71.5000,    -48.0000,    -74.0000,    -39.0000,    -59.2500,    -69.5000,    -63.2500,    -60.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8593],
        [0.7496],
        [0.7949],
        [0.6650],
        [0.7767],
        [0.8332],
        [0.6827],
        [0.8633],
        [0.8073],
        [0.8148],
        [0.7960],
        [0.8387],
        [0.8341],
        [0.7435]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0811,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0186,     0.9648,     0.0156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0039,     0.0098,     0.0000,     0.2891,     0.6875,     0.0081,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0007,     0.0062,     0.0001,     0.9922,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0010,     0.9961,     0.0000,     0.0000,     0.0000,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0017,     0.0178,     0.9805,     0.0000,     0.0000,     0.0000,     0.0011,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0034,     0.1592,     0.8242,     0.0000,     0.0000,     0.0000,     0.0126,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0006,     0.0132,     0.0004,     0.9844,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0025,     0.0006,     0.9961,     0.0000,     0.0000,     0.0000,     0.0020,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0024,     0.9961,     0.0000,     0.0000,     0.0000,     0.0018,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0008,     0.0043,     0.9961,     0.0000,     0.0000,     0.0000,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0026,      0.1797,      0.2520,      0.2930,      0.4043,      0.0938,     -0.1562,     -0.0046,      0.2676,      0.0967,      0.0308,      0.1582,     -0.1611,      0.1797,      0.0388],
        [     0.0947,      9.2500,     11.5625,      8.3750,     17.8750,      9.5000,     -0.0347,      3.6719,     11.1875,      3.4531,     -0.1641,      7.0000,     -4.1562,      5.1875,     -1.8359],
        [     0.1147,     11.0000,     13.4375,      9.6250,     18.0000,      8.5625,     -2.2188,      3.0469,     10.8125,      3.7500,     -0.5469,      8.8125,     -6.9688,      4.7500,     -2.3125],
        [     0.1182,      9.8125,     13.7500,      9.6250,     19.3750,      8.1875,     -3.9844,      1.6719,     11.5000,      3.9219,      0.0483,      7.9062,     -8.2500,      5.5625,     -2.5781],
        [     0.1328,      7.6875,     12.1875,     12.6250,     22.1250,      6.6562,     -6.0625,     -0.6914,     14.5000,      3.1562,     -0.4023,      5.5938,     -9.6875,      7.9688,     -1.3281],
        [     0.1592,     11.8750,     16.3750,     14.6250,     25.2500,      6.4375,     -6.9375,      0.5742,     15.8750,      3.6875,     -0.5469,      9.0625,    -12.4375,      8.5000,     -2.7500],
        [     0.0386,      5.2500,      6.1562,     -0.1748,      9.5625,     10.4375,      5.9688,      5.1250,      4.8750,      1.3438,     -0.9336,      2.9375,     -0.2471,     -0.1504,     -3.8594],
        [     0.0903,      7.5000,      9.6875,      5.4375,     14.7500,      6.3438,     -1.1016,      1.8359,      7.9375,      1.4375,     -1.5000,      4.9375,     -7.7188,      1.8906,     -5.1250],
        [     0.1299,      6.8125,     11.1875,     13.1875,     20.1250,      1.6953,     -9.5625,     -3.0000,     13.8125,      2.8281,     -0.3418,      4.4688,    -12.2500,      8.0625,     -1.3828],
        [     0.1299,      8.0625,     11.3750,     13.7500,     17.7500,     -0.6367,    -11.0000,     -3.6406,     10.9375,      3.0938,     -0.6992,      6.5938,    -13.7500,      5.8750,     -1.2031],
        [     0.1011,      3.4688,      6.6875,     10.5625,     12.1875,     -5.5625,    -11.8750,     -7.0312,      8.0000,      0.2275,     -1.1328,      2.0469,    -14.3750,      4.5625,     -2.0625],
        [     0.1235,     11.1250,     14.1875,     10.7500,     18.5000,      7.0938,     -4.9375,      1.1719,     10.6875,      4.4375,      0.4258,      9.4375,     -8.6875,      5.0000,     -1.3828],
        [     0.0986,      5.6875,      8.3750,      7.0000,     14.3750,      1.3906,     -5.8125,     -2.2188,      8.1875,      0.1387,     -2.2188,      3.0312,    -11.6250,      2.5000,     -5.3750],
        [     0.1270,      6.8125,     11.1875,     13.9375,     20.0000,      1.5078,     -9.5625,     -2.8438,     13.6250,      3.0625,      0.0962,      4.7500,    -11.8125,      8.1250,     -1.1172],
        [     0.1367,      8.7500,     13.5625,     15.1875,     20.6250,      0.5430,    -11.2500,     -3.5000,     12.7500,      3.9062,     -0.1875,      7.1250,    -14.3125,      6.9375,     -1.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.2776],
        [    0.0004],
        [    0.0001],
        [    0.0000],
        [    0.0001],
        [    0.0003],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4551,     0.5469,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3047,     0.3652,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1826,     0.2188,     0.1982,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1104,     0.1318,     0.1201,     0.2412,     0.3965,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0864,     0.1035,     0.0942,     0.1895,     0.3105,     0.2148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0513,     0.0613,     0.0557,     0.1118,     0.1836,     0.1270,     0.4102,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0383,     0.0459,     0.0417,     0.0835,     0.1377,     0.0947,     0.3066,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0352,     0.0420,     0.0381,     0.0767,     0.1260,     0.0869,     0.2832,     0.2314,     0.0796,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0306,     0.0366,     0.0334,     0.0669,     0.1104,     0.0757,     0.2461,     0.2021,     0.0698,     0.1279,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0271,     0.0325,     0.0295,     0.0593,     0.0977,     0.0669,     0.2178,     0.1787,     0.0615,     0.1133,     0.1162,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0225,     0.0269,     0.0244,     0.0488,     0.0801,     0.0554,     0.1787,     0.1465,     0.0508,     0.0928,     0.0952,     0.1777,     0.0000],
        [    0.0000,     0.0000,     0.0203,     0.0243,     0.0221,     0.0444,     0.0728,     0.0503,     0.1631,     0.1338,     0.0461,     0.0845,     0.0869,     0.1621,     0.0908]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.1748,      0.3301,      0.3301,      0.3301,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320,      0.3320],
        [    -0.0239,     24.1250,     50.5000,     50.5000,     50.5000,     50.7500,     51.0000,     50.7500,     51.2500,     51.2500,     50.7500,     51.0000,     51.0000,     51.2500,     51.0000],
        [    -0.1050,     43.5000,    100.5000,    101.0000,    101.0000,    101.5000,    102.0000,    101.5000,    103.0000,    102.5000,    101.5000,    102.0000,    102.0000,    103.0000,    102.0000],
        [    -0.1050,     43.5000,    100.5000,    101.0000,    101.0000,    101.5000,    102.0000,    101.5000,    103.0000,    102.5000,    101.5000,    102.0000,    102.0000,    103.0000,    102.0000],
        [    -0.1045,     43.5000,    100.5000,    101.0000,    101.0000,    101.5000,    102.0000,    101.5000,    103.0000,    102.5000,    101.5000,    102.0000,    102.0000,    103.0000,    102.0000],
        [    -0.1055,     43.2500,    100.5000,    100.5000,    100.5000,    101.0000,    101.5000,    101.5000,    102.5000,    102.0000,    101.0000,    102.0000,    102.0000,    102.5000,    102.0000],
        [    -0.1055,     43.2500,    100.0000,    100.0000,    100.0000,    101.0000,    101.0000,    101.0000,    102.0000,    102.0000,    101.0000,    101.5000,    101.5000,    102.0000,    101.5000],
        [    -0.1050,     43.2500,    100.5000,    100.5000,    100.5000,    101.0000,    101.5000,    101.0000,    102.5000,    102.0000,    101.0000,    101.5000,    101.5000,    102.5000,    102.0000],
        [    -0.1064,     42.7500,     99.5000,     99.5000,     99.5000,    100.0000,    100.5000,    100.5000,    101.5000,    101.5000,    100.0000,    101.0000,    101.0000,    101.5000,    101.0000],
        [    -0.1060,     42.7500,     99.5000,     99.5000,     99.5000,    100.5000,    101.0000,    100.5000,    101.5000,    101.5000,    100.5000,    101.0000,    101.0000,    101.5000,    101.0000],
        [    -0.1050,     43.5000,    100.5000,    100.5000,    100.5000,    101.0000,    101.5000,    101.5000,    102.5000,    102.5000,    101.0000,    102.0000,    102.0000,    102.5000,    102.0000],
        [    -0.1060,     43.0000,     99.5000,    100.0000,    100.0000,    100.5000,    101.0000,    100.5000,    102.0000,    101.5000,    100.5000,    101.0000,    101.0000,    102.0000,    101.0000],
        [    -0.1055,     43.2500,    100.0000,    100.0000,    100.0000,    101.0000,    101.5000,    101.0000,    102.0000,    102.0000,    101.0000,    101.5000,    101.5000,    102.0000,    101.5000],
        [    -0.1060,     42.7500,     99.5000,     99.5000,     99.5000,    100.0000,    100.5000,    100.0000,    101.5000,    101.0000,    100.0000,    101.0000,    101.0000,    101.5000,    101.0000],
        [    -0.1055,     43.2500,    100.0000,    100.0000,    100.0000,    101.0000,    101.0000,    101.0000,    102.0000,    102.0000,    101.0000,    101.5000,    101.5000,    102.0000,    101.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3327],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4961,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3125,     0.3164,     0.3711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2539,     0.2578,     0.3027,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2227,     0.2266,     0.2656,     0.1611,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1914,     0.1943,     0.2275,     0.1377,     0.1069,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1807,     0.1836,     0.2139,     0.1309,     0.1016,     0.1348,     0.0549,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1699,     0.1729,     0.2021,     0.1230,     0.0957,     0.1270,     0.0520,     0.0569,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1494,     0.1514,     0.1777,     0.1074,     0.0835,     0.1113,     0.0449,     0.0493,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1406,     0.1426,     0.1670,     0.1021,     0.0791,     0.1055,     0.0430,     0.0471,     0.1182,     0.0540,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1309,     0.1328,     0.1553,     0.0947,     0.0732,     0.0981,     0.0396,     0.0435,     0.1099,     0.0498,     0.0718,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1260,     0.1279,     0.1494,     0.0908,     0.0708,     0.0942,     0.0383,     0.0420,     0.1055,     0.0481,     0.0688,     0.0381,     0.0000],
        [    0.0000,     0.0000,     0.1177,     0.1196,     0.1396,     0.0850,     0.0659,     0.0879,     0.0356,     0.0391,     0.0986,     0.0449,     0.0645,     0.0354,     0.0659]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,      0.0786,      0.1133,      0.1128,      0.1128,      0.1123,      0.1113,      0.1118,      0.1104,      0.1108,      0.1123,      0.1113,      0.1113,      0.1104,      0.1113],
        [    -0.0078,      9.4375,     15.1875,     15.2500,     15.3125,     15.0625,     14.9375,     15.0625,     14.6250,     14.6875,     15.1250,     14.7500,     14.9375,     14.6250,     14.9375],
        [    -0.0454,     15.7500,     28.3750,     28.3750,     28.5000,     28.0000,     27.7500,     28.1250,     27.2500,     27.2500,     28.2500,     27.3750,     27.7500,     27.1250,     27.7500],
        [    -0.0457,     15.7500,     28.3750,     28.3750,     28.6250,     28.1250,     27.8750,     28.1250,     27.2500,     27.2500,     28.2500,     27.3750,     27.7500,     27.2500,     27.8750],
        [    -0.0459,     15.8125,     28.3750,     28.5000,     28.6250,     28.1250,     27.8750,     28.1250,     27.2500,     27.3750,     28.2500,     27.5000,     27.8750,     27.2500,     27.8750],
        [    -0.0452,     15.8125,     28.3750,     28.3750,     28.6250,     28.1250,     27.8750,     28.1250,     27.2500,     27.2500,     28.2500,     27.3750,     27.7500,     27.2500,     27.7500],
        [    -0.0449,     15.7500,     28.3750,     28.3750,     28.5000,     28.0000,     27.7500,     28.0000,     27.1250,     27.2500,     28.1250,     27.3750,     27.7500,     27.1250,     27.7500],
        [    -0.0454,     15.8125,     28.3750,     28.3750,     28.6250,     28.1250,     27.8750,     28.1250,     27.2500,     27.2500,     28.2500,     27.5000,     27.7500,     27.2500,     27.8750],
        [    -0.0444,     15.7500,     28.2500,     28.2500,     28.5000,     28.0000,     27.7500,     28.0000,     27.1250,     27.1250,     28.1250,     27.2500,     27.6250,     27.1250,     27.7500],
        [    -0.0444,     15.7500,     28.2500,     28.2500,     28.3750,     27.8750,     27.6250,     28.0000,     27.1250,     27.1250,     28.1250,     27.2500,     27.6250,     27.1250,     27.6250],
        [    -0.0457,     15.8125,     28.3750,     28.5000,     28.6250,     28.1250,     27.8750,     28.1250,     27.2500,     27.3750,     28.2500,     27.5000,     27.8750,     27.2500,     27.8750],
        [    -0.0444,     15.7500,     28.2500,     28.2500,     28.5000,     28.0000,     27.7500,     28.0000,     27.1250,     27.1250,     28.1250,     27.2500,     27.6250,     27.1250,     27.7500],
        [    -0.0452,     15.7500,     28.3750,     28.3750,     28.5000,     28.0000,     27.7500,     28.0000,     27.1250,     27.2500,     28.1250,     27.3750,     27.7500,     27.1250,     27.7500],
        [    -0.0444,     15.7500,     28.2500,     28.2500,     28.5000,     28.0000,     27.7500,     28.0000,     27.1250,     27.1250,     28.1250,     27.2500,     27.6250,     27.1250,     27.7500],
        [    -0.0452,     15.7500,     28.3750,     28.3750,     28.5000,     28.0000,     27.7500,     28.1250,     27.1250,     27.2500,     28.2500,     27.3750,     27.7500,     27.1250,     27.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4844,     0.5156,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3203,     0.3398,     0.3398,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2383,     0.2539,     0.2539,     0.2559,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1895,     0.2021,     0.2021,     0.2041,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1582,     0.1680,     0.1680,     0.1699,     0.1689,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1348,     0.1436,     0.1436,     0.1455,     0.1445,     0.1436,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1177,     0.1250,     0.1250,     0.1270,     0.1260,     0.1260,     0.1245,     0.1279,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1045,     0.1113,     0.1113,     0.1128,     0.1118,     0.1113,     0.1108,     0.1143,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0942,     0.1001,     0.1001,     0.1016,     0.1006,     0.1001,     0.0996,     0.1025,     0.1001,     0.1006,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0854,     0.0908,     0.0908,     0.0918,     0.0913,     0.0908,     0.0903,     0.0928,     0.0908,     0.0913,     0.0928,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0781,     0.0835,     0.0835,     0.0845,     0.0835,     0.0835,     0.0830,     0.0854,     0.0835,     0.0835,     0.0854,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0723,     0.0771,     0.0771,     0.0776,     0.0771,     0.0771,     0.0767,     0.0786,     0.0771,     0.0771,     0.0786,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0669,     0.0713,     0.0713,     0.0723,     0.0718,     0.0713,     0.0708,     0.0732,     0.0713,     0.0718,     0.0732,     0.0718,     0.0708,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859,      0.0859],
        [    -0.0491,     27.2500,     27.2500,     27.2500,     27.2500,     27.2500,     27.2500,     27.2500,     27.3750,     27.2500,     27.2500,     27.3750,     27.2500,     27.2500,     27.2500],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750],
        [    -0.0491,     27.2500,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750,     27.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5078,     0.4941,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3379,     0.3301,     0.3301,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2539,     0.2480,     0.2480,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2031,     0.1982,     0.1982,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1689,     0.1650,     0.1650,     0.1660,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1455,     0.1416,     0.1416,     0.1426,     0.1436,     0.1436,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1270,     0.1235,     0.1240,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1128,     0.1099,     0.1104,     0.1108,     0.1113,     0.1113,     0.1108,     0.1113,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1016,     0.0991,     0.0991,     0.0996,     0.1001,     0.1001,     0.0996,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0923,     0.0898,     0.0903,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0845,     0.0825,     0.0825,     0.0830,     0.0835,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0781,     0.0762,     0.0762,     0.0767,     0.0771,     0.0771,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0000],
        [    0.0000,     0.0728,     0.0708,     0.0708,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0481,      0.0481,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483,      0.0483],
        [    -0.0166,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750,     16.8750],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500],
        [    -0.0166,     16.8750,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500,     16.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4961,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3301,     0.3359,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2520,     0.2520,     0.2471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.2021,     0.2012,     0.1982,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1689,     0.1680,     0.1650,     0.1660,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1445,     0.1445,     0.1416,     0.1426,     0.1426,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1270,     0.1260,     0.1240,     0.1245,     0.1245,     0.1240,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1128,     0.1123,     0.1104,     0.1108,     0.1108,     0.1104,     0.1108,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1016,     0.1011,     0.0996,     0.0996,     0.0996,     0.0996,     0.0996,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0923,     0.0918,     0.0903,     0.0908,     0.0908,     0.0903,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0845,     0.0845,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0781,     0.0781,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0728,     0.0723,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0525,     0.0525,     0.0525,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522,     0.0522],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0457,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0457,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0457,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0457,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750],
        [    0.0454,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750,    26.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4180,     0.5820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2637,     0.3691,     0.3672,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.2793,     0.2773,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1602,     0.2246,     0.2227,     0.1973,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1348,     0.1875,     0.1865,     0.1650,     0.1631,     0.1621,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1157,     0.1621,     0.1611,     0.1426,     0.1406,     0.1396,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1016,     0.1416,     0.1416,     0.1250,     0.1235,     0.1226,     0.1226,     0.1216,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.1270,     0.1260,     0.1113,     0.1099,     0.1094,     0.1094,     0.1084,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0820,     0.1143,     0.1138,     0.1006,     0.0996,     0.0986,     0.0986,     0.0981,     0.0981,     0.0962,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0747,     0.1040,     0.1035,     0.0918,     0.0908,     0.0898,     0.0898,     0.0894,     0.0894,     0.0879,     0.0894,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0688,     0.0957,     0.0952,     0.0840,     0.0830,     0.0825,     0.0825,     0.0820,     0.0820,     0.0806,     0.0820,     0.0811,     0.0000,     0.0000],
        [    0.0000,     0.0635,     0.0884,     0.0884,     0.0781,     0.0771,     0.0762,     0.0767,     0.0757,     0.0757,     0.0747,     0.0757,     0.0747,     0.0747,     0.0000],
        [    0.0000,     0.0591,     0.0825,     0.0820,     0.0723,     0.0718,     0.0713,     0.0713,     0.0708,     0.0708,     0.0693,     0.0708,     0.0698,     0.0698,     0.0698]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0003,     0.0967,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972,     0.0972],
        [    0.2070,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2080,    82.0000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000,    82.5000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000],
        [    0.2070,    82.0000,    82.5000,    82.5000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000,    82.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,,,,,,,,,,,,,,,
@ 3050 train 4.2329 , allloss: 4.2329, dt: 1173.68ms, fracRes: 0.1634, norm(attn): 23.7500, norm(output): 0.4082, norm(x): 0.5397, norm(y): 0.9781, norm:0.4606, tok/sec: 111675.95, flops:117.24, batch-reuse:1
@ 3051 train 4.1895 , allloss: 4.1895, dt: 1002.47ms, fracRes: 0.1613, norm(attn): 23.8750, norm(output): 0.3906, norm(x): 0.5228, norm(y): 0.9729, norm:0.4006, tok/sec: 130748.71, flops:137.26, batch-reuse:1
@ 3052 train 4.1409 , allloss: 4.1409, dt: 704.91ms, fracRes: 0.1621, norm(attn): 23.8750, norm(output): 0.3965, norm(x): 0.5320, norm(y): 0.9699, norm:0.4243, tok/sec: 185941.83, flops:195.20, batch-reuse:1
@ 3053 train 4.1225 , allloss: 4.1225, dt: 717.26ms, fracRes: 0.1627, norm(attn): 23.8750, norm(output): 0.4102, norm(x): 0.5422, norm(y): 0.9658, norm:0.4210, tok/sec: 182740.57, flops:191.84, batch-reuse:1
@ 3054 train 4.1734 , allloss: 4.1734, dt: 715.49ms, fracRes: 0.1617, norm(attn): 23.8750, norm(output): 0.4082, norm(x): 0.5380, norm(y): 0.9628, norm:0.4180, tok/sec: 183191.91, flops:192.32, batch-reuse:1
@ 3055 train 4.1109 , allloss: 4.1109, dt: 708.85ms, fracRes: 0.1605, norm(attn): 24.0000, norm(output): 0.4004, norm(x): 0.5302, norm(y): 0.9641, norm:0.4167, tok/sec: 184907.97, flops:194.12, batch-reuse:1
@ 3056 train 4.1815 , allloss: 4.1815, dt: 698.96ms, fracRes: 0.1614, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5308, norm(y): 0.9688, norm:0.4060, tok/sec: 187523.66, flops:196.86, batch-reuse:1
@ 3057 train 4.1291 , allloss: 4.1291, dt: 692.06ms, fracRes: 0.1627, norm(attn): 24.0000, norm(output): 0.3984, norm(x): 0.5321, norm(y): 0.9725, norm:0.4142, tok/sec: 189393.85, flops:198.83, batch-reuse:1
@ 3058 train 4.1634 , allloss: 4.1634, dt: 705.04ms, fracRes: 0.1609, norm(attn): 24.0000, norm(output): 0.3984, norm(x): 0.5291, norm(y): 0.9708, norm:0.4067, tok/sec: 185908.01, flops:195.17, batch-reuse:1
@ 3059 train 4.1268 , allloss: 4.1268, dt: 702.72ms, fracRes: 0.1587, norm(attn): 24.0000, norm(output): 0.3945, norm(x): 0.5257, norm(y): 0.9691, norm:0.4260, tok/sec: 186521.35, flops:195.81, batch-reuse:1
@ 3060 train 4.3149 , allloss: 4.3149, dt: 698.50ms, fracRes: 0.1616, norm(attn): 24.0000, norm(output): 0.4023, norm(x): 0.5327, norm(y): 0.9752, norm:0.4040, tok/sec: 187646.62, flops:196.99, batch-reuse:1
@ 3061 train 4.0206 , allloss: 4.0206, dt: 711.22ms, fracRes: 0.1618, norm(attn): 24.0000, norm(output): 0.4121, norm(x): 0.5475, norm(y): 0.9797, norm:0.5840, tok/sec: 184291.40, flops:193.47, batch-reuse:1
@ 3062 train 4.0700 , allloss: 4.0700, dt: 702.02ms, fracRes: 0.1630, norm(attn): 24.0000, norm(output): 0.4043, norm(x): 0.5388, norm(y): 0.9788, norm:0.4667, tok/sec: 186707.58, flops:196.01, batch-reuse:1
@ 3063 train 4.1093 , allloss: 4.1093, dt: 707.59ms, fracRes: 0.1623, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5398, norm(y): 0.9706, norm:0.4575, tok/sec: 185237.56, flops:194.46, batch-reuse:1
@ 3064 train 4.0498 , allloss: 4.0498, dt: 707.18ms, fracRes: 0.1615, norm(attn): 24.0000, norm(output): 0.4062, norm(x): 0.5391, norm(y): 0.9646, norm:0.4143, tok/sec: 185343.91, flops:194.57, batch-reuse:1
@ 3065 train 4.1921 , allloss: 4.1921, dt: 710.57ms, fracRes: 0.1609, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5381, norm(y): 0.9636, norm:0.4467, tok/sec: 184461.27, flops:193.65, batch-reuse:1
@ 3066 train 4.1982 , allloss: 4.1982, dt: 700.12ms, fracRes: 0.1605, norm(attn): 24.0000, norm(output): 0.4043, norm(x): 0.5363, norm(y): 0.9666, norm:0.4113, tok/sec: 187212.93, flops:196.54, batch-reuse:1
@ 3067 train 4.2288 , allloss: 4.2288, dt: 707.99ms, fracRes: 0.1619, norm(attn): 24.0000, norm(output): 0.4082, norm(x): 0.5408, norm(y): 0.9718, norm:0.4020, tok/sec: 185132.70, flops:194.35, batch-reuse:1
@ 3068 train 4.1058 , allloss: 4.1058, dt: 706.62ms, fracRes: 0.1626, norm(attn): 24.0000, norm(output): 0.4082, norm(x): 0.5410, norm(y): 0.9752, norm:0.4129, tok/sec: 185490.69, flops:194.73, batch-reuse:1
@ 3069 train 4.1433 , allloss: 4.1433, dt: 704.85ms, fracRes: 0.1619, norm(attn): 24.0000, norm(output): 0.4043, norm(x): 0.5370, norm(y): 0.9787, norm:0.4837, tok/sec: 185957.06, flops:195.22, batch-reuse:1
@ 3070 train 4.1044 , allloss: 4.1044, dt: 707.09ms, fracRes: 0.1622, norm(attn): 24.0000, norm(output): 0.4082, norm(x): 0.5393, norm(y): 0.9827, norm:0.4003, tok/sec: 185367.41, flops:194.60, batch-reuse:1
@ 3071 train 4.1155 , allloss: 4.1155, dt: 709.59ms, fracRes: 0.1625, norm(attn): 24.0000, norm(output): 0.4121, norm(x): 0.5431, norm(y): 0.9843, norm:0.4052, tok/sec: 184714.69, flops:193.91, batch-reuse:1
@ 3072 train 4.1166 , allloss: 4.1166, dt: 708.57ms, fracRes: 0.1616, norm(attn): 24.0000, norm(output): 0.4102, norm(x): 0.5421, norm(y): 0.9839, norm:0.4583, tok/sec: 184982.08, flops:194.19, batch-reuse:1
@ 3073 train 4.0676 , allloss: 4.0676, dt: 703.70ms, fracRes: 0.1612, norm(attn): 24.0000, norm(output): 0.4004, norm(x): 0.5289, norm(y): 0.9793, norm:0.4257, tok/sec: 186259.91, flops:195.54, batch-reuse:1
@ 3074 train 4.0434 , allloss: 4.0434, dt: 707.65ms, fracRes: 0.1629, norm(attn): 24.0000, norm(output): 0.4102, norm(x): 0.5459, norm(y): 0.9783, norm:0.3850, tok/sec: 185220.96, flops:194.45, batch-reuse:1
@ 3075 train 4.1359 , allloss: 4.1359, dt: 705.54ms, fracRes: 0.1641, norm(attn): 24.0000, norm(output): 0.4141, norm(x): 0.5478, norm(y): 0.9746, norm:0.4587, tok/sec: 185775.07, flops:195.03, batch-reuse:1
@ 3076 train 4.0749 , allloss: 4.0749, dt: 706.39ms, fracRes: 0.1631, norm(attn): 23.8750, norm(output): 0.4043, norm(x): 0.5374, norm(y): 0.9610, norm:0.5496, tok/sec: 185550.85, flops:194.79, batch-reuse:1
@ 3077 train 4.0990 , allloss: 4.0990, dt: 688.78ms, fracRes: 0.1624, norm(attn): 23.8750, norm(output): 0.4004, norm(x): 0.5335, norm(y): 0.9449, norm:0.4433, tok/sec: 190296.53, flops:199.77, batch-reuse:1
@ 3078 train 4.0841 , allloss: 4.0841, dt: 702.88ms, fracRes: 0.1639, norm(attn): 23.7500, norm(output): 0.4023, norm(x): 0.5361, norm(y): 0.9272, norm:0.4094, tok/sec: 186478.96, flops:195.77, batch-reuse:1
@ 3079 train 4.0545 , allloss: 4.0545, dt: 706.25ms, fracRes: 0.1619, norm(attn): 24.0000, norm(output): 0.3965, norm(x): 0.5289, norm(y): 0.9667, norm:0.4100, tok/sec: 185589.25, flops:194.83, batch-reuse:1
@ 3080 train 4.1908 , allloss: 4.1908, dt: 702.41ms, fracRes: 0.1623, norm(attn): 24.2500, norm(output): 0.4004, norm(x): 0.5351, norm(y): 0.9836, norm:0.3819, tok/sec: 186603.33, flops:195.90, batch-reuse:1
@ 3081 train 4.1575 , allloss: 4.1575, dt: 714.54ms, fracRes: 0.1628, norm(attn): 24.2500, norm(output): 0.4062, norm(x): 0.5365, norm(y): 0.9895, norm:0.3947, tok/sec: 183435.37, flops:192.57, batch-reuse:1
@ 3082 train 4.1441 , allloss: 4.1441, dt: 715.06ms, fracRes: 0.1636, norm(attn): 24.5000, norm(output): 0.4082, norm(x): 0.5428, norm(y): 0.9920, norm:0.3714, tok/sec: 183301.73, flops:192.43, batch-reuse:1
@ 3083 train 4.0707 , allloss: 4.0707, dt: 712.59ms, fracRes: 0.1666, norm(attn): 24.1250, norm(output): 0.4082, norm(x): 0.5438, norm(y): 0.9929, norm:0.4060, tok/sec: 183937.10, flops:193.10, batch-reuse:1
@ 3084 train 4.0787 , allloss: 4.0787, dt: 716.45ms, fracRes: 0.1636, norm(attn): 24.5000, norm(output): 0.4043, norm(x): 0.5400, norm(y): 0.9937, norm:0.4724, tok/sec: 182946.97, flops:192.06, batch-reuse:1
@ 3085 train 4.1675 , allloss: 4.1675, dt: 718.17ms, fracRes: 0.1626, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5385, norm(y): 0.9938, norm:0.4376, tok/sec: 182509.31, flops:191.60, batch-reuse:1
@ 3086 train 4.0129 , allloss: 4.0129, dt: 712.06ms, fracRes: 0.1628, norm(attn): 24.6250, norm(output): 0.4121, norm(x): 0.5479, norm(y): 0.9940, norm:0.4327, tok/sec: 184073.15, flops:193.24, batch-reuse:1
@ 3087 train 4.1062 , allloss: 4.1062, dt: 704.29ms, fracRes: 0.1624, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5382, norm(y): 0.9939, norm:0.4491, tok/sec: 186104.04, flops:195.37, batch-reuse:1
@ 3088 train 4.1106 , allloss: 4.1106, dt: 706.14ms, fracRes: 0.1612, norm(attn): 24.6250, norm(output): 0.4043, norm(x): 0.5358, norm(y): 0.9942, norm:0.3835, tok/sec: 185618.39, flops:194.86, batch-reuse:1
@ 3089 train 4.1312 , allloss: 4.1312, dt: 704.84ms, fracRes: 0.1631, norm(attn): 24.5000, norm(output): 0.4102, norm(x): 0.5455, norm(y): 0.9941, norm:0.3884, tok/sec: 185959.63, flops:195.22, batch-reuse:1
@ 3090 train 4.0315 , allloss: 4.0315, dt: 715.92ms, fracRes: 0.1611, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5355, norm(y): 0.9942, norm:0.4523, tok/sec: 183082.22, flops:192.20, batch-reuse:1
@ 3091 train 4.2406 , allloss: 4.2406, dt: 716.45ms, fracRes: 0.1621, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5412, norm(y): 0.9943, norm:0.3700, tok/sec: 182945.87, flops:192.06, batch-reuse:1
@ 3092 train 4.0998 , allloss: 4.0998, dt: 717.01ms, fracRes: 0.1629, norm(attn): 24.6250, norm(output): 0.4082, norm(x): 0.5421, norm(y): 0.9940, norm:0.4538, tok/sec: 182803.76, flops:191.91, batch-reuse:1
@ 3093 train 4.1094 , allloss: 4.1094, dt: 708.27ms, fracRes: 0.1634, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5364, norm(y): 0.9943, norm:0.3824, tok/sec: 185059.85, flops:194.28, batch-reuse:1
@ 3094 train 4.0942 , allloss: 4.0942, dt: 711.48ms, fracRes: 0.1621, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5381, norm(y): 0.9945, norm:0.3931, tok/sec: 184225.01, flops:193.40, batch-reuse:1
@ 3095 train 4.1225 , allloss: 4.1225, dt: 720.86ms, fracRes: 0.1626, norm(attn): 24.7500, norm(output): 0.3965, norm(x): 0.5315, norm(y): 0.9942, norm:0.3889, tok/sec: 181828.34, flops:190.88, batch-reuse:1
@ 3096 train 4.1751 , allloss: 4.1751, dt: 720.37ms, fracRes: 0.1647, norm(attn): 24.7500, norm(output): 0.4102, norm(x): 0.5461, norm(y): 0.9943, norm:0.3959, tok/sec: 181950.57, flops:191.01, batch-reuse:1
@ 3097 train 4.1258 , allloss: 4.1258, dt: 707.46ms, fracRes: 0.1656, norm(attn): 24.6250, norm(output): 0.4121, norm(x): 0.5524, norm(y): 0.9944, norm:0.4223, tok/sec: 185272.46, flops:194.50, batch-reuse:1
@ 3098 train 4.1296 , allloss: 4.1296, dt: 704.91ms, fracRes: 0.1627, norm(attn): 24.7500, norm(output): 0.3984, norm(x): 0.5311, norm(y): 0.9943, norm:0.3805, tok/sec: 185940.33, flops:195.20, batch-reuse:1
@ 3099 train 4.1464 , allloss: 4.1464, dt: 715.35ms, fracRes: 0.1624, norm(attn): 24.7500, norm(output): 0.3965, norm(x): 0.5323, norm(y): 0.9943, norm:0.3892, tok/sec: 183227.02, flops:192.35, batch-reuse:1
@ 3100 train 4.0160 , allloss: 4.0160, dt: 702.66ms, fracRes: 0.1616, norm(attn): 25.0000, norm(output): 0.4004, norm(x): 0.5368, norm(y): 0.9943, norm:0.4092, tok/sec: 186536.03, flops:195.83, batch-reuse:1
@ 3101 train 4.0618 , allloss: 4.0618, dt: 705.21ms, fracRes: 0.1638, norm(attn): 25.0000, norm(output): 0.4180, norm(x): 0.5532, norm(y): 0.9944, norm:0.4299, tok/sec: 185862.63, flops:195.12, batch-reuse:1
@ 3102 train 4.1307 , allloss: 4.1307, dt: 710.13ms, fracRes: 0.1637, norm(attn): 24.8750, norm(output): 0.4102, norm(x): 0.5443, norm(y): 0.9947, norm:0.4131, tok/sec: 184575.22, flops:193.77, batch-reuse:1
@ 3103 train 4.1002 , allloss: 4.1002, dt: 713.50ms, fracRes: 0.1632, norm(attn): 24.7500, norm(output): 0.4004, norm(x): 0.5352, norm(y): 0.9946, norm:0.4491, tok/sec: 183703.36, flops:192.85, batch-reuse:1
@ 3104 train 4.0008 , allloss: 4.0008, dt: 711.35ms, fracRes: 0.1622, norm(attn): 24.7500, norm(output): 0.4004, norm(x): 0.5333, norm(y): 0.9942, norm:0.3675, tok/sec: 184258.85, flops:193.44, batch-reuse:1
@ 3105 train 4.1500 , allloss: 4.1500, dt: 714.84ms, fracRes: 0.1643, norm(attn): 24.7500, norm(output): 0.4102, norm(x): 0.5458, norm(y): 0.9941, norm:0.4308, tok/sec: 183358.22, flops:192.49, batch-reuse:1
@ 3106 train 4.0469 , allloss: 4.0469, dt: 715.14ms, fracRes: 0.1630, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5407, norm(y): 0.9941, norm:0.4046, tok/sec: 183282.30, flops:192.41, batch-reuse:1
@ 3107 train 4.0293 , allloss: 4.0293, dt: 701.10ms, fracRes: 0.1627, norm(attn): 24.8750, norm(output): 0.4062, norm(x): 0.5387, norm(y): 0.9941, norm:0.4151, tok/sec: 186952.73, flops:196.26, batch-reuse:1
@ 3108 train 4.1220 , allloss: 4.1220, dt: 701.55ms, fracRes: 0.1642, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5390, norm(y): 0.9942, norm:0.4786, tok/sec: 186832.01, flops:196.14, batch-reuse:1
@ 3109 train 4.0137 , allloss: 4.0137, dt: 705.07ms, fracRes: 0.1649, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5435, norm(y): 0.9941, norm:0.4013, tok/sec: 185898.95, flops:195.16, batch-reuse:1
@ 3110 train 4.0418 , allloss: 4.0418, dt: 702.78ms, fracRes: 0.1638, norm(attn): 24.7500, norm(output): 0.4082, norm(x): 0.5408, norm(y): 0.9941, norm:0.3966, tok/sec: 186505.91, flops:195.79, batch-reuse:1
@ 3111 train 4.1627 , allloss: 4.1627, dt: 719.86ms, fracRes: 0.1628, norm(attn): 24.7500, norm(output): 0.4121, norm(x): 0.5448, norm(y): 0.9943, norm:0.4467, tok/sec: 182079.35, flops:191.15, batch-reuse:1
@ 3112 train 4.0090 , allloss: 4.0090, dt: 715.27ms, fracRes: 0.1630, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5396, norm(y): 0.9942, norm:0.3972, tok/sec: 183248.94, flops:192.38, batch-reuse:1
@ 3113 train 4.0532 , allloss: 4.0532, dt: 705.70ms, fracRes: 0.1631, norm(attn): 24.7500, norm(output): 0.4023, norm(x): 0.5368, norm(y): 0.9942, norm:0.3794, tok/sec: 185732.52, flops:194.98, batch-reuse:1
@ 3114 train 4.0409 , allloss: 4.0409, dt: 706.83ms, fracRes: 0.1641, norm(attn): 24.7500, norm(output): 0.4160, norm(x): 0.5497, norm(y): 0.9941, norm:0.3878, tok/sec: 185436.25, flops:194.67, batch-reuse:1
@ 3115 train 4.0156 , allloss: 4.0156, dt: 708.63ms, fracRes: 0.1639, norm(attn): 24.7500, norm(output): 0.4160, norm(x): 0.5502, norm(y): 0.9943, norm:0.4340, tok/sec: 184964.90, flops:194.18, batch-reuse:1
@ 3116 train 4.0024 , allloss: 4.0024, dt: 707.73ms, fracRes: 0.1623, norm(attn): 24.7500, norm(output): 0.3926, norm(x): 0.5295, norm(y): 0.9939, norm:0.4268, tok/sec: 185201.74, flops:194.43, batch-reuse:1
@ 3117 train 4.0108 , allloss: 4.0108, dt: 690.72ms, fracRes: 0.1643, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5413, norm(y): 0.9940, norm:0.4010, tok/sec: 189760.60, flops:199.21, batch-reuse:1
@ 3118 train 3.9750 , allloss: 3.9750, dt: 705.44ms, fracRes: 0.1631, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5408, norm(y): 0.9935, norm:0.3998, tok/sec: 185800.82, flops:195.05, batch-reuse:1
@ 3119 train 4.3120 , allloss: 4.3120, dt: 703.83ms, fracRes: 0.1647, norm(attn): 24.6250, norm(output): 0.4238, norm(x): 0.5602, norm(y): 0.9942, norm:0.5577, tok/sec: 186225.84, flops:195.50, batch-reuse:1
@ 3120 train 4.0838 , allloss: 4.0838, dt: 707.81ms, fracRes: 0.1648, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5401, norm(y): 0.9934, norm:0.5136, tok/sec: 185180.03, flops:194.40, batch-reuse:1
@ 3121 train 3.8095 , allloss: 3.8095, dt: 710.57ms, fracRes: 0.1666, norm(attn): 24.5000, norm(output): 0.4102, norm(x): 0.5441, norm(y): 0.9932, norm:0.4737, tok/sec: 184459.41, flops:193.65, batch-reuse:1
@ 3122 train 3.9768 , allloss: 3.9768, dt: 693.27ms, fracRes: 0.1640, norm(attn): 24.7500, norm(output): 0.4023, norm(x): 0.5344, norm(y): 0.9926, norm:0.5637, tok/sec: 189063.82, flops:198.48, batch-reuse:1
@ 3123 train 4.1560 , allloss: 4.1560, dt: 693.85ms, fracRes: 0.1641, norm(attn): 24.7500, norm(output): 0.4121, norm(x): 0.5444, norm(y): 0.9927, norm:0.5603, tok/sec: 188904.85, flops:198.31, batch-reuse:1
@ 3124 train 4.1717 , allloss: 4.1717, dt: 709.88ms, fracRes: 0.1652, norm(attn): 25.0000, norm(output): 0.4141, norm(x): 0.5482, norm(y): 0.9928, norm:0.5566, tok/sec: 184639.32, flops:193.83, batch-reuse:1
@ 3125 train 4.0662 , allloss: 4.0662, dt: 705.79ms, fracRes: 0.1622, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5366, norm(y): 0.9931, norm:0.5484, tok/sec: 185710.25, flops:194.96, batch-reuse:1
@ 3126 train 3.8874 , allloss: 3.8874, dt: 701.37ms, fracRes: 0.1624, norm(attn): 24.7500, norm(output): 0.4082, norm(x): 0.5405, norm(y): 0.9927, norm:0.4615, tok/sec: 186880.98, flops:196.19, batch-reuse:1
@ 3127 train 4.0148 , allloss: 4.0148, dt: 708.93ms, fracRes: 0.1616, norm(attn): 24.7500, norm(output): 0.3965, norm(x): 0.5275, norm(y): 0.9914, norm:0.4187, tok/sec: 184886.52, flops:194.09, batch-reuse:1
@ 3128 train 4.0233 , allloss: 4.0233, dt: 707.08ms, fracRes: 0.1625, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5397, norm(y): 0.9911, norm:0.4541, tok/sec: 185369.91, flops:194.60, batch-reuse:1
@ 3129 train 3.8801 , allloss: 3.8801, dt: 710.56ms, fracRes: 0.1625, norm(attn): 24.7500, norm(output): 0.4023, norm(x): 0.5357, norm(y): 0.9905, norm:0.4695, tok/sec: 184463.68, flops:193.65, batch-reuse:1
@ 3130 train 4.0168 , allloss: 4.0168, dt: 701.15ms, fracRes: 0.1626, norm(attn): 24.8750, norm(output): 0.3965, norm(x): 0.5302, norm(y): 0.9903, norm:0.3873, tok/sec: 186938.24, flops:196.25, batch-reuse:1
@ 3131 train 3.9090 , allloss: 3.9090, dt: 714.57ms, fracRes: 0.1621, norm(attn): 25.0000, norm(output): 0.3965, norm(x): 0.5273, norm(y): 0.9905, norm:0.5463, tok/sec: 183428.33, flops:192.56, batch-reuse:1
@ 3132 train 3.9503 , allloss: 3.9503, dt: 715.21ms, fracRes: 0.1634, norm(attn): 24.7500, norm(output): 0.3945, norm(x): 0.5311, norm(y): 0.9906, norm:0.4250, tok/sec: 183262.51, flops:192.39, batch-reuse:1
@ 3133 train 3.9474 , allloss: 3.9474, dt: 715.18ms, fracRes: 0.1641, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5393, norm(y): 0.9904, norm:0.4068, tok/sec: 183270.75, flops:192.40, batch-reuse:1
@ 3134 train 3.9258 , allloss: 3.9258, dt: 713.52ms, fracRes: 0.1634, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5381, norm(y): 0.9891, norm:0.3762, tok/sec: 183698.45, flops:192.85, batch-reuse:1
@ 3135 train 3.9712 , allloss: 3.9712, dt: 700.48ms, fracRes: 0.1634, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5373, norm(y): 0.9871, norm:0.4644, tok/sec: 187116.52, flops:196.44, batch-reuse:1
@ 3136 train 3.9159 , allloss: 3.9159, dt: 701.59ms, fracRes: 0.1642, norm(attn): 24.7500, norm(output): 0.4180, norm(x): 0.5515, norm(y): 0.9869, norm:0.4361, tok/sec: 186820.71, flops:196.12, batch-reuse:1
@ 3137 train 4.0184 , allloss: 4.0184, dt: 697.80ms, fracRes: 0.1644, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5390, norm(y): 0.9863, norm:0.4074, tok/sec: 187836.01, flops:197.19, batch-reuse:1
@ 3138 train 4.0622 , allloss: 4.0622, dt: 700.05ms, fracRes: 0.1643, norm(attn): 24.6250, norm(output): 0.3945, norm(x): 0.5306, norm(y): 0.9849, norm:0.3992, tok/sec: 187231.86, flops:196.56, batch-reuse:1
@ 3139 train 3.9868 , allloss: 3.9868, dt: 705.11ms, fracRes: 0.1646, norm(attn): 24.6250, norm(output): 0.3926, norm(x): 0.5297, norm(y): 0.9838, norm:0.4015, tok/sec: 185889.78, flops:195.15, batch-reuse:1
@ 3140 train 4.0054 , allloss: 4.0054, dt: 707.58ms, fracRes: 0.1648, norm(attn): 24.5000, norm(output): 0.3984, norm(x): 0.5352, norm(y): 0.9839, norm:0.3912, tok/sec: 185240.49, flops:194.47, batch-reuse:1
@ 3141 train 4.0383 , allloss: 4.0383, dt: 698.26ms, fracRes: 0.1642, norm(attn): 24.6250, norm(output): 0.3965, norm(x): 0.5330, norm(y): 0.9846, norm:0.4011, tok/sec: 187712.29, flops:197.06, batch-reuse:1
@ 3142 train 3.9381 , allloss: 3.9381, dt: 707.47ms, fracRes: 0.1632, norm(attn): 24.6250, norm(output): 0.3965, norm(x): 0.5299, norm(y): 0.9829, norm:0.3875, tok/sec: 185268.27, flops:194.49, batch-reuse:1
@ 3143 train 4.2776 , allloss: 4.2776, dt: 707.92ms, fracRes: 0.1673, norm(attn): 24.6250, norm(output): 0.4102, norm(x): 0.5505, norm(y): 0.9817, norm:0.6763, tok/sec: 185151.97, flops:194.37, batch-reuse:1
@ 3144 train 4.0157 , allloss: 4.0157, dt: 688.77ms, fracRes: 0.1643, norm(attn): 24.6250, norm(output): 0.4004, norm(x): 0.5384, norm(y): 0.9844, norm:0.5306, tok/sec: 190297.84, flops:199.78, batch-reuse:1
@ 3145 train 3.9874 , allloss: 3.9874, dt: 704.41ms, fracRes: 0.1633, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5364, norm(y): 0.9868, norm:0.4217, tok/sec: 186072.61, flops:195.34, batch-reuse:1
@ 3146 train 3.9658 , allloss: 3.9658, dt: 709.41ms, fracRes: 0.1617, norm(attn): 24.7500, norm(output): 0.3906, norm(x): 0.5265, norm(y): 0.9880, norm:0.4798, tok/sec: 184763.24, flops:193.96, batch-reuse:1
@ 3147 train 3.9375 , allloss: 3.9375, dt: 708.91ms, fracRes: 0.1617, norm(attn): 25.1250, norm(output): 0.3984, norm(x): 0.5303, norm(y): 0.9873, norm:0.4301, tok/sec: 184891.43, flops:194.10, batch-reuse:1
@ 3148 train 4.0346 , allloss: 4.0346, dt: 709.46ms, fracRes: 0.1632, norm(attn): 24.7500, norm(output): 0.4082, norm(x): 0.5419, norm(y): 0.9863, norm:0.4567, tok/sec: 184749.58, flops:193.95, batch-reuse:1
@ 3149 train 4.0459 , allloss: 4.0459, dt: 704.32ms, fracRes: 0.1629, norm(attn): 24.7500, norm(output): 0.4004, norm(x): 0.5336, norm(y): 0.9847, norm:0.4079, tok/sec: 186097.68, flops:195.37, batch-reuse:1
@ 3150 train 4.0385 , allloss: 4.0385, dt: 704.09ms, fracRes: 0.1627, norm(attn): 24.7500, norm(output): 0.4004, norm(x): 0.5336, norm(y): 0.9836, norm:0.4107, tok/sec: 186157.86, flops:195.43, batch-reuse:1
@ 3151 train 4.0065 , allloss: 4.0065, dt: 701.91ms, fracRes: 0.1634, norm(attn): 24.7500, norm(output): 0.3984, norm(x): 0.5342, norm(y): 0.9813, norm:0.4114, tok/sec: 186736.50, flops:196.04, batch-reuse:1
@ 3152 train 3.9921 , allloss: 3.9921, dt: 711.45ms, fracRes: 0.1650, norm(attn): 24.6250, norm(output): 0.4082, norm(x): 0.5393, norm(y): 0.9790, norm:0.4102, tok/sec: 184230.94, flops:193.41, batch-reuse:1
@ 3153 train 4.0274 , allloss: 4.0274, dt: 696.75ms, fracRes: 0.1638, norm(attn): 24.5000, norm(output): 0.3965, norm(x): 0.5268, norm(y): 0.9744, norm:0.4166, tok/sec: 188118.11, flops:197.49, batch-reuse:1
@ 3154 train 4.0363 , allloss: 4.0363, dt: 707.23ms, fracRes: 0.1655, norm(attn): 24.5000, norm(output): 0.4023, norm(x): 0.5398, norm(y): 0.9706, norm:0.4265, tok/sec: 185332.67, flops:194.56, batch-reuse:1
@ 3155 train 3.8928 , allloss: 3.8928, dt: 706.62ms, fracRes: 0.1648, norm(attn): 24.2500, norm(output): 0.4043, norm(x): 0.5395, norm(y): 0.9654, norm:0.4591, tok/sec: 185492.00, flops:194.73, batch-reuse:1
@ 3156 train 3.9831 , allloss: 3.9831, dt: 702.74ms, fracRes: 0.1640, norm(attn): 24.1250, norm(output): 0.4043, norm(x): 0.5396, norm(y): 0.9563, norm:0.3816, tok/sec: 186515.97, flops:195.80, batch-reuse:1
@ 3157 train 4.0511 , allloss: 4.0511, dt: 703.88ms, fracRes: 0.1637, norm(attn): 24.5000, norm(output): 0.3984, norm(x): 0.5354, norm(y): 0.9714, norm:0.4150, tok/sec: 186214.86, flops:195.49, batch-reuse:1
@ 3158 train 3.9866 , allloss: 3.9866, dt: 707.81ms, fracRes: 0.1641, norm(attn): 24.6250, norm(output): 0.3945, norm(x): 0.5323, norm(y): 0.9807, norm:0.4526, tok/sec: 185180.22, flops:194.40, batch-reuse:1
@ 3159 train 3.9176 , allloss: 3.9176, dt: 706.97ms, fracRes: 0.1645, norm(attn): 24.7500, norm(output): 0.3984, norm(x): 0.5363, norm(y): 0.9844, norm:0.3446, tok/sec: 185400.61, flops:194.63, batch-reuse:1
@ 3160 train 4.1856 , allloss: 4.1856, dt: 702.70ms, fracRes: 0.1662, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5450, norm(y): 0.9860, norm:0.4712, tok/sec: 186526.60, flops:195.82, batch-reuse:1
@ 3161 train 4.1209 , allloss: 4.1209, dt: 703.18ms, fracRes: 0.1650, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5374, norm(y): 0.9870, norm:0.4303, tok/sec: 186398.59, flops:195.68, batch-reuse:1
@ 3162 train 4.0447 , allloss: 4.0447, dt: 707.50ms, fracRes: 0.1669, norm(attn): 24.6250, norm(output): 0.4082, norm(x): 0.5495, norm(y): 0.9878, norm:0.4044, tok/sec: 185259.60, flops:194.49, batch-reuse:1
@ 3163 train 4.1899 , allloss: 4.1899, dt: 693.03ms, fracRes: 0.1661, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5419, norm(y): 0.9881, norm:0.4467, tok/sec: 189128.74, flops:198.55, batch-reuse:1
@ 3164 train 4.1034 , allloss: 4.1034, dt: 705.42ms, fracRes: 0.1654, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5425, norm(y): 0.9882, norm:0.4384, tok/sec: 185807.97, flops:195.06, batch-reuse:1
@ 3165 train 4.0872 , allloss: 4.0872, dt: 704.73ms, fracRes: 0.1672, norm(attn): 24.5000, norm(output): 0.4121, norm(x): 0.5482, norm(y): 0.9885, norm:0.5348, tok/sec: 185988.57, flops:195.25, batch-reuse:1
@ 3166 train 4.2337 , allloss: 4.2337, dt: 701.96ms, fracRes: 0.1670, norm(attn): 24.7500, norm(output): 0.4102, norm(x): 0.5523, norm(y): 0.9876, norm:0.4360, tok/sec: 186723.31, flops:196.02, batch-reuse:1
@ 3167 train 4.0465 , allloss: 4.0465, dt: 715.48ms, fracRes: 0.1658, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5437, norm(y): 0.9852, norm:0.4537, tok/sec: 183194.96, flops:192.32, batch-reuse:1
@ 3168 train 4.1198 , allloss: 4.1198, dt: 705.44ms, fracRes: 0.1663, norm(attn): 24.7500, norm(output): 0.3965, norm(x): 0.5363, norm(y): 0.9847, norm:0.4101, tok/sec: 185801.13, flops:195.05, batch-reuse:1
@ 3169 train 4.1495 , allloss: 4.1495, dt: 706.39ms, fracRes: 0.1669, norm(attn): 24.5000, norm(output): 0.4004, norm(x): 0.5409, norm(y): 0.9858, norm:0.4186, tok/sec: 185550.79, flops:194.79, batch-reuse:1
@ 3170 train 4.1181 , allloss: 4.1181, dt: 695.84ms, fracRes: 0.1667, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5406, norm(y): 0.9863, norm:0.4138, tok/sec: 188364.27, flops:197.75, batch-reuse:1
@ 3171 train 4.1395 , allloss: 4.1395, dt: 706.28ms, fracRes: 0.1649, norm(attn): 25.1250, norm(output): 0.4023, norm(x): 0.5387, norm(y): 0.9867, norm:0.3915, tok/sec: 185581.92, flops:194.82, batch-reuse:1
@ 3172 train 4.1133 , allloss: 4.1133, dt: 692.81ms, fracRes: 0.1662, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5442, norm(y): 0.9856, norm:0.4241, tok/sec: 189189.66, flops:198.61, batch-reuse:1
@ 3173 train 4.1460 , allloss: 4.1460, dt: 709.41ms, fracRes: 0.1662, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5424, norm(y): 0.9827, norm:0.4123, tok/sec: 184762.99, flops:193.96, batch-reuse:1
@ 3174 train 4.1791 , allloss: 4.1791, dt: 711.66ms, fracRes: 0.1664, norm(attn): 24.6250, norm(output): 0.4082, norm(x): 0.5453, norm(y): 0.9748, norm:0.3959, tok/sec: 184178.85, flops:193.35, batch-reuse:1
@ 3175 train 4.1565 , allloss: 4.1565, dt: 699.95ms, fracRes: 0.1664, norm(attn): 24.5000, norm(output): 0.4102, norm(x): 0.5457, norm(y): 0.9634, norm:0.4180, tok/sec: 187258.90, flops:196.58, batch-reuse:1
@ 3176 train 4.1179 , allloss: 4.1179, dt: 707.15ms, fracRes: 0.1664, norm(attn): 24.2500, norm(output): 0.4023, norm(x): 0.5404, norm(y): 0.9519, norm:0.3882, tok/sec: 185352.73, flops:194.58, batch-reuse:1
@ 3177 train 4.0583 , allloss: 4.0583, dt: 710.05ms, fracRes: 0.1665, norm(attn): 24.1250, norm(output): 0.4023, norm(x): 0.5384, norm(y): 0.9394, norm:0.3768, tok/sec: 184596.60, flops:193.79, batch-reuse:1
@ 3178 train 4.2392 , allloss: 4.2392, dt: 703.77ms, fracRes: 0.1673, norm(attn): 24.1250, norm(output): 0.4043, norm(x): 0.5443, norm(y): 0.9387, norm:0.4086, tok/sec: 186242.87, flops:195.52, batch-reuse:1
@ 3179 train 4.0756 , allloss: 4.0756, dt: 710.94ms, fracRes: 0.1664, norm(attn): 24.1250, norm(output): 0.4023, norm(x): 0.5383, norm(y): 0.9427, norm:0.3929, tok/sec: 184364.52, flops:193.55, batch-reuse:1
@ 3180 train 4.1447 , allloss: 4.1447, dt: 690.88ms, fracRes: 0.1664, norm(attn): 24.2500, norm(output): 0.4082, norm(x): 0.5425, norm(y): 0.9518, norm:0.4241, tok/sec: 189718.03, flops:199.17, batch-reuse:1
@ 3181 train 4.1546 , allloss: 4.1546, dt: 707.25ms, fracRes: 0.1649, norm(attn): 24.5000, norm(output): 0.3926, norm(x): 0.5307, norm(y): 0.9562, norm:0.4385, tok/sec: 185327.29, flops:194.56, batch-reuse:1
@ 3182 train 4.0381 , allloss: 4.0381, dt: 697.87ms, fracRes: 0.1642, norm(attn): 24.3750, norm(output): 0.4199, norm(x): 0.5546, norm(y): 0.9621, norm:0.5126, tok/sec: 187815.99, flops:197.17, batch-reuse:1
@ 3183 train 4.1898 , allloss: 4.1898, dt: 699.58ms, fracRes: 0.1666, norm(attn): 24.5000, norm(output): 0.4121, norm(x): 0.5498, norm(y): 0.9662, norm:0.4575, tok/sec: 187359.42, flops:196.69, batch-reuse:1
@ 3184 train 4.2000 , allloss: 4.2000, dt: 696.54ms, fracRes: 0.1651, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5409, norm(y): 0.9650, norm:0.3961, tok/sec: 188176.65, flops:197.55, batch-reuse:1
@ 3185 train 4.2620 , allloss: 4.2620, dt: 697.63ms, fracRes: 0.1649, norm(attn): 24.5000, norm(output): 0.4062, norm(x): 0.5409, norm(y): 0.9665, norm:0.4820, tok/sec: 187880.88, flops:197.24, batch-reuse:1
@ 3186 train 4.1904 , allloss: 4.1904, dt: 713.86ms, fracRes: 0.1647, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5420, norm(y): 0.9750, norm:0.3873, tok/sec: 183610.65, flops:192.75, batch-reuse:1
@ 3187 train 4.1204 , allloss: 4.1204, dt: 698.79ms, fracRes: 0.1650, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5393, norm(y): 0.9824, norm:0.4588, tok/sec: 187568.83, flops:196.91, batch-reuse:1
@ 3188 train 4.0586 , allloss: 4.0586, dt: 707.60ms, fracRes: 0.1640, norm(attn): 25.2500, norm(output): 0.3984, norm(x): 0.5302, norm(y): 0.9838, norm:0.3681, tok/sec: 185235.31, flops:194.46, batch-reuse:1
@ 3189 train 4.1005 , allloss: 4.1005, dt: 709.69ms, fracRes: 0.1656, norm(attn): 25.2500, norm(output): 0.3984, norm(x): 0.5341, norm(y): 0.9856, norm:0.4023, tok/sec: 184688.44, flops:193.89, batch-reuse:1
@ 3190 train 4.1783 , allloss: 4.1783, dt: 700.01ms, fracRes: 0.1655, norm(attn): 25.2500, norm(output): 0.4043, norm(x): 0.5401, norm(y): 0.9877, norm:0.3990, tok/sec: 187243.72, flops:196.57, batch-reuse:1
@ 3191 train 4.0943 , allloss: 4.0943, dt: 692.23ms, fracRes: 0.1668, norm(attn): 25.0000, norm(output): 0.4082, norm(x): 0.5443, norm(y): 0.9877, norm:0.3980, tok/sec: 189347.08, flops:198.78, batch-reuse:1
@ 3192 train 4.1276 , allloss: 4.1276, dt: 706.55ms, fracRes: 0.1666, norm(attn): 25.0000, norm(output): 0.4043, norm(x): 0.5424, norm(y): 0.9852, norm:0.4066, tok/sec: 185509.90, flops:194.75, batch-reuse:1
@ 3193 train 4.1283 , allloss: 4.1283, dt: 706.42ms, fracRes: 0.1670, norm(attn): 25.0000, norm(output): 0.4102, norm(x): 0.5452, norm(y): 0.9835, norm:0.3961, tok/sec: 185544.78, flops:194.79, batch-reuse:1
@ 3194 train 4.1431 , allloss: 4.1431, dt: 689.43ms, fracRes: 0.1661, norm(attn): 25.0000, norm(output): 0.3965, norm(x): 0.5345, norm(y): 0.9838, norm:0.4166, tok/sec: 190116.41, flops:199.58, batch-reuse:1
@ 3195 train 4.1204 , allloss: 4.1204, dt: 708.79ms, fracRes: 0.1676, norm(attn): 24.6250, norm(output): 0.4082, norm(x): 0.5456, norm(y): 0.9839, norm:0.4217, tok/sec: 184923.96, flops:194.13, batch-reuse:1
@ 3196 train 4.1452 , allloss: 4.1452, dt: 701.90ms, fracRes: 0.1669, norm(attn): 24.6250, norm(output): 0.3965, norm(x): 0.5354, norm(y): 0.9806, norm:0.4174, tok/sec: 186739.55, flops:196.04, batch-reuse:1
@ 3197 train 4.1213 , allloss: 4.1213, dt: 705.02ms, fracRes: 0.1665, norm(attn): 24.6250, norm(output): 0.3926, norm(x): 0.5301, norm(y): 0.9762, norm:0.4281, tok/sec: 185913.48, flops:195.17, batch-reuse:1
@ 3198 train 4.0791 , allloss: 4.0791, dt: 715.23ms, fracRes: 0.1675, norm(attn): 24.6250, norm(output): 0.3965, norm(x): 0.5366, norm(y): 0.9750, norm:0.3795, tok/sec: 183257.62, flops:192.38, batch-reuse:1
@ 3199 train 4.1119 , allloss: 4.1119, dt: 707.93ms, fracRes: 0.1654, norm(attn): 24.6250, norm(output): 0.3945, norm(x): 0.5321, norm(y): 0.9745, norm:0.4274, tok/sec: 185147.85, flops:194.37, batch-reuse:1
@ 3200 train 4.0798 , allloss: 4.0798, dt: 710.19ms, fracRes: 0.1660, norm(attn): 24.5000, norm(output): 0.4121, norm(x): 0.5491, norm(y): 0.9717, norm:0.4335, tok/sec: 184558.92, flops:193.75, batch-reuse:1
@ 3201 train 4.1172 , allloss: 4.1172, dt: 705.01ms, fracRes: 0.1675, norm(attn): 24.5000, norm(output): 0.4043, norm(x): 0.5403, norm(y): 0.9647, norm:0.3593, tok/sec: 185914.29, flops:195.17, batch-reuse:1
@ 3202 train 4.1123 , allloss: 4.1123, dt: 706.68ms, fracRes: 0.1670, norm(attn): 24.1250, norm(output): 0.4004, norm(x): 0.5369, norm(y): 0.9503, norm:0.4182, tok/sec: 185476.86, flops:194.71, batch-reuse:1
@ 3203 train 4.2079 , allloss: 4.2079, dt: 700.52ms, fracRes: 0.1651, norm(attn): 24.0000, norm(output): 0.3965, norm(x): 0.5347, norm(y): 0.9372, norm:0.4183, tok/sec: 187106.90, flops:196.43, batch-reuse:1
@ 3204 train 4.0974 , allloss: 4.0974, dt: 715.55ms, fracRes: 0.1651, norm(attn): 24.0000, norm(output): 0.3984, norm(x): 0.5341, norm(y): 0.9289, norm:0.5221, tok/sec: 183176.29, flops:192.30, batch-reuse:1
@ 3205 train 4.1001 , allloss: 4.1001, dt: 701.54ms, fracRes: 0.1661, norm(attn): 24.0000, norm(output): 0.4062, norm(x): 0.5395, norm(y): 0.9301, norm:0.4827, tok/sec: 186833.98, flops:196.14, batch-reuse:1
@ 3206 train 4.0225 , allloss: 4.0225, dt: 694.98ms, fracRes: 0.1660, norm(attn): 24.1250, norm(output): 0.4023, norm(x): 0.5400, norm(y): 0.9485, norm:0.4474, tok/sec: 188597.48, flops:197.99, batch-reuse:1
@ 3207 train 4.1832 , allloss: 4.1832, dt: 695.99ms, fracRes: 0.1684, norm(attn): 24.2500, norm(output): 0.4141, norm(x): 0.5501, norm(y): 0.9573, norm:0.4465, tok/sec: 188324.20, flops:197.70, batch-reuse:1
@ 3208 train 4.1529 , allloss: 4.1529, dt: 705.12ms, fracRes: 0.1670, norm(attn): 24.5000, norm(output): 0.4102, norm(x): 0.5430, norm(y): 0.9645, norm:0.4000, tok/sec: 185885.19, flops:195.14, batch-reuse:1
@ 3209 train 4.1057 , allloss: 4.1057, dt: 703.46ms, fracRes: 0.1671, norm(attn): 24.3750, norm(output): 0.4062, norm(x): 0.5447, norm(y): 0.9671, norm:0.4255, tok/sec: 186325.75, flops:195.61, batch-reuse:1
@ 3210 train 4.0833 , allloss: 4.0833, dt: 706.23ms, fracRes: 0.1663, norm(attn): 24.3750, norm(output): 0.4082, norm(x): 0.5431, norm(y): 0.9641, norm:0.4488, tok/sec: 185593.95, flops:194.84, batch-reuse:1
@ 3211 train 4.1555 , allloss: 4.1555, dt: 699.16ms, fracRes: 0.1653, norm(attn): 24.3750, norm(output): 0.3984, norm(x): 0.5338, norm(y): 0.9600, norm:0.3717, tok/sec: 187469.57, flops:196.81, batch-reuse:1
@ 3212 train 4.2990 , allloss: 4.2990, dt: 701.18ms, fracRes: 0.1671, norm(attn): 24.1250, norm(output): 0.4141, norm(x): 0.5523, norm(y): 0.9580, norm:0.5018, tok/sec: 186930.86, flops:196.24, batch-reuse:1
@ 3213 train 4.1289 , allloss: 4.1289, dt: 709.82ms, fracRes: 0.1681, norm(attn): 24.2500, norm(output): 0.4062, norm(x): 0.5425, norm(y): 0.9612, norm:0.5159, tok/sec: 184654.95, flops:193.85, batch-reuse:1
@ 3214 train 4.2015 , allloss: 4.2015, dt: 708.84ms, fracRes: 0.1671, norm(attn): 24.1250, norm(output): 0.3965, norm(x): 0.5360, norm(y): 0.9524, norm:0.4550, tok/sec: 184911.77, flops:194.12, batch-reuse:1
@ 3215 train 4.0921 , allloss: 4.0921, dt: 699.49ms, fracRes: 0.1667, norm(attn): 24.1250, norm(output): 0.4004, norm(x): 0.5369, norm(y): 0.9466, norm:0.4331, tok/sec: 187380.94, flops:196.71, batch-reuse:1
@ 3216 train 4.1476 , allloss: 4.1476, dt: 699.25ms, fracRes: 0.1648, norm(attn): 24.0000, norm(output): 0.3945, norm(x): 0.5298, norm(y): 0.9433, norm:0.4536, tok/sec: 187445.47, flops:196.78, batch-reuse:1
@ 3217 train 4.1022 , allloss: 4.1022, dt: 706.32ms, fracRes: 0.1655, norm(attn): 24.1250, norm(output): 0.4062, norm(x): 0.5439, norm(y): 0.9485, norm:0.4103, tok/sec: 185569.64, flops:194.81, batch-reuse:1
@ 3218 train 4.1875 , allloss: 4.1875, dt: 707.23ms, fracRes: 0.1659, norm(attn): 24.3750, norm(output): 0.4082, norm(x): 0.5422, norm(y): 0.9634, norm:0.4221, tok/sec: 185330.36, flops:194.56, batch-reuse:1
@ 3219 train 4.2120 , allloss: 4.2120, dt: 700.03ms, fracRes: 0.1686, norm(attn): 24.3750, norm(output): 0.4141, norm(x): 0.5513, norm(y): 0.9731, norm:0.4543, tok/sec: 187238.88, flops:196.56, batch-reuse:1
@ 3220 train 4.1450 , allloss: 4.1450, dt: 711.11ms, fracRes: 0.1673, norm(attn): 24.5000, norm(output): 0.4004, norm(x): 0.5396, norm(y): 0.9787, norm:0.4009, tok/sec: 184319.70, flops:193.50, batch-reuse:1
@ 3221 train 4.1061 , allloss: 4.1061, dt: 710.07ms, fracRes: 0.1674, norm(attn): 24.6250, norm(output): 0.3945, norm(x): 0.5351, norm(y): 0.9853, norm:0.4002, tok/sec: 184589.66, flops:193.78, batch-reuse:1
@ 3222 train 4.1263 , allloss: 4.1263, dt: 707.28ms, fracRes: 0.1684, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5456, norm(y): 0.9894, norm:0.4427, tok/sec: 185319.49, flops:194.55, batch-reuse:1
@ 3223 train 4.1135 , allloss: 4.1135, dt: 708.08ms, fracRes: 0.1676, norm(attn): 24.7500, norm(output): 0.3965, norm(x): 0.5350, norm(y): 0.9904, norm:0.3943, tok/sec: 185107.83, flops:194.33, batch-reuse:1
@ 3224 train 4.1514 , allloss: 4.1514, dt: 707.80ms, fracRes: 0.1660, norm(attn): 24.8750, norm(output): 0.3984, norm(x): 0.5384, norm(y): 0.9905, norm:0.4039, tok/sec: 185181.03, flops:194.40, batch-reuse:1
@ 3225 train 4.1602 , allloss: 4.1602, dt: 701.78ms, fracRes: 0.1649, norm(attn): 25.1250, norm(output): 0.3984, norm(x): 0.5363, norm(y): 0.9902, norm:0.4101, tok/sec: 186771.33, flops:196.07, batch-reuse:1
@ 3226 train 4.0983 , allloss: 4.0983, dt: 701.98ms, fracRes: 0.1665, norm(attn): 24.7500, norm(output): 0.4023, norm(x): 0.5379, norm(y): 0.9887, norm:0.4061, tok/sec: 186718.81, flops:196.02, batch-reuse:1
@ 3227 train 4.0673 , allloss: 4.0673, dt: 711.38ms, fracRes: 0.1661, norm(attn): 24.8750, norm(output): 0.4023, norm(x): 0.5400, norm(y): 0.9864, norm:0.4005, tok/sec: 184251.56, flops:193.43, batch-reuse:1
@ 3228 train 3.9946 , allloss: 3.9946, dt: 712.91ms, fracRes: 0.1652, norm(attn): 24.6250, norm(output): 0.4004, norm(x): 0.5345, norm(y): 0.9847, norm:0.4190, tok/sec: 183854.12, flops:193.01, batch-reuse:1
@ 3229 train 4.1783 , allloss: 4.1783, dt: 717.78ms, fracRes: 0.1661, norm(attn): 24.7500, norm(output): 0.3945, norm(x): 0.5345, norm(y): 0.9847, norm:0.4332, tok/sec: 182607.64, flops:191.70, batch-reuse:1
@ 3230 train 4.2627 , allloss: 4.2627, dt: 717.14ms, fracRes: 0.1663, norm(attn): 25.0000, norm(output): 0.4023, norm(x): 0.5423, norm(y): 0.9868, norm:0.4592, tok/sec: 182769.37, flops:191.87, batch-reuse:1
@ 3231 train 4.0581 , allloss: 4.0581, dt: 718.95ms, fracRes: 0.1651, norm(attn): 25.1250, norm(output): 0.4023, norm(x): 0.5365, norm(y): 0.9876, norm:0.4697, tok/sec: 182310.61, flops:191.39, batch-reuse:1
@ 3232 train 4.0897 , allloss: 4.0897, dt: 706.77ms, fracRes: 0.1649, norm(attn): 24.7500, norm(output): 0.4043, norm(x): 0.5365, norm(y): 0.9846, norm:0.3983, tok/sec: 185451.95, flops:194.69, batch-reuse:1
@ 3233 train 4.1237 , allloss: 4.1237, dt: 709.67ms, fracRes: 0.1672, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5434, norm(y): 0.9799, norm:0.4509, tok/sec: 184693.84, flops:193.89, batch-reuse:1
@ 3234 train 4.2550 , allloss: 4.2550, dt: 708.95ms, fracRes: 0.1693, norm(attn): 24.5000, norm(output): 0.4043, norm(x): 0.5439, norm(y): 0.9765, norm:0.6306, tok/sec: 184881.79, flops:194.09, batch-reuse:1
@ 3235 train 4.1000 , allloss: 4.1000, dt: 699.79ms, fracRes: 0.1672, norm(attn): 24.5000, norm(output): 0.4082, norm(x): 0.5441, norm(y): 0.9697, norm:0.4216, tok/sec: 187301.71, flops:196.63, batch-reuse:1
@ 3236 train 4.2262 , allloss: 4.2262, dt: 700.61ms, fracRes: 0.1657, norm(attn): 24.2500, norm(output): 0.4062, norm(x): 0.5423, norm(y): 0.9558, norm:0.6732, tok/sec: 187081.94, flops:196.40, batch-reuse:1
@ 3237 train 4.0996 , allloss: 4.0996, dt: 706.27ms, fracRes: 0.1655, norm(attn): 24.1250, norm(output): 0.4004, norm(x): 0.5343, norm(y): 0.9346, norm:0.6250, tok/sec: 185582.98, flops:194.83, batch-reuse:1
@ 3238 train 4.1326 , allloss: 4.1326, dt: 708.70ms, fracRes: 0.1666, norm(attn): 23.8750, norm(output): 0.3984, norm(x): 0.5355, norm(y): 0.9127, norm:3.1522, tok/sec: 184946.35, flops:194.16, batch-reuse:1
@ 3239 train 4.1391 , allloss: 4.1391, dt: 702.94ms, fracRes: 0.1668, norm(attn): 24.2500, norm(output): 0.3965, norm(x): 0.5328, norm(y): 0.9597, norm:0.6091, tok/sec: 186462.26, flops:195.75, batch-reuse:1
@ 3240 train 4.1827 , allloss: 4.1827, dt: 710.77ms, fracRes: 0.1668, norm(attn): 24.7500, norm(output): 0.4062, norm(x): 0.5426, norm(y): 0.9833, norm:0.5546, tok/sec: 184407.93, flops:193.59, batch-reuse:1
@ 3241 train 4.1451 , allloss: 4.1451, dt: 713.74ms, fracRes: 0.1661, norm(attn): 24.7500, norm(output): 0.4121, norm(x): 0.5475, norm(y): 0.9892, norm:0.6067, tok/sec: 183640.03, flops:192.79, batch-reuse:1
@ 3242 train 4.1219 , allloss: 4.1219, dt: 709.28ms, fracRes: 0.1666, norm(attn): 25.0000, norm(output): 0.4023, norm(x): 0.5401, norm(y): 0.9917, norm:0.4348, tok/sec: 184795.29, flops:194.00, batch-reuse:1
@ 3243 train 4.0629 , allloss: 4.0629, dt: 705.68ms, fracRes: 0.1670, norm(attn): 25.3750, norm(output): 0.3984, norm(x): 0.5343, norm(y): 0.9926, norm:0.5141, tok/sec: 185738.98, flops:194.99, batch-reuse:1
@ 3244 train 4.0946 , allloss: 4.0946, dt: 700.31ms, fracRes: 0.1654, norm(attn): 25.3750, norm(output): 0.3926, norm(x): 0.5271, norm(y): 0.9929, norm:0.4382, tok/sec: 187162.38, flops:196.48, batch-reuse:1
@ 3245 train 4.1084 , allloss: 4.1084, dt: 691.77ms, fracRes: 0.1655, norm(attn): 25.1250, norm(output): 0.4082, norm(x): 0.5391, norm(y): 0.9931, norm:0.4909, tok/sec: 189474.21, flops:198.91, batch-reuse:1
@ 3246 train 4.0250 , allloss: 4.0250, dt: 699.73ms, fracRes: 0.1668, norm(attn): 25.3750, norm(output): 0.4062, norm(x): 0.5400, norm(y): 0.9930, norm:0.4231, tok/sec: 187316.90, flops:196.65, batch-reuse:1
@ 3247 train 4.0839 , allloss: 4.0839, dt: 707.76ms, fracRes: 0.1674, norm(attn): 25.3750, norm(output): 0.4004, norm(x): 0.5344, norm(y): 0.9935, norm:0.4524, tok/sec: 185193.13, flops:194.42, batch-reuse:1
@ 3248 train 4.1946 , allloss: 4.1946, dt: 708.45ms, fracRes: 0.1680, norm(attn): 25.1250, norm(output): 0.3945, norm(x): 0.5330, norm(y): 0.9938, norm:0.4009, tok/sec: 185012.89, flops:194.23, batch-reuse:1
@ 3249 train 4.0941 , allloss: 4.0941, dt: 699.40ms, fracRes: 0.1675, norm(attn): 25.3750, norm(output): 0.4082, norm(x): 0.5409, norm(y): 0.9933, norm:0.4171, tok/sec: 187405.08, flops:196.74, batch-reuse:1
@ 3250 train 4.0603 , allloss: 4.0603, dt: 698.34ms, fracRes: 0.1668, norm(attn): 25.5000, norm(output): 0.4043, norm(x): 0.5410, norm(y): 0.9935, norm:0.3834, tok/sec: 187690.95, flops:197.04, batch-reuse:1
@ 3251 train 4.0492 , allloss: 4.0492, dt: 713.00ms, fracRes: 0.1651, norm(attn): 25.3750, norm(output): 0.3984, norm(x): 0.5325, norm(y): 0.9936, norm:0.4054, tok/sec: 183831.44, flops:192.99, batch-reuse:1
@ 3252 train 4.0592 , allloss: 4.0592, dt: 704.74ms, fracRes: 0.1658, norm(attn): 25.0000, norm(output): 0.3984, norm(x): 0.5367, norm(y): 0.9936, norm:0.4096, tok/sec: 185987.13, flops:195.25, batch-reuse:1
@ 3253 train 4.1722 , allloss: 4.1722, dt: 702.89ms, fracRes: 0.1674, norm(attn): 24.8750, norm(output): 0.4062, norm(x): 0.5470, norm(y): 0.9937, norm:0.3829, tok/sec: 186475.29, flops:195.76, batch-reuse:1
@ 3254 train 3.9929 , allloss: 3.9929, dt: 702.48ms, fracRes: 0.1670, norm(attn): 24.6250, norm(output): 0.4004, norm(x): 0.5378, norm(y): 0.9934, norm:0.3968, tok/sec: 186584.52, flops:195.88, batch-reuse:1
@ 3255 train 4.1236 , allloss: 4.1236, dt: 704.19ms, fracRes: 0.1662, norm(attn): 24.7500, norm(output): 0.4023, norm(x): 0.5397, norm(y): 0.9934, norm:0.4120, tok/sec: 186132.65, flops:195.40, batch-reuse:1
@ 3256 train 4.1389 , allloss: 4.1389, dt: 724.50ms, fracRes: 0.1664, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5416, norm(y): 0.9928, norm:0.4321, tok/sec: 180913.81, flops:189.92, batch-reuse:1
@ 3257 train 4.0565 , allloss: 4.0565, dt: 724.33ms, fracRes: 0.1670, norm(attn): 24.5000, norm(output): 0.4062, norm(x): 0.5444, norm(y): 0.9932, norm:0.3936, tok/sec: 180956.80, flops:189.97, batch-reuse:1
@ 3258 train 4.0775 , allloss: 4.0775, dt: 724.77ms, fracRes: 0.1655, norm(attn): 24.6250, norm(output): 0.3984, norm(x): 0.5343, norm(y): 0.9934, norm:0.4176, tok/sec: 180845.31, flops:189.85, batch-reuse:1
@ 3259 train 4.0828 , allloss: 4.0828, dt: 712.05ms, fracRes: 0.1664, norm(attn): 24.6250, norm(output): 0.4043, norm(x): 0.5423, norm(y): 0.9933, norm:0.4065, tok/sec: 184076.05, flops:193.24, batch-reuse:1
@ 3260 train 4.0885 , allloss: 4.0885, dt: 705.67ms, fracRes: 0.1662, norm(attn): 24.5000, norm(output): 0.4043, norm(x): 0.5411, norm(y): 0.9932, norm:0.3916, tok/sec: 185740.55, flops:194.99, batch-reuse:1
@ 3261 train 4.0612 , allloss: 4.0612, dt: 700.19ms, fracRes: 0.1665, norm(attn): 24.5000, norm(output): 0.3984, norm(x): 0.5373, norm(y): 0.9930, norm:0.4420, tok/sec: 187195.27, flops:196.52, batch-reuse:1
@ 3262 train 4.0628 , allloss: 4.0628, dt: 714.48ms, fracRes: 0.1663, norm(attn): 24.6250, norm(output): 0.4062, norm(x): 0.5376, norm(y): 0.9932, norm:0.6960, tok/sec: 183450.61, flops:192.59, batch-reuse:1
@ 3263 train 4.0162 , allloss: 4.0162, dt: 710.36ms, fracRes: 0.1681, norm(attn): 24.7500, norm(output): 0.4121, norm(x): 0.5493, norm(y): 0.9934, norm:0.4750, tok/sec: 184515.19, flops:193.70, batch-reuse:1
@ 3264 train 4.1055 , allloss: 4.1055, dt: 700.83ms, fracRes: 0.1688, norm(attn): 24.7500, norm(output): 0.4141, norm(x): 0.5516, norm(y): 0.9934, norm:0.4038, tok/sec: 187023.13, flops:196.34, batch-reuse:1
@ 3265 train 4.0656 , allloss: 4.0656, dt: 705.93ms, fracRes: 0.1664, norm(attn): 25.5000, norm(output): 0.4062, norm(x): 0.5390, norm(y): 0.9934, norm:0.3859, tok/sec: 185671.92, flops:194.92, batch-reuse:1
@ 3266 train 3.9855 , allloss: 3.9855, dt: 712.48ms, fracRes: 0.1679, norm(attn): 25.8750, norm(output): 0.4062, norm(x): 0.5441, norm(y): 0.9935, norm:0.4290, tok/sec: 183966.65, flops:193.13, batch-reuse:1
@ 3267 train 4.0223 , allloss: 4.0223, dt: 700.03ms, fracRes: 0.1656, norm(attn): 25.8750, norm(output): 0.3984, norm(x): 0.5320, norm(y): 0.9938, norm:0.3799, tok/sec: 187236.90, flops:196.56, batch-reuse:1
@ 3268 train 4.0351 , allloss: 4.0351, dt: 697.14ms, fracRes: 0.1673, norm(attn): 26.1250, norm(output): 0.4102, norm(x): 0.5462, norm(y): 0.9939, norm:0.4570, tok/sec: 188014.21, flops:197.38, batch-reuse:1
@ 3269 train 4.0583 , allloss: 4.0583, dt: 703.44ms, fracRes: 0.1669, norm(attn): 26.1250, norm(output): 0.4102, norm(x): 0.5489, norm(y): 0.9941, norm:0.4035, tok/sec: 186330.30, flops:195.61, batch-reuse:1
@ 3270 train 4.0298 , allloss: 4.0298, dt: 705.56ms, fracRes: 0.1677, norm(attn): 26.1250, norm(output): 0.4043, norm(x): 0.5425, norm(y): 0.9944, norm:0.4417, tok/sec: 185770.43, flops:195.02, batch-reuse:1
@ 3271 train 4.0559 , allloss: 4.0559, dt: 707.43ms, fracRes: 0.1658, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5274, norm(y): 0.9941, norm:0.4016, tok/sec: 185278.83, flops:194.51, batch-reuse:1
@ 3272 train 4.0678 , allloss: 4.0678, dt: 705.46ms, fracRes: 0.1667, norm(attn): 26.5000, norm(output): 0.4043, norm(x): 0.5392, norm(y): 0.9942, norm:0.4023, tok/sec: 185795.29, flops:195.05, batch-reuse:1
@ 3273 train 4.0971 , allloss: 4.0971, dt: 699.76ms, fracRes: 0.1650, norm(attn): 26.5000, norm(output): 0.4043, norm(x): 0.5360, norm(y): 0.9943, norm:0.3993, tok/sec: 187310.20, flops:196.64, batch-reuse:1
@ 3274 train 4.0409 , allloss: 4.0409, dt: 708.60ms, fracRes: 0.1664, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5388, norm(y): 0.9944, norm:0.4090, tok/sec: 184972.12, flops:194.18, batch-reuse:1
@ 3275 train 4.0575 , allloss: 4.0575, dt: 692.51ms, fracRes: 0.1648, norm(attn): 26.5000, norm(output): 0.3984, norm(x): 0.5323, norm(y): 0.9944, norm:0.3973, tok/sec: 189271.53, flops:198.70, batch-reuse:1
@ 3276 train 4.0617 , allloss: 4.0617, dt: 712.07ms, fracRes: 0.1658, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5355, norm(y): 0.9946, norm:0.4110, tok/sec: 184072.66, flops:193.24, batch-reuse:1
@ 3277 train 4.0897 , allloss: 4.0897, dt: 703.03ms, fracRes: 0.1665, norm(attn): 26.5000, norm(output): 0.4082, norm(x): 0.5451, norm(y): 0.9947, norm:0.3778, tok/sec: 186439.87, flops:195.72, batch-reuse:1
@ 3278 train 4.0818 , allloss: 4.0818, dt: 708.84ms, fracRes: 0.1662, norm(attn): 26.5000, norm(output): 0.4102, norm(x): 0.5447, norm(y): 0.9943, norm:0.3947, tok/sec: 184909.90, flops:194.12, batch-reuse:1
@ 3279 train 4.0792 , allloss: 4.0792, dt: 718.81ms, fracRes: 0.1655, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5406, norm(y): 0.9942, norm:0.4833, tok/sec: 182346.41, flops:191.43, batch-reuse:1
@ 3280 train 4.0398 , allloss: 4.0398, dt: 707.72ms, fracRes: 0.1676, norm(attn): 26.5000, norm(output): 0.4082, norm(x): 0.5462, norm(y): 0.9942, norm:0.3482, tok/sec: 185202.93, flops:194.43, batch-reuse:1
@ 3281 train 4.0564 , allloss: 4.0564, dt: 704.46ms, fracRes: 0.1671, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5399, norm(y): 0.9944, norm:0.4027, tok/sec: 186059.45, flops:195.33, batch-reuse:1
@ 3282 train 4.0395 , allloss: 4.0395, dt: 707.18ms, fracRes: 0.1681, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5420, norm(y): 0.9945, norm:0.3650, tok/sec: 185344.23, flops:194.57, batch-reuse:1
@ 3283 train 4.0977 , allloss: 4.0977, dt: 697.23ms, fracRes: 0.1691, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5467, norm(y): 0.9943, norm:0.3662, tok/sec: 187989.27, flops:197.35, batch-reuse:1
@ 3284 train 4.0674 , allloss: 4.0674, dt: 701.77ms, fracRes: 0.1681, norm(attn): 26.5000, norm(output): 0.4102, norm(x): 0.5456, norm(y): 0.9940, norm:0.4328, tok/sec: 186772.16, flops:196.07, batch-reuse:1
@ 3285 train 4.0424 , allloss: 4.0424, dt: 693.37ms, fracRes: 0.1670, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5427, norm(y): 0.9939, norm:0.4390, tok/sec: 189036.13, flops:198.45, batch-reuse:1
@ 3286 train 4.0720 , allloss: 4.0720, dt: 706.51ms, fracRes: 0.1689, norm(attn): 26.5000, norm(output): 0.4160, norm(x): 0.5530, norm(y): 0.9939, norm:0.4040, tok/sec: 185519.86, flops:194.76, batch-reuse:1
@ 3287 train 4.0048 , allloss: 4.0048, dt: 712.33ms, fracRes: 0.1660, norm(attn): 26.6250, norm(output): 0.4004, norm(x): 0.5375, norm(y): 0.9942, norm:0.3861, tok/sec: 184005.13, flops:193.17, batch-reuse:1
@ 3288 train 4.2068 , allloss: 4.2068, dt: 699.90ms, fracRes: 0.1674, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5375, norm(y): 0.9942, norm:0.5796, tok/sec: 187271.79, flops:196.60, batch-reuse:1
@ 3289 train 4.1370 , allloss: 4.1370, dt: 704.95ms, fracRes: 0.1685, norm(attn): 26.5000, norm(output): 0.4160, norm(x): 0.5561, norm(y): 0.9940, norm:0.5110, tok/sec: 185930.58, flops:195.19, batch-reuse:1
@ 3290 train 4.1637 , allloss: 4.1637, dt: 696.47ms, fracRes: 0.1669, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5423, norm(y): 0.9940, norm:0.4892, tok/sec: 188193.97, flops:197.57, batch-reuse:1
@ 3291 train 3.9871 , allloss: 3.9871, dt: 692.27ms, fracRes: 0.1659, norm(attn): 26.5000, norm(output): 0.3965, norm(x): 0.5348, norm(y): 0.9945, norm:0.4351, tok/sec: 189337.17, flops:198.77, batch-reuse:1
@ 3292 train 4.2016 , allloss: 4.2016, dt: 707.60ms, fracRes: 0.1657, norm(attn): 26.7500, norm(output): 0.3965, norm(x): 0.5327, norm(y): 0.9950, norm:0.5042, tok/sec: 185235.13, flops:194.46, batch-reuse:1
@ 3293 train 4.1433 , allloss: 4.1433, dt: 708.38ms, fracRes: 0.1664, norm(attn): 27.0000, norm(output): 0.4102, norm(x): 0.5458, norm(y): 0.9947, norm:0.4161, tok/sec: 185030.58, flops:194.25, batch-reuse:1
@ 3294 train 4.0885 , allloss: 4.0885, dt: 705.44ms, fracRes: 0.1672, norm(attn): 26.8750, norm(output): 0.4160, norm(x): 0.5539, norm(y): 0.9941, norm:0.5021, tok/sec: 185801.00, flops:195.05, batch-reuse:1
@ 3295 train 3.9495 , allloss: 3.9495, dt: 706.25ms, fracRes: 0.1670, norm(attn): 27.0000, norm(output): 0.4004, norm(x): 0.5367, norm(y): 0.9935, norm:0.4267, tok/sec: 185588.25, flops:194.83, batch-reuse:1
@ 3296 train 3.9699 , allloss: 3.9699, dt: 720.79ms, fracRes: 0.1674, norm(attn): 27.2500, norm(output): 0.3984, norm(x): 0.5365, norm(y): 0.9940, norm:0.4089, tok/sec: 181844.10, flops:190.90, batch-reuse:1
@ 3297 train 3.8962 , allloss: 3.8962, dt: 724.82ms, fracRes: 0.1649, norm(attn): 27.5000, norm(output): 0.3926, norm(x): 0.5287, norm(y): 0.9937, norm:0.3682, tok/sec: 180833.47, flops:189.84, batch-reuse:1
@ 3298 train 3.9833 , allloss: 3.9833, dt: 723.68ms, fracRes: 0.1655, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5293, norm(y): 0.9936, norm:0.4179, tok/sec: 181119.56, flops:190.14, batch-reuse:1
@ 3299 train 3.8895 , allloss: 3.8895, dt: 719.15ms, fracRes: 0.1669, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5362, norm(y): 0.9938, norm:0.3800, tok/sec: 182260.50, flops:191.34, batch-reuse:1
@ 3300 train 3.9636 , allloss: 3.9636, dt: 701.62ms, fracRes: 0.1676, norm(attn): 27.1250, norm(output): 0.3965, norm(x): 0.5336, norm(y): 0.9938, norm:0.3952, tok/sec: 186813.54, flops:196.12, batch-reuse:1
@ 3301 train 3.9854 , allloss: 3.9854, dt: 698.98ms, fracRes: 0.1660, norm(attn): 27.0000, norm(output): 0.3984, norm(x): 0.5293, norm(y): 0.9935, norm:0.3871, tok/sec: 187519.57, flops:196.86, batch-reuse:1
@ 3302 train 3.9472 , allloss: 3.9472, dt: 710.45ms, fracRes: 0.1673, norm(attn): 27.0000, norm(output): 0.4062, norm(x): 0.5445, norm(y): 0.9933, norm:0.4725, tok/sec: 184490.30, flops:193.68, batch-reuse:1
@ 3303 train 3.8757 , allloss: 3.8757, dt: 712.14ms, fracRes: 0.1660, norm(attn): 27.0000, norm(output): 0.3965, norm(x): 0.5301, norm(y): 0.9932, norm:0.3691, tok/sec: 184054.60, flops:193.22, batch-reuse:1
@ 3304 train 4.0003 , allloss: 4.0003, dt: 707.36ms, fracRes: 0.1653, norm(attn): 27.2500, norm(output): 0.3965, norm(x): 0.5303, norm(y): 0.9931, norm:0.4221, tok/sec: 185297.00, flops:194.53, batch-reuse:1
@ 3305 train 4.0552 , allloss: 4.0552, dt: 700.08ms, fracRes: 0.1655, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5359, norm(y): 0.9934, norm:0.4090, tok/sec: 187223.26, flops:196.55, batch-reuse:1
@ 3306 train 3.9201 , allloss: 3.9201, dt: 708.85ms, fracRes: 0.1655, norm(attn): 27.0000, norm(output): 0.4062, norm(x): 0.5416, norm(y): 0.9935, norm:0.4345, tok/sec: 184908.97, flops:194.12, batch-reuse:1
@ 3307 train 3.9141 , allloss: 3.9141, dt: 710.16ms, fracRes: 0.1654, norm(attn): 27.2500, norm(output): 0.3984, norm(x): 0.5320, norm(y): 0.9933, norm:0.3788, tok/sec: 184566.42, flops:193.76, batch-reuse:1
@ 3308 train 3.9940 , allloss: 3.9940, dt: 706.48ms, fracRes: 0.1646, norm(attn): 27.5000, norm(output): 0.3926, norm(x): 0.5251, norm(y): 0.9931, norm:0.4268, tok/sec: 185528.18, flops:194.77, batch-reuse:1
@ 3309 train 3.9456 , allloss: 3.9456, dt: 710.48ms, fracRes: 0.1665, norm(attn): 27.2500, norm(output): 0.4004, norm(x): 0.5334, norm(y): 0.9933, norm:0.4096, tok/sec: 184484.42, flops:193.67, batch-reuse:1
@ 3310 train 3.9899 , allloss: 3.9899, dt: 704.84ms, fracRes: 0.1660, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5391, norm(y): 0.9933, norm:0.3910, tok/sec: 185961.14, flops:195.22, batch-reuse:1
@ 3311 train 4.0041 , allloss: 4.0041, dt: 700.32ms, fracRes: 0.1656, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5398, norm(y): 0.9930, norm:0.5709, tok/sec: 187160.92, flops:196.48, batch-reuse:1
@ 3312 train 3.9183 , allloss: 3.9183, dt: 703.68ms, fracRes: 0.1669, norm(attn): 27.2500, norm(output): 0.4141, norm(x): 0.5505, norm(y): 0.9931, norm:0.4783, tok/sec: 186265.21, flops:195.54, batch-reuse:1
@ 3313 train 3.9972 , allloss: 3.9972, dt: 712.28ms, fracRes: 0.1673, norm(attn): 27.0000, norm(output): 0.4082, norm(x): 0.5447, norm(y): 0.9935, norm:0.4172, tok/sec: 184017.57, flops:193.18, batch-reuse:1
@ 3314 train 3.9438 , allloss: 3.9438, dt: 703.19ms, fracRes: 0.1661, norm(attn): 27.2500, norm(output): 0.3965, norm(x): 0.5292, norm(y): 0.9932, norm:0.4753, tok/sec: 186397.01, flops:195.68, batch-reuse:1
@ 3315 train 4.0942 , allloss: 4.0942, dt: 702.26ms, fracRes: 0.1656, norm(attn): 27.5000, norm(output): 0.3965, norm(x): 0.5289, norm(y): 0.9939, norm:0.4670, tok/sec: 186643.88, flops:195.94, batch-reuse:1
@ 3316 train 3.9917 , allloss: 3.9917, dt: 695.49ms, fracRes: 0.1662, norm(attn): 26.8750, norm(output): 0.4121, norm(x): 0.5462, norm(y): 0.9936, norm:0.4617, tok/sec: 188458.67, flops:197.84, batch-reuse:1
@ 3317 train 3.9934 , allloss: 3.9934, dt: 705.87ms, fracRes: 0.1654, norm(attn): 27.3750, norm(output): 0.4043, norm(x): 0.5354, norm(y): 0.9935, norm:0.4348, tok/sec: 185687.66, flops:194.94, batch-reuse:1
@ 3318 train 3.7694 , allloss: 3.7694, dt: 702.69ms, fracRes: 0.1634, norm(attn): 27.3750, norm(output): 0.4023, norm(x): 0.5304, norm(y): 0.9933, norm:0.3997, tok/sec: 186530.14, flops:195.82, batch-reuse:1
@ 3319 train 4.0538 , allloss: 4.0538, dt: 705.66ms, fracRes: 0.1632, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5292, norm(y): 0.9935, norm:0.3712, tok/sec: 185742.81, flops:194.99, batch-reuse:1
@ 3320 train 4.0639 , allloss: 4.0639, dt: 703.57ms, fracRes: 0.1661, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5395, norm(y): 0.9940, norm:0.3600, tok/sec: 186295.13, flops:195.57, batch-reuse:1
@ 3321 train 4.0128 , allloss: 4.0128, dt: 694.21ms, fracRes: 0.1678, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5391, norm(y): 0.9943, norm:0.3726, tok/sec: 188807.08, flops:198.21, batch-reuse:1
@ 3322 train 3.8584 , allloss: 3.8584, dt: 703.35ms, fracRes: 0.1683, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5435, norm(y): 0.9938, norm:0.3688, tok/sec: 186352.91, flops:195.63, batch-reuse:1
@ 3323 train 3.8314 , allloss: 3.8314, dt: 709.14ms, fracRes: 0.1663, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5338, norm(y): 0.9936, norm:0.3869, tok/sec: 184833.50, flops:194.04, batch-reuse:1
@ 3324 train 3.9507 , allloss: 3.9507, dt: 705.18ms, fracRes: 0.1666, norm(attn): 27.3750, norm(output): 0.3945, norm(x): 0.5322, norm(y): 0.9938, norm:0.3554, tok/sec: 185870.80, flops:195.13, batch-reuse:1
@ 3325 train 4.0273 , allloss: 4.0273, dt: 705.37ms, fracRes: 0.1685, norm(attn): 27.3750, norm(output): 0.4023, norm(x): 0.5356, norm(y): 0.9938, norm:0.3943, tok/sec: 185818.90, flops:195.07, batch-reuse:1
@ 3326 train 3.9422 , allloss: 3.9422, dt: 702.67ms, fracRes: 0.1671, norm(attn): 27.3750, norm(output): 0.3945, norm(x): 0.5312, norm(y): 0.9935, norm:0.3953, tok/sec: 186534.00, flops:195.82, batch-reuse:1
@ 3327 train 3.9325 , allloss: 3.9325, dt: 709.20ms, fracRes: 0.1683, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5393, norm(y): 0.9935, norm:0.3560, tok/sec: 184817.09, flops:194.02, batch-reuse:1
@ 3328 train 3.9170 , allloss: 3.9170, dt: 713.87ms, fracRes: 0.1675, norm(attn): 27.3750, norm(output): 0.3945, norm(x): 0.5337, norm(y): 0.9931, norm:0.3907, tok/sec: 183608.26, flops:192.75, batch-reuse:1
@ 3329 train 3.8940 , allloss: 3.8940, dt: 697.59ms, fracRes: 0.1667, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5371, norm(y): 0.9928, norm:0.4194, tok/sec: 187891.54, flops:197.25, batch-reuse:1
@ 3330 train 3.8872 , allloss: 3.8872, dt: 704.30ms, fracRes: 0.1663, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5377, norm(y): 0.9930, norm:0.4110, tok/sec: 186102.15, flops:195.37, batch-reuse:1
@ 3331 train 3.6844 , allloss: 3.6844, dt: 703.53ms, fracRes: 0.1676, norm(attn): 27.3750, norm(output): 0.4082, norm(x): 0.5458, norm(y): 0.9928, norm:0.4013, tok/sec: 186307.51, flops:195.59, batch-reuse:1
@ 3332 train 3.9787 , allloss: 3.9787, dt: 694.27ms, fracRes: 0.1678, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5370, norm(y): 0.9935, norm:0.3921, tok/sec: 188790.61, flops:198.19, batch-reuse:1
@ 3333 train 3.9006 , allloss: 3.9006, dt: 704.01ms, fracRes: 0.1685, norm(attn): 27.3750, norm(output): 0.4082, norm(x): 0.5422, norm(y): 0.9926, norm:0.3948, tok/sec: 186180.43, flops:195.45, batch-reuse:1
@ 3334 train 3.9048 , allloss: 3.9048, dt: 701.43ms, fracRes: 0.1680, norm(attn): 27.2500, norm(output): 0.4004, norm(x): 0.5374, norm(y): 0.9918, norm:0.3919, tok/sec: 186863.70, flops:196.17, batch-reuse:1
@ 3335 train 3.8742 , allloss: 3.8742, dt: 708.20ms, fracRes: 0.1683, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5414, norm(y): 0.9915, norm:0.4134, tok/sec: 185078.66, flops:194.30, batch-reuse:1
@ 3336 train 4.0003 , allloss: 4.0003, dt: 709.46ms, fracRes: 0.1685, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5436, norm(y): 0.9914, norm:0.4192, tok/sec: 184749.08, flops:193.95, batch-reuse:1
@ 3337 train 3.9091 , allloss: 3.9091, dt: 701.63ms, fracRes: 0.1703, norm(attn): 26.8750, norm(output): 0.4082, norm(x): 0.5479, norm(y): 0.9915, norm:0.3767, tok/sec: 186811.57, flops:196.12, batch-reuse:1
@ 3338 train 3.8721 , allloss: 3.8721, dt: 701.53ms, fracRes: 0.1713, norm(attn): 26.8750, norm(output): 0.4062, norm(x): 0.5447, norm(y): 0.9917, norm:0.3885, tok/sec: 186837.09, flops:196.14, batch-reuse:1
@ 3339 train 3.9487 , allloss: 3.9487, dt: 700.10ms, fracRes: 0.1693, norm(attn): 27.2500, norm(output): 0.4004, norm(x): 0.5371, norm(y): 0.9918, norm:0.3815, tok/sec: 187217.64, flops:196.54, batch-reuse:1
@ 3340 train 3.8635 , allloss: 3.8635, dt: 707.05ms, fracRes: 0.1702, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5373, norm(y): 0.9921, norm:0.3904, tok/sec: 185378.29, flops:194.61, batch-reuse:1
@ 3341 train 4.2264 , allloss: 4.2264, dt: 705.51ms, fracRes: 0.1725, norm(attn): 27.0000, norm(output): 0.4004, norm(x): 0.5405, norm(y): 0.9936, norm:0.5458, tok/sec: 185782.17, flops:195.03, batch-reuse:1
@ 3342 train 4.0911 , allloss: 4.0911, dt: 705.81ms, fracRes: 0.1718, norm(attn): 27.0000, norm(output): 0.4062, norm(x): 0.5492, norm(y): 0.9930, norm:0.6505, tok/sec: 185703.41, flops:194.95, batch-reuse:1
@ 3343 train 4.0761 , allloss: 4.0761, dt: 708.82ms, fracRes: 0.1709, norm(attn): 27.2500, norm(output): 0.4082, norm(x): 0.5470, norm(y): 0.9927, norm:0.4814, tok/sec: 184916.06, flops:194.13, batch-reuse:1
@ 3344 train 4.1499 , allloss: 4.1499, dt: 685.96ms, fracRes: 0.1691, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5371, norm(y): 0.9931, norm:0.4553, tok/sec: 191079.31, flops:200.60, batch-reuse:1
@ 3345 train 4.0845 , allloss: 4.0845, dt: 695.08ms, fracRes: 0.1697, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5411, norm(y): 0.9926, norm:0.4265, tok/sec: 188570.25, flops:197.96, batch-reuse:1
@ 3346 train 4.0587 , allloss: 4.0587, dt: 697.59ms, fracRes: 0.1702, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5486, norm(y): 0.9916, norm:0.4471, tok/sec: 187892.76, flops:197.25, batch-reuse:1
@ 3347 train 4.0876 , allloss: 4.0876, dt: 706.54ms, fracRes: 0.1688, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5393, norm(y): 0.9916, norm:0.4507, tok/sec: 185512.84, flops:194.75, batch-reuse:1
@ 3348 train 4.0412 , allloss: 4.0412, dt: 705.16ms, fracRes: 0.1704, norm(attn): 26.7500, norm(output): 0.4121, norm(x): 0.5542, norm(y): 0.9916, norm:0.4559, tok/sec: 185876.20, flops:195.13, batch-reuse:1
@ 3349 train 4.0120 , allloss: 4.0120, dt: 701.80ms, fracRes: 0.1702, norm(attn): 26.6250, norm(output): 0.4082, norm(x): 0.5492, norm(y): 0.9914, norm:0.4547, tok/sec: 186766.13, flops:196.07, batch-reuse:1
@ 3350 train 4.0515 , allloss: 4.0515, dt: 691.95ms, fracRes: 0.1679, norm(attn): 27.0000, norm(output): 0.3965, norm(x): 0.5361, norm(y): 0.9914, norm:0.4552, tok/sec: 189424.85, flops:198.86, batch-reuse:1
@ 3351 train 4.1778 , allloss: 4.1778, dt: 706.72ms, fracRes: 0.1687, norm(attn): 27.2500, norm(output): 0.4004, norm(x): 0.5400, norm(y): 0.9918, norm:0.4515, tok/sec: 185465.78, flops:194.70, batch-reuse:1
@ 3352 train 4.1324 , allloss: 4.1324, dt: 705.06ms, fracRes: 0.1682, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5427, norm(y): 0.9915, norm:0.5465, tok/sec: 185902.16, flops:195.16, batch-reuse:1
@ 3353 train 4.1563 , allloss: 4.1563, dt: 702.02ms, fracRes: 0.1687, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5396, norm(y): 0.9912, norm:0.5054, tok/sec: 186707.14, flops:196.01, batch-reuse:1
@ 3354 train 4.1008 , allloss: 4.1008, dt: 704.45ms, fracRes: 0.1695, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5439, norm(y): 0.9923, norm:0.4377, tok/sec: 186062.28, flops:195.33, batch-reuse:1
@ 3355 train 4.1791 , allloss: 4.1791, dt: 698.88ms, fracRes: 0.1680, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5377, norm(y): 0.9931, norm:0.4914, tok/sec: 187545.54, flops:196.89, batch-reuse:1
@ 3356 train 4.0977 , allloss: 4.0977, dt: 708.11ms, fracRes: 0.1689, norm(attn): 27.5000, norm(output): 0.4062, norm(x): 0.5462, norm(y): 0.9931, norm:0.4335, tok/sec: 185100.85, flops:194.32, batch-reuse:1
@ 3357 train 4.1004 , allloss: 4.1004, dt: 704.65ms, fracRes: 0.1695, norm(attn): 27.2500, norm(output): 0.4082, norm(x): 0.5454, norm(y): 0.9932, norm:0.4846, tok/sec: 186009.40, flops:195.27, batch-reuse:1
@ 3358 train 4.1558 , allloss: 4.1558, dt: 704.61ms, fracRes: 0.1701, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5411, norm(y): 0.9930, norm:0.4169, tok/sec: 186021.24, flops:195.29, batch-reuse:1
@ 3359 train 4.0733 , allloss: 4.0733, dt: 692.36ms, fracRes: 0.1701, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5412, norm(y): 0.9926, norm:0.4390, tok/sec: 189311.74, flops:198.74, batch-reuse:1
@ 3360 train 4.1143 , allloss: 4.1143, dt: 700.99ms, fracRes: 0.1695, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5410, norm(y): 0.9913, norm:0.4124, tok/sec: 186981.72, flops:196.29, batch-reuse:1
@ 3361 train 4.1572 , allloss: 4.1572, dt: 698.27ms, fracRes: 0.1691, norm(attn): 27.0000, norm(output): 0.4043, norm(x): 0.5398, norm(y): 0.9893, norm:0.4174, tok/sec: 187709.35, flops:197.06, batch-reuse:1
@ 3362 train 4.0292 , allloss: 4.0292, dt: 700.20ms, fracRes: 0.1688, norm(attn): 26.7500, norm(output): 0.4043, norm(x): 0.5418, norm(y): 0.9850, norm:0.4095, tok/sec: 187192.66, flops:196.52, batch-reuse:1
@ 3363 train 4.1060 , allloss: 4.1060, dt: 700.36ms, fracRes: 0.1698, norm(attn): 26.6250, norm(output): 0.4004, norm(x): 0.5389, norm(y): 0.9755, norm:0.3709, tok/sec: 187148.49, flops:196.47, batch-reuse:1
@ 3364 train 4.1075 , allloss: 4.1075, dt: 692.17ms, fracRes: 0.1688, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5413, norm(y): 0.9831, norm:0.4233, tok/sec: 189364.11, flops:198.79, batch-reuse:1
@ 3365 train 4.0647 , allloss: 4.0647, dt: 692.91ms, fracRes: 0.1700, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5416, norm(y): 0.9821, norm:0.3811, tok/sec: 189160.82, flops:198.58, batch-reuse:1
@ 3366 train 4.2393 , allloss: 4.2393, dt: 701.31ms, fracRes: 0.1704, norm(attn): 26.5000, norm(output): 0.4121, norm(x): 0.5517, norm(y): 0.9867, norm:0.4221, tok/sec: 186897.12, flops:196.20, batch-reuse:1
@ 3367 train 4.1152 , allloss: 4.1152, dt: 709.61ms, fracRes: 0.1705, norm(attn): 27.0000, norm(output): 0.4102, norm(x): 0.5496, norm(y): 0.9904, norm:0.3965, tok/sec: 184708.86, flops:193.91, batch-reuse:1
@ 3368 train 4.1847 , allloss: 4.1847, dt: 708.19ms, fracRes: 0.1705, norm(attn): 27.3750, norm(output): 0.4062, norm(x): 0.5426, norm(y): 0.9924, norm:0.3907, tok/sec: 185079.47, flops:194.30, batch-reuse:1
@ 3369 train 4.1192 , allloss: 4.1192, dt: 695.59ms, fracRes: 0.1704, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5454, norm(y): 0.9932, norm:0.3929, tok/sec: 188433.09, flops:197.82, batch-reuse:1
@ 3370 train 4.0861 , allloss: 4.0861, dt: 696.57ms, fracRes: 0.1703, norm(attn): 27.5000, norm(output): 0.4141, norm(x): 0.5541, norm(y): 0.9933, norm:0.4175, tok/sec: 188166.99, flops:197.54, batch-reuse:1
@ 3371 train 4.0757 , allloss: 4.0757, dt: 699.37ms, fracRes: 0.1701, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5467, norm(y): 0.9937, norm:0.4586, tok/sec: 187415.05, flops:196.75, batch-reuse:1
@ 3372 train 4.0832 , allloss: 4.0832, dt: 693.38ms, fracRes: 0.1693, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5351, norm(y): 0.9939, norm:0.3877, tok/sec: 189034.76, flops:198.45, batch-reuse:1
@ 3373 train 4.1344 , allloss: 4.1344, dt: 710.11ms, fracRes: 0.1696, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5382, norm(y): 0.9942, norm:0.4614, tok/sec: 184580.55, flops:193.77, batch-reuse:1
@ 3374 train 4.0606 , allloss: 4.0606, dt: 708.46ms, fracRes: 0.1695, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5440, norm(y): 0.9938, norm:0.3834, tok/sec: 185009.34, flops:194.22, batch-reuse:1
@ 3375 train 4.0232 , allloss: 4.0232, dt: 706.17ms, fracRes: 0.1701, norm(attn): 27.5000, norm(output): 0.4062, norm(x): 0.5453, norm(y): 0.9932, norm:0.3998, tok/sec: 185609.74, flops:194.85, batch-reuse:1
@ 3376 train 4.2585 , allloss: 4.2585, dt: 705.52ms, fracRes: 0.1695, norm(attn): 27.2500, norm(output): 0.4121, norm(x): 0.5459, norm(y): 0.9935, norm:0.4081, tok/sec: 185779.66, flops:195.03, batch-reuse:1
@ 3377 train 4.1009 , allloss: 4.1009, dt: 705.52ms, fracRes: 0.1714, norm(attn): 27.2500, norm(output): 0.4570, norm(x): 0.5947, norm(y): 0.9944, norm:0.7496, tok/sec: 185781.48, flops:195.03, batch-reuse:1
@ 3378 train 4.2022 , allloss: 4.2022, dt: 698.55ms, fracRes: 0.1688, norm(attn): 27.0000, norm(output): 0.4062, norm(x): 0.5449, norm(y): 0.9927, norm:0.5594, tok/sec: 187634.39, flops:196.98, batch-reuse:1
@ 3379 train 4.0499 , allloss: 4.0499, dt: 705.40ms, fracRes: 0.1673, norm(attn): 27.2500, norm(output): 0.3906, norm(x): 0.5300, norm(y): 0.9920, norm:0.4159, tok/sec: 185811.62, flops:195.07, batch-reuse:1
@ 3380 train 4.1144 , allloss: 4.1144, dt: 705.64ms, fracRes: 0.1684, norm(attn): 27.0000, norm(output): 0.4023, norm(x): 0.5375, norm(y): 0.9927, norm:0.5153, tok/sec: 185748.08, flops:195.00, batch-reuse:1
@ 3381 train 4.1018 , allloss: 4.1018, dt: 706.58ms, fracRes: 0.1701, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5433, norm(y): 0.9928, norm:0.4065, tok/sec: 185502.64, flops:194.74, batch-reuse:1
@ 3382 train 4.1493 , allloss: 4.1493, dt: 706.60ms, fracRes: 0.1700, norm(attn): 27.2500, norm(output): 0.4102, norm(x): 0.5487, norm(y): 0.9924, norm:0.4662, tok/sec: 185496.57, flops:194.73, batch-reuse:1
@ 3383 train 4.1543 , allloss: 4.1543, dt: 701.02ms, fracRes: 0.1696, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5366, norm(y): 0.9920, norm:0.4447, tok/sec: 186973.01, flops:196.28, batch-reuse:1
@ 3384 train 4.0974 , allloss: 4.0974, dt: 703.37ms, fracRes: 0.1694, norm(attn): 27.5000, norm(output): 0.4062, norm(x): 0.5434, norm(y): 0.9919, norm:0.4041, tok/sec: 186349.25, flops:195.63, batch-reuse:1
@ 3385 train 4.0557 , allloss: 4.0557, dt: 715.65ms, fracRes: 0.1691, norm(attn): 27.0000, norm(output): 0.4023, norm(x): 0.5439, norm(y): 0.9913, norm:0.4175, tok/sec: 183150.72, flops:192.27, batch-reuse:1
@ 3386 train 4.3162 , allloss: 4.3162, dt: 718.79ms, fracRes: 0.1696, norm(attn): 26.7500, norm(output): 0.4121, norm(x): 0.5543, norm(y): 0.9913, norm:0.6009, tok/sec: 182350.76, flops:191.43, batch-reuse:1
@ 3387 train 4.1402 , allloss: 4.1402, dt: 702.76ms, fracRes: 0.1683, norm(attn): 27.0000, norm(output): 0.4043, norm(x): 0.5438, norm(y): 0.9917, norm:0.4794, tok/sec: 186510.46, flops:195.80, batch-reuse:1
@ 3388 train 4.0068 , allloss: 4.0068, dt: 705.69ms, fracRes: 0.1689, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5434, norm(y): 0.9908, norm:0.4602, tok/sec: 185734.97, flops:194.98, batch-reuse:1
@ 3389 train 4.0492 , allloss: 4.0492, dt: 702.34ms, fracRes: 0.1673, norm(attn): 27.2500, norm(output): 0.3945, norm(x): 0.5345, norm(y): 0.9897, norm:0.4302, tok/sec: 186623.16, flops:195.92, batch-reuse:1
@ 3390 train 4.2203 , allloss: 4.2203, dt: 721.67ms, fracRes: 0.1686, norm(attn): 26.8750, norm(output): 0.4023, norm(x): 0.5418, norm(y): 0.9887, norm:0.4641, tok/sec: 181623.50, flops:190.67, batch-reuse:1
@ 3391 train 4.1810 , allloss: 4.1810, dt: 724.66ms, fracRes: 0.1695, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5417, norm(y): 0.9876, norm:0.3974, tok/sec: 180873.27, flops:189.88, batch-reuse:1
@ 3392 train 4.0825 , allloss: 4.0825, dt: 721.82ms, fracRes: 0.1696, norm(attn): 26.8750, norm(output): 0.4004, norm(x): 0.5419, norm(y): 0.9888, norm:0.4196, tok/sec: 181584.93, flops:190.63, batch-reuse:1
@ 3393 train 4.2316 , allloss: 4.2316, dt: 709.28ms, fracRes: 0.1707, norm(attn): 27.0000, norm(output): 0.4082, norm(x): 0.5505, norm(y): 0.9922, norm:0.4302, tok/sec: 184796.78, flops:194.00, batch-reuse:1
@ 3394 train 4.1671 , allloss: 4.1671, dt: 720.11ms, fracRes: 0.1703, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5371, norm(y): 0.9925, norm:0.3834, tok/sec: 182017.56, flops:191.08, batch-reuse:1
@ 3395 train 4.1032 , allloss: 4.1032, dt: 730.48ms, fracRes: 0.1700, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5414, norm(y): 0.9932, norm:0.3928, tok/sec: 179431.89, flops:188.37, batch-reuse:1
@ 3396 train 4.1328 , allloss: 4.1328, dt: 724.95ms, fracRes: 0.1694, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5387, norm(y): 0.9934, norm:0.3830, tok/sec: 180801.36, flops:189.81, batch-reuse:1
@ 3397 train 4.0915 , allloss: 4.0915, dt: 724.15ms, fracRes: 0.1690, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5426, norm(y): 0.9935, norm:0.3724, tok/sec: 181002.08, flops:190.02, batch-reuse:1
@ 3398 train 4.1712 , allloss: 4.1712, dt: 724.23ms, fracRes: 0.1680, norm(attn): 27.6250, norm(output): 0.4004, norm(x): 0.5405, norm(y): 0.9937, norm:0.3914, tok/sec: 180982.00, flops:190.00, batch-reuse:1
@ 3399 train 4.1099 , allloss: 4.1099, dt: 716.62ms, fracRes: 0.1693, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5416, norm(y): 0.9934, norm:0.3954, tok/sec: 182901.80, flops:192.01, batch-reuse:1
@ 3400 train 4.1338 , allloss: 4.1338, dt: 698.50ms, fracRes: 0.1698, norm(attn): 27.6250, norm(output): 0.4082, norm(x): 0.5472, norm(y): 0.9936, norm:0.4213, tok/sec: 187647.39, flops:196.99, batch-reuse:1
@ 3401 train 4.1299 , allloss: 4.1299, dt: 708.25ms, fracRes: 0.1682, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5431, norm(y): 0.9934, norm:0.3484, tok/sec: 185064.15, flops:194.28, batch-reuse:1
@ 3402 train 4.1060 , allloss: 4.1060, dt: 707.31ms, fracRes: 0.1682, norm(attn): 27.8750, norm(output): 0.4160, norm(x): 0.5521, norm(y): 0.9937, norm:0.4607, tok/sec: 185310.87, flops:194.54, batch-reuse:1
@ 3403 train 4.0870 , allloss: 4.0870, dt: 708.32ms, fracRes: 0.1686, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5438, norm(y): 0.9937, norm:0.3997, tok/sec: 185046.08, flops:194.26, batch-reuse:1
@ 3404 train 4.0581 , allloss: 4.0581, dt: 701.17ms, fracRes: 0.1685, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5399, norm(y): 0.9937, norm:0.3787, tok/sec: 186934.04, flops:196.24, batch-reuse:1
@ 3405 train 4.0713 , allloss: 4.0713, dt: 699.11ms, fracRes: 0.1684, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5369, norm(y): 0.9934, norm:0.4031, tok/sec: 187485.42, flops:196.82, batch-reuse:1
@ 3406 train 4.0653 , allloss: 4.0653, dt: 710.99ms, fracRes: 0.1690, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5399, norm(y): 0.9934, norm:0.3924, tok/sec: 184350.36, flops:193.53, batch-reuse:1
@ 3407 train 4.0932 , allloss: 4.0932, dt: 703.20ms, fracRes: 0.1690, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5419, norm(y): 0.9933, norm:0.3855, tok/sec: 186392.84, flops:195.68, batch-reuse:1
@ 3408 train 4.0799 , allloss: 4.0799, dt: 720.68ms, fracRes: 0.1708, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5510, norm(y): 0.9938, norm:0.3682, tok/sec: 181873.76, flops:190.93, batch-reuse:1
@ 3409 train 4.1886 , allloss: 4.1886, dt: 721.51ms, fracRes: 0.1723, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5553, norm(y): 0.9939, norm:0.4013, tok/sec: 181664.37, flops:190.71, batch-reuse:1
@ 3410 train 4.1621 , allloss: 4.1621, dt: 704.10ms, fracRes: 0.1717, norm(attn): 27.6250, norm(output): 0.4082, norm(x): 0.5540, norm(y): 0.9939, norm:0.4274, tok/sec: 186154.96, flops:195.43, batch-reuse:1
@ 3411 train 4.1404 , allloss: 4.1404, dt: 699.09ms, fracRes: 0.1709, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5428, norm(y): 0.9933, norm:0.4288, tok/sec: 187488.17, flops:196.83, batch-reuse:1
@ 3412 train 4.1328 , allloss: 4.1328, dt: 686.76ms, fracRes: 0.1706, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5492, norm(y): 0.9933, norm:0.4120, tok/sec: 190854.63, flops:200.36, batch-reuse:1
@ 3413 train 4.2019 , allloss: 4.2019, dt: 704.11ms, fracRes: 0.1704, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5474, norm(y): 0.9939, norm:0.4463, tok/sec: 186152.25, flops:195.42, batch-reuse:1
@ 3414 train 4.1134 , allloss: 4.1134, dt: 704.37ms, fracRes: 0.1698, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5461, norm(y): 0.9939, norm:0.4629, tok/sec: 186082.82, flops:195.35, batch-reuse:1
@ 3415 train 4.0651 , allloss: 4.0651, dt: 704.73ms, fracRes: 0.1690, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5431, norm(y): 0.9934, norm:0.3776, tok/sec: 185987.82, flops:195.25, batch-reuse:1
@ 3416 train 4.1211 , allloss: 4.1211, dt: 703.42ms, fracRes: 0.1691, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5488, norm(y): 0.9932, norm:0.4226, tok/sec: 186335.23, flops:195.62, batch-reuse:1
@ 3417 train 4.0757 , allloss: 4.0757, dt: 708.98ms, fracRes: 0.1703, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5480, norm(y): 0.9932, norm:0.4562, tok/sec: 184873.71, flops:194.08, batch-reuse:1
@ 3418 train 4.0244 , allloss: 4.0244, dt: 705.34ms, fracRes: 0.1716, norm(attn): 27.7500, norm(output): 0.4121, norm(x): 0.5544, norm(y): 0.9930, norm:0.3977, tok/sec: 185828.89, flops:195.08, batch-reuse:1
@ 3419 train 4.0802 , allloss: 4.0802, dt: 717.59ms, fracRes: 0.1703, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5519, norm(y): 0.9930, norm:0.3776, tok/sec: 182656.72, flops:191.75, batch-reuse:1
@ 3420 train 4.0991 , allloss: 4.0991, dt: 715.77ms, fracRes: 0.1674, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5466, norm(y): 0.9928, norm:0.3800, tok/sec: 183121.37, flops:192.24, batch-reuse:1
@ 3421 train 4.1344 , allloss: 4.1344, dt: 717.23ms, fracRes: 0.1678, norm(attn): 28.0000, norm(output): 0.4043, norm(x): 0.5461, norm(y): 0.9930, norm:0.4228, tok/sec: 182748.10, flops:191.85, batch-reuse:1
@ 3422 train 4.0977 , allloss: 4.0977, dt: 713.64ms, fracRes: 0.1698, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5439, norm(y): 0.9929, norm:0.3900, tok/sec: 183666.17, flops:192.81, batch-reuse:1
@ 3423 train 4.0685 , allloss: 4.0685, dt: 710.88ms, fracRes: 0.1700, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5446, norm(y): 0.9927, norm:0.3885, tok/sec: 184380.28, flops:193.56, batch-reuse:1
@ 3424 train 4.1223 , allloss: 4.1223, dt: 709.69ms, fracRes: 0.1680, norm(attn): 27.8750, norm(output): 0.3984, norm(x): 0.5362, norm(y): 0.9921, norm:0.4121, tok/sec: 184690.37, flops:193.89, batch-reuse:1
@ 3425 train 4.1185 , allloss: 4.1185, dt: 706.95ms, fracRes: 0.1689, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5371, norm(y): 0.9919, norm:0.3931, tok/sec: 185403.61, flops:194.64, batch-reuse:1
@ 3426 train 4.0755 , allloss: 4.0755, dt: 709.96ms, fracRes: 0.1704, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5442, norm(y): 0.9922, norm:0.3864, tok/sec: 184617.74, flops:193.81, batch-reuse:1
@ 3427 train 4.1245 , allloss: 4.1245, dt: 711.83ms, fracRes: 0.1699, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5422, norm(y): 0.9921, norm:0.4166, tok/sec: 184133.32, flops:193.30, batch-reuse:1
@ 3428 train 4.0344 , allloss: 4.0344, dt: 706.05ms, fracRes: 0.1692, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5426, norm(y): 0.9921, norm:0.3939, tok/sec: 185641.83, flops:194.89, batch-reuse:1
@ 3429 train 4.0389 , allloss: 4.0389, dt: 702.84ms, fracRes: 0.1695, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5481, norm(y): 0.9926, norm:0.3971, tok/sec: 186489.39, flops:195.78, batch-reuse:1
@ 3430 train 4.3230 , allloss: 4.3230, dt: 697.46ms, fracRes: 0.1703, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5498, norm(y): 0.9929, norm:0.5136, tok/sec: 187926.81, flops:197.29, batch-reuse:1
@ 3431 train 4.1912 , allloss: 4.1912, dt: 711.03ms, fracRes: 0.1686, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5404, norm(y): 0.9925, norm:0.8177, tok/sec: 184341.83, flops:193.52, batch-reuse:1
@ 3432 train 3.9912 , allloss: 3.9912, dt: 699.47ms, fracRes: 0.1705, norm(attn): 27.7500, norm(output): 0.4160, norm(x): 0.5572, norm(y): 0.9924, norm:0.8185, tok/sec: 187387.65, flops:196.72, batch-reuse:1
@ 3433 train 4.1277 , allloss: 4.1277, dt: 707.86ms, fracRes: 0.1683, norm(attn): 27.7500, norm(output): 0.4180, norm(x): 0.5572, norm(y): 0.9918, norm:0.9320, tok/sec: 185167.50, flops:194.39, batch-reuse:1
@ 3434 train 4.0771 , allloss: 4.0771, dt: 707.34ms, fracRes: 0.1688, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5501, norm(y): 0.9921, norm:0.5495, tok/sec: 185303.74, flops:194.53, batch-reuse:1
@ 3435 train 4.0440 , allloss: 4.0440, dt: 701.41ms, fracRes: 0.1677, norm(attn): 27.8750, norm(output): 0.3945, norm(x): 0.5297, norm(y): 0.9919, norm:0.5675, tok/sec: 186869.74, flops:196.18, batch-reuse:1
@ 3436 train 4.1004 , allloss: 4.1004, dt: 714.56ms, fracRes: 0.1665, norm(attn): 27.8750, norm(output): 0.3906, norm(x): 0.5235, norm(y): 0.9914, norm:0.5276, tok/sec: 183429.44, flops:192.56, batch-reuse:1
@ 3437 train 4.0688 , allloss: 4.0688, dt: 699.35ms, fracRes: 0.1682, norm(attn): 27.8750, norm(output): 0.3926, norm(x): 0.5292, norm(y): 0.9908, norm:0.5042, tok/sec: 187420.87, flops:196.75, batch-reuse:1
@ 3438 train 4.1426 , allloss: 4.1426, dt: 701.48ms, fracRes: 0.1705, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5478, norm(y): 0.9909, norm:0.4977, tok/sec: 186849.60, flops:196.16, batch-reuse:1
@ 3439 train 4.0170 , allloss: 4.0170, dt: 701.95ms, fracRes: 0.1707, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5437, norm(y): 0.9905, norm:0.4625, tok/sec: 186725.34, flops:196.02, batch-reuse:1
@ 3440 train 3.9794 , allloss: 3.9794, dt: 704.78ms, fracRes: 0.1702, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5387, norm(y): 0.9905, norm:0.4212, tok/sec: 185976.24, flops:195.24, batch-reuse:1
@ 3441 train 4.1110 , allloss: 4.1110, dt: 691.95ms, fracRes: 0.1706, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5412, norm(y): 0.9909, norm:0.4226, tok/sec: 189424.20, flops:198.86, batch-reuse:1
@ 3442 train 4.0742 , allloss: 4.0742, dt: 693.23ms, fracRes: 0.1701, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5431, norm(y): 0.9914, norm:0.4169, tok/sec: 189075.40, flops:198.49, batch-reuse:1
@ 3443 train 4.0460 , allloss: 4.0460, dt: 689.16ms, fracRes: 0.1699, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5424, norm(y): 0.9911, norm:0.4112, tok/sec: 190190.47, flops:199.66, batch-reuse:1
@ 3444 train 4.0225 , allloss: 4.0225, dt: 696.19ms, fracRes: 0.1697, norm(attn): 27.7500, norm(output): 0.4004, norm(x): 0.5380, norm(y): 0.9904, norm:0.4161, tok/sec: 188271.06, flops:197.65, batch-reuse:1
@ 3445 train 4.0471 , allloss: 4.0471, dt: 700.54ms, fracRes: 0.1706, norm(attn): 27.6250, norm(output): 0.4043, norm(x): 0.5432, norm(y): 0.9908, norm:0.4220, tok/sec: 187102.19, flops:196.42, batch-reuse:1
@ 3446 train 4.0428 , allloss: 4.0428, dt: 704.14ms, fracRes: 0.1715, norm(attn): 27.7500, norm(output): 0.4062, norm(x): 0.5474, norm(y): 0.9906, norm:0.4279, tok/sec: 186144.31, flops:195.41, batch-reuse:1
@ 3447 train 4.0933 , allloss: 4.0933, dt: 708.99ms, fracRes: 0.1707, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5377, norm(y): 0.9901, norm:0.4120, tok/sec: 184871.29, flops:194.08, batch-reuse:1
@ 3448 train 4.0224 , allloss: 4.0224, dt: 698.94ms, fracRes: 0.1715, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5397, norm(y): 0.9893, norm:0.3830, tok/sec: 187528.85, flops:196.87, batch-reuse:1
@ 3449 train 4.0719 , allloss: 4.0719, dt: 700.22ms, fracRes: 0.1720, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5430, norm(y): 0.9894, norm:0.3855, tok/sec: 187186.79, flops:196.51, batch-reuse:1
@ 3450 train 4.0133 , allloss: 4.0133, dt: 710.15ms, fracRes: 0.1700, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5406, norm(y): 0.9898, norm:0.3726, tok/sec: 184569.58, flops:193.76, batch-reuse:1
@ 3451 train 4.1151 , allloss: 4.1151, dt: 702.10ms, fracRes: 0.1702, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5508, norm(y): 0.9901, norm:0.4762, tok/sec: 186686.15, flops:195.98, batch-reuse:1
@ 3452 train 4.0790 , allloss: 4.0790, dt: 714.04ms, fracRes: 0.1693, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5398, norm(y): 0.9886, norm:0.4157, tok/sec: 183565.22, flops:192.71, batch-reuse:1
@ 3453 train 4.0686 , allloss: 4.0686, dt: 708.40ms, fracRes: 0.1707, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5447, norm(y): 0.9877, norm:0.4245, tok/sec: 185024.41, flops:194.24, batch-reuse:1
@ 3454 train 4.1114 , allloss: 4.1114, dt: 703.73ms, fracRes: 0.1699, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5419, norm(y): 0.9882, norm:0.5627, tok/sec: 186254.04, flops:195.53, batch-reuse:1
@ 3455 train 4.0466 , allloss: 4.0466, dt: 704.13ms, fracRes: 0.1696, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5381, norm(y): 0.9880, norm:0.5797, tok/sec: 186147.90, flops:195.42, batch-reuse:1
@ 3456 train 4.0022 , allloss: 4.0022, dt: 706.06ms, fracRes: 0.1688, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5353, norm(y): 0.9879, norm:0.4299, tok/sec: 185639.07, flops:194.88, batch-reuse:1
@ 3457 train 3.9994 , allloss: 3.9994, dt: 709.72ms, fracRes: 0.1695, norm(attn): 27.3750, norm(output): 0.4082, norm(x): 0.5456, norm(y): 0.9877, norm:0.4678, tok/sec: 184680.63, flops:193.88, batch-reuse:1
@ 3458 train 3.9703 , allloss: 3.9703, dt: 696.15ms, fracRes: 0.1685, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5384, norm(y): 0.9871, norm:0.4232, tok/sec: 188281.11, flops:197.66, batch-reuse:1
@ 3459 train 4.0316 , allloss: 4.0316, dt: 717.25ms, fracRes: 0.1728, norm(attn): 27.3750, norm(output): 0.3906, norm(x): 0.5349, norm(y): 0.9864, norm:0.5609, tok/sec: 182742.33, flops:191.84, batch-reuse:1
@ 3460 train 4.1249 , allloss: 4.1249, dt: 709.18ms, fracRes: 0.1712, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5453, norm(y): 0.9849, norm:0.4475, tok/sec: 184822.75, flops:194.03, batch-reuse:1
@ 3461 train 4.0355 , allloss: 4.0355, dt: 702.77ms, fracRes: 0.1725, norm(attn): 27.5000, norm(output): 0.3965, norm(x): 0.5395, norm(y): 0.9821, norm:0.3929, tok/sec: 186508.63, flops:195.80, batch-reuse:1
@ 3462 train 4.0284 , allloss: 4.0284, dt: 695.17ms, fracRes: 0.1712, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5442, norm(y): 0.9802, norm:0.3960, tok/sec: 188547.22, flops:197.94, batch-reuse:1
@ 3463 train 4.0556 , allloss: 4.0556, dt: 700.22ms, fracRes: 0.1694, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5409, norm(y): 0.9776, norm:0.4018, tok/sec: 187187.62, flops:196.51, batch-reuse:1
@ 3464 train 3.8931 , allloss: 3.8931, dt: 706.03ms, fracRes: 0.1686, norm(attn): 27.5000, norm(output): 0.3906, norm(x): 0.5295, norm(y): 0.9773, norm:0.4569, tok/sec: 185645.65, flops:194.89, batch-reuse:1
@ 3465 train 3.9964 , allloss: 3.9964, dt: 706.90ms, fracRes: 0.1702, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5406, norm(y): 0.9768, norm:0.4230, tok/sec: 185418.74, flops:194.65, batch-reuse:1
@ 3466 train 4.0385 , allloss: 4.0385, dt: 705.03ms, fracRes: 0.1699, norm(attn): 26.8750, norm(output): 0.3926, norm(x): 0.5323, norm(y): 0.9725, norm:0.3943, tok/sec: 185910.21, flops:195.17, batch-reuse:1
@ 3467 train 4.0567 , allloss: 4.0567, dt: 705.34ms, fracRes: 0.1698, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5329, norm(y): 0.9677, norm:0.4295, tok/sec: 185828.26, flops:195.08, batch-reuse:1
@ 3468 train 4.0187 , allloss: 4.0187, dt: 698.57ms, fracRes: 0.1695, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5327, norm(y): 0.9644, norm:0.4064, tok/sec: 187629.91, flops:196.97, batch-reuse:1
@ 3469 train 4.0500 , allloss: 4.0500, dt: 706.17ms, fracRes: 0.1699, norm(attn): 26.3750, norm(output): 0.3965, norm(x): 0.5338, norm(y): 0.9573, norm:0.4514, tok/sec: 185609.05, flops:194.85, batch-reuse:1
@ 3470 train 4.1307 , allloss: 4.1307, dt: 707.49ms, fracRes: 0.1709, norm(attn): 26.1250, norm(output): 0.4043, norm(x): 0.5412, norm(y): 0.9509, norm:0.3863, tok/sec: 185263.34, flops:194.49, batch-reuse:1
@ 3471 train 4.0463 , allloss: 4.0463, dt: 704.05ms, fracRes: 0.1720, norm(attn): 26.0000, norm(output): 0.4062, norm(x): 0.5471, norm(y): 0.9473, norm:0.4298, tok/sec: 186169.90, flops:195.44, batch-reuse:1
@ 3472 train 4.0618 , allloss: 4.0618, dt: 705.18ms, fracRes: 0.1708, norm(attn): 26.2500, norm(output): 0.3984, norm(x): 0.5367, norm(y): 0.9556, norm:0.4162, tok/sec: 185869.35, flops:195.13, batch-reuse:1
@ 3473 train 3.9700 , allloss: 3.9700, dt: 708.87ms, fracRes: 0.1722, norm(attn): 26.3750, norm(output): 0.4062, norm(x): 0.5454, norm(y): 0.9630, norm:0.3945, tok/sec: 184903.25, flops:194.11, batch-reuse:1
@ 3474 train 4.0113 , allloss: 4.0113, dt: 702.11ms, fracRes: 0.1700, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5413, norm(y): 0.9640, norm:0.4428, tok/sec: 186682.79, flops:195.98, batch-reuse:1
@ 3475 train 3.8912 , allloss: 3.8912, dt: 714.28ms, fracRes: 0.1700, norm(attn): 26.5000, norm(output): 0.4004, norm(x): 0.5343, norm(y): 0.9665, norm:0.3576, tok/sec: 183503.15, flops:192.64, batch-reuse:1
@ 3476 train 3.9690 , allloss: 3.9690, dt: 703.69ms, fracRes: 0.1700, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5327, norm(y): 0.9664, norm:0.4093, tok/sec: 186264.83, flops:195.54, batch-reuse:1
@ 3477 train 3.9011 , allloss: 3.9011, dt: 708.53ms, fracRes: 0.1690, norm(attn): 26.5000, norm(output): 0.3887, norm(x): 0.5290, norm(y): 0.9650, norm:0.3677, tok/sec: 184992.22, flops:194.21, batch-reuse:1
@ 3478 train 3.9759 , allloss: 3.9759, dt: 707.04ms, fracRes: 0.1689, norm(attn): 26.5000, norm(output): 0.3887, norm(x): 0.5266, norm(y): 0.9640, norm:0.3898, tok/sec: 185380.29, flops:194.61, batch-reuse:1
@ 3479 train 3.8538 , allloss: 3.8538, dt: 708.66ms, fracRes: 0.1702, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5333, norm(y): 0.9680, norm:0.3734, tok/sec: 184958.80, flops:194.17, batch-reuse:1
@ 3480 train 3.9948 , allloss: 3.9948, dt: 693.60ms, fracRes: 0.1698, norm(attn): 26.8750, norm(output): 0.3984, norm(x): 0.5372, norm(y): 0.9744, norm:0.4466, tok/sec: 188972.84, flops:198.38, batch-reuse:1
@ 3481 train 4.0012 , allloss: 4.0012, dt: 700.88ms, fracRes: 0.1698, norm(attn): 27.2500, norm(output): 0.4004, norm(x): 0.5399, norm(y): 0.9801, norm:0.4157, tok/sec: 187011.43, flops:196.32, batch-reuse:1
@ 3482 train 3.8264 , allloss: 3.8264, dt: 699.95ms, fracRes: 0.1694, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5501, norm(y): 0.9812, norm:0.4433, tok/sec: 187258.59, flops:196.58, batch-reuse:1
@ 3483 train 3.9694 , allloss: 3.9694, dt: 709.18ms, fracRes: 0.1667, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5307, norm(y): 0.9831, norm:0.4221, tok/sec: 184821.26, flops:194.03, batch-reuse:1
@ 3484 train 3.9413 , allloss: 3.9413, dt: 709.34ms, fracRes: 0.1687, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5352, norm(y): 0.9851, norm:0.3685, tok/sec: 184780.38, flops:193.98, batch-reuse:1
@ 3485 train 3.9085 , allloss: 3.9085, dt: 710.86ms, fracRes: 0.1704, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5378, norm(y): 0.9869, norm:0.4010, tok/sec: 184385.91, flops:193.57, batch-reuse:1
@ 3486 train 3.9392 , allloss: 3.9392, dt: 709.80ms, fracRes: 0.1712, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5438, norm(y): 0.9867, norm:0.4006, tok/sec: 184660.16, flops:193.86, batch-reuse:1
@ 3487 train 3.8627 , allloss: 3.8627, dt: 701.73ms, fracRes: 0.1687, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5308, norm(y): 0.9839, norm:0.3792, tok/sec: 186784.15, flops:196.09, batch-reuse:1
@ 3488 train 3.9735 , allloss: 3.9735, dt: 708.11ms, fracRes: 0.1678, norm(attn): 27.5000, norm(output): 0.3945, norm(x): 0.5308, norm(y): 0.9799, norm:0.3867, tok/sec: 185100.16, flops:194.32, batch-reuse:1
@ 3489 train 3.9468 , allloss: 3.9468, dt: 715.10ms, fracRes: 0.1710, norm(attn): 27.0000, norm(output): 0.4082, norm(x): 0.5479, norm(y): 0.9757, norm:0.3848, tok/sec: 183293.00, flops:192.42, batch-reuse:1
@ 3490 train 3.8813 , allloss: 3.8813, dt: 714.15ms, fracRes: 0.1708, norm(attn): 26.5000, norm(output): 0.4004, norm(x): 0.5414, norm(y): 0.9703, norm:0.4028, tok/sec: 183536.48, flops:192.68, batch-reuse:1
@ 3491 train 3.8928 , allloss: 3.8928, dt: 698.65ms, fracRes: 0.1708, norm(attn): 26.5000, norm(output): 0.3984, norm(x): 0.5387, norm(y): 0.9637, norm:0.3914, tok/sec: 187606.73, flops:196.95, batch-reuse:1
@ 3492 train 3.9791 , allloss: 3.9791, dt: 703.71ms, fracRes: 0.1710, norm(attn): 26.2500, norm(output): 0.3965, norm(x): 0.5363, norm(y): 0.9595, norm:0.4109, tok/sec: 186257.83, flops:195.53, batch-reuse:1
@ 3493 train 3.9438 , allloss: 3.9438, dt: 700.89ms, fracRes: 0.1709, norm(attn): 26.3750, norm(output): 0.3984, norm(x): 0.5350, norm(y): 0.9605, norm:0.4236, tok/sec: 187008.44, flops:196.32, batch-reuse:1
@ 3494 train 3.9305 , allloss: 3.9305, dt: 703.96ms, fracRes: 0.1718, norm(attn): 26.3750, norm(output): 0.4043, norm(x): 0.5410, norm(y): 0.9637, norm:0.3937, tok/sec: 186193.61, flops:195.47, batch-reuse:1
@ 3495 train 3.9421 , allloss: 3.9421, dt: 705.10ms, fracRes: 0.1727, norm(attn): 26.5000, norm(output): 0.3984, norm(x): 0.5379, norm(y): 0.9674, norm:0.4022, tok/sec: 185890.91, flops:195.15, batch-reuse:1
@ 3496 train 3.9569 , allloss: 3.9569, dt: 698.77ms, fracRes: 0.1722, norm(attn): 26.5000, norm(output): 0.4004, norm(x): 0.5389, norm(y): 0.9697, norm:0.3371, tok/sec: 187574.40, flops:196.92, batch-reuse:1
@ 3497 train 3.9059 , allloss: 3.9059, dt: 705.74ms, fracRes: 0.1721, norm(attn): 26.5000, norm(output): 0.3965, norm(x): 0.5367, norm(y): 0.9655, norm:0.3687, tok/sec: 185721.98, flops:194.97, batch-reuse:1
@ 3498 train 3.9027 , allloss: 3.9027, dt: 707.28ms, fracRes: 0.1734, norm(attn): 26.5000, norm(output): 0.4023, norm(x): 0.5442, norm(y): 0.9638, norm:0.3673, tok/sec: 185319.67, flops:194.55, batch-reuse:1
@ 3499 train 3.9493 , allloss: 3.9493, dt: 704.60ms, fracRes: 0.1724, norm(attn): 26.5000, norm(output): 0.3945, norm(x): 0.5389, norm(y): 0.9650, norm:0.4014, tok/sec: 186023.38, flops:195.29, batch-reuse:1
@ 3500 train 3.8362 , allloss: 3.8362, dt: 695.46ms, fracRes: 0.1726, norm(attn): 26.1250, norm(output): 0.4004, norm(x): 0.5404, norm(y): 0.9583, norm:0.4309, tok/sec: 188466.88, flops:197.85, batch-reuse:1
@ 3501 train 3.8036 , allloss: 3.8036, dt: 695.61ms, fracRes: 0.1707, norm(attn): 26.1250, norm(output): 0.3984, norm(x): 0.5363, norm(y): 0.9447, norm:0.3854, tok/sec: 188428.38, flops:197.81, batch-reuse:1
@ 3502 train 3.8709 , allloss: 3.8709, dt: 694.13ms, fracRes: 0.1707, norm(attn): 25.7500, norm(output): 0.3965, norm(x): 0.5368, norm(y): 0.9237, norm:0.4379, tok/sec: 188829.52, flops:198.23, batch-reuse:1
@ 3503 train 3.9344 , allloss: 3.9344, dt: 701.50ms, fracRes: 0.1708, norm(attn): 25.0000, norm(output): 0.3906, norm(x): 0.5300, norm(y): 0.9083, norm:1.2204, tok/sec: 186846.62, flops:196.15, batch-reuse:1
@ 3504 train 3.8704 , allloss: 3.8704, dt: 700.93ms, fracRes: 0.1709, norm(attn): 26.5000, norm(output): 0.3926, norm(x): 0.5322, norm(y): 0.9633, norm:0.4492, tok/sec: 186998.52, flops:196.31, batch-reuse:1
@ 3505 train 3.8493 , allloss: 3.8493, dt: 716.03ms, fracRes: 0.1705, norm(attn): 27.2500, norm(output): 0.4043, norm(x): 0.5386, norm(y): 0.9822, norm:0.4426, tok/sec: 183053.69, flops:192.17, batch-reuse:1
@ 3506 train 3.8048 , allloss: 3.8048, dt: 723.18ms, fracRes: 0.1731, norm(attn): 27.0000, norm(output): 0.4102, norm(x): 0.5513, norm(y): 0.9862, norm:0.4703, tok/sec: 181244.71, flops:190.27, batch-reuse:1
@ 3507 train 3.8817 , allloss: 3.8817, dt: 719.94ms, fracRes: 0.1742, norm(attn): 27.0000, norm(output): 0.4082, norm(x): 0.5513, norm(y): 0.9875, norm:0.4153, tok/sec: 182060.59, flops:191.13, batch-reuse:1
@ 3508 train 4.0144 , allloss: 4.0144, dt: 711.91ms, fracRes: 0.1763, norm(attn): 27.2500, norm(output): 0.4102, norm(x): 0.5554, norm(y): 0.9879, norm:0.4479, tok/sec: 184112.66, flops:193.28, batch-reuse:1
@ 3509 train 3.9201 , allloss: 3.9201, dt: 713.55ms, fracRes: 0.1729, norm(attn): 27.2500, norm(output): 0.4121, norm(x): 0.5550, norm(y): 0.9879, norm:0.4652, tok/sec: 183691.20, flops:192.84, batch-reuse:1
@ 3510 train 3.9181 , allloss: 3.9181, dt: 703.33ms, fracRes: 0.1703, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5379, norm(y): 0.9882, norm:0.4180, tok/sec: 186359.80, flops:195.64, batch-reuse:1
@ 3511 train 3.9603 , allloss: 3.9603, dt: 716.47ms, fracRes: 0.1723, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5459, norm(y): 0.9895, norm:0.4145, tok/sec: 182942.40, flops:192.05, batch-reuse:1
@ 3512 train 3.9636 , allloss: 3.9636, dt: 717.68ms, fracRes: 0.1740, norm(attn): 27.6250, norm(output): 0.4082, norm(x): 0.5503, norm(y): 0.9900, norm:0.4333, tok/sec: 182632.39, flops:191.73, batch-reuse:1
@ 3513 train 3.9308 , allloss: 3.9308, dt: 715.58ms, fracRes: 0.1718, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5413, norm(y): 0.9905, norm:0.4646, tok/sec: 183169.21, flops:192.29, batch-reuse:1
@ 3514 train 4.0283 , allloss: 4.0283, dt: 712.88ms, fracRes: 0.1697, norm(attn): 27.6250, norm(output): 0.4004, norm(x): 0.5380, norm(y): 0.9907, norm:0.4569, tok/sec: 183861.44, flops:193.02, batch-reuse:1
@ 3515 train 3.9103 , allloss: 3.9103, dt: 716.56ms, fracRes: 0.1699, norm(attn): 27.7500, norm(output): 0.4023, norm(x): 0.5409, norm(y): 0.9903, norm:0.4318, tok/sec: 182917.56, flops:192.03, batch-reuse:1
@ 3516 train 4.0207 , allloss: 4.0207, dt: 709.66ms, fracRes: 0.1717, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5483, norm(y): 0.9906, norm:0.4590, tok/sec: 184697.50, flops:193.90, batch-reuse:1
@ 3517 train 3.9714 , allloss: 3.9714, dt: 711.74ms, fracRes: 0.1722, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5414, norm(y): 0.9904, norm:0.4354, tok/sec: 184157.26, flops:193.33, batch-reuse:1
@ 3518 train 3.9741 , allloss: 3.9741, dt: 708.26ms, fracRes: 0.1719, norm(attn): 27.5000, norm(output): 0.4062, norm(x): 0.5439, norm(y): 0.9904, norm:0.4661, tok/sec: 185062.34, flops:194.28, batch-reuse:1
@ 3519 train 3.8659 , allloss: 3.8659, dt: 700.93ms, fracRes: 0.1718, norm(attn): 26.7500, norm(output): 0.4141, norm(x): 0.5514, norm(y): 0.9896, norm:0.4299, tok/sec: 186996.80, flops:196.31, batch-reuse:1
@ 3520 train 3.8637 , allloss: 3.8637, dt: 694.45ms, fracRes: 0.1728, norm(attn): 26.5000, norm(output): 0.4160, norm(x): 0.5624, norm(y): 0.9896, norm:0.4787, tok/sec: 188743.04, flops:198.14, batch-reuse:1
@ 3521 train 3.8994 , allloss: 3.8994, dt: 707.84ms, fracRes: 0.1712, norm(attn): 26.7500, norm(output): 0.4004, norm(x): 0.5413, norm(y): 0.9892, norm:0.4021, tok/sec: 185172.80, flops:194.39, batch-reuse:1
@ 3522 train 4.1154 , allloss: 4.1154, dt: 707.71ms, fracRes: 0.1751, norm(attn): 26.5000, norm(output): 0.4082, norm(x): 0.5592, norm(y): 0.9892, norm:0.6598, tok/sec: 185204.92, flops:194.43, batch-reuse:1
@ 3523 train 3.9640 , allloss: 3.9640, dt: 707.34ms, fracRes: 0.1705, norm(attn): 26.5000, norm(output): 0.3984, norm(x): 0.5414, norm(y): 0.9863, norm:0.5111, tok/sec: 185303.43, flops:194.53, batch-reuse:1
@ 3524 train 3.9506 , allloss: 3.9506, dt: 706.23ms, fracRes: 0.1708, norm(attn): 26.5000, norm(output): 0.4102, norm(x): 0.5503, norm(y): 0.9861, norm:0.4696, tok/sec: 185594.39, flops:194.84, batch-reuse:1
@ 3525 train 3.9463 , allloss: 3.9463, dt: 699.50ms, fracRes: 0.1705, norm(attn): 26.5000, norm(output): 0.4102, norm(x): 0.5521, norm(y): 0.9847, norm:0.4645, tok/sec: 187378.77, flops:196.71, batch-reuse:1
@ 3526 train 4.0823 , allloss: 4.0823, dt: 693.83ms, fracRes: 0.1719, norm(attn): 26.1250, norm(output): 0.4043, norm(x): 0.5485, norm(y): 0.9798, norm:0.4643, tok/sec: 188911.08, flops:198.32, batch-reuse:1
@ 3527 train 4.0897 , allloss: 4.0897, dt: 709.03ms, fracRes: 0.1723, norm(attn): 26.2500, norm(output): 0.4023, norm(x): 0.5446, norm(y): 0.9792, norm:0.4249, tok/sec: 184860.10, flops:194.07, batch-reuse:1
@ 3528 train 4.1298 , allloss: 4.1298, dt: 699.68ms, fracRes: 0.1722, norm(attn): 26.3750, norm(output): 0.4023, norm(x): 0.5465, norm(y): 0.9826, norm:0.4044, tok/sec: 187330.69, flops:196.66, batch-reuse:1
@ 3529 train 4.1831 , allloss: 4.1831, dt: 717.51ms, fracRes: 0.1731, norm(attn): 26.5000, norm(output): 0.4102, norm(x): 0.5514, norm(y): 0.9830, norm:0.4320, tok/sec: 182676.32, flops:191.77, batch-reuse:1
@ 3530 train 4.1441 , allloss: 4.1441, dt: 717.69ms, fracRes: 0.1733, norm(attn): 26.5000, norm(output): 0.4121, norm(x): 0.5544, norm(y): 0.9805, norm:0.3980, tok/sec: 182631.36, flops:191.73, batch-reuse:1
@ 3531 train 4.3181 , allloss: 4.3181, dt: 716.31ms, fracRes: 0.1743, norm(attn): 26.5000, norm(output): 0.4121, norm(x): 0.5541, norm(y): 0.9785, norm:0.4509, tok/sec: 182981.61, flops:192.09, batch-reuse:1
@ 3532 train 4.1540 , allloss: 4.1540, dt: 691.12ms, fracRes: 0.1748, norm(attn): 26.3750, norm(output): 0.4102, norm(x): 0.5511, norm(y): 0.9693, norm:0.3992, tok/sec: 189651.80, flops:199.10, batch-reuse:1
@ 3533 train 4.2527 , allloss: 4.2527, dt: 699.64ms, fracRes: 0.1732, norm(attn): 26.3750, norm(output): 0.4062, norm(x): 0.5465, norm(y): 0.9388, norm:0.4998, tok/sec: 187341.35, flops:196.67, batch-reuse:1
@ 3534 train 4.0404 , allloss: 4.0404, dt: 709.83ms, fracRes: 0.1724, norm(attn): 26.5000, norm(output): 0.4062, norm(x): 0.5479, norm(y): 0.9830, norm:0.4203, tok/sec: 184651.72, flops:193.85, batch-reuse:1
@ 3535 train 4.2380 , allloss: 4.2380, dt: 692.23ms, fracRes: 0.1737, norm(attn): 26.7500, norm(output): 0.4297, norm(x): 0.5728, norm(y): 0.9900, norm:0.6092, tok/sec: 189347.67, flops:198.78, batch-reuse:1
@ 3536 train 4.0692 , allloss: 4.0692, dt: 710.78ms, fracRes: 0.1714, norm(attn): 27.2500, norm(output): 0.4102, norm(x): 0.5514, norm(y): 0.9919, norm:0.5392, tok/sec: 184405.83, flops:193.59, batch-reuse:1
@ 3537 train 4.1590 , allloss: 4.1590, dt: 709.93ms, fracRes: 0.1725, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5562, norm(y): 0.9926, norm:0.4516, tok/sec: 184626.98, flops:193.82, batch-reuse:1
@ 3538 train 4.0744 , allloss: 4.0744, dt: 708.06ms, fracRes: 0.1700, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5570, norm(y): 0.9927, norm:0.4895, tok/sec: 185113.50, flops:194.33, batch-reuse:1
@ 3539 train 4.0617 , allloss: 4.0617, dt: 705.20ms, fracRes: 0.1706, norm(attn): 27.3750, norm(output): 0.4121, norm(x): 0.5515, norm(y): 0.9927, norm:0.4299, tok/sec: 185864.51, flops:195.12, batch-reuse:1
@ 3540 train 4.1115 , allloss: 4.1115, dt: 716.13ms, fracRes: 0.1711, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5504, norm(y): 0.9927, norm:0.4513, tok/sec: 183029.50, flops:192.14, batch-reuse:1
@ 3541 train 4.0927 , allloss: 4.0927, dt: 707.98ms, fracRes: 0.1725, norm(attn): 27.0000, norm(output): 0.4141, norm(x): 0.5559, norm(y): 0.9928, norm:0.4317, tok/sec: 185135.69, flops:194.36, batch-reuse:1
@ 3542 train 4.0959 , allloss: 4.0959, dt: 716.16ms, fracRes: 0.1732, norm(attn): 27.2500, norm(output): 0.4180, norm(x): 0.5634, norm(y): 0.9927, norm:0.4253, tok/sec: 183020.17, flops:192.13, batch-reuse:1
@ 3543 train 4.2131 , allloss: 4.2131, dt: 715.91ms, fracRes: 0.1731, norm(attn): 27.2500, norm(output): 0.4180, norm(x): 0.5582, norm(y): 0.9928, norm:0.4063, tok/sec: 183084.35, flops:192.20, batch-reuse:1
@ 3544 train 4.0474 , allloss: 4.0474, dt: 716.86ms, fracRes: 0.1715, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5500, norm(y): 0.9927, norm:0.4235, tok/sec: 182842.01, flops:191.95, batch-reuse:1
@ 3545 train 4.0726 , allloss: 4.0726, dt: 713.64ms, fracRes: 0.1724, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5517, norm(y): 0.9929, norm:0.4126, tok/sec: 183668.07, flops:192.82, batch-reuse:1
@ 3546 train 4.0739 , allloss: 4.0739, dt: 713.49ms, fracRes: 0.1727, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5482, norm(y): 0.9925, norm:0.3723, tok/sec: 183704.52, flops:192.85, batch-reuse:1
@ 3547 train 4.0395 , allloss: 4.0395, dt: 707.85ms, fracRes: 0.1729, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5507, norm(y): 0.9927, norm:0.3994, tok/sec: 185169.74, flops:194.39, batch-reuse:1
@ 3548 train 4.0303 , allloss: 4.0303, dt: 712.45ms, fracRes: 0.1736, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5558, norm(y): 0.9928, norm:0.4062, tok/sec: 183973.91, flops:193.14, batch-reuse:1
@ 3549 train 4.0192 , allloss: 4.0192, dt: 713.44ms, fracRes: 0.1721, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5528, norm(y): 0.9929, norm:0.3718, tok/sec: 183718.46, flops:192.87, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1338, 0.8672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8516, 0.1050, 0.0432, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5703, 0.1924, 0.1768, 0.0615, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6445, 0.1650, 0.0559, 0.0972, 0.0393, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5820, 0.1465, 0.0640, 0.0747, 0.0469, 0.0859, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3008, 0.2275, 0.0625, 0.0620, 0.0703, 0.1758, 0.1006, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2891, 0.1572, 0.0630, 0.0532, 0.0889, 0.1523, 0.1167, 0.0796, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1631, 0.1641, 0.0522, 0.0608, 0.0889, 0.2656, 0.0947, 0.0645, 0.0459, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.1758, 0.0732, 0.0505, 0.0913, 0.1387, 0.1445, 0.0659, 0.0522, 0.0190, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1147, 0.0669, 0.0223, 0.0391, 0.0781, 0.3164, 0.1465, 0.0684, 0.0884, 0.0139, 0.0452, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0513, 0.1279, 0.0415, 0.0396, 0.0806, 0.1611, 0.1904, 0.0830, 0.1108, 0.0596, 0.0315, 0.0232, 0.0000, 0.0000, 0.0000],
        [0.1396, 0.0835, 0.0072, 0.0187, 0.0442, 0.2441, 0.1758, 0.0796, 0.1045, 0.0151, 0.0408, 0.0090, 0.0378, 0.0000, 0.0000],
        [0.0464, 0.0796, 0.0187, 0.0255, 0.0537, 0.2305, 0.1250, 0.0815, 0.0972, 0.0337, 0.0933, 0.0233, 0.0444, 0.0471, 0.0000],
        [0.0221, 0.0337, 0.0119, 0.0135, 0.0466, 0.0894, 0.1250, 0.0762, 0.1738, 0.0752, 0.0952, 0.0393, 0.0557, 0.1191, 0.0225]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0188,     -0.9766,     -1.5156,     -1.1406,     -1.1875,     -0.7930,     -0.9648,     -0.8750,     -1.0156,     -1.6641,     -1.2266,     -1.7500,     -0.8672,     -1.0547,     -1.3750],
        [     0.0439,      1.9062,      0.2100,     -0.0498,      0.3105,      0.6758,      0.9141,      0.3301,      0.9492,      0.2393,      0.2266,     -0.7422,     -0.1226,      0.3770,      0.2119],
        [     0.0009,     -2.0938,     -2.9844,     -2.7656,     -3.0000,     -2.6406,     -2.7656,     -2.5781,     -2.9688,     -3.6875,     -3.5938,     -3.3125,     -2.5469,     -3.3438,     -3.2656],
        [    -0.0057,     -1.0938,     -1.1719,     -2.2344,     -1.7734,     -2.1562,     -1.9375,     -1.7500,     -2.4688,     -2.3750,     -2.6562,     -1.8672,     -1.5469,     -2.7812,     -2.4375],
        [     0.0153,     -1.3438,     -2.4219,     -1.8750,     -2.7812,     -1.4531,     -2.0469,     -2.0000,     -2.6094,     -3.7344,     -3.1250,     -3.3125,     -2.0781,     -2.7812,     -2.8906],
        [     0.0143,     -1.3672,     -2.1875,     -2.0312,     -2.5000,     -1.8984,     -1.9688,     -1.8672,     -2.1719,     -3.2031,     -2.2031,     -2.7500,     -1.7500,     -2.3125,     -2.5781],
        [     0.0483,     -0.2314,     -1.5234,     -1.5312,     -1.4062,     -0.4883,     -1.0469,     -1.3438,     -1.2109,     -2.5312,     -1.8984,     -2.6406,     -1.3672,     -1.2188,     -1.3672],
        [     0.0400,     -0.5703,     -1.4844,     -1.6484,     -1.1406,     -0.6016,     -0.8672,     -1.2500,     -1.2734,     -2.3594,     -1.5234,     -2.1094,     -1.1641,     -1.0547,     -1.4062],
        [     0.0498,      0.0569,     -1.0859,     -0.9375,     -0.5547,      0.5352,     -0.4941,     -0.8750,     -1.2188,     -2.3750,     -1.2734,     -2.3438,     -1.0391,     -1.2422,     -1.5625],
        [     0.0508,     -0.0171,     -0.8906,     -1.2656,     -0.6758,     -0.2578,     -0.2139,     -1.0000,     -1.2344,     -2.2344,     -1.7422,     -1.6641,     -1.0703,     -0.9531,     -1.1406],
        [     0.0820,     -0.4570,     -1.5469,     -0.9961,     -0.2988,      1.1016,      0.3281,     -0.4316,     -0.1797,     -2.0312,     -0.8477,     -2.8438,     -0.8750,     -0.3809,     -1.3672],
        [     0.0757,      0.9883,     -0.1357,     -0.1846,      0.5273,      1.2188,      1.3828,      0.5547,      0.8438,      0.2246,     -0.4102,     -0.7188,      0.2949,      0.5898,     -0.0947],
        [     0.0981,     -0.4180,     -2.8750,     -1.9141,     -1.0547,      0.6562,      0.3281,     -0.4629,     -0.1914,     -2.1250,     -1.1328,     -2.6562,     -1.2109,     -1.0000,     -1.7500],
        [     0.0679,      0.6055,     -0.8438,     -0.5273,      0.2139,      1.6719,      1.0625,      0.6328,      0.8086,     -0.2490,      0.7656,     -0.6211,      0.0259,      0.0840,     -0.4863],
        [     0.0742,      0.4941,     -0.5508,     -0.4238,      0.8203,      1.4688,      1.8047,      1.3125,      2.1406,      1.2969,      1.5312,      0.6484,      0.9961,      1.7578,      0.0874]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4368],
        [0.3071],
        [0.1961],
        [0.2438],
        [0.2046],
        [0.1721],
        [0.1511],
        [0.1584],
        [0.0865],
        [0.1354],
        [0.0540],
        [0.1386],
        [0.1138],
        [0.0498]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9414,     0.0579,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9961,     0.0028,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0100,     0.0003,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9727,     0.0007,     0.0004,     0.0007,     0.0245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8789,     0.0019,     0.0000,     0.0014,     0.0062,     0.1123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8594,     0.0049,     0.0010,     0.0055,     0.0008,     0.0183,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8516,     0.0168,     0.0010,     0.0007,     0.0222,     0.0270,     0.0259,     0.0552,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.9219,     0.0030,     0.0014,     0.0011,     0.0012,     0.0198,     0.0041,     0.0400,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7344,     0.0020,     0.0008,     0.0021,     0.0052,     0.0474,     0.0157,     0.1533,     0.0095,     0.0284,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.3867,     0.0187,     0.0011,     0.0112,     0.0200,     0.0226,     0.4473,     0.0393,     0.0064,     0.0046,     0.0430,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3984,     0.0045,     0.0018,     0.0003,     0.0016,     0.0579,     0.0332,     0.4570,     0.0084,     0.0001,     0.0126,     0.0239,     0.0000,     0.0000],
        [    0.0001,     0.1904,     0.0060,     0.0013,     0.0002,     0.0094,     0.0092,     0.0073,     0.0168,     0.6797,     0.0007,     0.0197,     0.0019,     0.0559,     0.0000],
        [    0.0001,     0.5625,     0.0442,     0.0013,     0.0024,     0.0002,     0.0052,     0.0052,     0.0233,     0.0601,     0.0030,     0.0142,     0.0002,     0.0019,     0.2754]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0073,      0.5742,      0.3066,     -0.0198,      0.1465,      0.2412,      0.3066,      0.3047,      0.2422,      0.1709,     -0.1030,      0.2441,      0.1201,      0.0547,      0.1885],
        [     0.0894,      8.0625,      6.7188,      1.2344,      2.5156,      4.1875,      4.5312,      5.0000,      3.6406,      3.7031,      0.0796,      3.8438,      0.7734,      1.0078,      4.2500],
        [     0.0786,     10.0625,      7.2812,     14.3750,      8.0625,      5.7188,      7.5938,      3.3281,      6.5000,      4.8750,      3.3906,      2.8125,      2.6719,      4.9062,      6.4375],
        [     0.1221,     12.4375,      6.5938,      5.4688,     13.0625,      6.3750,      8.8750,      8.5000,      9.1875,      6.4375,      1.5547,      4.9375,      5.3750,      2.7812,      6.6875],
        [     0.1533,     11.2500,      6.6562,      3.2656,      5.5625,     11.8750,      9.0000,      8.5000,      5.1875,      6.0625,     -2.2344,      5.5938,      2.0938,      2.4062,      6.0000],
        [     0.1318,     10.8750,      3.5781,      3.0625,      3.6250,      7.1875,     11.6250,      9.5000,      8.2500,      4.7812,      0.9883,      5.4375,      3.5000,      4.9375,      6.0000],
        [     0.1143,     10.3750,      4.1875,     -1.1250,      3.8906,      5.3750,      8.3125,     11.9375,      8.1250,      5.4375,      0.1289,      6.7812,      5.5938,      4.2188,      5.5938],
        [     0.1099,      9.6250,      4.5000,      2.8594,      4.5938,      2.6406,      5.8125,      7.5938,     11.0000,      6.0938,      0.0554,      5.4375,      5.1875,      8.5000,      5.9375],
        [     0.1523,      8.6250,      4.6875,      1.8672,      1.4453,      4.9688,      5.1562,      5.1250,      5.8750,      9.1250,      1.9922,      6.2812,      2.0469,      4.4062,      9.1250],
        [     0.0420,      8.1875,      2.4844,      1.7188,      1.4688,      1.5469,      4.3750,      2.7969,      5.0938,      3.5781,     11.0625,      6.7500,      4.5000,      5.9062,      6.1250],
        [     0.1069,      9.1250,      3.2188,      2.3281,      3.2656,      4.1562,      6.3750,      5.2500,      7.5312,      4.7500,      5.8438,     10.3750,      5.2188,      7.0312,      7.3125],
        [    -0.0330,      6.4688,      3.4375,      0.6172,      2.9375,      3.5156,      3.6406,      6.6250,      4.1875,      2.3750,      2.0469,      4.2812,     13.2500,      6.0312,      4.3750],
        [     0.0581,      9.6875,      5.1875,      4.2812,      2.6250,      4.1562,      7.7500,      7.1875,      9.8125,      5.8125,      1.6797,      6.2188,      6.8750,     13.4375,      9.0000],
        [     0.0962,      7.9688,      4.5000,      2.9688,      1.2578,      4.9688,      4.9375,      4.7188,      5.5312,      9.2500,      2.3281,      5.6875,      3.3438,      6.7500,     11.3125],
        [     0.0703,      8.7500,      6.2188,      2.7031,      3.3281,      0.6484,      4.0938,      4.0938,      5.5938,      6.5312,      3.5469,      5.0938,      0.9883,      3.0625,      8.0625]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3652],
        [0.3052],
        [0.2671],
        [0.2728],
        [0.3327],
        [0.1599],
        [0.1869],
        [0.2369],
        [0.2226],
        [0.1997],
        [0.1973],
        [0.1768],
        [0.1885],
        [0.1581]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0034,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0062,     0.5234,     0.4688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0659,     0.7461,     0.1748,     0.0128,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.6758,     0.0422,     0.0002,     0.2773,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.7969,     0.0620,     0.0486,     0.0483,     0.0020,     0.0437,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0393,     0.2578,     0.0356,     0.0006,     0.0361,     0.0007,     0.6289,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.0332,     0.0106,     0.0236,     0.0010,     0.0061,     0.8086,     0.1147,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.1807,     0.0259,     0.0002,     0.0021,     0.0003,     0.0000,     0.0001,     0.7891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0099,     0.3984,     0.1318,     0.0076,     0.0366,     0.0243,     0.0036,     0.0157,     0.1729,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.2314,     0.0933,     0.0031,     0.0121,     0.0140,     0.0006,     0.0107,     0.2715,     0.0588,     0.3047,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0102,     0.0128,     0.0737,     0.0002,     0.2051,     0.0087,     0.5859,     0.0020,     0.0574,     0.0206,     0.0240,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.0149,     0.0092,     0.0233,     0.0002,     0.0203,     0.2266,     0.2559,     0.0005,     0.0147,     0.0031,     0.2578,     0.1699,     0.0000,     0.0000],
        [    0.0007,     0.1016,     0.0254,     0.0011,     0.0005,     0.0024,     0.0000,     0.0033,     0.1963,     0.0320,     0.1514,     0.0210,     0.0132,     0.4531,     0.0000],
        [    0.0014,     0.2598,     0.0422,     0.0162,     0.0038,     0.0359,     0.0048,     0.0986,     0.0332,     0.0262,     0.0549,     0.0247,     0.1475,     0.1079,     0.1436]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0012,     -0.0388,     -0.0525,     -0.0542,     -0.0356,     -0.0610,     -0.0349,     -0.0605,     -0.0527,     -0.0374,     -0.0659,     -0.0276,     -0.0405,     -0.0500,     -0.0483],
        [    -0.0815,      5.5938,      3.3281,     -0.0187,      2.5469,      2.6562,      0.8398,      1.0312,      0.4062,      0.3457,     -0.4902,      0.8828,      1.1875,     -0.4141,      3.7500],
        [     0.0781,      4.5312,      4.4062,      5.7812,      3.2500,      6.5625,      4.5938,      7.0938,      3.3125,      4.0625,      4.4062,      4.8438,      4.3750,      2.5312,      3.1875],
        [    -0.1738,      2.2500,      0.8008,     -1.8203,      0.5742,     -1.9062,      0.9336,     -2.5938,     -1.7031,     -1.2422,     -1.6484,      2.6875,     -1.8359,     -1.3125,      3.2344],
        [     0.0393,      5.5625,      2.7969,     -2.4375,      4.6875,     -2.2188,     -5.3750,     -4.6250,      6.7500,      1.4922,      5.1250,      1.0156,     -2.3750,      4.7188,      1.3438],
        [    -0.2441,     -2.7969,     -3.0469,     -3.0469,     -6.2500,     -3.1406,      4.8438,     -0.9844,    -10.4375,     -2.8125,     -8.1250,      2.8906,     -3.7500,     -9.6875,      0.6094],
        [    -0.2217,      1.6641,     -0.3184,     -4.3125,     -0.3066,     -4.2812,      2.5469,     -4.0000,     -3.4688,     -2.0781,     -3.7344,      2.3750,     -4.0625,     -3.3281,      3.3125],
        [    -0.1152,      2.1250,      0.9766,      1.7812,     -1.4062,      0.4277,      5.3125,      3.3594,     -3.5312,      1.0000,     -1.6172,      5.4375,      0.9492,     -2.5625,      1.9062],
        [     0.0713,      6.9062,      4.9688,     -0.0884,      2.4688,      0.5508,     -5.1562,     -0.4922,      8.3750,      3.8594,      7.1250,      3.5938,      0.3379,      7.6562,      5.7812],
        [    -0.0073,      3.6875,      2.5781,     -0.2676,      1.2969,      0.8906,     -1.0234,      0.4590,      2.8438,      2.9844,      2.9844,      3.6250,     -0.4922,      2.1875,      2.6719],
        [     0.0923,      7.1875,      6.2812,      2.8594,      4.2188,      4.3750,      1.2500,      4.1250,      7.3438,      5.8125,      7.4688,      4.8750,      2.5938,      6.2188,      6.2812],
        [     0.0933,      3.8594,      4.0938,      5.8438,     -0.3516,      6.8750,      3.7031,      7.9062,      2.2188,      5.5938,      4.5625,      4.7188,      3.9062,      2.4844,      2.9688],
        [    -0.0608,      1.6016,      1.1172,      2.0469,     -2.6875,      1.9062,      4.3125,      4.4375,     -1.7734,      1.5859,      0.0454,      4.4375,      4.0312,      0.0157,      4.0938],
        [     0.0649,      5.0938,      3.6875,      0.5352,     -0.3301,      1.3281,     -3.3594,      1.6562,      5.7500,      3.9219,      5.4688,      3.5000,      3.0312,      6.5625,      5.9375],
        [     0.0170,      5.2500,      3.4375,      2.4844,      1.0156,      3.2812,      1.2656,      4.2812,      3.2031,      2.9688,      3.7031,      2.9062,      4.6875,      4.3750,      4.6562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5711],
        [0.1429],
        [0.3591],
        [0.3333],
        [0.2511],
        [0.2071],
        [0.1842],
        [0.1917],
        [0.2003],
        [0.1709],
        [0.0641],
        [0.1674],
        [0.1666],
        [0.1105]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0003,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0001,     0.0003,     0.0000,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0184,     -0.7070,     -0.7695,     -1.1484,     -0.8047,     -0.6367,     -0.8164,     -0.8672,     -1.0156,     -1.0078,     -0.9375,     -1.1953,     -0.8984,     -1.0078,     -1.1797],
        [    -0.5430,    -21.6250,    -23.6250,    -36.2500,    -25.5000,    -20.6250,    -26.1250,    -28.1250,    -31.7500,    -31.1250,    -29.5000,    -37.7500,    -29.3750,    -31.6250,    -37.0000],
        [    -0.1299,     -8.2500,     -5.0938,    -11.0625,     -8.7500,     -8.5625,     -8.8125,    -11.1875,     -9.7500,    -10.8125,    -11.0625,    -11.3125,    -11.5000,    -10.4375,    -10.6875],
        [    -0.3066,    -14.4375,    -13.7500,    -21.2500,    -15.9375,    -14.1250,    -16.6250,    -17.8750,    -19.0000,    -20.2500,    -18.2500,    -22.6250,    -18.1250,    -18.6250,    -21.1250],
        [    -0.5664,    -22.3750,    -23.5000,    -34.0000,    -25.3750,    -19.6250,    -24.6250,    -24.1250,    -29.7500,    -30.0000,    -27.3750,    -34.2500,    -25.1250,    -29.2500,    -33.5000],
        [    -0.2070,     -9.1875,    -11.4375,    -18.1250,    -10.1250,    -10.8750,    -11.8125,    -14.0625,    -14.6250,    -16.0000,    -14.5000,    -18.7500,    -15.1875,    -14.8125,    -19.1250],
        [    -0.4766,    -19.5000,    -21.0000,    -31.8750,    -22.3750,    -17.8750,    -23.0000,    -24.6250,    -27.3750,    -28.0000,    -24.7500,    -32.7500,    -25.0000,    -26.7500,    -31.6250],
        [    -0.5000,    -20.6250,    -20.8750,    -33.7500,    -23.3750,    -21.0000,    -25.1250,    -27.8750,    -29.8750,    -30.2500,    -27.6250,    -34.7500,    -28.2500,    -29.2500,    -33.0000],
        [    -0.6992,    -26.7500,    -28.5000,    -44.2500,    -30.6250,    -25.8750,    -32.0000,    -34.2500,    -39.2500,    -38.7500,    -35.7500,    -45.0000,    -35.2500,    -38.2500,    -44.2500],
        [    -0.5664,    -22.8750,    -22.1250,    -36.0000,    -25.5000,    -21.6250,    -27.1250,    -29.1250,    -32.2500,    -31.1250,    -29.0000,    -37.2500,    -30.2500,    -31.2500,    -35.2500],
        [    -0.5625,    -21.0000,    -22.2500,    -35.7500,    -24.6250,    -20.3750,    -25.5000,    -27.5000,    -31.0000,    -30.8750,    -28.6250,    -36.0000,    -28.6250,    -30.3750,    -35.2500],
        [    -0.3867,    -18.6250,    -19.5000,    -29.6250,    -18.7500,    -17.2500,    -20.1250,    -24.3750,    -26.2500,    -25.3750,    -24.8750,    -31.5000,    -25.2500,    -25.8750,    -29.8750],
        [    -0.5781,    -23.3750,    -22.7500,    -36.7500,    -26.7500,    -23.3750,    -27.7500,    -30.1250,    -32.5000,    -33.0000,    -30.1250,    -37.5000,    -30.1250,    -31.7500,    -35.2500],
        [    -0.7539,    -28.6250,    -30.7500,    -47.0000,    -32.5000,    -27.2500,    -33.7500,    -36.2500,    -41.5000,    -41.0000,    -38.0000,    -48.0000,    -36.7500,    -40.5000,    -46.7500],
        [    -0.1514,     -9.5625,     -8.3125,    -14.0625,     -8.7500,     -9.6875,    -10.3125,    -13.6250,    -12.5625,    -12.7500,    -12.2500,    -15.1875,    -13.7500,    -12.1875,    -13.8125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7322],
        [0.5553],
        [0.6563],
        [0.6332],
        [0.5039],
        [0.6706],
        [0.5852],
        [0.6665],
        [0.6283],
        [0.5849],
        [0.5837],
        [0.6674],
        [0.6669],
        [0.5204]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0093,     -1.1562,     -1.5234,     -1.7812,     -1.3672,     -1.7734,     -1.4062,     -1.6094,     -1.5156,     -1.9297,     -1.2266,     -1.4922,     -1.6797,     -1.7188,     -1.7109],
        [    -0.2441,    -27.7500,    -36.5000,    -43.2500,    -32.7500,    -43.0000,    -33.7500,    -39.7500,    -36.7500,    -47.7500,    -29.8750,    -35.5000,    -41.0000,    -42.0000,    -42.0000],
        [    -0.1611,    -21.6250,    -24.8750,    -30.7500,    -19.8750,    -31.5000,    -22.8750,    -31.1250,    -24.7500,    -35.5000,    -22.1250,    -26.0000,    -31.8750,    -28.8750,    -30.7500],
        [    -0.3926,    -51.7500,    -68.0000,    -80.0000,    -58.2500,    -78.5000,    -62.0000,    -72.5000,    -65.0000,    -84.0000,    -52.5000,    -66.5000,    -75.5000,    -73.5000,    -76.5000],
        [    -0.2871,    -38.2500,    -50.5000,    -58.0000,    -44.5000,    -56.5000,    -46.7500,    -51.7500,    -48.5000,    -60.7500,    -38.7500,    -49.0000,    -54.7500,    -55.5000,    -55.0000],
        [    -0.4453,    -53.5000,    -70.5000,    -82.0000,    -62.5000,    -82.0000,    -64.5000,    -73.5000,    -70.0000,    -88.0000,    -55.5000,    -68.0000,    -76.5000,    -80.0000,    -79.0000],
        [    -0.4043,    -47.0000,    -60.7500,    -70.5000,    -54.5000,    -69.5000,    -56.5000,    -63.2500,    -59.2500,    -76.0000,    -46.7500,    -59.2500,    -66.5000,    -68.0000,    -67.5000],
        [    -0.4785,    -57.7500,    -76.5000,    -88.0000,    -68.5000,    -87.5000,    -69.5000,    -78.5000,    -76.0000,    -94.5000,    -59.7500,    -73.5000,    -82.0000,    -86.0000,    -85.0000],
        [    -0.3359,    -40.2500,    -54.2500,    -64.0000,    -49.7500,    -65.0000,    -50.7500,    -58.2500,    -56.0000,    -70.0000,    -45.5000,    -53.0000,    -60.2500,    -63.0000,    -62.0000],
        [    -0.2988,    -39.0000,    -51.5000,    -60.0000,    -46.0000,    -60.0000,    -46.5000,    -54.0000,    -51.5000,    -64.5000,    -42.2500,    -50.0000,    -55.7500,    -58.5000,    -58.7500],
        [    -0.2832,    -36.7500,    -48.2500,    -55.7500,    -43.0000,    -56.2500,    -44.2500,    -51.0000,    -48.0000,    -60.0000,    -39.2500,    -47.0000,    -53.2500,    -54.5000,    -54.5000],
        [    -0.3066,    -39.7500,    -49.7500,    -61.0000,    -43.5000,    -62.0000,    -47.2500,    -58.7500,    -50.0000,    -67.0000,    -42.5000,    -50.7500,    -60.5000,    -56.7500,    -59.2500],
        [    -0.4688,    -56.0000,    -74.0000,    -85.0000,    -66.5000,    -84.0000,    -67.0000,    -75.5000,    -73.0000,    -91.0000,    -57.7500,    -71.0000,    -79.0000,    -83.5000,    -81.5000],
        [    -0.4043,    -50.5000,    -66.5000,    -78.0000,    -59.5000,    -78.0000,    -61.7500,    -71.0000,    -67.0000,    -84.5000,    -54.5000,    -65.0000,    -73.5000,    -76.0000,    -75.5000],
        [    -0.3457,    -41.0000,    -53.7500,    -63.0000,    -47.7500,    -63.0000,    -50.2500,    -58.2500,    -53.0000,    -68.5000,    -43.5000,    -53.7500,    -60.2500,    -59.7500,    -61.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8774],
        [0.7984],
        [0.7426],
        [0.8313],
        [0.7364],
        [0.9167],
        [0.8451],
        [0.9121],
        [0.8346],
        [0.8498],
        [0.6997],
        [0.9151],
        [0.9176],
        [0.9092]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     0.0000,     0.9570,     0.0415,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.4824,     0.0006,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0010,     0.0000,     0.7227,     0.2754,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.2480,     0.0003,     0.7500,     0.0005,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.9297,     0.0442,     0.0071,     0.0000,     0.0000,     0.0198,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.9922,     0.0019,     0.0047,     0.0000,     0.0000,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.9883,     0.0087,     0.0016,     0.0000,     0.0000,     0.0016,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.9922,     0.0007,     0.0075,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0593,     0.0003,     0.9375,     0.0032,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0000,     0.9180,     0.0322,     0.0270,     0.0000,     0.0000,     0.0228,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.0000,     0.9961,     0.0004,     0.0022,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0025,      0.2178,      0.0131,      0.3828,      0.3320,      0.2656,      0.0742,      0.0635,      0.2832,      0.2314,      0.0100,     -0.0050,     -0.0688,      0.1099,     -0.1211],
        [     0.0918,     11.5000,      4.5625,     18.5000,     12.5000,     16.3750,      9.5625,      9.0000,      8.8125,     10.3125,     -1.6875,      6.1562,      0.6094,      1.4844,      0.5547],
        [     0.1016,     12.2500,      4.5625,     18.8750,     12.1250,     15.7500,      8.1875,      8.3750,      9.7500,     10.6875,     -1.2812,      5.4688,     -0.0728,      2.0781,     -0.6250],
        [     0.1001,     12.3750,      4.9375,     21.0000,     13.2500,     19.5000,     13.3125,     12.4375,      8.4375,     11.9375,     -2.1875,      8.5000,      1.9844,      0.4551,      2.3594],
        [     0.0898,      5.7812,     -1.4609,     13.6250,     10.5000,     12.6250,      4.4375,      2.0469,      9.8750,      8.1875,     -1.3672,     -2.3594,     -5.4375,      2.4688,     -3.6719],
        [     0.1406,     15.5625,      8.2500,     27.2500,     20.5000,     27.2500,     18.3750,     16.8750,     14.7500,     15.6250,     -1.8516,     11.0000,      4.8125,      3.8438,      2.8906],
        [     0.0442,      5.5000,      5.7500,     11.0625,      7.7812,     17.6250,     16.7500,     13.3750,      3.2344,      6.1250,     -3.3281,      9.1875,      6.1250,     -1.6094,      7.5312],
        [     0.1172,     12.0625,      5.4375,     23.2500,     16.6250,     24.3750,     17.0000,     16.0000,     11.2500,     13.6250,     -2.0781,      9.3125,      4.5312,      1.5781,      2.6719],
        [     0.1377,     11.0625,      0.4141,     21.8750,     18.7500,     17.0000,      4.7812,      3.9219,     18.0000,     13.7500,      0.9844,     -1.5781,     -4.5000,      7.4062,     -6.5625],
        [     0.1245,     13.4375,      2.8281,     22.8750,     16.6250,     17.5000,      8.2500,      7.6875,     13.2500,     13.9375,     -0.3145,      4.0938,     -1.3750,      3.7969,     -2.4062],
        [     0.1328,     13.0625,      2.1094,     22.1250,     17.5000,     15.7500,      5.0938,      4.3438,     15.7500,     13.2500,      0.6484,      1.0234,     -3.6719,      6.2500,     -5.1562],
        [     0.1338,     14.1250,      2.7188,     23.8750,     16.6250,     19.0000,      8.8750,      8.2500,     12.7500,     14.1250,     -0.7891,      4.1875,     -2.2344,      2.8125,     -2.4219],
        [     0.0811,      8.3125,      4.0625,     16.7500,     11.4375,     19.5000,     13.8750,     12.0625,      7.9375,      9.5625,     -2.5469,      6.5938,      2.6250,      0.5078,      3.0938],
        [     0.1030,      8.5000,      0.2695,     17.6250,     14.3125,     14.1250,      4.3438,      3.7344,     14.0000,     11.2500,      0.9375,     -1.0703,     -3.6406,      5.7812,     -4.5000],
        [     0.0874,     12.0000,      1.9688,     19.1250,     11.3750,     13.0625,      5.4375,      4.3438,      8.7500,     10.9375,     -0.6484,      2.5625,     -4.0625,      1.9922,     -0.6328]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0924],
        [    0.0011],
        [    0.0173],
        [    0.0000],
        [    0.0254],
        [    0.0006],
        [    0.0547],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0584],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.2129,     0.7852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0117,     0.0420,     0.9453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0133,     0.0471,     0.9336,     0.0070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0056,     0.0201,     0.4531,     0.0025,     0.5195,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0122,     0.0371,     0.4434,     0.0085,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0036,     0.0129,     0.2910,     0.0016,     0.3359,     0.0000,     0.3555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0026,     0.0093,     0.2080,     0.0011,     0.2393,     0.0000,     0.2539,     0.2852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0022,     0.0079,     0.1768,     0.0010,     0.2021,     0.0000,     0.2139,     0.2412,     0.1543,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0017,     0.0062,     0.1387,     0.0007,     0.1592,     0.0000,     0.1689,     0.1904,     0.1216,     0.2129,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0039,     0.0117,     0.1426,     0.0028,     0.1602,     0.0000,     0.1660,     0.1826,     0.1289,     0.2002,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0015,     0.0052,     0.1182,     0.0006,     0.1357,     0.0000,     0.1436,     0.1621,     0.1035,     0.1816,     0.0000,     0.1475,     0.0000],
        [    0.0000,     0.0000,     0.0013,     0.0045,     0.1001,     0.0005,     0.1152,     0.0000,     0.1216,     0.1377,     0.0874,     0.1533,     0.0000,     0.1250,     0.1533]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.2910,      0.3086,      0.3125,      0.3184,      0.3145,      0.3203,      0.2832,      0.3203,      0.3203,      0.3184,      0.3203,      0.2832,      0.3203,      0.3203],
        [    -0.0825,     80.0000,     86.5000,     88.0000,     91.0000,     86.5000,     91.0000,     76.0000,     91.0000,     91.0000,     91.0000,     91.0000,     75.5000,     91.0000,     91.0000],
        [    -0.0977,     84.5000,     91.5000,     93.0000,     96.0000,     91.0000,     96.0000,     79.5000,     96.5000,     96.5000,     96.0000,     96.5000,     79.5000,     96.5000,     96.5000],
        [    -0.0977,     83.5000,     90.5000,     92.0000,     95.0000,     90.0000,     95.0000,     79.0000,     95.5000,     95.5000,     95.0000,     95.5000,     79.0000,     95.5000,     95.5000],
        [    -0.1035,     84.0000,     91.0000,     92.5000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.5000,     96.0000,     78.5000,     95.5000,     96.0000],
        [    -0.0928,     82.5000,     89.0000,     90.5000,     93.5000,     88.5000,     93.5000,     77.5000,     93.5000,     94.0000,     93.5000,     94.0000,     77.5000,     93.5000,     94.0000],
        [    -0.1030,     84.0000,     91.0000,     92.5000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.5000,     96.0000,     78.5000,     95.5000,     96.0000],
        [    -0.0723,     71.5000,     77.5000,     78.5000,     81.0000,     77.0000,     81.0000,     67.5000,     81.0000,     81.0000,     81.0000,     81.5000,     67.5000,     81.0000,     81.5000],
        [    -0.1035,     84.0000,     91.0000,     92.5000,     95.5000,     90.5000,     95.5000,     79.0000,     95.5000,     96.0000,     95.5000,     96.0000,     79.0000,     95.5000,     96.0000],
        [    -0.1035,     84.0000,     91.0000,     92.5000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.5000,     96.0000,     78.5000,     95.5000,     96.0000],
        [    -0.1030,     84.0000,     91.0000,     92.0000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.0000,     96.0000,     78.5000,     95.5000,     96.0000],
        [    -0.1035,     84.0000,     91.0000,     92.5000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.5000,     96.0000,     78.5000,     95.5000,     96.0000],
        [    -0.0713,     71.5000,     77.5000,     78.5000,     81.0000,     77.0000,     81.0000,     68.0000,     81.0000,     81.5000,     81.0000,     81.5000,     68.0000,     81.0000,     81.5000],
        [    -0.1035,     84.0000,     91.0000,     92.5000,     95.5000,     90.5000,     95.5000,     79.0000,     95.5000,     96.0000,     95.5000,     96.0000,     79.0000,     95.5000,     96.0000],
        [    -0.1035,     84.0000,     91.0000,     92.0000,     95.5000,     90.0000,     95.5000,     79.0000,     95.5000,     95.5000,     95.0000,     95.5000,     78.5000,     95.5000,     95.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1641,     0.8359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1328,     0.6719,     0.1963,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1201,     0.6602,     0.1875,     0.0315,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1260,     0.6328,     0.1914,     0.0320,     0.0194,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1138,     0.6289,     0.1768,     0.0298,     0.0164,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1348,     0.5469,     0.2041,     0.0376,     0.0273,     0.0437,     0.0054,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1099,     0.6055,     0.1709,     0.0287,     0.0157,     0.0342,     0.0019,     0.0339,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1060,     0.5859,     0.1650,     0.0280,     0.0153,     0.0332,     0.0019,     0.0330,     0.0295,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1035,     0.5703,     0.1611,     0.0270,     0.0150,     0.0322,     0.0018,     0.0320,     0.0286,     0.0297,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.5547,     0.1562,     0.0265,     0.0145,     0.0315,     0.0018,     0.0312,     0.0280,     0.0291,     0.0255,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1143,     0.4629,     0.1680,     0.0349,     0.0233,     0.0403,     0.0044,     0.0400,     0.0364,     0.0381,     0.0337,     0.0036,     0.0000,     0.0000],
        [    0.0000,     0.0972,     0.5391,     0.1514,     0.0255,     0.0140,     0.0303,     0.0017,     0.0302,     0.0270,     0.0280,     0.0247,     0.0015,     0.0303,     0.0000],
        [    0.0000,     0.0947,     0.5234,     0.1484,     0.0250,     0.0137,     0.0298,     0.0017,     0.0297,     0.0265,     0.0275,     0.0242,     0.0015,     0.0298,     0.0233]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0004,      0.1162,      0.1152,      0.1177,      0.1035,      0.1138,      0.1040,      0.1187,      0.1040,      0.1035,      0.1055,      0.1030,      0.1035,      0.1040,      0.1030],
        [    -0.0400,     27.7500,     29.1250,     28.0000,     26.1250,     25.7500,     26.3750,     24.0000,     26.3750,     26.2500,     26.2500,     26.1250,     23.7500,     26.3750,     26.1250],
        [    -0.0488,     29.1250,     30.7500,     29.5000,     27.6250,     27.1250,     27.8750,     25.1250,     27.8750,     27.7500,     27.7500,     27.6250,     24.8750,     27.8750,     27.6250],
        [    -0.0469,     29.0000,     30.6250,     29.3750,     27.5000,     27.0000,     27.7500,     25.0000,     27.7500,     27.6250,     27.6250,     27.5000,     24.8750,     27.7500,     27.5000],
        [    -0.0510,     28.8750,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.6250,     27.5000,     24.7500,     27.7500,     27.5000],
        [    -0.0466,     28.3750,     30.0000,     28.7500,     27.0000,     26.5000,     27.2500,     24.6250,     27.1250,     27.1250,     27.1250,     27.0000,     24.3750,     27.1250,     27.0000],
        [    -0.0510,     29.0000,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.7500,     27.6250,     24.8750,     27.7500,     27.5000],
        [    -0.0325,     25.7500,     27.1250,     26.1250,     24.3750,     24.1250,     24.5000,     22.5000,     24.5000,     24.5000,     24.5000,     24.3750,     22.1250,     24.5000,     24.3750],
        [    -0.0510,     29.0000,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.7500,     27.6250,     24.7500,     27.7500,     27.5000],
        [    -0.0510,     29.0000,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.7500,     27.6250,     24.7500,     27.7500,     27.5000],
        [    -0.0508,     29.0000,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.7500,     27.6250,     24.7500,     27.7500,     27.5000],
        [    -0.0510,     28.8750,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.6250,     27.5000,     24.7500,     27.7500,     27.5000],
        [    -0.0369,     24.6250,     26.0000,     25.0000,     23.5000,     23.0000,     23.6250,     21.3750,     23.6250,     23.5000,     23.5000,     23.3750,     21.2500,     23.6250,     23.3750],
        [    -0.0510,     29.0000,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.7500,     27.6250,     24.8750,     27.7500,     27.5000],
        [    -0.0510,     28.8750,     30.6250,     29.3750,     27.6250,     27.0000,     27.7500,     24.8750,     27.7500,     27.6250,     27.6250,     27.5000,     24.7500,     27.7500,     27.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5195,     0.4805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3496,     0.3242,     0.3262,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2637,     0.2441,     0.2461,     0.2451,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2119,     0.1963,     0.1973,     0.1973,     0.1963,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1768,     0.1641,     0.1650,     0.1650,     0.1641,     0.1650,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1504,     0.1387,     0.1396,     0.1396,     0.1387,     0.1396,     0.1533,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1318,     0.1221,     0.1226,     0.1226,     0.1221,     0.1226,     0.1338,     0.1226,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1172,     0.1089,     0.1094,     0.1089,     0.1089,     0.1094,     0.1196,     0.1094,     0.1089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1060,     0.0981,     0.0986,     0.0981,     0.0981,     0.0986,     0.1079,     0.0986,     0.0981,     0.0981,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0962,     0.0894,     0.0898,     0.0894,     0.0894,     0.0898,     0.0981,     0.0898,     0.0894,     0.0894,     0.0894,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0879,     0.0815,     0.0820,     0.0815,     0.0815,     0.0820,     0.0894,     0.0820,     0.0815,     0.0815,     0.0815,     0.0869,     0.0000,     0.0000],
        [    0.0000,     0.0811,     0.0752,     0.0757,     0.0757,     0.0752,     0.0757,     0.0825,     0.0757,     0.0757,     0.0757,     0.0757,     0.0806,     0.0757,     0.0000],
        [    0.0000,     0.0757,     0.0698,     0.0703,     0.0703,     0.0698,     0.0703,     0.0771,     0.0703,     0.0703,     0.0703,     0.0703,     0.0747,     0.0703,     0.0703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.0874,      0.0864,      0.0864,      0.0864,      0.0864,      0.0864,      0.0874,      0.0864,      0.0864,      0.0864,      0.0864,      0.0874,      0.0864,      0.0864],
        [    -0.0281,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.7500],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.7500,     14.7500,     14.7500,     14.8125,     14.7500,     14.7500],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.7500],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.6875],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.7500],
        [    -0.0282,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.7500,     14.7500,     14.7500,     14.8125,     14.7500,     14.7500],
        [    -0.0280,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.6875,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.7500,     14.6875,     14.6875],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.6875,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.6875],
        [    -0.0280,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.6875,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.7500,     14.6875,     14.6875],
        [    -0.0282,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125,     14.8125,     14.8125,     14.8750,     14.8125,     14.8125],
        [    -0.0280,     14.8125,     14.6875,     14.7500,     14.7500,     14.6875,     14.7500,     14.8125,     14.7500,     14.6875,     14.7500,     14.6875,     14.8125,     14.7500,     14.7500],
        [    -0.0280,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.6875,     14.8125,     14.6875,     14.6875,     14.6875,     14.6875,     14.7500,     14.6875,     14.6875]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4980,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1436,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1245,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1108,     0.1113,     0.1118,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0996,     0.1001,     0.1006,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0903,     0.0908,     0.0913,     0.0908,     0.0913,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0830,     0.0835,     0.0840,     0.0835,     0.0840,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0767,     0.0767,     0.0771,     0.0771,     0.0767,     0.0771,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0708,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0479,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481,      0.0481],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125],
        [    -0.0124,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.2500,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125,     13.3125]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2490,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.1992,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1660,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.1260,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1108,     0.1108,     0.1108,     0.1108,     0.1108,     0.1123,     0.1108,     0.1099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.0996,     0.1001,     0.1001,     0.1001,     0.1001,     0.1011,     0.1001,     0.0991,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0923,     0.0908,     0.0903,     0.0908,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0830,     0.0835,     0.0835,     0.0835,     0.0835,     0.0845,     0.0835,     0.0825,     0.0835,     0.0825,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0776,     0.0771,     0.0762,     0.0771,     0.0762,     0.0771,     0.0771,     0.0000],
        [    0.0000,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0723,     0.0713,     0.0708,     0.0713,     0.0708,     0.0718,     0.0713,     0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422,     0.0422],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.9375,    14.8750,    14.9375,    14.9375,    14.9375,    14.9375,    14.9375,    14.9375,    14.8750,    14.9375,    14.8750,    14.9375,    14.9375,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750],
        [    0.0282,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.9375,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750,    14.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0010],
        [    0.0005],
        [    0.0003],
        [    0.0002],
        [    0.0002],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5391, 0.4609, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3809, 0.3262, 0.2910, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2969, 0.2559, 0.2275, 0.2197, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2441, 0.2100, 0.1875, 0.1807, 0.1787, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2080, 0.1787, 0.1592, 0.1533, 0.1514, 0.1494, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1807, 0.1553, 0.1387, 0.1338, 0.1318, 0.1299, 0.1289, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1602, 0.1377, 0.1230, 0.1187, 0.1172, 0.1152, 0.1147, 0.1138, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1445, 0.1240, 0.1108, 0.1069, 0.1055, 0.1035, 0.1030, 0.1025, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1318, 0.1128, 0.1006, 0.0972, 0.0957, 0.0942, 0.0938, 0.0928, 0.0903, 0.0913, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1206, 0.1035, 0.0923, 0.0889, 0.0879, 0.0864, 0.0859, 0.0854, 0.0830, 0.0835, 0.0835, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1113, 0.0952, 0.0850, 0.0820, 0.0811, 0.0796, 0.0791, 0.0786, 0.0767, 0.0771, 0.0771, 0.0771, 0.0000, 0.0000],
        [0.0000, 0.1030, 0.0884, 0.0791, 0.0762, 0.0752, 0.0737, 0.0737, 0.0732, 0.0713, 0.0718, 0.0718, 0.0718, 0.0718, 0.0000],
        [0.0000, 0.0962, 0.0825, 0.0737, 0.0713, 0.0703, 0.0688, 0.0688, 0.0684, 0.0664, 0.0669, 0.0669, 0.0669, 0.0669, 0.0669]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0007,     0.2656,     0.2656,     0.2656,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637,     0.2637],
        [    0.2578,    98.5000,    98.5000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000],
        [    0.2578,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000],
        [    0.2559,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000],
        [    0.2559,    98.0000,    98.0000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000,    97.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,,,,,,,,,,,,,,,
@ 3550 train 4.1032 , allloss: 4.1032, dt: 1162.35ms, fracRes: 0.1720, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5546, norm(y): 0.9928, norm:0.4000, tok/sec: 112764.78, flops:118.38, batch-reuse:1
@ 3551 train 4.2128 , allloss: 4.2128, dt: 712.74ms, fracRes: 0.1728, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5606, norm(y): 0.9930, norm:0.3861, tok/sec: 183897.73, flops:193.06, batch-reuse:1
@ 3552 train 4.1166 , allloss: 4.1166, dt: 708.77ms, fracRes: 0.1713, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5575, norm(y): 0.9928, norm:0.4531, tok/sec: 184929.99, flops:194.14, batch-reuse:1
@ 3553 train 4.0707 , allloss: 4.0707, dt: 702.12ms, fracRes: 0.1701, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5536, norm(y): 0.9929, norm:0.4197, tok/sec: 186680.26, flops:195.98, batch-reuse:1
@ 3554 train 4.0584 , allloss: 4.0584, dt: 706.63ms, fracRes: 0.1719, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5541, norm(y): 0.9925, norm:0.4185, tok/sec: 185488.12, flops:194.73, batch-reuse:1
@ 3555 train 4.1205 , allloss: 4.1205, dt: 704.70ms, fracRes: 0.1744, norm(attn): 27.2500, norm(output): 0.4180, norm(x): 0.5622, norm(y): 0.9931, norm:0.4197, tok/sec: 185995.81, flops:195.26, batch-reuse:1
@ 3556 train 4.0729 , allloss: 4.0729, dt: 702.77ms, fracRes: 0.1727, norm(attn): 27.5000, norm(output): 0.4180, norm(x): 0.5617, norm(y): 0.9929, norm:0.4001, tok/sec: 186506.48, flops:195.79, batch-reuse:1
@ 3557 train 4.2043 , allloss: 4.2043, dt: 705.12ms, fracRes: 0.1728, norm(attn): 27.3750, norm(output): 0.4258, norm(x): 0.5737, norm(y): 0.9936, norm:0.5080, tok/sec: 185887.39, flops:195.14, batch-reuse:1
@ 3558 train 4.0110 , allloss: 4.0110, dt: 706.29ms, fracRes: 0.1723, norm(attn): 27.5000, norm(output): 0.4141, norm(x): 0.5572, norm(y): 0.9930, norm:0.4098, tok/sec: 185579.35, flops:194.82, batch-reuse:1
@ 3559 train 4.1018 , allloss: 4.1018, dt: 705.78ms, fracRes: 0.1727, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5596, norm(y): 0.9928, norm:0.4663, tok/sec: 185711.44, flops:194.96, batch-reuse:1
@ 3560 train 4.0314 , allloss: 4.0314, dt: 687.53ms, fracRes: 0.1714, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5565, norm(y): 0.9926, norm:0.4139, tok/sec: 190641.98, flops:200.14, batch-reuse:1
@ 3561 train 4.0907 , allloss: 4.0907, dt: 702.97ms, fracRes: 0.1723, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5596, norm(y): 0.9923, norm:0.4434, tok/sec: 186455.93, flops:195.74, batch-reuse:1
@ 3562 train 4.0812 , allloss: 4.0812, dt: 702.02ms, fracRes: 0.1727, norm(attn): 27.5000, norm(output): 0.4180, norm(x): 0.5589, norm(y): 0.9925, norm:0.4356, tok/sec: 186705.68, flops:196.00, batch-reuse:1
@ 3563 train 4.1144 , allloss: 4.1144, dt: 713.61ms, fracRes: 0.1724, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5544, norm(y): 0.9928, norm:0.4194, tok/sec: 183673.71, flops:192.82, batch-reuse:1
@ 3564 train 4.0737 , allloss: 4.0737, dt: 716.21ms, fracRes: 0.1724, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5511, norm(y): 0.9927, norm:0.3800, tok/sec: 183008.60, flops:192.12, batch-reuse:1
@ 3565 train 4.0864 , allloss: 4.0864, dt: 718.13ms, fracRes: 0.1729, norm(attn): 27.6250, norm(output): 0.4160, norm(x): 0.5572, norm(y): 0.9927, norm:0.3996, tok/sec: 182518.46, flops:191.61, batch-reuse:1
@ 3566 train 4.0297 , allloss: 4.0297, dt: 717.50ms, fracRes: 0.1728, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5575, norm(y): 0.9923, norm:0.3739, tok/sec: 182678.75, flops:191.78, batch-reuse:1
@ 3567 train 4.1367 , allloss: 4.1367, dt: 715.11ms, fracRes: 0.1727, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5499, norm(y): 0.9923, norm:0.3789, tok/sec: 183288.41, flops:192.42, batch-reuse:1
@ 3568 train 4.0089 , allloss: 4.0089, dt: 716.68ms, fracRes: 0.1738, norm(attn): 27.6250, norm(output): 0.4121, norm(x): 0.5537, norm(y): 0.9926, norm:0.3710, tok/sec: 182888.54, flops:192.00, batch-reuse:1
@ 3569 train 4.1487 , allloss: 4.1487, dt: 712.30ms, fracRes: 0.1742, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5589, norm(y): 0.9929, norm:0.3747, tok/sec: 184012.58, flops:193.18, batch-reuse:1
@ 3570 train 4.1158 , allloss: 4.1158, dt: 712.94ms, fracRes: 0.1727, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5593, norm(y): 0.9925, norm:0.3995, tok/sec: 183846.62, flops:193.00, batch-reuse:1
@ 3571 train 4.1301 , allloss: 4.1301, dt: 710.51ms, fracRes: 0.1715, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5510, norm(y): 0.9929, norm:0.4281, tok/sec: 184476.49, flops:193.66, batch-reuse:1
@ 3572 train 4.0703 , allloss: 4.0703, dt: 713.47ms, fracRes: 0.1720, norm(attn): 27.8750, norm(output): 0.4199, norm(x): 0.5624, norm(y): 0.9931, norm:0.4836, tok/sec: 183711.77, flops:192.86, batch-reuse:1
@ 3573 train 4.1295 , allloss: 4.1295, dt: 708.53ms, fracRes: 0.1727, norm(attn): 27.8750, norm(output): 0.4199, norm(x): 0.5636, norm(y): 0.9931, norm:0.3661, tok/sec: 184991.29, flops:194.20, batch-reuse:1
@ 3574 train 4.0216 , allloss: 4.0216, dt: 704.67ms, fracRes: 0.1712, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5553, norm(y): 0.9924, norm:0.4771, tok/sec: 186004.68, flops:195.27, batch-reuse:1
@ 3575 train 4.0039 , allloss: 4.0039, dt: 705.77ms, fracRes: 0.1712, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5591, norm(y): 0.9924, norm:0.4548, tok/sec: 185714.83, flops:194.96, batch-reuse:1
@ 3576 train 3.9992 , allloss: 3.9992, dt: 701.13ms, fracRes: 0.1725, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5584, norm(y): 0.9924, norm:0.4407, tok/sec: 186944.02, flops:196.25, batch-reuse:1
@ 3577 train 4.1485 , allloss: 4.1485, dt: 708.58ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4219, norm(x): 0.5622, norm(y): 0.9928, norm:0.4817, tok/sec: 184979.52, flops:194.19, batch-reuse:1
@ 3578 train 4.0813 , allloss: 4.0813, dt: 704.18ms, fracRes: 0.1729, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5563, norm(y): 0.9926, norm:0.3787, tok/sec: 186133.28, flops:195.40, batch-reuse:1
@ 3579 train 4.0345 , allloss: 4.0345, dt: 707.22ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5544, norm(y): 0.9924, norm:0.5296, tok/sec: 185334.92, flops:194.56, batch-reuse:1
@ 3580 train 4.0730 , allloss: 4.0730, dt: 706.00ms, fracRes: 0.1719, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5489, norm(y): 0.9926, norm:0.3948, tok/sec: 185654.12, flops:194.90, batch-reuse:1
@ 3581 train 4.0326 , allloss: 4.0326, dt: 706.43ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5517, norm(y): 0.9923, norm:0.4796, tok/sec: 185541.83, flops:194.78, batch-reuse:1
@ 3582 train 4.0558 , allloss: 4.0558, dt: 704.34ms, fracRes: 0.1731, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5500, norm(y): 0.9923, norm:0.4304, tok/sec: 186092.08, flops:195.36, batch-reuse:1
@ 3583 train 4.1709 , allloss: 4.1709, dt: 698.66ms, fracRes: 0.1718, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5525, norm(y): 0.9923, norm:0.4701, tok/sec: 187605.90, flops:196.95, batch-reuse:1
@ 3584 train 4.0765 , allloss: 4.0765, dt: 717.03ms, fracRes: 0.1718, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5447, norm(y): 0.9924, norm:0.4258, tok/sec: 182798.66, flops:191.90, batch-reuse:1
@ 3585 train 4.0614 , allloss: 4.0614, dt: 706.19ms, fracRes: 0.1710, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5447, norm(y): 0.9923, norm:0.4014, tok/sec: 185604.22, flops:194.85, batch-reuse:1
@ 3586 train 3.9896 , allloss: 3.9896, dt: 714.68ms, fracRes: 0.1703, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5417, norm(y): 0.9922, norm:0.4698, tok/sec: 183399.39, flops:192.53, batch-reuse:1
@ 3587 train 4.0903 , allloss: 4.0903, dt: 695.29ms, fracRes: 0.1709, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5506, norm(y): 0.9922, norm:0.4212, tok/sec: 188513.93, flops:197.90, batch-reuse:1
@ 3588 train 4.0577 , allloss: 4.0577, dt: 702.75ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5528, norm(y): 0.9923, norm:0.4503, tok/sec: 186514.01, flops:195.80, batch-reuse:1
@ 3589 train 4.1543 , allloss: 4.1543, dt: 715.24ms, fracRes: 0.1721, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5582, norm(y): 0.9926, norm:0.4157, tok/sec: 183254.99, flops:192.38, batch-reuse:1
@ 3590 train 3.9515 , allloss: 3.9515, dt: 715.43ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5480, norm(y): 0.9921, norm:0.4093, tok/sec: 183207.36, flops:192.33, batch-reuse:1
@ 3591 train 4.0538 , allloss: 4.0538, dt: 715.18ms, fracRes: 0.1732, norm(attn): 27.7500, norm(output): 0.4121, norm(x): 0.5534, norm(y): 0.9919, norm:0.4245, tok/sec: 183271.30, flops:192.40, batch-reuse:1
@ 3592 train 3.9593 , allloss: 3.9593, dt: 698.00ms, fracRes: 0.1735, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5476, norm(y): 0.9922, norm:0.3985, tok/sec: 187783.40, flops:197.14, batch-reuse:1
@ 3593 train 4.1329 , allloss: 4.1329, dt: 702.86ms, fracRes: 0.1751, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5583, norm(y): 0.9926, norm:0.3818, tok/sec: 186483.95, flops:195.77, batch-reuse:1
@ 3594 train 4.0249 , allloss: 4.0249, dt: 700.00ms, fracRes: 0.1735, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5541, norm(y): 0.9922, norm:0.4205, tok/sec: 187245.26, flops:196.57, batch-reuse:1
@ 3595 train 4.0856 , allloss: 4.0856, dt: 711.89ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5621, norm(y): 0.9924, norm:0.4238, tok/sec: 184118.77, flops:193.29, batch-reuse:1
@ 3596 train 4.0703 , allloss: 4.0703, dt: 710.74ms, fracRes: 0.1750, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5605, norm(y): 0.9923, norm:0.3902, tok/sec: 184415.72, flops:193.60, batch-reuse:1
@ 3597 train 4.0503 , allloss: 4.0503, dt: 698.04ms, fracRes: 0.1728, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5529, norm(y): 0.9922, norm:0.3711, tok/sec: 187772.82, flops:197.12, batch-reuse:1
@ 3598 train 4.0534 , allloss: 4.0534, dt: 706.28ms, fracRes: 0.1724, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5516, norm(y): 0.9923, norm:0.3715, tok/sec: 185580.04, flops:194.82, batch-reuse:1
@ 3599 train 4.0312 , allloss: 4.0312, dt: 706.14ms, fracRes: 0.1726, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5537, norm(y): 0.9924, norm:0.3706, tok/sec: 185617.20, flops:194.86, batch-reuse:1
@ 3600 train 3.9736 , allloss: 3.9736, dt: 700.70ms, fracRes: 0.1734, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5593, norm(y): 0.9920, norm:0.3967, tok/sec: 187059.47, flops:196.38, batch-reuse:1
@ 3601 train 4.0740 , allloss: 4.0740, dt: 702.28ms, fracRes: 0.1714, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5479, norm(y): 0.9923, norm:0.4136, tok/sec: 186638.30, flops:195.93, batch-reuse:1
@ 3602 train 4.0949 , allloss: 4.0949, dt: 694.86ms, fracRes: 0.1721, norm(attn): 27.7500, norm(output): 0.4082, norm(x): 0.5524, norm(y): 0.9922, norm:0.4058, tok/sec: 188631.39, flops:198.03, batch-reuse:1
@ 3603 train 4.1041 , allloss: 4.1041, dt: 691.16ms, fracRes: 0.1714, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5540, norm(y): 0.9920, norm:0.4158, tok/sec: 189640.42, flops:199.08, batch-reuse:1
@ 3604 train 4.0643 , allloss: 4.0643, dt: 701.62ms, fracRes: 0.1720, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5554, norm(y): 0.9920, norm:0.4386, tok/sec: 186814.62, flops:196.12, batch-reuse:1
@ 3605 train 4.0408 , allloss: 4.0408, dt: 712.77ms, fracRes: 0.1717, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5506, norm(y): 0.9919, norm:0.3993, tok/sec: 183891.64, flops:193.05, batch-reuse:1
@ 3606 train 4.0320 , allloss: 4.0320, dt: 717.91ms, fracRes: 0.1727, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5515, norm(y): 0.9921, norm:0.3807, tok/sec: 182575.50, flops:191.67, batch-reuse:1
@ 3607 train 4.0653 , allloss: 4.0653, dt: 719.19ms, fracRes: 0.1731, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5522, norm(y): 0.9920, norm:0.4335, tok/sec: 182249.38, flops:191.33, batch-reuse:1
@ 3608 train 4.0952 , allloss: 4.0952, dt: 720.04ms, fracRes: 0.1747, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5546, norm(y): 0.9922, norm:0.3744, tok/sec: 182034.13, flops:191.10, batch-reuse:1
@ 3609 train 4.1076 , allloss: 4.1076, dt: 706.70ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5521, norm(y): 0.9920, norm:0.4295, tok/sec: 185469.66, flops:194.71, batch-reuse:1
@ 3610 train 3.9382 , allloss: 3.9382, dt: 716.69ms, fracRes: 0.1748, norm(attn): 27.7500, norm(output): 0.4277, norm(x): 0.5708, norm(y): 0.9916, norm:0.4341, tok/sec: 182885.86, flops:191.99, batch-reuse:1
@ 3611 train 4.0748 , allloss: 4.0748, dt: 702.49ms, fracRes: 0.1742, norm(attn): 27.8750, norm(output): 0.4238, norm(x): 0.5665, norm(y): 0.9916, norm:0.4980, tok/sec: 186581.36, flops:195.87, batch-reuse:1
@ 3612 train 4.1058 , allloss: 4.1058, dt: 705.29ms, fracRes: 0.1727, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5506, norm(y): 0.9917, norm:0.4567, tok/sec: 185841.01, flops:195.10, batch-reuse:1
@ 3613 train 4.0387 , allloss: 4.0387, dt: 701.52ms, fracRes: 0.1723, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5433, norm(y): 0.9917, norm:0.4534, tok/sec: 186840.46, flops:196.15, batch-reuse:1
@ 3614 train 4.0577 , allloss: 4.0577, dt: 719.32ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5492, norm(y): 0.9918, norm:0.4813, tok/sec: 182216.89, flops:191.29, batch-reuse:1
@ 3615 train 4.0589 , allloss: 4.0589, dt: 719.75ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5518, norm(y): 0.9917, norm:0.4672, tok/sec: 182108.72, flops:191.18, batch-reuse:1
@ 3616 train 3.9504 , allloss: 3.9504, dt: 707.46ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5526, norm(y): 0.9913, norm:0.4332, tok/sec: 185271.65, flops:194.50, batch-reuse:1
@ 3617 train 4.0095 , allloss: 4.0095, dt: 719.32ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5418, norm(y): 0.9913, norm:0.4223, tok/sec: 182216.10, flops:191.29, batch-reuse:1
@ 3618 train 3.9523 , allloss: 3.9523, dt: 717.66ms, fracRes: 0.1713, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5438, norm(y): 0.9914, norm:0.4231, tok/sec: 182638.58, flops:191.73, batch-reuse:1
@ 3619 train 4.0229 , allloss: 4.0229, dt: 717.53ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5481, norm(y): 0.9914, norm:0.4518, tok/sec: 182672.08, flops:191.77, batch-reuse:1
@ 3620 train 4.0706 , allloss: 4.0706, dt: 709.84ms, fracRes: 0.1735, norm(attn): 27.7500, norm(output): 0.4160, norm(x): 0.5593, norm(y): 0.9922, norm:0.4015, tok/sec: 184650.73, flops:193.85, batch-reuse:1
@ 3621 train 4.0098 , allloss: 4.0098, dt: 717.27ms, fracRes: 0.1737, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5535, norm(y): 0.9922, norm:0.4416, tok/sec: 182737.23, flops:191.84, batch-reuse:1
@ 3622 train 4.0684 , allloss: 4.0684, dt: 711.37ms, fracRes: 0.1733, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5501, norm(y): 0.9916, norm:0.3757, tok/sec: 184252.37, flops:193.43, batch-reuse:1
@ 3623 train 4.0582 , allloss: 4.0582, dt: 707.56ms, fracRes: 0.1747, norm(attn): 27.7500, norm(output): 0.4102, norm(x): 0.5548, norm(y): 0.9916, norm:0.4246, tok/sec: 185244.30, flops:194.47, batch-reuse:1
@ 3624 train 3.9224 , allloss: 3.9224, dt: 705.85ms, fracRes: 0.1741, norm(attn): 27.7500, norm(output): 0.4062, norm(x): 0.5503, norm(y): 0.9908, norm:0.3483, tok/sec: 185693.06, flops:194.94, batch-reuse:1
@ 3625 train 4.0544 , allloss: 4.0544, dt: 712.91ms, fracRes: 0.1741, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5493, norm(y): 0.9910, norm:0.3633, tok/sec: 183854.98, flops:193.01, batch-reuse:1
@ 3626 train 3.9796 , allloss: 3.9796, dt: 711.07ms, fracRes: 0.1743, norm(attn): 27.7500, norm(output): 0.4043, norm(x): 0.5513, norm(y): 0.9916, norm:0.3734, tok/sec: 184331.26, flops:193.51, batch-reuse:1
@ 3627 train 4.0577 , allloss: 4.0577, dt: 713.56ms, fracRes: 0.1751, norm(attn): 27.6250, norm(output): 0.4102, norm(x): 0.5506, norm(y): 0.9918, norm:0.4110, tok/sec: 183688.50, flops:192.84, batch-reuse:1
@ 3628 train 4.1039 , allloss: 4.1039, dt: 696.55ms, fracRes: 0.1747, norm(attn): 27.7500, norm(output): 0.4121, norm(x): 0.5582, norm(y): 0.9919, norm:0.3680, tok/sec: 188173.36, flops:197.54, batch-reuse:1
@ 3629 train 3.9857 , allloss: 3.9857, dt: 712.17ms, fracRes: 0.1749, norm(attn): 27.7500, norm(output): 0.4180, norm(x): 0.5630, norm(y): 0.9918, norm:0.4017, tok/sec: 184046.65, flops:193.21, batch-reuse:1
@ 3630 train 3.9253 , allloss: 3.9253, dt: 714.07ms, fracRes: 0.1747, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5581, norm(y): 0.9915, norm:0.4046, tok/sec: 183555.23, flops:192.70, batch-reuse:1
@ 3631 train 3.9917 , allloss: 3.9917, dt: 709.13ms, fracRes: 0.1719, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5479, norm(y): 0.9914, norm:0.3615, tok/sec: 184836.04, flops:194.04, batch-reuse:1
@ 3632 train 3.9797 , allloss: 3.9797, dt: 709.19ms, fracRes: 0.1736, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5625, norm(y): 0.9917, norm:0.4214, tok/sec: 184819.33, flops:194.02, batch-reuse:1
@ 3633 train 4.1052 , allloss: 4.1052, dt: 718.68ms, fracRes: 0.1725, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5490, norm(y): 0.9920, norm:0.3983, tok/sec: 182379.01, flops:191.46, batch-reuse:1
@ 3634 train 3.9134 , allloss: 3.9134, dt: 714.53ms, fracRes: 0.1724, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5419, norm(y): 0.9916, norm:0.4050, tok/sec: 183438.37, flops:192.57, batch-reuse:1
@ 3635 train 3.9773 , allloss: 3.9773, dt: 712.42ms, fracRes: 0.1733, norm(attn): 27.7500, norm(output): 0.4121, norm(x): 0.5549, norm(y): 0.9916, norm:0.4084, tok/sec: 183981.73, flops:193.14, batch-reuse:1
@ 3636 train 3.9686 , allloss: 3.9686, dt: 717.76ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5562, norm(y): 0.9911, norm:0.4665, tok/sec: 182613.64, flops:191.71, batch-reuse:1
@ 3637 train 4.0532 , allloss: 4.0532, dt: 709.68ms, fracRes: 0.1695, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5493, norm(y): 0.9915, norm:0.4675, tok/sec: 184690.55, flops:193.89, batch-reuse:1
@ 3638 train 4.0234 , allloss: 4.0234, dt: 703.81ms, fracRes: 0.1697, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5430, norm(y): 0.9915, norm:0.4105, tok/sec: 186232.84, flops:195.51, batch-reuse:1
@ 3639 train 4.0558 , allloss: 4.0558, dt: 708.47ms, fracRes: 0.1697, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5405, norm(y): 0.9917, norm:0.4649, tok/sec: 185006.66, flops:194.22, batch-reuse:1
@ 3640 train 3.9863 , allloss: 3.9863, dt: 711.04ms, fracRes: 0.1707, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5487, norm(y): 0.9916, norm:0.3997, tok/sec: 184338.24, flops:193.52, batch-reuse:1
@ 3641 train 4.0244 , allloss: 4.0244, dt: 711.59ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5537, norm(y): 0.9914, norm:0.4459, tok/sec: 184196.81, flops:193.37, batch-reuse:1
@ 3642 train 4.2157 , allloss: 4.2157, dt: 712.59ms, fracRes: 0.1713, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5479, norm(y): 0.9915, norm:0.4634, tok/sec: 183937.04, flops:193.10, batch-reuse:1
@ 3643 train 4.0171 , allloss: 4.0171, dt: 711.03ms, fracRes: 0.1731, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5513, norm(y): 0.9919, norm:0.4459, tok/sec: 184340.78, flops:193.52, batch-reuse:1
@ 3644 train 4.0938 , allloss: 4.0938, dt: 710.94ms, fracRes: 0.1720, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5393, norm(y): 0.9917, norm:0.4645, tok/sec: 184364.27, flops:193.55, batch-reuse:1
@ 3645 train 4.0050 , allloss: 4.0050, dt: 710.98ms, fracRes: 0.1711, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5403, norm(y): 0.9907, norm:0.4569, tok/sec: 184353.51, flops:193.53, batch-reuse:1
@ 3646 train 3.9971 , allloss: 3.9971, dt: 711.55ms, fracRes: 0.1733, norm(attn): 27.8750, norm(output): 0.4180, norm(x): 0.5617, norm(y): 0.9911, norm:0.4297, tok/sec: 184207.24, flops:193.38, batch-reuse:1
@ 3647 train 4.0308 , allloss: 4.0308, dt: 702.27ms, fracRes: 0.1738, norm(attn): 27.8750, norm(output): 0.4160, norm(x): 0.5594, norm(y): 0.9916, norm:0.4569, tok/sec: 186641.47, flops:195.94, batch-reuse:1
@ 3648 train 4.0620 , allloss: 4.0620, dt: 702.33ms, fracRes: 0.1736, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5477, norm(y): 0.9916, norm:0.4012, tok/sec: 186623.86, flops:195.92, batch-reuse:1
@ 3649 train 4.0777 , allloss: 4.0777, dt: 706.54ms, fracRes: 0.1733, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5483, norm(y): 0.9915, norm:0.4516, tok/sec: 185513.28, flops:194.75, batch-reuse:1
@ 3650 train 4.0861 , allloss: 4.0861, dt: 710.11ms, fracRes: 0.1733, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5569, norm(y): 0.9911, norm:0.4402, tok/sec: 184578.63, flops:193.77, batch-reuse:1
@ 3651 train 4.0395 , allloss: 4.0395, dt: 709.48ms, fracRes: 0.1735, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5591, norm(y): 0.9910, norm:0.3851, tok/sec: 184743.06, flops:193.94, batch-reuse:1
@ 3652 train 3.9654 , allloss: 3.9654, dt: 704.59ms, fracRes: 0.1738, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5544, norm(y): 0.9914, norm:0.3968, tok/sec: 186026.90, flops:195.29, batch-reuse:1
@ 3653 train 3.9603 , allloss: 3.9603, dt: 706.15ms, fracRes: 0.1742, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5493, norm(y): 0.9910, norm:0.3947, tok/sec: 185615.25, flops:194.86, batch-reuse:1
@ 3654 train 4.1119 , allloss: 4.1119, dt: 698.85ms, fracRes: 0.1744, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5511, norm(y): 0.9908, norm:0.3611, tok/sec: 187554.63, flops:196.90, batch-reuse:1
@ 3655 train 4.0994 , allloss: 4.0994, dt: 693.86ms, fracRes: 0.1753, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5579, norm(y): 0.9908, norm:0.4018, tok/sec: 188902.65, flops:198.31, batch-reuse:1
@ 3656 train 4.0761 , allloss: 4.0761, dt: 705.98ms, fracRes: 0.1743, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5569, norm(y): 0.9909, norm:0.4355, tok/sec: 185660.07, flops:194.91, batch-reuse:1
@ 3657 train 4.0886 , allloss: 4.0886, dt: 707.55ms, fracRes: 0.1733, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5507, norm(y): 0.9911, norm:0.4158, tok/sec: 185247.17, flops:194.47, batch-reuse:1
@ 3658 train 3.9885 , allloss: 3.9885, dt: 705.80ms, fracRes: 0.1730, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5458, norm(y): 0.9910, norm:0.3773, tok/sec: 185708.18, flops:194.96, batch-reuse:1
@ 3659 train 4.0476 , allloss: 4.0476, dt: 703.77ms, fracRes: 0.1741, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5509, norm(y): 0.9911, norm:0.4107, tok/sec: 186242.50, flops:195.52, batch-reuse:1
@ 3660 train 3.8749 , allloss: 3.8749, dt: 703.92ms, fracRes: 0.1740, norm(attn): 27.7500, norm(output): 0.4141, norm(x): 0.5568, norm(y): 0.9912, norm:0.4385, tok/sec: 186202.19, flops:195.48, batch-reuse:1
@ 3661 train 3.9359 , allloss: 3.9359, dt: 706.88ms, fracRes: 0.1730, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5510, norm(y): 0.9907, norm:0.4544, tok/sec: 185424.43, flops:194.66, batch-reuse:1
@ 3662 train 3.7831 , allloss: 3.7831, dt: 707.57ms, fracRes: 0.1729, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5478, norm(y): 0.9902, norm:0.4038, tok/sec: 185242.18, flops:194.47, batch-reuse:1
@ 3663 train 3.8698 , allloss: 3.8698, dt: 707.61ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.3984, norm(x): 0.5365, norm(y): 0.9900, norm:0.4447, tok/sec: 185232.63, flops:194.46, batch-reuse:1
@ 3664 train 3.9517 , allloss: 3.9517, dt: 711.47ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5410, norm(y): 0.9905, norm:0.3786, tok/sec: 184226.19, flops:193.40, batch-reuse:1
@ 3665 train 3.9554 , allloss: 3.9554, dt: 695.80ms, fracRes: 0.1745, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5474, norm(y): 0.9906, norm:0.4124, tok/sec: 188375.63, flops:197.76, batch-reuse:1
@ 3666 train 3.8130 , allloss: 3.8130, dt: 716.91ms, fracRes: 0.1738, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5473, norm(y): 0.9906, norm:0.4744, tok/sec: 182828.57, flops:191.93, batch-reuse:1
@ 3667 train 3.9268 , allloss: 3.9268, dt: 715.96ms, fracRes: 0.1745, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5560, norm(y): 0.9902, norm:0.4049, tok/sec: 183071.98, flops:192.19, batch-reuse:1
@ 3668 train 3.9306 , allloss: 3.9306, dt: 716.58ms, fracRes: 0.1729, norm(attn): 27.7500, norm(output): 0.4082, norm(x): 0.5478, norm(y): 0.9897, norm:0.4558, tok/sec: 182913.18, flops:192.02, batch-reuse:1
@ 3669 train 3.9702 , allloss: 3.9702, dt: 709.93ms, fracRes: 0.1756, norm(attn): 27.7500, norm(output): 0.4258, norm(x): 0.5675, norm(y): 0.9901, norm:0.5654, tok/sec: 184626.36, flops:193.82, batch-reuse:1
@ 3670 train 3.9919 , allloss: 3.9919, dt: 693.37ms, fracRes: 0.1749, norm(attn): 27.7500, norm(output): 0.4082, norm(x): 0.5519, norm(y): 0.9908, norm:0.4439, tok/sec: 189036.13, flops:198.45, batch-reuse:1
@ 3671 train 3.8566 , allloss: 3.8566, dt: 707.71ms, fracRes: 0.1724, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5460, norm(y): 0.9902, norm:0.4176, tok/sec: 185206.55, flops:194.43, batch-reuse:1
@ 3672 train 3.9164 , allloss: 3.9164, dt: 708.87ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5447, norm(y): 0.9899, norm:0.4136, tok/sec: 184901.88, flops:194.11, batch-reuse:1
@ 3673 train 3.9066 , allloss: 3.9066, dt: 704.44ms, fracRes: 0.1725, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5523, norm(y): 0.9903, norm:0.4201, tok/sec: 186066.63, flops:195.33, batch-reuse:1
@ 3674 train 3.8619 , allloss: 3.8619, dt: 707.25ms, fracRes: 0.1729, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5500, norm(y): 0.9903, norm:0.3788, tok/sec: 185326.05, flops:194.56, batch-reuse:1
@ 3675 train 3.9476 , allloss: 3.9476, dt: 707.88ms, fracRes: 0.1700, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5394, norm(y): 0.9902, norm:0.4450, tok/sec: 185162.32, flops:194.38, batch-reuse:1
@ 3676 train 3.9713 , allloss: 3.9713, dt: 705.09ms, fracRes: 0.1710, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5470, norm(y): 0.9905, norm:0.4121, tok/sec: 185893.86, flops:195.15, batch-reuse:1
@ 3677 train 3.9156 , allloss: 3.9156, dt: 707.00ms, fracRes: 0.1723, norm(attn): 27.7500, norm(output): 0.4082, norm(x): 0.5496, norm(y): 0.9901, norm:0.4473, tok/sec: 185392.67, flops:194.63, batch-reuse:1
@ 3678 train 3.9249 , allloss: 3.9249, dt: 707.41ms, fracRes: 0.1704, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5401, norm(y): 0.9897, norm:0.3836, tok/sec: 185284.82, flops:194.51, batch-reuse:1
@ 3679 train 3.8581 , allloss: 3.8581, dt: 704.42ms, fracRes: 0.1709, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5437, norm(y): 0.9900, norm:0.4293, tok/sec: 186070.22, flops:195.34, batch-reuse:1
@ 3680 train 3.8317 , allloss: 3.8317, dt: 704.60ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5419, norm(y): 0.9899, norm:0.3833, tok/sec: 186024.57, flops:195.29, batch-reuse:1
@ 3681 train 3.8491 , allloss: 3.8491, dt: 702.71ms, fracRes: 0.1720, norm(attn): 27.8750, norm(output): 0.4082, norm(x): 0.5449, norm(y): 0.9898, norm:0.4937, tok/sec: 186523.94, flops:195.81, batch-reuse:1
@ 3682 train 3.8136 , allloss: 3.8136, dt: 696.69ms, fracRes: 0.1728, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5522, norm(y): 0.9897, norm:0.3955, tok/sec: 188136.66, flops:197.51, batch-reuse:1
@ 3683 train 3.9404 , allloss: 3.9404, dt: 708.75ms, fracRes: 0.1723, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5492, norm(y): 0.9897, norm:0.3929, tok/sec: 184932.85, flops:194.14, batch-reuse:1
@ 3684 train 3.9995 , allloss: 3.9995, dt: 711.52ms, fracRes: 0.1715, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5398, norm(y): 0.9900, norm:0.4352, tok/sec: 184212.79, flops:193.39, batch-reuse:1
@ 3685 train 3.8330 , allloss: 3.8330, dt: 708.72ms, fracRes: 0.1711, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5419, norm(y): 0.9901, norm:0.3760, tok/sec: 184941.81, flops:194.15, batch-reuse:1
@ 3686 train 3.8538 , allloss: 3.8538, dt: 690.06ms, fracRes: 0.1709, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5400, norm(y): 0.9892, norm:0.4293, tok/sec: 189944.24, flops:199.40, batch-reuse:1
@ 3687 train 3.9174 , allloss: 3.9174, dt: 702.72ms, fracRes: 0.1705, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5449, norm(y): 0.9893, norm:0.3935, tok/sec: 186520.65, flops:195.81, batch-reuse:1
@ 3688 train 3.9715 , allloss: 3.9715, dt: 698.33ms, fracRes: 0.1721, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5491, norm(y): 0.9899, norm:0.4187, tok/sec: 187692.43, flops:197.04, batch-reuse:1
@ 3689 train 3.9752 , allloss: 3.9752, dt: 702.43ms, fracRes: 0.1734, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5471, norm(y): 0.9903, norm:0.3954, tok/sec: 186598.01, flops:195.89, batch-reuse:1
@ 3690 train 3.8460 , allloss: 3.8460, dt: 700.02ms, fracRes: 0.1713, norm(attn): 27.8750, norm(output): 0.3945, norm(x): 0.5343, norm(y): 0.9896, norm:0.4425, tok/sec: 187241.56, flops:196.57, batch-reuse:1
@ 3691 train 3.9427 , allloss: 3.9427, dt: 706.21ms, fracRes: 0.1716, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5397, norm(y): 0.9891, norm:0.3639, tok/sec: 185600.28, flops:194.84, batch-reuse:1
@ 3692 train 3.8720 , allloss: 3.8720, dt: 708.39ms, fracRes: 0.1727, norm(attn): 27.6250, norm(output): 0.4121, norm(x): 0.5522, norm(y): 0.9891, norm:0.4566, tok/sec: 185027.15, flops:194.24, batch-reuse:1
@ 3693 train 3.9509 , allloss: 3.9509, dt: 718.79ms, fracRes: 0.1725, norm(attn): 27.7500, norm(output): 0.4004, norm(x): 0.5407, norm(y): 0.9893, norm:0.3982, tok/sec: 182350.10, flops:191.43, batch-reuse:1
@ 3694 train 3.9274 , allloss: 3.9274, dt: 716.23ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.3945, norm(x): 0.5364, norm(y): 0.9894, norm:0.3823, tok/sec: 183001.84, flops:192.12, batch-reuse:1
@ 3695 train 3.9212 , allloss: 3.9212, dt: 698.17ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5384, norm(y): 0.9895, norm:0.3683, tok/sec: 187736.97, flops:197.09, batch-reuse:1
@ 3696 train 3.9333 , allloss: 3.9333, dt: 701.81ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5469, norm(y): 0.9895, norm:0.4169, tok/sec: 186762.96, flops:196.06, batch-reuse:1
@ 3697 train 3.9168 , allloss: 3.9168, dt: 712.43ms, fracRes: 0.1718, norm(attn): 27.8750, norm(output): 0.4043, norm(x): 0.5414, norm(y): 0.9893, norm:0.3592, tok/sec: 183977.91, flops:193.14, batch-reuse:1
@ 3698 train 4.0045 , allloss: 4.0045, dt: 706.56ms, fracRes: 0.1723, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5471, norm(y): 0.9894, norm:0.3629, tok/sec: 185507.40, flops:194.75, batch-reuse:1
@ 3699 train 3.8066 , allloss: 3.8066, dt: 705.21ms, fracRes: 0.1732, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5401, norm(y): 0.9886, norm:0.3937, tok/sec: 185862.69, flops:195.12, batch-reuse:1
@ 3700 train 3.9046 , allloss: 3.9046, dt: 706.96ms, fracRes: 0.1736, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5451, norm(y): 0.9887, norm:0.3721, tok/sec: 185403.23, flops:194.64, batch-reuse:1
@ 3701 train 3.9875 , allloss: 3.9875, dt: 707.84ms, fracRes: 0.1734, norm(attn): 27.8750, norm(output): 0.4121, norm(x): 0.5524, norm(y): 0.9890, norm:0.4583, tok/sec: 185171.24, flops:194.39, batch-reuse:1
@ 3702 train 3.9287 , allloss: 3.9287, dt: 707.26ms, fracRes: 0.1740, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5512, norm(y): 0.9888, norm:0.4074, tok/sec: 185322.86, flops:194.55, batch-reuse:1
@ 3703 train 3.8585 , allloss: 3.8585, dt: 706.39ms, fracRes: 0.1728, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5402, norm(y): 0.9886, norm:0.3792, tok/sec: 185551.54, flops:194.79, batch-reuse:1
@ 3704 train 3.8620 , allloss: 3.8620, dt: 695.33ms, fracRes: 0.1741, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5467, norm(y): 0.9887, norm:0.4335, tok/sec: 188503.13, flops:197.89, batch-reuse:1
@ 3705 train 3.9771 , allloss: 3.9771, dt: 707.91ms, fracRes: 0.1726, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5484, norm(y): 0.9883, norm:0.4516, tok/sec: 185153.40, flops:194.37, batch-reuse:1
@ 3706 train 3.8910 , allloss: 3.8910, dt: 700.62ms, fracRes: 0.1734, norm(attn): 27.7500, norm(output): 0.4062, norm(x): 0.5498, norm(y): 0.9876, norm:0.3945, tok/sec: 187079.14, flops:196.40, batch-reuse:1
@ 3707 train 4.0140 , allloss: 4.0140, dt: 706.64ms, fracRes: 0.1745, norm(attn): 27.8750, norm(output): 0.4141, norm(x): 0.5568, norm(y): 0.9879, norm:0.4123, tok/sec: 185487.31, flops:194.72, batch-reuse:1
@ 3708 train 4.0688 , allloss: 4.0688, dt: 708.99ms, fracRes: 0.1735, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5428, norm(y): 0.9873, norm:0.4388, tok/sec: 184870.98, flops:194.08, batch-reuse:1
@ 3709 train 4.0726 , allloss: 4.0726, dt: 719.73ms, fracRes: 0.1760, norm(attn): 27.8750, norm(output): 0.4004, norm(x): 0.5492, norm(y): 0.9868, norm:0.3824, tok/sec: 182112.70, flops:191.18, batch-reuse:1
@ 3710 train 4.1099 , allloss: 4.1099, dt: 719.15ms, fracRes: 0.1766, norm(attn): 27.6250, norm(output): 0.4062, norm(x): 0.5517, norm(y): 0.9859, norm:0.4186, tok/sec: 182258.45, flops:191.34, batch-reuse:1
@ 3711 train 4.1311 , allloss: 4.1311, dt: 718.92ms, fracRes: 0.1756, norm(attn): 27.6250, norm(output): 0.4082, norm(x): 0.5533, norm(y): 0.9854, norm:0.4335, tok/sec: 182317.80, flops:191.40, batch-reuse:1
@ 3712 train 4.1058 , allloss: 4.1058, dt: 716.23ms, fracRes: 0.1740, norm(attn): 27.6250, norm(output): 0.4082, norm(x): 0.5546, norm(y): 0.9846, norm:0.5136, tok/sec: 183002.26, flops:192.12, batch-reuse:1
@ 3713 train 4.1875 , allloss: 4.1875, dt: 705.92ms, fracRes: 0.1753, norm(attn): 27.7500, norm(output): 0.4121, norm(x): 0.5573, norm(y): 0.9854, norm:0.5571, tok/sec: 185674.81, flops:194.92, batch-reuse:1
@ 3714 train 4.1019 , allloss: 4.1019, dt: 718.17ms, fracRes: 0.1740, norm(attn): 27.7500, norm(output): 0.4180, norm(x): 0.5598, norm(y): 0.9867, norm:0.5606, tok/sec: 182507.19, flops:191.60, batch-reuse:1
@ 3715 train 4.1066 , allloss: 4.1066, dt: 716.22ms, fracRes: 0.1726, norm(attn): 27.8750, norm(output): 0.4102, norm(x): 0.5550, norm(y): 0.9861, norm:0.5048, tok/sec: 183004.88, flops:192.12, batch-reuse:1
@ 3716 train 4.0232 , allloss: 4.0232, dt: 718.07ms, fracRes: 0.1722, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5474, norm(y): 0.9853, norm:0.4875, tok/sec: 182533.12, flops:191.62, batch-reuse:1
@ 3717 train 4.0639 , allloss: 4.0639, dt: 702.59ms, fracRes: 0.1730, norm(attn): 27.8750, norm(output): 0.3965, norm(x): 0.5423, norm(y): 0.9855, norm:0.4200, tok/sec: 186556.35, flops:195.85, batch-reuse:1
@ 3718 train 4.0323 , allloss: 4.0323, dt: 705.42ms, fracRes: 0.1739, norm(attn): 27.7500, norm(output): 0.4004, norm(x): 0.5449, norm(y): 0.9860, norm:0.4367, tok/sec: 185805.78, flops:195.06, batch-reuse:1
@ 3719 train 4.1067 , allloss: 4.1067, dt: 709.01ms, fracRes: 0.1730, norm(attn): 27.8750, norm(output): 0.4023, norm(x): 0.5427, norm(y): 0.9850, norm:0.4074, tok/sec: 184866.50, flops:194.07, batch-reuse:1
@ 3720 train 4.0176 , allloss: 4.0176, dt: 711.91ms, fracRes: 0.1722, norm(attn): 27.7500, norm(output): 0.4062, norm(x): 0.5468, norm(y): 0.9841, norm:0.4080, tok/sec: 184113.28, flops:193.28, batch-reuse:1
@ 3721 train 4.0332 , allloss: 4.0332, dt: 709.23ms, fracRes: 0.1721, norm(attn): 27.7500, norm(output): 0.4043, norm(x): 0.5453, norm(y): 0.9825, norm:0.3977, tok/sec: 184808.77, flops:194.01, batch-reuse:1
@ 3722 train 3.9687 , allloss: 3.9687, dt: 708.03ms, fracRes: 0.1733, norm(attn): 27.6250, norm(output): 0.4023, norm(x): 0.5436, norm(y): 0.9801, norm:0.3774, tok/sec: 185122.91, flops:194.34, batch-reuse:1
@ 3723 train 4.0634 , allloss: 4.0634, dt: 708.36ms, fracRes: 0.1739, norm(attn): 27.5000, norm(output): 0.4004, norm(x): 0.5411, norm(y): 0.9780, norm:0.3760, tok/sec: 185034.69, flops:194.25, batch-reuse:1
@ 3724 train 4.1013 , allloss: 4.1013, dt: 711.57ms, fracRes: 0.1745, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5470, norm(y): 0.9782, norm:0.3968, tok/sec: 184201.99, flops:193.38, batch-reuse:1
@ 3725 train 4.0853 , allloss: 4.0853, dt: 714.78ms, fracRes: 0.1755, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5501, norm(y): 0.9785, norm:0.4190, tok/sec: 183374.37, flops:192.51, batch-reuse:1
@ 3726 train 4.1118 , allloss: 4.1118, dt: 716.23ms, fracRes: 0.1760, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5558, norm(y): 0.9800, norm:0.3928, tok/sec: 183002.02, flops:192.12, batch-reuse:1
@ 3727 train 4.0634 , allloss: 4.0634, dt: 705.09ms, fracRes: 0.1735, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5529, norm(y): 0.9809, norm:0.4660, tok/sec: 185895.18, flops:195.15, batch-reuse:1
@ 3728 train 4.0410 , allloss: 4.0410, dt: 709.06ms, fracRes: 0.1737, norm(attn): 27.6250, norm(output): 0.4121, norm(x): 0.5555, norm(y): 0.9811, norm:0.4530, tok/sec: 184853.32, flops:194.06, batch-reuse:1
@ 3729 train 4.0669 , allloss: 4.0669, dt: 710.12ms, fracRes: 0.1752, norm(attn): 27.5000, norm(output): 0.4160, norm(x): 0.5601, norm(y): 0.9798, norm:0.4375, tok/sec: 184577.82, flops:193.77, batch-reuse:1
@ 3730 train 4.0949 , allloss: 4.0949, dt: 704.06ms, fracRes: 0.1740, norm(attn): 27.5000, norm(output): 0.4062, norm(x): 0.5484, norm(y): 0.9748, norm:0.4966, tok/sec: 186165.24, flops:195.44, batch-reuse:1
@ 3731 train 4.0140 , allloss: 4.0140, dt: 694.27ms, fracRes: 0.1750, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5494, norm(y): 0.9616, norm:0.4354, tok/sec: 188790.68, flops:198.19, batch-reuse:1
@ 3732 train 4.1152 , allloss: 4.1152, dt: 701.28ms, fracRes: 0.1751, norm(attn): 27.1250, norm(output): 0.4102, norm(x): 0.5503, norm(y): 0.9500, norm:0.5065, tok/sec: 186903.98, flops:196.21, batch-reuse:1
@ 3733 train 4.1175 , allloss: 4.1175, dt: 706.91ms, fracRes: 0.1744, norm(attn): 27.0000, norm(output): 0.4121, norm(x): 0.5521, norm(y): 0.9514, norm:0.4061, tok/sec: 185414.30, flops:194.65, batch-reuse:1
@ 3734 train 4.0833 , allloss: 4.0833, dt: 703.31ms, fracRes: 0.1755, norm(attn): 27.1250, norm(output): 0.4102, norm(x): 0.5525, norm(y): 0.9525, norm:0.4307, tok/sec: 186364.73, flops:195.65, batch-reuse:1
@ 3735 train 4.1248 , allloss: 4.1248, dt: 714.55ms, fracRes: 0.1749, norm(attn): 27.3750, norm(output): 0.4102, norm(x): 0.5548, norm(y): 0.9571, norm:0.4346, tok/sec: 183431.70, flops:192.57, batch-reuse:1
@ 3736 train 4.1585 , allloss: 4.1585, dt: 714.42ms, fracRes: 0.1733, norm(attn): 27.5000, norm(output): 0.3984, norm(x): 0.5429, norm(y): 0.9632, norm:0.3798, tok/sec: 183466.53, flops:192.60, batch-reuse:1
@ 3737 train 4.0264 , allloss: 4.0264, dt: 707.44ms, fracRes: 0.1738, norm(attn): 27.5000, norm(output): 0.4023, norm(x): 0.5459, norm(y): 0.9643, norm:0.3839, tok/sec: 185275.77, flops:194.50, batch-reuse:1
@ 3738 train 4.0066 , allloss: 4.0066, dt: 711.22ms, fracRes: 0.1758, norm(attn): 27.5000, norm(output): 0.4082, norm(x): 0.5540, norm(y): 0.9621, norm:0.4063, tok/sec: 184291.96, flops:193.47, batch-reuse:1
@ 3739 train 4.0523 , allloss: 4.0523, dt: 712.17ms, fracRes: 0.1754, norm(attn): 27.2500, norm(output): 0.4023, norm(x): 0.5474, norm(y): 0.9550, norm:0.4404, tok/sec: 184044.68, flops:193.21, batch-reuse:1
@ 3740 train 4.1338 , allloss: 4.1338, dt: 713.51ms, fracRes: 0.1762, norm(attn): 27.2500, norm(output): 0.4062, norm(x): 0.5513, norm(y): 0.9521, norm:0.5412, tok/sec: 183700.04, flops:192.85, batch-reuse:1
@ 3741 train 4.2596 , allloss: 4.2596, dt: 716.46ms, fracRes: 0.1773, norm(attn): 27.2500, norm(output): 0.4141, norm(x): 0.5616, norm(y): 0.9503, norm:0.5795, tok/sec: 182944.96, flops:192.06, batch-reuse:1
@ 3742 train 4.0142 , allloss: 4.0142, dt: 718.95ms, fracRes: 0.1779, norm(attn): 27.2500, norm(output): 0.4082, norm(x): 0.5539, norm(y): 0.9456, norm:0.4568, tok/sec: 182311.03, flops:191.39, batch-reuse:1
@ 3743 train 4.0822 , allloss: 4.0822, dt: 712.92ms, fracRes: 0.1767, norm(attn): 27.0000, norm(output): 0.4043, norm(x): 0.5495, norm(y): 0.9450, norm:0.4676, tok/sec: 183851.66, flops:193.01, batch-reuse:1
@ 3744 train 4.2855 , allloss: 4.2855, dt: 721.21ms, fracRes: 0.1763, norm(attn): 26.8750, norm(output): 0.4102, norm(x): 0.5558, norm(y): 0.9455, norm:0.5124, tok/sec: 181739.26, flops:190.79, batch-reuse:1
@ 3745 train 4.0950 , allloss: 4.0950, dt: 699.24ms, fracRes: 0.1756, norm(attn): 27.2500, norm(output): 0.4180, norm(x): 0.5631, norm(y): 0.9520, norm:0.5499, tok/sec: 187450.33, flops:196.79, batch-reuse:1
@ 3746 train 4.0519 , allloss: 4.0519, dt: 696.73ms, fracRes: 0.1744, norm(attn): 27.5000, norm(output): 0.4102, norm(x): 0.5539, norm(y): 0.9501, norm:0.4825, tok/sec: 188123.52, flops:197.49, batch-reuse:1
@ 3747 train 4.0587 , allloss: 4.0587, dt: 704.01ms, fracRes: 0.1748, norm(attn): 27.5000, norm(output): 0.4043, norm(x): 0.5454, norm(y): 0.9404, norm:0.4438, tok/sec: 186180.24, flops:195.45, batch-reuse:1
@ 3748 train 4.0593 , allloss: 4.0593, dt: 717.22ms, fracRes: 0.1759, norm(attn): 26.7500, norm(output): 0.4102, norm(x): 0.5508, norm(y): 0.9311, norm:0.5063, tok/sec: 182751.14, flops:191.85, batch-reuse:1
@ 3749 train 4.0886 , allloss: 4.0886, dt: 715.11ms, fracRes: 0.1760, norm(attn): 26.1250, norm(output): 0.4102, norm(x): 0.5542, norm(y): 0.9118, norm:0.5371, tok/sec: 183288.72, flops:192.42, batch-reuse:1
@ 3750 train 8.3007 , allloss: 8.3007, dt: 715.50ms, fracRes: 0.1744, norm(attn): 26.2500, norm(output): 9.7500, norm(x): 9.8464, norm(y): 0.9299, norm:4.7067, tok/sec: 183189.29, flops:192.31, batch-reuse:1
@ 3751 train 4.7286 , allloss: 4.7286, dt: 715.27ms, fracRes: 0.1757, norm(attn): 26.1250, norm(output): 0.5742, norm(x): 0.7220, norm(y): 0.9237, norm:4426.9858, tok/sec: 183247.85, flops:192.37, batch-reuse:1
@ 3752 train 4.1089 , allloss: 4.1089, dt: 709.06ms, fracRes: 0.1790, norm(attn): 26.8750, norm(output): 0.4316, norm(x): 0.5811, norm(y): 0.9310, norm:1.0839, tok/sec: 184852.02, flops:194.06, batch-reuse:1
@ 3753 train 4.1605 , allloss: 4.1605, dt: 712.91ms, fracRes: 0.1775, norm(attn): 27.5000, norm(output): 0.4121, norm(x): 0.5625, norm(y): 0.9708, norm:0.5680, tok/sec: 183855.78, flops:193.01, batch-reuse:1
@ 3754 train 4.1006 , allloss: 4.1006, dt: 713.56ms, fracRes: 0.1777, norm(attn): 27.8750, norm(output): 0.4062, norm(x): 0.5520, norm(y): 0.9819, norm:0.5966, tok/sec: 183687.34, flops:192.84, batch-reuse:1
@ 3755 train 4.0979 , allloss: 4.0979, dt: 717.99ms, fracRes: 0.1802, norm(attn): 28.0000, norm(output): 0.4121, norm(x): 0.5622, norm(y): 0.9847, norm:0.5337, tok/sec: 182554.22, flops:191.65, batch-reuse:1
@ 3756 train 4.1854 , allloss: 4.1854, dt: 722.95ms, fracRes: 0.1829, norm(attn): 28.1250, norm(output): 0.4141, norm(x): 0.5665, norm(y): 0.9835, norm:0.4781, tok/sec: 181302.81, flops:190.33, batch-reuse:1
@ 3757 train 4.1145 , allloss: 4.1145, dt: 707.73ms, fracRes: 0.1792, norm(attn): 28.5000, norm(output): 0.4219, norm(x): 0.5705, norm(y): 0.9840, norm:0.5112, tok/sec: 185200.74, flops:194.42, batch-reuse:1
@ 3758 train 4.0792 , allloss: 4.0792, dt: 719.45ms, fracRes: 0.1763, norm(attn): 29.5000, norm(output): 0.4102, norm(x): 0.5569, norm(y): 0.9799, norm:0.4535, tok/sec: 182182.59, flops:191.26, batch-reuse:1
@ 3759 train 4.1118 , allloss: 4.1118, dt: 718.02ms, fracRes: 0.1746, norm(attn): 29.2500, norm(output): 0.4082, norm(x): 0.5499, norm(y): 0.9549, norm:3.1859, tok/sec: 182545.55, flops:191.64, batch-reuse:1
@ 3760 train 9.9146 , allloss: 9.9146, dt: 717.38ms, fracRes: 0.1821, norm(attn): 21.8750, norm(output): 7.5312, norm(x): 7.6971, norm(y): 0.9346, norm:39.8530, tok/sec: 182709.11, flops:191.81, batch-reuse:1
@ 3761 train 9.1870 , allloss: 9.1870, dt: 713.86ms, fracRes: 0.1788, norm(attn): 20.5000, norm(output): 7.3750, norm(x): 7.4605, norm(y): 0.9258, norm:234.4144, tok/sec: 183609.79, flops:192.75, batch-reuse:1
@ 3762 train 4.1496 , allloss: 4.1496, dt: 700.37ms, fracRes: 0.1693, norm(attn): 28.6250, norm(output): 0.6523, norm(x): 0.7915, norm(y): 0.9409, norm:153.7652, tok/sec: 187145.63, flops:196.47, batch-reuse:1
@ 3763 train 4.3581 , allloss: 4.3581, dt: 704.41ms, fracRes: 0.1722, norm(attn): 29.7500, norm(output): 0.5352, norm(x): 0.6820, norm(y): 0.9831, norm:67.0706, tok/sec: 186074.63, flops:195.34, batch-reuse:1
@ 3764 train 4.4272 , allloss: 4.4272, dt: 704.89ms, fracRes: 0.1696, norm(attn): 29.8750, norm(output): 0.7422, norm(x): 0.8812, norm(y): 0.9867, norm:71.5207, tok/sec: 185947.68, flops:195.21, batch-reuse:1
@ 3765 train 4.4898 , allloss: 4.4898, dt: 712.01ms, fracRes: 0.1698, norm(attn): 29.8750, norm(output): 0.8633, norm(x): 1.0004, norm(y): 0.9870, norm:13.3215, tok/sec: 184086.71, flops:193.25, batch-reuse:1
@ 3766 train 4.7736 , allloss: 4.7736, dt: 709.27ms, fracRes: 0.1657, norm(attn): 29.5000, norm(output): 2.7812, norm(x): 2.9148, norm(y): 0.9830, norm:153072.4688, tok/sec: 184798.95, flops:194.00, batch-reuse:1
@ 3767 train 5.0845 , allloss: 5.0845, dt: 713.53ms, fracRes: 0.1665, norm(attn): 29.0000, norm(output): 4.1875, norm(x): 4.2885, norm(y): 0.9804, norm:2185.8406, tok/sec: 183696.36, flops:192.84, batch-reuse:1
@ 3768 train 5.3326 , allloss: 5.3326, dt: 703.50ms, fracRes: 0.1608, norm(attn): 28.5000, norm(output): 5.1875, norm(x): 5.3372, norm(y): 0.9789, norm:7794.1177, tok/sec: 186314.77, flops:195.59, batch-reuse:1
@ 3769 train 6.1854 , allloss: 6.1854, dt: 708.67ms, fracRes: 0.1636, norm(attn): 28.1250, norm(output): 3.5938, norm(x): 3.7281, norm(y): 0.9704, norm:15543.2871, tok/sec: 184954.13, flops:194.17, batch-reuse:1
@ 3770 train 6.9602 , allloss: 6.9602, dt: 718.23ms, fracRes: 0.1684, norm(attn): 27.7500, norm(output): 6.2812, norm(x): 6.3951, norm(y): 0.9759, norm:23282.3906, tok/sec: 182493.49, flops:191.58, batch-reuse:1
@ 3771 train 6.4858 , allloss: 6.4858, dt: 710.25ms, fracRes: 0.1827, norm(attn): 28.6250, norm(output): 4.0000, norm(x): 4.1464, norm(y): 0.9831, norm:9465.1670, tok/sec: 184544.67, flops:193.74, batch-reuse:1
@ 3772 train 6.0178 , allloss: 6.0178, dt: 714.81ms, fracRes: 0.1922, norm(attn): 29.0000, norm(output): 2.4219, norm(x): 2.5514, norm(y): 0.9873, norm:545.0600, tok/sec: 183365.99, flops:192.50, batch-reuse:1
@ 3773 train 6.3206 , allloss: 6.3206, dt: 704.09ms, fracRes: 0.1873, norm(attn): 29.0000, norm(output): 0.7109, norm(x): 0.8547, norm(y): 0.9885, norm:39.1171, tok/sec: 186157.48, flops:195.43, batch-reuse:1
@ 3774 train 6.4874 , allloss: 6.4874, dt: 703.01ms, fracRes: 0.1878, norm(attn): 29.5000, norm(output): 0.6953, norm(x): 0.8497, norm(y): 0.9885, norm:5.4276, tok/sec: 186444.99, flops:195.73, batch-reuse:1
@ 3775 train 6.1662 , allloss: 6.1662, dt: 706.60ms, fracRes: 0.1930, norm(attn): 29.8750, norm(output): 0.6289, norm(x): 0.7807, norm(y): 0.9884, norm:4.4362, tok/sec: 185496.38, flops:194.73, batch-reuse:1
@ 3776 train 5.5397 , allloss: 5.5397, dt: 707.31ms, fracRes: 0.1880, norm(attn): 29.8750, norm(output): 0.5586, norm(x): 0.7118, norm(y): 0.9886, norm:2.8807, tok/sec: 185310.18, flops:194.54, batch-reuse:1
@ 3777 train 5.1872 , allloss: 5.1872, dt: 701.08ms, fracRes: 0.1770, norm(attn): 29.5000, norm(output): 0.5117, norm(x): 0.6571, norm(y): 0.9899, norm:2.9293, tok/sec: 186956.73, flops:196.27, batch-reuse:1
@ 3778 train 4.8760 , allloss: 4.8760, dt: 711.31ms, fracRes: 0.1831, norm(attn): 30.0000, norm(output): 0.4727, norm(x): 0.6212, norm(y): 0.9908, norm:1.6727, tok/sec: 184269.66, flops:193.45, batch-reuse:1
@ 3779 train 4.5957 , allloss: 4.5957, dt: 706.24ms, fracRes: 0.1784, norm(attn): 30.1250, norm(output): 0.4590, norm(x): 0.6089, norm(y): 0.9919, norm:1.0338, tok/sec: 185591.07, flops:194.83, batch-reuse:1
@ 3780 train 4.5522 , allloss: 4.5522, dt: 706.57ms, fracRes: 0.1734, norm(attn): 29.8750, norm(output): 0.4727, norm(x): 0.6142, norm(y): 0.9929, norm:0.8495, tok/sec: 185503.71, flops:194.74, batch-reuse:1
@ 3781 train 12.8429 , allloss: 12.8429, dt: 705.34ms, fracRes: 0.1705, norm(attn): 28.7500, norm(output): 2.7500, norm(x): 2.8599, norm(y): 0.9927, norm:91.5520, tok/sec: 185828.14, flops:195.08, batch-reuse:1
@ 3782 train 4.6360 , allloss: 4.6360, dt: 707.41ms, fracRes: 0.1652, norm(attn): 29.7500, norm(output): 0.4785, norm(x): 0.6124, norm(y): 0.9944, norm:2.5429, tok/sec: 185284.20, flops:194.51, batch-reuse:1
@ 3783 train 4.4382 , allloss: 4.4382, dt: 705.48ms, fracRes: 0.1688, norm(attn): 30.5000, norm(output): 0.4707, norm(x): 0.6086, norm(y): 0.9948, norm:1.0919, tok/sec: 185792.53, flops:195.05, batch-reuse:1
@ 3784 train 4.4243 , allloss: 4.4243, dt: 708.44ms, fracRes: 0.1667, norm(attn): 31.6250, norm(output): 0.4668, norm(x): 0.5987, norm(y): 0.9946, norm:0.8416, tok/sec: 185014.88, flops:194.23, batch-reuse:1
@ 3785 train 4.3393 , allloss: 4.3393, dt: 708.73ms, fracRes: 0.1652, norm(attn): 31.7500, norm(output): 0.4688, norm(x): 0.5982, norm(y): 0.9941, norm:0.6858, tok/sec: 184939.76, flops:194.15, batch-reuse:1
@ 3786 train 4.3007 , allloss: 4.3007, dt: 706.01ms, fracRes: 0.1667, norm(attn): 31.7500, norm(output): 0.4727, norm(x): 0.6043, norm(y): 0.9938, norm:0.5778, tok/sec: 185652.05, flops:194.90, batch-reuse:1
@ 3787 train 4.3210 , allloss: 4.3210, dt: 693.63ms, fracRes: 0.1668, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5794, norm(y): 0.9936, norm:0.6602, tok/sec: 188965.04, flops:198.38, batch-reuse:1
@ 3788 train 4.2680 , allloss: 4.2680, dt: 704.95ms, fracRes: 0.1686, norm(attn): 30.3750, norm(output): 0.4336, norm(x): 0.5678, norm(y): 0.9932, norm:0.6019, tok/sec: 185931.02, flops:195.19, batch-reuse:1
@ 3789 train 12.6941 , allloss: 12.6941, dt: 698.07ms, fracRes: 0.1702, norm(attn): 30.1250, norm(output): 10.9375, norm(x): 11.0049, norm(y): 0.9875, norm:16.4261, tok/sec: 187764.42, flops:197.12, batch-reuse:1
@ 3790 train 11.8071 , allloss: 11.8071, dt: 698.61ms, fracRes: 0.1717, norm(attn): 31.7500, norm(output): 13.2500, norm(x): 13.4729, norm(y): 0.9867, norm:16.2999, tok/sec: 187617.16, flops:196.96, batch-reuse:1
@ 3791 train 10.5395 , allloss: 10.5395, dt: 702.07ms, fracRes: 0.1764, norm(attn): 31.3750, norm(output): 10.8750, norm(x): 10.9194, norm(y): 0.9879, norm:30.9370, tok/sec: 186694.14, flops:195.99, batch-reuse:1
@ 3792 train 4.4792 , allloss: 4.4792, dt: 712.53ms, fracRes: 0.1762, norm(attn): 30.2500, norm(output): 0.4590, norm(x): 0.6046, norm(y): 0.9948, norm:1.6878, tok/sec: 183954.21, flops:193.12, batch-reuse:1
@ 3793 train 4.3680 , allloss: 4.3680, dt: 690.08ms, fracRes: 0.1735, norm(attn): 31.6250, norm(output): 0.4395, norm(x): 0.5819, norm(y): 0.9947, norm:0.6517, tok/sec: 189938.27, flops:199.40, batch-reuse:1
@ 3794 train 4.2896 , allloss: 4.2896, dt: 692.96ms, fracRes: 0.1736, norm(attn): 31.6250, norm(output): 0.4434, norm(x): 0.5826, norm(y): 0.9952, norm:0.8211, tok/sec: 189148.00, flops:198.57, batch-reuse:1
@ 3795 train 4.1928 , allloss: 4.1928, dt: 707.48ms, fracRes: 0.1721, norm(attn): 31.6250, norm(output): 0.4414, norm(x): 0.5821, norm(y): 0.9946, norm:0.6046, tok/sec: 185266.59, flops:194.49, batch-reuse:1
@ 3796 train 4.2964 , allloss: 4.2964, dt: 708.22ms, fracRes: 0.1705, norm(attn): 31.7500, norm(output): 0.4434, norm(x): 0.5834, norm(y): 0.9945, norm:0.6458, tok/sec: 185073.56, flops:194.29, batch-reuse:1
@ 3797 train 4.2734 , allloss: 4.2734, dt: 707.37ms, fracRes: 0.1713, norm(attn): 31.7500, norm(output): 0.4629, norm(x): 0.6000, norm(y): 0.9946, norm:0.6671, tok/sec: 185294.06, flops:194.52, batch-reuse:1
@ 3798 train 4.1953 , allloss: 4.1953, dt: 708.93ms, fracRes: 0.1722, norm(attn): 31.8750, norm(output): 0.4492, norm(x): 0.5863, norm(y): 0.9946, norm:0.5613, tok/sec: 184886.83, flops:194.09, batch-reuse:1
@ 3799 train 4.2031 , allloss: 4.2031, dt: 706.42ms, fracRes: 0.1727, norm(attn): 31.8750, norm(output): 0.4551, norm(x): 0.5917, norm(y): 0.9951, norm:0.6121, tok/sec: 185543.59, flops:194.78, batch-reuse:1
@ 3800 train 4.1797 , allloss: 4.1797, dt: 707.71ms, fracRes: 0.1734, norm(attn): 31.8750, norm(output): 0.4531, norm(x): 0.5945, norm(y): 0.9943, norm:0.4919, tok/sec: 185206.05, flops:194.43, batch-reuse:1
@ 3801 train 4.1400 , allloss: 4.1400, dt: 704.23ms, fracRes: 0.1733, norm(attn): 31.8750, norm(output): 0.4512, norm(x): 0.5935, norm(y): 0.9937, norm:0.5448, tok/sec: 186121.06, flops:195.39, batch-reuse:1
@ 3802 train 4.1797 , allloss: 4.1797, dt: 718.86ms, fracRes: 0.1724, norm(attn): 31.8750, norm(output): 0.4512, norm(x): 0.5892, norm(y): 0.9938, norm:0.4354, tok/sec: 182332.50, flops:191.41, batch-reuse:1
@ 3803 train 4.1586 , allloss: 4.1586, dt: 725.09ms, fracRes: 0.1740, norm(attn): 31.8750, norm(output): 0.4531, norm(x): 0.5932, norm(y): 0.9941, norm:0.4871, tok/sec: 180766.58, flops:189.77, batch-reuse:1
@ 3804 train 4.0864 , allloss: 4.0864, dt: 720.58ms, fracRes: 0.1724, norm(attn): 32.0000, norm(output): 0.4551, norm(x): 0.5934, norm(y): 0.9944, norm:0.4893, tok/sec: 181898.67, flops:190.96, batch-reuse:1
@ 3805 train 4.2151 , allloss: 4.2151, dt: 720.12ms, fracRes: 0.1711, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5824, norm(y): 0.9946, norm:0.4183, tok/sec: 182013.28, flops:191.08, batch-reuse:1
@ 3806 train 4.1291 , allloss: 4.1291, dt: 717.10ms, fracRes: 0.1721, norm(attn): 32.0000, norm(output): 0.4473, norm(x): 0.5875, norm(y): 0.9942, norm:0.4541, tok/sec: 182781.34, flops:191.88, batch-reuse:1
@ 3807 train 4.0580 , allloss: 4.0580, dt: 719.35ms, fracRes: 0.1727, norm(attn): 31.8750, norm(output): 0.4453, norm(x): 0.5871, norm(y): 0.9942, norm:0.3786, tok/sec: 182209.15, flops:191.28, batch-reuse:1
@ 3808 train 4.0887 , allloss: 4.0887, dt: 722.77ms, fracRes: 0.1735, norm(attn): 31.8750, norm(output): 0.4551, norm(x): 0.5934, norm(y): 0.9939, norm:0.4198, tok/sec: 181347.01, flops:190.38, batch-reuse:1
@ 3809 train 4.0627 , allloss: 4.0627, dt: 717.68ms, fracRes: 0.1724, norm(attn): 31.8750, norm(output): 0.4453, norm(x): 0.5870, norm(y): 0.9941, norm:0.3571, tok/sec: 182633.84, flops:191.73, batch-reuse:1
@ 3810 train 4.0372 , allloss: 4.0372, dt: 721.38ms, fracRes: 0.1725, norm(attn): 32.0000, norm(output): 0.4531, norm(x): 0.5887, norm(y): 0.9941, norm:0.4135, tok/sec: 181697.22, flops:190.75, batch-reuse:1
@ 3811 train 3.9969 , allloss: 3.9969, dt: 721.22ms, fracRes: 0.1740, norm(attn): 31.8750, norm(output): 0.4492, norm(x): 0.5943, norm(y): 0.9942, norm:0.3771, tok/sec: 181736.08, flops:190.79, batch-reuse:1
@ 3812 train 4.0544 , allloss: 4.0544, dt: 719.78ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4473, norm(x): 0.5886, norm(y): 0.9942, norm:0.3502, tok/sec: 182101.00, flops:191.17, batch-reuse:1
@ 3813 train 3.9242 , allloss: 3.9242, dt: 708.30ms, fracRes: 0.1729, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5812, norm(y): 0.9937, norm:0.3559, tok/sec: 185052.25, flops:194.27, batch-reuse:1
@ 3814 train 4.1064 , allloss: 4.1064, dt: 943.33ms, fracRes: 0.1741, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5817, norm(y): 0.9942, norm:0.3484, tok/sec: 138945.72, flops:145.87, batch-reuse:1
@ 3815 train 4.0191 , allloss: 4.0191, dt: 702.27ms, fracRes: 0.1760, norm(attn): 32.0000, norm(output): 0.4531, norm(x): 0.5942, norm(y): 0.9936, norm:0.4188, tok/sec: 186640.33, flops:195.94, batch-reuse:1
@ 3816 train 4.0952 , allloss: 4.0952, dt: 709.71ms, fracRes: 0.1751, norm(attn): 32.0000, norm(output): 0.4531, norm(x): 0.5926, norm(y): 0.9935, norm:0.3939, tok/sec: 184685.03, flops:193.88, batch-reuse:1
@ 3817 train 4.0738 , allloss: 4.0738, dt: 710.07ms, fracRes: 0.1741, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5886, norm(y): 0.9936, norm:0.3643, tok/sec: 184590.53, flops:193.78, batch-reuse:1
@ 3818 train 4.0838 , allloss: 4.0838, dt: 705.75ms, fracRes: 0.1722, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5787, norm(y): 0.9939, norm:0.3622, tok/sec: 185719.85, flops:194.97, batch-reuse:1
@ 3819 train 4.0380 , allloss: 4.0380, dt: 705.02ms, fracRes: 0.1740, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5790, norm(y): 0.9938, norm:0.3995, tok/sec: 185911.84, flops:195.17, batch-reuse:1
@ 3820 train 4.1079 , allloss: 4.1079, dt: 720.07ms, fracRes: 0.1752, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5797, norm(y): 0.9943, norm:0.3675, tok/sec: 182027.26, flops:191.09, batch-reuse:1
@ 3821 train 4.1328 , allloss: 4.1328, dt: 716.28ms, fracRes: 0.1745, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5899, norm(y): 0.9942, norm:0.4015, tok/sec: 182989.47, flops:192.10, batch-reuse:1
@ 3822 train 3.9874 , allloss: 3.9874, dt: 714.92ms, fracRes: 0.1754, norm(attn): 32.0000, norm(output): 0.4492, norm(x): 0.5926, norm(y): 0.9938, norm:0.3756, tok/sec: 183337.25, flops:192.47, batch-reuse:1
@ 3823 train 4.0656 , allloss: 4.0656, dt: 696.17ms, fracRes: 0.1747, norm(attn): 32.2500, norm(output): 0.4434, norm(x): 0.5875, norm(y): 0.9937, norm:0.3808, tok/sec: 188275.83, flops:197.65, batch-reuse:1
@ 3824 train 4.0038 , allloss: 4.0038, dt: 705.15ms, fracRes: 0.1739, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5827, norm(y): 0.9939, norm:0.3715, tok/sec: 185879.28, flops:195.14, batch-reuse:1
@ 3825 train 3.9921 , allloss: 3.9921, dt: 696.32ms, fracRes: 0.1752, norm(attn): 32.0000, norm(output): 0.4512, norm(x): 0.5958, norm(y): 0.9944, norm:0.3853, tok/sec: 188236.05, flops:197.61, batch-reuse:1
@ 3826 train 4.0707 , allloss: 4.0707, dt: 693.50ms, fracRes: 0.1749, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5842, norm(y): 0.9938, norm:0.4342, tok/sec: 188999.41, flops:198.41, batch-reuse:1
@ 3827 train 4.0132 , allloss: 4.0132, dt: 706.53ms, fracRes: 0.1741, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5814, norm(y): 0.9937, norm:0.3582, tok/sec: 185515.54, flops:194.75, batch-reuse:1
@ 3828 train 3.9846 , allloss: 3.9846, dt: 706.87ms, fracRes: 0.1745, norm(attn): 32.2500, norm(output): 0.4434, norm(x): 0.5849, norm(y): 0.9937, norm:0.3760, tok/sec: 185426.43, flops:194.66, batch-reuse:1
@ 3829 train 4.0246 , allloss: 4.0246, dt: 683.70ms, fracRes: 0.1742, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5874, norm(y): 0.9937, norm:0.3692, tok/sec: 191709.99, flops:201.26, batch-reuse:1
@ 3830 train 4.0629 , allloss: 4.0629, dt: 694.76ms, fracRes: 0.1748, norm(attn): 32.0000, norm(output): 0.4570, norm(x): 0.5978, norm(y): 0.9939, norm:0.3966, tok/sec: 188656.70, flops:198.05, batch-reuse:1
@ 3831 train 3.9134 , allloss: 3.9134, dt: 706.99ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4492, norm(x): 0.5920, norm(y): 0.9941, norm:0.3539, tok/sec: 185394.48, flops:194.63, batch-reuse:1
@ 3832 train 3.9123 , allloss: 3.9123, dt: 694.92ms, fracRes: 0.1754, norm(attn): 32.2500, norm(output): 0.4531, norm(x): 0.5948, norm(y): 0.9936, norm:0.4955, tok/sec: 188613.27, flops:198.01, batch-reuse:1
@ 3833 train 3.9917 , allloss: 3.9917, dt: 704.08ms, fracRes: 0.1738, norm(attn): 32.0000, norm(output): 0.4512, norm(x): 0.5923, norm(y): 0.9932, norm:0.4037, tok/sec: 186160.82, flops:195.43, batch-reuse:1
@ 3834 train 4.0342 , allloss: 4.0342, dt: 714.15ms, fracRes: 0.1751, norm(attn): 32.0000, norm(output): 0.4492, norm(x): 0.5928, norm(y): 0.9936, norm:0.3721, tok/sec: 183535.68, flops:192.68, batch-reuse:1
@ 3835 train 3.9316 , allloss: 3.9316, dt: 694.49ms, fracRes: 0.1749, norm(attn): 32.0000, norm(output): 0.4492, norm(x): 0.5912, norm(y): 0.9937, norm:0.4649, tok/sec: 188730.53, flops:198.13, batch-reuse:1
@ 3836 train 3.9994 , allloss: 3.9994, dt: 698.45ms, fracRes: 0.1761, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5889, norm(y): 0.9937, norm:0.4129, tok/sec: 187660.84, flops:197.01, batch-reuse:1
@ 3837 train 4.1083 , allloss: 4.1083, dt: 704.53ms, fracRes: 0.1737, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5785, norm(y): 0.9938, norm:0.3754, tok/sec: 186042.32, flops:195.31, batch-reuse:1
@ 3838 train 3.9894 , allloss: 3.9894, dt: 700.07ms, fracRes: 0.1742, norm(attn): 31.8750, norm(output): 0.4434, norm(x): 0.5850, norm(y): 0.9937, norm:0.3759, tok/sec: 187227.27, flops:196.55, batch-reuse:1
@ 3839 train 3.9786 , allloss: 3.9786, dt: 705.02ms, fracRes: 0.1737, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5844, norm(y): 0.9935, norm:0.4189, tok/sec: 185911.21, flops:195.17, batch-reuse:1
@ 3840 train 4.1080 , allloss: 4.1080, dt: 704.52ms, fracRes: 0.1739, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5890, norm(y): 0.9936, norm:0.4170, tok/sec: 186045.54, flops:195.31, batch-reuse:1
@ 3841 train 4.0456 , allloss: 4.0456, dt: 714.61ms, fracRes: 0.1741, norm(attn): 32.0000, norm(output): 0.4512, norm(x): 0.5924, norm(y): 0.9938, norm:0.4085, tok/sec: 183417.81, flops:192.55, batch-reuse:1
@ 3842 train 4.0401 , allloss: 4.0401, dt: 707.99ms, fracRes: 0.1759, norm(attn): 31.8750, norm(output): 0.4570, norm(x): 0.5985, norm(y): 0.9944, norm:0.5366, tok/sec: 185132.14, flops:194.35, batch-reuse:1
@ 3843 train 4.0558 , allloss: 4.0558, dt: 707.23ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5743, norm(y): 0.9934, norm:0.4739, tok/sec: 185331.92, flops:194.56, batch-reuse:1
@ 3844 train 3.9809 , allloss: 3.9809, dt: 711.96ms, fracRes: 0.1719, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5710, norm(y): 0.9930, norm:0.4515, tok/sec: 184101.26, flops:193.27, batch-reuse:1
@ 3845 train 3.9736 , allloss: 3.9736, dt: 703.71ms, fracRes: 0.1720, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5842, norm(y): 0.9933, norm:0.4259, tok/sec: 186257.83, flops:195.53, batch-reuse:1
@ 3846 train 3.7804 , allloss: 3.7804, dt: 705.46ms, fracRes: 0.1708, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5884, norm(y): 0.9932, norm:0.4691, tok/sec: 185797.55, flops:195.05, batch-reuse:1
@ 3847 train 4.0713 , allloss: 4.0713, dt: 687.82ms, fracRes: 0.1708, norm(attn): 32.2500, norm(output): 0.4473, norm(x): 0.5869, norm(y): 0.9938, norm:0.3935, tok/sec: 190562.29, flops:200.05, batch-reuse:1
@ 3848 train 3.9722 , allloss: 3.9722, dt: 698.75ms, fracRes: 0.1717, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5783, norm(y): 0.9933, norm:0.4172, tok/sec: 187580.03, flops:196.92, batch-reuse:1
@ 3849 train 3.8679 , allloss: 3.8679, dt: 711.31ms, fracRes: 0.1722, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5747, norm(y): 0.9928, norm:0.4424, tok/sec: 184268.67, flops:193.45, batch-reuse:1
@ 3850 train 3.9391 , allloss: 3.9391, dt: 711.98ms, fracRes: 0.1725, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5788, norm(y): 0.9926, norm:0.3835, tok/sec: 184096.02, flops:193.26, batch-reuse:1
@ 3851 train 3.9277 , allloss: 3.9277, dt: 708.36ms, fracRes: 0.1726, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5825, norm(y): 0.9930, norm:0.4950, tok/sec: 185035.99, flops:194.25, batch-reuse:1
@ 3852 train 3.8713 , allloss: 3.8713, dt: 702.14ms, fracRes: 0.1724, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5828, norm(y): 0.9930, norm:0.3916, tok/sec: 186675.63, flops:195.97, batch-reuse:1
@ 3853 train 3.9516 , allloss: 3.9516, dt: 696.69ms, fracRes: 0.1734, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5806, norm(y): 0.9931, norm:0.3994, tok/sec: 188134.34, flops:197.50, batch-reuse:1
@ 3854 train 3.9280 , allloss: 3.9280, dt: 711.04ms, fracRes: 0.1721, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5730, norm(y): 0.9929, norm:0.3517, tok/sec: 184337.25, flops:193.52, batch-reuse:1
@ 3855 train 3.8447 , allloss: 3.8447, dt: 712.44ms, fracRes: 0.1715, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5692, norm(y): 0.9926, norm:0.4142, tok/sec: 183975.64, flops:193.14, batch-reuse:1
@ 3856 train 3.9098 , allloss: 3.9098, dt: 712.18ms, fracRes: 0.1718, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5790, norm(y): 0.9931, norm:0.4187, tok/sec: 184043.20, flops:193.21, batch-reuse:1
@ 3857 train 3.8005 , allloss: 3.8005, dt: 705.02ms, fracRes: 0.1738, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5882, norm(y): 0.9937, norm:0.4530, tok/sec: 185911.59, flops:195.17, batch-reuse:1
@ 3858 train 3.9057 , allloss: 3.9057, dt: 708.47ms, fracRes: 0.1717, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5735, norm(y): 0.9930, norm:0.4343, tok/sec: 185006.79, flops:194.22, batch-reuse:1
@ 3859 train 3.8696 , allloss: 3.8696, dt: 704.15ms, fracRes: 0.1720, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5797, norm(y): 0.9931, norm:0.3657, tok/sec: 186143.18, flops:195.41, batch-reuse:1
@ 3860 train 3.9379 , allloss: 3.9379, dt: 711.88ms, fracRes: 0.1749, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5887, norm(y): 0.9928, norm:0.4934, tok/sec: 184120.00, flops:193.29, batch-reuse:1
@ 3861 train 3.9525 , allloss: 3.9525, dt: 708.33ms, fracRes: 0.1717, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5751, norm(y): 0.9932, norm:0.4362, tok/sec: 185044.84, flops:194.26, batch-reuse:1
@ 3862 train 3.9449 , allloss: 3.9449, dt: 698.76ms, fracRes: 0.1716, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5721, norm(y): 0.9928, norm:0.4173, tok/sec: 187578.69, flops:196.92, batch-reuse:1
@ 3863 train 3.9633 , allloss: 3.9633, dt: 716.56ms, fracRes: 0.1715, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5815, norm(y): 0.9930, norm:0.4489, tok/sec: 182919.39, flops:192.03, batch-reuse:1
@ 3864 train 3.9317 , allloss: 3.9317, dt: 707.19ms, fracRes: 0.1739, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5867, norm(y): 0.9933, norm:0.4045, tok/sec: 185340.98, flops:194.57, batch-reuse:1
@ 3865 train 3.9787 , allloss: 3.9787, dt: 711.03ms, fracRes: 0.1718, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5731, norm(y): 0.9933, norm:0.4741, tok/sec: 184342.20, flops:193.52, batch-reuse:1
@ 3866 train 3.8529 , allloss: 3.8529, dt: 708.53ms, fracRes: 0.1719, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5733, norm(y): 0.9925, norm:0.3869, tok/sec: 184990.42, flops:194.20, batch-reuse:1
@ 3867 train 3.8672 , allloss: 3.8672, dt: 715.56ms, fracRes: 0.1714, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5800, norm(y): 0.9931, norm:0.4063, tok/sec: 183174.70, flops:192.30, batch-reuse:1
@ 3868 train 3.8260 , allloss: 3.8260, dt: 698.28ms, fracRes: 0.1706, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5799, norm(y): 0.9925, norm:0.4030, tok/sec: 187706.08, flops:197.05, batch-reuse:1
@ 3869 train 3.8141 , allloss: 3.8141, dt: 712.80ms, fracRes: 0.1706, norm(attn): 32.0000, norm(output): 0.4355, norm(x): 0.5783, norm(y): 0.9927, norm:0.3796, tok/sec: 183883.58, flops:193.04, batch-reuse:1
@ 3870 train 3.8641 , allloss: 3.8641, dt: 717.48ms, fracRes: 0.1718, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5761, norm(y): 0.9930, norm:0.4150, tok/sec: 182684.58, flops:191.78, batch-reuse:1
@ 3871 train 3.9493 , allloss: 3.9493, dt: 715.55ms, fracRes: 0.1719, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5751, norm(y): 0.9930, norm:0.4547, tok/sec: 183177.38, flops:192.30, batch-reuse:1
@ 3872 train 3.9395 , allloss: 3.9395, dt: 702.85ms, fracRes: 0.1720, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5738, norm(y): 0.9928, norm:0.3891, tok/sec: 186486.80, flops:195.77, batch-reuse:1
@ 3873 train 3.9060 , allloss: 3.9060, dt: 703.87ms, fracRes: 0.1714, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5667, norm(y): 0.9926, norm:0.4043, tok/sec: 186217.39, flops:195.49, batch-reuse:1
@ 3874 train 3.9102 , allloss: 3.9102, dt: 709.33ms, fracRes: 0.1728, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5729, norm(y): 0.9931, norm:0.3650, tok/sec: 184782.37, flops:193.98, batch-reuse:1
@ 3875 train 3.8611 , allloss: 3.8611, dt: 709.49ms, fracRes: 0.1734, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5722, norm(y): 0.9931, norm:0.4119, tok/sec: 184741.20, flops:193.94, batch-reuse:1
@ 3876 train 3.8835 , allloss: 3.8835, dt: 696.89ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4355, norm(x): 0.5800, norm(y): 0.9929, norm:0.3969, tok/sec: 188082.46, flops:197.45, batch-reuse:1
@ 3877 train 3.9487 , allloss: 3.9487, dt: 707.04ms, fracRes: 0.1729, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5740, norm(y): 0.9928, norm:0.3780, tok/sec: 185380.41, flops:194.61, batch-reuse:1
@ 3878 train 3.8764 , allloss: 3.8764, dt: 689.57ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5751, norm(y): 0.9926, norm:0.4052, tok/sec: 190076.97, flops:199.54, batch-reuse:1
@ 3879 train 3.9139 , allloss: 3.9139, dt: 703.45ms, fracRes: 0.1744, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5752, norm(y): 0.9928, norm:0.4159, tok/sec: 186327.40, flops:195.61, batch-reuse:1
@ 3880 train 4.0369 , allloss: 4.0369, dt: 717.94ms, fracRes: 0.1749, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5784, norm(y): 0.9930, norm:0.4322, tok/sec: 182566.83, flops:191.66, batch-reuse:1
@ 3881 train 3.9455 , allloss: 3.9455, dt: 715.15ms, fracRes: 0.1723, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5766, norm(y): 0.9929, norm:0.3552, tok/sec: 183277.90, flops:192.41, batch-reuse:1
@ 3882 train 3.9278 , allloss: 3.9278, dt: 707.94ms, fracRes: 0.1720, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5781, norm(y): 0.9931, norm:0.4415, tok/sec: 185146.04, flops:194.37, batch-reuse:1
@ 3883 train 3.8177 , allloss: 3.8177, dt: 703.43ms, fracRes: 0.1715, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5738, norm(y): 0.9930, norm:0.3922, tok/sec: 186332.38, flops:195.61, batch-reuse:1
@ 3884 train 3.9293 , allloss: 3.9293, dt: 716.56ms, fracRes: 0.1720, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5682, norm(y): 0.9929, norm:0.4238, tok/sec: 182918.36, flops:192.03, batch-reuse:1
@ 3885 train 3.9972 , allloss: 3.9972, dt: 709.05ms, fracRes: 0.1725, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5699, norm(y): 0.9928, norm:0.4348, tok/sec: 184854.75, flops:194.06, batch-reuse:1
@ 3886 train 3.8985 , allloss: 3.8985, dt: 711.29ms, fracRes: 0.1720, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5678, norm(y): 0.9925, norm:0.4695, tok/sec: 184272.99, flops:193.45, batch-reuse:1
@ 3887 train 3.8971 , allloss: 3.8971, dt: 712.30ms, fracRes: 0.1712, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5714, norm(y): 0.9926, norm:0.4213, tok/sec: 184011.66, flops:193.18, batch-reuse:1
@ 3888 train 3.9973 , allloss: 3.9973, dt: 714.95ms, fracRes: 0.1718, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5720, norm(y): 0.9931, norm:0.4575, tok/sec: 183331.08, flops:192.46, batch-reuse:1
@ 3889 train 3.9333 , allloss: 3.9333, dt: 719.38ms, fracRes: 0.1730, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5805, norm(y): 0.9927, norm:0.4239, tok/sec: 182200.22, flops:191.27, batch-reuse:1
@ 3890 train 3.9087 , allloss: 3.9087, dt: 712.41ms, fracRes: 0.1742, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5880, norm(y): 0.9926, norm:0.4099, tok/sec: 183984.38, flops:193.15, batch-reuse:1
@ 3891 train 3.8191 , allloss: 3.8191, dt: 717.98ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5766, norm(y): 0.9928, norm:0.4437, tok/sec: 182556.16, flops:191.65, batch-reuse:1
@ 3892 train 3.9339 , allloss: 3.9339, dt: 719.54ms, fracRes: 0.1722, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5672, norm(y): 0.9923, norm:0.4122, tok/sec: 182160.25, flops:191.23, batch-reuse:1
@ 3893 train 3.9600 , allloss: 3.9600, dt: 711.05ms, fracRes: 0.1733, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5760, norm(y): 0.9932, norm:0.4145, tok/sec: 184334.91, flops:193.52, batch-reuse:1
@ 3894 train 4.1130 , allloss: 4.1130, dt: 700.61ms, fracRes: 0.1750, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5865, norm(y): 0.9938, norm:0.4125, tok/sec: 187083.15, flops:196.40, batch-reuse:1
@ 3895 train 4.0694 , allloss: 4.0694, dt: 706.95ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4355, norm(x): 0.5794, norm(y): 0.9937, norm:0.3622, tok/sec: 185404.67, flops:194.64, batch-reuse:1
@ 3896 train 4.0284 , allloss: 4.0284, dt: 708.21ms, fracRes: 0.1734, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5721, norm(y): 0.9924, norm:0.4127, tok/sec: 185074.49, flops:194.29, batch-reuse:1
@ 3897 train 3.9943 , allloss: 3.9943, dt: 711.52ms, fracRes: 0.1740, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5746, norm(y): 0.9925, norm:0.3602, tok/sec: 184213.59, flops:193.39, batch-reuse:1
@ 3898 train 4.1508 , allloss: 4.1508, dt: 698.60ms, fracRes: 0.1768, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5896, norm(y): 0.9933, norm:0.4072, tok/sec: 187621.26, flops:196.97, batch-reuse:1
@ 3899 train 4.0767 , allloss: 4.0767, dt: 693.21ms, fracRes: 0.1764, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5825, norm(y): 0.9933, norm:0.3679, tok/sec: 189078.52, flops:198.49, batch-reuse:1
@ 3900 train 3.9793 , allloss: 3.9793, dt: 704.89ms, fracRes: 0.1750, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5787, norm(y): 0.9926, norm:0.4177, tok/sec: 185946.80, flops:195.21, batch-reuse:1
@ 3901 train 4.0565 , allloss: 4.0565, dt: 714.22ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5806, norm(y): 0.9926, norm:0.3975, tok/sec: 183518.04, flops:192.66, batch-reuse:1
@ 3902 train 3.9683 , allloss: 3.9683, dt: 733.12ms, fracRes: 0.1747, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5797, norm(y): 0.9927, norm:0.4246, tok/sec: 178785.75, flops:187.69, batch-reuse:1
@ 3903 train 3.9658 , allloss: 3.9658, dt: 713.44ms, fracRes: 0.1747, norm(attn): 32.2500, norm(output): 0.4492, norm(x): 0.5906, norm(y): 0.9927, norm:0.4649, tok/sec: 183718.71, flops:192.87, batch-reuse:1
@ 3904 train 4.1439 , allloss: 4.1439, dt: 698.26ms, fracRes: 0.1749, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5842, norm(y): 0.9930, norm:0.4265, tok/sec: 187712.04, flops:197.06, batch-reuse:1
@ 3905 train 4.0921 , allloss: 4.0921, dt: 714.48ms, fracRes: 0.1750, norm(attn): 32.2500, norm(output): 0.4434, norm(x): 0.5864, norm(y): 0.9931, norm:0.3929, tok/sec: 183451.59, flops:192.59, batch-reuse:1
@ 3906 train 4.1395 , allloss: 4.1395, dt: 704.77ms, fracRes: 0.1738, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5722, norm(y): 0.9934, norm:0.3913, tok/sec: 185979.70, flops:195.24, batch-reuse:1
@ 3907 train 4.0665 , allloss: 4.0665, dt: 709.21ms, fracRes: 0.1742, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5747, norm(y): 0.9930, norm:0.3830, tok/sec: 184813.61, flops:194.02, batch-reuse:1
@ 3908 train 4.0953 , allloss: 4.0953, dt: 708.33ms, fracRes: 0.1758, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5825, norm(y): 0.9929, norm:0.4278, tok/sec: 185044.40, flops:194.26, batch-reuse:1
@ 3909 train 4.0417 , allloss: 4.0417, dt: 699.64ms, fracRes: 0.1763, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5862, norm(y): 0.9931, norm:0.5598, tok/sec: 187342.56, flops:196.67, batch-reuse:1
@ 3910 train 4.1287 , allloss: 4.1287, dt: 707.66ms, fracRes: 0.1737, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5746, norm(y): 0.9928, norm:0.4466, tok/sec: 185217.90, flops:194.44, batch-reuse:1
@ 3911 train 4.1089 , allloss: 4.1089, dt: 704.89ms, fracRes: 0.1726, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5683, norm(y): 0.9930, norm:0.4083, tok/sec: 185948.00, flops:195.21, batch-reuse:1
@ 3912 train 4.0055 , allloss: 4.0055, dt: 706.23ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5719, norm(y): 0.9932, norm:0.4143, tok/sec: 185593.51, flops:194.84, batch-reuse:1
@ 3913 train 4.0836 , allloss: 4.0836, dt: 707.68ms, fracRes: 0.1745, norm(attn): 32.0000, norm(output): 0.4355, norm(x): 0.5747, norm(y): 0.9927, norm:0.4247, tok/sec: 185213.60, flops:194.44, batch-reuse:1
@ 3914 train 4.1275 , allloss: 4.1275, dt: 696.38ms, fracRes: 0.1755, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5758, norm(y): 0.9926, norm:0.4060, tok/sec: 188218.59, flops:197.59, batch-reuse:1
@ 3915 train 4.0803 , allloss: 4.0803, dt: 708.96ms, fracRes: 0.1761, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5779, norm(y): 0.9930, norm:0.3959, tok/sec: 184880.43, flops:194.09, batch-reuse:1
@ 3916 train 4.1401 , allloss: 4.1401, dt: 702.95ms, fracRes: 0.1745, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5741, norm(y): 0.9929, norm:0.4124, tok/sec: 186460.68, flops:195.75, batch-reuse:1
@ 3917 train 4.2170 , allloss: 4.2170, dt: 703.94ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5750, norm(y): 0.9926, norm:0.3716, tok/sec: 186196.95, flops:195.47, batch-reuse:1
@ 3918 train 4.0486 , allloss: 4.0486, dt: 707.77ms, fracRes: 0.1746, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5826, norm(y): 0.9926, norm:0.4493, tok/sec: 185189.39, flops:194.41, batch-reuse:1
@ 3919 train 4.0962 , allloss: 4.0962, dt: 702.53ms, fracRes: 0.1729, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5678, norm(y): 0.9925, norm:0.3991, tok/sec: 186572.62, flops:195.86, batch-reuse:1
@ 3920 train 4.0402 , allloss: 4.0402, dt: 714.90ms, fracRes: 0.1722, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5849, norm(y): 0.9928, norm:0.4656, tok/sec: 183343.18, flops:192.47, batch-reuse:1
@ 3921 train 4.1041 , allloss: 4.1041, dt: 700.45ms, fracRes: 0.1738, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5870, norm(y): 0.9930, norm:0.4213, tok/sec: 187126.20, flops:196.45, batch-reuse:1
@ 3922 train 4.0750 , allloss: 4.0750, dt: 706.89ms, fracRes: 0.1744, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5874, norm(y): 0.9928, norm:0.4466, tok/sec: 185419.87, flops:194.65, batch-reuse:1
@ 3923 train 4.0300 , allloss: 4.0300, dt: 704.35ms, fracRes: 0.1722, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5741, norm(y): 0.9928, norm:0.4068, tok/sec: 186088.04, flops:195.36, batch-reuse:1
@ 3924 train 4.0897 , allloss: 4.0897, dt: 712.94ms, fracRes: 0.1728, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5728, norm(y): 0.9925, norm:0.4008, tok/sec: 183846.80, flops:193.00, batch-reuse:1
@ 3925 train 4.1509 , allloss: 4.1509, dt: 708.49ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5801, norm(y): 0.9930, norm:0.4245, tok/sec: 185001.68, flops:194.22, batch-reuse:1
@ 3926 train 4.0660 , allloss: 4.0660, dt: 712.02ms, fracRes: 0.1727, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5734, norm(y): 0.9931, norm:0.3868, tok/sec: 184084.31, flops:193.25, batch-reuse:1
@ 3927 train 4.0030 , allloss: 4.0030, dt: 707.42ms, fracRes: 0.1731, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5692, norm(y): 0.9923, norm:0.4577, tok/sec: 185281.82, flops:194.51, batch-reuse:1
@ 3928 train 4.0406 , allloss: 4.0406, dt: 709.60ms, fracRes: 0.1732, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5705, norm(y): 0.9924, norm:0.4271, tok/sec: 184712.21, flops:193.91, batch-reuse:1
@ 3929 train 4.0008 , allloss: 4.0008, dt: 708.86ms, fracRes: 0.1740, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5744, norm(y): 0.9923, norm:0.3914, tok/sec: 184905.30, flops:194.11, batch-reuse:1
@ 3930 train 4.0613 , allloss: 4.0613, dt: 694.38ms, fracRes: 0.1755, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5800, norm(y): 0.9923, norm:0.4193, tok/sec: 188760.02, flops:198.16, batch-reuse:1
@ 3931 train 3.9903 , allloss: 3.9903, dt: 696.09ms, fracRes: 0.1741, norm(attn): 32.0000, norm(output): 0.4199, norm(x): 0.5653, norm(y): 0.9922, norm:0.4200, tok/sec: 188298.40, flops:197.68, batch-reuse:1
@ 3932 train 3.9664 , allloss: 3.9664, dt: 699.98ms, fracRes: 0.1742, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5762, norm(y): 0.9926, norm:0.3998, tok/sec: 187251.44, flops:196.58, batch-reuse:1
@ 3933 train 4.0575 , allloss: 4.0575, dt: 702.56ms, fracRes: 0.1749, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5731, norm(y): 0.9921, norm:0.3894, tok/sec: 186563.00, flops:195.85, batch-reuse:1
@ 3934 train 4.1151 , allloss: 4.1151, dt: 699.58ms, fracRes: 0.1749, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5720, norm(y): 0.9928, norm:0.4414, tok/sec: 187357.18, flops:196.69, batch-reuse:1
@ 3935 train 4.0902 , allloss: 4.0902, dt: 707.81ms, fracRes: 0.1738, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5679, norm(y): 0.9928, norm:0.3615, tok/sec: 185179.47, flops:194.40, batch-reuse:1
@ 3936 train 4.0531 , allloss: 4.0531, dt: 704.07ms, fracRes: 0.1741, norm(attn): 31.8750, norm(output): 0.4277, norm(x): 0.5687, norm(y): 0.9922, norm:0.4323, tok/sec: 186164.04, flops:195.44, batch-reuse:1
@ 3937 train 4.0500 , allloss: 4.0500, dt: 705.81ms, fracRes: 0.1749, norm(attn): 31.8750, norm(output): 0.4355, norm(x): 0.5805, norm(y): 0.9925, norm:0.4295, tok/sec: 185703.85, flops:194.95, batch-reuse:1
@ 3938 train 4.0140 , allloss: 4.0140, dt: 695.08ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5743, norm(y): 0.9923, norm:0.3872, tok/sec: 188571.35, flops:197.96, batch-reuse:1
@ 3939 train 4.0920 , allloss: 4.0920, dt: 692.56ms, fracRes: 0.1733, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5750, norm(y): 0.9929, norm:0.4703, tok/sec: 189258.30, flops:198.68, batch-reuse:1
@ 3940 train 4.0550 , allloss: 4.0550, dt: 689.18ms, fracRes: 0.1728, norm(attn): 32.0000, norm(output): 0.4160, norm(x): 0.5616, norm(y): 0.9926, norm:0.3969, tok/sec: 190186.19, flops:199.66, batch-reuse:1
@ 3941 train 4.0305 , allloss: 4.0305, dt: 708.81ms, fracRes: 0.1738, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5724, norm(y): 0.9922, norm:0.4288, tok/sec: 184918.17, flops:194.13, batch-reuse:1
@ 3942 train 3.9832 , allloss: 3.9832, dt: 706.95ms, fracRes: 0.1733, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5710, norm(y): 0.9922, norm:0.4030, tok/sec: 185403.67, flops:194.64, batch-reuse:1
@ 3943 train 4.0662 , allloss: 4.0662, dt: 711.27ms, fracRes: 0.1724, norm(attn): 32.0000, norm(output): 0.4180, norm(x): 0.5621, norm(y): 0.9923, norm:0.3701, tok/sec: 184278.86, flops:193.46, batch-reuse:1
@ 3944 train 3.9158 , allloss: 3.9158, dt: 709.87ms, fracRes: 0.1739, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5737, norm(y): 0.9927, norm:0.4016, tok/sec: 184642.36, flops:193.84, batch-reuse:1
@ 3945 train 4.1820 , allloss: 4.1820, dt: 706.63ms, fracRes: 0.1753, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5817, norm(y): 0.9928, norm:0.4373, tok/sec: 185487.75, flops:194.73, batch-reuse:1
@ 3946 train 4.0035 , allloss: 4.0035, dt: 720.79ms, fracRes: 0.1748, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5747, norm(y): 0.9924, norm:0.4157, tok/sec: 181843.68, flops:190.90, batch-reuse:1
@ 3947 train 4.0245 , allloss: 4.0245, dt: 695.90ms, fracRes: 0.1733, norm(attn): 31.8750, norm(output): 0.4238, norm(x): 0.5656, norm(y): 0.9923, norm:0.3868, tok/sec: 188348.85, flops:197.73, batch-reuse:1
@ 3948 train 4.0288 , allloss: 4.0288, dt: 715.92ms, fracRes: 0.1729, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5665, norm(y): 0.9918, norm:0.3911, tok/sec: 183081.12, flops:192.20, batch-reuse:1
@ 3949 train 4.0308 , allloss: 4.0308, dt: 712.84ms, fracRes: 0.1728, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5715, norm(y): 0.9926, norm:0.4066, tok/sec: 183872.51, flops:193.03, batch-reuse:1
@ 3950 train 4.0715 , allloss: 4.0715, dt: 693.17ms, fracRes: 0.1724, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5671, norm(y): 0.9926, norm:0.3968, tok/sec: 189091.59, flops:198.51, batch-reuse:1
@ 3951 train 4.0195 , allloss: 4.0195, dt: 692.20ms, fracRes: 0.1712, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5619, norm(y): 0.9924, norm:0.4179, tok/sec: 189356.34, flops:198.79, batch-reuse:1
@ 3952 train 4.0731 , allloss: 4.0731, dt: 698.56ms, fracRes: 0.1725, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5647, norm(y): 0.9923, norm:0.3592, tok/sec: 187632.72, flops:196.98, batch-reuse:1
@ 3953 train 4.1142 , allloss: 4.1142, dt: 702.41ms, fracRes: 0.1744, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5780, norm(y): 0.9926, norm:0.5696, tok/sec: 186604.28, flops:195.90, batch-reuse:1
@ 3954 train 4.0901 , allloss: 4.0901, dt: 692.34ms, fracRes: 0.1755, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5778, norm(y): 0.9923, norm:0.5159, tok/sec: 189318.13, flops:198.75, batch-reuse:1
@ 3955 train 4.0078 , allloss: 4.0078, dt: 699.15ms, fracRes: 0.1734, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5670, norm(y): 0.9921, norm:0.4044, tok/sec: 187473.21, flops:196.81, batch-reuse:1
@ 3956 train 3.9474 , allloss: 3.9474, dt: 708.88ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5705, norm(y): 0.9921, norm:0.4838, tok/sec: 184901.19, flops:194.11, batch-reuse:1
@ 3957 train 4.0864 , allloss: 4.0864, dt: 703.73ms, fracRes: 0.1719, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5675, norm(y): 0.9917, norm:0.4373, tok/sec: 186252.91, flops:195.53, batch-reuse:1
@ 3958 train 4.0406 , allloss: 4.0406, dt: 705.40ms, fracRes: 0.1730, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5732, norm(y): 0.9918, norm:0.4271, tok/sec: 185813.00, flops:195.07, batch-reuse:1
@ 3959 train 4.0956 , allloss: 4.0956, dt: 705.96ms, fracRes: 0.1744, norm(attn): 31.8750, norm(output): 0.4316, norm(x): 0.5796, norm(y): 0.9926, norm:0.4711, tok/sec: 185666.03, flops:194.91, batch-reuse:1
@ 3960 train 4.0177 , allloss: 4.0177, dt: 713.03ms, fracRes: 0.1728, norm(attn): 32.0000, norm(output): 0.4102, norm(x): 0.5569, norm(y): 0.9921, norm:0.4608, tok/sec: 183823.69, flops:192.98, batch-reuse:1
@ 3961 train 3.9858 , allloss: 3.9858, dt: 703.42ms, fracRes: 0.1719, norm(attn): 31.8750, norm(output): 0.4160, norm(x): 0.5588, norm(y): 0.9918, norm:0.4059, tok/sec: 186336.30, flops:195.62, batch-reuse:1
@ 3962 train 4.0754 , allloss: 4.0754, dt: 714.09ms, fracRes: 0.1724, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5732, norm(y): 0.9914, norm:0.4853, tok/sec: 183550.45, flops:192.69, batch-reuse:1
@ 3963 train 4.0161 , allloss: 4.0161, dt: 706.34ms, fracRes: 0.1713, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5644, norm(y): 0.9915, norm:0.4018, tok/sec: 185565.69, flops:194.81, batch-reuse:1
@ 3964 train 3.9870 , allloss: 3.9870, dt: 697.06ms, fracRes: 0.1716, norm(attn): 32.0000, norm(output): 0.4141, norm(x): 0.5593, norm(y): 0.9915, norm:0.4381, tok/sec: 188035.56, flops:197.40, batch-reuse:1
@ 3965 train 4.0069 , allloss: 4.0069, dt: 700.46ms, fracRes: 0.1729, norm(attn): 32.0000, norm(output): 0.4180, norm(x): 0.5613, norm(y): 0.9918, norm:0.4083, tok/sec: 187121.87, flops:196.44, batch-reuse:1
@ 3966 train 4.0963 , allloss: 4.0963, dt: 700.81ms, fracRes: 0.1738, norm(attn): 31.8750, norm(output): 0.4219, norm(x): 0.5670, norm(y): 0.9922, norm:0.4413, tok/sec: 187030.45, flops:196.34, batch-reuse:1
@ 3967 train 4.1111 , allloss: 4.1111, dt: 709.24ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5713, norm(y): 0.9920, norm:0.4168, tok/sec: 184805.47, flops:194.01, batch-reuse:1
@ 3968 train 4.0623 , allloss: 4.0623, dt: 694.06ms, fracRes: 0.1722, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5683, norm(y): 0.9919, norm:0.4412, tok/sec: 188849.37, flops:198.25, batch-reuse:1
@ 3969 train 4.0838 , allloss: 4.0838, dt: 705.79ms, fracRes: 0.1728, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5660, norm(y): 0.9915, norm:0.4230, tok/sec: 185708.87, flops:194.96, batch-reuse:1
@ 3970 train 4.0328 , allloss: 4.0328, dt: 703.37ms, fracRes: 0.1724, norm(attn): 32.0000, norm(output): 0.4141, norm(x): 0.5603, norm(y): 0.9921, norm:0.4074, tok/sec: 186348.87, flops:195.63, batch-reuse:1
@ 3971 train 4.0518 , allloss: 4.0518, dt: 705.22ms, fracRes: 0.1716, norm(attn): 31.8750, norm(output): 0.4160, norm(x): 0.5603, norm(y): 0.9926, norm:0.4096, tok/sec: 185859.74, flops:195.12, batch-reuse:1
@ 3972 train 4.0305 , allloss: 4.0305, dt: 695.83ms, fracRes: 0.1737, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5769, norm(y): 0.9920, norm:0.4441, tok/sec: 188368.72, flops:197.75, batch-reuse:1
@ 3973 train 3.9916 , allloss: 3.9916, dt: 703.42ms, fracRes: 0.1720, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5695, norm(y): 0.9913, norm:0.4700, tok/sec: 186334.66, flops:195.61, batch-reuse:1
@ 3974 train 4.0915 , allloss: 4.0915, dt: 701.31ms, fracRes: 0.1732, norm(attn): 31.7500, norm(output): 0.4238, norm(x): 0.5687, norm(y): 0.9914, norm:0.4027, tok/sec: 186897.05, flops:196.20, batch-reuse:1
@ 3975 train 3.9929 , allloss: 3.9929, dt: 710.21ms, fracRes: 0.1733, norm(attn): 31.7500, norm(output): 0.4238, norm(x): 0.5653, norm(y): 0.9913, norm:0.4204, tok/sec: 184552.97, flops:193.74, batch-reuse:1
@ 3976 train 4.0831 , allloss: 4.0831, dt: 717.72ms, fracRes: 0.1736, norm(attn): 31.8750, norm(output): 0.4180, norm(x): 0.5619, norm(y): 0.9917, norm:0.4050, tok/sec: 182623.77, flops:191.72, batch-reuse:1
@ 3977 train 3.7696 , allloss: 3.7696, dt: 720.58ms, fracRes: 0.1725, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5675, norm(y): 0.9912, norm:0.4776, tok/sec: 181898.49, flops:190.96, batch-reuse:1
@ 3978 train 4.0100 , allloss: 4.0100, dt: 719.25ms, fracRes: 0.1745, norm(attn): 32.0000, norm(output): 0.4180, norm(x): 0.5639, norm(y): 0.9915, norm:0.4104, tok/sec: 182234.52, flops:191.31, batch-reuse:1
@ 3979 train 4.0486 , allloss: 4.0486, dt: 715.61ms, fracRes: 0.1748, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5685, norm(y): 0.9914, norm:0.3909, tok/sec: 183162.19, flops:192.28, batch-reuse:1
@ 3980 train 4.0003 , allloss: 4.0003, dt: 714.54ms, fracRes: 0.1750, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5779, norm(y): 0.9916, norm:0.4160, tok/sec: 183435.37, flops:192.57, batch-reuse:1
@ 3981 train 4.0268 , allloss: 4.0268, dt: 720.00ms, fracRes: 0.1767, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5772, norm(y): 0.9914, norm:0.4131, tok/sec: 182045.52, flops:191.11, batch-reuse:1
@ 3982 train 4.0343 , allloss: 4.0343, dt: 701.73ms, fracRes: 0.1759, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5692, norm(y): 0.9909, norm:0.3792, tok/sec: 186783.52, flops:196.09, batch-reuse:1
@ 3983 train 4.0455 , allloss: 4.0455, dt: 699.19ms, fracRes: 0.1759, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5722, norm(y): 0.9914, norm:0.3980, tok/sec: 187461.89, flops:196.80, batch-reuse:1
@ 3984 train 4.0404 , allloss: 4.0404, dt: 697.29ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5643, norm(y): 0.9913, norm:0.3978, tok/sec: 187974.16, flops:197.34, batch-reuse:1
@ 3985 train 4.0808 , allloss: 4.0808, dt: 709.52ms, fracRes: 0.1742, norm(attn): 32.0000, norm(output): 0.4199, norm(x): 0.5664, norm(y): 0.9916, norm:0.3839, tok/sec: 184733.38, flops:193.93, batch-reuse:1
@ 3986 train 3.9429 , allloss: 3.9429, dt: 714.96ms, fracRes: 0.1740, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5670, norm(y): 0.9911, norm:0.4392, tok/sec: 183328.45, flops:192.46, batch-reuse:1
@ 3987 train 3.9017 , allloss: 3.9017, dt: 719.73ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4121, norm(x): 0.5542, norm(y): 0.9907, norm:0.3703, tok/sec: 182111.56, flops:191.18, batch-reuse:1
@ 3988 train 3.9673 , allloss: 3.9673, dt: 719.04ms, fracRes: 0.1731, norm(attn): 32.2500, norm(output): 0.4102, norm(x): 0.5508, norm(y): 0.9904, norm:0.4929, tok/sec: 182288.72, flops:191.37, batch-reuse:1
@ 3989 train 4.0151 , allloss: 4.0151, dt: 714.33ms, fracRes: 0.1742, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5654, norm(y): 0.9911, norm:0.3615, tok/sec: 183489.86, flops:192.63, batch-reuse:1
@ 3990 train 3.9619 , allloss: 3.9619, dt: 706.14ms, fracRes: 0.1737, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5701, norm(y): 0.9910, norm:0.4843, tok/sec: 185618.89, flops:194.86, batch-reuse:1
@ 3991 train 4.0075 , allloss: 4.0075, dt: 699.13ms, fracRes: 0.1742, norm(attn): 32.2500, norm(output): 0.4258, norm(x): 0.5647, norm(y): 0.9909, norm:0.4112, tok/sec: 187478.71, flops:196.82, batch-reuse:1
@ 3992 train 4.0401 , allloss: 4.0401, dt: 691.59ms, fracRes: 0.1755, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5707, norm(y): 0.9911, norm:0.4307, tok/sec: 189521.50, flops:198.96, batch-reuse:1
@ 3993 train 4.0161 , allloss: 4.0161, dt: 703.47ms, fracRes: 0.1757, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5702, norm(y): 0.9909, norm:0.3934, tok/sec: 186323.23, flops:195.60, batch-reuse:1
@ 3994 train 3.9925 , allloss: 3.9925, dt: 708.24ms, fracRes: 0.1747, norm(attn): 32.0000, norm(output): 0.4199, norm(x): 0.5652, norm(y): 0.9903, norm:0.3616, tok/sec: 185066.02, flops:194.28, batch-reuse:1
@ 3995 train 4.0111 , allloss: 4.0111, dt: 707.95ms, fracRes: 0.1736, norm(attn): 32.0000, norm(output): 0.4180, norm(x): 0.5615, norm(y): 0.9906, norm:0.3895, tok/sec: 185141.87, flops:194.36, batch-reuse:1
@ 3996 train 4.0283 , allloss: 4.0283, dt: 701.90ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4160, norm(x): 0.5584, norm(y): 0.9905, norm:0.3590, tok/sec: 186737.77, flops:196.04, batch-reuse:1
@ 3997 train 3.9706 , allloss: 3.9706, dt: 697.65ms, fracRes: 0.1738, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5624, norm(y): 0.9908, norm:0.4011, tok/sec: 187876.52, flops:197.23, batch-reuse:1
@ 3998 train 3.9401 , allloss: 3.9401, dt: 694.80ms, fracRes: 0.1739, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5728, norm(y): 0.9906, norm:0.3572, tok/sec: 188646.99, flops:198.04, batch-reuse:1
@ 3999 train 3.9969 , allloss: 3.9969, dt: 710.48ms, fracRes: 0.1731, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5659, norm(y): 0.9900, norm:0.4270, tok/sec: 184483.18, flops:193.67, batch-reuse:1
@ 4000 val 3.9766
@ 4000 train 3.9922 , allloss: 3.9922, dt: 1068.71ms, fracRes: 0.1752, norm(attn): 31.8750, norm(output): 0.4180, norm(x): 0.5661, norm(y): 0.9906, norm:0.3797, tok/sec: 122645.32, flops:128.75, batch-reuse:1
@ 4001 train 3.8915 , allloss: 3.8915, dt: 703.08ms, fracRes: 0.1775, norm(attn): 31.7500, norm(output): 0.4238, norm(x): 0.5708, norm(y): 0.9907, norm:0.4218, tok/sec: 186425.33, flops:195.71, batch-reuse:1
@ 4002 train 3.9550 , allloss: 3.9550, dt: 706.14ms, fracRes: 0.1759, norm(attn): 31.8750, norm(output): 0.4219, norm(x): 0.5663, norm(y): 0.9899, norm:0.4254, tok/sec: 185617.70, flops:194.86, batch-reuse:1
@ 4003 train 4.0076 , allloss: 4.0076, dt: 694.19ms, fracRes: 0.1763, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5761, norm(y): 0.9900, norm:0.4440, tok/sec: 188812.92, flops:198.22, batch-reuse:1
@ 4004 train 3.8887 , allloss: 3.8887, dt: 704.84ms, fracRes: 0.1741, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5738, norm(y): 0.9894, norm:0.3943, tok/sec: 185960.07, flops:195.22, batch-reuse:1
@ 4005 train 4.1544 , allloss: 4.1544, dt: 703.81ms, fracRes: 0.1733, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5833, norm(y): 0.9902, norm:0.5745, tok/sec: 186231.33, flops:195.51, batch-reuse:1
@ 4006 train 4.0295 , allloss: 4.0295, dt: 707.30ms, fracRes: 0.1772, norm(attn): 32.2500, norm(output): 0.4219, norm(x): 0.5692, norm(y): 0.9898, norm:0.5258, tok/sec: 185312.93, flops:194.54, batch-reuse:1
@ 4007 train 4.0162 , allloss: 4.0162, dt: 706.36ms, fracRes: 0.1765, norm(attn): 32.2500, norm(output): 0.4180, norm(x): 0.5621, norm(y): 0.9892, norm:0.4485, tok/sec: 185561.00, flops:194.80, batch-reuse:1
@ 4008 train 4.0253 , allloss: 4.0253, dt: 719.59ms, fracRes: 0.1764, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5761, norm(y): 0.9887, norm:0.4635, tok/sec: 182148.78, flops:191.22, batch-reuse:1
@ 4009 train 3.9753 , allloss: 3.9753, dt: 722.31ms, fracRes: 0.1748, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5696, norm(y): 0.9879, norm:0.4053, tok/sec: 181461.40, flops:190.50, batch-reuse:1
@ 4010 train 3.9791 , allloss: 3.9791, dt: 715.71ms, fracRes: 0.1761, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5734, norm(y): 0.9880, norm:0.5631, tok/sec: 183136.87, flops:192.26, batch-reuse:1
@ 4011 train 4.0218 , allloss: 4.0218, dt: 706.42ms, fracRes: 0.1734, norm(attn): 32.0000, norm(output): 0.4121, norm(x): 0.5582, norm(y): 0.9884, norm:0.4867, tok/sec: 185543.46, flops:194.78, batch-reuse:1
@ 4012 train 4.0287 , allloss: 4.0287, dt: 706.77ms, fracRes: 0.1736, norm(attn): 31.8750, norm(output): 0.4121, norm(x): 0.5577, norm(y): 0.9876, norm:0.4214, tok/sec: 185453.02, flops:194.69, batch-reuse:1
@ 4013 train 4.0627 , allloss: 4.0627, dt: 698.36ms, fracRes: 0.1736, norm(attn): 31.8750, norm(output): 0.4141, norm(x): 0.5598, norm(y): 0.9873, norm:0.4206, tok/sec: 187686.08, flops:197.03, batch-reuse:1
@ 4014 train 4.1168 , allloss: 4.1168, dt: 707.29ms, fracRes: 0.1756, norm(attn): 31.5000, norm(output): 0.4277, norm(x): 0.5752, norm(y): 0.9868, norm:0.4876, tok/sec: 185315.92, flops:194.54, batch-reuse:1
@ 4015 train 4.0002 , allloss: 4.0002, dt: 706.71ms, fracRes: 0.1756, norm(attn): 31.5000, norm(output): 0.4219, norm(x): 0.5674, norm(y): 0.9866, norm:0.4180, tok/sec: 185467.53, flops:194.70, batch-reuse:1
@ 4016 train 4.0431 , allloss: 4.0431, dt: 706.86ms, fracRes: 0.1754, norm(attn): 31.5000, norm(output): 0.4141, norm(x): 0.5601, norm(y): 0.9862, norm:0.4459, tok/sec: 185428.94, flops:194.66, batch-reuse:1
@ 4017 train 3.9846 , allloss: 3.9846, dt: 704.24ms, fracRes: 0.1754, norm(attn): 31.5000, norm(output): 0.4121, norm(x): 0.5619, norm(y): 0.9863, norm:0.3992, tok/sec: 186118.98, flops:195.39, batch-reuse:1
@ 4018 train 4.0207 , allloss: 4.0207, dt: 705.37ms, fracRes: 0.1745, norm(attn): 31.6250, norm(output): 0.4102, norm(x): 0.5536, norm(y): 0.9856, norm:0.3743, tok/sec: 185819.28, flops:195.07, batch-reuse:1
@ 4019 train 4.1241 , allloss: 4.1241, dt: 698.34ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4160, norm(x): 0.5618, norm(y): 0.9851, norm:0.4103, tok/sec: 187691.92, flops:197.04, batch-reuse:1
@ 4020 train 3.9652 , allloss: 3.9652, dt: 704.07ms, fracRes: 0.1758, norm(attn): 32.0000, norm(output): 0.4199, norm(x): 0.5653, norm(y): 0.9849, norm:0.3728, tok/sec: 186162.40, flops:195.43, batch-reuse:1
@ 4021 train 3.9887 , allloss: 3.9887, dt: 706.91ms, fracRes: 0.1757, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5686, norm(y): 0.9841, norm:0.3854, tok/sec: 185415.43, flops:194.65, batch-reuse:1
@ 4022 train 3.8652 , allloss: 3.8652, dt: 704.88ms, fracRes: 0.1752, norm(attn): 32.0000, norm(output): 0.4219, norm(x): 0.5682, norm(y): 0.9823, norm:0.3940, tok/sec: 185949.51, flops:195.21, batch-reuse:1
@ 4023 train 4.0993 , allloss: 4.0993, dt: 702.81ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4219, norm(x): 0.5644, norm(y): 0.9816, norm:0.3991, tok/sec: 186497.18, flops:195.79, batch-reuse:1
@ 4024 train 4.0556 , allloss: 4.0556, dt: 701.77ms, fracRes: 0.1753, norm(attn): 31.8750, norm(output): 0.4219, norm(x): 0.5646, norm(y): 0.9802, norm:0.3982, tok/sec: 186774.70, flops:196.08, batch-reuse:1
@ 4025 train 3.9779 , allloss: 3.9779, dt: 696.95ms, fracRes: 0.1749, norm(attn): 30.7500, norm(output): 0.4180, norm(x): 0.5627, norm(y): 0.9801, norm:0.4187, tok/sec: 188065.09, flops:197.43, batch-reuse:1
@ 4026 train 3.8887 , allloss: 3.8887, dt: 698.40ms, fracRes: 0.1758, norm(attn): 30.3750, norm(output): 0.4199, norm(x): 0.5658, norm(y): 0.9825, norm:0.3944, tok/sec: 187673.97, flops:197.02, batch-reuse:1
@ 4027 train 3.9763 , allloss: 3.9763, dt: 716.06ms, fracRes: 0.1762, norm(attn): 30.3750, norm(output): 0.4316, norm(x): 0.5758, norm(y): 0.9842, norm:0.3928, tok/sec: 183045.83, flops:192.16, batch-reuse:1
@ 4028 train 3.9795 , allloss: 3.9795, dt: 704.07ms, fracRes: 0.1767, norm(attn): 30.3750, norm(output): 0.4336, norm(x): 0.5744, norm(y): 0.9850, norm:0.3745, tok/sec: 186162.09, flops:195.43, batch-reuse:1
@ 4029 train 3.9790 , allloss: 3.9790, dt: 708.27ms, fracRes: 0.1754, norm(attn): 30.3750, norm(output): 0.4160, norm(x): 0.5633, norm(y): 0.9855, norm:0.3767, tok/sec: 185060.04, flops:194.28, batch-reuse:1
@ 4030 train 3.8352 , allloss: 3.8352, dt: 705.93ms, fracRes: 0.1758, norm(attn): 30.1250, norm(output): 0.4219, norm(x): 0.5683, norm(y): 0.9860, norm:0.4298, tok/sec: 185672.80, flops:194.92, batch-reuse:1
@ 4031 train 3.8744 , allloss: 3.8744, dt: 692.19ms, fracRes: 0.1749, norm(attn): 30.0000, norm(output): 0.4238, norm(x): 0.5681, norm(y): 0.9854, norm:0.4164, tok/sec: 189357.84, flops:198.79, batch-reuse:1
@ 4032 train 3.8652 , allloss: 3.8652, dt: 706.52ms, fracRes: 0.1738, norm(attn): 29.7500, norm(output): 0.4238, norm(x): 0.5670, norm(y): 0.9852, norm:0.3685, tok/sec: 185516.79, flops:194.76, batch-reuse:1
@ 4033 train 14.6636 , allloss: 14.6636, dt: 711.27ms, fracRes: 0.1736, norm(attn): 29.7500, norm(output): 4.9688, norm(x): 5.0803, norm(y): 0.9850, norm:53.3805, tok/sec: 184278.49, flops:193.46, batch-reuse:1
@ 4034 train 3.9058 , allloss: 3.9058, dt: 697.92ms, fracRes: 0.1748, norm(attn): 30.1250, norm(output): 0.4336, norm(x): 0.5759, norm(y): 0.9891, norm:0.5777, tok/sec: 187803.61, flops:197.16, batch-reuse:1
@ 4035 train 3.9022 , allloss: 3.9022, dt: 708.64ms, fracRes: 0.1740, norm(attn): 31.7500, norm(output): 0.4238, norm(x): 0.5653, norm(y): 0.9900, norm:0.3717, tok/sec: 184963.09, flops:194.17, batch-reuse:1
@ 4036 train 3.8348 , allloss: 3.8348, dt: 702.11ms, fracRes: 0.1751, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5700, norm(y): 0.9906, norm:0.4220, tok/sec: 186683.94, flops:195.98, batch-reuse:1
@ 4037 train 3.8903 , allloss: 3.8903, dt: 702.53ms, fracRes: 0.1758, norm(attn): 32.0000, norm(output): 0.4199, norm(x): 0.5652, norm(y): 0.9911, norm:0.4121, tok/sec: 186571.61, flops:195.86, batch-reuse:1
@ 4038 train 3.8640 , allloss: 3.8640, dt: 697.03ms, fracRes: 0.1762, norm(attn): 32.2500, norm(output): 0.4199, norm(x): 0.5657, norm(y): 0.9917, norm:0.4164, tok/sec: 188044.89, flops:197.41, batch-reuse:1
@ 4039 train 3.8509 , allloss: 3.8509, dt: 703.38ms, fracRes: 0.1758, norm(attn): 32.2500, norm(output): 0.4141, norm(x): 0.5590, norm(y): 0.9915, norm:0.4760, tok/sec: 186345.40, flops:195.63, batch-reuse:1
@ 4040 train 3.8837 , allloss: 3.8837, dt: 697.60ms, fracRes: 0.1770, norm(attn): 32.2500, norm(output): 0.4277, norm(x): 0.5703, norm(y): 0.9914, norm:0.3968, tok/sec: 187890.32, flops:197.25, batch-reuse:1
@ 4041 train 3.8032 , allloss: 3.8032, dt: 701.25ms, fracRes: 0.1763, norm(attn): 32.2500, norm(output): 0.4277, norm(x): 0.5696, norm(y): 0.9910, norm:0.4293, tok/sec: 186912.30, flops:196.22, batch-reuse:1
@ 4042 train 3.9096 , allloss: 3.9096, dt: 708.69ms, fracRes: 0.1766, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5690, norm(y): 0.9917, norm:0.4003, tok/sec: 184949.22, flops:194.16, batch-reuse:1
@ 4043 train 3.9253 , allloss: 3.9253, dt: 700.19ms, fracRes: 0.1753, norm(attn): 32.2500, norm(output): 0.4199, norm(x): 0.5647, norm(y): 0.9918, norm:0.4321, tok/sec: 187195.33, flops:196.52, batch-reuse:1
@ 4044 train 3.9202 , allloss: 3.9202, dt: 699.44ms, fracRes: 0.1766, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5744, norm(y): 0.9922, norm:0.4430, tok/sec: 187396.14, flops:196.73, batch-reuse:1
@ 4045 train 3.9527 , allloss: 3.9527, dt: 703.32ms, fracRes: 0.1746, norm(attn): 32.0000, norm(output): 0.6328, norm(x): 0.7716, norm(y): 0.9903, norm:2.9973, tok/sec: 186360.75, flops:195.64, batch-reuse:1
@ 4046 train 3.9251 , allloss: 3.9251, dt: 701.12ms, fracRes: 0.1743, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5784, norm(y): 0.9919, norm:0.5279, tok/sec: 186947.14, flops:196.26, batch-reuse:1
@ 4047 train 3.9743 , allloss: 3.9743, dt: 713.16ms, fracRes: 0.1739, norm(attn): 31.8750, norm(output): 0.4355, norm(x): 0.5784, norm(y): 0.9892, norm:0.3975, tok/sec: 183791.06, flops:192.94, batch-reuse:1
@ 4048 train 3.8935 , allloss: 3.8935, dt: 719.27ms, fracRes: 0.1739, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5830, norm(y): 0.9903, norm:2.3425, tok/sec: 182229.93, flops:191.31, batch-reuse:1
@ 4049 train 3.8488 , allloss: 3.8488, dt: 719.13ms, fracRes: 0.1742, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5798, norm(y): 0.9915, norm:1.3775, tok/sec: 182265.15, flops:191.34, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1328, 0.8672, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7188, 0.1855, 0.0942, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5391, 0.2344, 0.1641, 0.0618, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4844, 0.2734, 0.0791, 0.1152, 0.0493, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3477, 0.2236, 0.1235, 0.1289, 0.0732, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1514, 0.2773, 0.0942, 0.0698, 0.1040, 0.1885, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2969, 0.1699, 0.0645, 0.0564, 0.0952, 0.1338, 0.1157, 0.0674, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.1973, 0.0552, 0.0508, 0.0884, 0.2168, 0.1260, 0.0801, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0801, 0.1602, 0.0913, 0.0496, 0.0977, 0.1416, 0.2021, 0.0967, 0.0547, 0.0264, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0593, 0.0703, 0.0398, 0.0476, 0.0913, 0.2852, 0.1729, 0.0781, 0.0815, 0.0239, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0403, 0.0986, 0.0437, 0.0369, 0.0874, 0.1553, 0.2021, 0.1016, 0.1182, 0.0615, 0.0280, 0.0266, 0.0000, 0.0000, 0.0000],
        [0.1230, 0.0771, 0.0111, 0.0167, 0.0520, 0.2148, 0.2041, 0.1094, 0.0947, 0.0193, 0.0293, 0.0134, 0.0349, 0.0000, 0.0000],
        [0.0322, 0.0835, 0.0267, 0.0223, 0.0605, 0.1641, 0.1494, 0.1030, 0.1035, 0.0435, 0.0840, 0.0280, 0.0503, 0.0503, 0.0000],
        [0.0291, 0.0366, 0.0192, 0.0140, 0.0522, 0.0684, 0.1445, 0.0752, 0.1426, 0.0510, 0.0864, 0.0461, 0.0649, 0.1299, 0.0388]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0259,     -0.8672,     -1.5156,     -1.1484,     -1.1484,     -0.8203,     -0.8320,     -0.7227,     -1.0234,     -1.6719,     -1.2656,     -1.6875,     -0.8086,     -1.1016,     -1.3750],
        [     0.0410,      1.9141,      0.6133,      0.0337,      0.5664,      0.8945,      0.9102,      0.7930,      0.9570,      0.3633,      0.2314,     -0.3945,      0.1592,      0.4102,      0.2598],
        [    -0.0240,     -1.3828,     -2.0625,     -2.0469,     -2.2812,     -1.9688,     -2.2344,     -1.6406,     -2.3281,     -2.6562,     -2.6406,     -2.4062,     -1.7656,     -2.7188,     -2.5625],
        [    -0.0173,     -0.8516,     -1.2109,     -2.1875,     -1.9766,     -2.1250,     -2.0781,     -1.5469,     -2.5469,     -2.5156,     -2.7812,     -1.8672,     -1.3281,     -2.7188,     -2.2969],
        [     0.0189,     -0.5547,     -1.7969,     -1.4141,     -2.2656,     -0.9375,     -1.7500,     -1.5625,     -2.2500,     -3.0156,     -2.6406,     -2.7031,     -1.6094,     -2.5000,     -2.5156],
        [     0.0195,     -0.4219,     -1.0156,     -0.9766,     -1.5391,     -1.2031,     -1.3594,     -1.1562,     -1.8594,     -2.5156,     -1.5391,     -1.8047,     -1.1016,     -1.7812,     -1.8125],
        [     0.0635,      0.6719,     -0.4121,     -0.7109,     -0.3125,      0.2812,     -0.2285,     -0.6875,     -0.5664,     -1.5469,     -1.0547,     -1.6953,     -0.9297,     -0.5117,     -0.4824],
        [     0.0508,     -0.5117,     -1.4766,     -1.6172,     -1.0859,     -0.7539,     -0.8945,     -1.4297,     -1.5781,     -2.5938,     -1.7656,     -2.3438,     -1.6172,     -1.3750,     -1.5391],
        [     0.0952,      0.4727,     -0.7969,     -0.8828,     -0.3262,      0.5703,      0.0281,     -0.4238,     -0.8828,     -2.1250,     -0.9492,     -2.1562,     -0.8516,     -0.9453,     -1.3906],
        [     0.0854,      0.7734,      0.2168,     -0.3984,      0.2812,      0.6562,      1.0078,      0.2715,     -0.2988,     -1.0234,     -0.7109,     -0.4004,     -0.2324,     -0.2412,     -0.2910],
        [     0.0991,      0.2695,     -0.3008,     -0.1211,      0.5273,      1.6641,      1.1719,      0.3711,      0.4141,     -0.8086,     -0.0669,     -1.5859,     -0.0947,      0.2598,     -0.2539],
        [     0.0938,      0.9922,      0.1807,      0.0097,      0.8711,      1.4453,      1.7109,      1.0156,      1.1719,      0.5195,     -0.2695,     -0.3203,      0.2432,      0.8242,      0.1011],
        [     0.1182,     -0.3496,     -2.2812,     -1.8750,     -0.7422,      0.6758,      0.6250,     -0.0015,     -0.1436,     -1.7344,     -1.3203,     -2.1094,     -1.1484,     -0.9688,     -1.5078],
        [     0.1055,      1.0625,     -0.0781,     -0.2598,      0.7383,      1.7344,      1.6406,      1.2734,      1.2734,      0.4062,      1.0625,     -0.0349,      0.5547,      0.5508,     -0.0186],
        [     0.0952,      0.3262,     -0.3203,     -0.6367,      0.6797,      0.9453,      1.7031,      1.0469,      1.6875,      0.6602,      1.1875,      0.5547,      0.9023,      1.5938,      0.3809]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3435],
        [0.2301],
        [0.1795],
        [0.1803],
        [0.1578],
        [0.1316],
        [0.1646],
        [0.1539],
        [0.0696],
        [0.1063],
        [0.0427],
        [0.1448],
        [0.0947],
        [0.0454]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9453,     0.0554,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9805,     0.0105,     0.0090,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9727,     0.0194,     0.0010,     0.0065,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9727,     0.0015,     0.0001,     0.0006,     0.0265,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9023,     0.0055,     0.0000,     0.0021,     0.0097,     0.0801,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7148,     0.0024,     0.0060,     0.0147,     0.0029,     0.0310,     0.2295,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8008,     0.0383,     0.0013,     0.0011,     0.0728,     0.0215,     0.0172,     0.0471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.9336,     0.0016,     0.0016,     0.0003,     0.0005,     0.0123,     0.0013,     0.0229,     0.0244,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8594,     0.0019,     0.0004,     0.0021,     0.0035,     0.0165,     0.0039,     0.0605,     0.0117,     0.0420,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.4570,     0.0198,     0.0007,     0.0121,     0.0110,     0.0095,     0.4219,     0.0420,     0.0042,     0.0012,     0.0200,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4180,     0.0010,     0.0001,     0.0001,     0.0004,     0.0053,     0.0148,     0.5430,     0.0063,     0.0000,     0.0027,     0.0107,     0.0000,     0.0000],
        [    0.0000,     0.2197,     0.0078,     0.0003,     0.0001,     0.0108,     0.0030,     0.0020,     0.0101,     0.7148,     0.0004,     0.0132,     0.0004,     0.0186,     0.0000],
        [    0.0002,     0.6445,     0.0933,     0.0013,     0.0053,     0.0006,     0.0048,     0.0082,     0.0113,     0.1084,     0.0014,     0.0092,     0.0007,     0.0018,     0.1084]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0103,      0.6133,      0.3262,     -0.0598,      0.1035,      0.2363,      0.3262,      0.3418,      0.2471,      0.2344,     -0.0752,      0.2520,      0.1138,      0.1064,      0.2363],
        [     0.0869,      6.8750,      6.3438,      0.8633,      2.4219,      3.7500,      3.3594,      4.1562,      2.5625,      3.7656,      0.0198,      2.8438,      1.1875,      1.3281,      3.9375],
        [     0.1475,     11.3125,      8.5000,     15.3125,      8.9375,      7.9375,      8.5625,      4.7188,      6.7188,      6.7188,      4.8125,      4.7812,      3.1719,      4.5938,      7.0000],
        [     0.1436,     11.6250,      7.0625,      6.9375,     14.4375,      8.8750,      9.3125,     10.0625,      9.8750,      7.4375,      2.2656,      4.6875,      4.8125,      2.9375,      6.6562],
        [     0.2139,     11.5000,      7.5625,      4.6250,      6.4688,     13.9375,      9.5625,      8.7500,      4.5000,      7.2500,     -2.6406,      6.3438,      0.8086,      1.3203,      5.9375],
        [     0.1621,     10.4375,      3.9219,      1.6406,      3.0469,      6.8125,     11.1250,      9.5625,      6.7188,      5.4375,      0.3633,      5.4688,      0.6523,      2.5000,      5.3750],
        [     0.1748,     10.5625,      5.4688,     -1.5000,      4.5312,      6.0312,      8.1250,     14.0000,      9.1250,      6.6250,     -0.2832,      6.9688,      5.0000,      4.7812,      6.1875],
        [     0.1719,      9.6875,      4.0000,      4.9375,      5.8125,      4.1875,      6.5625,      8.5625,     12.3125,      7.2188,      1.1641,      5.4062,      5.0312,      9.4375,      7.0625],
        [     0.1738,      8.8750,      5.8438,      2.4375,      2.2969,      6.5000,      5.2812,      5.0625,      6.0625,     10.3750,      2.3750,      7.0938,      1.5000,      4.1250,      9.5625],
        [     0.0315,      8.7500,      2.3438,      2.3594,      0.7031,      1.2109,      4.4062,      2.1875,      5.0312,      5.0938,     12.8750,      7.5938,      3.2500,      6.2188,      6.1250],
        [     0.1162,     10.2500,      4.1250,      2.6250,      4.1875,      4.7500,      6.2812,      4.8125,      7.5625,      5.9375,      7.2188,     10.9375,      5.2188,      6.6250,      6.7188],
        [     0.0020,      7.5625,      4.4375,      1.1328,      3.9375,      3.8438,      3.6875,      7.5000,      5.1875,      2.8906,      1.6406,      4.4375,     15.5000,      7.4062,      5.1875],
        [     0.1416,     11.3125,      5.2188,      3.2812,      2.6719,      4.4062,      6.9375,      7.9688,     11.5625,      7.0938,      1.4531,      6.2500,      7.6250,     15.5000,      9.7500],
        [     0.1182,      8.6875,      5.3125,      2.1875,      0.8984,      5.6562,      4.3438,      3.9844,      5.5625,      9.8125,      2.2656,      5.8438,      2.3281,      6.1875,     11.5625],
        [     0.1060,      8.3750,      6.4375,      2.1719,      3.5781,      1.4375,      3.4844,      4.0000,      4.3438,      6.5938,      2.2500,      4.1250,      1.5625,      2.5156,      6.5938]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3473],
        [0.2777],
        [0.2221],
        [0.1731],
        [0.2134],
        [0.0916],
        [0.1331],
        [0.1515],
        [0.1724],
        [0.1376],
        [0.1653],
        [0.1396],
        [0.1470],
        [0.1289]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0137,     0.9883,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0041,     0.8203,     0.1768,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0260,     0.8359,     0.0742,     0.0649,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0063,     0.0376,     0.0339,     0.0043,     0.9180,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3125,     0.6172,     0.0135,     0.0201,     0.0001,     0.0374,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.1953,     0.0143,     0.0042,     0.0464,     0.0052,     0.7305,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0023,     0.4590,     0.0038,     0.0267,     0.0002,     0.0120,     0.2168,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0013,     0.1206,     0.0112,     0.0020,     0.0067,     0.0029,     0.0000,     0.0123,     0.8438,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0082,     0.5625,     0.0454,     0.0094,     0.0069,     0.0466,     0.0170,     0.0830,     0.0830,     0.1387,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.3340,     0.0374,     0.0226,     0.0260,     0.0510,     0.0068,     0.1099,     0.1914,     0.0703,     0.1494,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.6484,     0.0096,     0.0177,     0.0006,     0.0481,     0.0019,     0.1348,     0.0413,     0.0214,     0.0442,     0.0325,     0.0000,     0.0000,     0.0000],
        [    0.0134,     0.2520,     0.0052,     0.0131,     0.0007,     0.0027,     0.1963,     0.1030,     0.0067,     0.0156,     0.0057,     0.2490,     0.1367,     0.0000,     0.0000],
        [    0.0026,     0.0713,     0.0070,     0.0008,     0.0055,     0.0013,     0.0001,     0.0110,     0.3945,     0.0206,     0.0645,     0.0264,     0.0092,     0.3848,     0.0000],
        [    0.0007,     0.2695,     0.0256,     0.0103,     0.0098,     0.0513,     0.0005,     0.1162,     0.1475,     0.0308,     0.0879,     0.0115,     0.0427,     0.1377,     0.0581]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0016,     -0.0591,     -0.0540,     -0.0698,     -0.0630,     -0.0713,     -0.0371,     -0.0693,     -0.0713,     -0.0352,     -0.0588,     -0.0378,     -0.0476,     -0.0466,     -0.0505],
        [    -0.0325,      4.2500,      2.1719,      1.4062,     -1.3594,      1.7812,     -0.4199,      2.2969,     -1.2266,      2.3594,     -1.2578,      2.4375,      2.5781,     -0.8672,      1.7578],
        [     0.1406,      5.4375,      3.9062,      5.9688,      4.2812,      4.8125,      1.7812,      6.4375,      5.3438,      3.6719,      4.0625,      4.4688,      4.4375,      3.7500,      3.5938],
        [    -0.1270,      3.3438,      0.9180,      0.7852,      1.0469,      0.3926,      2.2344,     -0.0251,      0.6875,      0.2451,      1.5312,      1.3438,     -0.5977,      1.2422,      3.7969],
        [     0.1138,      1.8906,      1.7891,     -0.2695,      5.0938,     -1.0938,     -3.2344,     -0.5898,      7.2188,      2.4062,      6.7188,      1.4453,     -3.0000,      5.2500,      3.0156],
        [    -0.3379,      0.3457,     -3.4688,     -3.0781,     -8.0000,     -2.4531,      5.8125,     -0.9102,     -8.5625,     -3.1719,     -6.2500,      1.6797,     -0.8750,     -6.0938,      0.1318],
        [    -0.1436,      3.6406,      1.0234,     -0.2109,      2.2031,      0.0220,      4.9688,      0.7812,      2.1719,      1.0156,      2.4688,      2.2344,     -1.5391,      2.2656,      4.7812],
        [    -0.0830,      5.1875,      0.4102,      2.3594,     -2.5312,      1.5547,      4.4375,      4.6875,      0.1709,      1.3281,      0.5625,      3.3594,      3.3906,      0.8242,      2.6562],
        [     0.1387,      4.6875,      2.2969,      0.5664,      1.7969,      0.9492,     -4.4688,      2.3906,      6.6250,      2.2812,      4.1562,      2.5625,      0.7695,      5.2812,      5.0938],
        [    -0.0239,      4.1875,      1.6875,      0.1079,     -0.1963,      1.7109,      0.6992,      2.2812,      2.2812,      2.7969,      2.2344,      2.8438,      1.2031,      1.9219,      3.2656],
        [     0.1030,      7.0000,      4.8125,      4.3125,      4.4375,      5.1250,      3.1094,      5.8750,      6.4375,      5.4375,      6.1875,      4.8438,      3.4844,      4.7812,      5.6875],
        [     0.0688,      8.1250,      3.9219,      4.5312,      1.1250,      5.5312,      2.2812,      6.5625,      5.3750,      4.7188,      5.4375,      5.1250,      4.6875,      4.8750,      4.5938],
        [    -0.1245,      2.8125,     -1.0781,     -0.1484,     -3.1406,     -1.7344,      2.5625,      1.9141,     -0.8242,      0.0325,     -0.9688,      2.7969,      2.2031,      0.5430,      2.6406],
        [     0.0547,      3.3594,      1.0469,     -1.1094,      0.8047,     -0.6211,     -3.2188,      1.5000,      5.0625,      2.1250,      3.2656,      2.3750,      1.3125,      5.0625,      4.8125],
        [     0.0879,      6.0000,      3.6562,      2.7500,      2.7031,      4.3438,     -0.2539,      5.1875,      5.4062,      3.8438,      4.9062,      2.8594,      4.1562,      5.3438,      4.4688]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4321],
        [0.1990],
        [0.2713],
        [0.2151],
        [0.2812],
        [0.1934],
        [0.1934],
        [0.1868],
        [0.1979],
        [0.1759],
        [0.1224],
        [0.2185],
        [0.1678],
        [0.0408]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2598,     0.0029,     0.7383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0410,     -1.7656,     -1.0000,     -1.3516,     -1.2266,     -0.6914,     -0.8281,     -1.2891,     -1.2656,     -0.9922,     -0.9727,     -1.7188,     -1.1953,     -1.1562,     -1.5391],
        [    -1.0703,    -49.2500,    -27.2500,    -38.7500,    -33.7500,    -20.7500,    -23.6250,    -37.2500,    -35.5000,    -28.5000,    -28.6250,    -47.5000,    -35.2500,    -33.0000,    -41.7500],
        [    -0.0325,     -4.5312,      1.0156,     -3.4062,     -3.6562,     -5.5938,     -4.3125,     -7.5625,     -3.5000,     -4.1875,     -4.0625,     -3.7031,     -6.4375,     -3.5938,     -2.9844],
        [    -0.8047,    -40.7500,    -20.6250,    -29.3750,    -28.0000,    -20.5000,    -19.8750,    -31.0000,    -27.7500,    -24.7500,    -23.0000,    -37.2500,    -28.1250,    -24.8750,    -32.0000],
        [    -1.0859,    -51.0000,    -27.3750,    -38.0000,    -34.5000,    -23.2500,    -23.6250,    -34.5000,    -36.0000,    -29.2500,    -31.1250,    -46.5000,    -33.7500,    -34.0000,    -40.7500],
        [    -0.6602,    -32.5000,    -17.5000,    -25.3750,    -21.0000,    -14.8125,    -14.6875,    -23.2500,    -22.1250,    -19.0000,    -19.1250,    -29.7500,    -21.8750,    -21.0000,    -27.7500],
        [    -1.0469,    -49.5000,    -26.7500,    -37.5000,    -33.0000,    -22.5000,    -24.5000,    -37.7500,    -35.0000,    -29.3750,    -27.6250,    -46.5000,    -33.7500,    -30.7500,    -40.5000],
        [    -1.1641,    -55.0000,    -28.0000,    -41.0000,    -36.7500,    -27.0000,    -28.1250,    -43.5000,    -39.2500,    -32.7500,    -30.5000,    -51.2500,    -39.2500,    -34.7500,    -44.5000],
        [    -1.5469,    -70.0000,    -37.7500,    -52.5000,    -48.7500,    -30.8750,    -34.5000,    -53.5000,    -50.0000,    -40.7500,    -39.7500,    -67.0000,    -49.2500,    -45.0000,    -58.2500],
        [    -1.0625,    -47.2500,    -23.0000,    -34.7500,    -33.0000,    -21.3750,    -25.0000,    -37.0000,    -34.7500,    -26.3750,    -26.7500,    -44.7500,    -34.0000,    -30.8750,    -37.5000],
        [    -1.0078,    -43.7500,    -24.6250,    -34.0000,    -30.8750,    -18.7500,    -21.5000,    -33.5000,    -32.2500,    -25.7500,    -24.2500,    -43.2500,    -29.7500,    -28.5000,    -37.7500],
        [    -1.1094,    -52.7500,    -27.8750,    -40.5000,    -34.5000,    -23.0000,    -25.7500,    -42.2500,    -37.5000,    -31.1250,    -29.2500,    -51.0000,    -38.0000,    -33.2500,    -44.7500],
        [    -1.3516,    -62.0000,    -32.7500,    -46.2500,    -42.7500,    -29.5000,    -31.5000,    -48.7500,    -44.5000,    -37.0000,    -33.5000,    -58.5000,    -43.7500,    -39.0000,    -51.0000],
        [    -1.4297,    -64.0000,    -34.7500,    -47.7500,    -43.5000,    -27.6250,    -31.1250,    -48.2500,    -45.2500,    -36.7500,    -35.2500,    -61.2500,    -43.5000,    -40.2500,    -53.2500],
        [    -0.5078,    -26.0000,    -12.5625,    -18.8750,    -16.0000,    -12.9375,    -13.0000,    -22.2500,    -18.2500,    -15.8125,    -13.9375,    -24.1250,    -19.7500,    -15.4375,    -20.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6782],
        [0.4774],
        [0.6710],
        [0.6583],
        [0.5845],
        [0.6679],
        [0.6342],
        [0.6673],
        [0.6195],
        [0.5844],
        [0.5914],
        [0.6676],
        [0.6672],
        [0.5255]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0131,     -2.2344,     -1.8906,     -2.2969,     -2.0312,     -2.2812,     -1.4766,     -2.0938,     -2.3438,     -2.2031,     -1.7422,     -2.0625,     -1.7344,     -2.2031,     -2.3750],
        [    -0.2451,    -41.2500,    -31.8750,    -42.0000,    -36.7500,    -43.2500,    -26.0000,    -43.0000,    -43.0000,    -42.7500,    -35.0000,    -38.5000,    -37.5000,    -42.7500,    -45.5000],
        [    -0.3438,    -56.0000,    -46.0000,    -57.2500,    -50.7500,    -56.2500,    -36.0000,    -53.0000,    -58.0000,    -55.7500,    -43.5000,    -51.5000,    -44.7500,    -55.7500,    -58.7500],
        [    -0.5547,    -97.0000,    -82.5000,    -99.0000,    -86.5000,    -98.0000,    -65.0000,    -91.0000,    -99.5000,    -95.0000,    -75.0000,    -89.5000,    -74.5000,    -93.0000,   -103.0000],
        [    -0.5039,    -87.5000,    -72.5000,    -90.0000,    -78.0000,    -91.0000,    -59.5000,    -87.5000,    -90.5000,    -88.0000,    -70.0000,    -81.0000,    -72.5000,    -85.0000,    -94.0000],
        [    -0.6133,   -104.5000,    -86.5000,   -107.0000,    -93.5000,   -107.0000,    -69.0000,   -100.5000,   -108.0000,   -103.5000,    -81.5000,    -96.5000,    -84.0000,   -103.0000,   -111.5000],
        [    -0.5625,    -91.5000,    -76.5000,    -93.5000,    -82.5000,    -92.0000,    -61.7500,    -85.5000,    -93.5000,    -88.5000,    -69.0000,    -83.5000,    -70.5000,    -88.0000,    -94.5000],
        [    -0.5391,    -92.0000,    -76.0000,    -92.5000,    -82.0000,    -92.0000,    -58.7500,    -85.0000,    -95.0000,    -89.5000,    -70.5000,    -83.5000,    -71.5000,    -90.5000,    -96.0000],
        [    -0.5977,    -99.5000,    -85.0000,   -105.5000,    -94.0000,   -106.0000,    -68.5000,    -96.5000,   -109.0000,    -99.5000,    -81.5000,    -92.5000,    -80.0000,   -101.5000,   -108.5000],
        [    -0.4395,    -77.0000,    -65.5000,    -79.5000,    -72.0000,    -80.5000,    -51.0000,    -72.5000,    -82.5000,    -76.0000,    -61.5000,    -71.5000,    -60.0000,    -77.0000,    -83.5000],
        [    -0.3848,    -66.5000,    -56.0000,    -68.0000,    -61.5000,    -68.0000,    -42.5000,    -62.5000,    -71.5000,    -66.0000,    -52.2500,    -61.5000,    -52.7500,    -66.5000,    -71.0000],
        [    -0.5547,    -95.0000,    -78.0000,    -97.5000,    -86.5000,    -97.0000,    -62.5000,    -92.0000,    -98.5000,    -94.0000,    -74.5000,    -87.5000,    -76.5000,    -93.5000,   -100.5000],
        [    -0.6172,   -103.5000,    -86.0000,   -105.5000,    -94.5000,   -104.5000,    -66.5000,    -95.5000,   -109.0000,   -100.5000,    -79.5000,    -94.5000,    -80.0000,   -103.0000,   -109.0000],
        [    -0.5977,   -101.5000,    -83.5000,   -105.0000,    -92.5000,   -106.0000,    -67.5000,   -100.0000,   -108.5000,   -102.5000,    -81.5000,    -93.5000,    -84.5000,   -102.0000,   -109.5000],
        [    -0.2988,    -50.2500,    -39.7500,    -51.2500,    -43.5000,    -52.0000,    -34.0000,    -51.5000,    -50.5000,    -51.0000,    -40.5000,    -46.7500,    -43.2500,    -48.2500,    -54.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.8090],
        [0.9180],
        [0.8276],
        [0.9192],
        [0.7661],
        [0.9167],
        [0.6790],
        [0.9171],
        [0.9173],
        [0.8413],
        [0.9047],
        [0.9175],
        [0.9171],
        [0.7468]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.8281,     0.1729,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.8789,     0.1060,     0.0134,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0277,     0.6133,     0.0208,     0.3379,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.0006,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0540,     0.0000,     0.0000,     0.0015,     0.9453,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0047,     0.0007,     0.0000,     0.0000,     0.9922,     0.0031,     0.0010,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0088,     0.0000,     0.0116,     0.0001,     0.9805,     0.0000,     0.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0001,     0.0203,     0.0000,     0.9023,     0.0002,     0.0002,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0040,     0.0000,     0.0037,     0.0000,     0.9922,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0150,     0.0000,     0.0132,     0.0000,     0.9727,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0046,     0.0003,     0.0001,     0.0000,     0.9922,     0.0016,     0.0005,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0054,     0.0000,     0.0147,     0.0001,     0.9805,     0.0000,     0.0000,     0.0003,     0.0001,     0.0003,     0.0001,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0084,     0.0000,     0.0084,     0.0000,     0.9844,     0.0001,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0026,      0.2002,      0.0212,      0.2061,      0.1279,      0.2637,      0.0177,      0.0289,      0.1309,      0.0693,      0.0942,      0.0898,     -0.1235,      0.0518,      0.0280],
        [     0.1348,     15.0000,      5.6875,     11.3750,      4.2188,     16.6250,      3.7656,      5.7812,      6.6875,      7.2188,      4.5938,      7.7812,     -3.0000,      1.7188,      2.7031],
        [     0.0552,      7.8750,      6.3125,      5.2188,      1.2891,      9.0000,      5.7188,      5.9375,      2.4844,      4.6562,      0.4219,      5.3438,      1.4219,     -0.0811,      1.3984],
        [     0.0532,      8.2500,      6.0938,      4.0312,     -2.2500,     11.7500,      7.1562,      4.8438,      0.0659,      6.5625,      2.7031,      4.6250,      0.0806,     -1.5391,      1.3516],
        [     0.0776,      3.1719,     -0.2100,      2.5781,     -3.2812,      9.0625,     -0.2559,     -4.7812,     -0.0354,      3.7344,      4.9688,      0.0156,     -9.1250,     -0.1855,     -0.0308],
        [     0.0991,     14.0625,     13.5625,      8.3125,     -1.3594,     21.0000,     14.1875,     12.1250,      2.6875,     10.1875,      4.0625,     10.4375,      4.1875,     -0.5078,      3.4219],
        [    -0.0349,      2.0312,      9.0625,     -3.2656,     -7.2812,      5.5000,     11.9375,      7.7500,     -5.0625,      5.5312,     -1.2188,      3.3906,      7.8750,     -4.5938,      0.9609],
        [     0.0947,     13.8750,     11.9375,      7.7500,     -1.2656,     19.2500,     13.4375,     12.3125,      1.4766,      9.1875,      2.6094,      9.6250,      4.5938,     -2.3281,      2.2031],
        [     0.1055,      7.2188,      1.0312,      7.5000,      2.6250,     11.9375,      0.8320,     -0.8633,      4.6875,      4.0312,      5.6250,      3.1875,     -6.9062,      2.2812,      1.3672],
        [     0.1113,     11.2500,      3.9219,      9.9375,      3.8281,     13.6875,      5.3750,      5.0625,      3.9688,      5.4062,      3.0469,      6.5625,     -2.6562,      0.0923,      2.0781],
        [     0.1494,     13.1875,      5.1562,     13.1250,      5.3438,     18.7500,      5.5938,      3.8594,      7.0000,      6.2500,      5.7500,      6.8125,     -6.0625,      2.4531,      2.6719],
        [     0.1465,     12.2500,      3.7812,     12.1250,      6.2500,     16.3750,      3.7812,      3.2656,      6.3750,      5.9688,      4.3750,      6.0938,     -5.8750,      1.1406,      1.4375],
        [     0.0903,     11.2500,      8.3750,      7.0625,     -0.5586,     16.6250,     10.1875,      9.0000,      1.5469,      6.9375,      2.9219,      7.3750,      2.0938,     -1.8047,      1.5938],
        [     0.1074,      7.7188,      2.2656,      8.7500,      4.0000,     12.9375,      2.6094,      0.8555,      4.9375,      3.8438,      4.9688,      3.9688,     -5.6562,      1.9688,      1.5312],
        [     0.0938,     10.4375,      4.2812,     10.4375,      3.9688,     15.2500,      5.7500,      2.8750,      5.0625,      6.9062,      5.2500,      4.2188,     -4.5625,      1.7812,      3.3438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0932],
        [    0.0196],
        [    0.0147],
        [    0.0025],
        [    0.0009],
        [    0.1286],
        [    0.0518],
        [    0.0000],
        [    0.0010],
        [    0.0002],
        [    0.0000],
        [    0.0654],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.0737,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0287,     0.3535,     0.6172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0151,     0.1914,     0.3359,     0.4570,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0005,     0.0444,     0.2305,     0.3281,     0.3965,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0206,     0.2070,     0.3340,     0.4375,     0.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0104,     0.1289,     0.2256,     0.3066,     0.0000,     0.0000,     0.3281,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0079,     0.0972,     0.1699,     0.2314,     0.0000,     0.0000,     0.2471,     0.2461,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0062,     0.0767,     0.1338,     0.1826,     0.0000,     0.0000,     0.1943,     0.1943,     0.2119,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0050,     0.0625,     0.1099,     0.1494,     0.0000,     0.0000,     0.1592,     0.1592,     0.1738,     0.1816,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0076,     0.0718,     0.1138,     0.1484,     0.0000,     0.0001,     0.1562,     0.1562,     0.1689,     0.1768,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0044,     0.0542,     0.0947,     0.1289,     0.0000,     0.0000,     0.1377,     0.1377,     0.1504,     0.1572,     0.0000,     0.1357,     0.0000],
        [    0.0000,     0.0000,     0.0038,     0.0474,     0.0825,     0.1123,     0.0000,     0.0000,     0.1196,     0.1196,     0.1309,     0.1367,     0.0000,     0.1187,     0.1279]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0002,      0.2422,      0.2617,      0.2715,      0.2734,      0.2734,      0.1865,      0.2578,      0.2734,      0.2734,      0.2734,      0.2734,      0.2500,      0.2734,      0.2734],
        [    -0.0859,     65.5000,     72.5000,     74.5000,     75.0000,     75.5000,     48.7500,     67.5000,     75.5000,     75.5000,     75.5000,     75.5000,     64.0000,     75.5000,     75.5000],
        [    -0.0981,     69.0000,     76.5000,     79.0000,     79.5000,     79.5000,     51.2500,     71.0000,     80.0000,     80.0000,     80.0000,     80.0000,     67.5000,     80.0000,     80.0000],
        [    -0.1011,     69.0000,     76.0000,     78.5000,     79.0000,     79.5000,     51.2500,     70.5000,     79.5000,     79.5000,     79.5000,     79.5000,     67.0000,     79.5000,     79.5000],
        [    -0.1030,     68.5000,     75.5000,     78.0000,     78.5000,     79.0000,     50.7500,     70.0000,     79.0000,     79.0000,     79.0000,     79.0000,     66.5000,     79.0000,     79.0000],
        [    -0.1035,     69.0000,     76.5000,     79.0000,     79.5000,     80.0000,     51.2500,     71.0000,     80.0000,     80.0000,     80.0000,     80.0000,     67.5000,     80.0000,     80.0000],
        [    -0.0503,     44.0000,     48.5000,     50.2500,     50.5000,     50.7500,     33.2500,     45.7500,     50.7500,     50.7500,     51.0000,     51.0000,     43.7500,     50.7500,     50.7500],
        [    -0.0771,     61.7500,     68.0000,     70.5000,     71.0000,     71.0000,     46.2500,     63.7500,     71.0000,     71.0000,     71.5000,     71.5000,     61.0000,     71.0000,     71.5000],
        [    -0.1030,     68.5000,     76.0000,     78.5000,     79.0000,     79.0000,     50.7500,     70.0000,     79.0000,     79.0000,     79.5000,     79.5000,     66.5000,     79.0000,     79.5000],
        [    -0.1030,     68.5000,     75.5000,     78.0000,     79.0000,     79.0000,     50.7500,     70.0000,     79.0000,     79.0000,     79.5000,     79.5000,     66.5000,     79.0000,     79.0000],
        [    -0.1030,     68.5000,     76.0000,     78.5000,     79.0000,     79.0000,     51.0000,     70.0000,     79.5000,     79.5000,     79.5000,     79.5000,     66.5000,     79.5000,     79.5000],
        [    -0.1030,     68.5000,     76.0000,     78.5000,     79.0000,     79.0000,     51.0000,     70.0000,     79.5000,     79.5000,     79.5000,     79.5000,     67.0000,     79.5000,     79.5000],
        [    -0.0752,     60.5000,     66.5000,     69.0000,     69.5000,     69.5000,     45.2500,     62.5000,     69.5000,     69.5000,     69.5000,     70.0000,     59.7500,     69.5000,     69.5000],
        [    -0.1030,     68.5000,     76.0000,     78.5000,     79.0000,     79.0000,     50.7500,     70.0000,     79.0000,     79.0000,     79.5000,     79.5000,     66.5000,     79.0000,     79.5000],
        [    -0.1030,     68.5000,     75.5000,     78.0000,     79.0000,     79.0000,     50.7500,     70.0000,     79.0000,     79.0000,     79.0000,     79.5000,     66.5000,     79.0000,     79.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3984,     0.6016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1963,     0.4219,     0.3828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1357,     0.3184,     0.3027,     0.2432,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1147,     0.2539,     0.2334,     0.1836,     0.2148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1387,     0.2500,     0.2217,     0.1787,     0.2100,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1177,     0.2295,     0.2070,     0.1621,     0.1895,     0.0003,     0.0933,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0850,     0.1992,     0.1875,     0.1504,     0.1748,     0.0002,     0.0713,     0.1309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0752,     0.1758,     0.1650,     0.1318,     0.1543,     0.0002,     0.0625,     0.1147,     0.1211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0674,     0.1572,     0.1475,     0.1177,     0.1377,     0.0001,     0.0562,     0.1025,     0.1084,     0.1060,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0608,     0.1416,     0.1338,     0.1064,     0.1240,     0.0001,     0.0508,     0.0928,     0.0977,     0.0957,     0.0962,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0640,     0.1260,     0.1196,     0.0962,     0.1104,     0.0002,     0.0579,     0.0859,     0.0903,     0.0889,     0.0889,     0.0718,     0.0000,     0.0000],
        [    0.0000,     0.0520,     0.1216,     0.1147,     0.0918,     0.1069,     0.0001,     0.0435,     0.0801,     0.0840,     0.0825,     0.0825,     0.0581,     0.0820,     0.0000],
        [    0.0000,     0.0481,     0.1128,     0.1064,     0.0850,     0.0991,     0.0001,     0.0403,     0.0742,     0.0781,     0.0767,     0.0767,     0.0537,     0.0762,     0.0732]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,      0.0098,     -0.0016,     -0.0049,     -0.0096,     -0.0085,     -0.0186,      0.0051,     -0.0097,     -0.0094,     -0.0093,     -0.0092,      0.0006,     -0.0096,     -0.0097],
        [    -0.0859,     17.1250,     17.2500,     16.8750,     16.5000,     16.7500,     11.3750,     16.3750,     16.3750,     16.5000,     16.5000,     16.5000,     16.3750,     16.5000,     16.3750],
        [    -0.0977,     18.7500,     19.1250,     18.8750,     18.5000,     18.7500,     12.6250,     18.1250,     18.3750,     18.5000,     18.5000,     18.5000,     18.2500,     18.5000,     18.3750],
        [    -0.1025,     20.6250,     21.5000,     21.3750,     21.1250,     21.2500,     14.4375,     20.3750,     21.0000,     21.0000,     21.0000,     21.0000,     20.6250,     21.0000,     21.0000],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.3750,     21.6250,     14.6875,     20.6250,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.1045,     20.7500,     21.5000,     21.3750,     21.1250,     21.3750,     14.5000,     20.5000,     21.0000,     21.1250,     21.1250,     21.1250,     20.7500,     21.1250,     21.0000],
        [    -0.0723,     17.7500,     18.3750,     18.2500,     18.0000,     18.1250,     12.6250,     17.3750,     17.8750,     18.0000,     18.0000,     18.0000,     17.5000,     18.0000,     17.8750],
        [    -0.0908,     19.3750,     20.0000,     19.8750,     19.6250,     19.8750,     13.5000,     19.1250,     19.5000,     19.6250,     19.6250,     19.6250,     19.2500,     19.6250,     19.5000],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.5000,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.5000,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.5000,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.3750,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.0884,     18.2500,     18.8750,     18.8750,     18.6250,     18.7500,     12.6875,     18.1250,     18.5000,     18.6250,     18.5000,     18.5000,     18.3750,     18.5000,     18.5000],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.3750,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500],
        [    -0.1050,     20.8750,     21.7500,     21.6250,     21.5000,     21.6250,     14.6875,     20.7500,     21.2500,     21.3750,     21.3750,     21.3750,     21.0000,     21.3750,     21.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4277,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.3340,     0.4160,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1777,     0.2383,     0.2969,     0.2891,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1367,     0.1836,     0.2275,     0.2217,     0.2295,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1299,     0.1748,     0.2168,     0.2109,     0.2188,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1128,     0.1514,     0.1885,     0.1836,     0.1895,     0.0435,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0947,     0.1270,     0.1582,     0.1543,     0.1592,     0.0366,     0.1094,     0.1602,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0815,     0.1099,     0.1367,     0.1328,     0.1377,     0.0315,     0.0942,     0.1377,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0718,     0.0967,     0.1201,     0.1167,     0.1211,     0.0277,     0.0830,     0.1211,     0.1211,     0.1211,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0640,     0.0859,     0.1069,     0.1040,     0.1079,     0.0248,     0.0737,     0.1079,     0.1079,     0.1079,     0.1079,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0605,     0.0811,     0.1006,     0.0981,     0.1016,     0.0234,     0.0698,     0.1016,     0.1016,     0.1016,     0.1016,     0.0583,     0.0000,     0.0000],
        [    0.0000,     0.0547,     0.0737,     0.0913,     0.0889,     0.0923,     0.0211,     0.0630,     0.0923,     0.0923,     0.0923,     0.0923,     0.0527,     0.0923,     0.0000],
        [    0.0000,     0.0500,     0.0674,     0.0835,     0.0815,     0.0845,     0.0194,     0.0579,     0.0845,     0.0845,     0.0845,     0.0845,     0.0483,     0.0845,     0.0845]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0002,      0.1885,      0.1895,      0.1904,      0.1904,      0.1904,      0.1865,      0.1895,      0.1904,      0.1904,      0.1904,      0.1904,      0.1885,      0.1904,      0.1904],
        [    -0.0447,     44.5000,     44.7500,     45.0000,     45.0000,     45.0000,     43.5000,     44.7500,     45.0000,     45.0000,     45.0000,     45.0000,     44.5000,     45.0000,     45.0000],
        [    -0.0444,     44.5000,     44.7500,     45.0000,     45.0000,     45.0000,     43.5000,     44.7500,     45.0000,     45.0000,     45.0000,     45.0000,     44.5000,     45.0000,     45.0000],
        [    -0.0449,     44.7500,     45.0000,     45.2500,     45.2500,     45.2500,     43.7500,     45.0000,     45.2500,     45.2500,     45.2500,     45.2500,     44.7500,     45.2500,     45.2500],
        [    -0.0449,     44.7500,     45.2500,     45.2500,     45.2500,     45.2500,     44.0000,     45.0000,     45.2500,     45.2500,     45.2500,     45.2500,     44.7500,     45.2500,     45.2500],
        [    -0.0449,     44.7500,     45.0000,     45.2500,     45.2500,     45.2500,     43.7500,     45.0000,     45.2500,     45.2500,     45.2500,     45.2500,     44.7500,     45.2500,     45.2500],
        [    -0.0452,     44.5000,     45.0000,     45.0000,     45.0000,     45.0000,     43.7500,     44.7500,     45.0000,     45.0000,     45.0000,     45.0000,     44.5000,     45.0000,     45.0000],
        [    -0.0449,     44.7500,     45.0000,     45.2500,     45.2500,     45.2500,     43.7500,     45.0000,     45.2500,     45.2500,     45.2500,     45.2500,     44.7500,     45.2500,     45.2500],
        [    -0.0449,     45.0000,     45.2500,     45.5000,     45.5000,     45.5000,     44.0000,     45.0000,     45.5000,     45.5000,     45.5000,     45.5000,     44.7500,     45.5000,     45.5000],
        [    -0.0449,     44.7500,     45.2500,     45.2500,     45.2500,     45.2500,     44.0000,     45.0000,     45.2500,     45.2500,     45.2500,     45.2500,     44.7500,     45.2500,     45.2500],
        [    -0.0449,     45.0000,     45.2500,     45.5000,     45.2500,     45.5000,     44.0000,     45.0000,     45.5000,     45.5000,     45.5000,     45.5000,     44.7500,     45.5000,     45.5000],
        [    -0.0449,     44.7500,     45.2500,     45.5000,     45.2500,     45.5000,     44.0000,     45.0000,     45.5000,     45.5000,     45.5000,     45.5000,     44.7500,     45.5000,     45.5000],
        [    -0.0447,     44.5000,     44.7500,     45.0000,     45.0000,     45.0000,     43.5000,     44.7500,     45.0000,     45.0000,     45.0000,     45.0000,     44.5000,     45.0000,     45.0000],
        [    -0.0449,     44.7500,     45.2500,     45.2500,     45.2500,     45.5000,     44.0000,     45.0000,     45.5000,     45.5000,     45.5000,     45.5000,     44.7500,     45.5000,     45.5000],
        [    -0.0449,     44.7500,     45.2500,     45.2500,     45.2500,     45.5000,     44.0000,     45.0000,     45.5000,     45.5000,     45.5000,     45.5000,     44.7500,     45.5000,     45.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4980,     0.5039,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2500,     0.2500,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1982,     0.2002,     0.1992,     0.2012,     0.2012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1641,     0.1650,     0.1650,     0.1660,     0.1660,     0.1738,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1406,     0.1416,     0.1416,     0.1426,     0.1426,     0.1494,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1235,     0.1245,     0.1240,     0.1245,     0.1245,     0.1309,     0.1240,     0.1240,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1099,     0.1108,     0.1104,     0.1108,     0.1108,     0.1162,     0.1104,     0.1104,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0986,     0.0996,     0.0991,     0.1001,     0.1001,     0.1045,     0.0996,     0.0991,     0.1001,     0.0991,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0898,     0.0908,     0.0903,     0.0908,     0.0908,     0.0952,     0.0903,     0.0903,     0.0908,     0.0903,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0825,     0.0830,     0.0825,     0.0830,     0.0830,     0.0869,     0.0830,     0.0825,     0.0830,     0.0825,     0.0825,     0.0845,     0.0000,     0.0000],
        [    0.0000,     0.0762,     0.0767,     0.0762,     0.0767,     0.0767,     0.0806,     0.0767,     0.0762,     0.0767,     0.0762,     0.0762,     0.0781,     0.0767,     0.0000],
        [    0.0000,     0.0708,     0.0713,     0.0708,     0.0713,     0.0713,     0.0747,     0.0708,     0.0708,     0.0713,     0.0708,     0.0708,     0.0723,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1201,      0.1201,      0.1201,      0.1201,      0.1201,      0.1206,      0.1201,      0.1201,      0.1201,      0.1201,      0.1201,      0.1201,      0.1201,      0.1201],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.2500,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.2500,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250],
        [    -0.0062,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250,     23.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3682],
        [0.3558],
        [0.3498],
        [0.3464],
        [0.3441],
        [0.3416],
        [0.3409],
        [0.3403],
        [0.3395],
        [0.3390],
        [0.3385],
        [0.3380],
        [0.3377],
        [0.3374]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2520,     0.2480,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.2012,     0.1992,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1650,     0.1650,     0.1660,     0.1641,     0.1641,     0.1758,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1416,     0.1416,     0.1406,     0.1406,     0.1504,     0.1445,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1240,     0.1240,     0.1245,     0.1230,     0.1230,     0.1318,     0.1270,     0.1230,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.1104,     0.1108,     0.1094,     0.1094,     0.1172,     0.1133,     0.1099,     0.1094,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.0996,     0.0996,     0.0986,     0.0986,     0.1055,     0.1021,     0.0991,     0.0986,     0.0991,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0908,     0.0908,     0.0898,     0.0898,     0.0962,     0.0928,     0.0898,     0.0898,     0.0898,     0.0898,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0830,     0.0830,     0.0820,     0.0820,     0.0879,     0.0850,     0.0825,     0.0820,     0.0825,     0.0825,     0.0850,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0767,     0.0767,     0.0757,     0.0757,     0.0811,     0.0786,     0.0762,     0.0757,     0.0762,     0.0762,     0.0786,     0.0757,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0703,     0.0708,     0.0757,     0.0728,     0.0708,     0.0708,     0.0708,     0.0708,     0.0728,     0.0708,     0.0708]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0630,      0.0630,      0.0630,      0.0630,      0.0630,      0.0635,      0.0635,      0.0630,      0.0630,      0.0630,      0.0630,      0.0635,      0.0630,      0.0630],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0160,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000,     21.0000],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     21.0000,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750],
        [     0.0159,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750,     20.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0004],
        [    0.0002],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3340, 0.3320, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2500, 0.2490, 0.2500, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1992, 0.1992, 0.2002, 0.2002, 0.2012, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1621, 0.1611, 0.1621, 0.1621, 0.1631, 0.1895, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1367, 0.1367, 0.1367, 0.1367, 0.1377, 0.1602, 0.1562, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1196, 0.1196, 0.1201, 0.1201, 0.1206, 0.1396, 0.1367, 0.1230, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1069, 0.1064, 0.1069, 0.1074, 0.1079, 0.1250, 0.1221, 0.1099, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0962, 0.0962, 0.0967, 0.0967, 0.0972, 0.1128, 0.1099, 0.0986, 0.0972, 0.0996, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0874, 0.0874, 0.0879, 0.0879, 0.0884, 0.1025, 0.1001, 0.0898, 0.0884, 0.0903, 0.0903, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0801, 0.0801, 0.0806, 0.0806, 0.0811, 0.0938, 0.0918, 0.0825, 0.0811, 0.0830, 0.0830, 0.0830, 0.0000, 0.0000],
        [0.0000, 0.0742, 0.0742, 0.0747, 0.0747, 0.0747, 0.0869, 0.0850, 0.0762, 0.0747, 0.0767, 0.0767, 0.0767, 0.0747, 0.0000],
        [0.0000, 0.0693, 0.0688, 0.0693, 0.0693, 0.0698, 0.0806, 0.0791, 0.0708, 0.0698, 0.0713, 0.0713, 0.0713, 0.0698, 0.0698]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0006,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301,     0.3301],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000],
        [    0.4004,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000,   209.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.],
        [0.]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,
------
		(,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001,:0.0001)
,,,,,,,,,,,,,,,
@ 4050 train 3.8794 , allloss: 3.8794, dt: 1185.19ms, fracRes: 0.1755, norm(attn): 32.0000, norm(output): 0.4316, norm(x): 0.5799, norm(y): 0.9924, norm:0.4189, tok/sec: 110591.60, flops:116.10, batch-reuse:1
@ 4051 train 3.8551 , allloss: 3.8551, dt: 700.37ms, fracRes: 0.1746, norm(attn): 32.0000, norm(output): 0.4258, norm(x): 0.5741, norm(y): 0.9920, norm:0.4088, tok/sec: 187146.71, flops:196.47, batch-reuse:1
@ 4052 train 3.8013 , allloss: 3.8013, dt: 705.47ms, fracRes: 0.1756, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5782, norm(y): 0.9925, norm:0.4109, tok/sec: 185794.10, flops:195.05, batch-reuse:1
@ 4053 train 3.8194 , allloss: 3.8194, dt: 708.02ms, fracRes: 0.1748, norm(attn): 32.0000, norm(output): 0.4277, norm(x): 0.5708, norm(y): 0.9918, norm:0.4101, tok/sec: 185125.16, flops:194.34, batch-reuse:1
@ 4054 train 3.9493 , allloss: 3.9493, dt: 699.35ms, fracRes: 0.1756, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5797, norm(y): 0.9927, norm:0.4492, tok/sec: 187420.87, flops:196.75, batch-reuse:1
@ 4055 train 3.9947 , allloss: 3.9947, dt: 707.94ms, fracRes: 0.1757, norm(attn): 32.0000, norm(output): 0.4395, norm(x): 0.5810, norm(y): 0.9929, norm:0.4532, tok/sec: 185146.17, flops:194.37, batch-reuse:1
@ 4056 train 4.0304 , allloss: 4.0304, dt: 705.12ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4316, norm(x): 0.5791, norm(y): 0.9926, norm:0.4479, tok/sec: 185886.26, flops:195.14, batch-reuse:1
@ 4057 train 3.8286 , allloss: 3.8286, dt: 715.73ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4316, norm(x): 0.5752, norm(y): 0.9924, norm:0.4557, tok/sec: 183130.89, flops:192.25, batch-reuse:1
@ 4058 train 3.9871 , allloss: 3.9871, dt: 714.32ms, fracRes: 0.1752, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5753, norm(y): 0.9926, norm:0.3823, tok/sec: 183491.58, flops:192.63, batch-reuse:1
@ 4059 train 3.8461 , allloss: 3.8461, dt: 707.87ms, fracRes: 0.1744, norm(attn): 31.8750, norm(output): 0.4258, norm(x): 0.5729, norm(y): 0.9922, norm:0.4165, tok/sec: 185162.94, flops:194.38, batch-reuse:1
@ 4060 train 3.8160 , allloss: 3.8160, dt: 715.28ms, fracRes: 0.1762, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5753, norm(y): 0.9920, norm:0.3913, tok/sec: 183246.07, flops:192.37, batch-reuse:1
@ 4061 train 3.9230 , allloss: 3.9230, dt: 711.86ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5788, norm(y): 0.9925, norm:0.4466, tok/sec: 184126.54, flops:193.30, batch-reuse:1
@ 4062 train 3.8682 , allloss: 3.8682, dt: 714.84ms, fracRes: 0.1759, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5798, norm(y): 0.9926, norm:0.4079, tok/sec: 183358.53, flops:192.49, batch-reuse:1
@ 4063 train 3.8340 , allloss: 3.8340, dt: 696.78ms, fracRes: 0.1765, norm(attn): 31.8750, norm(output): 0.4316, norm(x): 0.5787, norm(y): 0.9927, norm:0.3915, tok/sec: 188110.58, flops:197.48, batch-reuse:1
@ 4064 train 3.8870 , allloss: 3.8870, dt: 706.74ms, fracRes: 0.1762, norm(attn): 31.8750, norm(output): 0.4355, norm(x): 0.5789, norm(y): 0.9928, norm:0.4081, tok/sec: 185461.03, flops:194.70, batch-reuse:1
@ 4065 train 3.8999 , allloss: 3.8999, dt: 713.24ms, fracRes: 0.1757, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5789, norm(y): 0.9925, norm:0.3720, tok/sec: 183770.66, flops:192.92, batch-reuse:1
@ 4066 train 3.7704 , allloss: 3.7704, dt: 714.47ms, fracRes: 0.1756, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5818, norm(y): 0.9928, norm:0.4120, tok/sec: 183453.61, flops:192.59, batch-reuse:1
@ 4067 train 3.8988 , allloss: 3.8988, dt: 713.36ms, fracRes: 0.1765, norm(attn): 31.7500, norm(output): 0.4375, norm(x): 0.5820, norm(y): 0.9924, norm:0.4580, tok/sec: 183738.54, flops:192.89, batch-reuse:1
@ 4068 train 3.8036 , allloss: 3.8036, dt: 702.18ms, fracRes: 0.1755, norm(attn): 31.7500, norm(output): 0.4297, norm(x): 0.5717, norm(y): 0.9918, norm:0.3894, tok/sec: 186665.17, flops:195.96, batch-reuse:1
@ 4069 train 3.9475 , allloss: 3.9475, dt: 711.87ms, fracRes: 0.1761, norm(attn): 31.5000, norm(output): 0.4453, norm(x): 0.5886, norm(y): 0.9926, norm:0.4175, tok/sec: 184123.83, flops:193.29, batch-reuse:1
@ 4070 train 3.9401 , allloss: 3.9401, dt: 715.83ms, fracRes: 0.1770, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5840, norm(y): 0.9929, norm:0.3933, tok/sec: 183105.88, flops:192.22, batch-reuse:1
@ 4071 train 3.8770 , allloss: 3.8770, dt: 714.79ms, fracRes: 0.1758, norm(attn): 31.7500, norm(output): 0.4297, norm(x): 0.5757, norm(y): 0.9931, norm:0.3747, tok/sec: 183370.64, flops:192.50, batch-reuse:1
@ 4072 train 3.8587 , allloss: 3.8587, dt: 716.22ms, fracRes: 0.1747, norm(attn): 31.6250, norm(output): 0.4336, norm(x): 0.5738, norm(y): 0.9924, norm:0.4286, tok/sec: 183006.10, flops:192.12, batch-reuse:1
@ 4073 train 3.8665 , allloss: 3.8665, dt: 712.02ms, fracRes: 0.1729, norm(attn): 31.7500, norm(output): 0.4297, norm(x): 0.5702, norm(y): 0.9921, norm:0.4046, tok/sec: 184084.12, flops:193.25, batch-reuse:1
@ 4074 train 3.9684 , allloss: 3.9684, dt: 700.58ms, fracRes: 0.1738, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5763, norm(y): 0.9932, norm:0.4352, tok/sec: 187089.71, flops:196.41, batch-reuse:1
@ 4075 train 3.8590 , allloss: 3.8590, dt: 700.08ms, fracRes: 0.1732, norm(attn): 31.7500, norm(output): 0.4316, norm(x): 0.5700, norm(y): 0.9931, norm:0.4366, tok/sec: 187223.96, flops:196.55, batch-reuse:1
@ 4076 train 4.0185 , allloss: 4.0185, dt: 713.55ms, fracRes: 0.1751, norm(attn): 31.5000, norm(output): 0.4395, norm(x): 0.5805, norm(y): 0.9929, norm:0.4548, tok/sec: 183690.28, flops:192.84, batch-reuse:1
@ 4077 train 4.0216 , allloss: 4.0216, dt: 714.68ms, fracRes: 0.1746, norm(attn): 31.6250, norm(output): 0.4414, norm(x): 0.5851, norm(y): 0.9927, norm:0.4395, tok/sec: 183400.68, flops:192.53, batch-reuse:1
@ 4078 train 3.9971 , allloss: 3.9971, dt: 716.27ms, fracRes: 0.1760, norm(attn): 31.6250, norm(output): 0.4395, norm(x): 0.5857, norm(y): 0.9930, norm:0.4120, tok/sec: 182991.66, flops:192.10, batch-reuse:1
@ 4079 train 4.0514 , allloss: 4.0514, dt: 717.11ms, fracRes: 0.1765, norm(attn): 31.5000, norm(output): 0.4336, norm(x): 0.5779, norm(y): 0.9932, norm:0.4007, tok/sec: 182779.21, flops:191.88, batch-reuse:1
@ 4080 train 4.2470 , allloss: 4.2470, dt: 710.49ms, fracRes: 0.1768, norm(attn): 31.5000, norm(output): 0.4395, norm(x): 0.5805, norm(y): 0.9934, norm:0.4495, tok/sec: 184480.95, flops:193.67, batch-reuse:1
@ 4081 train 4.0441 , allloss: 4.0441, dt: 692.81ms, fracRes: 0.1784, norm(attn): 31.5000, norm(output): 0.4414, norm(x): 0.5887, norm(y): 0.9928, norm:0.4486, tok/sec: 189189.13, flops:198.61, batch-reuse:1
@ 4082 train 4.0416 , allloss: 4.0416, dt: 701.26ms, fracRes: 0.1760, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5794, norm(y): 0.9926, norm:0.3917, tok/sec: 186908.81, flops:196.22, batch-reuse:1
@ 4083 train 4.1222 , allloss: 4.1222, dt: 708.97ms, fracRes: 0.1771, norm(attn): 31.5000, norm(output): 0.4414, norm(x): 0.5885, norm(y): 0.9932, norm:0.4513, tok/sec: 184876.70, flops:194.08, batch-reuse:1
@ 4084 train 4.1340 , allloss: 4.1340, dt: 711.31ms, fracRes: 0.1759, norm(attn): 31.6250, norm(output): 0.4316, norm(x): 0.5718, norm(y): 0.9936, norm:0.3829, tok/sec: 184268.30, flops:193.45, batch-reuse:1
@ 4085 train 4.0178 , allloss: 4.0178, dt: 703.35ms, fracRes: 0.1774, norm(attn): 31.3750, norm(output): 0.6172, norm(x): 0.7622, norm(y): 0.9933, norm:8.4168, tok/sec: 186354.49, flops:195.64, batch-reuse:1
@ 4086 train 4.0228 , allloss: 4.0228, dt: 693.58ms, fracRes: 0.1771, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5784, norm(y): 0.9935, norm:0.5405, tok/sec: 188979.14, flops:198.39, batch-reuse:1
@ 4087 train 4.0593 , allloss: 4.0593, dt: 701.80ms, fracRes: 0.1763, norm(attn): 31.5000, norm(output): 0.4414, norm(x): 0.5831, norm(y): 0.9937, norm:0.4624, tok/sec: 186764.54, flops:196.07, batch-reuse:1
@ 4088 train 4.0451 , allloss: 4.0451, dt: 692.87ms, fracRes: 0.1745, norm(attn): 31.6250, norm(output): 0.4336, norm(x): 0.5727, norm(y): 0.9932, norm:0.4357, tok/sec: 189172.01, flops:198.59, batch-reuse:1
@ 4089 train 4.0155 , allloss: 4.0155, dt: 717.32ms, fracRes: 0.1767, norm(attn): 31.5000, norm(output): 0.4375, norm(x): 0.5822, norm(y): 0.9932, norm:0.4971, tok/sec: 182725.81, flops:191.83, batch-reuse:1
@ 4090 train 4.1413 , allloss: 4.1413, dt: 691.79ms, fracRes: 0.1766, norm(attn): 31.5000, norm(output): 0.4395, norm(x): 0.5828, norm(y): 0.9941, norm:0.4351, tok/sec: 189467.61, flops:198.90, batch-reuse:1
@ 4091 train 4.1166 , allloss: 4.1166, dt: 703.99ms, fracRes: 0.1780, norm(attn): 31.5000, norm(output): 0.4375, norm(x): 0.5850, norm(y): 0.9945, norm:0.4317, tok/sec: 186183.33, flops:195.46, batch-reuse:1
@ 4092 train 4.0682 , allloss: 4.0682, dt: 702.33ms, fracRes: 0.1790, norm(attn): 31.5000, norm(output): 0.4473, norm(x): 0.5925, norm(y): 0.9942, norm:0.4559, tok/sec: 186623.98, flops:195.92, batch-reuse:1
@ 4093 train 4.1769 , allloss: 4.1769, dt: 709.32ms, fracRes: 0.1787, norm(attn): 31.5000, norm(output): 0.4453, norm(x): 0.5907, norm(y): 0.9936, norm:0.4626, tok/sec: 184785.29, flops:193.99, batch-reuse:1
@ 4094 train 3.9943 , allloss: 3.9943, dt: 710.94ms, fracRes: 0.1788, norm(attn): 31.5000, norm(output): 0.4531, norm(x): 0.6000, norm(y): 0.9945, norm:0.4410, tok/sec: 184363.47, flops:193.55, batch-reuse:1
@ 4095 train 4.0272 , allloss: 4.0272, dt: 707.85ms, fracRes: 0.1774, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5834, norm(y): 0.9939, norm:0.4137, tok/sec: 185169.43, flops:194.39, batch-reuse:1
@ 4096 train 4.0868 , allloss: 4.0868, dt: 693.54ms, fracRes: 0.1757, norm(attn): 31.7500, norm(output): 0.4414, norm(x): 0.5860, norm(y): 0.9942, norm:0.4440, tok/sec: 188989.99, flops:198.40, batch-reuse:1
@ 4097 train 4.0763 , allloss: 4.0763, dt: 708.86ms, fracRes: 0.1743, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5836, norm(y): 0.9940, norm:0.4484, tok/sec: 184905.05, flops:194.11, batch-reuse:1
@ 4098 train 3.9236 , allloss: 3.9236, dt: 705.84ms, fracRes: 0.1765, norm(attn): 31.8750, norm(output): 0.4492, norm(x): 0.5924, norm(y): 0.9937, norm:0.4208, tok/sec: 185696.13, flops:194.94, batch-reuse:1
@ 4099 train 4.0744 , allloss: 4.0744, dt: 709.75ms, fracRes: 0.1746, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5751, norm(y): 0.9940, norm:8.1419, tok/sec: 184673.06, flops:193.87, batch-reuse:1
@ 4100 train 4.1482 , allloss: 4.1482, dt: 712.81ms, fracRes: 0.1763, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5810, norm(y): 0.9946, norm:0.6668, tok/sec: 183880.01, flops:193.04, batch-reuse:1
@ 4101 train 4.1505 , allloss: 4.1505, dt: 702.81ms, fracRes: 0.1774, norm(attn): 31.8750, norm(output): 0.4453, norm(x): 0.5922, norm(y): 0.9949, norm:0.5901, tok/sec: 186497.05, flops:195.78, batch-reuse:1
@ 4102 train 4.0734 , allloss: 4.0734, dt: 716.89ms, fracRes: 0.1765, norm(attn): 31.8750, norm(output): 0.4473, norm(x): 0.5921, norm(y): 0.9945, norm:0.4757, tok/sec: 182835.32, flops:191.94, batch-reuse:1
@ 4103 train 4.1076 , allloss: 4.1076, dt: 712.32ms, fracRes: 0.1768, norm(attn): 31.8750, norm(output): 0.4492, norm(x): 0.5925, norm(y): 0.9943, norm:0.5927, tok/sec: 184008.15, flops:193.17, batch-reuse:1
@ 4104 train 4.0490 , allloss: 4.0490, dt: 712.20ms, fracRes: 0.1746, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5780, norm(y): 0.9940, norm:0.4043, tok/sec: 184037.96, flops:193.20, batch-reuse:1
@ 4105 train 4.0723 , allloss: 4.0723, dt: 713.77ms, fracRes: 0.1747, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5818, norm(y): 0.9940, norm:0.5309, tok/sec: 183634.08, flops:192.78, batch-reuse:1
@ 4106 train 4.1635 , allloss: 4.1635, dt: 698.79ms, fracRes: 0.1769, norm(attn): 31.8750, norm(output): 0.4531, norm(x): 0.5963, norm(y): 0.9944, norm:0.3928, tok/sec: 187569.99, flops:196.91, batch-reuse:1
@ 4107 train 3.9609 , allloss: 3.9609, dt: 704.31ms, fracRes: 0.1769, norm(attn): 31.8750, norm(output): 0.4473, norm(x): 0.5932, norm(y): 0.9942, norm:0.4920, tok/sec: 186099.38, flops:195.37, batch-reuse:1
@ 4108 train 4.0686 , allloss: 4.0686, dt: 714.53ms, fracRes: 0.1775, norm(attn): 31.8750, norm(output): 0.4434, norm(x): 0.5878, norm(y): 0.9942, norm:0.3758, tok/sec: 183438.31, flops:192.57, batch-reuse:1
@ 4109 train 4.1688 , allloss: 4.1688, dt: 719.69ms, fracRes: 0.1778, norm(attn): 31.8750, norm(output): 0.4434, norm(x): 0.5874, norm(y): 0.9940, norm:0.4722, tok/sec: 182122.48, flops:191.19, batch-reuse:1
@ 4110 train 4.0252 , allloss: 4.0252, dt: 701.12ms, fracRes: 0.1779, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5826, norm(y): 0.9942, norm:0.4321, tok/sec: 186946.44, flops:196.26, batch-reuse:1
@ 4111 train 4.0453 , allloss: 4.0453, dt: 701.92ms, fracRes: 0.1783, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5868, norm(y): 0.9945, norm:0.4437, tok/sec: 186733.90, flops:196.03, batch-reuse:1
@ 4112 train 4.0356 , allloss: 4.0356, dt: 703.26ms, fracRes: 0.1792, norm(attn): 31.7500, norm(output): 0.4453, norm(x): 0.5931, norm(y): 0.9942, norm:0.4480, tok/sec: 186378.37, flops:195.66, batch-reuse:1
@ 4113 train 4.0085 , allloss: 4.0085, dt: 703.59ms, fracRes: 0.1766, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5735, norm(y): 0.9940, norm:0.4326, tok/sec: 186291.15, flops:195.57, batch-reuse:1
@ 4114 train 4.1439 , allloss: 4.1439, dt: 703.98ms, fracRes: 0.1789, norm(attn): 31.8750, norm(output): 0.4473, norm(x): 0.5916, norm(y): 0.9947, norm:0.4681, tok/sec: 186185.85, flops:195.46, batch-reuse:1
@ 4115 train 3.9667 , allloss: 3.9667, dt: 702.57ms, fracRes: 0.1780, norm(attn): 31.8750, norm(output): 0.4395, norm(x): 0.5841, norm(y): 0.9940, norm:0.3956, tok/sec: 186560.72, flops:195.85, batch-reuse:1
@ 4116 train 4.1160 , allloss: 4.1160, dt: 700.52ms, fracRes: 0.1767, norm(attn): 31.8750, norm(output): 0.4395, norm(x): 0.5849, norm(y): 0.9947, norm:0.4207, tok/sec: 187107.79, flops:196.43, batch-reuse:1
@ 4117 train 3.9716 , allloss: 3.9716, dt: 700.84ms, fracRes: 0.1777, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5831, norm(y): 0.9938, norm:0.3987, tok/sec: 187022.50, flops:196.34, batch-reuse:1
@ 4118 train 4.1571 , allloss: 4.1571, dt: 696.57ms, fracRes: 0.1779, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5845, norm(y): 0.9942, norm:0.4138, tok/sec: 188167.63, flops:197.54, batch-reuse:1
@ 4119 train 4.1099 , allloss: 4.1099, dt: 701.40ms, fracRes: 0.1795, norm(attn): 32.0000, norm(output): 0.4414, norm(x): 0.5885, norm(y): 0.9940, norm:0.4334, tok/sec: 186872.53, flops:196.18, batch-reuse:1
@ 4120 train 4.0225 , allloss: 4.0225, dt: 702.41ms, fracRes: 0.1785, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5928, norm(y): 0.9945, norm:0.4141, tok/sec: 186602.64, flops:195.90, batch-reuse:1
@ 4121 train 4.0114 , allloss: 4.0114, dt: 694.40ms, fracRes: 0.1781, norm(attn): 32.0000, norm(output): 0.4453, norm(x): 0.5918, norm(y): 0.9942, norm:0.4247, tok/sec: 188756.00, flops:198.16, batch-reuse:1
@ 4122 train 4.1150 , allloss: 4.1150, dt: 701.76ms, fracRes: 0.1772, norm(attn): 31.8750, norm(output): 0.4473, norm(x): 0.5912, norm(y): 0.9944, norm:0.4202, tok/sec: 186776.66, flops:196.08, batch-reuse:1
@ 4123 train 4.0544 , allloss: 4.0544, dt: 708.38ms, fracRes: 0.1779, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5850, norm(y): 0.9943, norm:0.4096, tok/sec: 185029.52, flops:194.24, batch-reuse:1
@ 4124 train 4.0168 , allloss: 4.0168, dt: 695.86ms, fracRes: 0.1788, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5828, norm(y): 0.9938, norm:0.4051, tok/sec: 188358.85, flops:197.74, batch-reuse:1
@ 4125 train 4.0346 , allloss: 4.0346, dt: 699.02ms, fracRes: 0.1757, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5765, norm(y): 0.9939, norm:0.4174, tok/sec: 187509.02, flops:196.85, batch-reuse:1
@ 4126 train 3.9239 , allloss: 3.9239, dt: 701.45ms, fracRes: 0.1743, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5790, norm(y): 0.9941, norm:0.3773, tok/sec: 186858.43, flops:196.16, batch-reuse:1
@ 4127 train 4.0818 , allloss: 4.0818, dt: 698.52ms, fracRes: 0.1759, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5804, norm(y): 0.9946, norm:0.4191, tok/sec: 187642.14, flops:196.99, batch-reuse:1
@ 4128 train 3.9957 , allloss: 3.9957, dt: 706.77ms, fracRes: 0.1774, norm(attn): 31.8750, norm(output): 0.4297, norm(x): 0.5798, norm(y): 0.9946, norm:0.4087, tok/sec: 185452.27, flops:194.69, batch-reuse:1
@ 4129 train 4.0422 , allloss: 4.0422, dt: 706.23ms, fracRes: 0.1776, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5790, norm(y): 0.9938, norm:0.4359, tok/sec: 185593.20, flops:194.84, batch-reuse:1
@ 4130 train 4.1605 , allloss: 4.1605, dt: 711.95ms, fracRes: 0.1783, norm(attn): 31.7500, norm(output): 0.4414, norm(x): 0.5886, norm(y): 0.9935, norm:0.4042, tok/sec: 184104.03, flops:193.27, batch-reuse:1
@ 4131 train 3.9668 , allloss: 3.9668, dt: 702.32ms, fracRes: 0.1768, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5801, norm(y): 0.9930, norm:0.4614, tok/sec: 186626.20, flops:195.92, batch-reuse:1
@ 4132 train 4.0134 , allloss: 4.0134, dt: 712.27ms, fracRes: 0.1774, norm(attn): 31.8750, norm(output): 0.4395, norm(x): 0.5853, norm(y): 0.9937, norm:0.4096, tok/sec: 184021.02, flops:193.19, batch-reuse:1
@ 4133 train 4.0205 , allloss: 4.0205, dt: 717.08ms, fracRes: 0.1778, norm(attn): 31.8750, norm(output): 0.4434, norm(x): 0.5886, norm(y): 0.9941, norm:0.4313, tok/sec: 182785.71, flops:191.89, batch-reuse:1
@ 4134 train 4.1457 , allloss: 4.1457, dt: 717.55ms, fracRes: 0.1780, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5830, norm(y): 0.9939, norm:0.4162, tok/sec: 182666.61, flops:191.76, batch-reuse:1
@ 4135 train 4.0490 , allloss: 4.0490, dt: 712.64ms, fracRes: 0.1785, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5843, norm(y): 0.9938, norm:0.3983, tok/sec: 183924.55, flops:193.08, batch-reuse:1
@ 4136 train 4.0720 , allloss: 4.0720, dt: 716.61ms, fracRes: 0.1789, norm(attn): 31.8750, norm(output): 0.4395, norm(x): 0.5856, norm(y): 0.9935, norm:0.4113, tok/sec: 182905.82, flops:192.01, batch-reuse:1
@ 4137 train 4.0516 , allloss: 4.0516, dt: 696.17ms, fracRes: 0.1774, norm(attn): 31.8750, norm(output): 0.4316, norm(x): 0.5770, norm(y): 0.9933, norm:0.3854, tok/sec: 188276.86, flops:197.65, batch-reuse:1
@ 4138 train 4.1100 , allloss: 4.1100, dt: 707.73ms, fracRes: 0.1784, norm(attn): 31.8750, norm(output): 0.4453, norm(x): 0.5898, norm(y): 0.9937, norm:0.3865, tok/sec: 185199.31, flops:194.42, batch-reuse:1
@ 4139 train 4.0432 , allloss: 4.0432, dt: 705.08ms, fracRes: 0.1763, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5830, norm(y): 0.9935, norm:0.4114, tok/sec: 185896.00, flops:195.15, batch-reuse:1
@ 4140 train 4.2359 , allloss: 4.2359, dt: 691.35ms, fracRes: 0.1766, norm(attn): 31.8750, norm(output): 0.4395, norm(x): 0.5854, norm(y): 0.9940, norm:0.4528, tok/sec: 189588.82, flops:199.03, batch-reuse:1
@ 4141 train 4.0416 , allloss: 4.0416, dt: 705.62ms, fracRes: 0.1776, norm(attn): 31.7500, norm(output): 0.4355, norm(x): 0.5820, norm(y): 0.9940, norm:0.4100, tok/sec: 185755.43, flops:195.01, batch-reuse:1
@ 4142 train 4.0023 , allloss: 4.0023, dt: 704.11ms, fracRes: 0.1781, norm(attn): 31.8750, norm(output): 0.4355, norm(x): 0.5831, norm(y): 0.9937, norm:0.3999, tok/sec: 186153.32, flops:195.42, batch-reuse:1
@ 4143 train 4.0503 , allloss: 4.0503, dt: 701.59ms, fracRes: 0.1780, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5841, norm(y): 0.9935, norm:0.3567, tok/sec: 186822.55, flops:196.13, batch-reuse:1
@ 4144 train 4.0611 , allloss: 4.0611, dt: 698.26ms, fracRes: 0.1779, norm(attn): 31.7500, norm(output): 0.4375, norm(x): 0.5827, norm(y): 0.9934, norm:0.4128, tok/sec: 187713.51, flops:197.06, batch-reuse:1
@ 4145 train 3.9779 , allloss: 3.9779, dt: 694.83ms, fracRes: 0.1772, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5778, norm(y): 0.9934, norm:0.3598, tok/sec: 188638.77, flops:198.03, batch-reuse:1
@ 4146 train 4.0151 , allloss: 4.0151, dt: 694.97ms, fracRes: 0.1787, norm(attn): 31.6250, norm(output): 0.4355, norm(x): 0.5832, norm(y): 0.9935, norm:0.3742, tok/sec: 188602.14, flops:197.99, batch-reuse:1
@ 4147 train 4.1851 , allloss: 4.1851, dt: 704.67ms, fracRes: 0.1806, norm(attn): 31.5000, norm(output): 0.4453, norm(x): 0.5938, norm(y): 0.9942, norm:0.6161, tok/sec: 186005.82, flops:195.27, batch-reuse:1
@ 4148 train 4.0341 , allloss: 4.0341, dt: 696.74ms, fracRes: 0.1780, norm(attn): 31.7500, norm(output): 0.4512, norm(x): 0.5984, norm(y): 0.9933, norm:0.5918, tok/sec: 188121.91, flops:197.49, batch-reuse:1
@ 4149 train 4.1091 , allloss: 4.1091, dt: 697.33ms, fracRes: 0.1758, norm(attn): 31.8750, norm(output): 0.4375, norm(x): 0.5821, norm(y): 0.9936, norm:0.4309, tok/sec: 187962.47, flops:197.32, batch-reuse:1
@ 4150 train 4.0072 , allloss: 4.0072, dt: 708.43ms, fracRes: 0.1757, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5733, norm(y): 0.9941, norm:0.4891, tok/sec: 185018.43, flops:194.23, batch-reuse:1
@ 4151 train 4.0148 , allloss: 4.0148, dt: 707.00ms, fracRes: 0.1767, norm(attn): 31.8750, norm(output): 0.4336, norm(x): 0.5772, norm(y): 0.9938, norm:0.4517, tok/sec: 185391.23, flops:194.62, batch-reuse:1
@ 4152 train 3.9623 , allloss: 3.9623, dt: 704.83ms, fracRes: 0.1774, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5850, norm(y): 0.9934, norm:0.4254, tok/sec: 185963.16, flops:195.22, batch-reuse:1
@ 4153 train 3.9946 , allloss: 3.9946, dt: 708.24ms, fracRes: 0.1762, norm(attn): 31.7500, norm(output): 0.4395, norm(x): 0.5843, norm(y): 0.9932, norm:0.5510, tok/sec: 185068.45, flops:194.29, batch-reuse:1
@ 4154 train 4.0338 , allloss: 4.0338, dt: 710.00ms, fracRes: 0.1754, norm(attn): 31.8750, norm(output): 0.4277, norm(x): 0.5744, norm(y): 0.9928, norm:0.4281, tok/sec: 184609.74, flops:193.80, batch-reuse:1
@ 4155 train 4.0422 , allloss: 4.0422, dt: 714.21ms, fracRes: 0.1820, norm(attn): 30.5000, norm(output): 0.4375, norm(x): 0.5855, norm(y): 0.9917, norm:0.5173, tok/sec: 183520.00, flops:192.66, batch-reuse:1
@ 4156 train 4.0256 , allloss: 4.0256, dt: 712.27ms, fracRes: 0.1783, norm(attn): 31.5000, norm(output): 0.4375, norm(x): 0.5836, norm(y): 0.9938, norm:0.4727, tok/sec: 184020.96, flops:193.19, batch-reuse:1
@ 4157 train 4.0234 , allloss: 4.0234, dt: 705.60ms, fracRes: 0.1776, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5845, norm(y): 0.9936, norm:0.4177, tok/sec: 185760.07, flops:195.01, batch-reuse:1
@ 4158 train 3.9514 , allloss: 3.9514, dt: 697.91ms, fracRes: 0.1755, norm(attn): 31.5000, norm(output): 0.4375, norm(x): 0.5821, norm(y): 0.9931, norm:0.4972, tok/sec: 187807.14, flops:197.16, batch-reuse:1
@ 4159 train 4.0626 , allloss: 4.0626, dt: 703.17ms, fracRes: 0.1749, norm(attn): 31.5000, norm(output): 0.4414, norm(x): 0.5846, norm(y): 0.9932, norm:0.4435, tok/sec: 186401.06, flops:195.68, batch-reuse:1
@ 4160 train 4.0518 , allloss: 4.0518, dt: 705.09ms, fracRes: 0.1769, norm(attn): 30.2500, norm(output): 0.4355, norm(x): 0.5802, norm(y): 0.9928, norm:0.4725, tok/sec: 185894.18, flops:195.15, batch-reuse:1
@ 4161 train 4.0098 , allloss: 4.0098, dt: 705.36ms, fracRes: 0.1774, norm(attn): 30.0000, norm(output): 0.4336, norm(x): 0.5761, norm(y): 0.9926, norm:0.3954, tok/sec: 185822.36, flops:195.08, batch-reuse:1
@ 4162 train 4.0025 , allloss: 4.0025, dt: 707.55ms, fracRes: 0.1781, norm(attn): 30.0000, norm(output): 0.4355, norm(x): 0.5801, norm(y): 0.9927, norm:0.3988, tok/sec: 185246.92, flops:194.47, batch-reuse:1
@ 4163 train 3.9594 , allloss: 3.9594, dt: 704.34ms, fracRes: 0.1763, norm(attn): 30.0000, norm(output): 0.4336, norm(x): 0.5774, norm(y): 0.9927, norm:0.3656, tok/sec: 186093.02, flops:195.36, batch-reuse:1
@ 4164 train 4.0631 , allloss: 4.0631, dt: 705.78ms, fracRes: 0.1762, norm(attn): 30.0000, norm(output): 0.4375, norm(x): 0.5824, norm(y): 0.9930, norm:0.4125, tok/sec: 185711.50, flops:194.96, batch-reuse:1
@ 4165 train 4.0608 , allloss: 4.0608, dt: 705.28ms, fracRes: 0.1765, norm(attn): 30.1250, norm(output): 0.4355, norm(x): 0.5794, norm(y): 0.9931, norm:0.3845, tok/sec: 185844.22, flops:195.10, batch-reuse:1
@ 4166 train 4.0399 , allloss: 4.0399, dt: 706.82ms, fracRes: 0.1777, norm(attn): 30.2500, norm(output): 0.4355, norm(x): 0.5791, norm(y): 0.9931, norm:0.4511, tok/sec: 185438.07, flops:194.67, batch-reuse:1
@ 4167 train 3.9874 , allloss: 3.9874, dt: 694.98ms, fracRes: 0.1777, norm(attn): 30.1250, norm(output): 0.4355, norm(x): 0.5810, norm(y): 0.9928, norm:0.4396, tok/sec: 188597.61, flops:197.99, batch-reuse:1
@ 4168 train 3.9705 , allloss: 3.9705, dt: 706.26ms, fracRes: 0.1771, norm(attn): 30.0000, norm(output): 0.4355, norm(x): 0.5828, norm(y): 0.9927, norm:0.4085, tok/sec: 185584.86, flops:194.83, batch-reuse:1
@ 4169 train 4.0315 , allloss: 4.0315, dt: 693.73ms, fracRes: 0.1765, norm(attn): 30.1250, norm(output): 0.4277, norm(x): 0.5767, norm(y): 0.9928, norm:0.4333, tok/sec: 188939.20, flops:198.35, batch-reuse:1
@ 4170 train 3.9869 , allloss: 3.9869, dt: 693.16ms, fracRes: 0.1767, norm(attn): 30.1250, norm(output): 0.4297, norm(x): 0.5796, norm(y): 0.9933, norm:0.4082, tok/sec: 189092.89, flops:198.51, batch-reuse:1
@ 4171 train 3.9449 , allloss: 3.9449, dt: 703.37ms, fracRes: 0.1763, norm(attn): 30.0000, norm(output): 0.4355, norm(x): 0.5799, norm(y): 0.9931, norm:0.4298, tok/sec: 186348.68, flops:195.63, batch-reuse:1
@ 4172 train 3.9720 , allloss: 3.9720, dt: 711.64ms, fracRes: 0.1764, norm(attn): 30.1250, norm(output): 0.4336, norm(x): 0.5785, norm(y): 0.9929, norm:0.4304, tok/sec: 184182.43, flops:193.36, batch-reuse:1
@ 4173 train 3.9328 , allloss: 3.9328, dt: 713.00ms, fracRes: 0.1776, norm(attn): 30.3750, norm(output): 0.4375, norm(x): 0.5845, norm(y): 0.9929, norm:0.3918, tok/sec: 183831.50, flops:192.99, batch-reuse:1
@ 4174 train 3.9763 , allloss: 3.9763, dt: 706.98ms, fracRes: 0.1778, norm(attn): 30.7500, norm(output): 0.4336, norm(x): 0.5788, norm(y): 0.9930, norm:0.4552, tok/sec: 185397.48, flops:194.63, batch-reuse:1
@ 4175 train 3.9243 , allloss: 3.9243, dt: 714.93ms, fracRes: 0.1780, norm(attn): 30.8750, norm(output): 0.4375, norm(x): 0.5814, norm(y): 0.9934, norm:0.3902, tok/sec: 183336.09, flops:192.47, batch-reuse:1
@ 4176 train 3.9702 , allloss: 3.9702, dt: 714.96ms, fracRes: 0.1792, norm(attn): 30.5000, norm(output): 0.5195, norm(x): 0.6701, norm(y): 0.9932, norm:0.5104, tok/sec: 183329.00, flops:192.46, batch-reuse:1
@ 4177 train 3.8939 , allloss: 3.8939, dt: 705.49ms, fracRes: 0.1806, norm(attn): 30.3750, norm(output): 0.4492, norm(x): 0.6020, norm(y): 0.9939, norm:0.5273, tok/sec: 185788.45, flops:195.04, batch-reuse:1
@ 4178 train 4.0118 , allloss: 4.0118, dt: 716.37ms, fracRes: 0.1791, norm(attn): 30.3750, norm(output): 0.4414, norm(x): 0.5893, norm(y): 0.9938, norm:0.4799, tok/sec: 182968.09, flops:192.08, batch-reuse:1
@ 4179 train 4.0074 , allloss: 4.0074, dt: 705.29ms, fracRes: 0.1779, norm(attn): 30.2500, norm(output): 0.4277, norm(x): 0.5754, norm(y): 0.9935, norm:0.4420, tok/sec: 185841.52, flops:195.10, batch-reuse:1
@ 4180 train 3.9370 , allloss: 3.9370, dt: 714.16ms, fracRes: 0.1782, norm(attn): 30.0000, norm(output): 0.4297, norm(x): 0.5768, norm(y): 0.9928, norm:0.4070, tok/sec: 183532.99, flops:192.67, batch-reuse:1
@ 4181 train 3.9728 , allloss: 3.9728, dt: 713.55ms, fracRes: 0.1783, norm(attn): 30.0000, norm(output): 0.4375, norm(x): 0.5836, norm(y): 0.9929, norm:0.4540, tok/sec: 183689.61, flops:192.84, batch-reuse:1
@ 4182 train 3.9330 , allloss: 3.9330, dt: 687.58ms, fracRes: 0.1778, norm(attn): 29.8750, norm(output): 0.4336, norm(x): 0.5807, norm(y): 0.9923, norm:0.4109, tok/sec: 190629.16, flops:200.12, batch-reuse:1
@ 4183 train 3.9258 , allloss: 3.9258, dt: 705.51ms, fracRes: 0.1764, norm(attn): 29.8750, norm(output): 0.4355, norm(x): 0.5853, norm(y): 0.9924, norm:0.4697, tok/sec: 185782.86, flops:195.04, batch-reuse:1
@ 4184 train 4.0326 , allloss: 4.0326, dt: 708.16ms, fracRes: 0.1767, norm(attn): 29.5000, norm(output): 0.5039, norm(x): 0.6483, norm(y): 0.9909, norm:99.5308, tok/sec: 185088.76, flops:194.31, batch-reuse:1
@ 4185 train 4.0354 , allloss: 4.0354, dt: 710.52ms, fracRes: 0.1762, norm(attn): 30.0000, norm(output): 0.4336, norm(x): 0.5775, norm(y): 0.9926, norm:0.6823, tok/sec: 184473.34, flops:193.66, batch-reuse:1
@ 4186 train 4.0734 , allloss: 4.0734, dt: 695.82ms, fracRes: 0.1770, norm(attn): 30.6250, norm(output): 0.4434, norm(x): 0.5882, norm(y): 0.9935, norm:0.4551, tok/sec: 188371.89, flops:197.75, batch-reuse:1
@ 4187 train 4.0054 , allloss: 4.0054, dt: 698.91ms, fracRes: 0.1764, norm(attn): 31.6250, norm(output): 0.4375, norm(x): 0.5787, norm(y): 0.9943, norm:0.5376, tok/sec: 187536.71, flops:196.88, batch-reuse:1
@ 4188 train 3.9926 , allloss: 3.9926, dt: 691.20ms, fracRes: 0.1790, norm(attn): 31.7500, norm(output): 0.4355, norm(x): 0.5854, norm(y): 0.9956, norm:0.4821, tok/sec: 189628.32, flops:199.07, batch-reuse:1
@ 4189 train 3.9343 , allloss: 3.9343, dt: 700.76ms, fracRes: 0.1786, norm(attn): 31.8750, norm(output): 0.4414, norm(x): 0.5918, norm(y): 0.9947, norm:0.5308, tok/sec: 187042.86, flops:196.36, batch-reuse:1
@ 4190 train 3.9008 , allloss: 3.9008, dt: 706.14ms, fracRes: 0.1779, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5884, norm(y): 0.9944, norm:0.4487, tok/sec: 185617.95, flops:194.86, batch-reuse:1
@ 4191 train 3.9281 , allloss: 3.9281, dt: 705.26ms, fracRes: 0.1764, norm(attn): 32.0000, norm(output): 0.4375, norm(x): 0.5794, norm(y): 0.9947, norm:0.4761, tok/sec: 185848.93, flops:195.10, batch-reuse:1
@ 4192 train 3.9553 , allloss: 3.9553, dt: 697.50ms, fracRes: 0.1759, norm(attn): 32.0000, norm(output): 0.4336, norm(x): 0.5772, norm(y): 0.9953, norm:0.4854, tok/sec: 187916.72, flops:197.28, batch-reuse:1
@ 4193 train 3.9329 , allloss: 3.9329, dt: 692.29ms, fracRes: 0.1768, norm(attn): 32.0000, norm(output): 0.4355, norm(x): 0.5820, norm(y): 0.9954, norm:0.4748, tok/sec: 189330.06, flops:198.76, batch-reuse:1
@ 4194 train 3.8462 , allloss: 3.8462, dt: 699.70ms, fracRes: 0.1771, norm(attn): 32.0000, norm(output): 0.4434, norm(x): 0.5894, norm(y): 0.9955, norm:0.5391, tok/sec: 187326.60, flops:196.66, batch-reuse:1
@ 4195 train 3.8857 , allloss: 3.8857, dt: 706.47ms, fracRes: 0.1776, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5872, norm(y): 0.9946, norm:0.4244, tok/sec: 185531.31, flops:194.77, batch-reuse:1
@ 4196 train 4.0476 , allloss: 4.0476, dt: 712.43ms, fracRes: 0.1784, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5837, norm(y): 0.9950, norm:0.5446, tok/sec: 183979.58, flops:193.14, batch-reuse:1
@ 4197 train 3.9295 , allloss: 3.9295, dt: 708.00ms, fracRes: 0.1780, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5848, norm(y): 0.9955, norm:0.3855, tok/sec: 185130.64, flops:194.35, batch-reuse:1
@ 4198 train 3.9999 , allloss: 3.9999, dt: 709.14ms, fracRes: 0.1779, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5875, norm(y): 0.9959, norm:0.4520, tok/sec: 184831.57, flops:194.04, batch-reuse:1
@ 4199 train 4.0384 , allloss: 4.0384, dt: 708.96ms, fracRes: 0.1776, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5887, norm(y): 0.9954, norm:0.4260, tok/sec: 184878.75, flops:194.09, batch-reuse:1
@ 4200 train 4.0834 , allloss: 4.0834, dt: 704.44ms, fracRes: 0.1782, norm(attn): 32.2500, norm(output): 0.4434, norm(x): 0.5883, norm(y): 0.9955, norm:0.4445, tok/sec: 186065.31, flops:195.33, batch-reuse:1
@ 4201 train 3.9642 , allloss: 3.9642, dt: 716.38ms, fracRes: 0.1782, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5829, norm(y): 0.9954, norm:0.3857, tok/sec: 182964.81, flops:192.08, batch-reuse:1
@ 4202 train 3.9509 , allloss: 3.9509, dt: 706.48ms, fracRes: 0.1773, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5859, norm(y): 0.9958, norm:0.4173, tok/sec: 185528.87, flops:194.77, batch-reuse:1
@ 4203 train 3.8370 , allloss: 3.8370, dt: 719.92ms, fracRes: 0.1788, norm(attn): 32.2500, norm(output): 0.4551, norm(x): 0.6023, norm(y): 0.9958, norm:0.6239, tok/sec: 182063.55, flops:191.13, batch-reuse:1
@ 4204 train 4.0008 , allloss: 4.0008, dt: 711.89ms, fracRes: 0.1781, norm(attn): 32.2500, norm(output): 0.4473, norm(x): 0.5922, norm(y): 0.9956, norm:0.4219, tok/sec: 184118.34, flops:193.29, batch-reuse:1
@ 4205 train 3.8924 , allloss: 3.8924, dt: 715.83ms, fracRes: 0.1783, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5874, norm(y): 0.9950, norm:0.3543, tok/sec: 183105.88, flops:192.22, batch-reuse:1
@ 4206 train 3.9961 , allloss: 3.9961, dt: 705.12ms, fracRes: 0.1776, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5834, norm(y): 0.9952, norm:0.4118, tok/sec: 185886.00, flops:195.14, batch-reuse:1
@ 4207 train 4.0381 , allloss: 4.0381, dt: 705.14ms, fracRes: 0.1788, norm(attn): 32.0000, norm(output): 0.4492, norm(x): 0.5964, norm(y): 0.9957, norm:0.3744, tok/sec: 185880.29, flops:195.14, batch-reuse:1
@ 4208 train 3.9241 , allloss: 3.9241, dt: 707.16ms, fracRes: 0.1785, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5913, norm(y): 0.9954, norm:0.4071, tok/sec: 185350.98, flops:194.58, batch-reuse:1
@ 4209 train 4.0318 , allloss: 4.0318, dt: 707.75ms, fracRes: 0.1769, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5856, norm(y): 0.9954, norm:0.3589, tok/sec: 185195.57, flops:194.42, batch-reuse:1
@ 4210 train 4.1063 , allloss: 4.1063, dt: 703.53ms, fracRes: 0.1787, norm(attn): 32.5000, norm(output): 0.4512, norm(x): 0.5964, norm(y): 0.9955, norm:0.4256, tok/sec: 186306.62, flops:195.59, batch-reuse:1
@ 4211 train 3.8752 , allloss: 3.8752, dt: 707.51ms, fracRes: 0.1785, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5863, norm(y): 0.9949, norm:0.4798, tok/sec: 185259.16, flops:194.49, batch-reuse:1
@ 4212 train 3.9173 , allloss: 3.9173, dt: 703.40ms, fracRes: 0.1773, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5819, norm(y): 0.9951, norm:0.3921, tok/sec: 186340.41, flops:195.62, batch-reuse:1
@ 4213 train 3.8023 , allloss: 3.8023, dt: 703.33ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5838, norm(y): 0.9947, norm:0.4070, tok/sec: 186359.86, flops:195.64, batch-reuse:1
@ 4214 train 3.8703 , allloss: 3.8703, dt: 712.82ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5860, norm(y): 0.9952, norm:0.3857, tok/sec: 183879.33, flops:193.04, batch-reuse:1
@ 4215 train 3.8641 , allloss: 3.8641, dt: 704.28ms, fracRes: 0.1791, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5884, norm(y): 0.9953, norm:0.4366, tok/sec: 186108.27, flops:195.38, batch-reuse:1
@ 4216 train 3.8423 , allloss: 3.8423, dt: 713.83ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5804, norm(y): 0.9951, norm:0.4020, tok/sec: 183618.87, flops:192.76, batch-reuse:1
@ 4217 train 3.8832 , allloss: 3.8832, dt: 716.53ms, fracRes: 0.1777, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5792, norm(y): 0.9951, norm:0.3836, tok/sec: 182927.30, flops:192.04, batch-reuse:1
@ 4218 train 3.8291 , allloss: 3.8291, dt: 711.55ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5858, norm(y): 0.9948, norm:0.4183, tok/sec: 184207.17, flops:193.38, batch-reuse:1
@ 4219 train 3.8933 , allloss: 3.8933, dt: 719.19ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5884, norm(y): 0.9949, norm:0.3780, tok/sec: 182248.96, flops:191.33, batch-reuse:1
@ 4220 train 3.8209 , allloss: 3.8209, dt: 707.48ms, fracRes: 0.1770, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5859, norm(y): 0.9950, norm:0.4750, tok/sec: 185267.15, flops:194.49, batch-reuse:1
@ 4221 train 3.9788 , allloss: 3.9788, dt: 694.34ms, fracRes: 0.1788, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5903, norm(y): 0.9953, norm:0.3636, tok/sec: 188773.11, flops:198.17, batch-reuse:1
@ 4222 train 3.8015 , allloss: 3.8015, dt: 703.18ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5864, norm(y): 0.9949, norm:0.3655, tok/sec: 186398.91, flops:195.68, batch-reuse:1
@ 4223 train 3.9621 , allloss: 3.9621, dt: 705.78ms, fracRes: 0.1769, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5903, norm(y): 0.9955, norm:0.6041, tok/sec: 185713.45, flops:194.96, batch-reuse:1
@ 4224 train 3.7809 , allloss: 3.7809, dt: 710.34ms, fracRes: 0.1768, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5825, norm(y): 0.9947, norm:0.4046, tok/sec: 184521.20, flops:193.71, batch-reuse:1
@ 4225 train 3.9190 , allloss: 3.9190, dt: 703.81ms, fracRes: 0.1764, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5788, norm(y): 0.9945, norm:0.4039, tok/sec: 186230.89, flops:195.51, batch-reuse:1
@ 4226 train 3.9386 , allloss: 3.9386, dt: 706.96ms, fracRes: 0.1757, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5837, norm(y): 0.9953, norm:0.4401, tok/sec: 185402.42, flops:194.64, batch-reuse:1
@ 4227 train 3.8886 , allloss: 3.8886, dt: 705.24ms, fracRes: 0.1756, norm(attn): 32.7500, norm(output): 0.4375, norm(x): 0.5806, norm(y): 0.9957, norm:0.3986, tok/sec: 185855.34, flops:195.11, batch-reuse:1
@ 4228 train 4.0927 , allloss: 4.0927, dt: 704.01ms, fracRes: 0.1774, norm(attn): 32.5000, norm(output): 0.4492, norm(x): 0.5927, norm(y): 0.9957, norm:0.5087, tok/sec: 186179.36, flops:195.45, batch-reuse:1
@ 4229 train 3.9491 , allloss: 3.9491, dt: 701.77ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4609, norm(x): 0.6078, norm(y): 0.9960, norm:0.4896, tok/sec: 186772.79, flops:196.07, batch-reuse:1
@ 4230 train 3.8748 , allloss: 3.8748, dt: 709.29ms, fracRes: 0.1771, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5866, norm(y): 0.9951, norm:0.4161, tok/sec: 184794.11, flops:194.00, batch-reuse:1
@ 4231 train 3.8403 , allloss: 3.8403, dt: 693.78ms, fracRes: 0.1783, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5913, norm(y): 0.9949, norm:0.4279, tok/sec: 188924.26, flops:198.33, batch-reuse:1
@ 4232 train 3.9113 , allloss: 3.9113, dt: 705.33ms, fracRes: 0.1789, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5873, norm(y): 0.9945, norm:0.4366, tok/sec: 185830.27, flops:195.08, batch-reuse:1
@ 4233 train 3.8744 , allloss: 3.8744, dt: 694.78ms, fracRes: 0.1811, norm(attn): 32.5000, norm(output): 0.4473, norm(x): 0.5957, norm(y): 0.9948, norm:0.4168, tok/sec: 188651.78, flops:198.05, batch-reuse:1
@ 4234 train 3.8843 , allloss: 3.8843, dt: 701.45ms, fracRes: 0.1807, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5900, norm(y): 0.9948, norm:0.4080, tok/sec: 186857.41, flops:196.16, batch-reuse:1
@ 4235 train 3.8926 , allloss: 3.8926, dt: 699.69ms, fracRes: 0.1798, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5865, norm(y): 0.9951, norm:0.4019, tok/sec: 187329.80, flops:196.66, batch-reuse:1
@ 4236 train 3.9892 , allloss: 3.9892, dt: 711.47ms, fracRes: 0.1817, norm(attn): 32.5000, norm(output): 0.4531, norm(x): 0.5998, norm(y): 0.9947, norm:0.5703, tok/sec: 184226.80, flops:193.40, batch-reuse:1
@ 4237 train 3.8566 , allloss: 3.8566, dt: 734.54ms, fracRes: 0.1799, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5921, norm(y): 0.9951, norm:0.5004, tok/sec: 178440.35, flops:187.33, batch-reuse:1
@ 4238 train 3.8906 , allloss: 3.8906, dt: 708.00ms, fracRes: 0.1806, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5926, norm(y): 0.9953, norm:0.4652, tok/sec: 185129.46, flops:194.35, batch-reuse:1
@ 4239 train 3.8522 , allloss: 3.8522, dt: 699.80ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5813, norm(y): 0.9940, norm:0.4328, tok/sec: 187298.39, flops:196.63, batch-reuse:1
@ 4240 train 3.8919 , allloss: 3.8919, dt: 702.79ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5885, norm(y): 0.9944, norm:0.4379, tok/sec: 186502.74, flops:195.79, batch-reuse:1
@ 4241 train 3.8914 , allloss: 3.8914, dt: 716.59ms, fracRes: 0.1784, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5878, norm(y): 0.9945, norm:0.3790, tok/sec: 182911.78, flops:192.02, batch-reuse:1
@ 4242 train 4.0346 , allloss: 4.0346, dt: 694.79ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5917, norm(y): 0.9958, norm:0.4399, tok/sec: 188650.16, flops:198.05, batch-reuse:1
@ 4243 train 3.8394 , allloss: 3.8394, dt: 710.52ms, fracRes: 0.1792, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5850, norm(y): 0.9952, norm:0.3866, tok/sec: 184473.77, flops:193.66, batch-reuse:1
@ 4244 train 3.7023 , allloss: 3.7023, dt: 697.52ms, fracRes: 0.1783, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5846, norm(y): 0.9944, norm:0.3998, tok/sec: 187912.74, flops:197.27, batch-reuse:1
@ 4245 train 3.8410 , allloss: 3.8410, dt: 707.57ms, fracRes: 0.1773, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5812, norm(y): 0.9942, norm:0.4195, tok/sec: 185243.62, flops:194.47, batch-reuse:1
@ 4246 train 4.1702 , allloss: 4.1702, dt: 706.15ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5911, norm(y): 0.9950, norm:0.6026, tok/sec: 185613.69, flops:194.86, batch-reuse:1
@ 4247 train 3.9330 , allloss: 3.9330, dt: 701.52ms, fracRes: 0.1818, norm(attn): 32.5000, norm(output): 0.4531, norm(x): 0.6050, norm(y): 0.9965, norm:0.5772, tok/sec: 186839.76, flops:196.14, batch-reuse:1
@ 4248 train 3.9400 , allloss: 3.9400, dt: 702.83ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5894, norm(y): 0.9953, norm:0.4367, tok/sec: 186492.56, flops:195.78, batch-reuse:1
@ 4249 train 3.9299 , allloss: 3.9299, dt: 701.86ms, fracRes: 0.1783, norm(attn): 32.7500, norm(output): 0.4414, norm(x): 0.5850, norm(y): 0.9946, norm:0.4787, tok/sec: 186749.44, flops:196.05, batch-reuse:1
@ 4250 train 3.8117 , allloss: 3.8117, dt: 705.12ms, fracRes: 0.1768, norm(attn): 33.0000, norm(output): 0.4414, norm(x): 0.5850, norm(y): 0.9945, norm:0.4199, tok/sec: 185886.70, flops:195.14, batch-reuse:1
@ 4251 train 3.9111 , allloss: 3.9111, dt: 696.46ms, fracRes: 0.1781, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5896, norm(y): 0.9951, norm:0.4085, tok/sec: 188198.16, flops:197.57, batch-reuse:1
@ 4252 train 3.7569 , allloss: 3.7569, dt: 700.54ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5814, norm(y): 0.9951, norm:0.4238, tok/sec: 187102.63, flops:196.42, batch-reuse:1
@ 4253 train 3.8379 , allloss: 3.8379, dt: 698.08ms, fracRes: 0.1782, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5772, norm(y): 0.9947, norm:0.3879, tok/sec: 187759.61, flops:197.11, batch-reuse:1
@ 4254 train 3.8977 , allloss: 3.8977, dt: 695.42ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4766, norm(x): 0.6188, norm(y): 0.9944, norm:0.4462, tok/sec: 188479.67, flops:197.87, batch-reuse:1
@ 4255 train 3.8613 , allloss: 3.8613, dt: 711.81ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5816, norm(y): 0.9944, norm:0.4322, tok/sec: 184139.12, flops:193.31, batch-reuse:1
@ 4256 train 3.7615 , allloss: 3.7615, dt: 713.46ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5845, norm(y): 0.9945, norm:0.4970, tok/sec: 183713.43, flops:192.86, batch-reuse:1
@ 4257 train 3.7805 , allloss: 3.7805, dt: 703.37ms, fracRes: 0.1801, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5800, norm(y): 0.9943, norm:0.4284, tok/sec: 186348.93, flops:195.63, batch-reuse:1
@ 4258 train 3.9752 , allloss: 3.9752, dt: 690.75ms, fracRes: 0.1805, norm(attn): 32.7500, norm(output): 0.4336, norm(x): 0.5821, norm(y): 0.9948, norm:0.4596, tok/sec: 189754.44, flops:199.20, batch-reuse:1
@ 4259 train 3.9220 , allloss: 3.9220, dt: 708.98ms, fracRes: 0.1802, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5855, norm(y): 0.9948, norm:0.4355, tok/sec: 184874.77, flops:194.08, batch-reuse:1
@ 4260 train 4.0140 , allloss: 4.0140, dt: 717.08ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5812, norm(y): 0.9952, norm:0.4528, tok/sec: 182785.89, flops:191.89, batch-reuse:1
@ 4261 train 4.1478 , allloss: 4.1478, dt: 714.18ms, fracRes: 0.1798, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5858, norm(y): 0.9958, norm:0.4194, tok/sec: 183528.88, flops:192.67, batch-reuse:1
@ 4262 train 4.0212 , allloss: 4.0212, dt: 706.21ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5908, norm(y): 0.9959, norm:0.4652, tok/sec: 185598.33, flops:194.84, batch-reuse:1
@ 4263 train 4.0744 , allloss: 4.0744, dt: 717.14ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5847, norm(y): 0.9959, norm:0.4830, tok/sec: 182770.03, flops:191.87, batch-reuse:1
@ 4264 train 4.2262 , allloss: 4.2262, dt: 715.34ms, fracRes: 0.1811, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5964, norm(y): 0.9962, norm:0.6146, tok/sec: 183229.95, flops:192.36, batch-reuse:1
@ 4265 train 4.1579 , allloss: 4.1579, dt: 719.93ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5910, norm(y): 0.9954, norm:0.6731, tok/sec: 182062.70, flops:191.13, batch-reuse:1
@ 4266 train 4.0233 , allloss: 4.0233, dt: 722.14ms, fracRes: 0.1811, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5889, norm(y): 0.9952, norm:0.4932, tok/sec: 181505.43, flops:190.54, batch-reuse:1
@ 4267 train 4.0939 , allloss: 4.0939, dt: 714.22ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5897, norm(y): 0.9954, norm:0.5364, tok/sec: 183517.86, flops:192.66, batch-reuse:1
@ 4268 train 4.1100 , allloss: 4.1100, dt: 716.17ms, fracRes: 0.1797, norm(attn): 32.7500, norm(output): 0.4336, norm(x): 0.5838, norm(y): 0.9951, norm:0.4743, tok/sec: 183017.98, flops:192.13, batch-reuse:1
@ 4269 train 4.1248 , allloss: 4.1248, dt: 708.46ms, fracRes: 0.1798, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5840, norm(y): 0.9955, norm:0.5319, tok/sec: 185009.28, flops:194.22, batch-reuse:1
@ 4270 train 4.2890 , allloss: 4.2890, dt: 718.18ms, fracRes: 0.1849, norm(attn): 32.5000, norm(output): 0.4512, norm(x): 0.6055, norm(y): 0.9957, norm:0.9169, tok/sec: 182505.91, flops:191.60, batch-reuse:1
@ 4271 train 3.9656 , allloss: 3.9656, dt: 719.58ms, fracRes: 0.1812, norm(attn): 32.7500, norm(output): 0.4414, norm(x): 0.5918, norm(y): 0.9951, norm:0.6350, tok/sec: 182151.56, flops:191.22, batch-reuse:1
@ 4272 train 4.1069 , allloss: 4.1069, dt: 720.69ms, fracRes: 0.1819, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5892, norm(y): 0.9951, norm:0.6046, tok/sec: 181869.31, flops:190.93, batch-reuse:1
@ 4273 train 4.1087 , allloss: 4.1087, dt: 707.81ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5795, norm(y): 0.9950, norm:0.5305, tok/sec: 185180.41, flops:194.40, batch-reuse:1
@ 4274 train 4.0772 , allloss: 4.0772, dt: 702.45ms, fracRes: 0.1787, norm(attn): 33.0000, norm(output): 0.4277, norm(x): 0.5768, norm(y): 0.9947, norm:0.5570, tok/sec: 186593.26, flops:195.89, batch-reuse:1
@ 4275 train 3.9847 , allloss: 3.9847, dt: 717.45ms, fracRes: 0.1773, norm(attn): 33.0000, norm(output): 0.4355, norm(x): 0.5795, norm(y): 0.9946, norm:0.4730, tok/sec: 182691.14, flops:191.79, batch-reuse:1
@ 4276 train 4.0021 , allloss: 4.0021, dt: 721.18ms, fracRes: 0.1770, norm(attn): 32.7500, norm(output): 0.4414, norm(x): 0.5853, norm(y): 0.9950, norm:0.4814, tok/sec: 181746.83, flops:190.80, batch-reuse:1
@ 4277 train 4.0781 , allloss: 4.0781, dt: 720.36ms, fracRes: 0.1784, norm(attn): 32.7500, norm(output): 0.4375, norm(x): 0.5847, norm(y): 0.9953, norm:0.4474, tok/sec: 181952.37, flops:191.01, batch-reuse:1
@ 4278 train 4.0453 , allloss: 4.0453, dt: 722.97ms, fracRes: 0.1796, norm(attn): 32.7500, norm(output): 0.4375, norm(x): 0.5839, norm(y): 0.9959, norm:0.4592, tok/sec: 181295.58, flops:190.32, batch-reuse:1
@ 4279 train 4.0610 , allloss: 4.0610, dt: 714.29ms, fracRes: 0.1806, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5839, norm(y): 0.9956, norm:0.4700, tok/sec: 183498.50, flops:192.64, batch-reuse:1
@ 4280 train 3.9208 , allloss: 3.9208, dt: 703.43ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5878, norm(y): 0.9954, norm:0.4379, tok/sec: 186331.82, flops:195.61, batch-reuse:1
@ 4281 train 4.0254 , allloss: 4.0254, dt: 704.87ms, fracRes: 0.1806, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5890, norm(y): 0.9951, norm:0.4468, tok/sec: 185952.65, flops:195.21, batch-reuse:1
@ 4282 train 4.0545 , allloss: 4.0545, dt: 708.48ms, fracRes: 0.1799, norm(attn): 33.2500, norm(output): 0.4336, norm(x): 0.5766, norm(y): 0.9946, norm:0.4729, tok/sec: 185003.68, flops:194.22, batch-reuse:1
@ 4283 train 4.1624 , allloss: 4.1624, dt: 695.96ms, fracRes: 0.1806, norm(attn): 32.7500, norm(output): 0.4316, norm(x): 0.5790, norm(y): 0.9948, norm:0.5095, tok/sec: 188333.17, flops:197.71, batch-reuse:1
@ 4284 train 4.0603 , allloss: 4.0603, dt: 698.01ms, fracRes: 0.1811, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5938, norm(y): 0.9957, norm:0.4349, tok/sec: 187780.07, flops:197.13, batch-reuse:1
@ 4285 train 3.9589 , allloss: 3.9589, dt: 696.92ms, fracRes: 0.1796, norm(attn): 32.7500, norm(output): 0.4395, norm(x): 0.5895, norm(y): 0.9948, norm:0.4571, tok/sec: 188073.45, flops:197.44, batch-reuse:1
@ 4286 train 4.0750 , allloss: 4.0750, dt: 707.96ms, fracRes: 0.1791, norm(attn): 33.0000, norm(output): 0.4355, norm(x): 0.5813, norm(y): 0.9948, norm:0.4135, tok/sec: 185140.81, flops:194.36, batch-reuse:1
@ 4287 train 4.0040 , allloss: 4.0040, dt: 698.95ms, fracRes: 0.1786, norm(attn): 33.0000, norm(output): 0.4355, norm(x): 0.5809, norm(y): 0.9947, norm:0.4097, tok/sec: 187527.05, flops:196.87, batch-reuse:1
@ 4288 train 3.9908 , allloss: 3.9908, dt: 708.78ms, fracRes: 0.1783, norm(attn): 33.0000, norm(output): 0.4375, norm(x): 0.5808, norm(y): 0.9946, norm:0.4043, tok/sec: 184926.07, flops:194.14, batch-reuse:1
@ 4289 train 4.1001 , allloss: 4.1001, dt: 701.47ms, fracRes: 0.1811, norm(attn): 32.7500, norm(output): 0.4492, norm(x): 0.5981, norm(y): 0.9954, norm:0.4202, tok/sec: 186852.40, flops:196.16, batch-reuse:1
@ 4290 train 3.9861 , allloss: 3.9861, dt: 691.12ms, fracRes: 0.1802, norm(attn): 33.0000, norm(output): 0.4375, norm(x): 0.5872, norm(y): 0.9949, norm:0.3778, tok/sec: 189652.65, flops:199.10, batch-reuse:1
@ 4291 train 4.0131 , allloss: 4.0131, dt: 701.87ms, fracRes: 0.1807, norm(attn): 33.0000, norm(output): 0.4395, norm(x): 0.5898, norm(y): 0.9943, norm:0.4360, tok/sec: 186746.40, flops:196.05, batch-reuse:1
@ 4292 train 4.1275 , allloss: 4.1275, dt: 704.06ms, fracRes: 0.1785, norm(attn): 32.7500, norm(output): 0.4297, norm(x): 0.5765, norm(y): 0.9947, norm:0.3831, tok/sec: 186165.74, flops:195.44, batch-reuse:1
@ 4293 train 4.0564 , allloss: 4.0564, dt: 721.48ms, fracRes: 0.1802, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5901, norm(y): 0.9954, norm:0.5313, tok/sec: 181670.50, flops:190.72, batch-reuse:1
@ 4294 train 3.9099 , allloss: 3.9099, dt: 707.80ms, fracRes: 0.1803, norm(attn): 32.7500, norm(output): 0.4336, norm(x): 0.5844, norm(y): 0.9951, norm:0.4810, tok/sec: 185181.53, flops:194.40, batch-reuse:1
@ 4295 train 4.1329 , allloss: 4.1329, dt: 699.99ms, fracRes: 0.1805, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5884, norm(y): 0.9953, norm:0.4183, tok/sec: 187248.76, flops:196.57, batch-reuse:1
@ 4296 train 4.0304 , allloss: 4.0304, dt: 709.07ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5879, norm(y): 0.9946, norm:0.4500, tok/sec: 184850.34, flops:194.06, batch-reuse:1
@ 4297 train 4.0602 , allloss: 4.0602, dt: 709.89ms, fracRes: 0.1801, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5871, norm(y): 0.9946, norm:0.4195, tok/sec: 184635.78, flops:193.83, batch-reuse:1
@ 4298 train 4.0638 , allloss: 4.0638, dt: 708.32ms, fracRes: 0.1784, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5781, norm(y): 0.9947, norm:0.3921, tok/sec: 185045.40, flops:194.26, batch-reuse:1
@ 4299 train 4.0706 , allloss: 4.0706, dt: 709.71ms, fracRes: 0.1794, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5828, norm(y): 0.9947, norm:0.3808, tok/sec: 184684.78, flops:193.88, batch-reuse:1
@ 4300 train 4.0177 , allloss: 4.0177, dt: 711.27ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5853, norm(y): 0.9943, norm:0.3927, tok/sec: 184279.79, flops:193.46, batch-reuse:1
@ 4301 train 3.9005 , allloss: 3.9005, dt: 701.93ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5806, norm(y): 0.9933, norm:0.3935, tok/sec: 186730.54, flops:196.03, batch-reuse:1
@ 4302 train 3.9536 , allloss: 3.9536, dt: 705.01ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5742, norm(y): 0.9929, norm:0.3614, tok/sec: 185914.23, flops:195.17, batch-reuse:1
@ 4303 train 4.0604 , allloss: 4.0604, dt: 700.28ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5805, norm(y): 0.9934, norm:0.3795, tok/sec: 187171.31, flops:196.49, batch-reuse:1
@ 4304 train 3.9246 , allloss: 3.9246, dt: 695.26ms, fracRes: 0.1799, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5811, norm(y): 0.9933, norm:0.3605, tok/sec: 188522.85, flops:197.91, batch-reuse:1
@ 4305 train 4.0369 , allloss: 4.0369, dt: 696.02ms, fracRes: 0.1809, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5823, norm(y): 0.9938, norm:0.3939, tok/sec: 188315.55, flops:197.69, batch-reuse:1
@ 4306 train 4.0765 , allloss: 4.0765, dt: 711.18ms, fracRes: 0.1796, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5797, norm(y): 0.9940, norm:0.4131, tok/sec: 184301.35, flops:193.48, batch-reuse:1
@ 4307 train 3.9729 , allloss: 3.9729, dt: 702.02ms, fracRes: 0.1807, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5876, norm(y): 0.9938, norm:0.3710, tok/sec: 186708.22, flops:196.01, batch-reuse:1
@ 4308 train 3.9031 , allloss: 3.9031, dt: 714.80ms, fracRes: 0.1810, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5870, norm(y): 0.9940, norm:0.3758, tok/sec: 183367.95, flops:192.50, batch-reuse:1
@ 4309 train 3.9571 , allloss: 3.9571, dt: 710.83ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5821, norm(y): 0.9936, norm:0.3857, tok/sec: 184392.90, flops:193.58, batch-reuse:1
@ 4310 train 4.0143 , allloss: 4.0143, dt: 693.97ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5777, norm(y): 0.9938, norm:0.3484, tok/sec: 188872.08, flops:198.28, batch-reuse:1
@ 4311 train 4.0969 , allloss: 4.0969, dt: 714.55ms, fracRes: 0.1796, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5898, norm(y): 0.9953, norm:0.4945, tok/sec: 183433.35, flops:192.57, batch-reuse:1
@ 4312 train 3.9941 , allloss: 3.9941, dt: 703.84ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5894, norm(y): 0.9946, norm:0.4519, tok/sec: 186225.40, flops:195.50, batch-reuse:1
@ 4313 train 3.9916 , allloss: 3.9916, dt: 718.12ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5905, norm(y): 0.9944, norm:0.4136, tok/sec: 182522.27, flops:191.61, batch-reuse:1
@ 4314 train 4.0276 , allloss: 4.0276, dt: 716.00ms, fracRes: 0.1765, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5783, norm(y): 0.9941, norm:0.4548, tok/sec: 183060.58, flops:192.18, batch-reuse:1
@ 4315 train 4.0299 , allloss: 4.0299, dt: 700.46ms, fracRes: 0.1768, norm(attn): 32.7500, norm(output): 0.4219, norm(x): 0.5687, norm(y): 0.9943, norm:0.4496, tok/sec: 187122.12, flops:196.44, batch-reuse:1
@ 4316 train 4.0587 , allloss: 4.0587, dt: 710.18ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5869, norm(y): 0.9945, norm:0.4731, tok/sec: 184562.70, flops:193.75, batch-reuse:1
@ 4317 train 4.0472 , allloss: 4.0472, dt: 710.36ms, fracRes: 0.1785, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5830, norm(y): 0.9944, norm:0.3897, tok/sec: 184515.38, flops:193.70, batch-reuse:1
@ 4318 train 4.0199 , allloss: 4.0199, dt: 709.27ms, fracRes: 0.1786, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5810, norm(y): 0.9936, norm:0.5102, tok/sec: 184798.64, flops:194.00, batch-reuse:1
@ 4319 train 4.0565 , allloss: 4.0565, dt: 708.20ms, fracRes: 0.1778, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5753, norm(y): 0.9940, norm:0.3745, tok/sec: 185077.92, flops:194.30, batch-reuse:1
@ 4320 train 4.0138 , allloss: 4.0138, dt: 706.39ms, fracRes: 0.1794, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5816, norm(y): 0.9940, norm:0.4571, tok/sec: 185551.54, flops:194.79, batch-reuse:1
@ 4321 train 3.9974 , allloss: 3.9974, dt: 710.88ms, fracRes: 0.1792, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5820, norm(y): 0.9944, norm:0.3807, tok/sec: 184380.78, flops:193.56, batch-reuse:1
@ 4322 train 4.0368 , allloss: 4.0368, dt: 710.99ms, fracRes: 0.1785, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5804, norm(y): 0.9941, norm:0.4403, tok/sec: 184352.52, flops:193.53, batch-reuse:1
@ 4323 train 4.0588 , allloss: 4.0588, dt: 704.19ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5716, norm(y): 0.9941, norm:0.4101, tok/sec: 186131.01, flops:195.40, batch-reuse:1
@ 4324 train 3.9909 , allloss: 3.9909, dt: 705.49ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5787, norm(y): 0.9940, norm:0.4029, tok/sec: 185789.07, flops:195.04, batch-reuse:1
@ 4325 train 4.1092 , allloss: 4.1092, dt: 693.65ms, fracRes: 0.1776, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5787, norm(y): 0.9944, norm:0.4452, tok/sec: 188960.89, flops:198.37, batch-reuse:1
@ 4326 train 4.0780 , allloss: 4.0780, dt: 707.85ms, fracRes: 0.1776, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5740, norm(y): 0.9942, norm:0.4311, tok/sec: 185169.68, flops:194.39, batch-reuse:1
@ 4327 train 3.9971 , allloss: 3.9971, dt: 709.04ms, fracRes: 0.1783, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5748, norm(y): 0.9938, norm:0.4452, tok/sec: 184859.54, flops:194.07, batch-reuse:1
@ 4328 train 3.9811 , allloss: 3.9811, dt: 711.47ms, fracRes: 0.1789, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5782, norm(y): 0.9940, norm:0.3997, tok/sec: 184227.42, flops:193.40, batch-reuse:1
@ 4329 train 4.0156 , allloss: 4.0156, dt: 708.05ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5728, norm(y): 0.9937, norm:0.4203, tok/sec: 185118.18, flops:194.34, batch-reuse:1
@ 4330 train 4.0126 , allloss: 4.0126, dt: 709.00ms, fracRes: 0.1816, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5876, norm(y): 0.9936, norm:0.4236, tok/sec: 184868.61, flops:194.08, batch-reuse:1
@ 4331 train 4.0385 , allloss: 4.0385, dt: 704.72ms, fracRes: 0.1803, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5792, norm(y): 0.9939, norm:0.3749, tok/sec: 185992.35, flops:195.26, batch-reuse:1
@ 4332 train 3.8890 , allloss: 3.8890, dt: 700.19ms, fracRes: 0.1805, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5768, norm(y): 0.9938, norm:0.4099, tok/sec: 187195.52, flops:196.52, batch-reuse:1
@ 4333 train 4.0474 , allloss: 4.0474, dt: 718.71ms, fracRes: 0.1799, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5731, norm(y): 0.9938, norm:0.3874, tok/sec: 182370.90, flops:191.45, batch-reuse:1
@ 4334 train 3.9752 , allloss: 3.9752, dt: 709.82ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5798, norm(y): 0.9933, norm:0.3991, tok/sec: 184655.50, flops:193.85, batch-reuse:1
@ 4335 train 4.0001 , allloss: 4.0001, dt: 698.49ms, fracRes: 0.1783, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5799, norm(y): 0.9939, norm:0.3932, tok/sec: 187649.38, flops:196.99, batch-reuse:1
@ 4336 train 4.0037 , allloss: 4.0037, dt: 699.27ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5741, norm(y): 0.9934, norm:0.3957, tok/sec: 187440.23, flops:196.78, batch-reuse:1
@ 4337 train 4.0046 , allloss: 4.0046, dt: 699.59ms, fracRes: 0.1791, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5764, norm(y): 0.9933, norm:0.4007, tok/sec: 187355.72, flops:196.69, batch-reuse:1
@ 4338 train 3.9350 , allloss: 3.9350, dt: 706.92ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5776, norm(y): 0.9933, norm:0.4205, tok/sec: 185412.80, flops:194.65, batch-reuse:1
@ 4339 train 4.0028 , allloss: 4.0028, dt: 706.31ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5786, norm(y): 0.9931, norm:0.4082, tok/sec: 185574.09, flops:194.82, batch-reuse:1
@ 4340 train 3.9765 , allloss: 3.9765, dt: 719.76ms, fracRes: 0.1779, norm(attn): 32.5000, norm(output): 0.4238, norm(x): 0.5674, norm(y): 0.9928, norm:0.4364, tok/sec: 182105.04, flops:191.17, batch-reuse:1
@ 4341 train 4.0567 , allloss: 4.0567, dt: 700.79ms, fracRes: 0.1776, norm(attn): 32.5000, norm(output): 0.4238, norm(x): 0.5706, norm(y): 0.9935, norm:0.4364, tok/sec: 187034.08, flops:196.35, batch-reuse:1
@ 4342 train 4.0166 , allloss: 4.0166, dt: 702.36ms, fracRes: 0.1776, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5741, norm(y): 0.9933, norm:0.4292, tok/sec: 186617.59, flops:195.91, batch-reuse:1
@ 4343 train 4.0569 , allloss: 4.0569, dt: 705.29ms, fracRes: 0.1781, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5773, norm(y): 0.9933, norm:0.5010, tok/sec: 185841.58, flops:195.10, batch-reuse:1
@ 4344 train 4.0695 , allloss: 4.0695, dt: 711.91ms, fracRes: 0.1788, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5760, norm(y): 0.9929, norm:0.5101, tok/sec: 184113.59, flops:193.28, batch-reuse:1
@ 4345 train 3.9358 , allloss: 3.9358, dt: 708.06ms, fracRes: 0.1785, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5762, norm(y): 0.9926, norm:0.5329, tok/sec: 185114.25, flops:194.33, batch-reuse:1
@ 4346 train 4.0271 , allloss: 4.0271, dt: 697.27ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5758, norm(y): 0.9925, norm:0.4152, tok/sec: 187978.47, flops:197.34, batch-reuse:1
@ 4347 train 3.9906 , allloss: 3.9906, dt: 691.82ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4277, norm(x): 0.5769, norm(y): 0.9925, norm:0.5672, tok/sec: 189458.47, flops:198.89, batch-reuse:1
@ 4348 train 4.1576 , allloss: 4.1576, dt: 706.04ms, fracRes: 0.1812, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5891, norm(y): 0.9933, norm:0.3777, tok/sec: 185642.89, flops:194.89, batch-reuse:1
@ 4349 train 4.1087 , allloss: 4.1087, dt: 708.35ms, fracRes: 0.1826, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5958, norm(y): 0.9935, norm:0.6138, tok/sec: 185038.80, flops:194.25, batch-reuse:1
@ 4350 train 3.9716 , allloss: 3.9716, dt: 706.95ms, fracRes: 0.1798, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5841, norm(y): 0.9932, norm:0.4974, tok/sec: 185404.36, flops:194.64, batch-reuse:1
@ 4351 train 4.1231 , allloss: 4.1231, dt: 702.59ms, fracRes: 0.1787, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5747, norm(y): 0.9928, norm:0.4892, tok/sec: 186554.13, flops:195.84, batch-reuse:1
@ 4352 train 3.9865 , allloss: 3.9865, dt: 709.50ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5856, norm(y): 0.9924, norm:0.4834, tok/sec: 184738.16, flops:193.94, batch-reuse:1
@ 4353 train 3.9789 , allloss: 3.9789, dt: 711.49ms, fracRes: 0.1803, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5803, norm(y): 0.9921, norm:0.4768, tok/sec: 184221.43, flops:193.40, batch-reuse:1
@ 4354 train 3.9589 , allloss: 3.9589, dt: 703.01ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5748, norm(y): 0.9921, norm:0.4888, tok/sec: 186443.10, flops:195.73, batch-reuse:1
@ 4355 train 3.9853 , allloss: 3.9853, dt: 713.75ms, fracRes: 0.1788, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5782, norm(y): 0.9927, norm:0.4817, tok/sec: 183637.64, flops:192.78, batch-reuse:1
@ 4356 train 3.9664 , allloss: 3.9664, dt: 706.25ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5797, norm(y): 0.9919, norm:0.4923, tok/sec: 185589.50, flops:194.83, batch-reuse:1
@ 4357 train 3.9937 , allloss: 3.9937, dt: 716.06ms, fracRes: 0.1812, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5848, norm(y): 0.9925, norm:0.4419, tok/sec: 183045.34, flops:192.16, batch-reuse:1
@ 4358 train 4.0728 , allloss: 4.0728, dt: 700.78ms, fracRes: 0.1837, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5839, norm(y): 0.9926, norm:0.4411, tok/sec: 187037.20, flops:196.35, batch-reuse:1
@ 4359 train 3.9582 , allloss: 3.9582, dt: 702.13ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4219, norm(x): 0.5716, norm(y): 0.9926, norm:0.4739, tok/sec: 186676.39, flops:195.97, batch-reuse:1
@ 4360 train 4.2316 , allloss: 4.2316, dt: 686.53ms, fracRes: 0.1781, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5795, norm(y): 0.9929, norm:0.5594, tok/sec: 190918.33, flops:200.43, batch-reuse:1
@ 4361 train 4.0443 , allloss: 4.0443, dt: 705.47ms, fracRes: 0.1798, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5768, norm(y): 0.9927, norm:0.5230, tok/sec: 185793.85, flops:195.05, batch-reuse:1
@ 4362 train 4.0205 , allloss: 4.0205, dt: 705.93ms, fracRes: 0.1788, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5727, norm(y): 0.9925, norm:0.4262, tok/sec: 185671.74, flops:194.92, batch-reuse:1
@ 4363 train 3.9959 , allloss: 3.9959, dt: 702.69ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5753, norm(y): 0.9921, norm:0.4675, tok/sec: 186527.80, flops:195.82, batch-reuse:1
@ 4364 train 4.0127 , allloss: 4.0127, dt: 708.46ms, fracRes: 0.1760, norm(attn): 32.5000, norm(output): 0.4199, norm(x): 0.5659, norm(y): 0.9914, norm:0.4119, tok/sec: 185010.96, flops:194.22, batch-reuse:1
@ 4365 train 3.9599 , allloss: 3.9599, dt: 692.28ms, fracRes: 0.1781, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5759, norm(y): 0.9912, norm:0.4705, tok/sec: 189333.91, flops:198.76, batch-reuse:1
@ 4366 train 3.9860 , allloss: 3.9860, dt: 704.55ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5873, norm(y): 0.9921, norm:0.4025, tok/sec: 186037.41, flops:195.30, batch-reuse:1
@ 4367 train 3.9150 , allloss: 3.9150, dt: 704.44ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5719, norm(y): 0.9916, norm:0.4166, tok/sec: 186064.99, flops:195.33, batch-reuse:1
@ 4368 train 4.0195 , allloss: 4.0195, dt: 699.73ms, fracRes: 0.1786, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5727, norm(y): 0.9917, norm:0.4088, tok/sec: 187316.77, flops:196.65, batch-reuse:1
@ 4369 train 3.9293 , allloss: 3.9293, dt: 704.06ms, fracRes: 0.1786, norm(attn): 32.5000, norm(output): 0.4199, norm(x): 0.5660, norm(y): 0.9910, norm:0.3799, tok/sec: 186166.69, flops:195.44, batch-reuse:1
@ 4370 train 3.8774 , allloss: 3.8774, dt: 704.21ms, fracRes: 0.1801, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5766, norm(y): 0.9913, norm:0.3890, tok/sec: 186126.92, flops:195.40, batch-reuse:1
@ 4371 train 3.9597 , allloss: 3.9597, dt: 702.42ms, fracRes: 0.1801, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5728, norm(y): 0.9907, norm:0.3638, tok/sec: 186601.88, flops:195.89, batch-reuse:1
@ 4372 train 3.9458 , allloss: 3.9458, dt: 712.12ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4199, norm(x): 0.5675, norm(y): 0.9901, norm:0.3710, tok/sec: 184058.73, flops:193.23, batch-reuse:1
@ 4373 train 3.9623 , allloss: 3.9623, dt: 709.98ms, fracRes: 0.1811, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5781, norm(y): 0.9899, norm:0.3698, tok/sec: 184612.97, flops:193.81, batch-reuse:1
@ 4374 train 4.0314 , allloss: 4.0314, dt: 699.20ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5716, norm(y): 0.9905, norm:0.3821, tok/sec: 187460.36, flops:196.80, batch-reuse:1
@ 4375 train 3.9563 , allloss: 3.9563, dt: 705.57ms, fracRes: 0.1796, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5752, norm(y): 0.9905, norm:0.3745, tok/sec: 185767.79, flops:195.02, batch-reuse:1
@ 4376 train 4.0073 , allloss: 4.0073, dt: 709.50ms, fracRes: 0.1793, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5713, norm(y): 0.9908, norm:0.3493, tok/sec: 184737.41, flops:193.94, batch-reuse:1
@ 4377 train 4.0146 , allloss: 4.0146, dt: 697.02ms, fracRes: 0.1804, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5763, norm(y): 0.9902, norm:0.4067, tok/sec: 188045.53, flops:197.41, batch-reuse:1
@ 4378 train 3.8954 , allloss: 3.8954, dt: 706.96ms, fracRes: 0.1807, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5756, norm(y): 0.9895, norm:0.4468, tok/sec: 185402.36, flops:194.64, batch-reuse:1
@ 4379 train 3.9327 , allloss: 3.9327, dt: 698.77ms, fracRes: 0.1796, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5742, norm(y): 0.9886, norm:0.3711, tok/sec: 187575.11, flops:196.92, batch-reuse:1
@ 4380 train 3.9680 , allloss: 3.9680, dt: 694.78ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5733, norm(y): 0.9893, norm:0.4192, tok/sec: 188652.69, flops:198.05, batch-reuse:1
@ 4381 train 3.9584 , allloss: 3.9584, dt: 707.81ms, fracRes: 0.1790, norm(attn): 32.5000, norm(output): 0.4277, norm(x): 0.5770, norm(y): 0.9915, norm:0.3980, tok/sec: 185179.35, flops:194.40, batch-reuse:1
@ 4382 train 4.0134 , allloss: 4.0134, dt: 705.54ms, fracRes: 0.1780, norm(attn): 32.5000, norm(output): 0.4238, norm(x): 0.5704, norm(y): 0.9907, norm:0.3634, tok/sec: 185775.95, flops:195.03, batch-reuse:1
@ 4383 train 3.9462 , allloss: 3.9462, dt: 707.42ms, fracRes: 0.1778, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5718, norm(y): 0.9904, norm:0.3714, tok/sec: 185283.01, flops:194.51, batch-reuse:1
@ 4384 train 3.9587 , allloss: 3.9587, dt: 703.52ms, fracRes: 0.1789, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5861, norm(y): 0.9900, norm:0.3878, tok/sec: 186308.07, flops:195.59, batch-reuse:1
@ 4385 train 3.9948 , allloss: 3.9948, dt: 695.54ms, fracRes: 0.1799, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5878, norm(y): 0.9905, norm:0.3560, tok/sec: 188447.18, flops:197.83, batch-reuse:1
@ 4386 train 3.9677 , allloss: 3.9677, dt: 710.20ms, fracRes: 0.1814, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5811, norm(y): 0.9904, norm:0.4574, tok/sec: 184555.89, flops:193.75, batch-reuse:1
@ 4387 train 4.0410 , allloss: 4.0410, dt: 712.76ms, fracRes: 0.1813, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5782, norm(y): 0.9896, norm:0.4227, tok/sec: 183894.59, flops:193.05, batch-reuse:1
@ 4388 train 4.0324 , allloss: 4.0324, dt: 715.54ms, fracRes: 0.1803, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5725, norm(y): 0.9887, norm:0.4248, tok/sec: 183179.46, flops:192.30, batch-reuse:1
@ 4389 train 3.9623 , allloss: 3.9623, dt: 715.75ms, fracRes: 0.1806, norm(attn): 32.2500, norm(output): 0.4277, norm(x): 0.5765, norm(y): 0.9892, norm:0.4968, tok/sec: 183126.62, flops:192.25, batch-reuse:1
@ 4390 train 3.9818 , allloss: 3.9818, dt: 719.34ms, fracRes: 0.1801, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5750, norm(y): 0.9906, norm:0.4273, tok/sec: 182212.23, flops:191.29, batch-reuse:1
@ 4391 train 3.8765 , allloss: 3.8765, dt: 703.05ms, fracRes: 0.1802, norm(attn): 32.5000, norm(output): 0.4277, norm(x): 0.5759, norm(y): 0.9908, norm:0.4101, tok/sec: 186432.29, flops:195.72, batch-reuse:1
@ 4392 train 3.8878 , allloss: 3.8878, dt: 704.46ms, fracRes: 0.1800, norm(attn): 32.5000, norm(output): 0.4277, norm(x): 0.5755, norm(y): 0.9908, norm:0.3740, tok/sec: 186059.07, flops:195.33, batch-reuse:1
@ 4393 train 3.9803 , allloss: 3.9803, dt: 703.05ms, fracRes: 0.1796, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5753, norm(y): 0.9914, norm:0.4312, tok/sec: 186433.68, flops:195.72, batch-reuse:1
@ 4394 train 4.0361 , allloss: 4.0361, dt: 700.93ms, fracRes: 0.1810, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5837, norm(y): 0.9916, norm:0.4005, tok/sec: 186998.26, flops:196.31, batch-reuse:1
@ 4395 train 3.8432 , allloss: 3.8432, dt: 695.65ms, fracRes: 0.1794, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5723, norm(y): 0.9907, norm:0.3660, tok/sec: 188415.85, flops:197.80, batch-reuse:1
@ 4396 train 3.9280 , allloss: 3.9280, dt: 714.59ms, fracRes: 0.1786, norm(attn): 32.5000, norm(output): 0.4199, norm(x): 0.5657, norm(y): 0.9901, norm:0.3824, tok/sec: 183422.03, flops:192.56, batch-reuse:1
@ 4397 train 3.8072 , allloss: 3.8072, dt: 714.74ms, fracRes: 0.1775, norm(attn): 32.5000, norm(output): 0.4238, norm(x): 0.5703, norm(y): 0.9897, norm:0.3895, tok/sec: 183384.10, flops:192.52, batch-reuse:1
@ 4398 train 3.7359 , allloss: 3.7359, dt: 701.23ms, fracRes: 0.1778, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5751, norm(y): 0.9882, norm:0.3998, tok/sec: 186916.75, flops:196.23, batch-reuse:1
@ 4399 train 3.7927 , allloss: 3.7927, dt: 717.21ms, fracRes: 0.1774, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5791, norm(y): 0.9884, norm:0.4710, tok/sec: 182751.38, flops:191.85, batch-reuse:1
@ 4400 train 3.8324 , allloss: 3.8324, dt: 719.40ms, fracRes: 0.1782, norm(attn): 32.5000, norm(output): 0.4121, norm(x): 0.5596, norm(y): 0.9873, norm:0.4189, tok/sec: 182196.90, flops:191.27, batch-reuse:1
@ 4401 train 3.7560 , allloss: 3.7560, dt: 697.43ms, fracRes: 0.1787, norm(attn): 32.5000, norm(output): 0.4121, norm(x): 0.5616, norm(y): 0.9871, norm:0.4227, tok/sec: 187936.57, flops:197.30, batch-reuse:1
@ 4402 train 3.8959 , allloss: 3.8959, dt: 707.11ms, fracRes: 0.1800, norm(attn): 32.2500, norm(output): 0.4258, norm(x): 0.5732, norm(y): 0.9865, norm:0.3938, tok/sec: 185361.85, flops:194.59, batch-reuse:1
@ 4403 train 3.8865 , allloss: 3.8865, dt: 709.22ms, fracRes: 0.1789, norm(attn): 32.2500, norm(output): 0.4277, norm(x): 0.5724, norm(y): 0.9856, norm:0.4291, tok/sec: 184810.38, flops:194.01, batch-reuse:1
@ 4404 train 3.8488 , allloss: 3.8488, dt: 696.29ms, fracRes: 0.1784, norm(attn): 32.2500, norm(output): 0.4160, norm(x): 0.5637, norm(y): 0.9843, norm:0.4327, tok/sec: 188243.08, flops:197.62, batch-reuse:1
@ 4405 train 3.8881 , allloss: 3.8881, dt: 698.22ms, fracRes: 0.1797, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5718, norm(y): 0.9846, norm:0.4114, tok/sec: 187724.22, flops:197.07, batch-reuse:1
@ 4406 train 3.8139 , allloss: 3.8139, dt: 704.95ms, fracRes: 0.1797, norm(attn): 32.2500, norm(output): 0.4180, norm(x): 0.5662, norm(y): 0.9825, norm:0.3976, tok/sec: 185930.14, flops:195.19, batch-reuse:1
@ 4407 train 3.9157 , allloss: 3.9157, dt: 711.11ms, fracRes: 0.1794, norm(attn): 32.2500, norm(output): 0.4141, norm(x): 0.5658, norm(y): 0.9826, norm:0.4517, tok/sec: 184320.20, flops:193.50, batch-reuse:1
@ 4408 train 3.8340 , allloss: 3.8340, dt: 705.90ms, fracRes: 0.1794, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5758, norm(y): 0.9844, norm:0.4068, tok/sec: 185679.89, flops:194.93, batch-reuse:1
@ 4409 train 3.8069 , allloss: 3.8069, dt: 707.22ms, fracRes: 0.1798, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5755, norm(y): 0.9841, norm:0.4203, tok/sec: 185333.11, flops:194.56, batch-reuse:1
@ 4410 train 3.7969 , allloss: 3.7969, dt: 708.75ms, fracRes: 0.1795, norm(attn): 32.2500, norm(output): 0.4199, norm(x): 0.5675, norm(y): 0.9835, norm:0.3955, tok/sec: 184933.66, flops:194.14, batch-reuse:1
@ 4411 train 3.7881 , allloss: 3.7881, dt: 707.91ms, fracRes: 0.1785, norm(attn): 32.5000, norm(output): 0.4180, norm(x): 0.5654, norm(y): 0.9853, norm:0.4168, tok/sec: 185152.65, flops:194.37, batch-reuse:1
@ 4412 train 3.9068 , allloss: 3.9068, dt: 707.52ms, fracRes: 0.1788, norm(attn): 32.2500, norm(output): 0.4160, norm(x): 0.5678, norm(y): 0.9866, norm:0.4091, tok/sec: 185255.54, flops:194.48, batch-reuse:1
@ 4413 train 3.8637 , allloss: 3.8637, dt: 705.16ms, fracRes: 0.1787, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5702, norm(y): 0.9853, norm:0.4154, tok/sec: 185874.82, flops:195.13, batch-reuse:1
@ 4414 train 3.7565 , allloss: 3.7565, dt: 704.18ms, fracRes: 0.1794, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5744, norm(y): 0.9853, norm:0.4173, tok/sec: 186133.91, flops:195.40, batch-reuse:1
@ 4415 train 3.7794 , allloss: 3.7794, dt: 705.39ms, fracRes: 0.1789, norm(attn): 32.2500, norm(output): 0.4180, norm(x): 0.5675, norm(y): 0.9856, norm:1.2904, tok/sec: 185815.57, flops:195.07, batch-reuse:1
@ 4416 train 3.7918 , allloss: 3.7918, dt: 702.97ms, fracRes: 0.1789, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5663, norm(y): 0.9878, norm:0.4280, tok/sec: 186453.53, flops:195.74, batch-reuse:1
@ 4417 train 3.8277 , allloss: 3.8277, dt: 701.50ms, fracRes: 0.1785, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5701, norm(y): 0.9879, norm:0.4144, tok/sec: 186846.30, flops:196.15, batch-reuse:1
@ 4418 train 3.7848 , allloss: 3.7848, dt: 693.79ms, fracRes: 0.1786, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5778, norm(y): 0.9881, norm:0.4568, tok/sec: 188921.93, flops:198.33, batch-reuse:1
@ 4419 train 3.7705 , allloss: 3.7705, dt: 693.62ms, fracRes: 0.1779, norm(attn): 32.2500, norm(output): 0.4258, norm(x): 0.5711, norm(y): 0.9884, norm:0.4480, tok/sec: 188967.32, flops:198.38, batch-reuse:1
@ 4420 train 3.7959 , allloss: 3.7959, dt: 707.34ms, fracRes: 0.1779, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5722, norm(y): 0.9886, norm:0.3922, tok/sec: 185302.06, flops:194.53, batch-reuse:1
@ 4421 train 3.8837 , allloss: 3.8837, dt: 705.53ms, fracRes: 0.1772, norm(attn): 32.2500, norm(output): 0.4238, norm(x): 0.5702, norm(y): 0.9897, norm:0.4446, tok/sec: 185776.77, flops:195.03, batch-reuse:1
@ 4422 train 3.7771 , allloss: 3.7771, dt: 697.46ms, fracRes: 0.1782, norm(attn): 32.2500, norm(output): 0.4219, norm(x): 0.5711, norm(y): 0.9891, norm:0.3919, tok/sec: 187927.64, flops:197.29, batch-reuse:1
@ 4423 train 3.7953 , allloss: 3.7953, dt: 708.02ms, fracRes: 0.1788, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5765, norm(y): 0.9893, norm:0.4168, tok/sec: 185123.41, flops:194.34, batch-reuse:1
@ 4424 train 3.8195 , allloss: 3.8195, dt: 710.15ms, fracRes: 0.1801, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5763, norm(y): 0.9897, norm:0.3734, tok/sec: 184569.39, flops:193.76, batch-reuse:1
@ 4425 train 3.9189 , allloss: 3.9189, dt: 704.04ms, fracRes: 0.1799, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5901, norm(y): 0.9907, norm:0.5968, tok/sec: 186171.98, flops:195.44, batch-reuse:1
@ 4426 train 4.0877 , allloss: 4.0877, dt: 708.94ms, fracRes: 0.1807, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5971, norm(y): 0.9898, norm:0.7291, tok/sec: 184885.59, flops:194.09, batch-reuse:1
@ 4427 train 3.8505 , allloss: 3.8505, dt: 702.02ms, fracRes: 0.1799, norm(attn): 32.2500, norm(output): 0.4199, norm(x): 0.5715, norm(y): 0.9890, norm:0.4132, tok/sec: 186707.96, flops:196.01, batch-reuse:1
@ 4428 train 3.8634 , allloss: 3.8634, dt: 704.08ms, fracRes: 0.1814, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5776, norm(y): 0.9883, norm:0.5075, tok/sec: 186161.20, flops:195.43, batch-reuse:1
@ 4429 train 3.9160 , allloss: 3.9160, dt: 713.95ms, fracRes: 0.1799, norm(attn): 32.2500, norm(output): 0.4258, norm(x): 0.5699, norm(y): 0.9872, norm:0.4678, tok/sec: 183586.13, flops:192.73, batch-reuse:1
@ 4430 train 3.9126 , allloss: 3.9126, dt: 720.13ms, fracRes: 0.1808, norm(attn): 32.2500, norm(output): 0.4258, norm(x): 0.5766, norm(y): 0.9862, norm:0.4300, tok/sec: 182011.95, flops:191.08, batch-reuse:1
@ 4431 train 4.0350 , allloss: 4.0350, dt: 695.94ms, fracRes: 0.1807, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5807, norm(y): 0.9863, norm:0.5373, tok/sec: 188337.75, flops:197.72, batch-reuse:1
@ 4432 train 4.0192 , allloss: 4.0192, dt: 705.52ms, fracRes: 0.1822, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5898, norm(y): 0.9852, norm:0.5085, tok/sec: 185780.53, flops:195.03, batch-reuse:1
@ 4433 train 3.7908 , allloss: 3.7908, dt: 701.13ms, fracRes: 0.1812, norm(attn): 32.0000, norm(output): 0.4238, norm(x): 0.5711, norm(y): 0.9767, norm:0.4418, tok/sec: 186944.53, flops:196.25, batch-reuse:1
@ 4434 train 3.8360 , allloss: 3.8360, dt: 691.52ms, fracRes: 0.1810, norm(attn): 31.7500, norm(output): 0.4219, norm(x): 0.5715, norm(y): 0.9662, norm:0.4365, tok/sec: 189542.02, flops:198.98, batch-reuse:1
@ 4435 train 3.8348 , allloss: 3.8348, dt: 702.56ms, fracRes: 0.1799, norm(attn): 31.6250, norm(output): 0.4238, norm(x): 0.5774, norm(y): 0.9647, norm:0.4039, tok/sec: 186563.63, flops:195.85, batch-reuse:1
@ 4436 train 3.8328 , allloss: 3.8328, dt: 702.47ms, fracRes: 0.1810, norm(attn): 30.2500, norm(output): 0.4375, norm(x): 0.5892, norm(y): 0.9500, norm:0.4398, tok/sec: 186588.45, flops:195.88, batch-reuse:1
@ 4437 train 8.4951 , allloss: 8.4951, dt: 696.22ms, fracRes: 0.1812, norm(attn): 28.1250, norm(output): 9.8750, norm(x): 9.9075, norm(y): 0.9102, norm:440.7337, tok/sec: 188263.19, flops:197.64, batch-reuse:1
@ 4438 train 3.8889 , allloss: 3.8889, dt: 699.39ms, fracRes: 0.1798, norm(attn): 31.7500, norm(output): 0.4297, norm(x): 0.5761, norm(y): 0.9657, norm:0.5772, tok/sec: 187410.32, flops:196.74, batch-reuse:1
@ 4439 train 3.9025 , allloss: 3.9025, dt: 711.00ms, fracRes: 0.1788, norm(attn): 32.0000, norm(output): 0.4297, norm(x): 0.5762, norm(y): 0.9867, norm:0.4023, tok/sec: 184348.38, flops:193.53, batch-reuse:1
@ 4440 train 3.8700 , allloss: 3.8700, dt: 703.63ms, fracRes: 0.1794, norm(attn): 32.2500, norm(output): 0.4316, norm(x): 0.5816, norm(y): 0.9913, norm:0.5209, tok/sec: 186279.73, flops:195.56, batch-reuse:1
@ 4441 train 3.9571 , allloss: 3.9571, dt: 707.24ms, fracRes: 0.1792, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5829, norm(y): 0.9923, norm:0.4632, tok/sec: 185329.48, flops:194.56, batch-reuse:1
@ 4442 train 3.8673 , allloss: 3.8673, dt: 716.36ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4316, norm(x): 0.5775, norm(y): 0.9925, norm:0.4961, tok/sec: 182968.64, flops:192.08, batch-reuse:1
@ 4443 train 3.8936 , allloss: 3.8936, dt: 696.17ms, fracRes: 0.1805, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5853, norm(y): 0.9933, norm:0.4575, tok/sec: 188275.96, flops:197.65, batch-reuse:1
@ 4444 train 3.8617 , allloss: 3.8617, dt: 712.60ms, fracRes: 0.1823, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5964, norm(y): 0.9939, norm:0.5936, tok/sec: 183935.20, flops:193.10, batch-reuse:1
@ 4445 train 3.9607 , allloss: 3.9607, dt: 701.74ms, fracRes: 0.1836, norm(attn): 32.2500, norm(output): 0.4512, norm(x): 0.6030, norm(y): 0.9941, norm:0.5308, tok/sec: 186780.28, flops:196.08, batch-reuse:1
@ 4446 train 4.0865 , allloss: 4.0865, dt: 713.28ms, fracRes: 0.1845, norm(attn): 32.2500, norm(output): 0.4473, norm(x): 0.5991, norm(y): 0.9949, norm:0.5799, tok/sec: 183759.60, flops:192.91, batch-reuse:1
@ 4447 train 3.9946 , allloss: 3.9946, dt: 716.13ms, fracRes: 0.1828, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5895, norm(y): 0.9943, norm:0.4144, tok/sec: 183028.09, flops:192.14, batch-reuse:1
@ 4448 train 3.8804 , allloss: 3.8804, dt: 715.56ms, fracRes: 0.1813, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5808, norm(y): 0.9939, norm:0.4937, tok/sec: 183172.75, flops:192.30, batch-reuse:1
@ 4449 train 4.0617 , allloss: 4.0617, dt: 706.79ms, fracRes: 0.1829, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5907, norm(y): 0.9944, norm:0.5197, tok/sec: 185447.51, flops:194.68, batch-reuse:1
@ 4450 train 3.9715 , allloss: 3.9715, dt: 698.03ms, fracRes: 0.1819, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5877, norm(y): 0.9935, norm:0.5196, tok/sec: 187773.65, flops:197.13, batch-reuse:1
@ 4451 train 4.1693 , allloss: 4.1693, dt: 701.10ms, fracRes: 0.1815, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5833, norm(y): 0.9943, norm:0.4788, tok/sec: 186950.89, flops:196.26, batch-reuse:1
@ 4452 train 3.9479 , allloss: 3.9479, dt: 715.35ms, fracRes: 0.1822, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5858, norm(y): 0.9944, norm:0.5448, tok/sec: 183227.08, flops:192.35, batch-reuse:1
@ 4453 train 3.9982 , allloss: 3.9982, dt: 716.91ms, fracRes: 0.1834, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5882, norm(y): 0.9939, norm:0.4686, tok/sec: 182829.36, flops:191.93, batch-reuse:1
@ 4454 train 3.9487 , allloss: 3.9487, dt: 716.89ms, fracRes: 0.1810, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5757, norm(y): 0.9933, norm:0.4900, tok/sec: 182835.01, flops:191.94, batch-reuse:1
@ 4455 train 3.9581 , allloss: 3.9581, dt: 715.41ms, fracRes: 0.1803, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5831, norm(y): 0.9933, norm:0.4457, tok/sec: 183212.06, flops:192.34, batch-reuse:1
@ 4456 train 4.0375 , allloss: 4.0375, dt: 715.95ms, fracRes: 0.1820, norm(attn): 32.2500, norm(output): 0.4414, norm(x): 0.5899, norm(y): 0.9933, norm:0.4940, tok/sec: 183074.66, flops:192.19, batch-reuse:1
@ 4457 train 4.0473 , allloss: 4.0473, dt: 701.01ms, fracRes: 0.1822, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5841, norm(y): 0.9941, norm:0.4315, tok/sec: 186976.19, flops:196.29, batch-reuse:1
@ 4458 train 3.8880 , allloss: 3.8880, dt: 701.76ms, fracRes: 0.1825, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5796, norm(y): 0.9940, norm:0.5223, tok/sec: 186775.84, flops:196.08, batch-reuse:1
@ 4459 train 3.9220 , allloss: 3.9220, dt: 705.38ms, fracRes: 0.1821, norm(attn): 32.2500, norm(output): 0.4297, norm(x): 0.5777, norm(y): 0.9932, norm:0.4141, tok/sec: 185818.53, flops:195.07, batch-reuse:1
@ 4460 train 4.0395 , allloss: 4.0395, dt: 692.16ms, fracRes: 0.1813, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5901, norm(y): 0.9936, norm:0.4784, tok/sec: 189367.04, flops:198.80, batch-reuse:1
@ 4461 train 4.0175 , allloss: 4.0175, dt: 707.97ms, fracRes: 0.1803, norm(attn): 32.2500, norm(output): 0.6289, norm(x): 0.7730, norm(y): 0.9926, norm:2.1689, tok/sec: 185137.19, flops:194.36, batch-reuse:1
@ 4462 train 4.0447 , allloss: 4.0447, dt: 708.40ms, fracRes: 0.1795, norm(attn): 32.5000, norm(output): 0.4492, norm(x): 0.5963, norm(y): 0.9928, norm:0.5559, tok/sec: 185026.59, flops:194.24, batch-reuse:1
@ 4463 train 4.0176 , allloss: 4.0176, dt: 708.49ms, fracRes: 0.1792, norm(attn): 32.2500, norm(output): 0.4355, norm(x): 0.5839, norm(y): 0.9909, norm:0.4114, tok/sec: 185001.37, flops:194.21, batch-reuse:1
@ 4464 train 3.9431 , allloss: 3.9431, dt: 706.63ms, fracRes: 0.1794, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5863, norm(y): 0.9870, norm:0.4372, tok/sec: 185488.25, flops:194.73, batch-reuse:1
@ 4465 train 3.9679 , allloss: 3.9679, dt: 701.87ms, fracRes: 0.1783, norm(attn): 32.2500, norm(output): 0.4277, norm(x): 0.5747, norm(y): 0.9751, norm:0.4416, tok/sec: 186745.95, flops:196.05, batch-reuse:1
@ 4466 train 3.9666 , allloss: 3.9666, dt: 719.42ms, fracRes: 0.1736, norm(attn): 32.5000, norm(output): 0.4258, norm(x): 0.5717, norm(y): 0.9614, norm:0.5309, tok/sec: 182190.01, flops:191.26, batch-reuse:1
@ 4467 train 3.9512 , allloss: 3.9512, dt: 721.81ms, fracRes: 0.1791, norm(attn): 32.2500, norm(output): 0.4395, norm(x): 0.5838, norm(y): 0.9808, norm:0.4049, tok/sec: 181587.39, flops:190.63, batch-reuse:1
@ 4468 train 3.9400 , allloss: 3.9400, dt: 721.02ms, fracRes: 0.1793, norm(attn): 32.2500, norm(output): 0.4336, norm(x): 0.5801, norm(y): 0.9877, norm:0.4177, tok/sec: 181786.80, flops:190.84, batch-reuse:1
@ 4469 train 3.9540 , allloss: 3.9540, dt: 718.55ms, fracRes: 0.1807, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5889, norm(y): 0.9909, norm:0.4235, tok/sec: 182411.63, flops:191.50, batch-reuse:1
@ 4470 train 4.0606 , allloss: 4.0606, dt: 700.38ms, fracRes: 0.1816, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5882, norm(y): 0.9926, norm:0.4507, tok/sec: 187145.18, flops:196.47, batch-reuse:1
@ 4471 train 3.9052 , allloss: 3.9052, dt: 697.55ms, fracRes: 0.1802, norm(attn): 32.2500, norm(output): 0.4375, norm(x): 0.5799, norm(y): 0.9924, norm:0.4471, tok/sec: 187902.33, flops:197.26, batch-reuse:1
@ 4472 train 3.8802 , allloss: 3.8802, dt: 703.76ms, fracRes: 0.1813, norm(attn): 32.2500, norm(output): 0.4492, norm(x): 0.5945, norm(y): 0.9926, norm:0.6164, tok/sec: 186246.53, flops:195.52, batch-reuse:1
@ 4473 train 4.0169 , allloss: 4.0169, dt: 715.48ms, fracRes: 0.1825, norm(attn): 32.2500, norm(output): 0.4473, norm(x): 0.6000, norm(y): 0.9942, norm:0.4861, tok/sec: 183195.70, flops:192.32, batch-reuse:1
@ 4474 train 3.9937 , allloss: 3.9937, dt: 704.39ms, fracRes: 0.1814, norm(attn): 32.5000, norm(output): 0.4375, norm(x): 0.5828, norm(y): 0.9935, norm:0.5431, tok/sec: 186079.60, flops:195.35, batch-reuse:1
@ 4475 train 3.8806 , allloss: 3.8806, dt: 703.64ms, fracRes: 0.1802, norm(attn): 32.5000, norm(output): 0.4355, norm(x): 0.5799, norm(y): 0.9930, norm:0.4834, tok/sec: 186276.83, flops:195.55, batch-reuse:1
@ 4476 train 3.8978 , allloss: 3.8978, dt: 716.41ms, fracRes: 0.1790, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5897, norm(y): 0.9936, norm:0.4415, tok/sec: 182957.62, flops:192.07, batch-reuse:1
@ 4477 train 3.9880 , allloss: 3.9880, dt: 715.34ms, fracRes: 0.1797, norm(attn): 32.5000, norm(output): 0.4336, norm(x): 0.5800, norm(y): 0.9938, norm:0.4488, tok/sec: 183230.13, flops:192.36, batch-reuse:1
@ 4478 train 3.8754 , allloss: 3.8754, dt: 709.06ms, fracRes: 0.1804, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5817, norm(y): 0.9935, norm:0.4076, tok/sec: 184852.08, flops:194.06, batch-reuse:1
@ 4479 train 3.8925 , allloss: 3.8925, dt: 711.83ms, fracRes: 0.1820, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5873, norm(y): 0.9934, norm:0.4597, tok/sec: 184133.57, flops:193.30, batch-reuse:1
@ 4480 train 3.9715 , allloss: 3.9715, dt: 716.22ms, fracRes: 0.1824, norm(attn): 32.5000, norm(output): 0.4453, norm(x): 0.5895, norm(y): 0.9933, norm:0.4093, tok/sec: 183004.45, flops:192.12, batch-reuse:1
@ 4481 train 3.9922 , allloss: 3.9922, dt: 704.45ms, fracRes: 0.1812, norm(attn): 32.5000, norm(output): 0.4434, norm(x): 0.5864, norm(y): 0.9931, norm:0.4528, tok/sec: 186062.73, flops:195.33, batch-reuse:1
@ 4482 train 4.0673 , allloss: 4.0673, dt: 714.37ms, fracRes: 0.1815, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5870, norm(y): 0.9932, norm:0.4529, tok/sec: 183478.72, flops:192.62, batch-reuse:1
@ 4483 train 4.0578 , allloss: 4.0578, dt: 715.86ms, fracRes: 0.1809, norm(attn): 32.2500, norm(output): 0.4453, norm(x): 0.5931, norm(y): 0.9935, norm:0.4146, tok/sec: 183097.34, flops:192.22, batch-reuse:1
@ 4484 train 3.9160 , allloss: 3.9160, dt: 714.55ms, fracRes: 0.1793, norm(attn): 32.5000, norm(output): 0.4414, norm(x): 0.5847, norm(y): 0.9933, norm:0.4603, tok/sec: 183433.84, flops:192.57, batch-reuse:1
@ 4485 train 4.0195 , allloss: 4.0195, dt: 710.72ms, fracRes: 0.1788, norm(attn): 32.5000, norm(output): 0.4297, norm(x): 0.5735, norm(y): 0.9932, norm:0.4323, tok/sec: 184422.71, flops:193.61, batch-reuse:1
@ 4486 train 3.9454 , allloss: 3.9454, dt: 712.07ms, fracRes: 0.1794, norm(attn): 32.5000, norm(output): 0.4395, norm(x): 0.5798, norm(y): 0.9938, norm:0.5114, tok/sec: 184071.36, flops:193.24, batch-reuse:1
@ 4487 train 4.0220 , allloss: 4.0220, dt: 711.29ms, fracRes: 0.1788, norm(attn): 33.2500, norm(output): 0.4375, norm(x): 0.5779, norm(y): 0.9941, norm:0.4565, tok/sec: 184274.66, flops:193.45, batch-reuse:1
@ 4488 train 4.0308 , allloss: 4.0308, dt: 713.18ms, fracRes: 0.1806, norm(attn): 33.7500, norm(output): 0.4316, norm(x): 0.5794, norm(y): 0.9943, norm:0.4367, tok/sec: 183786.33, flops:192.94, batch-reuse:1
@ 4489 train 4.0736 , allloss: 4.0736, dt: 713.28ms, fracRes: 0.1807, norm(attn): 33.7500, norm(output): 0.6133, norm(x): 0.7600, norm(y): 0.9943, norm:0.4692, tok/sec: 183759.73, flops:192.91, batch-reuse:1
@ 4490 train 4.0221 , allloss: 4.0221, dt: 714.65ms, fracRes: 0.1806, norm(attn): 33.7500, norm(output): 0.4473, norm(x): 0.5934, norm(y): 0.9951, norm:0.4255, tok/sec: 183406.98, flops:192.54, batch-reuse:1
@ 4491 train 3.9747 , allloss: 3.9747, dt: 712.36ms, fracRes: 0.1784, norm(attn): 34.0000, norm(output): 0.4375, norm(x): 0.5832, norm(y): 0.9945, norm:0.4721, tok/sec: 183997.62, flops:193.16, batch-reuse:1
@ 4492 train 4.0828 , allloss: 4.0828, dt: 710.21ms, fracRes: 0.1770, norm(attn): 34.0000, norm(output): 0.6289, norm(x): 0.7742, norm(y): 0.9934, norm:3.6565, tok/sec: 184553.72, flops:193.74, batch-reuse:1
@ 4493 train 3.9631 , allloss: 3.9631, dt: 714.07ms, fracRes: 0.1770, norm(attn): 34.0000, norm(output): 0.4395, norm(x): 0.5833, norm(y): 0.9938, norm:0.5807, tok/sec: 183555.42, flops:192.70, batch-reuse:1
@ 4494 train 4.0191 , allloss: 4.0191, dt: 705.93ms, fracRes: 0.1793, norm(attn): 34.0000, norm(output): 0.4590, norm(x): 0.6027, norm(y): 0.9945, norm:0.4305, tok/sec: 185671.67, flops:194.92, batch-reuse:1
@ 4495 train 4.0281 , allloss: 4.0281, dt: 700.38ms, fracRes: 0.1808, norm(attn): 34.2500, norm(output): 0.4473, norm(x): 0.5957, norm(y): 0.9950, norm:0.5571, tok/sec: 187143.46, flops:196.46, batch-reuse:1
@ 4496 train 4.0807 , allloss: 4.0807, dt: 712.75ms, fracRes: 0.1796, norm(attn): 34.5000, norm(output): 0.4453, norm(x): 0.5907, norm(y): 0.9959, norm:0.4412, tok/sec: 183895.45, flops:193.05, batch-reuse:1
@ 4497 train 4.0682 , allloss: 4.0682, dt: 712.48ms, fracRes: 0.1784, norm(attn): 34.2500, norm(output): 0.4414, norm(x): 0.5864, norm(y): 0.9954, norm:0.4822, tok/sec: 183966.22, flops:193.13, batch-reuse:1
@ 4498 train 4.0096 , allloss: 4.0096, dt: 712.39ms, fracRes: 0.1782, norm(attn): 34.7500, norm(output): 0.4434, norm(x): 0.5878, norm(y): 0.9949, norm:0.4242, tok/sec: 183990.29, flops:193.15, batch-reuse:1
@ 4499 train 4.0412 , allloss: 4.0412, dt: 703.04ms, fracRes: 0.1781, norm(attn): 35.0000, norm(output): 0.4473, norm(x): 0.5897, norm(y): 0.9949, norm:0.4205, tok/sec: 186436.59, flops:195.72, batch-reuse:1
@ 4500 train 3.9430 , allloss: 3.9430, dt: 697.84ms, fracRes: 0.1784, norm(attn): 35.5000, norm(output): 0.4453, norm(x): 0.5916, norm(y): 0.9948, norm:0.3762, tok/sec: 187825.81, flops:197.18, batch-reuse:1
@ 4501 train 3.9657 , allloss: 3.9657, dt: 701.29ms, fracRes: 0.1786, norm(attn): 35.5000, norm(output): 0.4453, norm(x): 0.5917, norm(y): 0.9952, norm:0.4129, tok/sec: 186902.26, flops:196.21, batch-reuse:1
@ 4502 train 3.9917 , allloss: 3.9917, dt: 695.66ms, fracRes: 0.1798, norm(attn): 35.2500, norm(output): 0.4531, norm(x): 0.5958, norm(y): 0.9948, norm:0.4113, tok/sec: 188415.14, flops:197.80, batch-reuse:1
@ 4503 train 3.9890 , allloss: 3.9890, dt: 702.79ms, fracRes: 0.1788, norm(attn): 35.2500, norm(output): 0.4492, norm(x): 0.5913, norm(y): 0.9951, norm:0.3897, tok/sec: 186501.10, flops:195.79, batch-reuse:1
@ 4504 train 3.8871 , allloss: 3.8871, dt: 696.84ms, fracRes: 0.1810, norm(attn): 35.5000, norm(output): 0.4512, norm(x): 0.5926, norm(y): 0.9943, norm:0.4125, tok/sec: 188093.66, flops:197.46, batch-reuse:1
@ 4505 train 3.9708 , allloss: 3.9708, dt: 704.06ms, fracRes: 0.1800, norm(attn): 35.5000, norm(output): 0.4453, norm(x): 0.5900, norm(y): 0.9949, norm:0.4702, tok/sec: 186165.43, flops:195.44, batch-reuse:1
@ 4506 train 4.0299 , allloss: 4.0299, dt: 703.51ms, fracRes: 0.1820, norm(attn): 35.5000, norm(output): 0.4453, norm(x): 0.5915, norm(y): 0.9948, norm:0.3884, tok/sec: 186312.24, flops:195.59, batch-reuse:1
@ 4507 train 4.0482 , allloss: 4.0482, dt: 702.84ms, fracRes: 0.1804, norm(attn): 35.5000, norm(output): 0.4473, norm(x): 0.5897, norm(y): 0.9957, norm:0.4303, tok/sec: 186488.70, flops:195.78, batch-reuse:1
@ 4508 train 3.9481 , allloss: 3.9481, dt: 705.28ms, fracRes: 0.1812, norm(attn): 35.5000, norm(output): 0.4512, norm(x): 0.5969, norm(y): 0.9951, norm:0.4262, tok/sec: 185844.97, flops:195.10, batch-reuse:1
@ 4509 train 4.0186 , allloss: 4.0186, dt: 702.78ms, fracRes: 0.1808, norm(attn): 35.5000, norm(output): 0.4492, norm(x): 0.5939, norm(y): 0.9946, norm:0.4502, tok/sec: 186505.53, flops:195.79, batch-reuse:1
@ 4510 train 4.0088 , allloss: 4.0088, dt: 709.82ms, fracRes: 0.1802, norm(attn): 35.5000, norm(output): 0.4570, norm(x): 0.5992, norm(y): 0.9950, norm:0.4016, tok/sec: 184654.70, flops:193.85, batch-reuse:1
@ 4511 train 3.8815 , allloss: 3.8815, dt: 709.32ms, fracRes: 0.1788, norm(attn): 35.7500, norm(output): 0.4512, norm(x): 0.5931, norm(y): 0.9948, norm:0.4334, tok/sec: 184786.34, flops:193.99, batch-reuse:1
@ 4512 train 3.9705 , allloss: 3.9705, dt: 705.80ms, fracRes: 0.1780, norm(attn): 35.7500, norm(output): 0.4492, norm(x): 0.5884, norm(y): 0.9949, norm:0.3878, tok/sec: 185707.49, flops:194.96, batch-reuse:1
@ 4513 train 3.9715 , allloss: 3.9715, dt: 707.54ms, fracRes: 0.1789, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5879, norm(y): 0.9947, norm:0.4176, tok/sec: 185249.73, flops:194.48, batch-reuse:1
@ 4514 train 3.9344 , allloss: 3.9344, dt: 700.87ms, fracRes: 0.1788, norm(attn): 35.7500, norm(output): 0.4434, norm(x): 0.5879, norm(y): 0.9946, norm:0.4253, tok/sec: 187012.51, flops:196.33, batch-reuse:1
@ 4515 train 3.9928 , allloss: 3.9928, dt: 695.49ms, fracRes: 0.1808, norm(attn): 35.7500, norm(output): 0.4570, norm(x): 0.6002, norm(y): 0.9953, norm:0.4328, tok/sec: 188459.71, flops:197.85, batch-reuse:1
@ 4516 train 3.9366 , allloss: 3.9366, dt: 706.57ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4512, norm(x): 0.5939, norm(y): 0.9950, norm:0.3889, tok/sec: 185505.65, flops:194.74, batch-reuse:1
@ 4517 train 3.9453 , allloss: 3.9453, dt: 703.38ms, fracRes: 0.1823, norm(attn): 35.7500, norm(output): 0.4609, norm(x): 0.6026, norm(y): 0.9951, norm:0.4098, tok/sec: 186344.95, flops:195.63, batch-reuse:1
@ 4518 train 3.9889 , allloss: 3.9889, dt: 701.92ms, fracRes: 0.1812, norm(attn): 35.7500, norm(output): 0.4570, norm(x): 0.5968, norm(y): 0.9950, norm:0.4051, tok/sec: 186733.52, flops:196.03, batch-reuse:1
@ 4519 train 4.0314 , allloss: 4.0314, dt: 702.69ms, fracRes: 0.1823, norm(attn): 35.7500, norm(output): 0.4629, norm(x): 0.6013, norm(y): 0.9948, norm:0.3664, tok/sec: 186529.57, flops:195.82, batch-reuse:1
@ 4520 train 4.0652 , allloss: 4.0652, dt: 711.77ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4551, norm(x): 0.5983, norm(y): 0.9951, norm:0.4129, tok/sec: 184150.65, flops:193.32, batch-reuse:1
@ 4521 train 4.0295 , allloss: 4.0295, dt: 712.68ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4570, norm(x): 0.5971, norm(y): 0.9955, norm:0.3808, tok/sec: 183913.17, flops:193.07, batch-reuse:1
@ 4522 train 4.0753 , allloss: 4.0753, dt: 713.53ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4531, norm(x): 0.5932, norm(y): 0.9952, norm:0.3932, tok/sec: 183695.32, flops:192.84, batch-reuse:1
@ 4523 train 4.0446 , allloss: 4.0446, dt: 699.17ms, fracRes: 0.1795, norm(attn): 35.7500, norm(output): 0.4531, norm(x): 0.5941, norm(y): 0.9953, norm:0.3996, tok/sec: 187468.48, flops:196.80, batch-reuse:1
@ 4524 train 3.9693 , allloss: 3.9693, dt: 696.65ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4492, norm(x): 0.5941, norm(y): 0.9950, norm:0.3941, tok/sec: 188145.99, flops:197.52, batch-reuse:1
@ 4525 train 3.9693 , allloss: 3.9693, dt: 712.92ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5861, norm(y): 0.9949, norm:0.3745, tok/sec: 183851.91, flops:193.01, batch-reuse:1
@ 4526 train 4.0553 , allloss: 4.0553, dt: 710.65ms, fracRes: 0.1816, norm(attn): 35.7500, norm(output): 0.4609, norm(x): 0.6040, norm(y): 0.9947, norm:0.4735, tok/sec: 184440.84, flops:193.63, batch-reuse:1
@ 4527 train 3.9167 , allloss: 3.9167, dt: 708.08ms, fracRes: 0.1808, norm(attn): 35.7500, norm(output): 0.4668, norm(x): 0.6041, norm(y): 0.9948, norm:0.4360, tok/sec: 185109.20, flops:194.33, batch-reuse:1
@ 4528 train 3.9763 , allloss: 3.9763, dt: 711.62ms, fracRes: 0.1818, norm(attn): 35.7500, norm(output): 0.4551, norm(x): 0.5979, norm(y): 0.9949, norm:0.4278, tok/sec: 184187.67, flops:193.36, batch-reuse:1
@ 4529 train 3.9928 , allloss: 3.9928, dt: 697.80ms, fracRes: 0.1820, norm(attn): 35.7500, norm(output): 0.4648, norm(x): 0.6077, norm(y): 0.9952, norm:0.4781, tok/sec: 187835.56, flops:197.19, batch-reuse:1
@ 4530 train 3.9621 , allloss: 3.9621, dt: 698.94ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4512, norm(x): 0.5965, norm(y): 0.9947, norm:0.4233, tok/sec: 187530.76, flops:196.87, batch-reuse:1
@ 4531 train 3.9879 , allloss: 3.9879, dt: 709.25ms, fracRes: 0.1821, norm(attn): 35.7500, norm(output): 0.4551, norm(x): 0.5980, norm(y): 0.9948, norm:0.4673, tok/sec: 184804.92, flops:194.01, batch-reuse:1
@ 4532 train 4.0149 , allloss: 4.0149, dt: 700.12ms, fracRes: 0.1817, norm(attn): 35.7500, norm(output): 0.4512, norm(x): 0.5942, norm(y): 0.9954, norm:0.4474, tok/sec: 187214.46, flops:196.54, batch-reuse:1
@ 4533 train 4.0266 , allloss: 4.0266, dt: 697.47ms, fracRes: 0.1817, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5923, norm(y): 0.9948, norm:0.4129, tok/sec: 187925.39, flops:197.28, batch-reuse:1
@ 4534 train 4.0514 , allloss: 4.0514, dt: 701.13ms, fracRes: 0.1805, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5919, norm(y): 0.9949, norm:0.4047, tok/sec: 186944.66, flops:196.25, batch-reuse:1
@ 4535 train 4.0583 , allloss: 4.0583, dt: 702.53ms, fracRes: 0.1814, norm(attn): 36.0000, norm(output): 0.4492, norm(x): 0.5949, norm(y): 0.9950, norm:0.4259, tok/sec: 186571.42, flops:195.86, batch-reuse:1
@ 4536 train 4.0534 , allloss: 4.0534, dt: 712.88ms, fracRes: 0.1817, norm(attn): 36.0000, norm(output): 0.4492, norm(x): 0.5970, norm(y): 0.9950, norm:0.4129, tok/sec: 183861.75, flops:193.02, batch-reuse:1
@ 4537 train 3.9707 , allloss: 3.9707, dt: 712.42ms, fracRes: 0.1813, norm(attn): 36.0000, norm(output): 0.4512, norm(x): 0.5966, norm(y): 0.9954, norm:0.4065, tok/sec: 183980.50, flops:193.14, batch-reuse:1
@ 4538 train 3.9937 , allloss: 3.9937, dt: 714.40ms, fracRes: 0.1811, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5936, norm(y): 0.9956, norm:0.3973, tok/sec: 183471.37, flops:192.61, batch-reuse:1
@ 4539 train 3.9716 , allloss: 3.9716, dt: 712.55ms, fracRes: 0.1813, norm(attn): 35.7500, norm(output): 0.4551, norm(x): 0.5986, norm(y): 0.9952, norm:0.3935, tok/sec: 183948.00, flops:193.11, batch-reuse:1
@ 4540 train 3.9230 , allloss: 3.9230, dt: 697.05ms, fracRes: 0.1791, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5865, norm(y): 0.9943, norm:0.3646, tok/sec: 188039.29, flops:197.40, batch-reuse:1
@ 4541 train 3.9621 , allloss: 3.9621, dt: 712.57ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5790, norm(y): 0.9940, norm:0.4036, tok/sec: 183942.77, flops:193.10, batch-reuse:1
@ 4542 train 3.7613 , allloss: 3.7613, dt: 712.75ms, fracRes: 0.1813, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5951, norm(y): 0.9943, norm:0.4734, tok/sec: 183895.88, flops:193.05, batch-reuse:1
@ 4543 train 3.9616 , allloss: 3.9616, dt: 699.06ms, fracRes: 0.1805, norm(attn): 36.0000, norm(output): 0.4512, norm(x): 0.5954, norm(y): 0.9946, norm:0.4115, tok/sec: 187498.08, flops:196.84, batch-reuse:1
@ 4544 train 3.9937 , allloss: 3.9937, dt: 696.80ms, fracRes: 0.1808, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5919, norm(y): 0.9946, norm:0.4228, tok/sec: 188104.47, flops:197.47, batch-reuse:1
@ 4545 train 3.9596 , allloss: 3.9596, dt: 708.17ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5925, norm(y): 0.9946, norm:0.4416, tok/sec: 185086.14, flops:194.30, batch-reuse:1
@ 4546 train 3.8903 , allloss: 3.8903, dt: 711.01ms, fracRes: 0.1807, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5878, norm(y): 0.9946, norm:0.4090, tok/sec: 184345.54, flops:193.53, batch-reuse:1
@ 4547 train 3.9928 , allloss: 3.9928, dt: 710.59ms, fracRes: 0.1810, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5890, norm(y): 0.9947, norm:0.4462, tok/sec: 184455.32, flops:193.64, batch-reuse:1
@ 4548 train 4.0022 , allloss: 4.0022, dt: 705.17ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5921, norm(y): 0.9943, norm:0.3876, tok/sec: 185871.99, flops:195.13, batch-reuse:1
@ 4549 train 3.9076 , allloss: 3.9076, dt: 711.03ms, fracRes: 0.1817, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5923, norm(y): 0.9946, norm:0.4333, tok/sec: 184340.34, flops:193.52, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2773, 0.7227, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.1738, 0.0991, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6562, 0.1523, 0.1406, 0.0500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6055, 0.2119, 0.0669, 0.0669, 0.0469, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5547, 0.1641, 0.0825, 0.0674, 0.0520, 0.0796, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.2266, 0.0752, 0.0688, 0.0791, 0.1904, 0.1133, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2461, 0.1836, 0.0845, 0.0679, 0.0952, 0.1504, 0.1084, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1250, 0.1963, 0.0747, 0.0518, 0.0781, 0.2451, 0.1201, 0.0588, 0.0513, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0679, 0.1357, 0.0884, 0.0510, 0.1094, 0.1660, 0.1914, 0.0801, 0.0796, 0.0302, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0620, 0.0640, 0.0483, 0.0439, 0.0874, 0.2598, 0.1777, 0.0615, 0.1104, 0.0317, 0.0520, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0342, 0.0742, 0.0398, 0.0383, 0.0781, 0.1816, 0.1855, 0.1108, 0.1289, 0.0737, 0.0286, 0.0258, 0.0000, 0.0000, 0.0000],
        [0.1885, 0.0605, 0.0083, 0.0132, 0.0459, 0.2012, 0.2051, 0.0972, 0.0947, 0.0123, 0.0232, 0.0071, 0.0420, 0.0000, 0.0000],
        [0.0454, 0.0752, 0.0238, 0.0205, 0.0552, 0.1787, 0.1582, 0.0757, 0.1172, 0.0486, 0.0771, 0.0369, 0.0400, 0.0481, 0.0000],
        [0.0255, 0.0240, 0.0179, 0.0146, 0.0496, 0.0806, 0.1279, 0.0718, 0.2109, 0.0708, 0.0703, 0.0420, 0.0466, 0.1196, 0.0272]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0278,     -0.9258,     -1.4688,     -1.2500,     -1.1875,     -0.9141,     -0.9570,     -0.8555,     -1.0391,     -1.7500,     -1.2891,     -1.7891,     -0.6992,     -1.1328,     -1.3906],
        [     0.0295,      0.9844,     -0.1787,     -0.6172,      0.0471,      0.5234,      0.5195,      0.2988,      0.3145,     -0.0084,     -0.3516,     -0.7031,     -0.1719,     -0.1060,     -0.1729],
        [    -0.0354,     -1.4609,     -2.0312,     -2.2031,     -2.0312,     -1.9297,     -2.1250,     -1.9688,     -2.3750,     -2.6875,     -2.7188,     -2.7344,     -1.9844,     -2.9688,     -2.9375],
        [    -0.0398,     -1.5078,     -1.5781,     -2.6094,     -2.1875,     -2.5156,     -2.4375,     -2.1406,     -2.8594,     -2.7344,     -3.0000,     -2.5000,     -1.8203,     -3.1406,     -2.9219],
        [     0.0020,     -1.0469,     -2.2031,     -2.2031,     -2.5625,     -1.1641,     -1.8594,     -1.9531,     -2.7500,     -3.3750,     -2.9375,     -2.9062,     -1.8125,     -3.0781,     -2.9375],
        [     0.0160,     -1.2031,     -1.8906,     -2.0938,     -2.3594,     -1.9219,     -2.0156,     -2.0000,     -2.5312,     -3.1562,     -2.0938,     -2.5625,     -1.7031,     -2.4688,     -2.4844],
        [     0.0520,     -0.0292,     -1.1328,     -1.2188,     -1.0859,     -0.2051,     -0.7227,     -1.1719,     -1.1016,     -2.0938,     -1.7266,     -2.3906,     -1.1484,     -1.2422,     -1.2422],
        [     0.0381,     -0.2578,     -1.0312,     -1.2500,     -0.9102,     -0.4531,     -0.7812,     -1.3125,     -1.2344,     -2.0312,     -1.5234,     -1.9922,     -1.2812,     -1.0938,     -1.3203],
        [     0.0718,      0.5234,     -0.4453,     -0.8086,     -0.3984,      0.7422,      0.0309,     -0.6836,     -0.8203,     -1.8594,     -1.0078,     -1.5000,     -0.9883,     -1.0000,     -1.1719],
        [     0.0645,      0.7539,      0.3301,     -0.2207,      0.5391,      0.9570,      1.1016,      0.2285,      0.2236,     -0.7461,     -0.5703,     -0.5312,     -0.4766,     -0.1445,     -0.6055],
        [     0.0781,      0.1108,     -0.1729,     -0.2676,      0.4238,      1.5156,      1.1328,      0.0703,      0.6523,     -0.5938,     -0.0986,     -1.1562,     -0.3789,      0.1523,     -0.4551],
        [     0.0703,      0.8438,      0.2188,      0.1797,      0.8945,      1.7422,      1.7578,      1.2422,      1.3984,      0.8359,     -0.1104,     -0.2158,      0.2715,      0.6172,      0.1196],
        [     0.1338,     -1.0000,     -2.9844,     -2.5156,     -1.2812,      0.1992,      0.2197,     -0.5273,     -0.5547,     -2.5938,     -1.9609,     -3.1406,     -1.3672,     -1.7344,     -2.3750],
        [     0.1016,      0.6094,     -0.5469,     -0.6914,      0.2969,      1.4688,      1.3438,      0.6172,      1.0469,      0.1699,      0.6367,     -0.1074,     -0.0242,      0.1582,     -0.2949],
        [     0.1079,      0.0498,     -0.2461,     -0.4492,      0.7734,      1.2578,      1.7266,      1.1406,      2.2188,      1.1328,      1.1172,      0.6055,      0.7109,      1.6562,      0.1748]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3130],
        [0.2565],
        [0.1977],
        [0.2286],
        [0.1861],
        [0.1505],
        [0.1469],
        [0.1500],
        [0.0898],
        [0.1242],
        [0.0385],
        [0.1733],
        [0.1056],
        [0.0505]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9805,     0.0179,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8789,     0.0034,     0.1187,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9688,     0.0129,     0.0009,     0.0172,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0034,     0.0013,     0.0028,     0.0272,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9414,     0.0055,     0.0000,     0.0083,     0.0042,     0.0415,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6133,     0.0113,     0.0378,     0.0284,     0.0017,     0.0415,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.7461,     0.0245,     0.0047,     0.0035,     0.0374,     0.0162,     0.0510,     0.1162,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.6289,     0.0010,     0.0007,     0.0027,     0.0001,     0.0052,     0.0077,     0.3418,     0.0139,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.6289,     0.0017,     0.0007,     0.0024,     0.0005,     0.0025,     0.0095,     0.2734,     0.0157,     0.0654,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     0.4199,     0.0072,     0.0055,     0.0154,     0.0057,     0.0030,     0.3965,     0.0615,     0.0038,     0.0019,     0.0796,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0684,     0.0007,     0.0014,     0.0009,     0.0001,     0.0020,     0.0110,     0.8984,     0.0061,     0.0000,     0.0045,     0.0051,     0.0000,     0.0000],
        [    0.0001,     0.1592,     0.0041,     0.0015,     0.0007,     0.0062,     0.0027,     0.0059,     0.0172,     0.7422,     0.0005,     0.0083,     0.0009,     0.0515,     0.0000],
        [    0.0004,     0.6211,     0.0374,     0.0016,     0.0156,     0.0002,     0.0028,     0.0265,     0.0146,     0.0981,     0.0024,     0.0084,     0.0013,     0.0078,     0.1621]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0115,      0.6250,      0.3496,      0.0144,      0.2021,      0.2715,      0.3398,      0.4043,      0.3145,      0.2021,     -0.1553,      0.2676,      0.1260,      0.1367,      0.2305],
        [     0.1235,      8.3750,      7.5625,      0.9961,      3.5000,      3.5625,      3.5781,      4.8750,      3.4531,      3.8594,     -1.5156,      2.5469,      0.6133,      1.1406,      3.5781],
        [     0.1138,     11.7500,      7.7812,     16.2500,     11.3125,      6.3125,      9.0000,      6.4375,      8.6875,      6.9375,      3.4375,      5.1875,      4.1875,      6.4062,      6.8438],
        [     0.1172,     11.1875,      5.6250,      9.1875,     14.1875,      6.2188,      8.1875,      9.9375,      7.1250,      5.6875,     -0.5039,      4.2812,      3.7500,      3.6406,      6.6250],
        [     0.1865,     11.5000,      7.1875,      4.5625,      7.4688,     12.7500,      8.6875,      9.1250,      5.1875,      6.3750,     -4.2812,      6.0312,      2.2656,      2.8125,      6.1250],
        [     0.1816,     10.5625,      4.8750,      3.8906,      4.6875,      6.9688,     10.8750,      9.4375,      7.5625,      5.1562,     -1.7109,      5.5312,      1.0781,      3.9531,      5.1250],
        [     0.1885,     10.0625,      4.9375,     -0.0232,      5.3438,      4.6562,      6.9375,     13.3125,      8.3750,      5.4062,     -2.0781,      6.7812,      4.8750,      5.1875,      5.4375],
        [     0.1436,      8.6875,      4.7188,      5.9062,      5.6250,      2.8281,      6.0000,      7.8438,     12.3125,      6.7500,      1.4219,      6.3438,      4.4062,     11.2500,      5.8438],
        [     0.1230,      8.0625,      4.6875,      3.0156,      2.7344,      5.0938,      4.2500,      5.4062,      6.2188,      9.1250,      0.7656,      5.5938,      2.0469,      5.0625,      8.9375],
        [     0.0079,      8.4375,      1.9531,      1.6172,      2.9688,     -0.5820,      3.6250,      4.0000,      7.8125,      4.5938,     13.5000,      7.1250,      3.5312,      6.4688,      5.4062],
        [     0.0718,      9.7500,      3.8281,      2.9375,      4.1875,      2.6719,      4.2500,      5.5625,      8.9375,      6.0625,      7.5000,     11.2500,      5.4375,      8.4375,      7.0938],
        [     0.0327,      6.7812,      2.7188,      2.4531,      3.4844,      2.4844,      1.8359,      6.7188,      4.8750,      2.0781,      1.4062,      5.1250,     12.7500,      7.2500,      4.3750],
        [     0.1328,      9.5625,      5.0000,      5.6875,      5.2812,      3.3281,      6.0625,      7.7500,     12.1875,      7.1562,      1.3047,      6.8750,      7.0000,     15.8125,      8.5625],
        [     0.0713,      7.1562,      3.5000,      2.4688,      1.7656,      3.9062,      3.0938,      3.8594,      4.9375,      8.6875,      1.2891,      4.2188,      2.0000,      6.0312,     10.3750],
        [     0.0933,      7.5000,      4.6875,      1.5234,      3.8125,     -0.3613,      2.0938,      4.3438,      3.7500,      5.6562,      1.9375,      3.1875,      1.2969,      3.1250,      6.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3853],
        [0.3400],
        [0.2508],
        [0.2925],
        [0.3363],
        [0.2379],
        [0.2511],
        [0.2532],
        [0.2534],
        [0.2291],
        [0.2505],
        [0.2419],
        [0.1987],
        [0.1689]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0017,     0.9141,     0.0859,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0073,     0.7070,     0.2314,     0.0549,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0322,     0.4512,     0.2949,     0.0371,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.0540,     0.0713,     0.0048,     0.0024,     0.0165,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0143,     0.2275,     0.1006,     0.0069,     0.0264,     0.0012,     0.6211,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0056,     0.0215,     0.0082,     0.0205,     0.0005,     0.0688,     0.6367,     0.2373,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0076,     0.0547,     0.0359,     0.0056,     0.0120,     0.0036,     0.0001,     0.0266,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0640,     0.0908,     0.2021,     0.0170,     0.0082,     0.0859,     0.0211,     0.2197,     0.0311,     0.2598,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.1118,     0.0376,     0.0154,     0.0311,     0.0059,     0.0010,     0.0215,     0.4043,     0.0801,     0.2910,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0006,     0.0620,     0.0067,     0.0588,     0.0006,     0.2314,     0.0228,     0.5039,     0.0332,     0.0330,     0.0275,     0.0190,     0.0000,     0.0000,     0.0000],
        [    0.0239,     0.0201,     0.0114,     0.0107,     0.0012,     0.0078,     0.2031,     0.0752,     0.0029,     0.0061,     0.0011,     0.2930,     0.3438,     0.0000,     0.0000],
        [    0.0176,     0.0435,     0.0297,     0.0076,     0.0060,     0.0106,     0.0018,     0.1191,     0.1226,     0.0830,     0.0393,     0.0581,     0.2852,     0.1758,     0.0000],
        [    0.0035,     0.1133,     0.0342,     0.0157,     0.0045,     0.0306,     0.0014,     0.1465,     0.2275,     0.0339,     0.0693,     0.0076,     0.0996,     0.1602,     0.0515]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0017,     -0.0674,     -0.0444,     -0.0815,     -0.0576,     -0.0679,     -0.0430,     -0.0649,     -0.0859,     -0.0461,     -0.0815,     -0.0317,     -0.0415,     -0.0522,     -0.0593],
        [    -0.0854,      6.6875,      5.5625,      1.7891,      3.0938,      3.5312,      1.8438,      2.7188,      3.8438,      2.8594,      3.1719,      1.1328,      2.4844,      2.6250,      4.1875],
        [     0.0986,      6.4062,      4.0312,      6.1250,      3.4688,      7.0312,      4.7500,      6.5000,      6.2188,      4.2188,      5.4375,      3.5781,      4.5938,      3.2969,      4.9375],
        [    -0.1108,      4.4688,      3.3438,      1.9141,      1.2500,      2.0938,      3.0312,      1.3516,      0.4883,      0.6875,      0.9570,      1.3281,      0.9375,      0.4395,      3.3750],
        [     0.0108,      2.6562,      2.2344,      0.1572,      1.7578,     -1.8594,     -4.2500,     -0.1826,      4.6562,      1.4609,      4.8438,      0.5117,     -1.7578,      4.0625,      3.9688],
        [    -0.3477,     -3.1094,     -2.8281,     -5.5312,     -6.1875,     -4.2812,      3.0938,     -3.5938,    -10.5000,     -5.0938,     -9.2500,      0.8594,     -2.9531,     -6.9062,     -3.3906],
        [    -0.2812,      2.4844,      1.6719,     -1.0156,      0.3320,     -2.7188,      3.5000,     -1.5000,     -1.4141,     -1.6016,     -1.0938,      2.0000,     -2.7344,      0.0552,      2.1719],
        [    -0.0703,      1.2734,      0.3184,      1.2266,     -2.4844,      2.4375,      4.6562,      3.6719,     -2.0781,     -0.2539,     -2.2031,      2.2188,      3.3906,     -1.4922,     -0.0559],
        [     0.0801,      2.0625,      1.6328,     -0.2129,      0.5391,     -0.6562,     -4.2812,      1.3359,      4.8125,      1.3906,      2.9219,      0.2656,      1.6016,      4.0312,      4.6562],
        [    -0.0306,      0.3223,      1.1250,     -1.3594,     -2.0781,      0.2656,     -1.1328,      1.2031,     -0.7500,      1.3672,     -1.5000,      0.5156,      1.4766,     -0.5156,      0.7383],
        [     0.0752,      4.7500,      3.6562,      2.7656,      3.4688,      1.8125,     -0.0071,      3.0938,      6.0312,      4.4062,      5.6875,      2.2188,      1.7344,      4.5938,      4.9688],
        [     0.1406,      4.7188,      2.4844,      4.6562,      0.0222,      6.0312,      3.7188,      6.8125,      4.0938,      4.0625,      3.8906,      3.5312,      5.8750,      2.7031,      3.2500],
        [    -0.1050,     -0.2773,     -0.8438,     -0.9023,     -3.1094,     -1.2266,      2.0312,      1.0391,     -2.2188,     -1.4688,     -3.2188,      2.4062,      2.5625,     -0.7461,      1.1797],
        [     0.0322,      0.9336,      0.5586,     -0.8047,     -1.0312,     -0.4707,     -2.2656,      1.9453,      1.9688,      1.5859,      0.8320,      1.2266,      2.8125,      2.3281,      2.3438],
        [     0.0510,      3.5312,      2.3281,      1.5625,      0.2949,      2.2188,     -0.8984,      3.7969,      4.2188,      2.3281,      3.0469,      0.8281,      3.4062,      3.8750,      2.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4280],
        [0.2550],
        [0.3891],
        [0.2898],
        [0.3064],
        [0.2370],
        [0.2243],
        [0.2424],
        [0.2541],
        [0.2052],
        [0.0264],
        [0.2108],
        [0.1722],
        [0.0936]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0459,     -0.6289,     -1.2422,     -1.3750,     -1.1328,     -0.4414,     -0.4902,     -1.0234,     -1.1016,     -0.9609,     -0.7812,     -1.4844,     -1.1484,     -1.1797,     -1.4141],
        [    -1.3516,    -21.0000,    -39.5000,    -44.2500,    -36.0000,    -15.6875,    -16.7500,    -34.0000,    -35.0000,    -32.2500,    -25.5000,    -47.2500,    -38.2500,    -37.5000,    -45.5000],
        [    -0.4375,    -11.5625,    -12.6250,    -16.1250,    -14.2500,    -11.5625,    -11.6875,    -16.1250,    -11.7500,    -11.1875,     -8.6250,    -16.6250,    -15.5000,    -11.5000,    -14.8750],
        [    -0.5430,    -11.0000,    -16.0000,    -18.1250,    -15.5000,     -8.5000,     -5.8750,    -13.8125,    -14.3125,    -14.5000,    -12.0000,    -20.5000,    -14.2500,    -15.7500,    -18.5000],
        [    -1.2188,    -19.7500,    -35.5000,    -38.5000,    -31.8750,    -16.2500,    -15.9375,    -29.2500,    -31.6250,    -27.6250,    -24.7500,    -40.2500,    -31.8750,    -33.5000,    -39.2500],
        [    -1.0312,    -16.2500,    -29.0000,    -32.7500,    -26.3750,    -11.4375,    -11.0625,    -24.0000,    -26.2500,    -23.7500,    -19.5000,    -34.0000,    -26.6250,    -28.0000,    -33.5000],
        [    -1.3203,    -22.2500,    -37.5000,    -43.2500,    -35.5000,    -17.6250,    -16.6250,    -33.5000,    -33.5000,    -30.2500,    -24.1250,    -44.7500,    -35.0000,    -34.7500,    -42.0000],
        [    -1.0859,    -21.2500,    -30.7500,    -36.0000,    -30.1250,    -19.1250,    -16.6250,    -30.6250,    -28.6250,    -25.2500,    -20.0000,    -37.0000,    -30.1250,    -29.1250,    -33.5000],
        [    -1.7109,    -28.3750,    -47.2500,    -53.2500,    -44.0000,    -23.1250,    -23.2500,    -43.0000,    -42.5000,    -37.5000,    -32.0000,    -56.5000,    -45.0000,    -45.2500,    -53.2500],
        [    -0.9258,    -18.7500,    -23.3750,    -28.7500,    -24.8750,    -17.5000,    -18.2500,    -27.8750,    -22.6250,    -18.3750,    -15.5625,    -29.5000,    -26.1250,    -22.3750,    -25.8750],
        [    -1.1562,    -15.3750,    -31.3750,    -35.0000,    -28.6250,    -11.8125,    -12.6875,    -27.1250,    -28.2500,    -23.8750,    -18.3750,    -37.0000,    -28.7500,    -29.3750,    -34.7500],
        [    -1.0078,    -18.0000,    -30.6250,    -34.5000,    -28.5000,    -14.4375,    -13.3750,    -28.1250,    -27.2500,    -25.0000,    -18.2500,    -36.5000,    -30.0000,    -28.3750,    -33.7500],
        [    -1.4609,    -25.6250,    -40.7500,    -47.0000,    -39.7500,    -22.0000,    -20.0000,    -38.0000,    -36.7500,    -32.7500,    -25.1250,    -48.5000,    -38.2500,    -37.5000,    -44.2500],
        [    -1.4844,    -24.6250,    -41.5000,    -47.0000,    -38.7500,    -20.3750,    -20.0000,    -38.5000,    -37.5000,    -33.2500,    -27.2500,    -49.5000,    -40.0000,    -39.5000,    -46.7500],
        [    -0.7539,    -16.0000,    -22.8750,    -26.5000,    -22.1250,    -13.8125,    -11.8125,    -24.3750,    -21.0000,    -19.6250,    -13.8125,    -28.1250,    -24.2500,    -21.2500,    -25.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6837],
        [0.5659],
        [0.5750],
        [0.6686],
        [0.5912],
        [0.6722],
        [0.5998],
        [0.6673],
        [0.6643],
        [0.6112],
        [0.6092],
        [0.6696],
        [0.6675],
        [0.6559]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0188,     -1.9141,     -2.9844,     -2.7969,     -1.5625,     -1.8672,     -1.4453,     -2.5938,     -2.7188,     -2.6250,     -1.6562,     -2.4531,     -2.2500,     -2.8750,     -2.6094],
        [    -0.3652,    -36.2500,    -56.7500,    -53.7500,    -28.6250,    -34.0000,    -26.6250,    -49.5000,    -51.0000,    -51.2500,    -31.6250,    -48.0000,    -42.5000,    -55.7500,    -51.7500],
        [    -0.6133,    -62.7500,    -98.0000,    -92.0000,    -51.0000,    -59.5000,    -47.0000,    -84.0000,    -87.5000,    -86.0000,    -53.0000,    -80.5000,    -73.0000,    -94.0000,    -85.0000],
        [    -0.6602,    -68.0000,   -109.5000,   -100.5000,    -57.7500,    -66.0000,    -52.5000,    -91.0000,    -97.0000,    -92.5000,    -58.0000,    -87.5000,    -80.5000,   -102.0000,    -91.5000],
        [    -0.5117,    -52.7500,    -81.0000,    -76.5000,    -43.2500,    -51.7500,    -40.7500,    -72.5000,    -74.5000,    -71.5000,    -45.5000,    -67.0000,    -63.5000,    -79.5000,    -71.5000],
        [    -0.6562,    -65.0000,   -100.0000,    -95.5000,    -53.0000,    -64.5000,    -50.0000,    -90.0000,    -93.0000,    -89.5000,    -57.0000,    -83.5000,    -77.5000,   -100.0000,    -90.0000],
        [    -0.5547,    -54.5000,    -84.0000,    -79.5000,    -44.5000,    -52.2500,    -41.5000,    -73.5000,    -76.0000,    -74.0000,    -45.7500,    -69.5000,    -64.0000,    -81.5000,    -74.0000],
        [    -0.7031,    -71.0000,   -111.5000,   -105.0000,    -59.5000,    -70.0000,    -54.7500,    -97.5000,   -102.0000,    -97.0000,    -62.2500,    -93.0000,    -85.0000,   -109.5000,    -98.5000],
        [    -0.7031,    -72.0000,   -111.0000,   -105.5000,    -58.0000,    -73.0000,    -55.0000,   -101.0000,   -105.0000,   -100.0000,    -65.5000,    -92.5000,    -87.0000,   -111.5000,   -100.0000],
        [    -0.6094,    -63.2500,    -98.5000,    -93.0000,    -52.7500,    -63.5000,    -48.5000,    -87.5000,    -91.5000,    -86.5000,    -57.0000,    -82.0000,    -76.0000,    -97.0000,    -88.0000],
        [    -0.4727,    -47.5000,    -74.5000,    -70.5000,    -40.2500,    -47.7500,    -37.0000,    -66.5000,    -69.5000,    -65.0000,    -42.5000,    -62.5000,    -58.2500,    -74.0000,    -67.0000],
        [    -0.5547,    -58.7500,    -89.5000,    -85.0000,    -46.2500,    -57.2500,    -43.2500,    -81.5000,    -82.5000,    -81.0000,    -51.5000,    -75.0000,    -70.0000,    -88.0000,    -80.5000],
        [    -0.7305,    -72.5000,   -113.5000,   -107.5000,    -61.2500,    -71.5000,    -56.0000,   -100.5000,   -104.5000,    -99.5000,    -63.2500,    -95.0000,    -87.5000,   -111.5000,   -101.0000],
        [    -0.7070,    -74.5000,   -113.0000,   -107.0000,    -56.7500,    -73.0000,    -54.5000,   -104.0000,   -105.5000,   -102.0000,    -67.0000,    -95.0000,    -89.5000,   -113.0000,   -102.0000],
        [    -0.4805,    -49.7500,    -75.0000,    -70.0000,    -36.5000,    -46.5000,    -34.7500,    -67.5000,    -67.5000,    -68.0000,    -42.7500,    -62.5000,    -57.0000,    -72.5000,    -67.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9344],
        [0.9226],
        [0.8857],
        [0.9198],
        [0.8735],
        [0.9167],
        [0.6867],
        [0.9188],
        [0.9198],
        [0.9142],
        [0.8149],
        [0.9172],
        [0.9222],
        [0.7764]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0081,     0.9688,     0.0220,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0025,     0.9961,     0.0008,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9141,     0.0811,     0.0022,     0.0005,     0.0016,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0033,     0.0000,     0.0000,     0.0001,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0004,     0.0004,     0.0000,     0.0114,     0.8086,     0.1797,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0026,     0.0000,     0.0000,     0.0000,     0.9844,     0.0107,     0.0033,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     0.8477,     0.0002,     0.0012,     0.0001,     0.1416,     0.0042,     0.0030,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.2871,     0.0002,     0.0048,     0.0008,     0.5703,     0.1216,     0.0137,     0.0002,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7617,     0.0001,     0.0030,     0.0001,     0.2139,     0.0136,     0.0047,     0.0007,     0.0006,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.2383,     0.0000,     0.0034,     0.0033,     0.6562,     0.0840,     0.0087,     0.0016,     0.0023,     0.0008,     0.0027,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0036,     0.0001,     0.0001,     0.0014,     0.9336,     0.0483,     0.0104,     0.0002,     0.0001,     0.0001,     0.0000,     0.0006,     0.0000,     0.0000],
        [    0.0002,     0.9180,     0.0003,     0.0028,     0.0001,     0.0542,     0.0029,     0.0020,     0.0016,     0.0007,     0.0033,     0.0121,     0.0000,     0.0002,     0.0000],
        [    0.0001,     0.2715,     0.0002,     0.0084,     0.0072,     0.5273,     0.1650,     0.0063,     0.0015,     0.0060,     0.0020,     0.0042,     0.0000,     0.0001,     0.0005]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0026,      0.1816,     -0.0452,      0.0708,     -0.0118,      0.1011,      0.0417,      0.0396,      0.0623,      0.0074,      0.0549,      0.0850,     -0.1533,      0.0119,      0.0189],
        [     0.1016,     14.1875,      5.0000,      7.6875,      5.2812,     12.6250,      9.6250,      8.8125,      6.7812,      8.3750,      6.1875,      9.6875,      1.1953,      2.7031,      4.5938],
        [     0.0500,      4.8438,      1.0547,      1.8750,      1.8828,      4.8125,      4.0312,      3.1406,      0.4707,      1.5547,      0.1182,      2.9688,     -0.4121,     -2.4062,     -1.4219],
        [     0.0608,      6.0312,     -1.0469,     -1.2344,     -0.0233,      7.4062,      4.4688,      2.2812,     -0.6992,      0.0532,     -0.0640,     -0.4238,     -2.7031,     -4.1250,     -2.6562],
        [     0.0184,     -2.4062,     -6.0000,     -7.5312,     -6.3438,     -2.0312,     -4.3750,     -6.0625,     -5.5625,     -8.3125,     -4.1875,     -8.0625,     -7.8125,     -6.0000,     -6.3438],
        [     0.0659,      9.9375,      4.8750,      2.9375,      6.0625,     15.6875,     11.6875,     10.1250,      4.0938,      6.0000,      3.3750,      5.0000,      5.4375,     -1.7891,     -0.1426],
        [    -0.0010,      0.8750,      1.0312,     -1.2422,      4.3125,      8.5625,      7.0625,      4.7188,     -0.2773,      1.0781,     -0.9492,     -1.6484,      5.3125,     -3.9688,     -3.4688],
        [     0.0996,     10.8125,      2.5469,      4.4062,      6.1250,     16.7500,     12.1875,     11.0000,      4.0625,      5.0625,      3.6406,      5.3750,      3.4844,     -2.3594,     -0.1465],
        [     0.0923,      7.7188,     -0.5859,      1.1797,     -1.2031,      5.9375,      2.4062,      2.0625,      1.4922,     -0.5859,      1.7344,      3.0938,     -5.3125,     -1.4219,     -0.3594],
        [     0.0796,      8.3125,      1.0391,      4.2188,      2.4688,      9.0000,      7.4688,      5.2812,      1.1250,      3.0625,      2.0938,      5.4688,     -0.9531,     -2.1719,      0.8125],
        [     0.0991,     12.0000,      3.3125,      6.4688,      3.4688,     10.7500,      7.9688,      6.9062,      4.9688,      4.8750,      4.6562,      7.8750,     -0.8906,      1.6172,      3.3281],
        [     0.0869,      8.1250,     -0.3711,      3.9062,      3.8594,      9.1875,      7.0938,      4.8438,      3.1094,      3.5156,      2.3906,      3.6875,     -1.5859,     -0.8711,      0.1992],
        [     0.0371,      3.2188,     -0.5703,     -0.9922,      2.2812,      8.7500,      5.8125,      4.2812,      0.1504,     -0.7109,     -0.2637,     -1.2422,      1.3828,     -3.5938,     -3.1562],
        [     0.0801,      8.7500,      0.6914,      2.9531,     -0.6953,      5.9062,      3.0000,      2.6250,      2.4219,      1.5234,      3.1406,      4.4375,     -4.5312,      0.3086,      1.9297],
        [     0.0654,      7.6250,      0.2871,      4.1250,      3.9844,      8.3125,      7.1250,      3.8594,      2.4375,      3.8125,      2.7031,      3.4531,     -1.1719,     -0.4707,      1.3359]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2103],
        [0.0403],
        [0.1053],
        [0.1475],
        [0.0965],
        [0.1514],
        [0.0792],
        [0.0817],
        [0.0671],
        [0.0821],
        [0.0012],
        [0.0928],
        [0.0834],
        [0.0024]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4043,     0.5938,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.3965,     0.6016,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3750,     0.5625,     0.0010,     0.0630,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.3555,     0.5547,     0.0026,     0.0801,     0.0088,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2275,     0.3398,     0.0005,     0.0361,     0.0022,     0.3926,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2070,     0.2988,     0.0004,     0.0254,     0.0015,     0.2988,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1245,     0.1875,     0.0002,     0.0151,     0.0008,     0.1904,     0.1030,     0.3789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1094,     0.1650,     0.0002,     0.0134,     0.0008,     0.1680,     0.0889,     0.3203,     0.1338,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0043,     0.0066,     0.0000,     0.0004,     0.0000,     0.0062,     0.0035,     0.0130,     0.0054,     0.9609,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0077,     0.0114,     0.0000,     0.0013,     0.0001,     0.0135,     0.0071,     0.0238,     0.0104,     0.9180,     0.0063,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0055,     0.0079,     0.0000,     0.0006,     0.0000,     0.0079,     0.0044,     0.0157,     0.0067,     0.9414,     0.0033,     0.0076,     0.0000],
        [    0.0000,     0.0000,     0.0022,     0.0034,     0.0000,     0.0002,     0.0000,     0.0032,     0.0018,     0.0067,     0.0028,     0.4941,     0.0013,     0.0031,     0.4824]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1113,      0.1729,      0.1680,      0.1436,      0.1719,      0.1533,      0.1777,      0.1748,      0.1777,      0.1719,      0.1846,      0.1738,      0.1748,      0.1846],
        [    -0.1172,     20.2500,     27.5000,     27.7500,     23.1250,     26.0000,     24.0000,     27.7500,     27.3750,     28.1250,     27.6250,     31.0000,     27.0000,     27.7500,     31.0000],
        [    -0.1660,     29.7500,     40.7500,     41.2500,     34.2500,     38.7500,     35.7500,     41.5000,     40.7500,     42.0000,     41.0000,     46.0000,     40.5000,     41.2500,     46.0000],
        [    -0.1562,     26.5000,     36.2500,     36.7500,     30.3750,     34.5000,     31.7500,     36.7500,     36.2500,     37.2500,     36.5000,     41.0000,     36.0000,     36.7500,     41.0000],
        [    -0.1357,     23.1250,     31.6250,     32.0000,     26.6250,     30.0000,     27.7500,     32.0000,     31.5000,     32.5000,     31.8750,     35.7500,     31.5000,     32.0000,     35.7500],
        [    -0.1533,     26.5000,     36.5000,     37.0000,     30.5000,     34.7500,     32.0000,     37.0000,     36.2500,     37.5000,     36.7500,     41.2500,     36.2500,     37.0000,     41.2500],
        [    -0.1328,     22.2500,     30.5000,     31.0000,     25.6250,     29.0000,     26.8750,     31.1250,     30.5000,     31.5000,     30.8750,     34.7500,     30.5000,     31.0000,     34.7500],
        [    -0.1582,     27.1250,     37.2500,     37.7500,     31.1250,     35.5000,     32.5000,     37.7500,     37.2500,     38.2500,     37.5000,     42.0000,     37.0000,     37.7500,     42.0000],
        [    -0.1689,     28.6250,     38.7500,     39.2500,     32.5000,     36.7500,     34.0000,     39.2500,     38.7500,     40.0000,     39.0000,     44.0000,     38.5000,     39.2500,     43.7500],
        [    -0.1738,     29.5000,     40.0000,     40.5000,     33.5000,     38.0000,     35.0000,     40.5000,     39.7500,     41.2500,     40.2500,     45.2500,     39.5000,     40.5000,     45.2500],
        [    -0.1709,     29.1250,     39.7500,     40.0000,     33.2500,     37.5000,     34.7500,     40.0000,     39.5000,     40.7500,     39.7500,     44.7500,     39.2500,     40.0000,     44.7500],
        [    -0.1836,     30.3750,     41.0000,     41.5000,     34.5000,     38.7500,     35.7500,     41.5000,     40.7500,     42.2500,     41.2500,     46.5000,     40.5000,     41.5000,     46.5000],
        [    -0.1543,     26.6250,     36.5000,     37.0000,     30.6250,     34.7500,     32.0000,     37.2500,     36.5000,     37.7500,     37.0000,     41.5000,     36.5000,     37.0000,     41.2500],
        [    -0.1738,     29.5000,     40.0000,     40.2500,     33.5000,     37.7500,     34.7500,     40.2500,     39.7500,     41.0000,     40.0000,     45.0000,     39.2500,     40.2500,     45.0000],
        [    -0.1836,     30.3750,     41.0000,     41.5000,     34.5000,     38.7500,     35.7500,     41.5000,     41.0000,     42.2500,     41.2500,     46.5000,     40.5000,     41.5000,     46.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2520,     0.7500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2383,     0.7539,     0.0076,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0116,     0.0364,     0.0002,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0195,     0.0476,     0.0004,     0.9336,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0008,     0.0025,     0.0000,     0.0713,     0.0000,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0015,     0.0000,     0.0195,     0.9805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0012,     0.0000,     0.0159,     0.6836,     0.3008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0011,     0.0000,     0.0144,     0.6523,     0.2617,     0.0693,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0079,     0.4082,     0.1641,     0.0388,     0.3809,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0010,     0.0000,     0.0113,     0.3945,     0.1729,     0.0488,     0.3691,     0.0010,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0062,     0.3047,     0.1133,     0.0299,     0.2432,     0.0005,     0.3027,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0003,     0.0000,     0.0045,     0.2285,     0.0923,     0.0217,     0.2129,     0.0003,     0.2305,     0.2090]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,      0.0515,      0.1465,      0.1543,      0.1211,      0.1621,      0.1147,      0.1768,      0.1826,      0.1816,      0.1787,      0.1777,      0.1602,      0.1855,      0.1777],
        [    -0.0117,     26.8750,     38.0000,     38.7500,     35.7500,     40.7500,     34.0000,     42.5000,     44.7500,     44.0000,     43.2500,     44.2500,     41.0000,     44.5000,     44.2500],
        [    -0.0035,     38.5000,     55.5000,     56.5000,     51.7500,     59.5000,     49.2500,     62.0000,     65.0000,     64.5000,     63.2500,     65.0000,     59.7500,     65.0000,     65.0000],
        [     0.0003,     43.5000,     61.7500,     62.7500,     57.2500,     66.0000,     54.7500,     68.5000,     72.0000,     71.5000,     70.0000,     72.0000,     66.0000,     72.0000,     72.0000],
        [    -0.0076,     40.0000,     55.7500,     57.0000,     52.2500,     60.0000,     49.7500,     62.2500,     65.5000,     64.5000,     63.5000,     65.5000,     60.0000,     65.5000,     65.5000],
        [    -0.0030,     42.7500,     60.7500,     62.0000,     56.5000,     65.0000,     54.0000,     67.5000,     71.5000,     70.5000,     69.0000,     71.0000,     65.5000,     71.5000,     71.0000],
        [    -0.0001,     39.2500,     55.2500,     56.0000,     51.2500,     59.0000,     49.0000,     61.2500,     64.5000,     63.7500,     62.5000,     64.5000,     59.0000,     64.5000,     64.5000],
        [    -0.0028,     43.7500,     62.2500,     63.2500,     57.7500,     66.5000,     55.2500,     69.0000,     73.0000,     72.0000,     70.5000,     73.0000,     66.5000,     73.0000,     72.5000],
        [    -0.0082,     45.5000,     64.0000,     65.5000,     59.7500,     68.5000,     57.0000,     71.5000,     75.0000,     74.0000,     73.0000,     75.0000,     69.0000,     75.0000,     75.0000],
        [    -0.0048,     45.5000,     64.0000,     65.0000,     59.5000,     68.5000,     56.7500,     71.0000,     75.0000,     74.0000,     73.0000,     75.0000,     68.5000,     75.0000,     75.0000],
        [    -0.0044,     45.0000,     63.7500,     65.0000,     59.2500,     68.5000,     56.5000,     71.0000,     74.5000,     74.0000,     72.5000,     74.5000,     68.5000,     74.5000,     74.5000],
        [    -0.0085,     47.7500,     67.0000,     68.5000,     62.7500,     72.0000,     59.7500,     74.5000,     78.5000,     77.5000,     76.5000,     78.5000,     72.0000,     78.5000,     78.5000],
        [    -0.0040,     43.0000,     60.7500,     61.7500,     56.5000,     65.0000,     54.0000,     67.5000,     71.0000,     70.5000,     69.0000,     71.0000,     65.0000,     71.0000,     71.0000],
        [    -0.0082,     45.7500,     64.0000,     65.5000,     60.0000,     69.0000,     57.0000,     71.5000,     75.5000,     74.5000,     73.0000,     75.0000,     69.0000,     75.5000,     75.0000],
        [    -0.0085,     47.7500,     67.0000,     68.5000,     62.5000,     72.0000,     59.7500,     74.5000,     78.5000,     77.5000,     76.0000,     78.5000,     72.0000,     78.5000,     78.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5312,     0.4668,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3535,     0.3105,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2539,     0.2227,     0.2422,     0.2793,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2041,     0.1787,     0.1934,     0.2246,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1621,     0.1416,     0.1543,     0.1787,     0.1592,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1387,     0.1216,     0.1318,     0.1523,     0.1357,     0.1748,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1211,     0.1060,     0.1147,     0.1328,     0.1182,     0.1523,     0.1250,     0.1299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1094,     0.0962,     0.1040,     0.1206,     0.1074,     0.1377,     0.1133,     0.1177,     0.0942,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0991,     0.0869,     0.0942,     0.1089,     0.0972,     0.1250,     0.1025,     0.1064,     0.0854,     0.0938,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0898,     0.0786,     0.0854,     0.0991,     0.0884,     0.1133,     0.0933,     0.0967,     0.0776,     0.0854,     0.0928,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0820,     0.0718,     0.0781,     0.0903,     0.0806,     0.1035,     0.0850,     0.0884,     0.0708,     0.0776,     0.0850,     0.0869,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0669,     0.0728,     0.0840,     0.0747,     0.0962,     0.0791,     0.0820,     0.0659,     0.0723,     0.0791,     0.0806,     0.0698,     0.0000],
        [    0.0000,     0.0708,     0.0620,     0.0674,     0.0781,     0.0693,     0.0894,     0.0732,     0.0762,     0.0610,     0.0669,     0.0732,     0.0747,     0.0649,     0.0732]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.2354,      0.2344,      0.2354,      0.2354,      0.2354,      0.2363,      0.2354,      0.2354,      0.2344,      0.2344,      0.2354,      0.2354,      0.2344,      0.2354],
        [    -0.0342,     39.5000,     39.5000,     39.5000,     39.7500,     39.5000,     39.7500,     39.5000,     39.7500,     39.5000,     39.5000,     39.5000,     39.7500,     39.5000,     39.5000],
        [    -0.0342,     39.7500,     39.7500,     39.7500,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     39.7500,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0342,     40.0000,     39.7500,     39.7500,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     39.7500,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0344,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.2500,     40.2500,     40.0000,     40.0000,     40.2500,     40.2500,     40.0000,     40.2500],
        [    -0.0342,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0344,     40.2500,     40.2500,     40.2500,     40.5000,     40.2500,     40.5000,     40.2500,     40.5000,     40.2500,     40.2500,     40.2500,     40.5000,     40.2500,     40.2500],
        [    -0.0344,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000],
        [    -0.0344,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.2500,     40.2500,     40.0000,     40.0000,     40.2500,     40.2500,     40.0000,     40.2500],
        [    -0.0342,     39.7500,     39.7500,     39.7500,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     39.7500,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0342,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0342,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000],
        [    -0.0344,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.0000],
        [    -0.0342,     40.0000,     39.7500,     39.7500,     40.0000,     39.7500,     40.0000,     40.0000,     40.0000,     39.7500,     39.7500,     40.0000,     40.0000,     39.7500,     40.0000],
        [    -0.0342,     40.0000,     40.0000,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.2500,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000,     40.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4980,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3320,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2490,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1992,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1660,     0.1670,     0.1660,     0.1670,     0.1660,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1436,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1245,     0.1250,     0.1250,     0.1250,     0.1250,     0.1260,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1108,     0.1108,     0.1113,     0.1108,     0.1118,     0.1113,     0.1108,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.1001,     0.1001,     0.1001,     0.1001,     0.1006,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0908,     0.0908,     0.0908,     0.0908,     0.0913,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0835,     0.0830,     0.0835,     0.0830,     0.0840,     0.0835,     0.0830,     0.0835,     0.0830,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0767,     0.0767,     0.0771,     0.0767,     0.0776,     0.0771,     0.0767,     0.0767,     0.0767,     0.0771,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586,      0.0586],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750],
        [     0.0068,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750,     24.3750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.4980,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3359,     0.3320,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2520,     0.2490,     0.2490,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2012,     0.1992,     0.1992,     0.2012,     0.1992,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1660,     0.1660,     0.1670,     0.1660,     0.1680,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1416,     0.1416,     0.1436,     0.1416,     0.1436,     0.1436,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1245,     0.1245,     0.1250,     0.1245,     0.1260,     0.1260,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1108,     0.1108,     0.1113,     0.1108,     0.1123,     0.1118,     0.1108,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.0996,     0.0996,     0.1006,     0.0996,     0.1011,     0.1006,     0.0996,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0913,     0.0903,     0.0903,     0.0913,     0.0903,     0.0918,     0.0913,     0.0903,     0.0903,     0.0903,     0.0913,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0830,     0.0830,     0.0835,     0.0830,     0.0840,     0.0840,     0.0830,     0.0830,     0.0830,     0.0840,     0.0840,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0767,     0.0771,     0.0767,     0.0776,     0.0771,     0.0767,     0.0767,     0.0767,     0.0771,     0.0771,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0713,     0.0713,     0.0718,     0.0713,     0.0723,     0.0718,     0.0713,     0.0713,     0.0713,     0.0718,     0.0718,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099,     0.1099],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000],
        [    0.0205,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000,    26.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.5000, 0.5000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3340, 0.3340, 0.3340, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2500, 0.2500, 0.2500, 0.2500, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2002, 0.2002, 0.2002, 0.2002, 0.2002, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1670, 0.1670, 0.1670, 0.1670, 0.1670, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.1426, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.1250, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.1113, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.1001, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0908, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0835, 0.0000, 0.0000],
        [0.0000, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0771, 0.0000],
        [0.0000, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0011,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508,     0.5508],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000],
        [    0.7148,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000,   374.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
-
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
---------------
@ 4550 train 4.0115 , allloss: 4.0115, dt: 1171.09ms, fracRes: 0.1824, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5911, norm(y): 0.9945, norm:0.4400, tok/sec: 111922.91, flops:117.50, batch-reuse:1
@ 4551 train 3.8994 , allloss: 3.8994, dt: 708.43ms, fracRes: 0.1816, norm(attn): 36.0000, norm(output): 0.4531, norm(x): 0.5965, norm(y): 0.9948, norm:0.4095, tok/sec: 185017.37, flops:194.23, batch-reuse:1
@ 4552 train 4.0395 , allloss: 4.0395, dt: 705.12ms, fracRes: 0.1800, norm(attn): 36.0000, norm(output): 0.4492, norm(x): 0.5904, norm(y): 0.9947, norm:0.3910, tok/sec: 185887.39, flops:195.14, batch-reuse:1
@ 4553 train 3.8769 , allloss: 3.8769, dt: 703.30ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5861, norm(y): 0.9942, norm:0.3778, tok/sec: 186367.63, flops:195.65, batch-reuse:1
@ 4554 train 4.1052 , allloss: 4.1052, dt: 697.21ms, fracRes: 0.1787, norm(attn): 36.0000, norm(output): 0.4492, norm(x): 0.5897, norm(y): 0.9952, norm:0.4571, tok/sec: 187994.47, flops:197.36, batch-reuse:1
@ 4555 train 3.9657 , allloss: 3.9657, dt: 712.61ms, fracRes: 0.1803, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5925, norm(y): 0.9942, norm:0.4728, tok/sec: 183933.04, flops:193.09, batch-reuse:1
@ 4556 train 4.0708 , allloss: 4.0708, dt: 696.41ms, fracRes: 0.1797, norm(attn): 36.0000, norm(output): 0.4570, norm(x): 0.6016, norm(y): 0.9955, norm:0.4517, tok/sec: 188210.73, flops:197.58, batch-reuse:1
@ 4557 train 3.8948 , allloss: 3.8948, dt: 704.61ms, fracRes: 0.1777, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5883, norm(y): 0.9943, norm:0.5611, tok/sec: 186020.10, flops:195.28, batch-reuse:1
@ 4558 train 3.9057 , allloss: 3.9057, dt: 703.31ms, fracRes: 0.1778, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5804, norm(y): 0.9940, norm:0.4415, tok/sec: 186364.92, flops:195.65, batch-reuse:1
@ 4559 train 3.9869 , allloss: 3.9869, dt: 700.44ms, fracRes: 0.1796, norm(attn): 36.0000, norm(output): 0.4414, norm(x): 0.5846, norm(y): 0.9944, norm:0.4695, tok/sec: 187127.15, flops:196.45, batch-reuse:1
@ 4560 train 3.9893 , allloss: 3.9893, dt: 696.97ms, fracRes: 0.1790, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5825, norm(y): 0.9949, norm:0.5420, tok/sec: 188059.75, flops:197.43, batch-reuse:1
@ 4561 train 4.0890 , allloss: 4.0890, dt: 699.25ms, fracRes: 0.1801, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5812, norm(y): 0.9941, norm:0.4650, tok/sec: 187446.94, flops:196.78, batch-reuse:1
@ 4562 train 4.0419 , allloss: 4.0419, dt: 691.95ms, fracRes: 0.1801, norm(attn): 36.0000, norm(output): 0.4414, norm(x): 0.5878, norm(y): 0.9939, norm:0.4958, tok/sec: 189425.37, flops:198.86, batch-reuse:1
@ 4563 train 3.9836 , allloss: 3.9836, dt: 703.39ms, fracRes: 0.1804, norm(attn): 35.7500, norm(output): 0.4492, norm(x): 0.5962, norm(y): 0.9938, norm:0.4154, tok/sec: 186342.17, flops:195.62, batch-reuse:1
@ 4564 train 3.9894 , allloss: 3.9894, dt: 692.95ms, fracRes: 0.1796, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5903, norm(y): 0.9942, norm:0.4120, tok/sec: 189151.05, flops:198.57, batch-reuse:1
@ 4565 train 3.9499 , allloss: 3.9499, dt: 705.08ms, fracRes: 0.1797, norm(attn): 36.0000, norm(output): 0.4434, norm(x): 0.5884, norm(y): 0.9945, norm:0.3859, tok/sec: 185896.00, flops:195.15, batch-reuse:1
@ 4566 train 3.9556 , allloss: 3.9556, dt: 704.88ms, fracRes: 0.1794, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5789, norm(y): 0.9941, norm:0.3760, tok/sec: 185950.20, flops:195.21, batch-reuse:1
@ 4567 train 3.9638 , allloss: 3.9638, dt: 698.06ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5900, norm(y): 0.9942, norm:0.4058, tok/sec: 187765.57, flops:197.12, batch-reuse:1
@ 4568 train 3.9573 , allloss: 3.9573, dt: 704.92ms, fracRes: 0.1776, norm(attn): 36.0000, norm(output): 0.4512, norm(x): 0.5940, norm(y): 0.9938, norm:0.4295, tok/sec: 185939.00, flops:195.20, batch-reuse:1
@ 4569 train 3.9392 , allloss: 3.9392, dt: 708.99ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5901, norm(y): 0.9941, norm:0.4104, tok/sec: 184872.41, flops:194.08, batch-reuse:1
@ 4570 train 3.9248 , allloss: 3.9248, dt: 702.06ms, fracRes: 0.1799, norm(attn): 36.0000, norm(output): 0.4434, norm(x): 0.5882, norm(y): 0.9942, norm:0.4135, tok/sec: 186696.11, flops:195.99, batch-reuse:1
@ 4571 train 4.0859 , allloss: 4.0859, dt: 687.08ms, fracRes: 0.1791, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5847, norm(y): 0.9948, norm:0.4286, tok/sec: 190766.15, flops:200.27, batch-reuse:1
@ 4572 train 3.9488 , allloss: 3.9488, dt: 696.06ms, fracRes: 0.1802, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5901, norm(y): 0.9940, norm:0.3999, tok/sec: 188305.04, flops:197.68, batch-reuse:1
@ 4573 train 3.9684 , allloss: 3.9684, dt: 705.51ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5900, norm(y): 0.9940, norm:0.4006, tok/sec: 185783.17, flops:195.04, batch-reuse:1
@ 4574 train 3.9268 , allloss: 3.9268, dt: 701.52ms, fracRes: 0.1792, norm(attn): 36.0000, norm(output): 0.4590, norm(x): 0.5999, norm(y): 0.9940, norm:0.4722, tok/sec: 186840.20, flops:196.15, batch-reuse:1
@ 4575 train 3.9760 , allloss: 3.9760, dt: 702.31ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4414, norm(x): 0.5860, norm(y): 0.9935, norm:0.4283, tok/sec: 186629.56, flops:195.92, batch-reuse:1
@ 4576 train 3.9551 , allloss: 3.9551, dt: 702.38ms, fracRes: 0.1805, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5909, norm(y): 0.9934, norm:0.3982, tok/sec: 186611.19, flops:195.90, batch-reuse:1
@ 4577 train 3.9248 , allloss: 3.9248, dt: 950.15ms, fracRes: 0.1816, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.5946, norm(y): 0.9942, norm:0.4632, tok/sec: 137948.78, flops:144.82, batch-reuse:1
@ 4578 train 3.9258 , allloss: 3.9258, dt: 694.16ms, fracRes: 0.1803, norm(attn): 36.0000, norm(output): 0.4434, norm(x): 0.5870, norm(y): 0.9936, norm:0.4102, tok/sec: 188822.00, flops:198.23, batch-reuse:1
@ 4579 train 3.9083 , allloss: 3.9083, dt: 699.50ms, fracRes: 0.1814, norm(attn): 36.0000, norm(output): 0.4492, norm(x): 0.5922, norm(y): 0.9933, norm:0.4458, tok/sec: 187378.26, flops:196.71, batch-reuse:1
@ 4580 train 4.0934 , allloss: 4.0934, dt: 706.51ms, fracRes: 0.1801, norm(attn): 36.0000, norm(output): 0.4434, norm(x): 0.5876, norm(y): 0.9936, norm:0.3961, tok/sec: 185520.36, flops:194.76, batch-reuse:1
@ 4581 train 3.8803 , allloss: 3.8803, dt: 707.93ms, fracRes: 0.1803, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5904, norm(y): 0.9938, norm:0.4533, tok/sec: 185147.42, flops:194.37, batch-reuse:1
@ 4582 train 3.8802 , allloss: 3.8802, dt: 714.49ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5914, norm(y): 0.9947, norm:0.4157, tok/sec: 183447.68, flops:192.58, batch-reuse:1
@ 4583 train 4.0184 , allloss: 4.0184, dt: 702.56ms, fracRes: 0.1785, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5866, norm(y): 0.9944, norm:0.4993, tok/sec: 186564.71, flops:195.86, batch-reuse:1
@ 4584 train 4.0341 , allloss: 4.0341, dt: 687.94ms, fracRes: 0.1778, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5864, norm(y): 0.9945, norm:0.3811, tok/sec: 190527.95, flops:200.02, batch-reuse:1
@ 4585 train 3.7659 , allloss: 3.7659, dt: 691.18ms, fracRes: 0.1780, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5827, norm(y): 0.9935, norm:0.4144, tok/sec: 189634.53, flops:199.08, batch-reuse:1
@ 4586 train 3.8388 , allloss: 3.8388, dt: 701.79ms, fracRes: 0.1778, norm(attn): 36.0000, norm(output): 0.4434, norm(x): 0.5807, norm(y): 0.9929, norm:0.4072, tok/sec: 186768.79, flops:196.07, batch-reuse:1
@ 4587 train 3.8308 , allloss: 3.8308, dt: 707.70ms, fracRes: 0.1791, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5876, norm(y): 0.9925, norm:0.4374, tok/sec: 185208.54, flops:194.43, batch-reuse:1
@ 4588 train 3.8545 , allloss: 3.8545, dt: 712.12ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5885, norm(y): 0.9927, norm:0.4369, tok/sec: 184057.74, flops:193.22, batch-reuse:1
@ 4589 train 3.8057 , allloss: 3.8057, dt: 701.29ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5807, norm(y): 0.9925, norm:0.3861, tok/sec: 186899.98, flops:196.21, batch-reuse:1
@ 4590 train 3.7471 , allloss: 3.7471, dt: 701.07ms, fracRes: 0.1787, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5762, norm(y): 0.9923, norm:0.4674, tok/sec: 186960.30, flops:196.27, batch-reuse:1
@ 4591 train 3.8087 , allloss: 3.8087, dt: 700.51ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.5824, norm(y): 0.9921, norm:0.4324, tok/sec: 187108.49, flops:196.43, batch-reuse:1
@ 4592 train 3.9572 , allloss: 3.9572, dt: 706.86ms, fracRes: 0.1781, norm(attn): 36.0000, norm(output): 0.4512, norm(x): 0.5919, norm(y): 0.9929, norm:0.4396, tok/sec: 185427.43, flops:194.66, batch-reuse:1
@ 4593 train 3.7681 , allloss: 3.7681, dt: 705.78ms, fracRes: 0.1793, norm(attn): 35.7500, norm(output): 0.4492, norm(x): 0.5904, norm(y): 0.9931, norm:0.4065, tok/sec: 185712.38, flops:194.96, batch-reuse:1
@ 4594 train 3.9183 , allloss: 3.9183, dt: 704.33ms, fracRes: 0.1786, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5725, norm(y): 0.9928, norm:0.4282, tok/sec: 186095.85, flops:195.36, batch-reuse:1
@ 4595 train 3.8493 , allloss: 3.8493, dt: 703.03ms, fracRes: 0.1793, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5782, norm(y): 0.9930, norm:0.4157, tok/sec: 186438.36, flops:195.72, batch-reuse:1
@ 4596 train 3.8699 , allloss: 3.8699, dt: 706.11ms, fracRes: 0.1788, norm(attn): 35.7500, norm(output): 0.4492, norm(x): 0.5922, norm(y): 0.9929, norm:0.4501, tok/sec: 185625.41, flops:194.87, batch-reuse:1
@ 4597 train 3.8599 , allloss: 3.8599, dt: 703.67ms, fracRes: 0.1784, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5805, norm(y): 0.9921, norm:0.4168, tok/sec: 186270.20, flops:195.55, batch-reuse:1
@ 4598 train 3.8053 , allloss: 3.8053, dt: 698.12ms, fracRes: 0.1778, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5728, norm(y): 0.9918, norm:0.5209, tok/sec: 187750.31, flops:197.10, batch-reuse:1
@ 4599 train 3.8631 , allloss: 3.8631, dt: 708.32ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5809, norm(y): 0.9927, norm:0.4201, tok/sec: 185047.20, flops:194.26, batch-reuse:1
@ 4600 train 3.8031 , allloss: 3.8031, dt: 698.61ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5913, norm(y): 0.9926, norm:0.4138, tok/sec: 187618.25, flops:196.96, batch-reuse:1
@ 4601 train 3.8207 , allloss: 3.8207, dt: 705.78ms, fracRes: 0.1794, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5799, norm(y): 0.9920, norm:0.3959, tok/sec: 185711.88, flops:194.96, batch-reuse:1
@ 4602 train 3.7316 , allloss: 3.7316, dt: 697.31ms, fracRes: 0.1783, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5762, norm(y): 0.9915, norm:0.4083, tok/sec: 187968.89, flops:197.33, batch-reuse:1
@ 4603 train 3.7404 , allloss: 3.7404, dt: 706.04ms, fracRes: 0.1773, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5734, norm(y): 0.9917, norm:0.3798, tok/sec: 185643.90, flops:194.89, batch-reuse:1
@ 4604 train 3.8792 , allloss: 3.8792, dt: 694.94ms, fracRes: 0.1780, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5822, norm(y): 0.9930, norm:0.3687, tok/sec: 188607.77, flops:198.00, batch-reuse:1
@ 4605 train 3.8970 , allloss: 3.8970, dt: 710.28ms, fracRes: 0.1783, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5881, norm(y): 0.9933, norm:0.4448, tok/sec: 184534.58, flops:193.72, batch-reuse:1
@ 4606 train 3.8223 , allloss: 3.8223, dt: 686.19ms, fracRes: 0.1812, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5845, norm(y): 0.9930, norm:0.4061, tok/sec: 191013.85, flops:200.53, batch-reuse:1
@ 4607 train 4.0126 , allloss: 4.0126, dt: 697.47ms, fracRes: 0.1835, norm(attn): 35.7500, norm(output): 0.4570, norm(x): 0.6037, norm(y): 0.9939, norm:0.4728, tok/sec: 187925.39, flops:197.28, batch-reuse:1
@ 4608 train 3.7901 , allloss: 3.7901, dt: 712.39ms, fracRes: 0.1804, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5862, norm(y): 0.9927, norm:0.4516, tok/sec: 183989.43, flops:193.15, batch-reuse:1
@ 4609 train 3.7484 , allloss: 3.7484, dt: 704.41ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5829, norm(y): 0.9922, norm:0.3899, tok/sec: 186074.75, flops:195.34, batch-reuse:1
@ 4610 train 3.8141 , allloss: 3.8141, dt: 701.34ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5789, norm(y): 0.9927, norm:0.4225, tok/sec: 186888.10, flops:196.20, batch-reuse:1
@ 4611 train 3.8170 , allloss: 3.8170, dt: 701.51ms, fracRes: 0.1798, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5734, norm(y): 0.9931, norm:0.4220, tok/sec: 186842.93, flops:196.15, batch-reuse:1
@ 4612 train 3.8008 , allloss: 3.8008, dt: 706.40ms, fracRes: 0.1803, norm(attn): 35.7500, norm(output): 0.4434, norm(x): 0.5871, norm(y): 0.9934, norm:0.4277, tok/sec: 185548.66, flops:194.79, batch-reuse:1
@ 4613 train 3.7718 , allloss: 3.7718, dt: 708.86ms, fracRes: 0.1796, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5771, norm(y): 0.9925, norm:0.4654, tok/sec: 184906.17, flops:194.11, batch-reuse:1
@ 4614 train 3.8216 , allloss: 3.8216, dt: 707.65ms, fracRes: 0.1790, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5816, norm(y): 0.9927, norm:0.4334, tok/sec: 185221.58, flops:194.45, batch-reuse:1
@ 4615 train 3.8336 , allloss: 3.8336, dt: 714.87ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5855, norm(y): 0.9925, norm:0.4408, tok/sec: 183349.54, flops:192.48, batch-reuse:1
@ 4616 train 3.8453 , allloss: 3.8453, dt: 697.03ms, fracRes: 0.1811, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5829, norm(y): 0.9928, norm:0.3975, tok/sec: 188042.25, flops:197.41, batch-reuse:1
@ 4617 train 3.8873 , allloss: 3.8873, dt: 697.00ms, fracRes: 0.1806, norm(attn): 36.0000, norm(output): 0.4414, norm(x): 0.5831, norm(y): 0.9923, norm:0.4048, tok/sec: 188050.87, flops:197.42, batch-reuse:1
@ 4618 train 3.8036 , allloss: 3.8036, dt: 711.33ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5814, norm(y): 0.9924, norm:0.4524, tok/sec: 184262.31, flops:193.44, batch-reuse:1
@ 4619 train 3.8620 , allloss: 3.8620, dt: 716.73ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4453, norm(x): 0.5874, norm(y): 0.9930, norm:0.5920, tok/sec: 182876.01, flops:191.98, batch-reuse:1
@ 4620 train 3.8614 , allloss: 3.8614, dt: 717.35ms, fracRes: 0.1795, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5843, norm(y): 0.9927, norm:0.3869, tok/sec: 182717.91, flops:191.82, batch-reuse:1
@ 4621 train 3.7585 , allloss: 3.7585, dt: 709.64ms, fracRes: 0.1784, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5814, norm(y): 0.9922, norm:0.4955, tok/sec: 184703.40, flops:193.90, batch-reuse:1
@ 4622 train 3.8076 , allloss: 3.8076, dt: 707.58ms, fracRes: 0.1791, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5746, norm(y): 0.9916, norm:0.3655, tok/sec: 185240.31, flops:194.47, batch-reuse:1
@ 4623 train 3.8250 , allloss: 3.8250, dt: 708.43ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5847, norm(y): 0.9921, norm:0.4080, tok/sec: 185017.75, flops:194.23, batch-reuse:1
@ 4624 train 3.7838 , allloss: 3.7838, dt: 701.65ms, fracRes: 0.1791, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5801, norm(y): 0.9913, norm:0.4038, tok/sec: 186804.84, flops:196.11, batch-reuse:1
@ 4625 train 3.7734 , allloss: 3.7734, dt: 705.94ms, fracRes: 0.1792, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5720, norm(y): 0.9906, norm:0.3805, tok/sec: 185669.60, flops:194.92, batch-reuse:1
@ 4626 train 3.7798 , allloss: 3.7798, dt: 704.83ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5779, norm(y): 0.9901, norm:0.3800, tok/sec: 185963.03, flops:195.22, batch-reuse:1
@ 4627 train 3.8944 , allloss: 3.8944, dt: 703.33ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5779, norm(y): 0.9897, norm:0.4118, tok/sec: 186358.22, flops:195.64, batch-reuse:1
@ 4628 train 3.7013 , allloss: 3.7013, dt: 708.67ms, fracRes: 0.1818, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5867, norm(y): 0.9920, norm:0.6096, tok/sec: 184956.06, flops:194.17, batch-reuse:1
@ 4629 train 3.9234 , allloss: 3.9234, dt: 707.48ms, fracRes: 0.1827, norm(attn): 35.7500, norm(output): 0.4473, norm(x): 0.5948, norm(y): 0.9904, norm:0.4896, tok/sec: 185265.71, flops:194.49, batch-reuse:1
@ 4630 train 3.8739 , allloss: 3.8739, dt: 694.62ms, fracRes: 0.1813, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5845, norm(y): 0.9903, norm:0.4149, tok/sec: 188695.10, flops:198.09, batch-reuse:1
@ 4631 train 3.9656 , allloss: 3.9656, dt: 703.24ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5796, norm(y): 0.9916, norm:0.4087, tok/sec: 186383.93, flops:195.67, batch-reuse:1
@ 4632 train 4.0167 , allloss: 4.0167, dt: 695.96ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5809, norm(y): 0.9924, norm:0.4480, tok/sec: 188332.07, flops:197.71, batch-reuse:1
@ 4633 train 3.9246 , allloss: 3.9246, dt: 708.02ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5877, norm(y): 0.9923, norm:0.4124, tok/sec: 185124.72, flops:194.34, batch-reuse:1
@ 4634 train 3.9667 , allloss: 3.9667, dt: 701.76ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5885, norm(y): 0.9919, norm:0.4354, tok/sec: 186775.20, flops:196.08, batch-reuse:1
@ 4635 train 3.9771 , allloss: 3.9771, dt: 715.78ms, fracRes: 0.1799, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5800, norm(y): 0.9920, norm:0.4189, tok/sec: 183116.74, flops:192.24, batch-reuse:1
@ 4636 train 3.9231 , allloss: 3.9231, dt: 713.92ms, fracRes: 0.1799, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5782, norm(y): 0.9921, norm:0.4198, tok/sec: 183596.06, flops:192.74, batch-reuse:1
@ 4637 train 3.8211 , allloss: 3.8211, dt: 699.46ms, fracRes: 0.1795, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5757, norm(y): 0.9922, norm:0.3956, tok/sec: 187390.78, flops:196.72, batch-reuse:1
@ 4638 train 3.9730 , allloss: 3.9730, dt: 720.46ms, fracRes: 0.1813, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5832, norm(y): 0.9924, norm:0.4353, tok/sec: 181928.05, flops:190.99, batch-reuse:1
@ 4639 train 3.9825 , allloss: 3.9825, dt: 712.06ms, fracRes: 0.1808, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5850, norm(y): 0.9926, norm:0.4318, tok/sec: 184074.38, flops:193.24, batch-reuse:1
@ 4640 train 3.9712 , allloss: 3.9712, dt: 718.05ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5808, norm(y): 0.9924, norm:0.4271, tok/sec: 182539.55, flops:191.63, batch-reuse:1
@ 4641 train 3.9562 , allloss: 3.9562, dt: 716.78ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5734, norm(y): 0.9921, norm:0.4242, tok/sec: 182863.05, flops:191.97, batch-reuse:1
@ 4642 train 3.9256 , allloss: 3.9256, dt: 706.38ms, fracRes: 0.1830, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5818, norm(y): 0.9917, norm:0.4394, tok/sec: 185554.86, flops:194.80, batch-reuse:1
@ 4643 train 4.0750 , allloss: 4.0750, dt: 706.37ms, fracRes: 0.1849, norm(attn): 35.7500, norm(output): 0.4473, norm(x): 0.5988, norm(y): 0.9929, norm:0.4659, tok/sec: 185557.74, flops:194.80, batch-reuse:1
@ 4644 train 3.9695 , allloss: 3.9695, dt: 705.85ms, fracRes: 0.1813, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5837, norm(y): 0.9922, norm:0.5022, tok/sec: 185694.82, flops:194.94, batch-reuse:1
@ 4645 train 4.0149 , allloss: 4.0149, dt: 703.31ms, fracRes: 0.1825, norm(attn): 35.7500, norm(output): 0.4473, norm(x): 0.5965, norm(y): 0.9927, norm:0.4992, tok/sec: 186364.73, flops:195.65, batch-reuse:1
@ 4646 train 4.0380 , allloss: 4.0380, dt: 709.40ms, fracRes: 0.1824, norm(attn): 35.7500, norm(output): 0.4434, norm(x): 0.5934, norm(y): 0.9928, norm:0.4935, tok/sec: 184763.92, flops:193.97, batch-reuse:1
@ 4647 train 4.0012 , allloss: 4.0012, dt: 703.81ms, fracRes: 0.1815, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5831, norm(y): 0.9923, norm:0.4870, tok/sec: 186232.28, flops:195.51, batch-reuse:1
@ 4648 train 3.9995 , allloss: 3.9995, dt: 713.20ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5846, norm(y): 0.9920, norm:0.3687, tok/sec: 183781.17, flops:192.93, batch-reuse:1
@ 4649 train 3.9853 , allloss: 3.9853, dt: 698.43ms, fracRes: 0.1815, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5849, norm(y): 0.9915, norm:0.4681, tok/sec: 187667.38, flops:197.01, batch-reuse:1
@ 4650 train 3.8768 , allloss: 3.8768, dt: 706.36ms, fracRes: 0.1803, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5766, norm(y): 0.9917, norm:0.3630, tok/sec: 185560.12, flops:194.80, batch-reuse:1
@ 4651 train 3.9727 , allloss: 3.9727, dt: 690.38ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5810, norm(y): 0.9923, norm:0.4213, tok/sec: 189854.25, flops:199.31, batch-reuse:1
@ 4652 train 3.9816 , allloss: 3.9816, dt: 697.72ms, fracRes: 0.1830, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5841, norm(y): 0.9912, norm:0.3703, tok/sec: 187857.45, flops:197.21, batch-reuse:1
@ 4653 train 3.9968 , allloss: 3.9968, dt: 703.15ms, fracRes: 0.1820, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5868, norm(y): 0.9920, norm:0.4755, tok/sec: 186406.50, flops:195.69, batch-reuse:1
@ 4654 train 3.9918 , allloss: 3.9918, dt: 714.60ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5861, norm(y): 0.9917, norm:0.4060, tok/sec: 183419.03, flops:192.55, batch-reuse:1
@ 4655 train 3.9816 , allloss: 3.9816, dt: 710.24ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5804, norm(y): 0.9918, norm:0.3833, tok/sec: 184546.10, flops:193.74, batch-reuse:1
@ 4656 train 3.8887 , allloss: 3.8887, dt: 698.64ms, fracRes: 0.1797, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5690, norm(y): 0.9910, norm:0.3760, tok/sec: 187611.08, flops:196.95, batch-reuse:1
@ 4657 train 3.9172 , allloss: 3.9172, dt: 704.46ms, fracRes: 0.1809, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5731, norm(y): 0.9913, norm:0.4165, tok/sec: 186059.83, flops:195.33, batch-reuse:1
@ 4658 train 4.0637 , allloss: 4.0637, dt: 696.70ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5812, norm(y): 0.9922, norm:0.4002, tok/sec: 188132.79, flops:197.50, batch-reuse:1
@ 4659 train 3.9618 , allloss: 3.9618, dt: 708.07ms, fracRes: 0.1804, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5859, norm(y): 0.9915, norm:0.4089, tok/sec: 185112.88, flops:194.33, batch-reuse:1
@ 4660 train 3.9126 , allloss: 3.9126, dt: 706.80ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5813, norm(y): 0.9918, norm:0.4057, tok/sec: 185444.39, flops:194.68, batch-reuse:1
@ 4661 train 3.9243 , allloss: 3.9243, dt: 696.98ms, fracRes: 0.1802, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5799, norm(y): 0.9911, norm:0.4060, tok/sec: 188056.08, flops:197.42, batch-reuse:1
@ 4662 train 3.9948 , allloss: 3.9948, dt: 707.76ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5814, norm(y): 0.9915, norm:0.4116, tok/sec: 185193.82, flops:194.42, batch-reuse:1
@ 4663 train 3.9414 , allloss: 3.9414, dt: 700.13ms, fracRes: 0.1792, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5791, norm(y): 0.9916, norm:0.3787, tok/sec: 187210.95, flops:196.53, batch-reuse:1
@ 4664 train 3.8429 , allloss: 3.8429, dt: 708.10ms, fracRes: 0.1795, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5755, norm(y): 0.9905, norm:0.3778, tok/sec: 185102.78, flops:194.32, batch-reuse:1
@ 4665 train 3.9896 , allloss: 3.9896, dt: 694.57ms, fracRes: 0.1797, norm(attn): 35.7500, norm(output): 0.4238, norm(x): 0.5726, norm(y): 0.9907, norm:0.3899, tok/sec: 188708.25, flops:198.11, batch-reuse:1
@ 4666 train 3.9177 , allloss: 3.9177, dt: 708.13ms, fracRes: 0.1790, norm(attn): 35.7500, norm(output): 0.4219, norm(x): 0.5710, norm(y): 0.9904, norm:0.4357, tok/sec: 185096.11, flops:194.31, batch-reuse:1
@ 4667 train 4.0134 , allloss: 4.0134, dt: 709.13ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5756, norm(y): 0.9910, norm:0.4612, tok/sec: 184835.61, flops:194.04, batch-reuse:1
@ 4668 train 3.9495 , allloss: 3.9495, dt: 697.61ms, fracRes: 0.1802, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5796, norm(y): 0.9913, norm:0.4435, tok/sec: 187887.50, flops:197.24, batch-reuse:1
@ 4669 train 3.9543 , allloss: 3.9543, dt: 708.63ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5858, norm(y): 0.9912, norm:0.4611, tok/sec: 184964.65, flops:194.18, batch-reuse:1
@ 4670 train 4.0031 , allloss: 4.0031, dt: 721.11ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5808, norm(y): 0.9915, norm:0.4113, tok/sec: 181763.54, flops:190.82, batch-reuse:1
@ 4671 train 3.9153 , allloss: 3.9153, dt: 703.56ms, fracRes: 0.1826, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5874, norm(y): 0.9917, norm:0.4122, tok/sec: 186299.05, flops:195.58, batch-reuse:1
@ 4672 train 4.0579 , allloss: 4.0579, dt: 699.93ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5833, norm(y): 0.9917, norm:0.4395, tok/sec: 187263.24, flops:196.59, batch-reuse:1
@ 4673 train 3.8912 , allloss: 3.8912, dt: 692.30ms, fracRes: 0.1824, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5820, norm(y): 0.9904, norm:0.3633, tok/sec: 189327.33, flops:198.76, batch-reuse:1
@ 4674 train 3.9419 , allloss: 3.9419, dt: 695.72ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5845, norm(y): 0.9905, norm:0.4703, tok/sec: 188396.87, flops:197.78, batch-reuse:1
@ 4675 train 3.9406 , allloss: 3.9406, dt: 705.45ms, fracRes: 0.1813, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5809, norm(y): 0.9904, norm:0.4209, tok/sec: 185799.31, flops:195.05, batch-reuse:1
@ 4676 train 4.0061 , allloss: 4.0061, dt: 709.96ms, fracRes: 0.1793, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5743, norm(y): 0.9907, norm:0.4153, tok/sec: 184619.04, flops:193.81, batch-reuse:1
@ 4677 train 4.0464 , allloss: 4.0464, dt: 712.37ms, fracRes: 0.1809, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5824, norm(y): 0.9906, norm:0.4724, tok/sec: 183994.23, flops:193.16, batch-reuse:1
@ 4678 train 3.9275 , allloss: 3.9275, dt: 714.15ms, fracRes: 0.1798, norm(attn): 35.5000, norm(output): 0.4336, norm(x): 0.5804, norm(y): 0.9901, norm:0.4113, tok/sec: 183536.30, flops:192.68, batch-reuse:1
@ 4679 train 4.0839 , allloss: 4.0839, dt: 704.39ms, fracRes: 0.1806, norm(attn): 35.5000, norm(output): 0.4238, norm(x): 0.5757, norm(y): 0.9907, norm:0.4374, tok/sec: 186078.97, flops:195.35, batch-reuse:1
@ 4680 train 4.2968 , allloss: 4.2968, dt: 708.90ms, fracRes: 0.1822, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5848, norm(y): 0.9915, norm:0.4577, tok/sec: 184895.16, flops:194.10, batch-reuse:1
@ 4681 train 3.9547 , allloss: 3.9547, dt: 703.29ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5807, norm(y): 0.9911, norm:0.4980, tok/sec: 186370.54, flops:195.65, batch-reuse:1
@ 4682 train 3.8417 , allloss: 3.8417, dt: 707.76ms, fracRes: 0.1818, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5874, norm(y): 0.9894, norm:0.4277, tok/sec: 185194.01, flops:194.42, batch-reuse:1
@ 4683 train 3.9847 , allloss: 3.9847, dt: 708.55ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5791, norm(y): 0.9884, norm:0.4783, tok/sec: 184986.62, flops:194.20, batch-reuse:1
@ 4684 train 4.0163 , allloss: 4.0163, dt: 708.14ms, fracRes: 0.1802, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5743, norm(y): 0.9876, norm:0.4072, tok/sec: 185094.18, flops:194.31, batch-reuse:1
@ 4685 train 3.9299 , allloss: 3.9299, dt: 698.05ms, fracRes: 0.1795, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5746, norm(y): 0.9877, norm:0.4982, tok/sec: 187769.36, flops:197.12, batch-reuse:1
@ 4686 train 4.0517 , allloss: 4.0517, dt: 701.51ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4375, norm(x): 0.5856, norm(y): 0.9870, norm:0.4782, tok/sec: 186843.32, flops:196.15, batch-reuse:1
@ 4687 train 3.8688 , allloss: 3.8688, dt: 706.85ms, fracRes: 0.1810, norm(attn): 35.5000, norm(output): 0.4395, norm(x): 0.5881, norm(y): 0.9836, norm:0.4721, tok/sec: 185431.81, flops:194.67, batch-reuse:1
@ 4688 train 3.9400 , allloss: 3.9400, dt: 716.28ms, fracRes: 0.1817, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5848, norm(y): 0.9827, norm:0.5390, tok/sec: 182990.44, flops:192.10, batch-reuse:1
@ 4689 train 3.9170 , allloss: 3.9170, dt: 701.08ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4277, norm(x): 0.5749, norm(y): 0.9831, norm:0.4229, tok/sec: 186957.31, flops:196.27, batch-reuse:1
@ 4690 train 3.8864 , allloss: 3.8864, dt: 694.16ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4199, norm(x): 0.5697, norm(y): 0.9827, norm:0.4809, tok/sec: 188822.06, flops:198.23, batch-reuse:1
@ 4691 train 3.9644 , allloss: 3.9644, dt: 703.53ms, fracRes: 0.1828, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5839, norm(y): 0.9826, norm:0.4154, tok/sec: 186304.92, flops:195.58, batch-reuse:1
@ 4692 train 4.0292 , allloss: 4.0292, dt: 703.61ms, fracRes: 0.1816, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5800, norm(y): 0.9832, norm:0.4990, tok/sec: 186284.02, flops:195.56, batch-reuse:1
@ 4693 train 4.0017 , allloss: 4.0017, dt: 705.63ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5798, norm(y): 0.9852, norm:0.4051, tok/sec: 185752.66, flops:195.00, batch-reuse:1
@ 4694 train 3.9956 , allloss: 3.9956, dt: 702.70ms, fracRes: 0.1808, norm(attn): 35.5000, norm(output): 0.4238, norm(x): 0.5741, norm(y): 0.9858, norm:0.4280, tok/sec: 186526.47, flops:195.82, batch-reuse:1
@ 4695 train 4.0086 , allloss: 4.0086, dt: 695.51ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5771, norm(y): 0.9860, norm:0.4240, tok/sec: 188453.83, flops:197.84, batch-reuse:1
@ 4696 train 3.8931 , allloss: 3.8931, dt: 708.74ms, fracRes: 0.1819, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5799, norm(y): 0.9831, norm:0.4043, tok/sec: 184936.15, flops:194.15, batch-reuse:1
@ 4697 train 3.9232 , allloss: 3.9232, dt: 697.73ms, fracRes: 0.1826, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5819, norm(y): 0.9811, norm:0.4021, tok/sec: 187856.10, flops:197.21, batch-reuse:1
@ 4698 train 3.9706 , allloss: 3.9706, dt: 696.94ms, fracRes: 0.1829, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5825, norm(y): 0.9778, norm:0.3906, tok/sec: 188066.70, flops:197.43, batch-reuse:1
@ 4699 train 3.8907 , allloss: 3.8907, dt: 694.38ms, fracRes: 0.1815, norm(attn): 35.5000, norm(output): 0.4277, norm(x): 0.5742, norm(y): 0.9753, norm:0.4091, tok/sec: 188761.25, flops:198.16, batch-reuse:1
@ 4700 train 3.9551 , allloss: 3.9551, dt: 690.84ms, fracRes: 0.1798, norm(attn): 35.0000, norm(output): 0.4258, norm(x): 0.5732, norm(y): 0.9736, norm:0.3456, tok/sec: 189728.44, flops:199.18, batch-reuse:1
@ 4701 train 3.9183 , allloss: 3.9183, dt: 701.53ms, fracRes: 0.1790, norm(attn): 35.5000, norm(output): 0.4238, norm(x): 0.5744, norm(y): 0.9739, norm:0.4461, tok/sec: 186837.09, flops:196.14, batch-reuse:1
@ 4702 train 3.9822 , allloss: 3.9822, dt: 716.18ms, fracRes: 0.1784, norm(attn): 35.5000, norm(output): 0.4277, norm(x): 0.5734, norm(y): 0.9767, norm:0.4239, tok/sec: 183014.39, flops:192.13, batch-reuse:1
@ 4703 train 4.0304 , allloss: 4.0304, dt: 702.13ms, fracRes: 0.1788, norm(attn): 35.0000, norm(output): 0.4277, norm(x): 0.5784, norm(y): 0.9770, norm:0.4413, tok/sec: 186676.77, flops:195.97, batch-reuse:1
@ 4704 train 3.8850 , allloss: 3.8850, dt: 704.58ms, fracRes: 0.1788, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5778, norm(y): 0.9771, norm:0.4145, tok/sec: 186027.28, flops:195.29, batch-reuse:1
@ 4705 train 3.9812 , allloss: 3.9812, dt: 703.69ms, fracRes: 0.1782, norm(attn): 35.5000, norm(output): 0.4219, norm(x): 0.5696, norm(y): 0.9797, norm:0.4192, tok/sec: 186263.07, flops:195.54, batch-reuse:1
@ 4706 train 4.0422 , allloss: 4.0422, dt: 707.26ms, fracRes: 0.1789, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5787, norm(y): 0.9844, norm:0.4334, tok/sec: 185322.61, flops:194.55, batch-reuse:1
@ 4707 train 3.9425 , allloss: 3.9425, dt: 701.74ms, fracRes: 0.1804, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5846, norm(y): 0.9849, norm:0.4454, tok/sec: 186782.12, flops:196.08, batch-reuse:1
@ 4708 train 3.9532 , allloss: 3.9532, dt: 705.89ms, fracRes: 0.1794, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5801, norm(y): 0.9850, norm:0.4346, tok/sec: 185684.03, flops:194.93, batch-reuse:1
@ 4709 train 4.0190 , allloss: 4.0190, dt: 706.03ms, fracRes: 0.1798, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5741, norm(y): 0.9856, norm:0.4007, tok/sec: 185646.34, flops:194.89, batch-reuse:1
@ 4710 train 3.9322 , allloss: 3.9322, dt: 696.34ms, fracRes: 0.1825, norm(attn): 35.5000, norm(output): 0.4375, norm(x): 0.5885, norm(y): 0.9867, norm:0.5331, tok/sec: 188229.74, flops:197.60, batch-reuse:1
@ 4711 train 3.9743 , allloss: 3.9743, dt: 704.03ms, fracRes: 0.1807, norm(attn): 35.5000, norm(output): 0.4395, norm(x): 0.5864, norm(y): 0.9854, norm:0.4176, tok/sec: 186174.00, flops:195.45, batch-reuse:1
@ 4712 train 4.0073 , allloss: 4.0073, dt: 702.37ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4336, norm(x): 0.5790, norm(y): 0.9840, norm:0.4242, tok/sec: 186612.84, flops:195.91, batch-reuse:1
@ 4713 train 3.9414 , allloss: 3.9414, dt: 707.55ms, fracRes: 0.1809, norm(attn): 35.5000, norm(output): 0.4258, norm(x): 0.5740, norm(y): 0.9809, norm:0.3911, tok/sec: 185248.73, flops:194.47, batch-reuse:1
@ 4714 train 3.9711 , allloss: 3.9711, dt: 707.21ms, fracRes: 0.1799, norm(attn): 35.5000, norm(output): 0.4199, norm(x): 0.5698, norm(y): 0.9789, norm:0.4101, tok/sec: 185337.73, flops:194.57, batch-reuse:1
@ 4715 train 3.8895 , allloss: 3.8895, dt: 708.93ms, fracRes: 0.1817, norm(attn): 35.5000, norm(output): 0.4395, norm(x): 0.5872, norm(y): 0.9789, norm:0.4322, tok/sec: 184886.02, flops:194.09, batch-reuse:1
@ 4716 train 3.9927 , allloss: 3.9927, dt: 707.11ms, fracRes: 0.1829, norm(attn): 35.2500, norm(output): 0.4453, norm(x): 0.5937, norm(y): 0.9808, norm:0.4444, tok/sec: 185363.91, flops:194.60, batch-reuse:1
@ 4717 train 4.0078 , allloss: 4.0078, dt: 706.82ms, fracRes: 0.1823, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5842, norm(y): 0.9803, norm:0.4604, tok/sec: 185438.38, flops:194.67, batch-reuse:1
@ 4718 train 4.0098 , allloss: 4.0098, dt: 703.24ms, fracRes: 0.1816, norm(attn): 35.2500, norm(output): 0.4258, norm(x): 0.5751, norm(y): 0.9785, norm:0.3731, tok/sec: 186383.87, flops:195.67, batch-reuse:1
@ 4719 train 3.8957 , allloss: 3.8957, dt: 713.14ms, fracRes: 0.1826, norm(attn): 35.2500, norm(output): 0.4219, norm(x): 0.5726, norm(y): 0.9762, norm:0.4233, tok/sec: 183795.36, flops:192.95, batch-reuse:1
@ 4720 train 3.8764 , allloss: 3.8764, dt: 698.17ms, fracRes: 0.1824, norm(attn): 34.7500, norm(output): 0.4258, norm(x): 0.5754, norm(y): 0.9687, norm:0.4017, tok/sec: 187736.59, flops:197.09, batch-reuse:1
@ 4721 train 3.9216 , allloss: 3.9216, dt: 704.48ms, fracRes: 0.1812, norm(attn): 34.2500, norm(output): 0.4258, norm(x): 0.5709, norm(y): 0.9650, norm:0.4349, tok/sec: 186055.36, flops:195.32, batch-reuse:1
@ 4722 train 3.8961 , allloss: 3.8961, dt: 705.30ms, fracRes: 0.1794, norm(attn): 34.5000, norm(output): 0.4277, norm(x): 0.5731, norm(y): 0.9674, norm:0.4079, tok/sec: 185838.50, flops:195.09, batch-reuse:1
@ 4723 train 4.0094 , allloss: 4.0094, dt: 707.37ms, fracRes: 0.1807, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5830, norm(y): 0.9726, norm:0.4802, tok/sec: 185295.81, flops:194.52, batch-reuse:1
@ 4724 train 3.8681 , allloss: 3.8681, dt: 712.42ms, fracRes: 0.1812, norm(attn): 34.5000, norm(output): 0.4277, norm(x): 0.5780, norm(y): 0.9708, norm:0.3843, tok/sec: 183982.41, flops:193.15, batch-reuse:1
@ 4725 train 3.9302 , allloss: 3.9302, dt: 709.44ms, fracRes: 0.1813, norm(attn): 34.2500, norm(output): 0.4316, norm(x): 0.5777, norm(y): 0.9656, norm:0.4111, tok/sec: 184754.73, flops:193.96, batch-reuse:1
@ 4726 train 4.0129 , allloss: 4.0129, dt: 692.21ms, fracRes: 0.1801, norm(attn): 34.2500, norm(output): 0.4277, norm(x): 0.5748, norm(y): 0.9635, norm:0.4176, tok/sec: 189351.78, flops:198.78, batch-reuse:1
@ 4727 train 3.8749 , allloss: 3.8749, dt: 696.56ms, fracRes: 0.1798, norm(attn): 34.2500, norm(output): 0.4238, norm(x): 0.5734, norm(y): 0.9615, norm:0.4377, tok/sec: 188170.79, flops:197.54, batch-reuse:1
@ 4728 train 4.0081 , allloss: 4.0081, dt: 699.49ms, fracRes: 0.1793, norm(attn): 34.5000, norm(output): 0.4258, norm(x): 0.5724, norm(y): 0.9701, norm:0.4124, tok/sec: 187382.47, flops:196.71, batch-reuse:1
@ 4729 train 3.9297 , allloss: 3.9297, dt: 706.36ms, fracRes: 0.1786, norm(attn): 35.0000, norm(output): 0.4238, norm(x): 0.5721, norm(y): 0.9753, norm:0.3901, tok/sec: 185560.43, flops:194.80, batch-reuse:1
@ 4730 train 3.9569 , allloss: 3.9569, dt: 709.90ms, fracRes: 0.1820, norm(attn): 35.0000, norm(output): 0.4375, norm(x): 0.5877, norm(y): 0.9756, norm:0.4786, tok/sec: 184635.60, flops:193.83, batch-reuse:1
@ 4731 train 3.9857 , allloss: 3.9857, dt: 691.95ms, fracRes: 0.1802, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5835, norm(y): 0.9762, norm:0.4077, tok/sec: 189425.37, flops:198.86, batch-reuse:1
@ 4732 train 3.9551 , allloss: 3.9551, dt: 708.71ms, fracRes: 0.1803, norm(attn): 35.2500, norm(output): 0.4336, norm(x): 0.5822, norm(y): 0.9775, norm:0.3949, tok/sec: 184945.48, flops:194.16, batch-reuse:1
@ 4733 train 3.8574 , allloss: 3.8574, dt: 714.20ms, fracRes: 0.1791, norm(attn): 35.2500, norm(output): 0.4355, norm(x): 0.5811, norm(y): 0.9758, norm:0.3889, tok/sec: 183523.74, flops:192.66, batch-reuse:1
@ 4734 train 3.8538 , allloss: 3.8538, dt: 716.74ms, fracRes: 0.1792, norm(attn): 35.2500, norm(output): 0.4238, norm(x): 0.5724, norm(y): 0.9713, norm:0.4224, tok/sec: 182872.30, flops:191.98, batch-reuse:1
@ 4735 train 3.9399 , allloss: 3.9399, dt: 696.20ms, fracRes: 0.1788, norm(attn): 35.5000, norm(output): 0.4219, norm(x): 0.5710, norm(y): 0.9713, norm:0.4057, tok/sec: 188266.41, flops:197.64, batch-reuse:1
@ 4736 train 3.8394 , allloss: 3.8394, dt: 701.52ms, fracRes: 0.1792, norm(attn): 34.5000, norm(output): 0.4277, norm(x): 0.5728, norm(y): 0.9712, norm:0.4140, tok/sec: 186840.59, flops:196.15, batch-reuse:1
@ 4737 train 3.8896 , allloss: 3.8896, dt: 703.13ms, fracRes: 0.1800, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5769, norm(y): 0.9748, norm:0.3718, tok/sec: 186413.26, flops:195.70, batch-reuse:1
@ 4738 train 3.9973 , allloss: 3.9973, dt: 699.23ms, fracRes: 0.1795, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5789, norm(y): 0.9805, norm:0.4427, tok/sec: 187451.41, flops:196.79, batch-reuse:1
@ 4739 train 3.8620 , allloss: 3.8620, dt: 693.86ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5775, norm(y): 0.9844, norm:0.4455, tok/sec: 188902.58, flops:198.31, batch-reuse:1
@ 4740 train 3.9666 , allloss: 3.9666, dt: 703.98ms, fracRes: 0.1815, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5741, norm(y): 0.9847, norm:0.3548, tok/sec: 186186.67, flops:195.46, batch-reuse:1
@ 4741 train 3.9924 , allloss: 3.9924, dt: 702.60ms, fracRes: 0.1812, norm(attn): 35.5000, norm(output): 0.4238, norm(x): 0.5720, norm(y): 0.9840, norm:0.4130, tok/sec: 186554.07, flops:195.84, batch-reuse:1
@ 4742 train 3.8852 , allloss: 3.8852, dt: 719.15ms, fracRes: 0.1801, norm(attn): 35.5000, norm(output): 0.4199, norm(x): 0.5713, norm(y): 0.9828, norm:0.3708, tok/sec: 182258.69, flops:191.34, batch-reuse:1
@ 4743 train 4.0595 , allloss: 4.0595, dt: 711.31ms, fracRes: 0.1811, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5822, norm(y): 0.9822, norm:0.4606, tok/sec: 184269.29, flops:193.45, batch-reuse:1
@ 4744 train 3.9148 , allloss: 3.9148, dt: 718.56ms, fracRes: 0.1790, norm(attn): 35.5000, norm(output): 0.4375, norm(x): 0.5827, norm(y): 0.9798, norm:0.5173, tok/sec: 182408.48, flops:191.49, batch-reuse:1
@ 4745 train 3.9638 , allloss: 3.9638, dt: 721.90ms, fracRes: 0.1804, norm(attn): 35.5000, norm(output): 0.4258, norm(x): 0.5758, norm(y): 0.9825, norm:0.4977, tok/sec: 181565.32, flops:190.61, batch-reuse:1
@ 4746 train 3.9902 , allloss: 3.9902, dt: 719.40ms, fracRes: 0.1816, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5790, norm(y): 0.9840, norm:0.4497, tok/sec: 182196.72, flops:191.27, batch-reuse:1
@ 4747 train 3.9502 , allloss: 3.9502, dt: 697.66ms, fracRes: 0.1821, norm(attn): 35.5000, norm(output): 0.4395, norm(x): 0.5885, norm(y): 0.9814, norm:0.5452, tok/sec: 187874.46, flops:197.23, batch-reuse:1
@ 4748 train 3.9135 , allloss: 3.9135, dt: 700.70ms, fracRes: 0.1815, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5844, norm(y): 0.9776, norm:0.4704, tok/sec: 187059.79, flops:196.38, batch-reuse:1
@ 4749 train 3.9053 , allloss: 3.9053, dt: 705.51ms, fracRes: 0.1814, norm(attn): 34.7500, norm(output): 0.4453, norm(x): 0.5911, norm(y): 0.9740, norm:0.5062, tok/sec: 185782.73, flops:195.04, batch-reuse:1
@ 4750 train 4.0094 , allloss: 4.0094, dt: 728.07ms, fracRes: 0.1782, norm(attn): 34.5000, norm(output): 0.4219, norm(x): 0.5716, norm(y): 0.9675, norm:0.5100, tok/sec: 180026.58, flops:188.99, batch-reuse:1
@ 4751 train 3.8188 , allloss: 3.8188, dt: 719.86ms, fracRes: 0.1782, norm(attn): 34.2500, norm(output): 0.4199, norm(x): 0.5686, norm(y): 0.9608, norm:0.3932, tok/sec: 182079.89, flops:191.15, batch-reuse:1
@ 4752 train 3.9122 , allloss: 3.9122, dt: 708.64ms, fracRes: 0.1797, norm(attn): 33.7500, norm(output): 0.4238, norm(x): 0.5746, norm(y): 0.9411, norm:0.4804, tok/sec: 184963.03, flops:194.17, batch-reuse:1
@ 4753 train 3.8238 , allloss: 3.8238, dt: 704.22ms, fracRes: 0.1806, norm(attn): 34.5000, norm(output): 0.4336, norm(x): 0.5808, norm(y): 0.9694, norm:0.4457, tok/sec: 186124.33, flops:195.39, batch-reuse:1
@ 4754 train 3.9559 , allloss: 3.9559, dt: 702.51ms, fracRes: 0.1807, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5798, norm(y): 0.9822, norm:0.4047, tok/sec: 186576.86, flops:195.87, batch-reuse:1
@ 4755 train 3.8786 , allloss: 3.8786, dt: 709.87ms, fracRes: 0.1799, norm(attn): 35.5000, norm(output): 0.4219, norm(x): 0.5752, norm(y): 0.9859, norm:0.4061, tok/sec: 184643.47, flops:193.84, batch-reuse:1
@ 4756 train 3.8747 , allloss: 3.8747, dt: 717.78ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5764, norm(y): 0.9880, norm:0.4184, tok/sec: 182607.21, flops:191.70, batch-reuse:1
@ 4757 train 3.7951 , allloss: 3.7951, dt: 713.83ms, fracRes: 0.1804, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5787, norm(y): 0.9883, norm:0.4402, tok/sec: 183618.87, flops:192.76, batch-reuse:1
@ 4758 train 3.9980 , allloss: 3.9980, dt: 693.11ms, fracRes: 0.1801, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5736, norm(y): 0.9902, norm:0.3760, tok/sec: 189107.59, flops:198.53, batch-reuse:1
@ 4759 train 3.8382 , allloss: 3.8382, dt: 713.91ms, fracRes: 0.1821, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5757, norm(y): 0.9896, norm:0.4932, tok/sec: 183597.59, flops:192.74, batch-reuse:1
@ 4760 train 3.8305 , allloss: 3.8305, dt: 712.20ms, fracRes: 0.1833, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5885, norm(y): 0.9902, norm:0.3719, tok/sec: 184038.33, flops:193.20, batch-reuse:1
@ 4761 train 4.0025 , allloss: 4.0025, dt: 714.53ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5847, norm(y): 0.9908, norm:0.5022, tok/sec: 183438.01, flops:192.57, batch-reuse:1
@ 4762 train 3.9291 , allloss: 3.9291, dt: 714.10ms, fracRes: 0.1826, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5796, norm(y): 0.9904, norm:0.3677, tok/sec: 183549.04, flops:192.69, batch-reuse:1
@ 4763 train 3.9285 , allloss: 3.9285, dt: 716.47ms, fracRes: 0.1826, norm(attn): 36.0000, norm(output): 0.4277, norm(x): 0.5750, norm(y): 0.9909, norm:0.4157, tok/sec: 182942.34, flops:192.05, batch-reuse:1
@ 4764 train 3.9595 , allloss: 3.9595, dt: 710.32ms, fracRes: 0.1827, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5807, norm(y): 0.9918, norm:0.3870, tok/sec: 184524.48, flops:193.71, batch-reuse:1
@ 4765 train 3.9227 , allloss: 3.9227, dt: 712.01ms, fracRes: 0.1816, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5777, norm(y): 0.9915, norm:0.3906, tok/sec: 184087.76, flops:193.26, batch-reuse:1
@ 4766 train 3.9381 , allloss: 3.9381, dt: 698.33ms, fracRes: 0.1826, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5844, norm(y): 0.9913, norm:0.3780, tok/sec: 187694.03, flops:197.04, batch-reuse:1
@ 4767 train 3.9273 , allloss: 3.9273, dt: 699.45ms, fracRes: 0.1825, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5828, norm(y): 0.9913, norm:0.3565, tok/sec: 187393.52, flops:196.73, batch-reuse:1
@ 4768 train 3.7326 , allloss: 3.7326, dt: 717.69ms, fracRes: 0.1826, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5847, norm(y): 0.9912, norm:0.4594, tok/sec: 182629.84, flops:191.73, batch-reuse:1
@ 4769 train 3.9030 , allloss: 3.9030, dt: 726.04ms, fracRes: 0.1820, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5765, norm(y): 0.9910, norm:0.3689, tok/sec: 180529.73, flops:189.52, batch-reuse:1
@ 4770 train 3.8440 , allloss: 3.8440, dt: 706.43ms, fracRes: 0.1818, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5844, norm(y): 0.9914, norm:0.4303, tok/sec: 185542.02, flops:194.78, batch-reuse:1
@ 4771 train 3.9299 , allloss: 3.9299, dt: 709.16ms, fracRes: 0.1802, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5846, norm(y): 0.9918, norm:0.4112, tok/sec: 184827.59, flops:194.03, batch-reuse:1
@ 4772 train 3.8437 , allloss: 3.8437, dt: 700.06ms, fracRes: 0.1803, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5816, norm(y): 0.9918, norm:0.3917, tok/sec: 187229.19, flops:196.55, batch-reuse:1
@ 4773 train 3.7693 , allloss: 3.7693, dt: 701.98ms, fracRes: 0.1818, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5877, norm(y): 0.9913, norm:0.3993, tok/sec: 186718.30, flops:196.02, batch-reuse:1
@ 4774 train 3.8719 , allloss: 3.8719, dt: 710.28ms, fracRes: 0.1796, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5790, norm(y): 0.9914, norm:0.3830, tok/sec: 184535.13, flops:193.73, batch-reuse:1
@ 4775 train 3.7617 , allloss: 3.7617, dt: 708.01ms, fracRes: 0.1789, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5730, norm(y): 0.9913, norm:0.3884, tok/sec: 185127.15, flops:194.35, batch-reuse:1
@ 4776 train 3.7501 , allloss: 3.7501, dt: 704.43ms, fracRes: 0.1788, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5800, norm(y): 0.9911, norm:0.3822, tok/sec: 186068.08, flops:195.33, batch-reuse:1
@ 4777 train 3.6879 , allloss: 3.6879, dt: 706.28ms, fracRes: 0.1785, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5740, norm(y): 0.9904, norm:0.3606, tok/sec: 185580.16, flops:194.82, batch-reuse:1
@ 4778 train 3.7975 , allloss: 3.7975, dt: 723.21ms, fracRes: 0.1772, norm(attn): 36.0000, norm(output): 0.4258, norm(x): 0.5724, norm(y): 0.9914, norm:0.4407, tok/sec: 181235.87, flops:190.26, batch-reuse:1
@ 4779 train 3.8279 , allloss: 3.8279, dt: 710.52ms, fracRes: 0.1781, norm(attn): 36.0000, norm(output): 0.4258, norm(x): 0.5711, norm(y): 0.9909, norm:0.4296, tok/sec: 184472.16, flops:193.66, batch-reuse:1
@ 4780 train 3.8822 , allloss: 3.8822, dt: 700.53ms, fracRes: 0.1805, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5758, norm(y): 0.9906, norm:0.4012, tok/sec: 187103.02, flops:196.42, batch-reuse:1
@ 4781 train 3.7250 , allloss: 3.7250, dt: 708.08ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5805, norm(y): 0.9899, norm:0.4261, tok/sec: 185109.45, flops:194.33, batch-reuse:1
@ 4782 train 3.8253 , allloss: 3.8253, dt: 705.55ms, fracRes: 0.1822, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5841, norm(y): 0.9899, norm:0.4175, tok/sec: 185773.13, flops:195.02, batch-reuse:1
@ 4783 train 3.7808 , allloss: 3.7808, dt: 707.30ms, fracRes: 0.1813, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5804, norm(y): 0.9897, norm:0.3957, tok/sec: 185313.86, flops:194.54, batch-reuse:1
@ 4784 train 3.8776 , allloss: 3.8776, dt: 711.54ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5795, norm(y): 0.9900, norm:0.4261, tok/sec: 184207.98, flops:193.38, batch-reuse:1
@ 4785 train 3.8243 , allloss: 3.8243, dt: 716.42ms, fracRes: 0.1809, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5816, norm(y): 0.9895, norm:0.3851, tok/sec: 182954.88, flops:192.07, batch-reuse:1
@ 4786 train 3.8941 , allloss: 3.8941, dt: 716.84ms, fracRes: 0.1796, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5781, norm(y): 0.9894, norm:0.3921, tok/sec: 182846.63, flops:191.95, batch-reuse:1
@ 4787 train 3.8347 , allloss: 3.8347, dt: 704.22ms, fracRes: 0.1806, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5859, norm(y): 0.9895, norm:0.5139, tok/sec: 186123.07, flops:195.39, batch-reuse:1
@ 4788 train 3.7804 , allloss: 3.7804, dt: 703.07ms, fracRes: 0.1803, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5826, norm(y): 0.9892, norm:0.4394, tok/sec: 186427.29, flops:195.71, batch-reuse:1
@ 4789 train 3.9365 , allloss: 3.9365, dt: 699.62ms, fracRes: 0.1821, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5852, norm(y): 0.9890, norm:0.4160, tok/sec: 187347.93, flops:196.68, batch-reuse:1
@ 4790 train 3.8178 , allloss: 3.8178, dt: 707.77ms, fracRes: 0.1833, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5838, norm(y): 0.9882, norm:0.4288, tok/sec: 185190.08, flops:194.41, batch-reuse:1
@ 4791 train 3.8007 , allloss: 3.8007, dt: 707.92ms, fracRes: 0.1820, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5732, norm(y): 0.9876, norm:0.4029, tok/sec: 185151.72, flops:194.37, batch-reuse:1
@ 4792 train 3.8096 , allloss: 3.8096, dt: 692.27ms, fracRes: 0.1827, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5832, norm(y): 0.9876, norm:0.4281, tok/sec: 189337.69, flops:198.77, batch-reuse:1
@ 4793 train 3.8294 , allloss: 3.8294, dt: 692.87ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4277, norm(x): 0.5758, norm(y): 0.9876, norm:0.4151, tok/sec: 189172.40, flops:198.59, batch-reuse:1
@ 4794 train 3.7690 , allloss: 3.7690, dt: 709.75ms, fracRes: 0.1809, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5714, norm(y): 0.9859, norm:0.4185, tok/sec: 184673.24, flops:193.87, batch-reuse:1
@ 4795 train 3.8055 , allloss: 3.8055, dt: 709.87ms, fracRes: 0.1809, norm(attn): 36.0000, norm(output): 0.4219, norm(x): 0.5766, norm(y): 0.9838, norm:0.4084, tok/sec: 184642.91, flops:193.84, batch-reuse:1
@ 4796 train 3.8020 , allloss: 3.8020, dt: 711.02ms, fracRes: 0.1812, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5767, norm(y): 0.9829, norm:0.4638, tok/sec: 184344.05, flops:193.52, batch-reuse:1
@ 4797 train 3.8528 , allloss: 3.8528, dt: 711.19ms, fracRes: 0.1823, norm(attn): 36.0000, norm(output): 0.4277, norm(x): 0.5799, norm(y): 0.9844, norm:0.3889, tok/sec: 184298.51, flops:193.48, batch-reuse:1
@ 4798 train 3.8453 , allloss: 3.8453, dt: 709.21ms, fracRes: 0.1805, norm(attn): 35.7500, norm(output): 0.4180, norm(x): 0.5693, norm(y): 0.9848, norm:0.4204, tok/sec: 184813.30, flops:194.02, batch-reuse:1
@ 4799 train 3.7406 , allloss: 3.7406, dt: 712.52ms, fracRes: 0.1809, norm(attn): 35.7500, norm(output): 0.4219, norm(x): 0.5722, norm(y): 0.9841, norm:0.3948, tok/sec: 183956.49, flops:193.12, batch-reuse:1
@ 4800 train 3.8223 , allloss: 3.8223, dt: 711.82ms, fracRes: 0.1810, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5798, norm(y): 0.9852, norm:0.4074, tok/sec: 184136.04, flops:193.31, batch-reuse:1
@ 4801 train 3.8549 , allloss: 3.8549, dt: 707.31ms, fracRes: 0.1816, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5911, norm(y): 0.9857, norm:0.4333, tok/sec: 185311.61, flops:194.54, batch-reuse:1
@ 4802 train 3.6758 , allloss: 3.6758, dt: 700.77ms, fracRes: 0.1815, norm(attn): 35.7500, norm(output): 0.4238, norm(x): 0.5773, norm(y): 0.9845, norm:0.4139, tok/sec: 187039.55, flops:196.35, batch-reuse:1
@ 4803 train 3.7328 , allloss: 3.7328, dt: 700.10ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5873, norm(y): 0.9842, norm:0.4460, tok/sec: 187219.62, flops:196.54, batch-reuse:1
@ 4804 train 3.8537 , allloss: 3.8537, dt: 698.82ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5769, norm(y): 0.9820, norm:0.3920, tok/sec: 187561.99, flops:196.90, batch-reuse:1
@ 4805 train 3.9189 , allloss: 3.9189, dt: 705.60ms, fracRes: 0.1816, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5784, norm(y): 0.9806, norm:0.4475, tok/sec: 185758.88, flops:195.01, batch-reuse:1
@ 4806 train 3.8259 , allloss: 3.8259, dt: 699.16ms, fracRes: 0.1831, norm(attn): 35.5000, norm(output): 0.4336, norm(x): 0.5861, norm(y): 0.9807, norm:0.4202, tok/sec: 187471.80, flops:196.81, batch-reuse:1
@ 4807 train 3.7896 , allloss: 3.7896, dt: 714.83ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4219, norm(x): 0.5751, norm(y): 0.9787, norm:0.4349, tok/sec: 183360.61, flops:192.49, batch-reuse:1
@ 4808 train 3.9447 , allloss: 3.9447, dt: 703.28ms, fracRes: 0.1815, norm(attn): 35.5000, norm(output): 0.4297, norm(x): 0.5751, norm(y): 0.9757, norm:0.4712, tok/sec: 186372.62, flops:195.65, batch-reuse:1
@ 4809 train 3.7563 , allloss: 3.7563, dt: 695.26ms, fracRes: 0.1806, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5749, norm(y): 0.9811, norm:0.3958, tok/sec: 188521.10, flops:197.91, batch-reuse:1
@ 4810 train 3.8998 , allloss: 3.8998, dt: 698.58ms, fracRes: 0.1822, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5797, norm(y): 0.9845, norm:0.4667, tok/sec: 187627.15, flops:196.97, batch-reuse:1
@ 4811 train 3.8655 , allloss: 3.8655, dt: 700.57ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5743, norm(y): 0.9853, norm:0.4264, tok/sec: 187092.19, flops:196.41, batch-reuse:1
@ 4812 train 3.8611 , allloss: 3.8611, dt: 716.30ms, fracRes: 0.1816, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5852, norm(y): 0.9864, norm:0.5236, tok/sec: 182985.08, flops:192.10, batch-reuse:1
@ 4813 train 3.7406 , allloss: 3.7406, dt: 702.49ms, fracRes: 0.1800, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5797, norm(y): 0.9861, norm:0.4138, tok/sec: 186582.24, flops:195.87, batch-reuse:1
@ 4814 train 3.8182 , allloss: 3.8182, dt: 698.02ms, fracRes: 0.1796, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5839, norm(y): 0.9873, norm:0.5282, tok/sec: 187777.89, flops:197.13, batch-reuse:1
@ 4815 train 3.8128 , allloss: 3.8128, dt: 708.69ms, fracRes: 0.1801, norm(attn): 36.0000, norm(output): 0.4277, norm(x): 0.5765, norm(y): 0.9871, norm:0.3615, tok/sec: 184948.53, flops:194.16, batch-reuse:1
@ 4816 train 3.7945 , allloss: 3.7945, dt: 709.87ms, fracRes: 0.1815, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5768, norm(y): 0.9873, norm:0.4891, tok/sec: 184643.35, flops:193.84, batch-reuse:1
@ 4817 train 3.8446 , allloss: 3.8446, dt: 710.64ms, fracRes: 0.1833, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5890, norm(y): 0.9883, norm:0.4525, tok/sec: 184442.76, flops:193.63, batch-reuse:1
@ 4818 train 3.7492 , allloss: 3.7492, dt: 711.90ms, fracRes: 0.1814, norm(attn): 36.0000, norm(output): 0.4277, norm(x): 0.5793, norm(y): 0.9880, norm:0.3818, tok/sec: 184115.25, flops:193.28, batch-reuse:1
@ 4819 train 3.7883 , allloss: 3.7883, dt: 710.47ms, fracRes: 0.1802, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5707, norm(y): 0.9869, norm:0.4288, tok/sec: 184487.45, flops:193.68, batch-reuse:1
@ 4820 train 3.8095 , allloss: 3.8095, dt: 713.60ms, fracRes: 0.1804, norm(attn): 35.7500, norm(output): 0.4199, norm(x): 0.5700, norm(y): 0.9862, norm:0.3775, tok/sec: 183676.29, flops:192.82, batch-reuse:1
@ 4821 train 4.0037 , allloss: 4.0037, dt: 710.58ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5841, norm(y): 0.9873, norm:0.4411, tok/sec: 184458.05, flops:193.64, batch-reuse:1
@ 4822 train 3.8409 , allloss: 3.8409, dt: 714.36ms, fracRes: 0.1825, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5832, norm(y): 0.9863, norm:0.4117, tok/sec: 183482.51, flops:192.62, batch-reuse:1
@ 4823 train 3.9243 , allloss: 3.9243, dt: 697.92ms, fracRes: 0.1827, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5771, norm(y): 0.9859, norm:0.4354, tok/sec: 187803.67, flops:197.16, batch-reuse:1
@ 4824 train 3.9617 , allloss: 3.9617, dt: 710.38ms, fracRes: 0.1811, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5759, norm(y): 0.9859, norm:0.4156, tok/sec: 184509.25, flops:193.70, batch-reuse:1
@ 4825 train 4.0324 , allloss: 4.0324, dt: 711.46ms, fracRes: 0.1817, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5797, norm(y): 0.9871, norm:0.4178, tok/sec: 184230.32, flops:193.41, batch-reuse:1
@ 4826 train 3.9483 , allloss: 3.9483, dt: 712.62ms, fracRes: 0.1825, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5820, norm(y): 0.9878, norm:0.4001, tok/sec: 183928.86, flops:193.09, batch-reuse:1
@ 4827 train 3.9446 , allloss: 3.9446, dt: 707.39ms, fracRes: 0.1819, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5810, norm(y): 0.9874, norm:0.4596, tok/sec: 185290.13, flops:194.52, batch-reuse:1
@ 4828 train 3.9365 , allloss: 3.9365, dt: 701.41ms, fracRes: 0.1820, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5760, norm(y): 0.9871, norm:0.4328, tok/sec: 186869.10, flops:196.18, batch-reuse:1
@ 4829 train 4.1185 , allloss: 4.1185, dt: 703.35ms, fracRes: 0.1844, norm(attn): 35.7500, norm(output): 0.4414, norm(x): 0.5926, norm(y): 0.9890, norm:0.4837, tok/sec: 186354.37, flops:195.64, batch-reuse:1
@ 4830 train 3.9946 , allloss: 3.9946, dt: 708.82ms, fracRes: 0.1837, norm(attn): 36.0000, norm(output): 0.4355, norm(x): 0.5872, norm(y): 0.9896, norm:0.4804, tok/sec: 184916.00, flops:194.13, batch-reuse:1
@ 4831 train 3.8697 , allloss: 3.8697, dt: 704.64ms, fracRes: 0.1831, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5830, norm(y): 0.9888, norm:0.4002, tok/sec: 186012.55, flops:195.28, batch-reuse:1
@ 4832 train 4.0162 , allloss: 4.0162, dt: 705.77ms, fracRes: 0.1826, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5854, norm(y): 0.9878, norm:0.5017, tok/sec: 185715.70, flops:194.96, batch-reuse:1
@ 4833 train 3.9474 , allloss: 3.9474, dt: 705.81ms, fracRes: 0.1815, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5797, norm(y): 0.9865, norm:0.4356, tok/sec: 185703.72, flops:194.95, batch-reuse:1
@ 4834 train 4.0458 , allloss: 4.0458, dt: 705.03ms, fracRes: 0.1826, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5848, norm(y): 0.9860, norm:0.4443, tok/sec: 185910.27, flops:195.17, batch-reuse:1
@ 4835 train 3.9519 , allloss: 3.9519, dt: 713.07ms, fracRes: 0.1824, norm(attn): 35.7500, norm(output): 0.4316, norm(x): 0.5809, norm(y): 0.9863, norm:0.4603, tok/sec: 183812.50, flops:192.97, batch-reuse:1
@ 4836 train 3.9122 , allloss: 3.9122, dt: 713.29ms, fracRes: 0.1802, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5789, norm(y): 0.9852, norm:0.4396, tok/sec: 183755.98, flops:192.91, batch-reuse:1
@ 4837 train 3.9699 , allloss: 3.9699, dt: 703.37ms, fracRes: 0.1807, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5851, norm(y): 0.9827, norm:0.4562, tok/sec: 186347.54, flops:195.63, batch-reuse:1
@ 4838 train 3.9695 , allloss: 3.9695, dt: 708.61ms, fracRes: 0.1811, norm(attn): 35.5000, norm(output): 0.4355, norm(x): 0.5843, norm(y): 0.9786, norm:0.4658, tok/sec: 184971.81, flops:194.18, batch-reuse:1
@ 4839 train 3.9324 , allloss: 3.9324, dt: 707.93ms, fracRes: 0.1809, norm(attn): 35.2500, norm(output): 0.4316, norm(x): 0.5789, norm(y): 0.9697, norm:0.4124, tok/sec: 185149.54, flops:194.37, batch-reuse:1
@ 4840 train 4.0015 , allloss: 4.0015, dt: 709.92ms, fracRes: 0.1815, norm(attn): 34.2500, norm(output): 0.4277, norm(x): 0.5755, norm(y): 0.9566, norm:0.5287, tok/sec: 184629.64, flops:193.82, batch-reuse:1
@ 4841 train 4.0179 , allloss: 4.0179, dt: 703.94ms, fracRes: 0.1833, norm(attn): 34.7500, norm(output): 0.4297, norm(x): 0.5768, norm(y): 0.9714, norm:0.4622, tok/sec: 186196.57, flops:195.47, batch-reuse:1
@ 4842 train 4.0013 , allloss: 4.0013, dt: 711.36ms, fracRes: 0.1829, norm(attn): 35.5000, norm(output): 0.4316, norm(x): 0.5804, norm(y): 0.9800, norm:0.4843, tok/sec: 184256.01, flops:193.43, batch-reuse:1
@ 4843 train 4.0022 , allloss: 4.0022, dt: 705.98ms, fracRes: 0.1831, norm(attn): 35.5000, norm(output): 0.4336, norm(x): 0.5819, norm(y): 0.9822, norm:0.4821, tok/sec: 185658.76, flops:194.90, batch-reuse:1
@ 4844 train 3.8728 , allloss: 3.8728, dt: 693.31ms, fracRes: 0.1828, norm(attn): 35.7500, norm(output): 0.4375, norm(x): 0.5855, norm(y): 0.9825, norm:0.4029, tok/sec: 189052.25, flops:198.47, batch-reuse:1
@ 4845 train 3.8724 , allloss: 3.8724, dt: 709.36ms, fracRes: 0.1823, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5766, norm(y): 0.9830, norm:0.4218, tok/sec: 184774.73, flops:193.98, batch-reuse:1
@ 4846 train 3.9984 , allloss: 3.9984, dt: 707.40ms, fracRes: 0.1820, norm(attn): 35.7500, norm(output): 0.4219, norm(x): 0.5740, norm(y): 0.9851, norm:0.3905, tok/sec: 185286.26, flops:194.51, batch-reuse:1
@ 4847 train 3.9790 , allloss: 3.9790, dt: 700.14ms, fracRes: 0.1818, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5773, norm(y): 0.9867, norm:0.3662, tok/sec: 187209.36, flops:196.53, batch-reuse:1
@ 4848 train 3.9197 , allloss: 3.9197, dt: 704.72ms, fracRes: 0.1816, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5827, norm(y): 0.9878, norm:0.4081, tok/sec: 185990.71, flops:195.25, batch-reuse:1
@ 4849 train 4.0224 , allloss: 4.0224, dt: 726.44ms, fracRes: 0.1814, norm(attn): 35.7500, norm(output): 0.4355, norm(x): 0.5862, norm(y): 0.9880, norm:0.4711, tok/sec: 180431.02, flops:189.42, batch-reuse:1
@ 4850 train 4.2404 , allloss: 4.2404, dt: 708.10ms, fracRes: 0.1833, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5795, norm(y): 0.9880, norm:0.5296, tok/sec: 185104.53, flops:194.32, batch-reuse:1
@ 4851 train 3.9088 , allloss: 3.9088, dt: 718.95ms, fracRes: 0.1842, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5860, norm(y): 0.9868, norm:0.4002, tok/sec: 182309.52, flops:191.39, batch-reuse:1
@ 4852 train 3.9729 , allloss: 3.9729, dt: 700.54ms, fracRes: 0.1835, norm(attn): 35.7500, norm(output): 0.4336, norm(x): 0.5826, norm(y): 0.9856, norm:0.4462, tok/sec: 187102.70, flops:196.42, batch-reuse:1
@ 4853 train 3.9225 , allloss: 3.9225, dt: 704.19ms, fracRes: 0.1823, norm(attn): 35.7500, norm(output): 0.5234, norm(x): 0.6747, norm(y): 0.9854, norm:0.3914, tok/sec: 186130.63, flops:195.40, batch-reuse:1
@ 4854 train 3.8738 , allloss: 3.8738, dt: 719.10ms, fracRes: 0.1830, norm(attn): 35.7500, norm(output): 0.4395, norm(x): 0.5937, norm(y): 0.9867, norm:0.6815, tok/sec: 182272.10, flops:191.35, batch-reuse:1
@ 4855 train 4.0477 , allloss: 4.0477, dt: 697.03ms, fracRes: 0.1829, norm(attn): 35.7500, norm(output): 0.4531, norm(x): 0.6013, norm(y): 0.9864, norm:0.5273, tok/sec: 188042.38, flops:197.41, batch-reuse:1
@ 4856 train 3.9844 , allloss: 3.9844, dt: 706.87ms, fracRes: 0.1816, norm(attn): 36.0000, norm(output): 0.4316, norm(x): 0.5823, norm(y): 0.9855, norm:0.5377, tok/sec: 185425.87, flops:194.66, batch-reuse:1
@ 4857 train 3.9022 , allloss: 3.9022, dt: 696.18ms, fracRes: 0.1808, norm(attn): 35.7500, norm(output): 0.4219, norm(x): 0.5739, norm(y): 0.9840, norm:0.4558, tok/sec: 188272.86, flops:197.65, batch-reuse:1
@ 4858 train 3.9583 , allloss: 3.9583, dt: 703.95ms, fracRes: 0.1814, norm(attn): 36.0000, norm(output): 0.4199, norm(x): 0.5691, norm(y): 0.9817, norm:0.4680, tok/sec: 186194.37, flops:195.47, batch-reuse:1
@ 4859 train 4.0051 , allloss: 4.0051, dt: 696.04ms, fracRes: 0.1810, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5791, norm(y): 0.9813, norm:0.6691, tok/sec: 188311.36, flops:197.69, batch-reuse:1
@ 4860 train 3.9316 , allloss: 3.9316, dt: 707.74ms, fracRes: 0.1825, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5808, norm(y): 0.9817, norm:0.5190, tok/sec: 185196.94, flops:194.42, batch-reuse:1
@ 4861 train 3.9208 , allloss: 3.9208, dt: 709.10ms, fracRes: 0.1825, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5811, norm(y): 0.9828, norm:0.5317, tok/sec: 184843.63, flops:194.05, batch-reuse:1
@ 4862 train 3.9921 , allloss: 3.9921, dt: 703.69ms, fracRes: 0.1824, norm(attn): 36.0000, norm(output): 0.6445, norm(x): 0.7906, norm(y): 0.9798, norm:0.4263, tok/sec: 186262.69, flops:195.54, batch-reuse:1
@ 4863 train 4.1014 , allloss: 4.1014, dt: 708.42ms, fracRes: 0.1835, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5827, norm(y): 0.9795, norm:0.5064, tok/sec: 185018.93, flops:194.23, batch-reuse:1
@ 4864 train 3.9775 , allloss: 3.9775, dt: 697.81ms, fracRes: 0.1828, norm(attn): 36.0000, norm(output): 0.4238, norm(x): 0.5772, norm(y): 0.9786, norm:0.4349, tok/sec: 187833.13, flops:197.19, batch-reuse:1
@ 4865 train 3.8685 , allloss: 3.8685, dt: 715.31ms, fracRes: 0.1845, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5818, norm(y): 0.9755, norm:0.4331, tok/sec: 183237.71, flops:192.36, batch-reuse:1
@ 4866 train 4.0028 , allloss: 4.0028, dt: 695.07ms, fracRes: 0.1840, norm(attn): 35.7500, norm(output): 0.4258, norm(x): 0.5751, norm(y): 0.9694, norm:0.4011, tok/sec: 188574.13, flops:197.97, batch-reuse:1
@ 4867 train 3.9024 , allloss: 3.9024, dt: 704.11ms, fracRes: 0.1818, norm(attn): 35.7500, norm(output): 0.4199, norm(x): 0.5714, norm(y): 0.9648, norm:0.3929, tok/sec: 186152.38, flops:195.42, batch-reuse:1
@ 4868 train 3.8863 , allloss: 3.8863, dt: 703.22ms, fracRes: 0.1822, norm(attn): 35.7500, norm(output): 0.4199, norm(x): 0.5698, norm(y): 0.9610, norm:0.3768, tok/sec: 186387.85, flops:195.67, batch-reuse:1
@ 4869 train 3.9789 , allloss: 3.9789, dt: 706.92ms, fracRes: 0.1822, norm(attn): 35.7500, norm(output): 0.6445, norm(x): 0.7914, norm(y): 0.9629, norm:0.4236, tok/sec: 185412.18, flops:194.65, batch-reuse:1
@ 4870 train 3.9294 , allloss: 3.9294, dt: 698.69ms, fracRes: 0.1843, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5861, norm(y): 0.9716, norm:0.3685, tok/sec: 187596.36, flops:196.94, batch-reuse:1
@ 4871 train 4.0398 , allloss: 4.0398, dt: 698.63ms, fracRes: 0.1835, norm(attn): 36.2500, norm(output): 0.6523, norm(x): 0.8038, norm(y): 0.9757, norm:0.4551, tok/sec: 187613.77, flops:196.96, batch-reuse:1
@ 4872 train 4.1690 , allloss: 4.1690, dt: 713.85ms, fracRes: 0.1825, norm(attn): 36.2500, norm(output): 1.7109, norm(x): 1.8607, norm(y): 0.9741, norm:0.4407, tok/sec: 183613.72, flops:192.76, batch-reuse:1
@ 4873 train 3.8894 , allloss: 3.8894, dt: 713.44ms, fracRes: 0.1820, norm(attn): 36.2500, norm(output): 0.8477, norm(x): 0.9924, norm(y): 0.9772, norm:0.3757, tok/sec: 183717.97, flops:192.87, batch-reuse:1
@ 4874 train 3.9925 , allloss: 3.9925, dt: 707.83ms, fracRes: 0.1820, norm(attn): 36.2500, norm(output): 0.6289, norm(x): 0.7772, norm(y): 0.9788, norm:0.4161, tok/sec: 185174.11, flops:194.40, batch-reuse:1
@ 4875 train 3.9858 , allloss: 3.9858, dt: 710.70ms, fracRes: 0.1833, norm(attn): 36.5000, norm(output): 0.4375, norm(x): 0.5876, norm(y): 0.9834, norm:0.4316, tok/sec: 184425.56, flops:193.61, batch-reuse:1
@ 4876 train 3.9864 , allloss: 3.9864, dt: 704.17ms, fracRes: 0.1838, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5823, norm(y): 0.9853, norm:0.3955, tok/sec: 186136.12, flops:195.41, batch-reuse:1
@ 4877 train 4.0005 , allloss: 4.0005, dt: 702.62ms, fracRes: 0.1839, norm(attn): 37.0000, norm(output): 0.4336, norm(x): 0.5816, norm(y): 0.9857, norm:0.4340, tok/sec: 186546.35, flops:195.84, batch-reuse:1
@ 4878 train 3.8408 , allloss: 3.8408, dt: 715.48ms, fracRes: 0.1830, norm(attn): 36.5000, norm(output): 0.4238, norm(x): 0.5751, norm(y): 0.9844, norm:0.3956, tok/sec: 183194.72, flops:192.32, batch-reuse:1
@ 4879 train 3.9665 , allloss: 3.9665, dt: 716.50ms, fracRes: 0.1837, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5777, norm(y): 0.9839, norm:0.4121, tok/sec: 182934.85, flops:192.05, batch-reuse:1
@ 4880 train 3.8946 , allloss: 3.8946, dt: 715.00ms, fracRes: 0.1842, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5854, norm(y): 0.9840, norm:0.3872, tok/sec: 183316.89, flops:192.45, batch-reuse:1
@ 4881 train 4.0111 , allloss: 4.0111, dt: 713.63ms, fracRes: 0.1826, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5793, norm(y): 0.9830, norm:0.4112, tok/sec: 183669.85, flops:192.82, batch-reuse:1
@ 4882 train 4.0560 , allloss: 4.0560, dt: 719.35ms, fracRes: 0.1828, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5776, norm(y): 0.9824, norm:0.3932, tok/sec: 182209.28, flops:191.28, batch-reuse:1
@ 4883 train 3.9181 , allloss: 3.9181, dt: 701.83ms, fracRes: 0.1823, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5742, norm(y): 0.9822, norm:0.4004, tok/sec: 186757.25, flops:196.06, batch-reuse:1
@ 4884 train 3.8414 , allloss: 3.8414, dt: 707.82ms, fracRes: 0.1828, norm(attn): 36.5000, norm(output): 0.4219, norm(x): 0.5747, norm(y): 0.9825, norm:0.4234, tok/sec: 185177.29, flops:194.40, batch-reuse:1
@ 4885 train 4.1650 , allloss: 4.1650, dt: 711.03ms, fracRes: 0.1829, norm(attn): 36.5000, norm(output): 0.4258, norm(x): 0.5783, norm(y): 0.9839, norm:0.4819, tok/sec: 184340.53, flops:193.52, batch-reuse:1
@ 4886 train 3.8714 , allloss: 3.8714, dt: 709.27ms, fracRes: 0.1826, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5756, norm(y): 0.9842, norm:0.4205, tok/sec: 184797.77, flops:194.00, batch-reuse:1
@ 4887 train 4.0170 , allloss: 4.0170, dt: 716.13ms, fracRes: 0.1837, norm(attn): 36.5000, norm(output): 0.4414, norm(x): 0.5947, norm(y): 0.9863, norm:0.4890, tok/sec: 183029.37, flops:192.14, batch-reuse:1
@ 4888 train 3.8905 , allloss: 3.8905, dt: 715.91ms, fracRes: 0.1839, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5799, norm(y): 0.9854, norm:0.4151, tok/sec: 183084.23, flops:192.20, batch-reuse:1
@ 4889 train 3.9296 , allloss: 3.9296, dt: 717.65ms, fracRes: 0.1843, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5796, norm(y): 0.9854, norm:0.4102, tok/sec: 182641.67, flops:191.74, batch-reuse:1
@ 4890 train 3.9232 , allloss: 3.9232, dt: 710.42ms, fracRes: 0.1846, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5791, norm(y): 0.9858, norm:0.4343, tok/sec: 184498.97, flops:193.69, batch-reuse:1
@ 4891 train 3.9489 , allloss: 3.9489, dt: 716.77ms, fracRes: 0.1843, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5822, norm(y): 0.9858, norm:0.3970, tok/sec: 182865.73, flops:191.97, batch-reuse:1
@ 4892 train 3.9659 , allloss: 3.9659, dt: 716.69ms, fracRes: 0.1844, norm(attn): 36.5000, norm(output): 0.4355, norm(x): 0.5892, norm(y): 0.9847, norm:0.4483, tok/sec: 182884.71, flops:191.99, batch-reuse:1
@ 4893 train 3.9611 , allloss: 3.9611, dt: 718.84ms, fracRes: 0.1833, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5796, norm(y): 0.9829, norm:0.4172, tok/sec: 182338.60, flops:191.42, batch-reuse:1
@ 4894 train 3.9800 , allloss: 3.9800, dt: 718.10ms, fracRes: 0.1829, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5772, norm(y): 0.9798, norm:0.4768, tok/sec: 182527.06, flops:191.62, batch-reuse:1
@ 4895 train 3.9199 , allloss: 3.9199, dt: 717.21ms, fracRes: 0.1849, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5836, norm(y): 0.9743, norm:0.3961, tok/sec: 182752.29, flops:191.85, batch-reuse:1
@ 4896 train 4.0130 , allloss: 4.0130, dt: 715.55ms, fracRes: 0.1857, norm(attn): 36.2500, norm(output): 0.4258, norm(x): 0.5809, norm(y): 0.9748, norm:0.4508, tok/sec: 183176.10, flops:192.30, batch-reuse:1
@ 4897 train 3.9854 , allloss: 3.9854, dt: 715.81ms, fracRes: 0.1844, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5832, norm(y): 0.9795, norm:0.4475, tok/sec: 183111.06, flops:192.23, batch-reuse:1
@ 4898 train 3.9725 , allloss: 3.9725, dt: 713.08ms, fracRes: 0.1831, norm(attn): 36.2500, norm(output): 0.4258, norm(x): 0.5785, norm(y): 0.9830, norm:0.4301, tok/sec: 183811.03, flops:192.97, batch-reuse:1
@ 4899 train 3.9842 , allloss: 3.9842, dt: 715.09ms, fracRes: 0.1835, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5794, norm(y): 0.9855, norm:0.4653, tok/sec: 183293.18, flops:192.42, batch-reuse:1
@ 4900 train 3.9059 , allloss: 3.9059, dt: 714.80ms, fracRes: 0.1825, norm(attn): 36.2500, norm(output): 0.4297, norm(x): 0.5801, norm(y): 0.9854, norm:0.3564, tok/sec: 183368.62, flops:192.50, batch-reuse:1
@ 4901 train 3.9742 , allloss: 3.9742, dt: 718.82ms, fracRes: 0.1838, norm(attn): 36.2500, norm(output): 0.4375, norm(x): 0.5836, norm(y): 0.9860, norm:0.4442, tok/sec: 182343.02, flops:191.42, batch-reuse:1
@ 4902 train 3.7246 , allloss: 3.7246, dt: 718.38ms, fracRes: 0.1820, norm(attn): 36.2500, norm(output): 0.4375, norm(x): 0.5847, norm(y): 0.9870, norm:0.4090, tok/sec: 182455.46, flops:191.54, batch-reuse:1
@ 4903 train 3.8307 , allloss: 3.8307, dt: 768.55ms, fracRes: 0.1816, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5821, norm(y): 0.9886, norm:0.4784, tok/sec: 170544.07, flops:179.04, batch-reuse:1
@ 4904 train 3.8926 , allloss: 3.8926, dt: 703.44ms, fracRes: 0.1812, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5775, norm(y): 0.9884, norm:0.4310, tok/sec: 186328.85, flops:195.61, batch-reuse:1
@ 4905 train 3.8977 , allloss: 3.8977, dt: 699.73ms, fracRes: 0.1801, norm(attn): 36.2500, norm(output): 0.4258, norm(x): 0.5711, norm(y): 0.9883, norm:0.3712, tok/sec: 187318.50, flops:196.65, batch-reuse:1
@ 4906 train 3.9830 , allloss: 3.9830, dt: 700.78ms, fracRes: 0.1810, norm(attn): 36.2500, norm(output): 0.4297, norm(x): 0.5737, norm(y): 0.9884, norm:0.4276, tok/sec: 187038.60, flops:196.35, batch-reuse:1
@ 4907 train 4.0094 , allloss: 4.0094, dt: 706.58ms, fracRes: 0.1808, norm(attn): 36.5000, norm(output): 0.4199, norm(x): 0.5683, norm(y): 0.9890, norm:0.3984, tok/sec: 185500.70, flops:194.74, batch-reuse:1
@ 4908 train 3.9954 , allloss: 3.9954, dt: 698.15ms, fracRes: 0.1827, norm(attn): 36.5000, norm(output): 0.4355, norm(x): 0.5804, norm(y): 0.9897, norm:0.4565, tok/sec: 187742.68, flops:197.09, batch-reuse:1
@ 4909 train 3.9092 , allloss: 3.9092, dt: 699.37ms, fracRes: 0.1818, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5778, norm(y): 0.9894, norm:0.3818, tok/sec: 187414.67, flops:196.75, batch-reuse:1
@ 4910 train 3.8310 , allloss: 3.8310, dt: 704.23ms, fracRes: 0.1820, norm(attn): 36.5000, norm(output): 0.4453, norm(x): 0.5890, norm(y): 0.9890, norm:0.5819, tok/sec: 186121.12, flops:195.39, batch-reuse:1
@ 4911 train 3.8739 , allloss: 3.8739, dt: 706.00ms, fracRes: 0.1830, norm(attn): 36.5000, norm(output): 0.4395, norm(x): 0.5897, norm(y): 0.9888, norm:0.4977, tok/sec: 185655.12, flops:194.90, batch-reuse:1
@ 4912 train 4.0243 , allloss: 4.0243, dt: 705.44ms, fracRes: 0.1834, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5777, norm(y): 0.9899, norm:0.4013, tok/sec: 185802.51, flops:195.06, batch-reuse:1
@ 4913 train 3.9602 , allloss: 3.9602, dt: 698.03ms, fracRes: 0.1826, norm(attn): 36.2500, norm(output): 0.4355, norm(x): 0.5854, norm(y): 0.9907, norm:0.5834, tok/sec: 187773.08, flops:197.12, batch-reuse:1
@ 4914 train 3.9315 , allloss: 3.9315, dt: 704.07ms, fracRes: 0.1871, norm(attn): 36.5000, norm(output): 0.4219, norm(x): 0.5780, norm(y): 0.9899, norm:0.5862, tok/sec: 186162.84, flops:195.43, batch-reuse:1
@ 4915 train 3.8912 , allloss: 3.8912, dt: 712.45ms, fracRes: 0.1861, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5768, norm(y): 0.9879, norm:0.4521, tok/sec: 183973.91, flops:193.14, batch-reuse:1
@ 4916 train 3.9176 , allloss: 3.9176, dt: 701.18ms, fracRes: 0.1839, norm(attn): 36.5000, norm(output): 0.4355, norm(x): 0.5850, norm(y): 0.9864, norm:0.4962, tok/sec: 186930.80, flops:196.24, batch-reuse:1
@ 4917 train 3.8612 , allloss: 3.8612, dt: 695.46ms, fracRes: 0.1824, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5792, norm(y): 0.9845, norm:0.4800, tok/sec: 188466.75, flops:197.85, batch-reuse:1
@ 4918 train 3.8545 , allloss: 3.8545, dt: 719.39ms, fracRes: 0.1826, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5766, norm(y): 0.9819, norm:0.4571, tok/sec: 182198.53, flops:191.27, batch-reuse:1
@ 4919 train 3.8842 , allloss: 3.8842, dt: 707.31ms, fracRes: 0.1841, norm(attn): 36.7500, norm(output): 0.4238, norm(x): 0.5768, norm(y): 0.9780, norm:0.4388, tok/sec: 185309.30, flops:194.54, batch-reuse:1
@ 4920 train 3.9046 , allloss: 3.9046, dt: 717.38ms, fracRes: 0.1840, norm(attn): 36.5000, norm(output): 0.4238, norm(x): 0.5738, norm(y): 0.9710, norm:0.5143, tok/sec: 182709.17, flops:191.81, batch-reuse:1
@ 4921 train 3.8868 , allloss: 3.8868, dt: 704.04ms, fracRes: 0.1833, norm(attn): 36.5000, norm(output): 0.4258, norm(x): 0.5752, norm(y): 0.9780, norm:0.4768, tok/sec: 186170.34, flops:195.44, batch-reuse:1
@ 4922 train 3.8463 , allloss: 3.8463, dt: 711.52ms, fracRes: 0.1828, norm(attn): 37.2500, norm(output): 0.4219, norm(x): 0.5729, norm(y): 0.9788, norm:0.4616, tok/sec: 184214.21, flops:193.39, batch-reuse:1
@ 4923 train 3.8864 , allloss: 3.8864, dt: 693.91ms, fracRes: 0.1830, norm(attn): 37.2500, norm(output): 0.4258, norm(x): 0.5765, norm(y): 0.9798, norm:0.4936, tok/sec: 188888.82, flops:198.30, batch-reuse:1
@ 4924 train 3.9002 , allloss: 3.9002, dt: 709.76ms, fracRes: 0.1836, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5818, norm(y): 0.9816, norm:0.4179, tok/sec: 184671.76, flops:193.87, batch-reuse:1
@ 4925 train 3.8558 , allloss: 3.8558, dt: 711.67ms, fracRes: 0.1827, norm(attn): 37.2500, norm(output): 0.4277, norm(x): 0.5758, norm(y): 0.9835, norm:0.4700, tok/sec: 184174.10, flops:193.35, batch-reuse:1
@ 4926 train 3.9280 , allloss: 3.9280, dt: 707.80ms, fracRes: 0.1834, norm(attn): 37.0000, norm(output): 0.4297, norm(x): 0.5789, norm(y): 0.9847, norm:0.4290, tok/sec: 185182.03, flops:194.40, batch-reuse:1
@ 4927 train 4.0149 , allloss: 4.0149, dt: 708.40ms, fracRes: 0.1837, norm(attn): 36.7500, norm(output): 0.4277, norm(x): 0.5778, norm(y): 0.9856, norm:0.4356, tok/sec: 185024.16, flops:194.24, batch-reuse:1
@ 4928 train 3.8073 , allloss: 3.8073, dt: 717.14ms, fracRes: 0.1844, norm(attn): 36.7500, norm(output): 0.4414, norm(x): 0.5874, norm(y): 0.9866, norm:0.4445, tok/sec: 182770.46, flops:191.87, batch-reuse:1
@ 4929 train 3.8194 , allloss: 3.8194, dt: 695.36ms, fracRes: 0.1850, norm(attn): 36.7500, norm(output): 0.4277, norm(x): 0.5782, norm(y): 0.9860, norm:0.4010, tok/sec: 188496.41, flops:197.88, batch-reuse:1
@ 4930 train 3.8567 , allloss: 3.8567, dt: 700.48ms, fracRes: 0.1826, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5744, norm(y): 0.9863, norm:0.4594, tok/sec: 187117.92, flops:196.44, batch-reuse:1
@ 4931 train 3.9070 , allloss: 3.9070, dt: 708.60ms, fracRes: 0.1830, norm(attn): 37.2500, norm(output): 0.4238, norm(x): 0.5742, norm(y): 0.9860, norm:0.3942, tok/sec: 184974.36, flops:194.19, batch-reuse:1
@ 4932 train 3.9077 , allloss: 3.9077, dt: 711.52ms, fracRes: 0.1834, norm(attn): 37.2500, norm(output): 0.4277, norm(x): 0.5770, norm(y): 0.9859, norm:0.4117, tok/sec: 184213.78, flops:193.39, batch-reuse:1
@ 4933 train 3.8752 , allloss: 3.8752, dt: 711.12ms, fracRes: 0.1834, norm(attn): 36.7500, norm(output): 0.4316, norm(x): 0.5813, norm(y): 0.9872, norm:0.4287, tok/sec: 184318.40, flops:193.50, batch-reuse:1
@ 4934 train 3.8684 , allloss: 3.8684, dt: 715.27ms, fracRes: 0.1829, norm(attn): 37.2500, norm(output): 0.4219, norm(x): 0.5715, norm(y): 0.9864, norm:0.4097, tok/sec: 183249.19, flops:192.38, batch-reuse:1
@ 4935 train 3.9032 , allloss: 3.9032, dt: 710.68ms, fracRes: 0.1823, norm(attn): 37.2500, norm(output): 0.4180, norm(x): 0.5690, norm(y): 0.9855, norm:0.3821, tok/sec: 184433.05, flops:193.62, batch-reuse:1
@ 4936 train 3.9027 , allloss: 3.9027, dt: 701.56ms, fracRes: 0.1838, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5806, norm(y): 0.9848, norm:0.3951, tok/sec: 186830.17, flops:196.13, batch-reuse:1
@ 4937 train 3.9122 , allloss: 3.9122, dt: 707.79ms, fracRes: 0.1844, norm(attn): 36.7500, norm(output): 0.4336, norm(x): 0.5850, norm(y): 0.9844, norm:0.3870, tok/sec: 185184.15, flops:194.41, batch-reuse:1
@ 4938 train 3.8805 , allloss: 3.8805, dt: 695.50ms, fracRes: 0.1846, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5848, norm(y): 0.9839, norm:0.3899, tok/sec: 188456.80, flops:197.84, batch-reuse:1
@ 4939 train 3.9596 , allloss: 3.9596, dt: 708.04ms, fracRes: 0.1843, norm(attn): 36.7500, norm(output): 0.4297, norm(x): 0.5802, norm(y): 0.9840, norm:0.3896, tok/sec: 185119.05, flops:194.34, batch-reuse:1
@ 4940 train 3.8278 , allloss: 3.8278, dt: 692.81ms, fracRes: 0.1820, norm(attn): 37.0000, norm(output): 0.4219, norm(x): 0.5696, norm(y): 0.9848, norm:0.4087, tok/sec: 189188.48, flops:198.61, batch-reuse:1
@ 4941 train 3.8883 , allloss: 3.8883, dt: 690.62ms, fracRes: 0.1821, norm(attn): 37.0000, norm(output): 0.4238, norm(x): 0.5726, norm(y): 0.9848, norm:0.3842, tok/sec: 189788.25, flops:199.24, batch-reuse:1
@ 4942 train 3.8721 , allloss: 3.8721, dt: 695.87ms, fracRes: 0.1808, norm(attn): 37.2500, norm(output): 0.4277, norm(x): 0.5772, norm(y): 0.9836, norm:0.3898, tok/sec: 188356.01, flops:197.74, batch-reuse:1
@ 4943 train 3.9629 , allloss: 3.9629, dt: 693.82ms, fracRes: 0.1809, norm(attn): 37.2500, norm(output): 0.4238, norm(x): 0.5724, norm(y): 0.9834, norm:0.3799, tok/sec: 188913.23, flops:198.32, batch-reuse:1
@ 4944 train 3.8237 , allloss: 3.8237, dt: 698.28ms, fracRes: 0.1826, norm(attn): 36.5000, norm(output): 0.4277, norm(x): 0.5767, norm(y): 0.9823, norm:0.4058, tok/sec: 187706.33, flops:197.05, batch-reuse:1
@ 4945 train 3.9310 , allloss: 3.9310, dt: 691.54ms, fracRes: 0.1842, norm(attn): 36.5000, norm(output): 0.5547, norm(x): 0.7012, norm(y): 0.9787, norm:0.4077, tok/sec: 189536.92, flops:198.98, batch-reuse:1
@ 4946 train 3.8463 , allloss: 3.8463, dt: 706.13ms, fracRes: 0.1842, norm(attn): 36.5000, norm(output): 0.4180, norm(x): 0.5747, norm(y): 0.9766, norm:0.3836, tok/sec: 185620.58, flops:194.86, batch-reuse:1
@ 4947 train 3.8875 , allloss: 3.8875, dt: 704.05ms, fracRes: 0.1828, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5784, norm(y): 0.9782, norm:0.4035, tok/sec: 186169.46, flops:195.44, batch-reuse:1
@ 4948 train 3.8850 , allloss: 3.8850, dt: 700.06ms, fracRes: 0.1829, norm(attn): 36.5000, norm(output): 0.4355, norm(x): 0.5835, norm(y): 0.9822, norm:0.3965, tok/sec: 187229.38, flops:196.55, batch-reuse:1
@ 4949 train 3.8072 , allloss: 3.8072, dt: 711.40ms, fracRes: 0.1825, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5756, norm(y): 0.9846, norm:0.3925, tok/sec: 184245.64, flops:193.42, batch-reuse:1
@ 4950 train 3.8470 , allloss: 3.8470, dt: 704.89ms, fracRes: 0.1838, norm(attn): 37.0000, norm(output): 0.4219, norm(x): 0.5713, norm(y): 0.9861, norm:0.3930, tok/sec: 185945.61, flops:195.21, batch-reuse:1
@ 4951 train 3.7493 , allloss: 3.7493, dt: 702.97ms, fracRes: 0.1839, norm(attn): 37.2500, norm(output): 0.4238, norm(x): 0.5767, norm(y): 0.9866, norm:0.3811, tok/sec: 186454.54, flops:195.74, batch-reuse:1
@ 4952 train 3.8805 , allloss: 3.8805, dt: 705.57ms, fracRes: 0.1839, norm(attn): 37.2500, norm(output): 0.4277, norm(x): 0.5817, norm(y): 0.9862, norm:0.3973, tok/sec: 185767.54, flops:195.02, batch-reuse:1
@ 4953 train 3.7572 , allloss: 3.7572, dt: 694.93ms, fracRes: 0.1835, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5785, norm(y): 0.9844, norm:0.4085, tok/sec: 188611.07, flops:198.00, batch-reuse:1
@ 4954 train 3.8939 , allloss: 3.8939, dt: 693.94ms, fracRes: 0.1834, norm(attn): 37.0000, norm(output): 0.4336, norm(x): 0.5795, norm(y): 0.9824, norm:0.3827, tok/sec: 188880.71, flops:198.29, batch-reuse:1
@ 4955 train 3.9368 , allloss: 3.9368, dt: 709.06ms, fracRes: 0.1854, norm(attn): 37.2500, norm(output): 0.4375, norm(x): 0.5879, norm(y): 0.9818, norm:0.4477, tok/sec: 184852.08, flops:194.06, batch-reuse:1
@ 4956 train 3.8601 , allloss: 3.8601, dt: 709.54ms, fracRes: 0.1823, norm(attn): 37.2500, norm(output): 0.4219, norm(x): 0.5742, norm(y): 0.9807, norm:0.3807, tok/sec: 184727.04, flops:193.93, batch-reuse:1
@ 4957 train 3.9272 , allloss: 3.9272, dt: 709.64ms, fracRes: 0.1831, norm(attn): 37.0000, norm(output): 0.4297, norm(x): 0.5837, norm(y): 0.9799, norm:0.4193, tok/sec: 184701.85, flops:193.90, batch-reuse:1
@ 4958 train 3.8510 , allloss: 3.8510, dt: 703.05ms, fracRes: 0.1827, norm(attn): 37.2500, norm(output): 0.4258, norm(x): 0.5759, norm(y): 0.9779, norm:0.4006, tok/sec: 186432.16, flops:195.72, batch-reuse:1
@ 4959 train 3.9430 , allloss: 3.9430, dt: 700.45ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5756, norm(y): 0.9812, norm:0.4246, tok/sec: 187124.22, flops:196.44, batch-reuse:1
@ 4960 train 3.9147 , allloss: 3.9147, dt: 714.40ms, fracRes: 0.1841, norm(attn): 37.5000, norm(output): 0.4238, norm(x): 0.5723, norm(y): 0.9820, norm:0.3896, tok/sec: 183472.47, flops:192.61, batch-reuse:1
@ 4961 train 3.8281 , allloss: 3.8281, dt: 691.98ms, fracRes: 0.1847, norm(attn): 37.5000, norm(output): 0.4238, norm(x): 0.5725, norm(y): 0.9827, norm:0.4089, tok/sec: 189417.15, flops:198.85, batch-reuse:1
@ 4962 train 3.8538 , allloss: 3.8538, dt: 705.20ms, fracRes: 0.1834, norm(attn): 37.5000, norm(output): 0.4180, norm(x): 0.5720, norm(y): 0.9846, norm:0.3895, tok/sec: 185865.71, flops:195.12, batch-reuse:1
@ 4963 train 3.8892 , allloss: 3.8892, dt: 705.12ms, fracRes: 0.1846, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5847, norm(y): 0.9866, norm:0.3900, tok/sec: 185886.63, flops:195.14, batch-reuse:1
@ 4964 train 3.7650 , allloss: 3.7650, dt: 696.68ms, fracRes: 0.1843, norm(attn): 37.7500, norm(output): 0.4355, norm(x): 0.5862, norm(y): 0.9873, norm:0.3673, tok/sec: 188137.81, flops:197.51, batch-reuse:1
@ 4965 train 3.7949 , allloss: 3.7949, dt: 704.49ms, fracRes: 0.1834, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5790, norm(y): 0.9878, norm:0.3746, tok/sec: 186052.84, flops:195.32, batch-reuse:1
@ 4966 train 3.8466 , allloss: 3.8466, dt: 704.13ms, fracRes: 0.1849, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5809, norm(y): 0.9876, norm:0.3904, tok/sec: 186147.40, flops:195.42, batch-reuse:1
@ 4967 train 3.7260 , allloss: 3.7260, dt: 706.21ms, fracRes: 0.1836, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5777, norm(y): 0.9876, norm:0.3866, tok/sec: 185599.21, flops:194.84, batch-reuse:1
@ 4968 train 3.7853 , allloss: 3.7853, dt: 711.82ms, fracRes: 0.1816, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5742, norm(y): 0.9877, norm:0.3769, tok/sec: 184137.58, flops:193.31, batch-reuse:1
@ 4969 train 3.8072 , allloss: 3.8072, dt: 695.43ms, fracRes: 0.1832, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5812, norm(y): 0.9882, norm:0.4071, tok/sec: 188476.31, flops:197.86, batch-reuse:1
@ 4970 train 3.9383 , allloss: 3.9383, dt: 701.64ms, fracRes: 0.1851, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5817, norm(y): 0.9886, norm:0.4265, tok/sec: 186809.16, flops:196.11, batch-reuse:1
@ 4971 train 3.7920 , allloss: 3.7920, dt: 703.88ms, fracRes: 0.1841, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5813, norm(y): 0.9884, norm:0.4264, tok/sec: 186212.78, flops:195.49, batch-reuse:1
@ 4972 train 3.7862 , allloss: 3.7862, dt: 703.69ms, fracRes: 0.1834, norm(attn): 37.7500, norm(output): 0.4277, norm(x): 0.5763, norm(y): 0.9880, norm:0.4225, tok/sec: 186264.27, flops:195.54, batch-reuse:1
@ 4973 train 3.7478 , allloss: 3.7478, dt: 703.71ms, fracRes: 0.1830, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5774, norm(y): 0.9868, norm:0.4102, tok/sec: 186258.27, flops:195.53, batch-reuse:1
@ 4974 train 3.7703 , allloss: 3.7703, dt: 700.64ms, fracRes: 0.1831, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5827, norm(y): 0.9851, norm:0.4058, tok/sec: 187075.51, flops:196.39, batch-reuse:1
@ 4975 train 3.9036 , allloss: 3.9036, dt: 703.53ms, fracRes: 0.1836, norm(attn): 37.0000, norm(output): 0.4258, norm(x): 0.5770, norm(y): 0.9810, norm:0.4660, tok/sec: 186306.37, flops:195.58, batch-reuse:1
@ 4976 train 3.7982 , allloss: 3.7982, dt: 704.31ms, fracRes: 0.1836, norm(attn): 36.5000, norm(output): 0.4238, norm(x): 0.5765, norm(y): 0.9774, norm:0.3981, tok/sec: 186100.08, flops:195.37, batch-reuse:1
@ 4977 train 3.8751 , allloss: 3.8751, dt: 706.52ms, fracRes: 0.1832, norm(attn): 36.5000, norm(output): 0.4258, norm(x): 0.5754, norm(y): 0.9759, norm:0.4580, tok/sec: 185518.92, flops:194.76, batch-reuse:1
@ 4978 train 3.7014 , allloss: 3.7014, dt: 706.54ms, fracRes: 0.1832, norm(attn): 37.5000, norm(output): 0.4238, norm(x): 0.5743, norm(y): 0.9834, norm:0.4326, tok/sec: 185512.22, flops:194.75, batch-reuse:1
@ 4979 train 3.8002 , allloss: 3.8002, dt: 727.94ms, fracRes: 0.1829, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5763, norm(y): 0.9848, norm:0.4880, tok/sec: 180058.66, flops:189.03, batch-reuse:1
@ 4980 train 3.7720 , allloss: 3.7720, dt: 719.35ms, fracRes: 0.1845, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5815, norm(y): 0.9866, norm:0.3976, tok/sec: 182208.37, flops:191.28, batch-reuse:1
@ 4981 train 3.9303 , allloss: 3.9303, dt: 709.63ms, fracRes: 0.1846, norm(attn): 37.5000, norm(output): 0.4219, norm(x): 0.5736, norm(y): 0.9869, norm:0.3845, tok/sec: 184705.51, flops:193.90, batch-reuse:1
@ 4982 train 3.8150 , allloss: 3.8150, dt: 719.66ms, fracRes: 0.1824, norm(attn): 37.5000, norm(output): 0.4180, norm(x): 0.5676, norm(y): 0.9860, norm:0.4135, tok/sec: 182131.53, flops:191.20, batch-reuse:1
@ 4983 train 3.7970 , allloss: 3.7970, dt: 719.28ms, fracRes: 0.1830, norm(attn): 37.5000, norm(output): 0.4258, norm(x): 0.5744, norm(y): 0.9851, norm:0.4207, tok/sec: 182226.67, flops:191.30, batch-reuse:1
@ 4984 train 3.8026 , allloss: 3.8026, dt: 710.07ms, fracRes: 0.1825, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5821, norm(y): 0.9841, norm:0.3866, tok/sec: 184590.40, flops:193.78, batch-reuse:1
@ 4985 train 3.7948 , allloss: 3.7948, dt: 696.24ms, fracRes: 0.1868, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5914, norm(y): 0.9834, norm:0.5774, tok/sec: 188256.94, flops:197.63, batch-reuse:1
@ 4986 train 3.7861 , allloss: 3.7861, dt: 706.71ms, fracRes: 0.1850, norm(attn): 37.5000, norm(output): 0.4258, norm(x): 0.5769, norm(y): 0.9846, norm:0.4186, tok/sec: 185467.16, flops:194.70, batch-reuse:1
@ 4987 train 3.8798 , allloss: 3.8798, dt: 705.17ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4219, norm(x): 0.5723, norm(y): 0.9852, norm:0.5031, tok/sec: 185872.87, flops:195.13, batch-reuse:1
@ 4988 train 3.6915 , allloss: 3.6915, dt: 710.11ms, fracRes: 0.1832, norm(attn): 37.5000, norm(output): 0.4238, norm(x): 0.5704, norm(y): 0.9844, norm:0.4500, tok/sec: 184580.80, flops:193.77, batch-reuse:1
@ 4989 train 3.9413 , allloss: 3.9413, dt: 699.35ms, fracRes: 0.1833, norm(attn): 37.5000, norm(output): 0.4316, norm(x): 0.5801, norm(y): 0.9847, norm:0.4622, tok/sec: 187420.42, flops:196.75, batch-reuse:1
@ 4990 train 3.8288 , allloss: 3.8288, dt: 700.89ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5806, norm(y): 0.9824, norm:0.4502, tok/sec: 187007.42, flops:196.32, batch-reuse:1
@ 4991 train 3.8093 , allloss: 3.8093, dt: 708.76ms, fracRes: 0.1846, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5826, norm(y): 0.9777, norm:0.4165, tok/sec: 184932.29, flops:194.14, batch-reuse:1
@ 4992 train 3.8134 , allloss: 3.8134, dt: 702.79ms, fracRes: 0.1853, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5824, norm(y): 0.9653, norm:0.4757, tok/sec: 186503.25, flops:195.79, batch-reuse:1
@ 4993 train 3.8205 , allloss: 3.8205, dt: 709.77ms, fracRes: 0.1842, norm(attn): 35.7500, norm(output): 0.4238, norm(x): 0.5761, norm(y): 0.9460, norm:0.4930, tok/sec: 184667.04, flops:193.86, batch-reuse:1
@ 4994 train 3.8114 , allloss: 3.8114, dt: 705.75ms, fracRes: 0.1839, norm(attn): 37.2500, norm(output): 0.4258, norm(x): 0.5798, norm(y): 0.9781, norm:0.4781, tok/sec: 185719.34, flops:194.97, batch-reuse:1
@ 4995 train 3.7406 , allloss: 3.7406, dt: 702.18ms, fracRes: 0.1855, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5905, norm(y): 0.9877, norm:0.5512, tok/sec: 186665.30, flops:195.96, batch-reuse:1
@ 4996 train 3.8611 , allloss: 3.8611, dt: 697.25ms, fracRes: 0.1848, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5800, norm(y): 0.9903, norm:0.4663, tok/sec: 187982.97, flops:197.34, batch-reuse:1
@ 4997 train 3.7832 , allloss: 3.7832, dt: 699.20ms, fracRes: 0.1854, norm(attn): 37.5000, norm(output): 0.4258, norm(x): 0.5785, norm(y): 0.9912, norm:0.4744, tok/sec: 187460.74, flops:196.80, batch-reuse:1
@ 4998 train 3.8606 , allloss: 3.8606, dt: 695.57ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5880, norm(y): 0.9917, norm:0.4195, tok/sec: 188437.94, flops:197.82, batch-reuse:1
@ 4999 train 3.7309 , allloss: 3.7309, dt: 700.77ms, fracRes: 0.1854, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5851, norm(y): 0.9914, norm:0.4924, tok/sec: 187040.31, flops:196.36, batch-reuse:1
@ 5000 train 3.7865 , allloss: 3.7865, dt: 1673.92ms, fracRes: 0.1863, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5922, norm(y): 0.9918, norm:0.4129, tok/sec: 78302.58, flops:82.20, batch-reuse:1
@ 5001 train 3.6920 , allloss: 3.6920, dt: 710.63ms, fracRes: 0.1854, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5877, norm(y): 0.9915, norm:0.4600, tok/sec: 184445.86, flops:193.63, batch-reuse:1
@ 5002 train 3.9304 , allloss: 3.9304, dt: 718.62ms, fracRes: 0.1849, norm(attn): 37.2500, norm(output): 0.4355, norm(x): 0.5867, norm(y): 0.9924, norm:0.4961, tok/sec: 182393.35, flops:191.48, batch-reuse:1
@ 5003 train 3.8322 , allloss: 3.8322, dt: 710.58ms, fracRes: 0.1850, norm(attn): 37.0000, norm(output): 0.6250, norm(x): 0.7808, norm(y): 0.9907, norm:0.5241, tok/sec: 184457.55, flops:193.64, batch-reuse:1
@ 5004 train 3.9153 , allloss: 3.9153, dt: 706.44ms, fracRes: 0.1864, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.5977, norm(y): 0.9924, norm:0.4930, tok/sec: 185538.14, flops:194.78, batch-reuse:1
@ 5005 train 3.8005 , allloss: 3.8005, dt: 711.39ms, fracRes: 0.1844, norm(attn): 36.5000, norm(output): 0.6367, norm(x): 0.7843, norm(y): 0.9908, norm:0.4724, tok/sec: 184247.24, flops:193.42, batch-reuse:1
@ 5006 train 3.9344 , allloss: 3.9344, dt: 704.08ms, fracRes: 0.1827, norm(attn): 36.0000, norm(output): 0.8398, norm(x): 0.9848, norm(y): 0.9895, norm:0.5071, tok/sec: 186161.96, flops:195.43, batch-reuse:1
@ 5007 train 3.8157 , allloss: 3.8157, dt: 705.41ms, fracRes: 0.1827, norm(attn): 35.0000, norm(output): 0.4336, norm(x): 0.5803, norm(y): 0.9881, norm:0.4986, tok/sec: 185810.55, flops:195.06, batch-reuse:1
@ 5008 train 3.8850 , allloss: 3.8850, dt: 712.23ms, fracRes: 0.1826, norm(attn): 36.2500, norm(output): 0.4375, norm(x): 0.5840, norm(y): 0.9911, norm:0.4155, tok/sec: 184029.83, flops:193.19, batch-reuse:1
@ 5009 train 3.7359 , allloss: 3.7359, dt: 710.85ms, fracRes: 0.1831, norm(attn): 37.5000, norm(output): 0.4316, norm(x): 0.5811, norm(y): 0.9917, norm:0.5078, tok/sec: 184388.57, flops:193.57, batch-reuse:1
@ 5010 train 3.8290 , allloss: 3.8290, dt: 709.77ms, fracRes: 0.1846, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5828, norm(y): 0.9920, norm:0.3811, tok/sec: 184668.34, flops:193.87, batch-reuse:1
@ 5011 train 3.7913 , allloss: 3.7913, dt: 709.68ms, fracRes: 0.1846, norm(attn): 37.7500, norm(output): 0.4297, norm(x): 0.5782, norm(y): 0.9925, norm:0.4316, tok/sec: 184692.29, flops:193.89, batch-reuse:1
@ 5012 train 3.8607 , allloss: 3.8607, dt: 697.43ms, fracRes: 0.1864, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5880, norm(y): 0.9929, norm:0.4584, tok/sec: 187934.64, flops:197.29, batch-reuse:1
@ 5013 train 4.0226 , allloss: 4.0226, dt: 707.49ms, fracRes: 0.1873, norm(attn): 38.0000, norm(output): 0.4414, norm(x): 0.5967, norm(y): 0.9938, norm:0.4548, tok/sec: 185264.53, flops:194.49, batch-reuse:1
@ 5014 train 3.9434 , allloss: 3.9434, dt: 708.18ms, fracRes: 0.1865, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5986, norm(y): 0.9937, norm:0.4017, tok/sec: 185082.53, flops:194.30, batch-reuse:1
@ 5015 train 3.8813 , allloss: 3.8813, dt: 710.47ms, fracRes: 0.1857, norm(attn): 37.7500, norm(output): 0.4355, norm(x): 0.5855, norm(y): 0.9921, norm:0.4062, tok/sec: 184485.90, flops:193.67, batch-reuse:1
@ 5016 train 3.8916 , allloss: 3.8916, dt: 709.11ms, fracRes: 0.1855, norm(attn): 37.7500, norm(output): 0.4414, norm(x): 0.5913, norm(y): 0.9918, norm:0.4470, tok/sec: 184838.97, flops:194.04, batch-reuse:1
@ 5017 train 3.9890 , allloss: 3.9890, dt: 702.33ms, fracRes: 0.1880, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6068, norm(y): 0.9920, norm:0.5472, tok/sec: 186625.00, flops:195.92, batch-reuse:1
@ 5018 train 3.9630 , allloss: 3.9630, dt: 700.97ms, fracRes: 0.1856, norm(attn): 36.2500, norm(output): 0.4414, norm(x): 0.5944, norm(y): 0.9916, norm:0.4615, tok/sec: 186985.79, flops:196.30, batch-reuse:1
@ 5019 train 3.9475 , allloss: 3.9475, dt: 711.00ms, fracRes: 0.1854, norm(attn): 37.2500, norm(output): 0.4375, norm(x): 0.5902, norm(y): 0.9918, norm:0.4226, tok/sec: 184348.50, flops:193.53, batch-reuse:1
@ 5020 train 3.9515 , allloss: 3.9515, dt: 705.52ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5927, norm(y): 0.9917, norm:0.4234, tok/sec: 185781.85, flops:195.03, batch-reuse:1
@ 5021 train 3.9327 , allloss: 3.9327, dt: 701.86ms, fracRes: 0.1844, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5881, norm(y): 0.9917, norm:0.4063, tok/sec: 186749.44, flops:196.05, batch-reuse:1
@ 5022 train 3.9983 , allloss: 3.9983, dt: 708.58ms, fracRes: 0.1865, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5941, norm(y): 0.9923, norm:0.4801, tok/sec: 184977.84, flops:194.19, batch-reuse:1
@ 5023 train 4.0203 , allloss: 4.0203, dt: 720.59ms, fracRes: 0.1878, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5930, norm(y): 0.9924, norm:0.4470, tok/sec: 181895.54, flops:190.95, batch-reuse:1
@ 5024 train 4.0125 , allloss: 4.0125, dt: 718.30ms, fracRes: 0.1861, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5886, norm(y): 0.9923, norm:0.4164, tok/sec: 182475.87, flops:191.56, batch-reuse:1
@ 5025 train 3.9344 , allloss: 3.9344, dt: 699.66ms, fracRes: 0.1847, norm(attn): 38.0000, norm(output): 0.4277, norm(x): 0.5794, norm(y): 0.9915, norm:0.4386, tok/sec: 187337.84, flops:196.67, batch-reuse:1
@ 5026 train 3.9198 , allloss: 3.9198, dt: 707.21ms, fracRes: 0.1834, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5786, norm(y): 0.9911, norm:0.4361, tok/sec: 185337.42, flops:194.57, batch-reuse:1
@ 5027 train 3.9062 , allloss: 3.9062, dt: 708.55ms, fracRes: 0.1829, norm(attn): 38.0000, norm(output): 0.4375, norm(x): 0.5887, norm(y): 0.9926, norm:0.4310, tok/sec: 184986.37, flops:194.20, batch-reuse:1
@ 5028 train 3.9372 , allloss: 3.9372, dt: 707.00ms, fracRes: 0.1835, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5794, norm(y): 0.9911, norm:0.4399, tok/sec: 185391.92, flops:194.62, batch-reuse:1
@ 5029 train 3.9070 , allloss: 3.9070, dt: 696.06ms, fracRes: 0.1855, norm(attn): 38.0000, norm(output): 0.4355, norm(x): 0.5890, norm(y): 0.9918, norm:0.4276, tok/sec: 188305.11, flops:197.68, batch-reuse:1
@ 5030 train 3.9638 , allloss: 3.9638, dt: 711.24ms, fracRes: 0.1859, norm(attn): 37.7500, norm(output): 0.4316, norm(x): 0.5878, norm(y): 0.9913, norm:0.4048, tok/sec: 184286.34, flops:193.46, batch-reuse:1
@ 5031 train 3.9321 , allloss: 3.9321, dt: 708.73ms, fracRes: 0.1842, norm(attn): 38.0000, norm(output): 0.4355, norm(x): 0.5862, norm(y): 0.9911, norm:0.4790, tok/sec: 184939.64, flops:194.15, batch-reuse:1
@ 5032 train 3.8478 , allloss: 3.8478, dt: 707.16ms, fracRes: 0.1858, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5855, norm(y): 0.9914, norm:0.4074, tok/sec: 185349.60, flops:194.58, batch-reuse:1
@ 5033 train 3.8371 , allloss: 3.8371, dt: 712.08ms, fracRes: 0.1859, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5877, norm(y): 0.9917, norm:0.4140, tok/sec: 184068.40, flops:193.24, batch-reuse:1
@ 5034 train 3.9673 , allloss: 3.9673, dt: 718.18ms, fracRes: 0.1863, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5863, norm(y): 0.9916, norm:0.4073, tok/sec: 182505.37, flops:191.59, batch-reuse:1
@ 5035 train 4.2195 , allloss: 4.2195, dt: 710.67ms, fracRes: 0.1903, norm(attn): 38.2500, norm(output): 0.4492, norm(x): 0.6046, norm(y): 0.9927, norm:0.5132, tok/sec: 184433.42, flops:193.62, batch-reuse:1
@ 5036 train 3.8766 , allloss: 3.8766, dt: 703.53ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5886, norm(y): 0.9919, norm:0.5141, tok/sec: 186304.98, flops:195.58, batch-reuse:1
@ 5037 train 3.9701 , allloss: 3.9701, dt: 704.50ms, fracRes: 0.1870, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5878, norm(y): 0.9917, norm:0.4263, tok/sec: 186048.43, flops:195.31, batch-reuse:1
@ 5038 train 3.9634 , allloss: 3.9634, dt: 706.73ms, fracRes: 0.1839, norm(attn): 38.5000, norm(output): 0.4316, norm(x): 0.5806, norm(y): 0.9914, norm:0.4884, tok/sec: 185462.84, flops:194.70, batch-reuse:1
@ 5039 train 3.9251 , allloss: 3.9251, dt: 715.08ms, fracRes: 0.1833, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5902, norm(y): 0.9918, norm:0.4401, tok/sec: 183296.66, flops:192.43, batch-reuse:1
@ 5040 train 4.0008 , allloss: 4.0008, dt: 706.71ms, fracRes: 0.1828, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5902, norm(y): 0.9921, norm:0.4485, tok/sec: 185468.91, flops:194.71, batch-reuse:1
@ 5041 train 3.9922 , allloss: 3.9922, dt: 707.43ms, fracRes: 0.1832, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5869, norm(y): 0.9921, norm:0.3899, tok/sec: 185279.01, flops:194.51, batch-reuse:1
@ 5042 train 4.1401 , allloss: 4.1401, dt: 709.92ms, fracRes: 0.1856, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5901, norm(y): 0.9938, norm:0.5122, tok/sec: 184629.64, flops:193.82, batch-reuse:1
@ 5043 train 3.8872 , allloss: 3.8872, dt: 711.91ms, fracRes: 0.1857, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5939, norm(y): 0.9928, norm:0.4565, tok/sec: 184113.53, flops:193.28, batch-reuse:1
@ 5044 train 3.8944 , allloss: 3.8944, dt: 710.78ms, fracRes: 0.1844, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5824, norm(y): 0.9917, norm:0.4315, tok/sec: 184405.46, flops:193.59, batch-reuse:1
@ 5045 train 3.8348 , allloss: 3.8348, dt: 703.78ms, fracRes: 0.1819, norm(attn): 38.5000, norm(output): 0.4277, norm(x): 0.5750, norm(y): 0.9910, norm:0.4384, tok/sec: 186240.22, flops:195.52, batch-reuse:1
@ 5046 train 4.0313 , allloss: 4.0313, dt: 708.55ms, fracRes: 0.1840, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5832, norm(y): 0.9919, norm:0.4469, tok/sec: 184987.49, flops:194.20, batch-reuse:1
@ 5047 train 3.9570 , allloss: 3.9570, dt: 705.26ms, fracRes: 0.1863, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5915, norm(y): 0.9918, norm:0.4801, tok/sec: 185848.68, flops:195.10, batch-reuse:1
@ 5048 train 3.8094 , allloss: 3.8094, dt: 705.78ms, fracRes: 0.1851, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5867, norm(y): 0.9910, norm:0.4411, tok/sec: 185712.25, flops:194.96, batch-reuse:1
@ 5049 train 3.8699 , allloss: 3.8699, dt: 699.33ms, fracRes: 0.1839, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5809, norm(y): 0.9899, norm:0.4668, tok/sec: 187426.36, flops:196.76, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4004, 0.6016, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.8398, 0.1094, 0.0503, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6172, 0.1982, 0.1289, 0.0574, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6602, 0.1836, 0.0498, 0.0684, 0.0378, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5234, 0.1885, 0.0669, 0.0894, 0.0466, 0.0845, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2383, 0.2637, 0.0708, 0.0903, 0.0698, 0.1631, 0.1030, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2852, 0.2080, 0.0625, 0.0608, 0.0835, 0.1279, 0.1191, 0.0527, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1611, 0.2031, 0.0698, 0.0767, 0.0830, 0.1875, 0.1143, 0.0625, 0.0430, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1221, 0.1729, 0.0854, 0.0586, 0.0894, 0.1069, 0.1895, 0.0952, 0.0581, 0.0215, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1055, 0.0884, 0.0454, 0.0588, 0.0747, 0.2148, 0.1768, 0.0874, 0.0771, 0.0188, 0.0508, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0576, 0.0972, 0.0557, 0.0481, 0.0845, 0.1348, 0.2080, 0.0977, 0.0854, 0.0654, 0.0361, 0.0294, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.0732, 0.0137, 0.0182, 0.0593, 0.1748, 0.2051, 0.1055, 0.0869, 0.0151, 0.0344, 0.0133, 0.0259, 0.0000, 0.0000],
        [0.0530, 0.0679, 0.0260, 0.0294, 0.0615, 0.1367, 0.1787, 0.0869, 0.1123, 0.0505, 0.0742, 0.0452, 0.0339, 0.0437, 0.0000],
        [0.0260, 0.0244, 0.0201, 0.0187, 0.0532, 0.0640, 0.1729, 0.0593, 0.1748, 0.0859, 0.0884, 0.0496, 0.0369, 0.0874, 0.0378]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0396, -0.8789, -1.5859, -1.2109, -1.1797, -0.8633, -0.8945, -0.6836, -1.0703, -1.8281, -1.2969, -1.7188, -0.8477, -1.1094, -1.2969],
        [ 0.0347,  0.4414, -0.8984, -1.0312, -0.6641, -0.2363, -0.1309, -0.1621, -0.1953, -1.0391, -1.1328, -1.3750, -0.7344, -0.6562, -0.6250],
        [-0.0359, -2.0781, -2.8594, -2.8750, -2.6875, -2.5781, -2.8594, -3.0312, -3.2344, -3.6094, -3.3594, -3.6719, -2.9219, -3.7031, -3.5469],
        [-0.0342, -1.1719, -1.6016, -2.4062, -2.0625, -2.1562, -2.2500, -2.2656, -2.7031, -2.7500, -2.7031, -2.5938, -2.0781, -2.9688, -2.5781],
        [ 0.0195, -1.2578, -2.5625, -2.2500, -2.8438, -1.6094, -2.3281, -2.3906, -3.2500, -4.1250, -3.3125, -3.3438, -2.3281, -3.2969, -3.0625],
        [ 0.0400, -0.9805, -2.0156, -1.7344, -2.3750, -1.7812, -1.9297, -1.9609, -2.6406, -3.6562, -2.5312, -2.8906, -1.9922, -2.5156, -2.5312],
        [ 0.0640,  0.1650, -1.1484, -0.9102, -1.1641, -0.3145, -0.7773, -1.0859, -1.4219, -2.2500, -1.7500, -2.1094, -1.1172, -1.1875, -0.8008],
        [ 0.0913, -0.2236, -1.4297, -1.4609, -1.1406, -0.7148, -0.7812, -1.6016, -1.7812, -3.1875, -2.0000, -2.7656, -1.9609, -1.7031, -1.8125],
        [ 0.0786,  0.3125, -0.7539, -0.6602, -0.5859,  0.2305, -0.2637, -0.8672, -1.2344, -2.3281, -1.3047, -1.7812, -1.4297, -1.3047, -1.2500],
        [ 0.0820,  0.4297, -0.2754, -0.6523, -0.2314, -0.0518,  0.5234, -0.1699, -0.6602, -1.6562, -1.2266, -1.1250, -0.9648, -0.9102, -0.8203],
        [ 0.0981, -0.0815, -0.7422, -0.4844, -0.2471,  0.8086,  0.6133, -0.0889, -0.2158, -1.6250, -0.6328, -1.6406, -0.8359, -0.5000, -0.6680],
        [ 0.0635,  0.5859,  0.0294, -0.1138,  0.4453,  0.9141,  1.3516,  0.5938,  0.4590,  0.1934, -0.4023, -0.6094, -0.4434, -0.2490, -0.0454],
        [ 0.1465, -0.7266, -2.4062, -2.1250, -0.9375,  0.1436,  0.3066, -0.3594, -0.5547, -2.2969, -1.4766, -2.4219, -1.7656, -1.7422, -1.7500],
        [ 0.1089,  0.3574, -0.6055, -0.4785,  0.2598,  1.0625,  1.3203,  0.6016,  0.8594,  0.0603,  0.4473, -0.0486, -0.3359, -0.0845, -0.2393],
        [ 0.0913,  0.0259, -0.1670, -0.2441,  0.8047,  0.9922,  1.9844,  0.9141,  2.0000,  1.2891,  1.3125,  0.7344,  0.4414,  1.2969,  0.4648]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3885],
        [0.2901],
        [0.2216],
        [0.2352],
        [0.1890],
        [0.1650],
        [0.1730],
        [0.1231],
        [0.0938],
        [0.1337],
        [0.0397],
        [0.1502],
        [0.0917],
        [0.0471]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0004,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.9766,     0.0248,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9805,     0.0091,     0.0096,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0099,     0.0002,     0.0045,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0037,     0.0006,     0.0017,     0.0291,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9141,     0.0101,     0.0000,     0.0056,     0.0048,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8750,     0.0022,     0.0260,     0.0352,     0.0023,     0.0236,     0.0354,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8242,     0.0303,     0.0020,     0.0028,     0.0811,     0.0216,     0.0066,     0.0309,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8047,     0.0036,     0.0069,     0.0036,     0.0003,     0.0079,     0.0022,     0.1553,     0.0148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7891,     0.0014,     0.0004,     0.0009,     0.0008,     0.0077,     0.0022,     0.1226,     0.0076,     0.0669,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.6406,     0.0251,     0.0054,     0.0030,     0.0110,     0.0143,     0.2393,     0.0221,     0.0018,     0.0025,     0.0359,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2520,     0.0009,     0.0011,     0.0014,     0.0002,     0.0061,     0.0046,     0.6914,     0.0030,     0.0001,     0.0063,     0.0310,     0.0000,     0.0000],
        [    0.0001,     0.2637,     0.0168,     0.0014,     0.0026,     0.0229,     0.0084,     0.0030,     0.0097,     0.6367,     0.0013,     0.0096,     0.0025,     0.0208,     0.0000],
        [    0.0002,     0.6367,     0.0439,     0.0025,     0.0306,     0.0003,     0.0049,     0.0066,     0.0227,     0.0835,     0.0123,     0.0131,     0.0007,     0.0137,     0.1299]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0162,      0.7227,      0.4648,      0.0093,      0.1982,      0.3262,      0.4102,      0.4648,      0.3047,      0.2773,     -0.0757,      0.3672,      0.2041,      0.1484,      0.2793],
        [     0.1216,      7.9375,      6.6562,      1.0703,      3.0469,      5.0000,      4.4062,      4.4375,      2.7188,      3.8906,     -0.4531,      3.5000,      1.4531,      1.1641,      4.1562],
        [     0.1191,     10.0000,      6.3125,     14.3750,      8.7500,      5.4062,      6.3125,      3.6094,      5.9688,      5.4062,      3.1250,      3.8125,      3.3281,      4.8125,      5.8125],
        [     0.1436,     13.3125,      8.6250,      8.6875,     16.3750,      9.0000,      9.2500,     10.9375,      8.1875,      7.0938,      2.7188,      6.3438,      5.8125,      4.3125,      7.5938],
        [     0.2236,     11.4375,      6.8750,      3.0312,      6.0938,     12.5625,      8.2500,      6.7812,      3.7812,      6.7188,     -2.4531,      6.1875,      2.2188,      1.1875,      5.7812],
        [     0.2002,     11.1875,      5.6562,      3.7500,      4.8438,      7.6875,     11.5000,      9.6875,      7.5312,      6.2188,     -0.3477,      6.8438,      2.2188,      4.1250,      5.4688],
        [     0.2441,     11.5625,      7.0625,      0.4805,      6.4688,      6.3125,      8.9375,     14.1250,      8.4375,      6.4062,     -0.4805,      7.7812,      5.9688,      5.3750,      6.6250],
        [     0.2471,     10.3125,      4.3125,      6.8125,      7.1250,      4.3750,      6.7188,      7.1250,     11.8125,      6.9062,      2.2656,      6.7188,      4.6562,     10.0000,      6.5000],
        [     0.1729,      8.8125,      5.5312,      2.8125,      3.1250,      6.5000,      5.1875,      4.0000,      5.5312,      9.7500,      2.6875,      5.7500,      2.2812,      4.1875,      9.4375],
        [     0.0693,      8.9375,      3.5156,      4.1562,      3.5156,      1.1328,      4.3125,      3.0312,      7.2812,      4.9375,     13.6250,      7.5000,      4.7812,      7.5312,      6.2812],
        [     0.1484,     11.3125,      4.9375,      3.7500,      4.5625,      4.4062,      6.6562,      5.4062,      9.4375,      6.6562,      8.8125,     12.8750,      6.2500,      8.7500,      8.4375],
        [     0.0615,      7.6562,      4.4062,      2.8906,      2.3125,      3.5938,      3.8594,      6.6875,      4.2812,      1.7969,      2.1406,      4.7812,     13.9375,      7.8125,      4.0938],
        [     0.2412,     11.3125,      5.7188,      5.9062,      6.1875,      4.3125,      7.6250,      7.3438,     12.3750,      6.9062,      3.0938,      7.6562,      9.2500,     14.9375,      8.6875],
        [     0.1221,      7.8750,      5.1250,      2.6250,      3.2500,      5.4375,      4.4375,      3.3750,      4.5625,      8.7500,      2.5469,      4.5625,      3.1875,      5.3125,     10.3125],
        [     0.1289,      8.4375,      5.7500,      2.8594,      5.3750,      0.6836,      3.5312,      3.8438,      5.0938,      6.3750,      4.4688,      4.5312,      1.5703,      4.5625,      6.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3794],
        [0.3129],
        [0.2141],
        [0.2817],
        [0.3010],
        [0.1794],
        [0.1940],
        [0.2312],
        [0.2631],
        [0.2053],
        [0.2106],
        [0.2112],
        [0.1651],
        [0.1659]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0010,     0.6914,     0.3086,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0211,     0.6133,     0.3555,     0.0099,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0028,     0.5820,     0.0583,     0.0010,     0.3574,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2949,     0.1904,     0.4453,     0.0085,     0.0114,     0.0491,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0069,     0.4102,     0.1279,     0.0018,     0.0393,     0.0014,     0.4121,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0093,     0.0933,     0.1523,     0.0337,     0.0106,     0.0203,     0.6016,     0.0806,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0009,     0.0208,     0.0031,     0.0002,     0.0210,     0.0007,     0.0000,     0.0003,     0.9531,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0562,     0.0933,     0.1729,     0.0219,     0.0476,     0.0703,     0.0189,     0.0610,     0.3008,     0.1562,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0003,     0.2734,     0.0388,     0.0171,     0.0889,     0.0234,     0.0006,     0.0143,     0.3926,     0.0364,     0.1147,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0193,     0.0281,     0.0840,     0.0023,     0.0571,     0.0161,     0.3496,     0.0986,     0.1807,     0.1260,     0.0366,     0.0000,     0.0000,     0.0000],
        [    0.0918,     0.0559,     0.0457,     0.0302,     0.0204,     0.0065,     0.1787,     0.0364,     0.0422,     0.0366,     0.0287,     0.3066,     0.1201,     0.0000,     0.0000],
        [    0.0015,     0.0205,     0.0019,     0.0006,     0.0133,     0.0011,     0.0000,     0.0012,     0.5430,     0.0041,     0.0305,     0.0029,     0.0097,     0.3672,     0.0000],
        [    0.0027,     0.2578,     0.0732,     0.0134,     0.0168,     0.0278,     0.0009,     0.0347,     0.1943,     0.1016,     0.1006,     0.0176,     0.0303,     0.1030,     0.0265]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0009,     -0.0791,     -0.0574,     -0.0977,     -0.0623,     -0.0786,     -0.0493,     -0.0781,     -0.0864,     -0.0493,     -0.0791,     -0.0364,     -0.0649,     -0.0669,     -0.0723],
        [    -0.0874,      9.7500,      7.1250,      1.9297,      6.1562,      5.8125,      2.2969,      2.8438,      4.7812,      3.5625,      5.0625,      1.5312,      2.4062,      3.3438,      4.0625],
        [     0.0216,      6.5312,      5.7188,      5.4688,      5.8125,      7.1562,      4.5625,      6.5625,      5.8125,      4.6250,      4.6875,      2.8438,      4.8750,      2.9219,      4.6875],
        [    -0.1650,      3.2031,      2.6562,     -0.9258,      1.6406,     -0.3691,      2.8125,     -1.4141,     -1.5781,     -0.5977,     -1.1719,      1.2969,     -1.9219,     -1.9844,      1.5625],
        [    -0.0210,      5.3438,      3.0312,     -1.0703,      4.8438,     -0.6172,     -2.8594,     -2.2812,      4.5312,      1.0781,      2.6562,     -0.8047,     -2.8594,      3.4688,      0.6719],
        [    -0.2891,     -0.7266,      0.1260,     -3.8281,     -3.5469,     -2.0781,      6.1562,     -0.3555,     -7.7188,     -2.7188,     -6.0625,      1.1406,     -3.4375,     -7.9688,     -1.0391],
        [    -0.1846,      3.9062,      2.7500,     -1.5000,      1.5625,     -1.7500,      3.9062,     -0.8125,     -1.5625,     -0.7305,     -2.4375,      1.1406,     -3.9375,     -2.4062,      0.7500],
        [    -0.0918,      2.2188,      2.7031,      1.2031,      0.0449,      0.6875,      4.0625,      2.0625,     -0.5547,      1.0156,     -0.1201,      2.2656,     -0.3105,     -1.7734,      0.7305],
        [     0.0488,      3.1562,      1.2500,     -1.5547,      3.1719,     -0.1650,     -5.3125,     -1.0625,      6.9688,      0.6250,      2.9219,     -0.5469,      0.0728,      5.8438,      2.9844],
        [    -0.0264,      0.4805,      1.0938,     -0.9688,     -0.1914,      0.1992,     -1.1172,      0.0564,      1.6562,      0.9961,      0.7656,      0.7227,     -0.3867,      0.7422,      1.1250],
        [     0.0840,      6.8438,      4.8750,      4.0625,      5.7188,      4.3750,      0.6875,      3.8906,      7.2188,      4.8438,      5.9688,      3.0469,      3.9219,      5.7500,      4.9375],
        [     0.1182,      2.4062,      2.7812,      3.8750,      0.2812,      3.5000,      2.2344,      5.3125,      4.0312,      4.6562,      4.2812,      3.0469,      5.0000,      2.7656,      3.8281],
        [    -0.0537,     -0.5469,     -0.7500,     -1.1641,     -1.5547,     -2.7031,      0.6133,     -0.9727,     -0.8281,     -0.9727,     -1.2188,      1.1562,      0.2188,     -0.4180,      0.9258],
        [     0.0845,      2.6875,      0.3086,     -0.9141,      2.2500,     -0.2695,     -4.6562,     -0.1240,      5.9688,      1.0781,      3.0781,      0.7305,      1.9375,      5.5625,      2.9844],
        [     0.0820,      4.6250,      3.3750,      1.6797,      1.9141,      2.4062,     -0.9688,      2.6250,      4.3438,      3.7031,      3.7031,      1.9531,      2.5000,      3.7188,      2.3594]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6044],
        [0.2401],
        [0.5160],
        [0.4866],
        [0.2975],
        [0.2790],
        [0.2614],
        [0.2403],
        [0.2558],
        [0.2460],
        [0.0895],
        [0.2467],
        [0.1852],
        [0.1303]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0002,     0.0000,     0.0000,     0.0003,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0649,  -0.6133,  -1.1641,  -1.1406,  -1.1094,  -0.5938,  -0.6602,  -0.8867,  -0.6484,  -0.7148,  -0.5469,  -1.4297,  -1.0078,  -0.6953,  -1.1250],
        [ -2.1094, -23.0000, -39.5000, -40.2500, -38.2500, -22.8750, -22.7500, -31.1250, -21.5000, -25.0000, -20.3750, -48.5000, -35.0000, -23.7500, -39.7500],
        [ -0.6992, -14.0000, -12.7500, -17.1250, -13.5625, -14.1875, -13.1875, -16.7500,  -9.3750,  -8.4375, -10.0000, -17.3750, -15.3125,  -8.9375, -13.1875],
        [ -1.1484, -14.6875, -20.8750, -22.5000, -21.2500, -15.1875, -12.5625, -16.8750, -11.3125, -13.9375, -12.1875, -26.3750, -17.8750, -12.1875, -20.0000],
        [ -1.5781, -17.6250, -31.2500, -31.8750, -29.3750, -19.5000, -19.3750, -24.0000, -17.6250, -19.6250, -16.6250, -36.5000, -26.7500, -19.3750, -30.3750],
        [ -1.2891, -13.3750, -24.2500, -25.0000, -22.1250, -12.8750, -13.4375, -17.2500, -13.7500, -15.6875, -13.2500, -29.1250, -20.8750, -16.0000, -25.2500],
        [ -1.7969, -21.6250, -33.0000, -34.5000, -31.8750, -20.7500, -19.8750, -27.2500, -18.6250, -21.0000, -17.1250, -40.2500, -29.1250, -19.3750, -31.0000],
        [ -1.9062, -23.7500, -34.5000, -36.0000, -33.0000, -23.3750, -20.8750, -29.5000, -20.6250, -22.5000, -19.5000, -42.7500, -30.8750, -21.5000, -32.2500],
        [ -2.3594, -24.3750, -43.5000, -43.2500, -41.7500, -24.8750, -24.8750, -33.5000, -23.7500, -26.8750, -21.8750, -53.0000, -37.5000, -25.7500, -41.2500],
        [ -1.4062, -20.5000, -23.7500, -27.6250, -24.8750, -20.2500, -18.8750, -26.1250, -16.6250, -16.1250, -15.0000, -31.0000, -24.8750, -15.5625, -22.8750],
        [ -1.6797, -14.2500, -29.6250, -29.1250, -28.6250, -15.3750, -17.0000, -21.6250, -17.1250, -18.2500, -13.9375, -35.7500, -25.2500, -18.7500, -28.6250],
        [ -1.5000, -20.1250, -29.8750, -30.7500, -26.7500, -18.2500, -17.0000, -26.7500, -17.1250, -18.5000, -14.8125, -35.0000, -26.5000, -16.8750, -27.8750],
        [ -2.1719, -24.3750, -39.7500, -39.5000, -37.2500, -24.5000, -23.2500, -31.0000, -21.8750, -24.8750, -20.3750, -47.0000, -32.7500, -22.6250, -35.5000],
        [ -2.2031, -22.6250, -40.2500, -39.7500, -38.5000, -23.5000, -23.8750, -31.5000, -22.2500, -24.6250, -20.1250, -48.5000, -34.5000, -23.6250, -37.5000],
        [ -0.8477, -14.2500, -17.1250, -18.2500, -14.1875, -12.1250, -10.7500, -17.5000, -10.5000, -11.2500,  -9.4375, -19.1250, -15.8750,  -9.0625, -15.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7417],
        [0.5969],
        [0.6324],
        [0.6664],
        [0.5812],
        [0.6684],
        [0.5898],
        [0.6666],
        [0.6433],
        [0.6385],
        [0.5921],
        [0.6706],
        [0.6672],
        [0.6080]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0194,     -1.4531,     -2.9062,     -2.9062,     -2.1094,     -2.4531,     -1.9609,     -2.4062,     -2.6719,     -2.5312,     -1.7500,     -2.8125,     -2.4219,     -2.6562,     -3.1250],
        [    -0.4629,    -36.0000,    -69.5000,    -71.0000,    -50.2500,    -58.5000,    -47.7500,    -58.7500,    -64.0000,    -61.0000,    -43.0000,    -68.0000,    -59.5000,    -64.5000,    -75.5000],
        [    -0.5547,    -43.7500,    -85.0000,    -84.5000,    -61.0000,    -70.0000,    -57.7500,    -69.5000,    -76.0000,    -73.5000,    -50.5000,    -82.5000,    -71.5000,    -76.5000,    -90.5000],
        [    -0.6445,    -50.5000,    -99.0000,    -99.0000,    -71.0000,    -82.5000,    -66.5000,    -82.5000,    -91.0000,    -86.0000,    -60.5000,    -95.0000,    -83.5000,    -90.5000,   -106.0000],
        [    -0.4609,    -36.5000,    -68.5000,    -71.0000,    -50.2500,    -59.2500,    -48.0000,    -60.5000,    -65.0000,    -61.2500,    -44.2500,    -68.0000,    -60.7500,    -65.0000,    -75.5000],
        [    -0.6641,    -49.0000,    -96.0000,    -98.5000,    -69.5000,    -83.5000,    -64.5000,    -82.5000,    -91.5000,    -86.0000,    -61.5000,    -94.5000,    -81.0000,    -92.0000,   -106.0000],
        [    -0.5547,    -41.5000,    -80.0000,    -80.5000,    -57.7500,    -66.5000,    -54.2500,    -67.0000,    -73.5000,    -70.5000,    -49.5000,    -78.0000,    -68.0000,    -74.5000,    -86.5000],
        [    -0.5820,    -43.7500,    -86.5000,    -86.5000,    -62.2500,    -72.5000,    -58.7500,    -72.0000,    -79.0000,    -75.5000,    -52.5000,    -84.0000,    -72.5000,    -79.5000,    -93.5000],
        [    -0.6133,    -42.7500,    -89.5000,    -90.5000,    -67.0000,    -79.0000,    -61.5000,    -75.5000,    -86.5000,    -79.0000,    -55.5000,    -87.0000,    -75.5000,    -84.0000,    -98.0000],
        [    -0.7500,    -55.0000,   -112.0000,   -111.5000,    -84.0000,    -96.0000,    -77.0000,    -93.5000,   -104.0000,    -98.0000,    -68.0000,   -109.0000,    -95.5000,   -103.0000,   -122.0000],
        [    -0.4121,    -30.3750,    -61.7500,    -62.0000,    -47.2500,    -53.7500,    -43.5000,    -52.5000,    -58.0000,    -53.2500,    -37.5000,    -61.2500,    -53.7500,    -56.5000,    -68.0000],
        [    -0.6172,    -50.2500,    -94.0000,    -97.0000,    -68.0000,    -81.0000,    -63.5000,    -81.0000,    -88.0000,    -83.5000,    -58.7500,    -92.0000,    -80.5000,    -88.0000,   -102.5000],
        [    -0.6523,    -50.7500,    -98.0000,    -98.5000,    -72.5000,    -82.5000,    -68.5000,    -83.0000,    -89.5000,    -85.0000,    -59.5000,    -96.5000,    -85.5000,    -89.0000,   -106.0000],
        [    -0.6445,    -46.5000,    -95.5000,    -96.0000,    -71.5000,    -83.5000,    -66.0000,    -81.0000,    -91.0000,    -83.5000,    -58.5000,    -93.0000,    -81.5000,    -88.5000,   -104.5000],
        [    -0.5156,    -40.7500,    -78.5000,    -79.5000,    -56.5000,    -67.5000,    -52.5000,    -66.5000,    -73.5000,    -69.0000,    -48.7500,    -76.5000,    -66.0000,    -73.0000,    -85.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9328],
        [0.8377],
        [0.8261],
        [0.9187],
        [0.7574],
        [0.9164],
        [0.7174],
        [0.9210],
        [0.9201],
        [0.9153],
        [0.7961],
        [0.9174],
        [0.9217],
        [0.7785]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1187,     0.8828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.3730,     0.4570,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.1934,     0.0479,     0.7578,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.2656,     0.1836,     0.0007,     0.5078,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0109,     0.0051,     0.0547,     0.0033,     0.9258,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9453,     0.0237,     0.0001,     0.0009,     0.0044,     0.0183,     0.0079,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0007,     0.0121,     0.0006,     0.0491,     0.0026,     0.8008,     0.0554,     0.0791,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0066,     0.0000,     0.0015,     0.0003,     0.0023,     0.0004,     0.0001,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8906,     0.0155,     0.0002,     0.0223,     0.0051,     0.0505,     0.0124,     0.0035,     0.0011,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4551,     0.0615,     0.0002,     0.2656,     0.0086,     0.1758,     0.0269,     0.0053,     0.0015,     0.0003,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0080,     0.0192,     0.0004,     0.1758,     0.0342,     0.6211,     0.0879,     0.0176,     0.0168,     0.0077,     0.0067,     0.0029,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0012,     0.0000,     0.0001,     0.0003,     0.0004,     0.0002,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000],
        [    0.9961,     0.0016,     0.0000,     0.0002,     0.0001,     0.0005,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0021,     0.0020,     0.1348,     0.0092,     0.6875,     0.1104,     0.0140,     0.0082,     0.0166,     0.0084,     0.0036,     0.0002,     0.0004,     0.0038]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0016,      0.0361,     -0.0928,      0.1650,      0.0173,      0.1338,      0.0498,      0.0391,      0.0010,     -0.0669,      0.0277,      0.0349,     -0.1641,     -0.1128,     -0.0454],
        [     0.0166,      2.0312,     -3.0156,      2.5781,     -0.4395,      4.0312,      0.8281,      0.8945,      0.0574,     -0.8281,      0.1816,     -0.7266,     -4.3438,     -3.0156,     -2.2969],
        [     0.0060,      0.2100,     -0.7812,      0.6758,      1.1094,      1.8281,      1.1719,      0.6641,      1.1484,      0.6055,      0.0515,     -0.7891,     -0.2324,      0.4316,     -0.6367],
        [     0.0466,      5.2188,      3.8281,      6.5938,      4.5938,      9.4375,      6.9688,      6.6875,      4.4688,      6.6250,      4.6562,      3.4688,      3.4062,      2.2969,      2.6250],
        [     0.0032,     -0.3652,     -6.0000,      0.6562,     -1.8594,      1.3672,     -1.7500,     -2.0000,     -2.0938,     -4.9062,     -1.9922,     -2.7969,     -5.5938,     -4.4375,     -4.3750],
        [     0.0679,      5.8750,      5.0938,      7.5000,      4.6562,     10.3125,      7.7812,      7.5625,      4.5312,      7.6875,      4.8438,      4.8750,      3.4219,      2.2188,      2.1250],
        [    -0.0603,     -3.7500,     -9.6250,     -7.0000,     -5.4375,     -4.0000,     -4.8438,     -6.6875,     -7.7500,     -6.6562,     -9.3125,     -8.8125,     -5.9688,     -8.1875,     -9.0000],
        [     0.0325,      2.8906,     -0.0425,      4.2812,      1.3359,      7.0625,      4.4062,      4.7812,      1.1641,      3.0156,      1.2109,      1.3281,      0.8008,     -1.2188,     -0.7812],
        [    -0.0547,     -5.0625,    -11.5000,     -6.5625,     -8.2500,     -6.0938,     -7.8125,     -8.8750,     -9.6875,    -11.3125,    -10.4375,     -8.3125,    -10.8125,    -11.0000,    -10.9375],
        [    -0.0325,     -4.0938,     -8.5625,     -3.7188,     -5.1875,     -2.8906,     -4.3125,     -5.5625,     -6.7188,     -7.5625,     -7.6875,     -5.4688,     -8.0625,     -8.3125,     -7.4688],
        [    -0.0068,     -2.0000,     -7.6875,     -0.5469,     -3.9688,     -0.9609,     -2.8438,     -4.4688,     -5.7500,     -7.3438,     -6.2500,     -3.7188,     -9.1250,     -8.5625,     -6.8750],
        [     0.0242,      0.8984,     -2.8906,      3.1094,      1.4844,      4.3750,      2.4219,      0.8086,      0.7695,     -0.0159,     -0.1436,     -0.9883,     -3.1562,     -2.2812,     -1.4844],
        [    -0.0923,     -6.8125,    -13.4375,     -9.8750,     -8.3125,     -8.0625,     -8.7500,     -9.5000,    -10.1875,    -11.8125,    -11.7500,    -11.1250,     -7.7812,    -10.0625,    -11.0625],
        [    -0.0820,     -6.5312,    -13.5000,     -8.4375,     -9.6875,     -7.6250,     -9.0625,    -10.8125,    -11.6875,    -13.3750,    -12.6875,    -10.2500,    -12.0625,    -12.9375,    -12.4375],
        [     0.0625,      6.5625,      6.5000,     10.7500,      8.0625,     12.3750,     10.5000,      8.4375,      7.9375,      8.6250,      7.9375,      7.0938,      4.4062,      4.8750,      7.1562]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3133],
        [0.3063],
        [0.2322],
        [0.1090],
        [0.1544],
        [0.2455],
        [0.1646],
        [0.1665],
        [0.2396],
        [0.1958],
        [0.0831],
        [0.2497],
        [0.1668],
        [0.0713]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1128,     0.8867,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2227,     0.7734,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0603,     0.3633,     0.0003,     0.5742,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0737,     0.5469,     0.0004,     0.3574,     0.0229,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.4570,     0.0049,     0.3301,     0.0618,     0.0034,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0540,     0.4316,     0.0003,     0.2793,     0.0211,     0.0001,     0.2148,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0625,     0.3633,     0.0004,     0.3750,     0.0162,     0.0002,     0.1562,     0.0269,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0615,     0.3770,     0.0005,     0.3281,     0.0217,     0.0002,     0.1787,     0.0294,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0491,     0.3672,     0.0002,     0.3828,     0.0115,     0.0001,     0.1348,     0.0183,     0.0020,     0.0330,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0004,     0.0000,     0.0005,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0038,     0.0148,     0.0001,     0.0112,     0.0017,     0.0000,     0.0099,     0.0023,     0.0006,     0.0036,     0.9531,     0.0003,     0.0000,     0.0000],
        [    0.0000,     0.0002,     0.0012,     0.0000,     0.0015,     0.0000,     0.0000,     0.0005,     0.0001,     0.0000,     0.0002,     0.9961,     0.0000,     0.0004,     0.0000],
        [    0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.4297,     0.0000,     0.0000,     0.5703]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1230,      0.1367,      0.0952,      0.1279,      0.1338,      0.0918,      0.1406,      0.1338,      0.1152,      0.1260,      0.1602,      0.1079,      0.1338,      0.1602],
        [    -0.1060,     21.3750,     23.3750,     16.3750,     23.2500,     20.7500,     15.6250,     22.8750,     21.1250,     18.8750,     21.3750,     29.1250,     17.5000,     22.3750,     29.3750],
        [    -0.1167,     24.5000,     26.6250,     18.6250,     26.3750,     23.8750,     17.8750,     26.2500,     24.0000,     21.6250,     24.3750,     33.2500,     20.2500,     25.3750,     33.5000],
        [    -0.0811,     14.8750,     16.1250,     11.2500,     16.0000,     14.3125,     10.8125,     15.8750,     14.5000,     13.0625,     14.8750,     20.3750,     12.1875,     15.5000,     20.5000],
        [    -0.1348,     22.3750,     24.1250,     17.1250,     24.6250,     21.1250,     16.3750,     23.5000,     21.6250,     19.3750,     22.3750,     30.8750,     18.1250,     23.3750,     31.2500],
        [    -0.1191,     21.7500,     23.7500,     16.3750,     23.2500,     20.5000,     15.5625,     22.8750,     21.0000,     18.8750,     21.5000,     29.6250,     17.6250,     22.5000,     29.8750],
        [    -0.0742,     13.1250,     14.2500,      9.7500,     13.9375,     12.2500,      9.3750,     13.8750,     12.5625,     11.3750,     12.8750,     17.8750,     10.6875,     13.5000,     18.0000],
        [    -0.1172,     21.6250,     23.6250,     16.5000,     23.2500,     20.6250,     15.5625,     23.0000,     21.0000,     18.8750,     21.5000,     29.5000,     17.6250,     22.5000,     29.7500],
        [    -0.1250,     21.3750,     23.1250,     16.2500,     23.1250,     20.0000,     15.3750,     22.2500,     20.5000,     18.3750,     21.1250,     29.2500,     17.2500,     22.1250,     29.5000],
        [    -0.1162,     20.7500,     22.6250,     15.8750,     22.3750,     19.7500,     15.0000,     21.8750,     20.0000,     18.0000,     20.6250,     28.5000,     16.7500,     21.5000,     28.6250],
        [    -0.1348,     23.2500,     25.2500,     17.8750,     25.2500,     21.7500,     16.8750,     24.2500,     22.2500,     20.0000,     22.8750,     31.8750,     18.7500,     24.0000,     32.0000],
        [    -0.1514,     26.7500,     29.1250,     20.5000,     29.2500,     25.6250,     19.5000,     28.2500,     26.1250,     23.3750,     26.6250,     36.7500,     21.7500,     28.0000,     37.0000],
        [    -0.0845,     15.3125,     16.7500,     11.5000,     16.3750,     14.5625,     10.8750,     16.2500,     14.8750,     13.4375,     15.3125,     20.8750,     12.6250,     15.9375,     21.1250],
        [    -0.1357,     23.2500,     25.1250,     17.7500,     25.2500,     21.7500,     16.7500,     24.1250,     22.3750,     20.0000,     23.0000,     31.7500,     18.7500,     24.1250,     32.0000],
        [    -0.1641,     28.5000,     30.8750,     21.7500,     31.0000,     27.0000,     20.6250,     30.0000,     27.6250,     24.7500,     28.3750,     39.2500,     23.1250,     29.6250,     39.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1699,     0.8320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2676,     0.5938,     0.1396,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.7617,     0.2383,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.7344,     0.2637,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.4355,     0.1611,     0.0000,     0.4023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0640,     0.0173,     0.0000,     0.0352,     0.8828,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0801,     0.0369,     0.0000,     0.0869,     0.7930,     0.0029,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0559,     0.0164,     0.0000,     0.0366,     0.7500,     0.0007,     0.1406,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0479,     0.0125,     0.0000,     0.0374,     0.5391,     0.0003,     0.1055,     0.2578,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0801,     0.0245,     0.0000,     0.0469,     0.5625,     0.0009,     0.1089,     0.1758,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0182,     0.0047,     0.0000,     0.0097,     0.2451,     0.0002,     0.0381,     0.0376,     0.0000,     0.6484,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0014,     0.0003,     0.0000,     0.0008,     0.0165,     0.0000,     0.0027,     0.0050,     0.0000,     0.0515,     0.9219]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,      0.1260,      0.1533,      0.1396,      0.1855,      0.2002,      0.1191,      0.2090,      0.2061,      0.1895,      0.2031,      0.2021,      0.1650,      0.2090,      0.2080],
        [    -0.0015,     39.5000,     40.7500,     39.5000,     53.0000,     52.0000,     37.7500,     52.7500,     54.7500,     49.7500,     53.5000,     54.0000,     46.7500,     55.2500,     57.2500],
        [     0.0071,     43.0000,     44.5000,     42.5000,     57.2500,     56.5000,     41.2500,     57.2500,     59.0000,     54.0000,     58.0000,     59.0000,     50.7500,     59.7500,     62.2500],
        [     0.0084,     46.7500,     47.5000,     46.2500,     62.0000,     61.0000,     44.7500,     61.7500,     63.7500,     58.0000,     62.5000,     63.2500,     54.7500,     64.5000,     67.0000],
        [    -0.0068,     60.0000,     60.2500,     58.7500,     79.5000,     77.5000,     57.2500,     78.5000,     81.5000,     73.5000,     79.5000,     80.0000,     70.0000,     83.0000,     85.5000],
        [    -0.0012,     54.5000,     55.2500,     53.5000,     72.0000,     71.0000,     52.0000,     72.0000,     74.5000,     67.5000,     73.0000,     73.5000,     63.7500,     75.5000,     78.0000],
        [     0.0039,     47.5000,     48.0000,     46.5000,     62.2500,     61.2500,     45.2500,     62.0000,     64.0000,     58.2500,     62.7500,     63.7500,     55.2500,     65.0000,     67.5000],
        [     0.0053,     53.2500,     54.2500,     52.2500,     70.5000,     69.5000,     50.7500,     70.5000,     73.0000,     66.0000,     71.5000,     72.0000,     62.2500,     74.0000,     76.5000],
        [    -0.0066,     53.2500,     53.7500,     52.2500,     71.0000,     69.5000,     50.5000,     70.0000,     73.5000,     66.0000,     71.5000,     71.5000,     62.5000,     74.5000,     76.0000],
        [     0.0042,     46.0000,     47.5000,     45.2500,     61.0000,     60.2500,     43.7500,     61.2500,     63.5000,     57.7500,     62.2500,     62.7500,     54.0000,     64.5000,     66.5000],
        [    -0.0024,     51.2500,     51.7500,     50.0000,     68.0000,     66.5000,     48.2500,     67.5000,     70.5000,     63.5000,     69.0000,     68.5000,     59.7500,     71.5000,     73.0000],
        [     0.0009,     60.7500,     61.7500,     59.2500,     80.0000,     78.5000,     57.7500,     79.5000,     82.5000,     75.0000,     80.5000,     81.5000,     70.5000,     83.5000,     86.5000],
        [    -0.0006,     47.7500,     48.2500,     47.0000,     63.5000,     62.2500,     45.5000,     62.7500,     65.5000,     58.7500,     63.7500,     64.0000,     56.0000,     66.0000,     68.5000],
        [    -0.0065,     53.5000,     53.7500,     52.2500,     71.0000,     69.5000,     50.5000,     70.5000,     73.5000,     66.0000,     71.5000,     71.5000,     62.7500,     74.5000,     76.5000],
        [    -0.0051,     61.5000,     62.0000,     59.7500,     80.5000,     79.0000,     58.2500,     80.0000,     83.0000,     75.5000,     81.5000,     82.0000,     71.5000,     84.5000,     87.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7070,     0.2949,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3711,     0.1445,     0.4844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2207,     0.0845,     0.2910,     0.4023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1719,     0.0669,     0.2246,     0.3086,     0.2266,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1299,     0.0498,     0.1709,     0.2363,     0.1729,     0.2402,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1084,     0.0417,     0.1426,     0.1963,     0.1436,     0.1992,     0.1689,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0933,     0.0359,     0.1221,     0.1680,     0.1230,     0.1709,     0.1445,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0850,     0.0334,     0.1113,     0.1523,     0.1123,     0.1543,     0.1309,     0.1279,     0.0913,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0757,     0.0293,     0.0991,     0.1367,     0.1001,     0.1387,     0.1172,     0.1147,     0.0811,     0.1084,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0669,     0.0255,     0.0879,     0.1216,     0.0884,     0.1235,     0.1040,     0.1021,     0.0718,     0.0962,     0.1123,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0601,     0.0231,     0.0791,     0.1089,     0.0796,     0.1104,     0.0938,     0.0913,     0.0645,     0.0864,     0.1006,     0.1021,     0.0000,     0.0000],
        [    0.0000,     0.0554,     0.0215,     0.0728,     0.1001,     0.0732,     0.1016,     0.0859,     0.0840,     0.0596,     0.0796,     0.0928,     0.0942,     0.0796,     0.0000],
        [    0.0000,     0.0505,     0.0194,     0.0664,     0.0918,     0.0669,     0.0933,     0.0791,     0.0771,     0.0544,     0.0728,     0.0850,     0.0864,     0.0728,     0.0840]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.2051,      0.1992,      0.2070,      0.2090,      0.2070,      0.2090,      0.2080,      0.2080,      0.2051,      0.2070,      0.2080,      0.2080,      0.2070,      0.2080],
        [    -0.0267,     26.2500,     25.3750,     26.5000,     26.8750,     26.5000,     26.8750,     26.6250,     26.6250,     26.3750,     26.6250,     26.7500,     26.7500,     26.6250,     26.7500],
        [    -0.0251,     24.7500,     23.8750,     25.0000,     25.2500,     25.0000,     25.2500,     25.1250,     25.1250,     24.7500,     25.0000,     25.1250,     25.2500,     25.0000,     25.1250],
        [    -0.0271,     26.7500,     25.7500,     27.0000,     27.3750,     27.0000,     27.3750,     27.1250,     27.1250,     26.7500,     27.1250,     27.2500,     27.2500,     27.1250,     27.2500],
        [    -0.0278,     27.5000,     26.5000,     27.7500,     28.1250,     27.7500,     28.1250,     28.0000,     27.8750,     27.6250,     27.8750,     28.0000,     28.0000,     27.8750,     28.0000],
        [    -0.0272,     26.7500,     25.7500,     27.0000,     27.3750,     27.0000,     27.3750,     27.1250,     27.1250,     26.8750,     27.1250,     27.2500,     27.2500,     27.1250,     27.2500],
        [    -0.0277,     27.3750,     26.3750,     27.6250,     28.0000,     27.6250,     28.0000,     27.8750,     27.7500,     27.5000,     27.7500,     27.8750,     27.8750,     27.7500,     27.8750],
        [    -0.0275,     27.1250,     26.1250,     27.3750,     27.7500,     27.3750,     27.7500,     27.5000,     27.5000,     27.1250,     27.5000,     27.6250,     27.6250,     27.5000,     27.6250],
        [    -0.0275,     27.1250,     26.1250,     27.3750,     27.6250,     27.3750,     27.6250,     27.5000,     27.5000,     27.1250,     27.3750,     27.6250,     27.6250,     27.3750,     27.6250],
        [    -0.0269,     26.5000,     25.5000,     26.7500,     27.0000,     26.7500,     27.1250,     26.8750,     26.8750,     26.5000,     26.8750,     27.0000,     27.0000,     26.8750,     27.0000],
        [    -0.0273,     27.0000,     26.0000,     27.2500,     27.5000,     27.2500,     27.6250,     27.3750,     27.3750,     27.0000,     27.3750,     27.5000,     27.5000,     27.3750,     27.5000],
        [    -0.0278,     27.5000,     26.5000,     27.7500,     28.0000,     27.7500,     28.0000,     27.8750,     27.8750,     27.5000,     27.7500,     28.0000,     28.0000,     27.7500,     28.0000],
        [    -0.0276,     27.2500,     26.2500,     27.5000,     27.7500,     27.5000,     27.8750,     27.6250,     27.6250,     27.2500,     27.6250,     27.7500,     27.7500,     27.6250,     27.7500],
        [    -0.0273,     27.0000,     26.0000,     27.2500,     27.5000,     27.2500,     27.6250,     27.3750,     27.3750,     27.0000,     27.3750,     27.5000,     27.5000,     27.3750,     27.5000],
        [    -0.0277,     27.3750,     26.3750,     27.6250,     28.0000,     27.6250,     28.0000,     27.8750,     27.7500,     27.5000,     27.7500,     27.8750,     27.8750,     27.7500,     27.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4941,     0.5078,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3281,     0.3379,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2471,     0.2539,     0.2520,     0.2471,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1982,     0.2031,     0.2012,     0.1973,     0.2012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1650,     0.1689,     0.1680,     0.1650,     0.1680,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1416,     0.1455,     0.1445,     0.1416,     0.1445,     0.1426,     0.1406,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1245,     0.1279,     0.1260,     0.1240,     0.1260,     0.1250,     0.1235,     0.1235,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1104,     0.1133,     0.1123,     0.1104,     0.1123,     0.1108,     0.1094,     0.1094,     0.1123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0996,     0.1021,     0.1011,     0.0991,     0.1011,     0.1001,     0.0986,     0.0986,     0.1011,     0.0986,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0903,     0.0928,     0.0918,     0.0903,     0.0918,     0.0908,     0.0898,     0.0898,     0.0918,     0.0898,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0830,     0.0850,     0.0845,     0.0830,     0.0845,     0.0835,     0.0825,     0.0825,     0.0845,     0.0825,     0.0830,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0786,     0.0776,     0.0767,     0.0776,     0.0771,     0.0762,     0.0762,     0.0776,     0.0762,     0.0767,     0.0771,     0.0762,     0.0000],
        [    0.0000,     0.0713,     0.0732,     0.0723,     0.0713,     0.0723,     0.0713,     0.0708,     0.0708,     0.0723,     0.0708,     0.0713,     0.0713,     0.0708,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591,      0.0591],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750],
        [     0.0073,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750,     26.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5039,     0.4941,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3379,     0.3301,     0.3320,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2539,     0.2480,     0.2480,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2031,     0.1982,     0.1982,     0.2012,     0.1982,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1689,     0.1650,     0.1660,     0.1680,     0.1660,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1455,     0.1416,     0.1426,     0.1436,     0.1426,     0.1426,     0.1416,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1270,     0.1245,     0.1245,     0.1260,     0.1245,     0.1245,     0.1245,     0.1245,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1133,     0.1104,     0.1108,     0.1123,     0.1108,     0.1108,     0.1104,     0.1104,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1021,     0.0996,     0.0996,     0.1011,     0.0996,     0.0996,     0.0996,     0.0996,     0.0996,     0.0996,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0928,     0.0903,     0.0908,     0.0918,     0.0908,     0.0908,     0.0903,     0.0903,     0.0908,     0.0903,     0.0903,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0850,     0.0830,     0.0830,     0.0840,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0830,     0.0000,     0.0000],
        [    0.0000,     0.0786,     0.0767,     0.0767,     0.0776,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0728,     0.0713,     0.0713,     0.0723,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0723]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996,      0.0996],
        [     0.0170,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.8750],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.8750,     28.8750,     28.8750,     28.8750,     28.7500,     28.7500,     28.8750,     28.7500,     28.7500,     28.8750,     28.7500,     28.8750],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.8750,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500],
        [     0.0170,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500,     28.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.4844, 0.5156, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3262, 0.3457, 0.3281, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2432, 0.2598, 0.2451, 0.2520, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1934, 0.2051, 0.1943, 0.2002, 0.2061, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1611, 0.1709, 0.1621, 0.1670, 0.1719, 0.1670, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1377, 0.1465, 0.1387, 0.1436, 0.1475, 0.1436, 0.1416, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1206, 0.1279, 0.1211, 0.1250, 0.1289, 0.1250, 0.1240, 0.1279, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1074, 0.1143, 0.1079, 0.1113, 0.1147, 0.1113, 0.1104, 0.1143, 0.1079, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0962, 0.1025, 0.0972, 0.1001, 0.1030, 0.1001, 0.0991, 0.1025, 0.0972, 0.1025, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0879, 0.0933, 0.0884, 0.0908, 0.0938, 0.0908, 0.0903, 0.0933, 0.0884, 0.0933, 0.0903, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0806, 0.0859, 0.0811, 0.0835, 0.0859, 0.0835, 0.0830, 0.0859, 0.0811, 0.0859, 0.0830, 0.0811, 0.0000, 0.0000],
        [0.0000, 0.0742, 0.0791, 0.0747, 0.0771, 0.0791, 0.0771, 0.0762, 0.0791, 0.0747, 0.0791, 0.0762, 0.0747, 0.0791, 0.0000],
        [0.0000, 0.0688, 0.0732, 0.0693, 0.0713, 0.0737, 0.0713, 0.0708, 0.0732, 0.0693, 0.0732, 0.0708, 0.0693, 0.0732, 0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0010,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469,     0.5469],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000],
        [    0.6992,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000,   392.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
-
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
---------------
@ 5050 train 3.8752 , allloss: 3.8752, dt: 1166.45ms, fracRes: 0.1830, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5808, norm(y): 0.9893, norm:0.4609, tok/sec: 112367.95, flops:117.96, batch-reuse:1
@ 5051 train 4.0802 , allloss: 4.0802, dt: 714.23ms, fracRes: 0.1825, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5826, norm(y): 0.9908, norm:0.4648, tok/sec: 183515.16, flops:192.65, batch-reuse:1
@ 5052 train 3.9779 , allloss: 3.9779, dt: 712.88ms, fracRes: 0.1839, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5877, norm(y): 0.9906, norm:0.5046, tok/sec: 183863.34, flops:193.02, batch-reuse:1
@ 5053 train 3.9883 , allloss: 3.9883, dt: 704.54ms, fracRes: 0.1846, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5931, norm(y): 0.9914, norm:0.4966, tok/sec: 186040.31, flops:195.31, batch-reuse:1
@ 5054 train 3.9883 , allloss: 3.9883, dt: 707.20ms, fracRes: 0.1849, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5903, norm(y): 0.9906, norm:0.5124, tok/sec: 185339.67, flops:194.57, batch-reuse:1
@ 5055 train 3.8856 , allloss: 3.8856, dt: 710.64ms, fracRes: 0.1836, norm(attn): 38.5000, norm(output): 0.4238, norm(x): 0.5760, norm(y): 0.9886, norm:0.4224, tok/sec: 184441.77, flops:193.63, batch-reuse:1
@ 5056 train 3.9039 , allloss: 3.9039, dt: 711.79ms, fracRes: 0.1825, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5783, norm(y): 0.9885, norm:0.4486, tok/sec: 184143.99, flops:193.31, batch-reuse:1
@ 5057 train 3.9569 , allloss: 3.9569, dt: 707.96ms, fracRes: 0.1839, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5812, norm(y): 0.9889, norm:0.4474, tok/sec: 185141.43, flops:194.36, batch-reuse:1
@ 5058 train 4.0048 , allloss: 4.0048, dt: 707.87ms, fracRes: 0.1874, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.5947, norm(y): 0.9892, norm:0.4313, tok/sec: 185163.13, flops:194.38, batch-reuse:1
@ 5059 train 3.9667 , allloss: 3.9667, dt: 708.11ms, fracRes: 0.1863, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.5951, norm(y): 0.9888, norm:0.4705, tok/sec: 185100.97, flops:194.32, batch-reuse:1
@ 5060 train 3.9345 , allloss: 3.9345, dt: 699.33ms, fracRes: 0.1847, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5820, norm(y): 0.9882, norm:0.4442, tok/sec: 187425.27, flops:196.76, batch-reuse:1
@ 5061 train 3.8202 , allloss: 3.8202, dt: 726.58ms, fracRes: 0.1839, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5875, norm(y): 0.9893, norm:0.4697, tok/sec: 180394.67, flops:189.38, batch-reuse:1
@ 5062 train 3.9312 , allloss: 3.9312, dt: 694.31ms, fracRes: 0.1831, norm(attn): 38.5000, norm(output): 0.4277, norm(x): 0.5761, norm(y): 0.9895, norm:0.3940, tok/sec: 188781.02, flops:198.18, batch-reuse:1
@ 5063 train 3.9671 , allloss: 3.9671, dt: 701.08ms, fracRes: 0.1833, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5832, norm(y): 0.9895, norm:0.4846, tok/sec: 186958.39, flops:196.27, batch-reuse:1
@ 5064 train 3.9335 , allloss: 3.9335, dt: 697.90ms, fracRes: 0.1832, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5786, norm(y): 0.9889, norm:0.4068, tok/sec: 187808.16, flops:197.16, batch-reuse:1
@ 5065 train 3.9535 , allloss: 3.9535, dt: 711.67ms, fracRes: 0.1841, norm(attn): 38.5000, norm(output): 0.4277, norm(x): 0.5787, norm(y): 0.9892, norm:0.4405, tok/sec: 184176.07, flops:193.35, batch-reuse:1
@ 5066 train 3.9162 , allloss: 3.9162, dt: 711.49ms, fracRes: 0.1835, norm(attn): 38.5000, norm(output): 0.4277, norm(x): 0.5732, norm(y): 0.9895, norm:0.4510, tok/sec: 184221.80, flops:193.40, batch-reuse:1
@ 5067 train 4.0191 , allloss: 4.0191, dt: 710.69ms, fracRes: 0.1846, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5801, norm(y): 0.9887, norm:0.4345, tok/sec: 184429.77, flops:193.61, batch-reuse:1
@ 5068 train 3.8750 , allloss: 3.8750, dt: 712.67ms, fracRes: 0.1854, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5850, norm(y): 0.9874, norm:0.4084, tok/sec: 183916.30, flops:193.08, batch-reuse:1
@ 5069 train 3.8972 , allloss: 3.8972, dt: 703.77ms, fracRes: 0.1846, norm(attn): 38.0000, norm(output): 0.4355, norm(x): 0.5793, norm(y): 0.9865, norm:0.4395, tok/sec: 186242.24, flops:195.52, batch-reuse:1
@ 5070 train 3.9187 , allloss: 3.9187, dt: 710.11ms, fracRes: 0.1837, norm(attn): 38.5000, norm(output): 0.4277, norm(x): 0.5794, norm(y): 0.9863, norm:0.3702, tok/sec: 184579.37, flops:193.77, batch-reuse:1
@ 5071 train 3.9769 , allloss: 3.9769, dt: 711.58ms, fracRes: 0.1832, norm(attn): 38.5000, norm(output): 0.4316, norm(x): 0.5799, norm(y): 0.9861, norm:0.4020, tok/sec: 184197.98, flops:193.37, batch-reuse:1
@ 5072 train 3.8989 , allloss: 3.8989, dt: 711.65ms, fracRes: 0.1837, norm(attn): 38.5000, norm(output): 0.4297, norm(x): 0.5802, norm(y): 0.9850, norm:0.4109, tok/sec: 184180.27, flops:193.35, batch-reuse:1
@ 5073 train 3.9129 , allloss: 3.9129, dt: 710.76ms, fracRes: 0.1840, norm(attn): 38.5000, norm(output): 0.4355, norm(x): 0.5840, norm(y): 0.9858, norm:0.3888, tok/sec: 184410.47, flops:193.59, batch-reuse:1
@ 5074 train 3.9695 , allloss: 3.9695, dt: 711.13ms, fracRes: 0.1834, norm(attn): 38.5000, norm(output): 0.4336, norm(x): 0.5818, norm(y): 0.9872, norm:0.3960, tok/sec: 184315.56, flops:193.49, batch-reuse:1
@ 5075 train 3.7826 , allloss: 3.7826, dt: 703.64ms, fracRes: 0.1830, norm(attn): 38.2500, norm(output): 0.4277, norm(x): 0.5755, norm(y): 0.9869, norm:0.3777, tok/sec: 186276.64, flops:195.55, batch-reuse:1
@ 5076 train 3.9603 , allloss: 3.9603, dt: 711.55ms, fracRes: 0.1860, norm(attn): 38.0000, norm(output): 0.4277, norm(x): 0.5824, norm(y): 0.9886, norm:0.4549, tok/sec: 184206.06, flops:193.38, batch-reuse:1
@ 5077 train 3.9129 , allloss: 3.9129, dt: 713.56ms, fracRes: 0.1849, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5860, norm(y): 0.9897, norm:0.3979, tok/sec: 183687.40, flops:192.84, batch-reuse:1
@ 5078 train 3.9467 , allloss: 3.9467, dt: 715.44ms, fracRes: 0.1854, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5880, norm(y): 0.9901, norm:0.4186, tok/sec: 183204.43, flops:192.33, batch-reuse:1
@ 5079 train 3.8996 , allloss: 3.8996, dt: 713.10ms, fracRes: 0.1852, norm(attn): 37.7500, norm(output): 0.4336, norm(x): 0.5841, norm(y): 0.9890, norm:0.4244, tok/sec: 183804.64, flops:192.96, batch-reuse:1
@ 5080 train 3.8691 , allloss: 3.8691, dt: 700.52ms, fracRes: 0.1842, norm(attn): 38.0000, norm(output): 0.4277, norm(x): 0.5741, norm(y): 0.9884, norm:0.3606, tok/sec: 187107.28, flops:196.43, batch-reuse:1
@ 5081 train 3.9610 , allloss: 3.9610, dt: 706.80ms, fracRes: 0.1838, norm(attn): 38.0000, norm(output): 0.4258, norm(x): 0.5755, norm(y): 0.9889, norm:0.3773, tok/sec: 185444.07, flops:194.68, batch-reuse:1
@ 5082 train 3.8031 , allloss: 3.8031, dt: 703.66ms, fracRes: 0.1861, norm(attn): 37.7500, norm(output): 0.4336, norm(x): 0.5840, norm(y): 0.9884, norm:0.3746, tok/sec: 186272.09, flops:195.55, batch-reuse:1
@ 5083 train 3.9474 , allloss: 3.9474, dt: 704.21ms, fracRes: 0.1855, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5874, norm(y): 0.9881, norm:0.3738, tok/sec: 186126.60, flops:195.40, batch-reuse:1
@ 5084 train 3.8868 , allloss: 3.8868, dt: 697.54ms, fracRes: 0.1841, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5818, norm(y): 0.9884, norm:0.3933, tok/sec: 187905.74, flops:197.26, batch-reuse:1
@ 5085 train 3.9318 , allloss: 3.9318, dt: 708.55ms, fracRes: 0.1837, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5835, norm(y): 0.9891, norm:0.3907, tok/sec: 184987.43, flops:194.20, batch-reuse:1
@ 5086 train 4.0431 , allloss: 4.0431, dt: 723.79ms, fracRes: 0.1841, norm(attn): 37.7500, norm(output): 0.4355, norm(x): 0.5855, norm(y): 0.9904, norm:0.3949, tok/sec: 181091.04, flops:190.11, batch-reuse:1
@ 5087 train 3.9753 , allloss: 3.9753, dt: 718.35ms, fracRes: 0.1841, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5800, norm(y): 0.9893, norm:0.3878, tok/sec: 182461.88, flops:191.55, batch-reuse:1
@ 5088 train 3.9083 , allloss: 3.9083, dt: 721.68ms, fracRes: 0.1844, norm(attn): 38.0000, norm(output): 0.4238, norm(x): 0.5757, norm(y): 0.9882, norm:0.3451, tok/sec: 181621.04, flops:190.67, batch-reuse:1
@ 5089 train 3.8249 , allloss: 3.8249, dt: 708.30ms, fracRes: 0.1853, norm(attn): 37.7500, norm(output): 0.4355, norm(x): 0.5875, norm(y): 0.9872, norm:0.3914, tok/sec: 185052.50, flops:194.27, batch-reuse:1
@ 5090 train 3.9843 , allloss: 3.9843, dt: 705.62ms, fracRes: 0.1839, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5830, norm(y): 0.9869, norm:0.3857, tok/sec: 185753.73, flops:195.00, batch-reuse:1
@ 5091 train 3.9244 , allloss: 3.9244, dt: 701.82ms, fracRes: 0.1824, norm(attn): 38.0000, norm(output): 0.4258, norm(x): 0.5723, norm(y): 0.9871, norm:0.4255, tok/sec: 186759.28, flops:196.06, batch-reuse:1
@ 5092 train 3.9519 , allloss: 3.9519, dt: 700.53ms, fracRes: 0.1827, norm(attn): 38.0000, norm(output): 0.4316, norm(x): 0.5789, norm(y): 0.9882, norm:0.3854, tok/sec: 187103.40, flops:196.42, batch-reuse:1
@ 5093 train 3.8756 , allloss: 3.8756, dt: 712.71ms, fracRes: 0.1830, norm(attn): 37.7500, norm(output): 0.4355, norm(x): 0.5834, norm(y): 0.9877, norm:0.3807, tok/sec: 183906.77, flops:193.07, batch-reuse:1
@ 5094 train 3.9575 , allloss: 3.9575, dt: 710.66ms, fracRes: 0.1827, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5791, norm(y): 0.9869, norm:0.3896, tok/sec: 184437.75, flops:193.62, batch-reuse:1
@ 5095 train 3.9706 , allloss: 3.9706, dt: 710.76ms, fracRes: 0.1836, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5826, norm(y): 0.9881, norm:0.3995, tok/sec: 184410.78, flops:193.59, batch-reuse:1
@ 5096 train 3.8633 , allloss: 3.8633, dt: 711.98ms, fracRes: 0.1844, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5862, norm(y): 0.9896, norm:0.4053, tok/sec: 184095.34, flops:193.26, batch-reuse:1
@ 5097 train 3.8466 , allloss: 3.8466, dt: 711.62ms, fracRes: 0.1839, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5763, norm(y): 0.9887, norm:0.3699, tok/sec: 184188.29, flops:193.36, batch-reuse:1
@ 5098 train 3.9491 , allloss: 3.9491, dt: 709.08ms, fracRes: 0.1838, norm(attn): 38.0000, norm(output): 0.4277, norm(x): 0.5758, norm(y): 0.9882, norm:0.3975, tok/sec: 184847.60, flops:194.05, batch-reuse:1
@ 5099 train 3.8362 , allloss: 3.8362, dt: 706.87ms, fracRes: 0.1849, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5802, norm(y): 0.9879, norm:0.3821, tok/sec: 185426.00, flops:194.66, batch-reuse:1
@ 5100 train 3.8804 , allloss: 3.8804, dt: 710.74ms, fracRes: 0.1862, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5909, norm(y): 0.9873, norm:0.4480, tok/sec: 184415.23, flops:193.60, batch-reuse:1
@ 5101 train 3.8677 , allloss: 3.8677, dt: 709.48ms, fracRes: 0.1839, norm(attn): 38.0000, norm(output): 0.4238, norm(x): 0.5748, norm(y): 0.9862, norm:0.4031, tok/sec: 184742.75, flops:193.94, batch-reuse:1
@ 5102 train 3.9089 , allloss: 3.9089, dt: 709.16ms, fracRes: 0.1847, norm(attn): 38.0000, norm(output): 0.4199, norm(x): 0.5736, norm(y): 0.9865, norm:0.3979, tok/sec: 184827.47, flops:194.03, batch-reuse:1
@ 5103 train 3.9862 , allloss: 3.9862, dt: 707.92ms, fracRes: 0.1858, norm(attn): 38.0000, norm(output): 0.4336, norm(x): 0.5880, norm(y): 0.9890, norm:0.4754, tok/sec: 185150.85, flops:194.37, batch-reuse:1
@ 5104 train 3.9635 , allloss: 3.9635, dt: 711.01ms, fracRes: 0.1860, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5853, norm(y): 0.9890, norm:0.4716, tok/sec: 184345.85, flops:193.53, batch-reuse:1
@ 5105 train 3.8571 , allloss: 3.8571, dt: 714.16ms, fracRes: 0.1854, norm(attn): 37.7500, norm(output): 0.4297, norm(x): 0.5799, norm(y): 0.9876, norm:0.3988, tok/sec: 183534.09, flops:192.67, batch-reuse:1
@ 5106 train 3.9241 , allloss: 3.9241, dt: 705.83ms, fracRes: 0.1839, norm(attn): 38.0000, norm(output): 0.4258, norm(x): 0.5762, norm(y): 0.9864, norm:0.4878, tok/sec: 185700.02, flops:194.95, batch-reuse:1
@ 5107 train 3.9096 , allloss: 3.9096, dt: 698.19ms, fracRes: 0.1833, norm(attn): 37.7500, norm(output): 0.4336, norm(x): 0.5807, norm(y): 0.9875, norm:0.4292, tok/sec: 187731.01, flops:197.08, batch-reuse:1
@ 5108 train 3.8450 , allloss: 3.8450, dt: 707.12ms, fracRes: 0.1853, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5873, norm(y): 0.9882, norm:0.4269, tok/sec: 185360.10, flops:194.59, batch-reuse:1
@ 5109 train 3.8461 , allloss: 3.8461, dt: 709.92ms, fracRes: 0.1855, norm(attn): 37.7500, norm(output): 0.4316, norm(x): 0.5798, norm(y): 0.9884, norm:0.4235, tok/sec: 184629.15, flops:193.82, batch-reuse:1
@ 5110 train 3.8525 , allloss: 3.8525, dt: 711.85ms, fracRes: 0.1864, norm(attn): 37.7500, norm(output): 0.4336, norm(x): 0.5885, norm(y): 0.9890, norm:0.4147, tok/sec: 184127.90, flops:193.30, batch-reuse:1
@ 5111 train 3.8313 , allloss: 3.8313, dt: 693.27ms, fracRes: 0.1864, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5863, norm(y): 0.9882, norm:0.4879, tok/sec: 189063.63, flops:198.48, batch-reuse:1
@ 5112 train 3.8333 , allloss: 3.8333, dt: 695.87ms, fracRes: 0.1865, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.5967, norm(y): 0.9883, norm:0.4824, tok/sec: 188357.30, flops:197.74, batch-reuse:1
@ 5113 train 3.8478 , allloss: 3.8478, dt: 709.99ms, fracRes: 0.1858, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5850, norm(y): 0.9883, norm:0.4193, tok/sec: 184609.87, flops:193.80, batch-reuse:1
@ 5114 train 3.7931 , allloss: 3.7931, dt: 703.62ms, fracRes: 0.1844, norm(attn): 37.7500, norm(output): 0.4199, norm(x): 0.5713, norm(y): 0.9873, norm:0.4498, tok/sec: 186283.64, flops:195.56, batch-reuse:1
@ 5115 train 3.8730 , allloss: 3.8730, dt: 707.27ms, fracRes: 0.1849, norm(attn): 37.7500, norm(output): 0.4277, norm(x): 0.5758, norm(y): 0.9871, norm:0.4185, tok/sec: 185322.11, flops:194.55, batch-reuse:1
@ 5116 train 3.8213 , allloss: 3.8213, dt: 712.87ms, fracRes: 0.1855, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5873, norm(y): 0.9870, norm:0.4723, tok/sec: 183864.82, flops:193.02, batch-reuse:1
@ 5117 train 3.9217 , allloss: 3.9217, dt: 719.85ms, fracRes: 0.1851, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5862, norm(y): 0.9873, norm:0.4040, tok/sec: 182081.76, flops:191.15, batch-reuse:1
@ 5118 train 3.8145 , allloss: 3.8145, dt: 716.58ms, fracRes: 0.1847, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5762, norm(y): 0.9846, norm:0.4522, tok/sec: 182913.61, flops:192.02, batch-reuse:1
@ 5119 train 3.8446 , allloss: 3.8446, dt: 716.23ms, fracRes: 0.1864, norm(attn): 37.5000, norm(output): 0.4219, norm(x): 0.5763, norm(y): 0.9832, norm:0.3685, tok/sec: 183002.75, flops:192.12, batch-reuse:1
@ 5120 train 3.8549 , allloss: 3.8549, dt: 711.96ms, fracRes: 0.1872, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5815, norm(y): 0.9843, norm:0.3835, tok/sec: 184099.41, flops:193.27, batch-reuse:1
@ 5121 train 3.8501 , allloss: 3.8501, dt: 711.23ms, fracRes: 0.1872, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5831, norm(y): 0.9852, norm:0.3866, tok/sec: 184289.24, flops:193.47, batch-reuse:1
@ 5122 train 3.8028 , allloss: 3.8028, dt: 710.88ms, fracRes: 0.1862, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5813, norm(y): 0.9859, norm:0.3870, tok/sec: 184378.92, flops:193.56, batch-reuse:1
@ 5123 train 4.0524 , allloss: 4.0524, dt: 712.34ms, fracRes: 0.1873, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5814, norm(y): 0.9876, norm:0.4075, tok/sec: 184003.04, flops:193.17, batch-reuse:1
@ 5124 train 3.8744 , allloss: 3.8744, dt: 696.73ms, fracRes: 0.1884, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5814, norm(y): 0.9866, norm:0.4579, tok/sec: 188123.39, flops:197.49, batch-reuse:1
@ 5125 train 3.8362 , allloss: 3.8362, dt: 713.61ms, fracRes: 0.1873, norm(attn): 37.2500, norm(output): 0.4258, norm(x): 0.5765, norm(y): 0.9840, norm:0.4313, tok/sec: 183674.02, flops:192.82, batch-reuse:1
@ 5126 train 3.9107 , allloss: 3.9107, dt: 700.69ms, fracRes: 0.1870, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5805, norm(y): 0.9855, norm:0.4098, tok/sec: 187061.51, flops:196.38, batch-reuse:1
@ 5127 train 3.8323 , allloss: 3.8323, dt: 703.65ms, fracRes: 0.1865, norm(attn): 37.5000, norm(output): 0.4316, norm(x): 0.5806, norm(y): 0.9849, norm:0.4211, tok/sec: 186273.16, flops:195.55, batch-reuse:1
@ 5128 train 3.9070 , allloss: 3.9070, dt: 702.58ms, fracRes: 0.1863, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5778, norm(y): 0.9847, norm:0.4089, tok/sec: 186558.44, flops:195.85, batch-reuse:1
@ 5129 train 3.9496 , allloss: 3.9496, dt: 716.76ms, fracRes: 0.1873, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5852, norm(y): 0.9847, norm:0.4224, tok/sec: 182866.58, flops:191.97, batch-reuse:1
@ 5130 train 3.8650 , allloss: 3.8650, dt: 718.94ms, fracRes: 0.1864, norm(attn): 37.5000, norm(output): 0.4316, norm(x): 0.5795, norm(y): 0.9848, norm:0.4003, tok/sec: 182312.90, flops:191.39, batch-reuse:1
@ 5131 train 3.8007 , allloss: 3.8007, dt: 710.03ms, fracRes: 0.1862, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5838, norm(y): 0.9856, norm:0.3896, tok/sec: 184600.63, flops:193.79, batch-reuse:1
@ 5132 train 3.8324 , allloss: 3.8324, dt: 719.43ms, fracRes: 0.1858, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5811, norm(y): 0.9861, norm:0.3722, tok/sec: 182188.32, flops:191.26, batch-reuse:1
@ 5133 train 3.8490 , allloss: 3.8490, dt: 709.05ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5795, norm(y): 0.9856, norm:0.4089, tok/sec: 184854.94, flops:194.06, batch-reuse:1
@ 5134 train 3.8811 , allloss: 3.8811, dt: 701.74ms, fracRes: 0.1882, norm(attn): 37.2500, norm(output): 0.4453, norm(x): 0.5988, norm(y): 0.9859, norm:0.5554, tok/sec: 186780.85, flops:196.08, batch-reuse:1
@ 5135 train 3.9020 , allloss: 3.9020, dt: 706.15ms, fracRes: 0.1872, norm(attn): 37.2500, norm(output): 0.4395, norm(x): 0.5950, norm(y): 0.9861, norm:0.4978, tok/sec: 185614.56, flops:194.86, batch-reuse:1
@ 5136 train 3.8920 , allloss: 3.8920, dt: 707.73ms, fracRes: 0.1855, norm(attn): 37.2500, norm(output): 0.4297, norm(x): 0.5804, norm(y): 0.9848, norm:0.4661, tok/sec: 185199.43, flops:194.42, batch-reuse:1
@ 5137 train 3.8279 , allloss: 3.8279, dt: 710.02ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5764, norm(y): 0.9832, norm:0.4086, tok/sec: 184602.12, flops:193.80, batch-reuse:1
@ 5138 train 3.8992 , allloss: 3.8992, dt: 711.79ms, fracRes: 0.1870, norm(attn): 37.2500, norm(output): 0.4375, norm(x): 0.5889, norm(y): 0.9840, norm:0.4318, tok/sec: 184143.87, flops:193.31, batch-reuse:1
@ 5139 train 3.9143 , allloss: 3.9143, dt: 706.64ms, fracRes: 0.1875, norm(attn): 37.0000, norm(output): 0.4316, norm(x): 0.5833, norm(y): 0.9845, norm:0.4412, tok/sec: 185485.56, flops:194.72, batch-reuse:1
@ 5140 train 4.0154 , allloss: 4.0154, dt: 706.50ms, fracRes: 0.1863, norm(attn): 37.2500, norm(output): 0.4316, norm(x): 0.5824, norm(y): 0.9854, norm:0.4282, tok/sec: 185522.11, flops:194.76, batch-reuse:1
@ 5141 train 3.8479 , allloss: 3.8479, dt: 708.14ms, fracRes: 0.1857, norm(attn): 37.0000, norm(output): 0.4336, norm(x): 0.5861, norm(y): 0.9851, norm:0.4000, tok/sec: 185092.81, flops:194.31, batch-reuse:1
@ 5142 train 3.8378 , allloss: 3.8378, dt: 701.21ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4258, norm(x): 0.5763, norm(y): 0.9836, norm:0.4142, tok/sec: 186922.22, flops:196.23, batch-reuse:1
@ 5143 train 3.8610 , allloss: 3.8610, dt: 703.12ms, fracRes: 0.1841, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5833, norm(y): 0.9823, norm:0.4047, tok/sec: 186414.78, flops:195.70, batch-reuse:1
@ 5144 train 3.9324 , allloss: 3.9324, dt: 701.07ms, fracRes: 0.1857, norm(attn): 37.0000, norm(output): 0.4395, norm(x): 0.5875, norm(y): 0.9829, norm:0.5090, tok/sec: 186959.09, flops:196.27, batch-reuse:1
@ 5145 train 3.8976 , allloss: 3.8976, dt: 703.06ms, fracRes: 0.1853, norm(attn): 37.2500, norm(output): 0.4355, norm(x): 0.5846, norm(y): 0.9842, norm:0.4319, tok/sec: 186430.96, flops:195.72, batch-reuse:1
@ 5146 train 3.8522 , allloss: 3.8522, dt: 718.77ms, fracRes: 0.1847, norm(attn): 37.0000, norm(output): 0.4297, norm(x): 0.5816, norm(y): 0.9824, norm:0.3987, tok/sec: 182356.81, flops:191.44, batch-reuse:1
@ 5147 train 3.8064 , allloss: 3.8064, dt: 713.04ms, fracRes: 0.1844, norm(attn): 37.5000, norm(output): 0.4238, norm(x): 0.5731, norm(y): 0.9781, norm:0.4307, tok/sec: 183820.25, flops:192.97, batch-reuse:1
@ 5148 train 3.9014 , allloss: 3.9014, dt: 713.36ms, fracRes: 0.1855, norm(attn): 37.5000, norm(output): 0.4277, norm(x): 0.5784, norm(y): 0.9767, norm:0.3930, tok/sec: 183739.09, flops:192.89, batch-reuse:1
@ 5149 train 3.7841 , allloss: 3.7841, dt: 712.43ms, fracRes: 0.1873, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5865, norm(y): 0.9838, norm:0.4843, tok/sec: 183980.01, flops:193.14, batch-reuse:1
@ 5150 train 3.8561 , allloss: 3.8561, dt: 715.17ms, fracRes: 0.1861, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5843, norm(y): 0.9844, norm:0.4022, tok/sec: 183273.44, flops:192.40, batch-reuse:1
@ 5151 train 3.9199 , allloss: 3.9199, dt: 714.96ms, fracRes: 0.1870, norm(attn): 37.2500, norm(output): 0.4238, norm(x): 0.5791, norm(y): 0.9837, norm:0.4050, tok/sec: 183326.86, flops:192.46, batch-reuse:1
@ 5152 train 3.8357 , allloss: 3.8357, dt: 702.06ms, fracRes: 0.1863, norm(attn): 37.2500, norm(output): 0.4238, norm(x): 0.5766, norm(y): 0.9835, norm:0.4180, tok/sec: 186695.35, flops:195.99, batch-reuse:1
@ 5153 train 3.8209 , allloss: 3.8209, dt: 723.54ms, fracRes: 0.1872, norm(attn): 37.0000, norm(output): 0.4297, norm(x): 0.5839, norm(y): 0.9845, norm:0.4363, tok/sec: 181152.80, flops:190.17, batch-reuse:1
@ 5154 train 4.0693 , allloss: 4.0693, dt: 723.40ms, fracRes: 0.1866, norm(attn): 36.7500, norm(output): 0.4375, norm(x): 0.5940, norm(y): 0.9845, norm:0.5469, tok/sec: 181189.22, flops:190.21, batch-reuse:1
@ 5155 train 3.8478 , allloss: 3.8478, dt: 721.97ms, fracRes: 0.1886, norm(attn): 37.0000, norm(output): 0.4375, norm(x): 0.5931, norm(y): 0.9851, norm:0.4624, tok/sec: 181548.05, flops:190.59, batch-reuse:1
@ 5156 train 3.8658 , allloss: 3.8658, dt: 725.61ms, fracRes: 0.1865, norm(attn): 37.2500, norm(output): 0.4219, norm(x): 0.5786, norm(y): 0.9845, norm:0.4316, tok/sec: 180637.15, flops:189.63, batch-reuse:1
@ 5157 train 3.7292 , allloss: 3.7292, dt: 719.66ms, fracRes: 0.1845, norm(attn): 37.5000, norm(output): 0.4199, norm(x): 0.5726, norm(y): 0.9835, norm:0.4504, tok/sec: 182130.26, flops:191.20, batch-reuse:1
@ 5158 train 3.8650 , allloss: 3.8650, dt: 712.92ms, fracRes: 0.1838, norm(attn): 37.2500, norm(output): 0.4277, norm(x): 0.5805, norm(y): 0.9833, norm:0.4490, tok/sec: 183851.05, flops:193.01, batch-reuse:1
@ 5159 train 3.7841 , allloss: 3.7841, dt: 727.21ms, fracRes: 0.1849, norm(attn): 36.7500, norm(output): 0.4395, norm(x): 0.5879, norm(y): 0.9811, norm:0.4284, tok/sec: 180238.77, flops:189.21, batch-reuse:1
@ 5160 train 3.7669 , allloss: 3.7669, dt: 725.46ms, fracRes: 0.1833, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5830, norm(y): 0.9780, norm:0.4353, tok/sec: 180673.84, flops:189.67, batch-reuse:1
@ 5161 train 3.8228 , allloss: 3.8228, dt: 711.66ms, fracRes: 0.1849, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5801, norm(y): 0.9757, norm:0.4423, tok/sec: 184177.49, flops:193.35, batch-reuse:1
@ 5162 train 3.8715 , allloss: 3.8715, dt: 709.34ms, fracRes: 0.1845, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5827, norm(y): 0.9766, norm:0.4545, tok/sec: 184780.32, flops:193.98, batch-reuse:1
@ 5163 train 3.7064 , allloss: 3.7064, dt: 698.04ms, fracRes: 0.1862, norm(attn): 36.2500, norm(output): 0.4395, norm(x): 0.5920, norm(y): 0.9769, norm:0.4683, tok/sec: 187772.31, flops:197.12, batch-reuse:1
@ 5164 train 3.8375 , allloss: 3.8375, dt: 705.70ms, fracRes: 0.1862, norm(attn): 36.5000, norm(output): 0.4414, norm(x): 0.5926, norm(y): 0.9776, norm:0.4960, tok/sec: 185733.71, flops:194.98, batch-reuse:1
@ 5165 train 3.7889 , allloss: 3.7889, dt: 701.07ms, fracRes: 0.1855, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5832, norm(y): 0.9771, norm:0.4518, tok/sec: 186959.98, flops:196.27, batch-reuse:1
@ 5166 train 3.7453 , allloss: 3.7453, dt: 694.00ms, fracRes: 0.1851, norm(attn): 36.5000, norm(output): 0.4238, norm(x): 0.5744, norm(y): 0.9764, norm:0.4324, tok/sec: 188864.03, flops:198.27, batch-reuse:1
@ 5167 train 3.7672 , allloss: 3.7672, dt: 706.45ms, fracRes: 0.1843, norm(attn): 36.5000, norm(output): 0.4219, norm(x): 0.5716, norm(y): 0.9777, norm:0.3983, tok/sec: 185535.57, flops:194.78, batch-reuse:1
@ 5168 train 3.7664 , allloss: 3.7664, dt: 702.81ms, fracRes: 0.1835, norm(attn): 36.5000, norm(output): 0.4160, norm(x): 0.5669, norm(y): 0.9780, norm:0.4122, tok/sec: 186497.18, flops:195.79, batch-reuse:1
@ 5169 train 3.8041 , allloss: 3.8041, dt: 711.55ms, fracRes: 0.1848, norm(attn): 36.5000, norm(output): 0.4258, norm(x): 0.5760, norm(y): 0.9776, norm:0.3891, tok/sec: 184207.30, flops:193.38, batch-reuse:1
@ 5170 train 3.7746 , allloss: 3.7746, dt: 712.15ms, fracRes: 0.1866, norm(attn): 36.5000, norm(output): 0.4375, norm(x): 0.5880, norm(y): 0.9783, norm:0.4227, tok/sec: 184051.83, flops:193.22, batch-reuse:1
@ 5171 train 3.7687 , allloss: 3.7687, dt: 713.17ms, fracRes: 0.1870, norm(attn): 36.2500, norm(output): 0.4375, norm(x): 0.5891, norm(y): 0.9749, norm:0.4065, tok/sec: 183787.56, flops:192.94, batch-reuse:1
@ 5172 train 3.8119 , allloss: 3.8119, dt: 716.32ms, fracRes: 0.1853, norm(attn): 36.2500, norm(output): 0.4336, norm(x): 0.5824, norm(y): 0.9694, norm:0.4006, tok/sec: 182980.64, flops:192.09, batch-reuse:1
@ 5173 train 3.8262 , allloss: 3.8262, dt: 705.78ms, fracRes: 0.1847, norm(attn): 36.0000, norm(output): 0.4297, norm(x): 0.5809, norm(y): 0.9689, norm:0.4406, tok/sec: 185713.01, flops:194.96, batch-reuse:1
@ 5174 train 3.7823 , allloss: 3.7823, dt: 702.92ms, fracRes: 0.1851, norm(attn): 36.2500, norm(output): 0.4355, norm(x): 0.5852, norm(y): 0.9710, norm:0.4141, tok/sec: 186467.13, flops:195.75, batch-reuse:1
@ 5175 train 3.8254 , allloss: 3.8254, dt: 702.35ms, fracRes: 0.1840, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5782, norm(y): 0.9704, norm:0.4073, tok/sec: 186618.16, flops:195.91, batch-reuse:1
@ 5176 train 3.7759 , allloss: 3.7759, dt: 696.65ms, fracRes: 0.1842, norm(attn): 36.0000, norm(output): 0.4336, norm(x): 0.5835, norm(y): 0.9667, norm:0.4154, tok/sec: 188145.15, flops:197.52, batch-reuse:1
@ 5177 train 3.7860 , allloss: 3.7860, dt: 700.34ms, fracRes: 0.1841, norm(attn): 35.7500, norm(output): 0.4277, norm(x): 0.5773, norm(y): 0.9621, norm:0.3815, tok/sec: 187154.55, flops:196.48, batch-reuse:1
@ 5178 train 3.7200 , allloss: 3.7200, dt: 702.64ms, fracRes: 0.1851, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5802, norm(y): 0.9607, norm:0.3908, tok/sec: 186543.50, flops:195.83, batch-reuse:1
@ 5179 train 3.7706 , allloss: 3.7706, dt: 706.79ms, fracRes: 0.1864, norm(attn): 36.0000, norm(output): 0.4375, norm(x): 0.5863, norm(y): 0.9685, norm:0.4147, tok/sec: 185446.57, flops:194.68, batch-reuse:1
@ 5180 train 3.7075 , allloss: 3.7075, dt: 699.99ms, fracRes: 0.1874, norm(attn): 36.2500, norm(output): 0.4336, norm(x): 0.5850, norm(y): 0.9724, norm:0.4205, tok/sec: 187247.10, flops:196.57, batch-reuse:1
@ 5181 train 3.7890 , allloss: 3.7890, dt: 708.38ms, fracRes: 0.1874, norm(attn): 36.5000, norm(output): 0.4375, norm(x): 0.5883, norm(y): 0.9771, norm:0.3771, tok/sec: 185031.82, flops:194.25, batch-reuse:1
@ 5182 train 3.7814 , allloss: 3.7814, dt: 700.69ms, fracRes: 0.1865, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5822, norm(y): 0.9775, norm:0.3956, tok/sec: 187061.95, flops:196.38, batch-reuse:1
@ 5183 train 3.8002 , allloss: 3.8002, dt: 697.42ms, fracRes: 0.1870, norm(attn): 36.2500, norm(output): 0.4316, norm(x): 0.5838, norm(y): 0.9761, norm:0.4261, tok/sec: 187939.33, flops:197.30, batch-reuse:1
@ 5184 train 3.7560 , allloss: 3.7560, dt: 699.93ms, fracRes: 0.1851, norm(attn): 36.2500, norm(output): 0.4355, norm(x): 0.5846, norm(y): 0.9781, norm:0.4401, tok/sec: 187263.18, flops:196.59, batch-reuse:1
@ 5185 train 3.7730 , allloss: 3.7730, dt: 699.20ms, fracRes: 0.1858, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5831, norm(y): 0.9778, norm:0.4247, tok/sec: 187458.76, flops:196.79, batch-reuse:1
@ 5186 train 3.7003 , allloss: 3.7003, dt: 695.00ms, fracRes: 0.1846, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5782, norm(y): 0.9775, norm:0.3761, tok/sec: 188593.99, flops:197.99, batch-reuse:1
@ 5187 train 3.7913 , allloss: 3.7913, dt: 700.52ms, fracRes: 0.1864, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5820, norm(y): 0.9783, norm:0.3890, tok/sec: 187106.46, flops:196.42, batch-reuse:1
@ 5188 train 3.6225 , allloss: 3.6225, dt: 697.43ms, fracRes: 0.1867, norm(attn): 36.2500, norm(output): 0.4258, norm(x): 0.5788, norm(y): 0.9792, norm:0.4295, tok/sec: 187934.64, flops:197.29, batch-reuse:1
@ 5189 train 3.7529 , allloss: 3.7529, dt: 707.96ms, fracRes: 0.1863, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5819, norm(y): 0.9810, norm:0.4061, tok/sec: 185140.74, flops:194.36, batch-reuse:1
@ 5190 train 3.7705 , allloss: 3.7705, dt: 713.81ms, fracRes: 0.1865, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5830, norm(y): 0.9839, norm:0.3993, tok/sec: 183622.00, flops:192.77, batch-reuse:1
@ 5191 train 3.8902 , allloss: 3.8902, dt: 701.06ms, fracRes: 0.1855, norm(attn): 36.7500, norm(output): 0.4277, norm(x): 0.5788, norm(y): 0.9852, norm:0.4330, tok/sec: 186963.09, flops:196.27, batch-reuse:1
@ 5192 train 3.8195 , allloss: 3.8195, dt: 705.63ms, fracRes: 0.1860, norm(attn): 36.7500, norm(output): 0.4316, norm(x): 0.5840, norm(y): 0.9863, norm:0.4214, tok/sec: 185752.29, flops:195.00, batch-reuse:1
@ 5193 train 3.7802 , allloss: 3.7802, dt: 700.24ms, fracRes: 0.1842, norm(attn): 37.0000, norm(output): 0.4258, norm(x): 0.5747, norm(y): 0.9865, norm:0.4019, tok/sec: 187181.37, flops:196.50, batch-reuse:1
@ 5194 train 3.8441 , allloss: 3.8441, dt: 706.15ms, fracRes: 0.1832, norm(attn): 36.7500, norm(output): 0.4297, norm(x): 0.5782, norm(y): 0.9863, norm:0.4374, tok/sec: 185614.50, flops:194.86, batch-reuse:1
@ 5195 train 3.7319 , allloss: 3.7319, dt: 703.67ms, fracRes: 0.1816, norm(attn): 36.7500, norm(output): 0.4297, norm(x): 0.5760, norm(y): 0.9851, norm:0.3892, tok/sec: 186270.45, flops:195.55, batch-reuse:1
@ 5196 train 3.7101 , allloss: 3.7101, dt: 687.50ms, fracRes: 0.1827, norm(attn): 36.5000, norm(output): 0.4238, norm(x): 0.5729, norm(y): 0.9838, norm:0.3661, tok/sec: 190650.05, flops:200.14, batch-reuse:1
@ 5197 train 3.7931 , allloss: 3.7931, dt: 698.53ms, fracRes: 0.1839, norm(attn): 36.5000, norm(output): 0.4336, norm(x): 0.5818, norm(y): 0.9835, norm:0.3658, tok/sec: 187639.77, flops:196.98, batch-reuse:1
@ 5198 train 3.8097 , allloss: 3.8097, dt: 702.07ms, fracRes: 0.1831, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5779, norm(y): 0.9841, norm:0.3475, tok/sec: 186694.27, flops:195.99, batch-reuse:1
@ 5199 train 3.8776 , allloss: 3.8776, dt: 702.79ms, fracRes: 0.1853, norm(attn): 36.5000, norm(output): 0.4316, norm(x): 0.5839, norm(y): 0.9857, norm:0.4157, tok/sec: 186503.63, flops:195.79, batch-reuse:1
@ 5200 train 3.6403 , allloss: 3.6403, dt: 709.72ms, fracRes: 0.1907, norm(attn): 36.5000, norm(output): 0.4492, norm(x): 0.5978, norm(y): 0.9844, norm:0.4634, tok/sec: 184681.31, flops:193.88, batch-reuse:1
@ 5201 train 3.8314 , allloss: 3.8314, dt: 696.46ms, fracRes: 0.1873, norm(attn): 36.5000, norm(output): 0.4355, norm(x): 0.5851, norm(y): 0.9839, norm:0.5066, tok/sec: 188197.26, flops:197.57, batch-reuse:1
@ 5202 train 3.7761 , allloss: 3.7761, dt: 702.06ms, fracRes: 0.1864, norm(attn): 36.5000, norm(output): 0.4297, norm(x): 0.5795, norm(y): 0.9834, norm:0.4166, tok/sec: 186696.61, flops:195.99, batch-reuse:1
@ 5203 train 3.9358 , allloss: 3.9358, dt: 706.89ms, fracRes: 0.1895, norm(attn): 36.2500, norm(output): 0.4414, norm(x): 0.5947, norm(y): 0.9834, norm:0.5441, tok/sec: 185420.05, flops:194.65, batch-reuse:1
@ 5204 train 3.9694 , allloss: 3.9694, dt: 707.60ms, fracRes: 0.1871, norm(attn): 36.2500, norm(output): 0.4375, norm(x): 0.5888, norm(y): 0.9811, norm:0.5691, tok/sec: 185233.75, flops:194.46, batch-reuse:1
@ 5205 train 3.9397 , allloss: 3.9397, dt: 707.80ms, fracRes: 0.1863, norm(attn): 36.0000, norm(output): 0.4395, norm(x): 0.5914, norm(y): 0.9726, norm:0.4257, tok/sec: 185183.40, flops:194.41, batch-reuse:1
@ 5206 train 3.9130 , allloss: 3.9130, dt: 708.10ms, fracRes: 0.1866, norm(attn): 35.5000, norm(output): 0.4277, norm(x): 0.5778, norm(y): 0.9517, norm:0.4814, tok/sec: 185103.28, flops:194.32, batch-reuse:1
@ 5207 train 3.9666 , allloss: 3.9666, dt: 711.10ms, fracRes: 0.1850, norm(attn): 32.5000, norm(output): 0.4922, norm(x): 0.6401, norm(y): 0.9076, norm:15.1858, tok/sec: 184321.74, flops:193.50, batch-reuse:1
@ 5208 train 3.9486 , allloss: 3.9486, dt: 707.54ms, fracRes: 0.1840, norm(attn): 35.7500, norm(output): 0.4297, norm(x): 0.5787, norm(y): 0.9551, norm:0.6603, tok/sec: 185249.55, flops:194.48, batch-reuse:1
@ 5209 train 4.0394 , allloss: 4.0394, dt: 710.31ms, fracRes: 0.1866, norm(attn): 36.2500, norm(output): 0.4336, norm(x): 0.5859, norm(y): 0.9787, norm:0.5491, tok/sec: 184527.02, flops:193.72, batch-reuse:1
@ 5210 train 4.0964 , allloss: 4.0964, dt: 707.58ms, fracRes: 0.1917, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6066, norm(y): 0.9870, norm:0.5218, tok/sec: 185239.68, flops:194.46, batch-reuse:1
@ 5211 train 3.9178 , allloss: 3.9178, dt: 700.88ms, fracRes: 0.1873, norm(attn): 37.0000, norm(output): 0.4395, norm(x): 0.5923, norm(y): 0.9894, norm:0.5841, tok/sec: 187011.62, flops:196.33, batch-reuse:1
@ 5212 train 3.9164 , allloss: 3.9164, dt: 714.69ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5792, norm(y): 0.9889, norm:0.4874, tok/sec: 183396.70, flops:192.53, batch-reuse:1
@ 5213 train 3.9068 , allloss: 3.9068, dt: 720.52ms, fracRes: 0.1827, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5807, norm(y): 0.9895, norm:0.4636, tok/sec: 181911.91, flops:190.97, batch-reuse:1
@ 5214 train 3.9740 , allloss: 3.9740, dt: 707.95ms, fracRes: 0.1847, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5878, norm(y): 0.9900, norm:0.4330, tok/sec: 185141.74, flops:194.36, batch-reuse:1
@ 5215 train 4.0321 , allloss: 4.0321, dt: 701.43ms, fracRes: 0.1855, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5844, norm(y): 0.9909, norm:0.4187, tok/sec: 186863.51, flops:196.17, batch-reuse:1
@ 5216 train 3.8753 , allloss: 3.8753, dt: 710.58ms, fracRes: 0.1863, norm(attn): 37.5000, norm(output): 0.4258, norm(x): 0.5808, norm(y): 0.9907, norm:0.4417, tok/sec: 184457.68, flops:193.64, batch-reuse:1
@ 5217 train 3.8972 , allloss: 3.8972, dt: 717.81ms, fracRes: 0.1864, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5835, norm(y): 0.9906, norm:0.4030, tok/sec: 182599.45, flops:191.69, batch-reuse:1
@ 5218 train 4.0105 , allloss: 4.0105, dt: 713.04ms, fracRes: 0.1872, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5883, norm(y): 0.9905, norm:0.4149, tok/sec: 183821.05, flops:192.98, batch-reuse:1
@ 5219 train 3.8719 , allloss: 3.8719, dt: 711.69ms, fracRes: 0.1876, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5854, norm(y): 0.9905, norm:0.3827, tok/sec: 184169.59, flops:193.34, batch-reuse:1
@ 5220 train 4.0730 , allloss: 4.0730, dt: 702.29ms, fracRes: 0.1888, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5897, norm(y): 0.9915, norm:0.4700, tok/sec: 186634.82, flops:195.93, batch-reuse:1
@ 5221 train 3.9046 , allloss: 3.9046, dt: 706.45ms, fracRes: 0.1865, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5875, norm(y): 0.9913, norm:0.4037, tok/sec: 185535.82, flops:194.78, batch-reuse:1
@ 5222 train 3.8989 , allloss: 3.8989, dt: 709.49ms, fracRes: 0.1864, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5883, norm(y): 0.9914, norm:0.3924, tok/sec: 184740.02, flops:193.94, batch-reuse:1
@ 5223 train 3.9898 , allloss: 3.9898, dt: 708.26ms, fracRes: 0.1845, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5861, norm(y): 0.9913, norm:0.4155, tok/sec: 185062.40, flops:194.28, batch-reuse:1
@ 5224 train 3.9179 , allloss: 3.9179, dt: 721.13ms, fracRes: 0.1847, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5823, norm(y): 0.9909, norm:0.3673, tok/sec: 181758.31, flops:190.81, batch-reuse:1
@ 5225 train 3.9951 , allloss: 3.9951, dt: 717.35ms, fracRes: 0.1885, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5991, norm(y): 0.9916, norm:0.5143, tok/sec: 182716.15, flops:191.82, batch-reuse:1
@ 5226 train 3.7974 , allloss: 3.7974, dt: 700.80ms, fracRes: 0.1874, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5964, norm(y): 0.9911, norm:0.4309, tok/sec: 187032.30, flops:196.35, batch-reuse:1
@ 5227 train 3.9148 , allloss: 3.9148, dt: 712.42ms, fracRes: 0.1879, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5923, norm(y): 0.9912, norm:0.4480, tok/sec: 183981.86, flops:193.14, batch-reuse:1
@ 5228 train 3.8548 , allloss: 3.8548, dt: 700.94ms, fracRes: 0.1881, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5969, norm(y): 0.9912, norm:0.4458, tok/sec: 186994.76, flops:196.31, batch-reuse:1
@ 5229 train 3.9203 , allloss: 3.9203, dt: 705.97ms, fracRes: 0.1870, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5862, norm(y): 0.9911, norm:0.4337, tok/sec: 185661.39, flops:194.91, batch-reuse:1
@ 5230 train 3.9112 , allloss: 3.9112, dt: 718.33ms, fracRes: 0.1878, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5872, norm(y): 0.9912, norm:0.4024, tok/sec: 182468.30, flops:191.56, batch-reuse:1
@ 5231 train 3.9637 , allloss: 3.9637, dt: 712.15ms, fracRes: 0.1906, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.6003, norm(y): 0.9924, norm:0.4212, tok/sec: 184050.10, flops:193.22, batch-reuse:1
@ 5232 train 4.0665 , allloss: 4.0665, dt: 707.21ms, fracRes: 0.1889, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5971, norm(y): 0.9921, norm:0.4177, tok/sec: 185336.42, flops:194.57, batch-reuse:1
@ 5233 train 3.9116 , allloss: 3.9116, dt: 712.32ms, fracRes: 0.1858, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5855, norm(y): 0.9910, norm:0.4404, tok/sec: 184006.92, flops:193.17, batch-reuse:1
@ 5234 train 3.9086 , allloss: 3.9086, dt: 697.45ms, fracRes: 0.1846, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5784, norm(y): 0.9905, norm:0.4068, tok/sec: 187929.95, flops:197.29, batch-reuse:1
@ 5235 train 3.9037 , allloss: 3.9037, dt: 707.51ms, fracRes: 0.1860, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5852, norm(y): 0.9911, norm:0.4275, tok/sec: 185258.53, flops:194.48, batch-reuse:1
@ 5236 train 3.9578 , allloss: 3.9578, dt: 707.89ms, fracRes: 0.1867, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5882, norm(y): 0.9914, norm:0.4269, tok/sec: 185159.14, flops:194.38, batch-reuse:1
@ 5237 train 4.0401 , allloss: 4.0401, dt: 708.24ms, fracRes: 0.1888, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5952, norm(y): 0.9912, norm:0.4180, tok/sec: 185067.57, flops:194.28, batch-reuse:1
@ 5238 train 3.9898 , allloss: 3.9898, dt: 704.70ms, fracRes: 0.1876, norm(attn): 37.2500, norm(output): 0.4414, norm(x): 0.5951, norm(y): 0.9911, norm:0.4442, tok/sec: 185996.57, flops:195.26, batch-reuse:1
@ 5239 train 3.8924 , allloss: 3.8924, dt: 703.83ms, fracRes: 0.1861, norm(attn): 37.2500, norm(output): 0.4316, norm(x): 0.5819, norm(y): 0.9904, norm:0.4058, tok/sec: 186225.71, flops:195.50, batch-reuse:1
@ 5240 train 4.0201 , allloss: 4.0201, dt: 706.61ms, fracRes: 0.1860, norm(attn): 37.2500, norm(output): 0.4316, norm(x): 0.5861, norm(y): 0.9910, norm:0.3957, tok/sec: 185493.75, flops:194.73, batch-reuse:1
@ 5241 train 3.9259 , allloss: 3.9259, dt: 707.30ms, fracRes: 0.1863, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5852, norm(y): 0.9904, norm:0.4112, tok/sec: 185313.30, flops:194.54, batch-reuse:1
@ 5242 train 4.0487 , allloss: 4.0487, dt: 704.24ms, fracRes: 0.1874, norm(attn): 37.0000, norm(output): 0.4375, norm(x): 0.5942, norm(y): 0.9914, norm:0.4620, tok/sec: 186118.35, flops:195.39, batch-reuse:1
@ 5243 train 3.9735 , allloss: 3.9735, dt: 705.22ms, fracRes: 0.1873, norm(attn): 37.2500, norm(output): 0.4375, norm(x): 0.5934, norm(y): 0.9920, norm:0.4433, tok/sec: 185859.36, flops:195.12, batch-reuse:1
@ 5244 train 3.9137 , allloss: 3.9137, dt: 695.32ms, fracRes: 0.1871, norm(attn): 37.0000, norm(output): 0.4375, norm(x): 0.5923, norm(y): 0.9910, norm:0.5426, tok/sec: 188507.01, flops:197.89, batch-reuse:1
@ 5245 train 3.9125 , allloss: 3.9125, dt: 709.33ms, fracRes: 0.1852, norm(attn): 37.5000, norm(output): 0.4297, norm(x): 0.5807, norm(y): 0.9905, norm:0.4348, tok/sec: 184783.98, flops:193.99, batch-reuse:1
@ 5246 train 3.8082 , allloss: 3.8082, dt: 703.84ms, fracRes: 0.1849, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5838, norm(y): 0.9900, norm:0.4748, tok/sec: 186225.34, flops:195.50, batch-reuse:1
@ 5247 train 3.9071 , allloss: 3.9071, dt: 704.67ms, fracRes: 0.1853, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5849, norm(y): 0.9907, norm:0.5114, tok/sec: 186004.18, flops:195.27, batch-reuse:1
@ 5248 train 3.8532 , allloss: 3.8532, dt: 704.27ms, fracRes: 0.1869, norm(attn): 36.7500, norm(output): 0.4375, norm(x): 0.5885, norm(y): 0.9905, norm:0.4782, tok/sec: 186109.21, flops:195.38, batch-reuse:1
@ 5249 train 3.9541 , allloss: 3.9541, dt: 699.41ms, fracRes: 0.1874, norm(attn): 36.7500, norm(output): 0.4395, norm(x): 0.5931, norm(y): 0.9909, norm:0.4222, tok/sec: 187402.78, flops:196.74, batch-reuse:1
@ 5250 train 3.9239 , allloss: 3.9239, dt: 710.76ms, fracRes: 0.1876, norm(attn): 36.5000, norm(output): 0.4375, norm(x): 0.5945, norm(y): 0.9914, norm:0.4713, tok/sec: 184411.58, flops:193.60, batch-reuse:1
@ 5251 train 3.8600 , allloss: 3.8600, dt: 695.17ms, fracRes: 0.1867, norm(attn): 36.7500, norm(output): 0.4316, norm(x): 0.5832, norm(y): 0.9907, norm:0.3921, tok/sec: 188545.61, flops:197.94, batch-reuse:1
@ 5252 train 3.8776 , allloss: 3.8776, dt: 706.00ms, fracRes: 0.1871, norm(attn): 36.7500, norm(output): 0.4355, norm(x): 0.5884, norm(y): 0.9901, norm:0.4324, tok/sec: 185654.18, flops:194.90, batch-reuse:1
@ 5253 train 3.9904 , allloss: 3.9904, dt: 708.83ms, fracRes: 0.1866, norm(attn): 37.0000, norm(output): 0.4375, norm(x): 0.5898, norm(y): 0.9912, norm:0.4697, tok/sec: 184913.20, flops:194.12, batch-reuse:1
@ 5254 train 3.9622 , allloss: 3.9622, dt: 708.66ms, fracRes: 0.1863, norm(attn): 37.2500, norm(output): 0.4336, norm(x): 0.5859, norm(y): 0.9907, norm:0.4671, tok/sec: 184956.99, flops:194.17, batch-reuse:1
@ 5255 train 3.9022 , allloss: 3.9022, dt: 703.38ms, fracRes: 0.1864, norm(attn): 37.2500, norm(output): 0.4355, norm(x): 0.5840, norm(y): 0.9902, norm:0.3843, tok/sec: 186344.95, flops:195.63, batch-reuse:1
@ 5256 train 3.8613 , allloss: 3.8613, dt: 706.88ms, fracRes: 0.1866, norm(attn): 36.7500, norm(output): 0.4336, norm(x): 0.5864, norm(y): 0.9904, norm:0.4217, tok/sec: 185421.99, flops:194.66, batch-reuse:1
@ 5257 train 3.9420 , allloss: 3.9420, dt: 694.11ms, fracRes: 0.1856, norm(attn): 36.7500, norm(output): 0.7070, norm(x): 0.8546, norm(y): 0.9888, norm:3.7669, tok/sec: 188834.78, flops:198.24, batch-reuse:1
@ 5258 train 3.9544 , allloss: 3.9544, dt: 704.60ms, fracRes: 0.1868, norm(attn): 36.5000, norm(output): 0.4375, norm(x): 0.5914, norm(y): 0.9888, norm:0.4839, tok/sec: 186023.75, flops:195.29, batch-reuse:1
@ 5259 train 3.9746 , allloss: 3.9746, dt: 704.62ms, fracRes: 0.1840, norm(attn): 37.0000, norm(output): 0.9336, norm(x): 1.0777, norm(y): 0.9873, norm:2.2889, tok/sec: 186017.65, flops:195.28, batch-reuse:1
@ 5260 train 3.9819 , allloss: 3.9819, dt: 697.63ms, fracRes: 0.1840, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.5987, norm(y): 0.9902, norm:1.4513, tok/sec: 187883.07, flops:197.24, batch-reuse:1
@ 5261 train 3.8967 , allloss: 3.8967, dt: 705.33ms, fracRes: 0.1839, norm(attn): 37.2500, norm(output): 0.4355, norm(x): 0.5848, norm(y): 0.9906, norm:0.4349, tok/sec: 185831.15, flops:195.09, batch-reuse:1
@ 5262 train 3.9485 , allloss: 3.9485, dt: 704.89ms, fracRes: 0.1839, norm(attn): 37.2500, norm(output): 0.4414, norm(x): 0.5922, norm(y): 0.9912, norm:0.4612, tok/sec: 185945.55, flops:195.21, batch-reuse:1
@ 5263 train 4.0249 , allloss: 4.0249, dt: 696.50ms, fracRes: 0.1837, norm(attn): 37.2500, norm(output): 0.4414, norm(x): 0.5910, norm(y): 0.9910, norm:0.4603, tok/sec: 188185.54, flops:197.56, batch-reuse:1
@ 5264 train 3.9711 , allloss: 3.9711, dt: 701.12ms, fracRes: 0.1825, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5819, norm(y): 0.9912, norm:0.3958, tok/sec: 186946.18, flops:196.26, batch-reuse:1
@ 5265 train 3.9630 , allloss: 3.9630, dt: 704.73ms, fracRes: 0.1839, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5844, norm(y): 0.9908, norm:0.4260, tok/sec: 185988.20, flops:195.25, batch-reuse:1
@ 5266 train 3.8952 , allloss: 3.8952, dt: 698.24ms, fracRes: 0.1834, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5890, norm(y): 0.9920, norm:0.4258, tok/sec: 187716.59, flops:197.07, batch-reuse:1
@ 5267 train 3.9507 , allloss: 3.9507, dt: 708.23ms, fracRes: 0.1837, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5887, norm(y): 0.9923, norm:0.3694, tok/sec: 185071.06, flops:194.29, batch-reuse:1
@ 5268 train 3.9980 , allloss: 3.9980, dt: 707.51ms, fracRes: 0.1832, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5795, norm(y): 0.9917, norm:0.4455, tok/sec: 185258.97, flops:194.49, batch-reuse:1
@ 5269 train 3.9635 , allloss: 3.9635, dt: 696.60ms, fracRes: 0.1842, norm(attn): 37.2500, norm(output): 0.4375, norm(x): 0.5834, norm(y): 0.9915, norm:0.4124, tok/sec: 188160.48, flops:197.53, batch-reuse:1
@ 5270 train 3.9149 , allloss: 3.9149, dt: 700.90ms, fracRes: 0.1841, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5834, norm(y): 0.9910, norm:0.4467, tok/sec: 187006.21, flops:196.32, batch-reuse:1
@ 5271 train 4.0321 , allloss: 4.0321, dt: 703.39ms, fracRes: 0.1858, norm(attn): 37.7500, norm(output): 0.4414, norm(x): 0.5911, norm(y): 0.9915, norm:0.3985, tok/sec: 186342.17, flops:195.62, batch-reuse:1
@ 5272 train 4.0261 , allloss: 4.0261, dt: 693.76ms, fracRes: 0.1850, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5905, norm(y): 0.9919, norm:0.4086, tok/sec: 188928.61, flops:198.34, batch-reuse:1
@ 5273 train 3.9259 , allloss: 3.9259, dt: 709.58ms, fracRes: 0.1857, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5907, norm(y): 0.9912, norm:0.4086, tok/sec: 184716.80, flops:193.92, batch-reuse:1
@ 5274 train 3.9671 , allloss: 3.9671, dt: 714.39ms, fracRes: 0.1860, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5893, norm(y): 0.9906, norm:0.4000, tok/sec: 183475.10, flops:192.61, batch-reuse:1
@ 5275 train 3.8109 , allloss: 3.8109, dt: 703.14ms, fracRes: 0.1860, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5887, norm(y): 0.9906, norm:0.3614, tok/sec: 186409.28, flops:195.69, batch-reuse:1
@ 5276 train 3.9101 , allloss: 3.9101, dt: 706.78ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5880, norm(y): 0.9911, norm:0.3867, tok/sec: 185450.64, flops:194.69, batch-reuse:1
@ 5277 train 3.9022 , allloss: 3.9022, dt: 707.71ms, fracRes: 0.1859, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5914, norm(y): 0.9916, norm:0.3562, tok/sec: 185205.67, flops:194.43, batch-reuse:1
@ 5278 train 3.9422 , allloss: 3.9422, dt: 702.40ms, fracRes: 0.1865, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5904, norm(y): 0.9919, norm:0.4125, tok/sec: 186606.75, flops:195.90, batch-reuse:1
@ 5279 train 3.9495 , allloss: 3.9495, dt: 711.70ms, fracRes: 0.1861, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5879, norm(y): 0.9917, norm:0.3582, tok/sec: 184167.43, flops:193.34, batch-reuse:1
@ 5280 train 4.0165 , allloss: 4.0165, dt: 715.24ms, fracRes: 0.1844, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5865, norm(y): 0.9920, norm:0.4605, tok/sec: 183255.36, flops:192.38, batch-reuse:1
@ 5281 train 3.9063 , allloss: 3.9063, dt: 704.63ms, fracRes: 0.1839, norm(attn): 38.0000, norm(output): 0.4316, norm(x): 0.5776, norm(y): 0.9908, norm:0.3574, tok/sec: 186015.70, flops:195.28, batch-reuse:1
@ 5282 train 3.9460 , allloss: 3.9460, dt: 715.10ms, fracRes: 0.1861, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.5932, norm(y): 0.9916, norm:0.4429, tok/sec: 183292.57, flops:192.42, batch-reuse:1
@ 5283 train 3.9238 , allloss: 3.9238, dt: 699.09ms, fracRes: 0.1852, norm(attn): 37.5000, norm(output): 0.4336, norm(x): 0.5812, norm(y): 0.9909, norm:0.3727, tok/sec: 187490.22, flops:196.83, batch-reuse:1
@ 5284 train 3.8858 , allloss: 3.8858, dt: 694.74ms, fracRes: 0.1866, norm(attn): 37.5000, norm(output): 0.4355, norm(x): 0.5838, norm(y): 0.9912, norm:0.4089, tok/sec: 188663.05, flops:198.06, batch-reuse:1
@ 5285 train 3.9075 , allloss: 3.9075, dt: 692.44ms, fracRes: 0.1856, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5854, norm(y): 0.9910, norm:0.3788, tok/sec: 189289.45, flops:198.72, batch-reuse:1
@ 5286 train 3.8067 , allloss: 3.8067, dt: 698.47ms, fracRes: 0.1861, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5878, norm(y): 0.9905, norm:0.4073, tok/sec: 187655.01, flops:197.00, batch-reuse:1
@ 5287 train 3.9760 , allloss: 3.9760, dt: 695.80ms, fracRes: 0.1851, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5888, norm(y): 0.9910, norm:0.4260, tok/sec: 188374.98, flops:197.76, batch-reuse:1
@ 5288 train 3.7143 , allloss: 3.7143, dt: 702.13ms, fracRes: 0.1833, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.5923, norm(y): 0.9908, norm:0.4381, tok/sec: 186676.52, flops:195.97, batch-reuse:1
@ 5289 train 3.8185 , allloss: 3.8185, dt: 711.05ms, fracRes: 0.1848, norm(attn): 37.2500, norm(output): 0.4414, norm(x): 0.5869, norm(y): 0.9904, norm:0.4008, tok/sec: 184334.72, flops:193.51, batch-reuse:1
@ 5290 train 3.9966 , allloss: 3.9966, dt: 702.96ms, fracRes: 0.1849, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5885, norm(y): 0.9907, norm:0.4025, tok/sec: 186458.08, flops:195.74, batch-reuse:1
@ 5291 train 3.9001 , allloss: 3.9001, dt: 710.63ms, fracRes: 0.1854, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5874, norm(y): 0.9906, norm:0.3639, tok/sec: 184445.24, flops:193.63, batch-reuse:1
@ 5292 train 3.8665 , allloss: 3.8665, dt: 710.34ms, fracRes: 0.1866, norm(attn): 37.5000, norm(output): 0.4375, norm(x): 0.5863, norm(y): 0.9910, norm:0.3886, tok/sec: 184520.21, flops:193.71, batch-reuse:1
@ 5293 train 3.8917 , allloss: 3.8917, dt: 712.80ms, fracRes: 0.1867, norm(attn): 37.2500, norm(output): 0.4355, norm(x): 0.5839, norm(y): 0.9901, norm:0.4017, tok/sec: 183882.96, flops:193.04, batch-reuse:1
@ 5294 train 3.9119 , allloss: 3.9119, dt: 708.79ms, fracRes: 0.1869, norm(attn): 37.2500, norm(output): 0.7148, norm(x): 0.8607, norm(y): 0.9880, norm:0.8073, tok/sec: 184922.71, flops:194.13, batch-reuse:1
@ 5295 train 3.9377 , allloss: 3.9377, dt: 699.73ms, fracRes: 0.1873, norm(attn): 37.7500, norm(output): 0.4414, norm(x): 0.5905, norm(y): 0.9904, norm:0.4840, tok/sec: 187316.84, flops:196.65, batch-reuse:1
@ 5296 train 3.8307 , allloss: 3.8307, dt: 708.78ms, fracRes: 0.1871, norm(attn): 38.0000, norm(output): 0.4375, norm(x): 0.5859, norm(y): 0.9901, norm:0.4126, tok/sec: 184925.82, flops:194.14, batch-reuse:1
@ 5297 train 3.9561 , allloss: 3.9561, dt: 709.54ms, fracRes: 0.1877, norm(attn): 38.2500, norm(output): 0.4375, norm(x): 0.5828, norm(y): 0.9900, norm:0.4447, tok/sec: 184728.72, flops:193.93, batch-reuse:1
@ 5298 train 3.8869 , allloss: 3.8869, dt: 711.15ms, fracRes: 0.1864, norm(attn): 38.2500, norm(output): 0.4375, norm(x): 0.5823, norm(y): 0.9896, norm:0.4004, tok/sec: 184309.88, flops:193.49, batch-reuse:1
@ 5299 train 3.8478 , allloss: 3.8478, dt: 713.58ms, fracRes: 0.1889, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6081, norm(y): 0.9911, norm:0.5653, tok/sec: 183682.86, flops:192.83, batch-reuse:1
@ 5300 train 3.8348 , allloss: 3.8348, dt: 711.70ms, fracRes: 0.1853, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5867, norm(y): 0.9897, norm:0.4776, tok/sec: 184168.11, flops:193.34, batch-reuse:1
@ 5301 train 3.8855 , allloss: 3.8855, dt: 711.23ms, fracRes: 0.1852, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5839, norm(y): 0.9898, norm:0.4201, tok/sec: 184289.98, flops:193.47, batch-reuse:1
@ 5302 train 3.8940 , allloss: 3.8940, dt: 721.49ms, fracRes: 0.1854, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5896, norm(y): 0.9904, norm:0.4346, tok/sec: 181668.34, flops:190.72, batch-reuse:1
@ 5303 train 3.9033 , allloss: 3.9033, dt: 719.32ms, fracRes: 0.1853, norm(attn): 38.7500, norm(output): 0.4375, norm(x): 0.5852, norm(y): 0.9904, norm:0.4207, tok/sec: 182216.89, flops:191.29, batch-reuse:1
@ 5304 train 3.8938 , allloss: 3.8938, dt: 713.15ms, fracRes: 0.1850, norm(attn): 38.7500, norm(output): 0.4336, norm(x): 0.5809, norm(y): 0.9897, norm:0.4468, tok/sec: 183792.66, flops:192.95, batch-reuse:1
@ 5305 train 3.8898 , allloss: 3.8898, dt: 702.82ms, fracRes: 0.1855, norm(attn): 39.0000, norm(output): 0.4375, norm(x): 0.5855, norm(y): 0.9900, norm:0.4123, tok/sec: 186494.20, flops:195.78, batch-reuse:1
@ 5306 train 3.8777 , allloss: 3.8777, dt: 703.86ms, fracRes: 0.1868, norm(attn): 39.2500, norm(output): 0.4395, norm(x): 0.5870, norm(y): 0.9894, norm:0.4076, tok/sec: 186219.03, flops:195.49, batch-reuse:1
@ 5307 train 3.7621 , allloss: 3.7621, dt: 707.24ms, fracRes: 0.1877, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5861, norm(y): 0.9887, norm:0.3749, tok/sec: 185327.67, flops:194.56, batch-reuse:1
@ 5308 train 3.9677 , allloss: 3.9677, dt: 710.20ms, fracRes: 0.1879, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5932, norm(y): 0.9892, norm:0.3974, tok/sec: 184555.21, flops:193.75, batch-reuse:1
@ 5309 train 3.8848 , allloss: 3.8848, dt: 705.17ms, fracRes: 0.1865, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5889, norm(y): 0.9880, norm:0.4025, tok/sec: 185872.24, flops:195.13, batch-reuse:1
@ 5310 train 3.8874 , allloss: 3.8874, dt: 718.04ms, fracRes: 0.1862, norm(attn): 39.7500, norm(output): 0.4297, norm(x): 0.5828, norm(y): 0.9849, norm:0.3727, tok/sec: 182540.76, flops:191.63, batch-reuse:1
@ 5311 train 3.8858 , allloss: 3.8858, dt: 706.35ms, fracRes: 0.1871, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5909, norm(y): 0.9891, norm:0.4072, tok/sec: 185561.69, flops:194.80, batch-reuse:1
@ 5312 train 3.7750 , allloss: 3.7750, dt: 708.65ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5866, norm(y): 0.9895, norm:0.4089, tok/sec: 184960.85, flops:194.17, batch-reuse:1
@ 5313 train 3.9180 , allloss: 3.9180, dt: 707.09ms, fracRes: 0.1878, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5911, norm(y): 0.9910, norm:0.5282, tok/sec: 185367.04, flops:194.60, batch-reuse:1
@ 5314 train 3.9311 , allloss: 3.9311, dt: 701.69ms, fracRes: 0.1858, norm(attn): 39.7500, norm(output): 0.4355, norm(x): 0.5816, norm(y): 0.9900, norm:0.4150, tok/sec: 186794.43, flops:196.10, batch-reuse:1
@ 5315 train 3.9189 , allloss: 3.9189, dt: 701.65ms, fracRes: 0.1868, norm(attn): 39.7500, norm(output): 0.4355, norm(x): 0.5856, norm(y): 0.9909, norm:0.3906, tok/sec: 186805.41, flops:196.11, batch-reuse:1
@ 5316 train 3.8587 , allloss: 3.8587, dt: 712.01ms, fracRes: 0.1870, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5883, norm(y): 0.9912, norm:0.3797, tok/sec: 184086.22, flops:193.25, batch-reuse:1
@ 5317 train 3.8051 , allloss: 3.8051, dt: 711.62ms, fracRes: 0.1860, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5909, norm(y): 0.9914, norm:0.3744, tok/sec: 184189.22, flops:193.36, batch-reuse:1
@ 5318 train 3.8781 , allloss: 3.8781, dt: 709.13ms, fracRes: 0.1856, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5875, norm(y): 0.9908, norm:0.3795, tok/sec: 184835.98, flops:194.04, batch-reuse:1
@ 5319 train 3.9023 , allloss: 3.9023, dt: 699.99ms, fracRes: 0.1853, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5883, norm(y): 0.9914, norm:0.3788, tok/sec: 187248.51, flops:196.57, batch-reuse:1
@ 5320 train 3.9040 , allloss: 3.9040, dt: 696.23ms, fracRes: 0.1852, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5940, norm(y): 0.9915, norm:0.3853, tok/sec: 188259.39, flops:197.64, batch-reuse:1
@ 5321 train 3.8094 , allloss: 3.8094, dt: 705.48ms, fracRes: 0.1849, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5902, norm(y): 0.9907, norm:0.3558, tok/sec: 185790.45, flops:195.04, batch-reuse:1
@ 5322 train 3.9232 , allloss: 3.9232, dt: 712.71ms, fracRes: 0.1859, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5918, norm(y): 0.9914, norm:0.3820, tok/sec: 183905.42, flops:193.06, batch-reuse:1
@ 5323 train 3.8755 , allloss: 3.8755, dt: 711.19ms, fracRes: 0.1865, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.5967, norm(y): 0.9921, norm:0.3604, tok/sec: 184299.68, flops:193.48, batch-reuse:1
@ 5324 train 3.8568 , allloss: 3.8568, dt: 713.74ms, fracRes: 0.1864, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5943, norm(y): 0.9919, norm:0.3665, tok/sec: 183639.91, flops:192.79, batch-reuse:1
@ 5325 train 3.8246 , allloss: 3.8246, dt: 712.13ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5952, norm(y): 0.9912, norm:0.3806, tok/sec: 184055.71, flops:193.22, batch-reuse:1
@ 5326 train 3.8352 , allloss: 3.8352, dt: 710.51ms, fracRes: 0.1872, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5887, norm(y): 0.9911, norm:0.4148, tok/sec: 184477.11, flops:193.66, batch-reuse:1
@ 5327 train 3.7439 , allloss: 3.7439, dt: 701.27ms, fracRes: 0.1888, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5979, norm(y): 0.9908, norm:0.4191, tok/sec: 186907.79, flops:196.22, batch-reuse:1
@ 5328 train 3.8058 , allloss: 3.8058, dt: 713.21ms, fracRes: 0.1866, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5929, norm(y): 0.9908, norm:0.3965, tok/sec: 183777.97, flops:192.93, batch-reuse:1
@ 5329 train 3.9456 , allloss: 3.9456, dt: 714.09ms, fracRes: 0.1855, norm(attn): 40.0000, norm(output): 0.4414, norm(x): 0.5892, norm(y): 0.9910, norm:0.4017, tok/sec: 183551.00, flops:192.69, batch-reuse:1
@ 5330 train 3.8365 , allloss: 3.8365, dt: 711.73ms, fracRes: 0.1862, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5896, norm(y): 0.9912, norm:0.3852, tok/sec: 184159.04, flops:193.33, batch-reuse:1
@ 5331 train 3.8813 , allloss: 3.8813, dt: 711.37ms, fracRes: 0.1861, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5953, norm(y): 0.9917, norm:0.3439, tok/sec: 184253.42, flops:193.43, batch-reuse:1
@ 5332 train 3.8646 , allloss: 3.8646, dt: 695.35ms, fracRes: 0.1864, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5926, norm(y): 0.9913, norm:0.3782, tok/sec: 188498.80, flops:197.89, batch-reuse:1
@ 5333 train 3.8592 , allloss: 3.8592, dt: 709.22ms, fracRes: 0.1857, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5923, norm(y): 0.9911, norm:0.3709, tok/sec: 184812.49, flops:194.02, batch-reuse:1
@ 5334 train 3.7550 , allloss: 3.7550, dt: 710.76ms, fracRes: 0.1861, norm(attn): 40.0000, norm(output): 0.4375, norm(x): 0.5863, norm(y): 0.9907, norm:0.3979, tok/sec: 184409.85, flops:193.59, batch-reuse:1
@ 5335 train 3.8209 , allloss: 3.8209, dt: 706.02ms, fracRes: 0.1865, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5885, norm(y): 0.9905, norm:0.3751, tok/sec: 185649.98, flops:194.90, batch-reuse:1
@ 5336 train 3.8679 , allloss: 3.8679, dt: 707.71ms, fracRes: 0.1867, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5967, norm(y): 0.9915, norm:0.3740, tok/sec: 185206.73, flops:194.43, batch-reuse:1
@ 5337 train 3.8325 , allloss: 3.8325, dt: 705.76ms, fracRes: 0.1868, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5907, norm(y): 0.9914, norm:0.4286, tok/sec: 185716.96, flops:194.97, batch-reuse:1
@ 5338 train 3.8152 , allloss: 3.8152, dt: 720.16ms, fracRes: 0.1876, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6038, norm(y): 0.9908, norm:0.4294, tok/sec: 182005.26, flops:191.07, batch-reuse:1
@ 5339 train 3.9891 , allloss: 3.9891, dt: 719.72ms, fracRes: 0.1903, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.6021, norm(y): 0.9923, norm:0.5774, tok/sec: 182115.42, flops:191.19, batch-reuse:1
@ 5340 train 3.8847 , allloss: 3.8847, dt: 945.07ms, fracRes: 0.1893, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5900, norm(y): 0.9915, norm:0.4876, tok/sec: 138690.85, flops:145.60, batch-reuse:1
@ 5341 train 3.9342 , allloss: 3.9342, dt: 721.64ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5888, norm(y): 0.9913, norm:0.4569, tok/sec: 181629.56, flops:190.68, batch-reuse:1
@ 5342 train 3.8331 , allloss: 3.8331, dt: 709.75ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5925, norm(y): 0.9910, norm:0.4697, tok/sec: 184672.62, flops:193.87, batch-reuse:1
@ 5343 train 3.7431 , allloss: 3.7431, dt: 699.87ms, fracRes: 0.1881, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5918, norm(y): 0.9904, norm:0.4588, tok/sec: 187280.59, flops:196.61, batch-reuse:1
@ 5344 train 3.8997 , allloss: 3.8997, dt: 707.84ms, fracRes: 0.1898, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6004, norm(y): 0.9912, norm:0.4846, tok/sec: 185172.42, flops:194.39, batch-reuse:1
@ 5345 train 3.8508 , allloss: 3.8508, dt: 698.12ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5939, norm(y): 0.9914, norm:0.4694, tok/sec: 187749.73, flops:197.10, batch-reuse:1
@ 5346 train 3.6147 , allloss: 3.6147, dt: 701.06ms, fracRes: 0.1874, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5941, norm(y): 0.9900, norm:0.4595, tok/sec: 186962.27, flops:196.27, batch-reuse:1
@ 5347 train 3.8239 , allloss: 3.8239, dt: 708.56ms, fracRes: 0.1871, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5928, norm(y): 0.9908, norm:0.4982, tok/sec: 184983.88, flops:194.20, batch-reuse:1
@ 5348 train 3.7856 , allloss: 3.7856, dt: 706.13ms, fracRes: 0.1857, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5867, norm(y): 0.9897, norm:0.4249, tok/sec: 185620.77, flops:194.87, batch-reuse:1
@ 5349 train 3.8720 , allloss: 3.8720, dt: 706.72ms, fracRes: 0.1912, norm(attn): 39.2500, norm(output): 0.4609, norm(x): 0.6134, norm(y): 0.9910, norm:0.5611, tok/sec: 185465.78, flops:194.70, batch-reuse:1
@ 5350 train 4.0035 , allloss: 4.0035, dt: 690.66ms, fracRes: 0.1870, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.6000, norm(y): 0.9921, norm:0.4860, tok/sec: 189778.42, flops:199.23, batch-reuse:1
@ 5351 train 3.7420 , allloss: 3.7420, dt: 699.23ms, fracRes: 0.1876, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5974, norm(y): 0.9912, norm:0.4705, tok/sec: 187452.56, flops:196.79, batch-reuse:1
@ 5352 train 3.7565 , allloss: 3.7565, dt: 703.23ms, fracRes: 0.1875, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5940, norm(y): 0.9910, norm:0.4659, tok/sec: 186385.64, flops:195.67, batch-reuse:1
@ 5353 train 3.7504 , allloss: 3.7504, dt: 713.08ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5927, norm(y): 0.9908, norm:0.4432, tok/sec: 183810.60, flops:192.96, batch-reuse:1
@ 5354 train 3.8023 , allloss: 3.8023, dt: 709.26ms, fracRes: 0.1863, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5890, norm(y): 0.9902, norm:0.5369, tok/sec: 184800.57, flops:194.00, batch-reuse:1
@ 5355 train 3.7205 , allloss: 3.7205, dt: 698.50ms, fracRes: 0.1857, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5881, norm(y): 0.9895, norm:0.4313, tok/sec: 187647.65, flops:196.99, batch-reuse:1
@ 5356 train 3.7522 , allloss: 3.7522, dt: 710.09ms, fracRes: 0.1857, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5898, norm(y): 0.9895, norm:0.4434, tok/sec: 184585.20, flops:193.78, batch-reuse:1
@ 5357 train 3.7475 , allloss: 3.7475, dt: 697.00ms, fracRes: 0.1855, norm(attn): 39.7500, norm(output): 0.4336, norm(x): 0.5834, norm(y): 0.9897, norm:0.3743, tok/sec: 188052.16, flops:197.42, batch-reuse:1
@ 5358 train 3.9172 , allloss: 3.9172, dt: 710.59ms, fracRes: 0.1881, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5951, norm(y): 0.9910, norm:0.4485, tok/sec: 184454.21, flops:193.64, batch-reuse:1
@ 5359 train 3.9064 , allloss: 3.9064, dt: 699.99ms, fracRes: 0.1898, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5974, norm(y): 0.9916, norm:0.4177, tok/sec: 187249.66, flops:196.58, batch-reuse:1
@ 5360 train 3.7813 , allloss: 3.7813, dt: 693.69ms, fracRes: 0.1871, norm(attn): 39.5000, norm(output): 0.4336, norm(x): 0.5845, norm(y): 0.9901, norm:0.4279, tok/sec: 188947.70, flops:198.36, batch-reuse:1
@ 5361 train 3.8436 , allloss: 3.8436, dt: 707.51ms, fracRes: 0.1864, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5859, norm(y): 0.9894, norm:0.4232, tok/sec: 185257.85, flops:194.48, batch-reuse:1
@ 5362 train 3.8880 , allloss: 3.8880, dt: 700.08ms, fracRes: 0.1863, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5922, norm(y): 0.9902, norm:0.4211, tok/sec: 187224.21, flops:196.55, batch-reuse:1
@ 5363 train 3.7766 , allloss: 3.7766, dt: 707.39ms, fracRes: 0.1870, norm(attn): 39.5000, norm(output): 0.4336, norm(x): 0.5860, norm(y): 0.9906, norm:0.4245, tok/sec: 185289.26, flops:194.52, batch-reuse:1
@ 5364 train 3.9211 , allloss: 3.9211, dt: 704.86ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4395, norm(x): 0.5933, norm(y): 0.9914, norm:0.4782, tok/sec: 185954.85, flops:195.22, batch-reuse:1
@ 5365 train 3.6434 , allloss: 3.6434, dt: 705.30ms, fracRes: 0.1861, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5900, norm(y): 0.9890, norm:0.4197, tok/sec: 185838.50, flops:195.09, batch-reuse:1
@ 5366 train 3.8078 , allloss: 3.8078, dt: 705.66ms, fracRes: 0.1864, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5909, norm(y): 0.9886, norm:0.4432, tok/sec: 185743.75, flops:194.99, batch-reuse:1
@ 5367 train 3.7792 , allloss: 3.7792, dt: 698.77ms, fracRes: 0.1862, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5914, norm(y): 0.9890, norm:0.4249, tok/sec: 187575.30, flops:196.92, batch-reuse:1
@ 5368 train 3.7069 , allloss: 3.7069, dt: 705.72ms, fracRes: 0.1871, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5920, norm(y): 0.9894, norm:0.4376, tok/sec: 185729.13, flops:194.98, batch-reuse:1
@ 5369 train 3.8060 , allloss: 3.8060, dt: 701.21ms, fracRes: 0.1852, norm(attn): 39.5000, norm(output): 0.4316, norm(x): 0.5805, norm(y): 0.9900, norm:0.3760, tok/sec: 186922.98, flops:196.23, batch-reuse:1
@ 5370 train 3.6997 , allloss: 3.6997, dt: 698.60ms, fracRes: 0.1861, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5874, norm(y): 0.9896, norm:0.3742, tok/sec: 187620.81, flops:196.96, batch-reuse:1
@ 5371 train 3.8246 , allloss: 3.8246, dt: 700.35ms, fracRes: 0.1859, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5854, norm(y): 0.9898, norm:0.3974, tok/sec: 187150.92, flops:196.47, batch-reuse:1
@ 5372 train 3.7882 , allloss: 3.7882, dt: 706.09ms, fracRes: 0.1857, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5862, norm(y): 0.9896, norm:0.3742, tok/sec: 185631.55, flops:194.88, batch-reuse:1
@ 5373 train 3.9272 , allloss: 3.9272, dt: 706.70ms, fracRes: 0.1869, norm(attn): 39.5000, norm(output): 0.4336, norm(x): 0.5862, norm(y): 0.9895, norm:0.4243, tok/sec: 185469.91, flops:194.71, batch-reuse:1
@ 5374 train 3.7077 , allloss: 3.7077, dt: 708.33ms, fracRes: 0.1863, norm(attn): 39.7500, norm(output): 0.4336, norm(x): 0.5809, norm(y): 0.9891, norm:0.4604, tok/sec: 185043.65, flops:194.26, batch-reuse:1
@ 5375 train 3.7558 , allloss: 3.7558, dt: 709.05ms, fracRes: 0.1863, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5832, norm(y): 0.9885, norm:0.3937, tok/sec: 184855.37, flops:194.06, batch-reuse:1
@ 5376 train 3.7239 , allloss: 3.7239, dt: 708.33ms, fracRes: 0.1870, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5923, norm(y): 0.9886, norm:0.4422, tok/sec: 185044.09, flops:194.26, batch-reuse:1
@ 5377 train 3.8564 , allloss: 3.8564, dt: 705.62ms, fracRes: 0.1867, norm(attn): 39.0000, norm(output): 0.4336, norm(x): 0.5832, norm(y): 0.9884, norm:0.3887, tok/sec: 185755.43, flops:195.01, batch-reuse:1
@ 5378 train 3.7796 , allloss: 3.7796, dt: 698.31ms, fracRes: 0.1862, norm(attn): 39.5000, norm(output): 0.4316, norm(x): 0.5799, norm(y): 0.9882, norm:0.4223, tok/sec: 187697.81, flops:197.05, batch-reuse:1
@ 5379 train 3.7415 , allloss: 3.7415, dt: 697.89ms, fracRes: 0.1859, norm(attn): 39.2500, norm(output): 0.4297, norm(x): 0.5790, norm(y): 0.9882, norm:0.4022, tok/sec: 187811.69, flops:197.17, batch-reuse:1
@ 5380 train 3.7173 , allloss: 3.7173, dt: 696.96ms, fracRes: 0.1841, norm(attn): 39.5000, norm(output): 0.4297, norm(x): 0.5775, norm(y): 0.9878, norm:0.4126, tok/sec: 188062.71, flops:197.43, batch-reuse:1
@ 5381 train 3.7388 , allloss: 3.7388, dt: 705.06ms, fracRes: 0.1834, norm(attn): 39.0000, norm(output): 0.4336, norm(x): 0.5825, norm(y): 0.9882, norm:0.3668, tok/sec: 185900.78, flops:195.16, batch-reuse:1
@ 5382 train 3.6750 , allloss: 3.6750, dt: 711.99ms, fracRes: 0.1840, norm(attn): 39.0000, norm(output): 0.4316, norm(x): 0.5810, norm(y): 0.9883, norm:0.4019, tok/sec: 184091.76, flops:193.26, batch-reuse:1
@ 5383 train 3.8665 , allloss: 3.8665, dt: 704.83ms, fracRes: 0.1855, norm(attn): 39.0000, norm(output): 0.4375, norm(x): 0.5863, norm(y): 0.9889, norm:0.4291, tok/sec: 185962.21, flops:195.22, batch-reuse:1
@ 5384 train 3.7428 , allloss: 3.7428, dt: 706.39ms, fracRes: 0.1848, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5861, norm(y): 0.9897, norm:0.4378, tok/sec: 185552.67, flops:194.79, batch-reuse:1
@ 5385 train 3.7758 , allloss: 3.7758, dt: 707.48ms, fracRes: 0.1863, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5857, norm(y): 0.9887, norm:0.4579, tok/sec: 185266.28, flops:194.49, batch-reuse:1
@ 5386 train 3.7705 , allloss: 3.7705, dt: 718.95ms, fracRes: 0.1857, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5846, norm(y): 0.9885, norm:0.3872, tok/sec: 182310.24, flops:191.39, batch-reuse:1
@ 5387 train 3.7634 , allloss: 3.7634, dt: 713.11ms, fracRes: 0.1869, norm(attn): 39.0000, norm(output): 0.4375, norm(x): 0.5906, norm(y): 0.9891, norm:0.4093, tok/sec: 183803.72, flops:192.96, batch-reuse:1
@ 5388 train 3.7833 , allloss: 3.7833, dt: 712.76ms, fracRes: 0.1886, norm(attn): 38.7500, norm(output): 0.4395, norm(x): 0.5940, norm(y): 0.9885, norm:0.3597, tok/sec: 183894.65, flops:193.05, batch-reuse:1
@ 5389 train 4.1342 , allloss: 4.1342, dt: 714.16ms, fracRes: 0.1888, norm(attn): 38.7500, norm(output): 0.4453, norm(x): 0.5992, norm(y): 0.9897, norm:0.4741, tok/sec: 183531.82, flops:192.67, batch-reuse:1
@ 5390 train 3.9505 , allloss: 3.9505, dt: 711.87ms, fracRes: 0.1898, norm(attn): 39.2500, norm(output): 0.4395, norm(x): 0.5926, norm(y): 0.9889, norm:0.4095, tok/sec: 184124.26, flops:193.29, batch-reuse:1
@ 5391 train 3.8257 , allloss: 3.8257, dt: 712.03ms, fracRes: 0.1895, norm(attn): 39.0000, norm(output): 0.4395, norm(x): 0.5938, norm(y): 0.9888, norm:0.4554, tok/sec: 184082.40, flops:193.25, batch-reuse:1
@ 5392 train 3.8902 , allloss: 3.8902, dt: 704.96ms, fracRes: 0.1880, norm(attn): 39.0000, norm(output): 0.4395, norm(x): 0.5899, norm(y): 0.9888, norm:0.4513, tok/sec: 185929.19, flops:195.19, batch-reuse:1
@ 5393 train 3.9003 , allloss: 3.9003, dt: 704.27ms, fracRes: 0.1865, norm(attn): 39.5000, norm(output): 0.4336, norm(x): 0.5846, norm(y): 0.9883, norm:0.4356, tok/sec: 186110.79, flops:195.38, batch-reuse:1
@ 5394 train 3.8421 , allloss: 3.8421, dt: 706.73ms, fracRes: 0.1882, norm(attn): 39.0000, norm(output): 0.4414, norm(x): 0.5946, norm(y): 0.9889, norm:0.4815, tok/sec: 185462.65, flops:194.70, batch-reuse:1
@ 5395 train 4.0914 , allloss: 4.0914, dt: 706.86ms, fracRes: 0.1895, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5926, norm(y): 0.9895, norm:0.4676, tok/sec: 185429.69, flops:194.66, batch-reuse:1
@ 5396 train 3.9408 , allloss: 3.9408, dt: 688.54ms, fracRes: 0.1900, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5939, norm(y): 0.9886, norm:0.4473, tok/sec: 190361.30, flops:199.84, batch-reuse:1
@ 5397 train 3.9676 , allloss: 3.9676, dt: 701.07ms, fracRes: 0.1884, norm(attn): 39.0000, norm(output): 0.4355, norm(x): 0.5878, norm(y): 0.9881, norm:0.4979, tok/sec: 186960.30, flops:196.27, batch-reuse:1
@ 5398 train 3.9731 , allloss: 3.9731, dt: 708.55ms, fracRes: 0.1885, norm(attn): 39.2500, norm(output): 0.4375, norm(x): 0.5878, norm(y): 0.9878, norm:0.4107, tok/sec: 184986.37, flops:194.20, batch-reuse:1
@ 5399 train 3.9638 , allloss: 3.9638, dt: 706.07ms, fracRes: 0.1890, norm(attn): 38.7500, norm(output): 0.4453, norm(x): 0.5982, norm(y): 0.9883, norm:0.4678, tok/sec: 185636.69, flops:194.88, batch-reuse:1
@ 5400 train 3.9470 , allloss: 3.9470, dt: 705.12ms, fracRes: 0.1867, norm(attn): 39.0000, norm(output): 0.4375, norm(x): 0.5848, norm(y): 0.9882, norm:0.4078, tok/sec: 185886.76, flops:195.14, batch-reuse:1
@ 5401 train 3.8917 , allloss: 3.8917, dt: 705.54ms, fracRes: 0.1859, norm(attn): 39.0000, norm(output): 0.4336, norm(x): 0.5840, norm(y): 0.9876, norm:0.4772, tok/sec: 185774.45, flops:195.03, batch-reuse:1
@ 5402 train 3.9842 , allloss: 3.9842, dt: 704.27ms, fracRes: 0.1856, norm(attn): 39.2500, norm(output): 0.4375, norm(x): 0.5869, norm(y): 0.9868, norm:0.3718, tok/sec: 186110.16, flops:195.38, batch-reuse:1
@ 5403 train 3.9642 , allloss: 3.9642, dt: 708.07ms, fracRes: 0.1859, norm(attn): 39.0000, norm(output): 0.4395, norm(x): 0.5867, norm(y): 0.9857, norm:0.4201, tok/sec: 185110.76, flops:194.33, batch-reuse:1
@ 5404 train 3.9020 , allloss: 3.9020, dt: 709.67ms, fracRes: 0.1857, norm(attn): 38.7500, norm(output): 0.6445, norm(x): 0.7918, norm(y): 0.9836, norm:0.4980, tok/sec: 184693.59, flops:193.89, batch-reuse:1
@ 5405 train 3.8941 , allloss: 3.8941, dt: 699.51ms, fracRes: 0.1867, norm(attn): 39.0000, norm(output): 0.4395, norm(x): 0.5862, norm(y): 0.9824, norm:0.4021, tok/sec: 187378.13, flops:196.71, batch-reuse:1
@ 5406 train 4.8898 , allloss: 4.8898, dt: 710.66ms, fracRes: 0.1820, norm(attn): 38.5000, norm(output): 7.1562, norm(x): 7.3288, norm(y): 0.9682, norm:9.3122, tok/sec: 184435.96, flops:193.62, batch-reuse:1
@ 5407 train 3.9722 , allloss: 3.9722, dt: 710.02ms, fracRes: 0.1920, norm(attn): 38.7500, norm(output): 0.4453, norm(x): 0.6003, norm(y): 0.9880, norm:0.5574, tok/sec: 184603.73, flops:193.80, batch-reuse:1
@ 5408 train 3.9206 , allloss: 3.9206, dt: 710.56ms, fracRes: 0.1919, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5980, norm(y): 0.9892, norm:0.4627, tok/sec: 184463.99, flops:193.65, batch-reuse:1
@ 5409 train 3.9446 , allloss: 3.9446, dt: 704.03ms, fracRes: 0.1915, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.5999, norm(y): 0.9902, norm:0.4261, tok/sec: 186173.56, flops:195.45, batch-reuse:1
@ 5410 train 3.9575 , allloss: 3.9575, dt: 711.90ms, fracRes: 0.1892, norm(attn): 38.7500, norm(output): 0.6758, norm(x): 0.8295, norm(y): 0.9895, norm:1.3256, tok/sec: 184115.19, flops:193.28, batch-reuse:1
@ 5411 train 4.0836 , allloss: 4.0836, dt: 701.43ms, fracRes: 0.1905, norm(attn): 39.0000, norm(output): 0.5859, norm(x): 0.7380, norm(y): 0.9916, norm:1.2044, tok/sec: 186864.40, flops:196.17, batch-reuse:1
@ 5412 train 3.9270 , allloss: 3.9270, dt: 719.37ms, fracRes: 0.1881, norm(attn): 39.2500, norm(output): 0.6602, norm(x): 0.8114, norm(y): 0.9900, norm:0.4936, tok/sec: 182204.93, flops:191.28, batch-reuse:1
@ 5413 train 3.9513 , allloss: 3.9513, dt: 706.40ms, fracRes: 0.1877, norm(attn): 39.2500, norm(output): 0.7500, norm(x): 0.8998, norm(y): 0.9897, norm:1.4731, tok/sec: 185548.72, flops:194.79, batch-reuse:1
@ 5414 train 3.8615 , allloss: 3.8615, dt: 705.11ms, fracRes: 0.1892, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5942, norm(y): 0.9918, norm:0.5673, tok/sec: 185888.33, flops:195.15, batch-reuse:1
@ 5415 train 3.8864 , allloss: 3.8864, dt: 697.16ms, fracRes: 0.1876, norm(attn): 40.0000, norm(output): 0.4512, norm(x): 0.6000, norm(y): 0.9922, norm:0.4671, tok/sec: 188008.55, flops:197.37, batch-reuse:1
@ 5416 train 3.9620 , allloss: 3.9620, dt: 707.16ms, fracRes: 0.1868, norm(attn): 40.0000, norm(output): 0.4473, norm(x): 0.5947, norm(y): 0.9919, norm:0.4808, tok/sec: 185348.66, flops:194.58, batch-reuse:1
@ 5417 train 3.9811 , allloss: 3.9811, dt: 709.82ms, fracRes: 0.1854, norm(attn): 40.2500, norm(output): 0.4414, norm(x): 0.5901, norm(y): 0.9925, norm:0.4107, tok/sec: 184654.45, flops:193.85, batch-reuse:1
@ 5418 train 3.9380 , allloss: 3.9380, dt: 711.82ms, fracRes: 0.1850, norm(attn): 40.2500, norm(output): 0.4395, norm(x): 0.5852, norm(y): 0.9928, norm:0.4876, tok/sec: 184135.97, flops:193.31, batch-reuse:1
@ 5419 train 4.0176 , allloss: 4.0176, dt: 711.56ms, fracRes: 0.1849, norm(attn): 40.0000, norm(output): 0.8828, norm(x): 1.0304, norm(y): 0.9922, norm:0.7571, tok/sec: 184204.21, flops:193.38, batch-reuse:1
@ 5420 train 4.0006 , allloss: 4.0006, dt: 711.69ms, fracRes: 0.1820, norm(attn): 39.7500, norm(output): 1.0859, norm(x): 1.2296, norm(y): 0.9903, norm:0.4761, tok/sec: 184169.78, flops:193.34, batch-reuse:1
@ 5421 train 4.0454 , allloss: 4.0454, dt: 703.74ms, fracRes: 0.1829, norm(attn): 40.0000, norm(output): 0.9688, norm(x): 1.1149, norm(y): 0.9902, norm:0.8765, tok/sec: 186251.52, flops:195.53, batch-reuse:1
@ 5422 train 4.0270 , allloss: 4.0270, dt: 700.53ms, fracRes: 0.1840, norm(attn): 40.0000, norm(output): 1.2969, norm(x): 1.4316, norm(y): 0.9921, norm:0.5095, tok/sec: 187103.21, flops:196.42, batch-reuse:1
@ 5423 train 4.1347 , allloss: 4.1347, dt: 703.84ms, fracRes: 0.1897, norm(attn): 40.0000, norm(output): 0.4512, norm(x): 0.6026, norm(y): 0.9938, norm:0.5469, tok/sec: 186223.63, flops:195.50, batch-reuse:1
@ 5424 train 4.0453 , allloss: 4.0453, dt: 713.77ms, fracRes: 0.1866, norm(attn): 40.0000, norm(output): 0.8867, norm(x): 1.0341, norm(y): 0.9921, norm:0.8197, tok/sec: 183632.30, flops:192.78, batch-reuse:1
@ 5425 train 3.9769 , allloss: 3.9769, dt: 709.20ms, fracRes: 0.1833, norm(attn): 40.0000, norm(output): 1.0781, norm(x): 1.2218, norm(y): 0.9908, norm:0.6936, tok/sec: 184816.10, flops:194.02, batch-reuse:1
@ 5426 train 4.4726 , allloss: 4.4726, dt: 701.54ms, fracRes: 0.1789, norm(attn): 40.0000, norm(output): 5.6875, norm(x): 5.8349, norm(y): 0.9885, norm:61.1965, tok/sec: 186834.55, flops:196.14, batch-reuse:1
@ 5427 train 4.4103 , allloss: 4.4103, dt: 708.85ms, fracRes: 0.1805, norm(attn): 40.0000, norm(output): 5.2188, norm(x): 5.3717, norm(y): 0.9895, norm:6.1120, tok/sec: 184908.22, flops:194.12, batch-reuse:1
@ 5428 train 4.2836 , allloss: 4.2836, dt: 703.11ms, fracRes: 0.1815, norm(attn): 40.0000, norm(output): 4.5000, norm(x): 4.6699, norm(y): 0.9900, norm:13.4641, tok/sec: 186417.37, flops:195.70, batch-reuse:1
@ 5429 train 4.2800 , allloss: 4.2800, dt: 707.60ms, fracRes: 0.1877, norm(attn): 40.0000, norm(output): 2.6562, norm(x): 2.7971, norm(y): 0.9928, norm:115.2785, tok/sec: 185234.19, flops:194.46, batch-reuse:1
@ 5430 train 4.1903 , allloss: 4.1903, dt: 717.99ms, fracRes: 0.1872, norm(attn): 40.2500, norm(output): 0.4746, norm(x): 0.6207, norm(y): 0.9936, norm:1.5050, tok/sec: 182554.40, flops:191.65, batch-reuse:1
@ 5431 train 4.0738 , allloss: 4.0738, dt: 694.31ms, fracRes: 0.1823, norm(attn): 40.5000, norm(output): 0.7188, norm(x): 0.8630, norm(y): 0.9928, norm:0.7055, tok/sec: 188778.88, flops:198.18, batch-reuse:1
@ 5432 train 4.0619 , allloss: 4.0619, dt: 704.20ms, fracRes: 0.1796, norm(attn): 40.2500, norm(output): 0.4668, norm(x): 0.6067, norm(y): 0.9926, norm:0.8086, tok/sec: 186127.99, flops:195.40, batch-reuse:1
@ 5433 train 4.1220 , allloss: 4.1220, dt: 704.23ms, fracRes: 0.1764, norm(attn): 40.7500, norm(output): 1.7500, norm(x): 1.8933, norm(y): 0.9919, norm:23.8261, tok/sec: 186122.06, flops:195.39, batch-reuse:1
@ 5434 train 4.1249 , allloss: 4.1249, dt: 703.95ms, fracRes: 0.1807, norm(attn): 41.2500, norm(output): 0.6953, norm(x): 0.8405, norm(y): 0.9926, norm:1.0169, tok/sec: 186196.26, flops:195.47, batch-reuse:1
@ 5435 train 4.0881 , allloss: 4.0881, dt: 689.19ms, fracRes: 0.1792, norm(attn): 41.0000, norm(output): 0.5859, norm(x): 0.7268, norm(y): 0.9928, norm:0.6732, tok/sec: 190183.89, flops:199.66, batch-reuse:1
@ 5436 train 3.9987 , allloss: 3.9987, dt: 709.08ms, fracRes: 0.1803, norm(attn): 41.2500, norm(output): 0.4570, norm(x): 0.5974, norm(y): 0.9928, norm:0.6904, tok/sec: 184848.60, flops:194.05, batch-reuse:1
@ 5437 train 3.9501 , allloss: 3.9501, dt: 708.83ms, fracRes: 0.1799, norm(attn): 41.2500, norm(output): 0.4570, norm(x): 0.5977, norm(y): 0.9929, norm:0.6052, tok/sec: 184912.70, flops:194.12, batch-reuse:1
@ 5438 train 3.9442 , allloss: 3.9442, dt: 701.52ms, fracRes: 0.1800, norm(attn): 41.0000, norm(output): 0.4629, norm(x): 0.5998, norm(y): 0.9928, norm:0.5729, tok/sec: 186839.12, flops:196.14, batch-reuse:1
@ 5439 train 3.9828 , allloss: 3.9828, dt: 710.01ms, fracRes: 0.1797, norm(attn): 41.0000, norm(output): 0.4648, norm(x): 0.6021, norm(y): 0.9916, norm:0.5512, tok/sec: 184606.40, flops:193.80, batch-reuse:1
@ 5440 train 4.0026 , allloss: 4.0026, dt: 704.27ms, fracRes: 0.1807, norm(attn): 40.5000, norm(output): 0.4648, norm(x): 0.5990, norm(y): 0.9914, norm:0.5244, tok/sec: 186111.35, flops:195.38, batch-reuse:1
@ 5441 train 3.9793 , allloss: 3.9793, dt: 706.12ms, fracRes: 0.1816, norm(attn): 40.5000, norm(output): 0.4629, norm(x): 0.6015, norm(y): 0.9921, norm:0.4738, tok/sec: 185621.71, flops:194.87, batch-reuse:1
@ 5442 train 4.1515 , allloss: 4.1515, dt: 691.74ms, fracRes: 0.1819, norm(attn): 40.5000, norm(output): 0.4492, norm(x): 0.5943, norm(y): 0.9927, norm:0.5555, tok/sec: 189481.26, flops:198.92, batch-reuse:1
@ 5443 train 3.9673 , allloss: 3.9673, dt: 707.14ms, fracRes: 0.1830, norm(attn): 40.7500, norm(output): 0.4629, norm(x): 0.6039, norm(y): 0.9930, norm:0.5006, tok/sec: 185354.73, flops:194.59, batch-reuse:1
@ 5444 train 4.1041 , allloss: 4.1041, dt: 706.44ms, fracRes: 0.1835, norm(attn): 40.5000, norm(output): 0.4727, norm(x): 0.6171, norm(y): 0.9934, norm:0.5242, tok/sec: 185539.58, flops:194.78, batch-reuse:1
@ 5445 train 3.9392 , allloss: 3.9392, dt: 703.55ms, fracRes: 0.1823, norm(attn): 40.5000, norm(output): 0.4629, norm(x): 0.6047, norm(y): 0.9927, norm:0.4418, tok/sec: 186301.57, flops:195.58, batch-reuse:1
@ 5446 train 4.0360 , allloss: 4.0360, dt: 702.07ms, fracRes: 0.1831, norm(attn): 41.0000, norm(output): 0.4609, norm(x): 0.6045, norm(y): 0.9934, norm:0.4224, tok/sec: 186693.38, flops:195.99, batch-reuse:1
@ 5447 train 4.0427 , allloss: 4.0427, dt: 710.36ms, fracRes: 0.1870, norm(attn): 40.5000, norm(output): 0.4805, norm(x): 0.6280, norm(y): 0.9932, norm:0.6844, tok/sec: 184514.32, flops:193.70, batch-reuse:1
@ 5448 train 4.0396 , allloss: 4.0396, dt: 704.96ms, fracRes: 0.1836, norm(attn): 41.2500, norm(output): 0.4512, norm(x): 0.5963, norm(y): 0.9932, norm:0.4622, tok/sec: 185929.26, flops:195.19, batch-reuse:1
@ 5449 train 3.9245 , allloss: 3.9245, dt: 706.30ms, fracRes: 0.1848, norm(attn): 41.0000, norm(output): 0.4492, norm(x): 0.5966, norm(y): 0.9931, norm:0.4782, tok/sec: 185575.40, flops:194.82, batch-reuse:1
@ 5450 train 3.9165 , allloss: 3.9165, dt: 706.88ms, fracRes: 0.1851, norm(attn): 41.2500, norm(output): 0.4473, norm(x): 0.5970, norm(y): 0.9931, norm:0.4099, tok/sec: 185423.68, flops:194.66, batch-reuse:1
@ 5451 train 3.9113 , allloss: 3.9113, dt: 702.63ms, fracRes: 0.1849, norm(attn): 41.2500, norm(output): 0.4609, norm(x): 0.6071, norm(y): 0.9932, norm:0.4467, tok/sec: 186545.46, flops:195.84, batch-reuse:1
@ 5452 train 3.9070 , allloss: 3.9070, dt: 707.23ms, fracRes: 0.1845, norm(attn): 41.5000, norm(output): 0.4609, norm(x): 0.6080, norm(y): 0.9931, norm:0.4267, tok/sec: 185331.11, flops:194.56, batch-reuse:1
@ 5453 train 4.0427 , allloss: 4.0427, dt: 708.74ms, fracRes: 0.1843, norm(attn): 41.2500, norm(output): 0.4609, norm(x): 0.6081, norm(y): 0.9936, norm:0.4099, tok/sec: 184936.46, flops:194.15, batch-reuse:1
@ 5454 train 3.9791 , allloss: 3.9791, dt: 707.75ms, fracRes: 0.1831, norm(attn): 41.5000, norm(output): 0.4590, norm(x): 0.6043, norm(y): 0.9937, norm:0.4101, tok/sec: 185195.44, flops:194.42, batch-reuse:1
@ 5455 train 4.1202 , allloss: 4.1202, dt: 706.84ms, fracRes: 0.1849, norm(attn): 41.0000, norm(output): 0.4512, norm(x): 0.6035, norm(y): 0.9946, norm:0.4151, tok/sec: 185435.06, flops:194.67, batch-reuse:1
@ 5456 train 3.9660 , allloss: 3.9660, dt: 701.53ms, fracRes: 0.1845, norm(attn): 40.5000, norm(output): 0.4512, norm(x): 0.6000, norm(y): 0.9930, norm:0.4009, tok/sec: 186837.66, flops:196.14, batch-reuse:1
@ 5457 train 3.9183 , allloss: 3.9183, dt: 709.49ms, fracRes: 0.1843, norm(attn): 40.7500, norm(output): 0.4492, norm(x): 0.5992, norm(y): 0.9927, norm:0.3722, tok/sec: 184742.19, flops:193.94, batch-reuse:1
@ 5458 train 3.9097 , allloss: 3.9097, dt: 709.12ms, fracRes: 0.1854, norm(attn): 40.7500, norm(output): 0.4590, norm(x): 0.6047, norm(y): 0.9931, norm:0.3849, tok/sec: 184836.60, flops:194.04, batch-reuse:1
@ 5459 train 3.9455 , allloss: 3.9455, dt: 694.99ms, fracRes: 0.1864, norm(attn): 41.0000, norm(output): 0.4629, norm(x): 0.6111, norm(y): 0.9933, norm:0.3670, tok/sec: 188595.15, flops:197.99, batch-reuse:1
@ 5460 train 3.9303 , allloss: 3.9303, dt: 692.41ms, fracRes: 0.1874, norm(attn): 40.5000, norm(output): 0.4609, norm(x): 0.6103, norm(y): 0.9937, norm:0.3898, tok/sec: 189297.92, flops:198.73, batch-reuse:1
@ 5461 train 4.0825 , allloss: 4.0825, dt: 713.04ms, fracRes: 0.1876, norm(attn): 40.7500, norm(output): 0.4590, norm(x): 0.6116, norm(y): 0.9934, norm:0.4069, tok/sec: 183822.58, flops:192.98, batch-reuse:1
@ 5462 train 3.9552 , allloss: 3.9552, dt: 712.79ms, fracRes: 0.1874, norm(attn): 40.5000, norm(output): 0.4570, norm(x): 0.6025, norm(y): 0.9930, norm:0.3636, tok/sec: 183886.90, flops:193.04, batch-reuse:1
@ 5463 train 4.0034 , allloss: 4.0034, dt: 701.13ms, fracRes: 0.1869, norm(attn): 41.0000, norm(output): 0.4551, norm(x): 0.6047, norm(y): 0.9938, norm:0.4524, tok/sec: 186944.66, flops:196.25, batch-reuse:1
@ 5464 train 3.9359 , allloss: 3.9359, dt: 712.96ms, fracRes: 0.1877, norm(attn): 40.7500, norm(output): 0.4590, norm(x): 0.6075, norm(y): 0.9930, norm:0.3482, tok/sec: 183841.21, flops:193.00, batch-reuse:1
@ 5465 train 3.9158 , allloss: 3.9158, dt: 704.34ms, fracRes: 0.1889, norm(attn): 40.7500, norm(output): 0.4648, norm(x): 0.6113, norm(y): 0.9931, norm:0.3959, tok/sec: 186092.58, flops:195.36, batch-reuse:1
@ 5466 train 3.9125 , allloss: 3.9125, dt: 712.62ms, fracRes: 0.1893, norm(attn): 40.7500, norm(output): 0.4629, norm(x): 0.6116, norm(y): 0.9927, norm:0.3503, tok/sec: 183930.33, flops:193.09, batch-reuse:1
@ 5467 train 3.9318 , allloss: 3.9318, dt: 707.81ms, fracRes: 0.1881, norm(attn): 40.5000, norm(output): 0.4512, norm(x): 0.6028, norm(y): 0.9920, norm:0.3996, tok/sec: 185178.35, flops:194.40, batch-reuse:1
@ 5468 train 3.9174 , allloss: 3.9174, dt: 718.56ms, fracRes: 0.1878, norm(attn): 40.2500, norm(output): 0.4570, norm(x): 0.6079, norm(y): 0.9925, norm:0.3912, tok/sec: 182409.81, flops:191.49, batch-reuse:1
@ 5469 train 3.9300 , allloss: 3.9300, dt: 717.90ms, fracRes: 0.1883, norm(attn): 40.2500, norm(output): 0.4707, norm(x): 0.6174, norm(y): 0.9926, norm:0.4062, tok/sec: 182577.13, flops:191.67, batch-reuse:1
@ 5470 train 3.9390 , allloss: 3.9390, dt: 719.79ms, fracRes: 0.1875, norm(attn): 40.2500, norm(output): 0.4688, norm(x): 0.6165, norm(y): 0.9926, norm:0.4310, tok/sec: 182098.22, flops:191.17, batch-reuse:1
@ 5471 train 3.8846 , allloss: 3.8846, dt: 700.99ms, fracRes: 0.1880, norm(attn): 40.5000, norm(output): 0.4570, norm(x): 0.6072, norm(y): 0.9918, norm:0.3507, tok/sec: 186980.07, flops:196.29, batch-reuse:1
@ 5472 train 3.9846 , allloss: 3.9846, dt: 704.81ms, fracRes: 0.1895, norm(attn): 40.2500, norm(output): 0.4570, norm(x): 0.6095, norm(y): 0.9924, norm:0.4228, tok/sec: 185966.55, flops:195.23, batch-reuse:1
@ 5473 train 3.9402 , allloss: 3.9402, dt: 718.29ms, fracRes: 0.1901, norm(attn): 40.2500, norm(output): 0.4531, norm(x): 0.6087, norm(y): 0.9924, norm:0.4163, tok/sec: 182478.29, flops:191.57, batch-reuse:1
@ 5474 train 3.9380 , allloss: 3.9380, dt: 713.01ms, fracRes: 0.1886, norm(attn): 40.2500, norm(output): 0.4492, norm(x): 0.6020, norm(y): 0.9918, norm:0.4083, tok/sec: 183830.15, flops:192.99, batch-reuse:1
@ 5475 train 3.8561 , allloss: 3.8561, dt: 703.43ms, fracRes: 0.1887, norm(attn): 40.5000, norm(output): 0.4609, norm(x): 0.6117, norm(y): 0.9922, norm:0.4007, tok/sec: 186332.51, flops:195.61, batch-reuse:1
@ 5476 train 3.9379 , allloss: 3.9379, dt: 700.90ms, fracRes: 0.1871, norm(attn): 40.2500, norm(output): 0.4629, norm(x): 0.6101, norm(y): 0.9920, norm:0.4281, tok/sec: 187005.45, flops:196.32, batch-reuse:1
@ 5477 train 3.9043 , allloss: 3.9043, dt: 694.01ms, fracRes: 0.1875, norm(attn): 40.2500, norm(output): 0.4609, norm(x): 0.6095, norm(y): 0.9919, norm:0.3752, tok/sec: 188862.93, flops:198.27, batch-reuse:1
@ 5478 train 3.8500 , allloss: 3.8500, dt: 701.68ms, fracRes: 0.1864, norm(attn): 40.2500, norm(output): 0.4609, norm(x): 0.6085, norm(y): 0.9919, norm:0.4174, tok/sec: 186797.92, flops:196.10, batch-reuse:1
@ 5479 train 3.9211 , allloss: 3.9211, dt: 691.63ms, fracRes: 0.1849, norm(attn): 40.0000, norm(output): 0.4707, norm(x): 0.6154, norm(y): 0.9931, norm:0.4992, tok/sec: 189511.44, flops:198.95, batch-reuse:1
@ 5480 train 3.8431 , allloss: 3.8431, dt: 705.13ms, fracRes: 0.1856, norm(attn): 40.2500, norm(output): 0.4531, norm(x): 0.6005, norm(y): 0.9912, norm:0.5204, tok/sec: 185884.06, flops:195.14, batch-reuse:1
@ 5481 train 3.9171 , allloss: 3.9171, dt: 711.53ms, fracRes: 0.1852, norm(attn): 40.2500, norm(output): 0.4492, norm(x): 0.6004, norm(y): 0.9919, norm:0.4072, tok/sec: 184211.06, flops:193.39, batch-reuse:1
@ 5482 train 3.8564 , allloss: 3.8564, dt: 698.91ms, fracRes: 0.1864, norm(attn): 40.2500, norm(output): 0.4570, norm(x): 0.6079, norm(y): 0.9919, norm:0.4643, tok/sec: 187537.35, flops:196.88, batch-reuse:1
@ 5483 train 3.8431 , allloss: 3.8431, dt: 697.98ms, fracRes: 0.1864, norm(attn): 40.2500, norm(output): 0.4570, norm(x): 0.6050, norm(y): 0.9915, norm:0.4036, tok/sec: 187787.70, flops:197.14, batch-reuse:1
@ 5484 train 3.8933 , allloss: 3.8933, dt: 711.85ms, fracRes: 0.1866, norm(attn): 40.2500, norm(output): 0.4453, norm(x): 0.6000, norm(y): 0.9913, norm:0.4239, tok/sec: 184127.96, flops:193.30, batch-reuse:1
@ 5485 train 3.8854 , allloss: 3.8854, dt: 708.59ms, fracRes: 0.1873, norm(attn): 40.2500, norm(output): 0.4492, norm(x): 0.6017, norm(y): 0.9921, norm:0.4587, tok/sec: 184975.29, flops:194.19, batch-reuse:1
@ 5486 train 3.9174 , allloss: 3.9174, dt: 707.62ms, fracRes: 0.1894, norm(attn): 40.2500, norm(output): 0.4629, norm(x): 0.6138, norm(y): 0.9920, norm:0.4120, tok/sec: 185228.39, flops:194.45, batch-reuse:1
@ 5487 train 3.8572 , allloss: 3.8572, dt: 710.41ms, fracRes: 0.1869, norm(attn): 40.2500, norm(output): 0.4531, norm(x): 0.6038, norm(y): 0.9918, norm:0.4040, tok/sec: 184502.37, flops:193.69, batch-reuse:1
@ 5488 train 3.8834 , allloss: 3.8834, dt: 704.14ms, fracRes: 0.1874, norm(attn): 40.2500, norm(output): 0.4531, norm(x): 0.6010, norm(y): 0.9912, norm:0.4331, tok/sec: 186145.07, flops:195.42, batch-reuse:1
@ 5489 train 3.8494 , allloss: 3.8494, dt: 708.00ms, fracRes: 0.1881, norm(attn): 40.2500, norm(output): 0.4512, norm(x): 0.6017, norm(y): 0.9912, norm:0.3839, tok/sec: 185129.21, flops:194.35, batch-reuse:1
@ 5490 train 3.8612 , allloss: 3.8612, dt: 705.45ms, fracRes: 0.1899, norm(attn): 40.0000, norm(output): 0.4668, norm(x): 0.6191, norm(y): 0.9925, norm:0.4240, tok/sec: 185798.99, flops:195.05, batch-reuse:1
@ 5491 train 3.8793 , allloss: 3.8793, dt: 708.26ms, fracRes: 0.1885, norm(attn): 40.0000, norm(output): 0.4609, norm(x): 0.6096, norm(y): 0.9918, norm:0.3971, tok/sec: 185062.78, flops:194.28, batch-reuse:1
@ 5492 train 3.9893 , allloss: 3.9893, dt: 709.67ms, fracRes: 0.1885, norm(attn): 40.0000, norm(output): 0.4570, norm(x): 0.6080, norm(y): 0.9912, norm:0.3816, tok/sec: 184694.96, flops:193.89, batch-reuse:1
@ 5493 train 3.7859 , allloss: 3.7859, dt: 706.93ms, fracRes: 0.1876, norm(attn): 40.0000, norm(output): 0.4531, norm(x): 0.6011, norm(y): 0.9900, norm:0.3875, tok/sec: 185410.36, flops:194.64, batch-reuse:1
@ 5494 train 3.9131 , allloss: 3.9131, dt: 723.30ms, fracRes: 0.1881, norm(attn): 40.0000, norm(output): 0.4512, norm(x): 0.6024, norm(y): 0.9902, norm:0.3829, tok/sec: 181213.11, flops:190.24, batch-reuse:1
@ 5495 train 3.8734 , allloss: 3.8734, dt: 724.41ms, fracRes: 0.1891, norm(attn): 40.0000, norm(output): 0.4590, norm(x): 0.6092, norm(y): 0.9902, norm:0.3844, tok/sec: 180936.14, flops:189.95, batch-reuse:1
@ 5496 train 3.8387 , allloss: 3.8387, dt: 706.10ms, fracRes: 0.1892, norm(attn): 40.0000, norm(output): 0.4590, norm(x): 0.6093, norm(y): 0.9905, norm:0.3819, tok/sec: 185627.10, flops:194.87, batch-reuse:1
@ 5497 train 3.8322 , allloss: 3.8322, dt: 717.75ms, fracRes: 0.1888, norm(attn): 40.0000, norm(output): 0.4551, norm(x): 0.6064, norm(y): 0.9901, norm:0.3820, tok/sec: 182616.01, flops:191.71, batch-reuse:1
@ 5498 train 3.7963 , allloss: 3.7963, dt: 719.22ms, fracRes: 0.1881, norm(attn): 40.0000, norm(output): 0.4531, norm(x): 0.6031, norm(y): 0.9897, norm:0.3584, tok/sec: 182242.19, flops:191.32, batch-reuse:1
@ 5499 train 3.8919 , allloss: 3.8919, dt: 719.71ms, fracRes: 0.1884, norm(attn): 40.0000, norm(output): 0.4648, norm(x): 0.6108, norm(y): 0.9905, norm:0.4179, tok/sec: 182117.77, flops:191.19, batch-reuse:1
@ 5500 train 3.8745 , allloss: 3.8745, dt: 700.34ms, fracRes: 0.1888, norm(attn): 40.0000, norm(output): 0.4648, norm(x): 0.6115, norm(y): 0.9898, norm:0.3959, tok/sec: 187153.85, flops:196.47, batch-reuse:1
@ 5501 train 3.8696 , allloss: 3.8696, dt: 704.61ms, fracRes: 0.1912, norm(attn): 39.7500, norm(output): 0.4766, norm(x): 0.6274, norm(y): 0.9900, norm:0.5518, tok/sec: 186021.61, flops:195.29, batch-reuse:1
@ 5502 train 3.8516 , allloss: 3.8516, dt: 706.72ms, fracRes: 0.1877, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.5977, norm(y): 0.9897, norm:0.4559, tok/sec: 185465.09, flops:194.70, batch-reuse:1
@ 5503 train 3.9389 , allloss: 3.9389, dt: 697.13ms, fracRes: 0.1895, norm(attn): 39.7500, norm(output): 0.4648, norm(x): 0.6131, norm(y): 0.9906, norm:0.5148, tok/sec: 188016.27, flops:197.38, batch-reuse:1
@ 5504 train 3.7743 , allloss: 3.7743, dt: 708.81ms, fracRes: 0.1887, norm(attn): 39.7500, norm(output): 0.4688, norm(x): 0.6158, norm(y): 0.9904, norm:0.4627, tok/sec: 184918.42, flops:194.13, batch-reuse:1
@ 5505 train 3.8610 , allloss: 3.8610, dt: 704.02ms, fracRes: 0.1876, norm(attn): 40.0000, norm(output): 0.4648, norm(x): 0.6093, norm(y): 0.9905, norm:0.5152, tok/sec: 186176.65, flops:195.45, batch-reuse:1
@ 5506 train 3.8325 , allloss: 3.8325, dt: 722.25ms, fracRes: 0.1883, norm(attn): 39.7500, norm(output): 0.4629, norm(x): 0.6102, norm(y): 0.9906, norm:0.4880, tok/sec: 181477.27, flops:190.52, batch-reuse:1
@ 5507 train 3.8515 , allloss: 3.8515, dt: 726.04ms, fracRes: 0.1877, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6021, norm(y): 0.9911, norm:0.4167, tok/sec: 180529.32, flops:189.52, batch-reuse:1
@ 5508 train 3.9295 , allloss: 3.9295, dt: 726.22ms, fracRes: 0.1886, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6041, norm(y): 0.9915, norm:0.4787, tok/sec: 180484.98, flops:189.47, batch-reuse:1
@ 5509 train 3.8916 , allloss: 3.8916, dt: 721.58ms, fracRes: 0.1875, norm(attn): 40.0000, norm(output): 0.4531, norm(x): 0.6019, norm(y): 0.9912, norm:0.4226, tok/sec: 181645.47, flops:190.69, batch-reuse:1
@ 5510 train 3.8552 , allloss: 3.8552, dt: 727.33ms, fracRes: 0.1900, norm(attn): 39.7500, norm(output): 0.4727, norm(x): 0.6242, norm(y): 0.9919, norm:0.5795, tok/sec: 180210.70, flops:189.19, batch-reuse:1
@ 5511 train 3.8882 , allloss: 3.8882, dt: 713.43ms, fracRes: 0.1887, norm(attn): 39.7500, norm(output): 0.4648, norm(x): 0.6189, norm(y): 0.9906, norm:0.5522, tok/sec: 183720.85, flops:192.87, batch-reuse:1
@ 5512 train 3.9272 , allloss: 3.9272, dt: 711.24ms, fracRes: 0.1866, norm(attn): 40.0000, norm(output): 0.4453, norm(x): 0.5950, norm(y): 0.9902, norm:0.4532, tok/sec: 184287.39, flops:193.47, batch-reuse:1
@ 5513 train 3.8040 , allloss: 3.8040, dt: 701.41ms, fracRes: 0.1883, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.5995, norm(y): 0.9899, norm:0.4200, tok/sec: 186868.21, flops:196.17, batch-reuse:1
@ 5514 train 3.8512 , allloss: 3.8512, dt: 702.32ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6041, norm(y): 0.9904, norm:0.4122, tok/sec: 186628.48, flops:195.92, batch-reuse:1
@ 5515 train 3.8893 , allloss: 3.8893, dt: 709.78ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6066, norm(y): 0.9909, norm:0.4258, tok/sec: 184664.93, flops:193.86, batch-reuse:1
@ 5516 train 3.8831 , allloss: 3.8831, dt: 710.09ms, fracRes: 0.1867, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5981, norm(y): 0.9904, norm:0.3934, tok/sec: 184585.69, flops:193.78, batch-reuse:1
@ 5517 train 3.9000 , allloss: 3.9000, dt: 715.72ms, fracRes: 0.1870, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6017, norm(y): 0.9897, norm:0.4147, tok/sec: 183132.78, flops:192.25, batch-reuse:1
@ 5518 train 3.9174 , allloss: 3.9174, dt: 711.49ms, fracRes: 0.1888, norm(attn): 39.7500, norm(output): 0.4609, norm(x): 0.6092, norm(y): 0.9909, norm:0.4126, tok/sec: 184222.85, flops:193.40, batch-reuse:1
@ 5519 train 3.7666 , allloss: 3.7666, dt: 700.36ms, fracRes: 0.1897, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6065, norm(y): 0.9892, norm:0.4304, tok/sec: 187149.58, flops:196.47, batch-reuse:1
@ 5520 train 3.7821 , allloss: 3.7821, dt: 701.95ms, fracRes: 0.1898, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6075, norm(y): 0.9892, norm:0.3995, tok/sec: 186725.15, flops:196.02, batch-reuse:1
@ 5521 train 3.9512 , allloss: 3.9512, dt: 697.49ms, fracRes: 0.1891, norm(attn): 39.7500, norm(output): 0.4609, norm(x): 0.6086, norm(y): 0.9895, norm:0.3842, tok/sec: 187918.58, flops:197.28, batch-reuse:1
@ 5522 train 3.9412 , allloss: 3.9412, dt: 702.52ms, fracRes: 0.1877, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6069, norm(y): 0.9908, norm:0.4372, tok/sec: 186575.22, flops:195.87, batch-reuse:1
@ 5523 train 3.8759 , allloss: 3.8759, dt: 706.53ms, fracRes: 0.1870, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5980, norm(y): 0.9898, norm:0.4060, tok/sec: 185515.79, flops:194.75, batch-reuse:1
@ 5524 train 3.8603 , allloss: 3.8603, dt: 706.37ms, fracRes: 0.1870, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5972, norm(y): 0.9880, norm:0.4390, tok/sec: 185557.55, flops:194.80, batch-reuse:1
@ 5525 train 3.8233 , allloss: 3.8233, dt: 706.04ms, fracRes: 0.1886, norm(attn): 39.7500, norm(output): 0.4512, norm(x): 0.6024, norm(y): 0.9875, norm:0.4284, tok/sec: 185643.27, flops:194.89, batch-reuse:1
@ 5526 train 3.9344 , allloss: 3.9344, dt: 715.49ms, fracRes: 0.1888, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6042, norm(y): 0.9863, norm:0.3844, tok/sec: 183190.81, flops:192.31, batch-reuse:1
@ 5527 train 3.8533 , allloss: 3.8533, dt: 702.76ms, fracRes: 0.1889, norm(attn): 39.2500, norm(output): 0.4551, norm(x): 0.6043, norm(y): 0.9843, norm:0.4308, tok/sec: 186510.53, flops:195.80, batch-reuse:1
@ 5528 train 3.9270 , allloss: 3.9270, dt: 709.60ms, fracRes: 0.1886, norm(attn): 39.2500, norm(output): 0.4609, norm(x): 0.6091, norm(y): 0.9854, norm:0.4179, tok/sec: 184712.40, flops:193.91, batch-reuse:1
@ 5529 train 3.7872 , allloss: 3.7872, dt: 706.56ms, fracRes: 0.1882, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6051, norm(y): 0.9839, norm:0.4250, tok/sec: 185506.27, flops:194.74, batch-reuse:1
@ 5530 train 3.8505 , allloss: 3.8505, dt: 711.82ms, fracRes: 0.1893, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6037, norm(y): 0.9835, norm:0.3792, tok/sec: 184137.08, flops:193.31, batch-reuse:1
@ 5531 train 3.8005 , allloss: 3.8005, dt: 707.57ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6088, norm(y): 0.9841, norm:0.4876, tok/sec: 185242.24, flops:194.47, batch-reuse:1
@ 5532 train 3.7974 , allloss: 3.7974, dt: 695.91ms, fracRes: 0.1891, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6057, norm(y): 0.9820, norm:0.4283, tok/sec: 188347.23, flops:197.73, batch-reuse:1
@ 5533 train 3.8227 , allloss: 3.8227, dt: 690.61ms, fracRes: 0.1889, norm(attn): 39.0000, norm(output): 0.4531, norm(x): 0.6038, norm(y): 0.9802, norm:0.4160, tok/sec: 189791.78, flops:199.24, batch-reuse:1
@ 5534 train 3.7954 , allloss: 3.7954, dt: 703.03ms, fracRes: 0.1893, norm(attn): 38.7500, norm(output): 0.4531, norm(x): 0.6068, norm(y): 0.9798, norm:0.3866, tok/sec: 186438.67, flops:195.72, batch-reuse:1
@ 5535 train 3.7258 , allloss: 3.7258, dt: 701.76ms, fracRes: 0.1884, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6023, norm(y): 0.9801, norm:0.4514, tok/sec: 186775.58, flops:196.08, batch-reuse:1
@ 5536 train 3.8505 , allloss: 3.8505, dt: 704.30ms, fracRes: 0.1875, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5949, norm(y): 0.9775, norm:0.3955, tok/sec: 186101.27, flops:195.37, batch-reuse:1
@ 5537 train 3.9508 , allloss: 3.9508, dt: 704.44ms, fracRes: 0.1874, norm(attn): 38.2500, norm(output): 0.4531, norm(x): 0.6025, norm(y): 0.9739, norm:0.4225, tok/sec: 186066.57, flops:195.33, batch-reuse:1
@ 5538 train 3.8453 , allloss: 3.8453, dt: 699.10ms, fracRes: 0.1873, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6060, norm(y): 0.9700, norm:0.4352, tok/sec: 187487.21, flops:196.82, batch-reuse:1
@ 5539 train 3.7345 , allloss: 3.7345, dt: 707.69ms, fracRes: 0.1878, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6014, norm(y): 0.9679, norm:0.3934, tok/sec: 185212.22, flops:194.44, batch-reuse:1
@ 5540 train 3.8126 , allloss: 3.8126, dt: 695.09ms, fracRes: 0.1880, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5969, norm(y): 0.9707, norm:0.4121, tok/sec: 188567.85, flops:197.96, batch-reuse:1
@ 5541 train 3.7679 , allloss: 3.7679, dt: 705.80ms, fracRes: 0.1880, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5954, norm(y): 0.9759, norm:0.3737, tok/sec: 185708.18, flops:194.96, batch-reuse:1
@ 5542 train 3.7888 , allloss: 3.7888, dt: 716.95ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.6007, norm(y): 0.9771, norm:0.4123, tok/sec: 182818.11, flops:191.92, batch-reuse:1
@ 5543 train 3.7345 , allloss: 3.7345, dt: 721.42ms, fracRes: 0.1891, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6083, norm(y): 0.9751, norm:0.4076, tok/sec: 181686.05, flops:190.73, batch-reuse:1
@ 5544 train 3.7401 , allloss: 3.7401, dt: 719.95ms, fracRes: 0.1881, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5995, norm(y): 0.9741, norm:0.3744, tok/sec: 182057.58, flops:191.12, batch-reuse:1
@ 5545 train 3.9689 , allloss: 3.9689, dt: 719.43ms, fracRes: 0.1903, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6106, norm(y): 0.9752, norm:0.4597, tok/sec: 182188.93, flops:191.26, batch-reuse:1
@ 5546 train 3.7774 , allloss: 3.7774, dt: 720.00ms, fracRes: 0.1883, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6008, norm(y): 0.9754, norm:0.4466, tok/sec: 182045.52, flops:191.11, batch-reuse:1
@ 5547 train 3.8886 , allloss: 3.8886, dt: 702.97ms, fracRes: 0.1886, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6079, norm(y): 0.9752, norm:0.4906, tok/sec: 186453.85, flops:195.74, batch-reuse:1
@ 5548 train 3.7507 , allloss: 3.7507, dt: 702.72ms, fracRes: 0.1874, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6065, norm(y): 0.9749, norm:0.4043, tok/sec: 186519.76, flops:195.81, batch-reuse:1
@ 5549 train 3.7969 , allloss: 3.7969, dt: 712.03ms, fracRes: 0.1876, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6007, norm(y): 0.9766, norm:0.4281, tok/sec: 184080.92, flops:193.25, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5352, 0.4629, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9023, 0.0708, 0.0277, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.7266, 0.1543, 0.0811, 0.0388, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6836, 0.1934, 0.0339, 0.0527, 0.0352, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5430, 0.2285, 0.0579, 0.0698, 0.0359, 0.0635, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3086, 0.2949, 0.0635, 0.0713, 0.0608, 0.1250, 0.0767, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4062, 0.2520, 0.0459, 0.0493, 0.0542, 0.0767, 0.0645, 0.0510, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2695, 0.1875, 0.0437, 0.0552, 0.0781, 0.1777, 0.0903, 0.0576, 0.0403, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1748, 0.1914, 0.0674, 0.0544, 0.0874, 0.1226, 0.1416, 0.1030, 0.0435, 0.0137, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1348, 0.0801, 0.0432, 0.0564, 0.0918, 0.2139, 0.1504, 0.0869, 0.0791, 0.0157, 0.0471, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1187, 0.1035, 0.0464, 0.0425, 0.0830, 0.1504, 0.1816, 0.1113, 0.0830, 0.0332, 0.0269, 0.0190, 0.0000, 0.0000, 0.0000],
        [0.2471, 0.0830, 0.0128, 0.0188, 0.0537, 0.1826, 0.1719, 0.0933, 0.0791, 0.0095, 0.0225, 0.0087, 0.0161, 0.0000, 0.0000],
        [0.0732, 0.0554, 0.0181, 0.0210, 0.0518, 0.1650, 0.1660, 0.0762, 0.1357, 0.0366, 0.0854, 0.0342, 0.0251, 0.0566, 0.0000],
        [0.0574, 0.0302, 0.0256, 0.0179, 0.0496, 0.0747, 0.1631, 0.0786, 0.1836, 0.0576, 0.0635, 0.0354, 0.0278, 0.0938, 0.0415]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0461, -0.8281, -1.6172, -1.1641, -1.1484, -0.9258, -0.9727, -0.6836, -1.1328, -1.9141, -1.3359, -1.7578, -1.0234, -1.1719, -1.3594],
        [ 0.0361, -0.1113, -1.2969, -1.5625, -1.1406, -0.9219, -0.8828, -0.8164, -1.0156, -1.6562, -1.6641, -1.6562, -1.4297, -1.2891, -1.2266],
        [-0.0342, -2.5781, -3.5156, -3.6094, -3.4688, -3.6562, -3.8281, -3.5469, -4.2500, -4.7188, -4.2812, -4.4375, -3.6875, -4.7188, -4.2500],
        [-0.0203, -1.5625, -2.2188, -2.9531, -2.5312, -2.9062, -2.7500, -2.3750, -3.1094, -3.3438, -3.4062, -3.0938, -2.3906, -3.4531, -3.1250],
        [ 0.0566, -1.2109, -2.9531, -2.5156, -2.9219, -1.7422, -2.6250, -2.5000, -3.3906, -4.3125, -3.3281, -3.6406, -2.5781, -3.4219, -3.4219],
        [ 0.0581, -0.8086, -2.1875, -1.9922, -2.6562, -2.0938, -2.4688, -2.2656, -3.2188, -4.0312, -2.8750, -3.2344, -2.4688, -3.0781, -3.0781],
        [ 0.0898,  0.0471, -1.4922, -1.3672, -1.5312, -0.8125, -1.2969, -1.5312, -2.1406, -3.1094, -2.3594, -2.9062, -2.1719, -2.1406, -1.8828],
        [ 0.1152, -0.3574, -2.0625, -1.9922, -1.8984, -1.5547, -1.7266, -1.9531, -2.6562, -4.1875, -2.8281, -3.6562, -2.7969, -2.4844, -2.6094],
        [ 0.1060, -0.2598, -1.7109, -1.4844, -1.1328, -0.3105, -0.9883, -1.4375, -1.7969, -3.2500, -1.7812, -2.8906, -2.3125, -1.9062, -2.1562],
        [ 0.1216,  0.2139, -0.8281, -1.0391, -0.5703, -0.2314, -0.0879, -0.4062, -1.2656, -2.4219, -1.9219, -2.0938, -1.8281, -1.4062, -1.3672],
        [ 0.1138, -0.4102, -1.0234, -0.7578, -0.2715,  0.5781,  0.2256, -0.3281, -0.4219, -2.0312, -0.9375, -2.0312, -1.4531, -0.8398, -1.1016],
        [ 0.1084, -0.0259, -0.8281, -0.9180, -0.2490,  0.3477,  0.5391,  0.0474, -0.2490, -1.1641, -1.3750, -1.7188, -1.4141, -0.7227, -0.8086],
        [ 0.1797, -0.9102, -2.7812, -2.3906, -1.3516, -0.1226, -0.1846, -0.7969, -0.9609, -3.0781, -2.2188, -3.1719, -2.5625, -1.8047, -2.0156],
        [ 0.1201, -0.1572, -1.2734, -1.1250, -0.2246,  0.9336,  0.9414,  0.1611,  0.7383, -0.5703,  0.2754, -0.6367, -0.9453, -0.1348, -0.7539],
        [ 0.1108, -0.5352, -0.6953, -1.0547, -0.0388,  0.3711,  1.1562,  0.4258,  1.2734,  0.1133,  0.2080, -0.3750, -0.6172,  0.6016, -0.2129]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.4170],
        [0.3046],
        [0.1985],
        [0.2367],
        [0.1815],
        [0.1422],
        [0.1631],
        [0.1457],
        [0.0932],
        [0.1186],
        [0.0414],
        [0.1496],
        [0.1016],
        [0.0455]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9570,     0.0410,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9922,     0.0066,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9805,     0.0165,     0.0000,     0.0028,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9766,     0.0017,     0.0001,     0.0006,     0.0194,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.8711,     0.0043,     0.0000,     0.0030,     0.0050,     0.1177,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9609,     0.0022,     0.0005,     0.0030,     0.0018,     0.0242,     0.0081,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9492,     0.0087,     0.0003,     0.0014,     0.0088,     0.0117,     0.0033,     0.0175,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9336,     0.0021,     0.0002,     0.0004,     0.0001,     0.0097,     0.0013,     0.0491,     0.0042,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7891,     0.0009,     0.0002,     0.0016,     0.0010,     0.0122,     0.0024,     0.1250,     0.0121,     0.0571,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7188,     0.0126,     0.0005,     0.0053,     0.0088,     0.0203,     0.1396,     0.0481,     0.0018,     0.0006,     0.0427,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4355,     0.0028,     0.0001,     0.0019,     0.0004,     0.0258,     0.0069,     0.5156,     0.0028,     0.0000,     0.0034,     0.0045,     0.0000,     0.0000],
        [    0.0000,     0.1924,     0.0064,     0.0001,     0.0021,     0.0072,     0.0043,     0.0013,     0.0047,     0.7500,     0.0003,     0.0157,     0.0004,     0.0156,     0.0000],
        [    0.0001,     0.8320,     0.0190,     0.0002,     0.0121,     0.0001,     0.0093,     0.0047,     0.0131,     0.0518,     0.0049,     0.0047,     0.0002,     0.0056,     0.0417]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0172,      0.8125,      0.5039,      0.0291,      0.2715,      0.4219,      0.5469,      0.5938,      0.4180,      0.3848,      0.0093,      0.4355,      0.1855,      0.2100,      0.3633],
        [     0.1357,      8.7500,      6.9688,      1.3828,      3.8594,      5.1562,      5.5000,      5.7188,      3.9844,      4.5312,      0.6523,      4.3438,      1.5938,      2.7031,      4.4062],
        [     0.1123,     12.1875,      9.0625,     14.8750,      8.9375,      7.4375,      9.1875,      6.5000,      7.3750,      6.5938,      3.8594,      6.4062,      2.9531,      6.5312,      7.1562],
        [     0.1245,     13.0000,      7.9688,      7.0938,     15.3125,      8.6250,      9.8750,     11.5000,      8.5625,      6.7188,      2.2344,      6.6250,      6.0312,      6.0312,      7.0938],
        [     0.2539,     13.0000,      8.8750,      2.4375,      7.1250,     13.6875,      8.9375,      9.6250,      5.3750,      7.6250,     -3.1406,      7.9375,      3.1719,      2.8594,      6.8438],
        [     0.2520,     12.8750,      6.5000,      3.4844,      5.4688,      8.9375,     13.3750,     12.0000,      9.0000,      7.1875,      1.0312,      7.7812,      1.7734,      4.7500,      6.6562],
        [     0.2539,     12.0625,      6.7812,      0.8125,      6.4062,      6.9375,     10.0625,     13.8125,      9.2500,      6.9375,      1.0625,      6.9688,      5.5625,      5.8750,      6.5938],
        [     0.2910,     11.2500,      5.1562,      3.6875,      5.4688,      4.9688,      7.5625,      6.4375,     11.6250,      6.4688,      2.4531,      7.1562,      3.2031,      9.6875,      6.7500],
        [     0.2090,     10.1875,      5.4688,      2.2031,      3.6094,      5.4688,      5.7500,      4.5000,      6.1562,     10.5000,      3.0469,      7.0625,      1.4453,      5.0000,     10.1250],
        [     0.1089,     12.0625,      5.9688,      3.6406,      4.2188,      2.3594,      7.4688,      5.5000,      9.1250,      6.6250,     14.5000,      9.3125,      3.8438,      8.9375,      8.1875],
        [     0.1729,     11.6875,      4.9688,      3.5781,      5.5000,      5.0000,      7.5312,      5.8750,      9.8750,      7.5312,      9.0625,     12.5625,      6.2188,      9.6875,      9.6875],
        [     0.1138,      9.8750,      5.8125,      2.5625,      4.9375,      5.4688,      6.2812,      8.2500,      7.1562,      3.8594,      2.7344,      7.0312,     15.3125,      9.2500,      6.2188],
        [     0.3066,     13.6250,      8.5625,      5.2188,      8.1875,      6.7188,     10.8125,      9.5000,     13.8125,      8.5625,      4.4062,      8.7500,      9.0625,     16.8750,     10.6250],
        [     0.1504,      9.0625,      5.6250,      1.7344,      4.5312,      5.7500,      5.2188,      4.0000,      5.3125,     10.3750,      2.5000,      6.5312,      2.8594,      6.5312,     11.1250],
        [     0.1514,      9.8750,      6.0938,      1.3438,      5.6250,      1.0078,      5.3750,      4.6875,      5.7188,      7.0938,      4.7188,      4.6875,      1.4375,      4.8750,      6.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3780],
        [0.2858],
        [0.2145],
        [0.2498],
        [0.2622],
        [0.1200],
        [0.2015],
        [0.2332],
        [0.2743],
        [0.2140],
        [0.2080],
        [0.1639],
        [0.1818],
        [0.2184]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0031,     0.7891,     0.2070,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0114,     0.6875,     0.1953,     0.1069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0019,     0.5312,     0.0613,     0.0016,     0.4043,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4824,     0.2148,     0.1279,     0.1055,     0.0278,     0.0403,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0012,     0.0591,     0.0322,     0.0030,     0.0850,     0.0025,     0.8164,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1475,     0.0591,     0.1387,     0.0503,     0.0234,     0.0132,     0.5430,     0.0250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0016,     0.0071,     0.0121,     0.0003,     0.0126,     0.0007,     0.0000,     0.0004,     0.9648,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0615,     0.0537,     0.1191,     0.0698,     0.0260,     0.0505,     0.0374,     0.0845,     0.1191,     0.3789,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.1235,     0.0371,     0.0090,     0.0349,     0.0101,     0.0027,     0.0243,     0.2754,     0.1885,     0.2930,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0091,     0.0082,     0.0996,     0.0004,     0.0518,     0.0056,     0.3379,     0.0405,     0.2295,     0.1416,     0.0747,     0.0000,     0.0000,     0.0000],
        [    0.0532,     0.0170,     0.0425,     0.0669,     0.0111,     0.0066,     0.2451,     0.0417,     0.0103,     0.0243,     0.0239,     0.1807,     0.2773,     0.0000,     0.0000],
        [    0.0082,     0.0449,     0.0278,     0.0026,     0.0194,     0.0045,     0.0003,     0.0110,     0.4629,     0.0654,     0.1270,     0.0457,     0.0693,     0.1113,     0.0000],
        [    0.0021,     0.0204,     0.0261,     0.0214,     0.0014,     0.0334,     0.0012,     0.1367,     0.1328,     0.2256,     0.0918,     0.0349,     0.1895,     0.0219,     0.0605]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0010,     -0.0933,     -0.0698,     -0.0991,     -0.0781,     -0.0835,     -0.0623,     -0.0806,     -0.0942,     -0.0591,     -0.0786,     -0.0491,     -0.0583,     -0.0630,     -0.0791],
        [    -0.1631,      9.0000,      6.2188,      3.0156,      5.8125,      5.2188,      5.4062,      5.1875,      4.7500,      2.7969,      4.2188,      3.4844,      5.0938,      2.4844,      4.5625],
        [     0.0079,      5.5625,      4.2188,      6.3125,      3.1562,      6.2500,      5.1562,      6.5312,      4.5000,      4.1562,      4.0312,      3.7188,      5.7188,      1.8828,      2.8750],
        [    -0.1787,      3.9219,      2.6562,      2.0625,      1.3750,      2.0781,      3.8438,      1.4609,     -0.3730,     -0.6055,      0.6328,      1.8516,      1.5859,     -0.8516,      0.4844],
        [    -0.0461,      5.5938,      3.4531,     -0.1680,      5.3438,      1.1641,     -0.8672,     -0.1060,      6.1875,      2.2656,      3.7812,      1.1953,      0.4961,      4.3125,      4.5625],
        [    -0.3164,     -1.1250,     -1.6406,     -1.8359,     -3.1719,     -2.7969,      5.4688,     -0.9922,     -9.5000,     -4.4062,     -5.9375,     -0.2051,     -0.7500,     -7.9375,     -5.6250],
        [    -0.2070,      3.6875,      3.0781,      0.6992,      4.0625,      0.5117,      6.3125,      0.8711,     -0.1396,     -0.8125,     -0.9531,      1.6406,      0.0369,     -1.3828,      0.1982],
        [    -0.2197,     -1.1328,     -0.2793,     -1.2969,     -2.0625,     -2.6250,      1.0859,     -1.9922,     -4.2500,     -2.3906,     -3.0156,      0.1934,     -0.8789,     -3.9531,     -3.0625],
        [     0.0204,      1.5312,      2.0625,     -1.5234,      2.1094,     -0.7227,     -5.2500,     -1.4219,      6.4375,      1.7031,      3.4844,      0.5117,      0.5117,      4.0938,      4.9062],
        [    -0.0310,     -0.1650,      0.6289,      0.0933,     -0.8906,     -0.2256,     -0.5312,      0.2871,      0.6328,      1.7812,      1.3359,      1.1875,      1.5000,     -0.3594,      1.4688],
        [     0.0488,      4.1562,      2.9531,      1.5312,      2.8906,      1.6406,      0.3398,      2.5312,      4.9688,      4.5625,      5.0000,      3.1406,      3.4062,      3.4219,      4.6562],
        [     0.0938,      1.5859,      1.4844,      3.9844,     -1.4609,      3.3281,      1.1094,      5.1875,      3.0781,      4.8125,      4.3125,      3.6875,      5.8125,      1.3828,      2.2500],
        [    -0.0972,     -1.2422,     -0.3242,      0.1348,     -1.6641,     -2.1875,      1.4297,     -0.3379,     -1.7422,     -0.8789,     -0.8945,      1.1250,      1.5547,     -1.9062,     -0.9609],
        [     0.0255,      1.7266,      1.2500,     -1.1094,      0.8906,     -0.5742,     -3.2031,      0.3262,      4.0625,      2.1094,      2.7656,      1.7500,      2.1719,      2.6406,      3.8750],
        [     0.0835,      2.3594,      2.6094,      2.4062,     -0.2930,      2.8594,     -0.4473,      4.2812,      4.2500,      4.7812,      3.8750,      2.9062,      4.5938,      2.4375,      3.4531]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.5581],
        [0.2283],
        [0.4646],
        [0.3377],
        [0.3201],
        [0.2145],
        [0.2816],
        [0.3232],
        [0.2765],
        [0.1974],
        [0.1078],
        [0.2756],
        [0.1411],
        [0.0864]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0015,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0762,     -0.8867,     -1.0938,     -0.9219,     -0.9062,     -1.3438,     -0.7109,     -0.8438,     -1.0078,     -0.8203,     -0.4434,     -1.5547,     -1.1641,     -1.2109,     -1.8672],
        [    -2.7812,    -38.7500,    -42.7500,    -39.0000,    -34.7500,    -56.2500,    -29.3750,    -35.0000,    -39.7500,    -33.2500,    -19.8750,    -59.2500,    -46.7500,    -46.7500,    -70.0000],
        [    -0.4473,    -12.3125,     -8.0000,    -12.2500,     -6.8125,    -18.0000,    -10.2500,    -13.4375,    -11.0625,     -6.9688,     -6.3438,    -12.0000,    -14.3125,    -10.7500,    -12.8125],
        [    -1.2344,    -19.6250,    -20.5000,    -21.3750,    -19.2500,    -30.7500,    -18.1250,    -19.8750,    -21.0000,    -17.3750,    -11.8750,    -28.0000,    -25.1250,    -24.2500,    -33.5000],
        [    -2.0156,    -28.2500,    -32.0000,    -30.8750,    -27.5000,    -43.2500,    -24.5000,    -25.7500,    -30.2500,    -24.3750,    -15.9375,    -42.7500,    -34.7500,    -35.0000,    -51.2500],
        [    -1.4688,    -19.6250,    -23.1250,    -21.5000,    -18.1250,    -29.5000,    -16.2500,    -18.6250,    -23.1250,    -19.5000,    -12.0625,    -31.5000,    -25.5000,    -27.1250,    -39.2500],
        [    -1.7812,    -23.2500,    -27.6250,    -25.2500,    -23.2500,    -35.5000,    -20.0000,    -22.5000,    -25.7500,    -20.7500,    -12.6875,    -37.2500,    -30.2500,    -30.1250,    -44.5000],
        [    -2.3750,    -33.2500,    -34.7500,    -34.2500,    -29.6250,    -49.2500,    -27.6250,    -31.2500,    -35.5000,    -27.7500,    -18.3750,    -47.7500,    -41.0000,    -41.2500,    -57.7500],
        [    -2.7188,    -37.0000,    -40.0000,    -38.0000,    -34.0000,    -54.5000,    -29.8750,    -34.7500,    -39.5000,    -31.8750,    -20.5000,    -55.5000,    -45.7500,    -45.7500,    -66.5000],
        [    -1.6719,    -26.2500,    -24.0000,    -24.5000,    -20.3750,    -37.2500,    -19.7500,    -25.8750,    -25.8750,    -19.7500,    -12.6875,    -34.0000,    -31.3750,    -28.3750,    -39.7500],
        [    -1.8438,    -23.7500,    -25.6250,    -24.7500,    -21.7500,    -35.5000,    -18.8750,    -21.8750,    -26.2500,    -20.5000,    -12.6250,    -36.2500,    -29.3750,    -30.1250,    -44.0000],
        [    -1.6875,    -24.1250,    -26.3750,    -25.6250,    -21.3750,    -36.7500,    -20.1250,    -25.0000,    -27.2500,    -20.3750,    -13.3125,    -35.7500,    -32.0000,    -31.2500,    -43.0000],
        [    -2.3906,    -33.2500,    -37.0000,    -34.5000,    -30.3750,    -49.5000,    -27.6250,    -30.7500,    -34.5000,    -28.3750,    -17.8750,    -48.7500,    -40.7500,    -41.0000,    -58.7500],
        [    -3.3281,    -44.5000,    -48.2500,    -44.5000,    -40.5000,    -65.0000,    -34.2500,    -40.7500,    -46.5000,    -37.2500,    -22.8750,    -67.0000,    -53.7500,    -54.0000,    -79.5000],
        [    -0.7734,    -13.8750,    -14.3125,    -13.3750,    -10.1250,    -20.1250,     -9.6875,    -16.3750,    -14.5000,    -11.8125,     -7.2812,    -19.1250,    -17.8750,    -15.6875,    -22.1250]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7334],
        [0.5732],
        [0.6726],
        [0.6713],
        [0.5744],
        [0.6669],
        [0.6455],
        [0.6673],
        [0.6219],
        [0.6487],
        [0.5924],
        [0.6690],
        [0.6671],
        [0.5167]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0204,     -1.8047,     -4.1562,     -3.1406,     -2.0469,     -2.6406,     -1.7656,     -1.8828,     -2.3281,     -3.2344,     -1.7500,     -3.7500,     -2.1406,     -2.6562,     -3.3906],
        [    -0.5039,    -46.7500,   -105.5000,    -80.5000,    -51.2500,    -68.0000,    -44.5000,    -49.5000,    -61.0000,    -84.0000,    -47.0000,    -96.5000,    -55.2500,    -68.0000,    -87.0000],
        [    -0.5234,    -48.7500,   -110.5000,    -83.0000,    -54.5000,    -69.5000,    -47.2500,    -50.0000,    -60.2500,    -86.0000,    -46.0000,    -99.5000,    -56.7500,    -70.5000,    -89.0000],
        [    -0.7344,    -65.5000,   -149.0000,   -113.0000,    -74.0000,    -96.0000,    -63.2500,    -68.5000,    -85.0000,   -117.5000,    -64.0000,   -135.0000,    -77.0000,    -96.5000,   -122.0000],
        [    -0.5664,    -50.2500,   -113.0000,    -86.5000,    -55.7500,    -72.5000,    -49.2500,    -53.0000,    -63.7500,    -89.5000,    -48.5000,   -103.0000,    -60.0000,    -73.0000,    -93.0000],
        [    -0.6914,    -62.2500,   -140.0000,   -108.0000,    -69.5000,    -91.5000,    -59.7500,    -66.5000,    -82.5000,   -112.0000,    -63.0000,   -129.0000,    -74.5000,    -92.0000,   -116.0000],
        [    -0.6602,    -57.2500,   -129.0000,    -97.5000,    -63.5000,    -82.5000,    -54.0000,    -58.7500,    -73.5000,   -102.0000,    -55.7500,   -117.0000,    -66.5000,    -84.0000,   -104.5000],
        [    -0.6641,    -60.2500,   -136.0000,   -102.5000,    -66.5000,    -87.0000,    -57.7500,    -63.2500,    -76.5000,   -107.0000,    -58.5000,   -124.0000,    -70.0000,    -86.5000,   -112.0000],
        [    -0.6836,    -61.0000,   -139.0000,   -106.5000,    -68.5000,    -90.5000,    -60.5000,    -66.0000,    -79.0000,   -110.5000,    -60.2500,   -127.0000,    -74.0000,    -89.5000,   -115.0000],
        [    -0.8750,    -79.0000,   -180.0000,   -136.0000,    -89.5000,   -116.0000,    -77.5000,    -84.0000,   -101.0000,   -142.0000,    -78.0000,   -165.0000,    -94.5000,   -116.0000,   -149.0000],
        [    -0.5664,    -51.7500,   -118.0000,    -90.0000,    -59.2500,    -76.5000,    -52.7500,    -56.2500,    -64.5000,    -92.5000,    -50.0000,   -109.0000,    -62.7500,    -75.0000,    -99.0000],
        [    -0.7930,    -74.5000,   -167.0000,   -127.0000,    -80.5000,   -107.0000,    -68.0000,    -77.0000,    -98.0000,   -133.0000,    -75.0000,   -153.0000,    -87.0000,   -108.5000,   -136.0000],
        [    -0.6953,    -62.7500,   -141.0000,   -106.0000,    -69.0000,    -89.5000,    -61.2500,    -66.0000,    -77.0000,   -110.5000,    -58.7500,   -129.0000,    -73.5000,    -89.0000,   -116.0000],
        [    -0.7930,    -72.0000,   -163.0000,   -124.0000,    -80.0000,   -105.0000,    -71.0000,    -77.0000,    -91.5000,   -129.0000,    -69.5000,   -149.0000,    -86.5000,   -104.5000,   -135.0000],
        [    -0.6289,    -57.2500,   -130.0000,    -97.5000,    -63.0000,    -82.5000,    -52.5000,    -58.7500,    -76.0000,   -102.5000,    -57.7500,   -118.0000,    -66.5000,    -84.5000,   -105.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9277],
        [0.6985],
        [0.8194],
        [0.9174],
        [0.7838],
        [0.9163],
        [0.7571],
        [0.9207],
        [0.8365],
        [0.9153],
        [0.7442],
        [0.8261],
        [0.9184],
        [0.6668]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.4180,     0.5820,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0054,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0305,     0.2080,     0.6211,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.8516,     0.1138,     0.0024,     0.0098,     0.0125,     0.0103,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0065,     0.0000,     0.0001,     0.0007,     0.0002,     0.0007,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9297,     0.0090,     0.0007,     0.0019,     0.0211,     0.0064,     0.0130,     0.0021,     0.0144,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0007,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0032,     0.4883,     0.1357,     0.0933,     0.0087,     0.0420,     0.0034,     0.0107,     0.1406,     0.0483,     0.0255,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0005,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0033,     0.0361,     0.1367,     0.1992,     0.2324,     0.0295,     0.1426,     0.0049,     0.0254,     0.0403,     0.0659,     0.0282,     0.0026,     0.0203,     0.0334]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0003,      0.0159,     -0.0859,      0.0063,     -0.1006,     -0.1060,     -0.0635,     -0.1191,     -0.1348,     -0.1318,     -0.0640,     -0.0192,     -0.1777,     -0.1768,     -0.0297],
        [     0.0166,      0.3457,     -1.3125,     -0.9492,     -0.6094,     -2.5000,     -1.1250,     -2.4844,     -0.7969,     -1.5000,     -0.6133,     -2.0000,     -3.0156,     -0.7617,     -1.8516],
        [     0.1836,      5.1562,     10.3750,      8.3125,      8.3750,      6.7812,      7.1250,      6.0000,      7.1875,      8.4375,      8.3125,      7.3438,      5.1562,      6.8750,      6.8438],
        [     0.0635,      1.9766,      3.0781,      1.6016,      1.9453,      1.9609,      1.9531,      1.2422,      2.1250,      3.1562,      2.8594,      0.5859,      0.9648,      1.5625,      0.9492],
        [    -0.2344,     -8.8125,    -18.8750,    -15.5625,    -13.9375,    -12.4375,    -13.4375,    -13.2500,    -11.8750,    -16.6250,    -13.0625,    -15.9375,    -12.4375,    -13.3750,    -15.6250],
        [    -0.0195,     -2.0312,     -5.8750,     -4.4688,     -4.2500,     -4.4375,     -4.0312,     -5.5000,     -3.7344,     -5.4375,     -4.0625,     -6.0000,     -5.9375,     -5.0000,     -6.6250],
        [    -0.2598,    -11.3750,    -23.1250,    -19.3750,    -15.0625,    -16.2500,    -16.1250,    -17.3750,    -13.5625,    -20.2500,    -17.3750,    -20.1250,    -15.3125,    -14.6250,    -19.8750],
        [    -0.0981,     -5.1250,    -11.3750,     -9.1250,     -7.3750,     -8.4375,     -7.3125,     -9.1875,     -7.0000,    -10.2500,     -8.9375,    -10.6875,     -8.3125,     -7.6250,    -10.8125],
        [    -0.2041,     -8.8125,    -18.6250,    -15.1875,    -13.5000,    -13.7500,    -13.3750,    -14.9375,    -12.6250,    -18.2500,    -14.8125,    -16.0000,    -13.7500,    -14.3750,    -16.8750],
        [    -0.0708,     -4.7188,     -7.2812,     -6.2812,     -3.8594,     -5.0625,     -4.3438,     -6.1562,     -4.2500,     -6.7188,     -6.0938,     -7.0000,     -4.9062,     -4.2188,     -7.7812],
        [    -0.1533,     -7.3750,    -15.1250,    -11.8750,     -9.7500,    -11.1875,    -10.1875,    -12.8125,    -10.0625,    -15.1250,    -12.6250,    -13.1875,    -11.5625,    -11.1250,    -14.2500],
        [     0.1836,      5.8125,     10.8750,      9.5625,      9.1875,      6.8125,      8.3750,      5.8750,      7.0312,      9.6250,      8.5625,      7.9062,      5.0625,      7.5312,      8.2500],
        [    -0.1709,     -7.8438,    -16.0000,    -13.0000,     -9.5000,    -11.0625,    -10.6250,    -11.9375,     -8.6875,    -14.1875,    -11.5000,    -14.3125,     -9.8750,     -9.0625,    -13.3125],
        [    -0.3438,    -14.1250,    -27.5000,    -23.0000,    -18.8750,    -18.1250,    -19.2500,    -19.2500,    -16.3750,    -24.7500,    -20.2500,    -23.3750,    -16.7500,    -17.8750,    -23.6250],
        [     0.0854,      2.4844,      3.8125,      4.1875,      4.3438,      2.2812,      3.8438,      0.4844,      2.1250,      2.5781,      3.0781,      2.2344,     -0.1533,      1.8984,      2.4062]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3390],
        [0.1039],
        [0.1533],
        [0.2527],
        [0.2362],
        [0.2510],
        [0.2703],
        [0.2438],
        [0.2442],
        [0.2500],
        [0.0785],
        [0.2500],
        [0.2503],
        [0.0837]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0029,     0.9922,     0.0040,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0021,     0.9961,     0.0025,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0046,     0.9922,     0.0048,     0.0001,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0022,     0.9961,     0.0031,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.9961,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0002,     1.0000,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.6016,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.4316,     0.0014,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0001,     0.5664,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0007,     0.4004,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.5977,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3809,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.5508,     0.0000,     0.0000,     0.0684]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1328,      0.1729,      0.1367,      0.0942,      0.1069,      0.1045,      0.1133,      0.1157,      0.1270,      0.1226,      0.1689,      0.1055,      0.1030,      0.1621],
        [    -0.1406,     36.0000,     45.7500,     36.7500,     27.7500,     28.2500,     29.1250,     28.7500,     28.7500,     32.5000,     31.2500,     46.0000,     27.6250,     29.2500,     44.0000],
        [    -0.1885,     42.7500,     54.2500,     43.2500,     33.0000,     33.0000,     34.5000,     33.5000,     33.7500,     38.0000,     36.5000,     54.5000,     32.5000,     34.7500,     52.2500],
        [    -0.1455,     31.6250,     40.0000,     32.0000,     24.7500,     24.6250,     25.6250,     25.0000,     25.1250,     28.0000,     27.1250,     40.5000,     24.2500,     26.0000,     38.7500],
        [    -0.1089,     21.6250,     27.5000,     22.0000,     17.3750,     16.8750,     17.7500,     16.8750,     17.3750,     19.1250,     18.7500,     27.7500,     16.6250,     18.2500,     26.7500],
        [    -0.1084,     23.1250,     29.3750,     23.3750,     18.1250,     17.7500,     18.7500,     18.0000,     18.2500,     20.5000,     19.8750,     29.5000,     17.6250,     19.0000,     28.3750],
        [    -0.0962,     20.8750,     26.2500,     21.0000,     16.3750,     16.3750,     17.0000,     16.5000,     16.7500,     18.5000,     18.0000,     26.5000,     16.1250,     17.2500,     25.5000],
        [    -0.1021,     22.6250,     28.7500,     23.0000,     17.7500,     17.6250,     18.3750,     18.0000,     18.1250,     20.2500,     19.6250,     28.8750,     17.5000,     18.6250,     27.8750],
        [    -0.1367,     25.8750,     32.7500,     26.1250,     20.6250,     19.5000,     21.0000,     19.6250,     20.1250,     22.6250,     21.8750,     33.0000,     19.3750,     21.3750,     31.7500],
        [    -0.1445,     32.0000,     40.5000,     32.2500,     24.7500,     24.5000,     25.6250,     24.7500,     25.0000,     28.2500,     27.2500,     40.7500,     24.1250,     25.8750,     39.0000],
        [    -0.1504,     31.3750,     39.7500,     31.7500,     24.6250,     23.6250,     25.3750,     24.0000,     24.2500,     27.3750,     26.3750,     40.0000,     23.5000,     25.5000,     38.2500],
        [    -0.1875,     40.7500,     51.7500,     41.2500,     31.8750,     31.5000,     33.0000,     31.8750,     32.2500,     36.0000,     34.7500,     52.0000,     31.0000,     33.5000,     50.0000],
        [    -0.1050,     22.3750,     28.5000,     22.7500,     17.7500,     17.5000,     18.1250,     17.6250,     18.0000,     20.0000,     19.5000,     28.7500,     17.2500,     18.6250,     27.6250],
        [    -0.1289,     23.8750,     30.3750,     24.2500,     19.3750,     18.2500,     19.6250,     18.2500,     18.8750,     21.0000,     20.3750,     30.7500,     18.1250,     20.1250,     29.5000],
        [    -0.1865,     40.2500,     51.0000,     40.7500,     31.3750,     31.0000,     32.5000,     31.3750,     31.6250,     35.5000,     34.2500,     51.5000,     30.5000,     33.0000,     49.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500],
        [0.2500]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0005,     1.0000,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.9961,     0.0022,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0008,     0.9531,     0.0013,     0.0000,     0.0435,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0011,     0.9453,     0.0020,     0.0000,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0009,     0.7734,     0.0013,     0.0000,     0.0309,     0.0000,     0.1924,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0198,     0.0000,     0.0000,     0.0017,     0.0000,     0.0083,     0.9688,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0344,     0.0000,     0.0000,     0.0013,     0.0000,     0.0091,     0.5859,     0.3691,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0136,     0.0000,     0.0000,     0.0008,     0.0000,     0.0046,     0.4746,     0.1650,     0.3418,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0205,     0.0000,     0.0000,     0.0005,     0.0000,     0.0043,     0.3770,     0.2412,     0.3418,     0.0140,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0325,     0.0001,     0.0000,     0.0014,     0.0000,     0.0075,     0.4062,     0.2002,     0.3242,     0.0227,     0.0052,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0152,     0.0000,     0.0000,     0.0009,     0.0000,     0.0043,     0.5000,     0.1572,     0.3047,     0.0109,     0.0038,     0.0019,     0.0000],
        [    0.0000,     0.0000,     0.0164,     0.0000,     0.0000,     0.0006,     0.0000,     0.0043,     0.3984,     0.2148,     0.3340,     0.0106,     0.0025,     0.0008,     0.0183]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,      0.1221,      0.1367,      0.1113,      0.0796,      0.1270,      0.0737,      0.1475,      0.1523,      0.1494,      0.1543,      0.1299,      0.1338,      0.1172,      0.1279],
        [    -0.0156,     32.7500,     38.2500,     33.0000,     29.6250,     36.2500,     27.1250,     38.0000,     41.0000,     40.5000,     41.0000,     37.7500,     37.2500,     36.0000,     38.0000],
        [    -0.0270,     48.0000,     55.7500,     48.2500,     43.7500,     52.2500,     40.5000,     54.5000,     59.0000,     58.2500,     58.7500,     55.2500,     53.7500,     52.5000,     55.7500],
        [    -0.0217,     46.2500,     53.7500,     46.5000,     42.0000,     50.2500,     39.2500,     52.0000,     56.0000,     55.7500,     56.0000,     53.2500,     51.5000,     50.2500,     54.0000],
        [    -0.0275,     41.5000,     48.5000,     42.2500,     38.7500,     45.7500,     35.7500,     47.0000,     51.0000,     50.2500,     50.7500,     48.2500,     46.7500,     46.0000,     48.7500],
        [    -0.0256,     43.0000,     50.0000,     43.5000,     39.5000,     47.0000,     36.5000,     48.5000,     52.7500,     52.0000,     52.5000,     49.7500,     48.2500,     47.2500,     50.2500],
        [    -0.0188,     40.2500,     47.0000,     41.0000,     37.0000,     44.0000,     34.5000,     45.7500,     49.2500,     49.0000,     49.0000,     46.7500,     45.2500,     44.2500,     47.2500],
        [    -0.0159,     40.7500,     47.5000,     41.0000,     36.7500,     44.2500,     34.2500,     46.0000,     49.7500,     49.2500,     49.7500,     47.0000,     45.5000,     44.5000,     47.5000],
        [    -0.0295,     41.0000,     47.2500,     41.0000,     37.5000,     45.0000,     34.2500,     46.5000,     51.2500,     50.0000,     50.7500,     47.0000,     46.2500,     45.7500,     47.5000],
        [    -0.0232,     43.2500,     50.2500,     43.2500,     39.2500,     47.0000,     36.2500,     49.0000,     53.2500,     52.7500,     53.0000,     49.7500,     48.2500,     47.2500,     50.2500],
        [    -0.0249,     41.7500,     48.0000,     41.5000,     37.7500,     45.2500,     34.5000,     47.0000,     51.5000,     50.5000,     51.2500,     47.5000,     46.7500,     46.0000,     48.2500],
        [    -0.0276,     49.5000,     57.5000,     49.7500,     45.0000,     53.7500,     41.7500,     56.0000,     60.5000,     60.0000,     60.2500,     57.2500,     55.2500,     54.0000,     57.7500],
        [    -0.0210,     41.5000,     48.5000,     42.0000,     38.0000,     45.2500,     35.2500,     47.0000,     51.0000,     50.2500,     50.7500,     48.0000,     46.5000,     45.5000,     48.5000],
        [    -0.0310,     43.5000,     50.5000,     44.0000,     40.2500,     47.7500,     37.0000,     49.2500,     54.0000,     53.0000,     53.5000,     50.2500,     49.2500,     48.5000,     50.7500],
        [    -0.0303,     47.5000,     55.0000,     47.5000,     43.2500,     51.5000,     40.0000,     53.5000,     58.0000,     57.5000,     58.0000,     54.5000,     53.0000,     52.0000,     55.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.4492,     0.5508,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2930,     0.3574,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2285,     0.2793,     0.2734,     0.2197,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1943,     0.2383,     0.2334,     0.1875,     0.1465,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1572,     0.1934,     0.1895,     0.1523,     0.1182,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1406,     0.1719,     0.1689,     0.1357,     0.1060,     0.1699,     0.1069,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1338,     0.1621,     0.1592,     0.1289,     0.1006,     0.1602,     0.1016,     0.0542,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1211,     0.1475,     0.1445,     0.1167,     0.0908,     0.1455,     0.0918,     0.0486,     0.0923,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1147,     0.1396,     0.1367,     0.1104,     0.0864,     0.1377,     0.0874,     0.0464,     0.0874,     0.0532,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1006,     0.1230,     0.1206,     0.0967,     0.0757,     0.1211,     0.0762,     0.0400,     0.0762,     0.0459,     0.1235,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0933,     0.1143,     0.1118,     0.0898,     0.0703,     0.1123,     0.0708,     0.0374,     0.0713,     0.0430,     0.1143,     0.0718,     0.0000,     0.0000],
        [    0.0000,     0.0898,     0.1094,     0.1074,     0.0864,     0.0679,     0.1079,     0.0684,     0.0364,     0.0684,     0.0417,     0.1099,     0.0688,     0.0376,     0.0000],
        [    0.0000,     0.0811,     0.0991,     0.0972,     0.0781,     0.0608,     0.0977,     0.0613,     0.0322,     0.0615,     0.0371,     0.0996,     0.0620,     0.0334,     0.0996]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.2236,      0.2246,      0.2246,      0.2236,      0.2227,      0.2246,      0.2227,      0.2207,      0.2227,      0.2217,      0.2246,      0.2227,      0.2217,      0.2246],
        [    -0.0305,     82.5000,     82.5000,     82.5000,     82.5000,     82.0000,     82.5000,     82.0000,     81.5000,     82.0000,     81.5000,     82.5000,     82.0000,     81.5000,     82.5000],
        [    -0.0306,     82.5000,     83.0000,     83.0000,     82.5000,     82.5000,     83.0000,     82.5000,     81.5000,     82.5000,     82.0000,     83.0000,     82.5000,     81.5000,     83.0000],
        [    -0.0306,     82.5000,     82.5000,     82.5000,     82.5000,     82.0000,     82.5000,     82.5000,     81.5000,     82.5000,     82.0000,     82.5000,     82.5000,     81.5000,     82.5000],
        [    -0.0305,     82.5000,     82.5000,     82.5000,     82.5000,     82.0000,     82.5000,     82.0000,     81.5000,     82.0000,     81.5000,     82.5000,     82.0000,     81.5000,     82.5000],
        [    -0.0303,     82.0000,     82.0000,     82.0000,     82.0000,     81.5000,     82.0000,     81.5000,     81.0000,     81.5000,     81.0000,     82.0000,     81.5000,     81.0000,     82.0000],
        [    -0.0306,     82.5000,     83.0000,     82.5000,     82.5000,     82.5000,     82.5000,     82.5000,     81.5000,     82.5000,     82.0000,     83.0000,     82.5000,     81.5000,     83.0000],
        [    -0.0303,     82.0000,     82.0000,     82.0000,     82.0000,     81.5000,     82.0000,     81.5000,     81.0000,     81.5000,     81.0000,     82.0000,     81.5000,     81.0000,     82.0000],
        [    -0.0299,     81.0000,     81.0000,     81.0000,     81.0000,     80.5000,     81.0000,     80.5000,     80.0000,     80.5000,     80.5000,     81.0000,     81.0000,     80.0000,     81.0000],
        [    -0.0303,     82.0000,     82.0000,     82.0000,     82.0000,     81.5000,     82.0000,     81.5000,     81.0000,     81.5000,     81.0000,     82.0000,     81.5000,     81.0000,     82.0000],
        [    -0.0300,     81.5000,     81.5000,     81.5000,     81.5000,     81.0000,     81.5000,     81.0000,     80.5000,     81.0000,     80.5000,     81.5000,     81.0000,     80.5000,     81.5000],
        [    -0.0306,     82.5000,     83.0000,     83.0000,     82.5000,     82.5000,     83.0000,     82.5000,     81.5000,     82.5000,     82.0000,     83.0000,     82.5000,     81.5000,     83.0000],
        [    -0.0303,     82.0000,     82.0000,     82.0000,     82.0000,     81.5000,     82.0000,     81.5000,     81.0000,     81.5000,     81.0000,     82.0000,     81.5000,     81.0000,     82.0000],
        [    -0.0299,     81.0000,     81.5000,     81.5000,     81.0000,     81.0000,     81.5000,     81.0000,     80.0000,     81.0000,     80.5000,     81.5000,     81.0000,     80.5000,     81.5000],
        [    -0.0306,     82.5000,     82.5000,     82.5000,     82.5000,     82.0000,     82.5000,     82.5000,     81.5000,     82.5000,     82.0000,     82.5000,     82.5000,     81.5000,     82.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3340,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1108,     0.1113,     0.1108,     0.1113,     0.1113,     0.1113,     0.1113,     0.1113,     0.1108,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0771,     0.0771,     0.0771,     0.0767,     0.0771,     0.0767,     0.0771,     0.0771,     0.0000],
        [    0.0000,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273,      0.0273],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000],
        [     0.0010,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000,     32.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333],
        [0.3333]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.3340,     0.3320,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2500,     0.2500,     0.2500,     0.2500,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2002,     0.2002,     0.2002,     0.2002,     0.2002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.1670,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1436,     0.1426,     0.1436,     0.1426,     0.1426,     0.1426,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.1250,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1113,     0.1108,     0.1113,     0.1108,     0.1108,     0.1108,     0.1108,     0.1108,     0.1113,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0908,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0835,     0.0000,     0.0000],
        [    0.0000,     0.0771,     0.0767,     0.0771,     0.0767,     0.0767,     0.0767,     0.0767,     0.0767,     0.0771,     0.0767,     0.0771,     0.0767,     0.0767,     0.0000],
        [    0.0000,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0713,     0.0713,     0.0713,     0.0718,     0.0713,     0.0718,     0.0713,     0.0713,     0.0718]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0000,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787,     0.1787],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000],
        [    0.0265,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000,    55.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.4766, 0.5234, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.3125, 0.3438, 0.3438, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.2324, 0.2559, 0.2559, 0.2559, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1846, 0.2031, 0.2031, 0.2041, 0.2041, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1543, 0.1699, 0.1699, 0.1699, 0.1699, 0.1660, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1328, 0.1465, 0.1465, 0.1465, 0.1465, 0.1426, 0.1396, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1162, 0.1279, 0.1279, 0.1289, 0.1289, 0.1250, 0.1226, 0.1226, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.1040, 0.1143, 0.1143, 0.1147, 0.1147, 0.1118, 0.1094, 0.1094, 0.1064, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0938, 0.1035, 0.1035, 0.1040, 0.1040, 0.1011, 0.0986, 0.0986, 0.0962, 0.0962, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0854, 0.0942, 0.0942, 0.0947, 0.0947, 0.0923, 0.0903, 0.0903, 0.0879, 0.0879, 0.0879, 0.0000, 0.0000, 0.0000],
        [0.0000, 0.0786, 0.0869, 0.0869, 0.0869, 0.0869, 0.0850, 0.0830, 0.0830, 0.0806, 0.0806, 0.0811, 0.0811, 0.0000, 0.0000],
        [0.0000, 0.0728, 0.0801, 0.0801, 0.0806, 0.0806, 0.0786, 0.0767, 0.0767, 0.0747, 0.0747, 0.0747, 0.0747, 0.0747, 0.0000],
        [0.0000, 0.0679, 0.0747, 0.0747, 0.0747, 0.0747, 0.0728, 0.0713, 0.0713, 0.0693, 0.0693, 0.0698, 0.0698, 0.0698, 0.0698]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    0.0008,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023,     0.4023],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000],
        [    0.5625,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000,   276.0000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
-
------
		(-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001-:0.0001)
---------------
@ 5550 train 3.8233 , allloss: 3.8233, dt: 1156.24ms, fracRes: 0.1876, norm(attn): 39.0000, norm(output): 0.4434, norm(x): 0.5958, norm(y): 0.9797, norm:0.3864, tok/sec: 113360.67, flops:119.01, batch-reuse:1
@ 5551 train 3.7399 , allloss: 3.7399, dt: 703.50ms, fracRes: 0.1866, norm(attn): 38.7500, norm(output): 0.4453, norm(x): 0.5974, norm(y): 0.9823, norm:0.4193, tok/sec: 186314.39, flops:195.59, batch-reuse:1
@ 5552 train 3.8256 , allloss: 3.8256, dt: 701.58ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5973, norm(y): 0.9850, norm:0.3966, tok/sec: 186824.39, flops:196.13, batch-reuse:1
@ 5553 train 3.7752 , allloss: 3.7752, dt: 703.29ms, fracRes: 0.1887, norm(attn): 39.2500, norm(output): 0.4551, norm(x): 0.6079, norm(y): 0.9858, norm:0.3907, tok/sec: 186368.58, flops:195.65, batch-reuse:1
@ 5554 train 3.7551 , allloss: 3.7551, dt: 715.68ms, fracRes: 0.1890, norm(attn): 39.5000, norm(output): 0.4590, norm(x): 0.6077, norm(y): 0.9852, norm:0.4071, tok/sec: 183142.11, flops:192.26, batch-reuse:1
@ 5555 train 3.7506 , allloss: 3.7506, dt: 702.92ms, fracRes: 0.1880, norm(attn): 39.0000, norm(output): 0.4492, norm(x): 0.6034, norm(y): 0.9846, norm:0.4049, tok/sec: 186467.95, flops:195.75, batch-reuse:1
@ 5556 train 3.7763 , allloss: 3.7763, dt: 710.46ms, fracRes: 0.1876, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.5997, norm(y): 0.9841, norm:0.3808, tok/sec: 184487.88, flops:193.68, batch-reuse:1
@ 5557 train 3.7611 , allloss: 3.7611, dt: 699.24ms, fracRes: 0.1889, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6025, norm(y): 0.9833, norm:0.3798, tok/sec: 187449.88, flops:196.79, batch-reuse:1
@ 5558 train 3.7343 , allloss: 3.7343, dt: 712.42ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6032, norm(y): 0.9819, norm:0.4479, tok/sec: 183980.25, flops:193.14, batch-reuse:1
@ 5559 train 3.8293 , allloss: 3.8293, dt: 704.07ms, fracRes: 0.1905, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6131, norm(y): 0.9809, norm:0.4126, tok/sec: 186164.42, flops:195.44, batch-reuse:1
@ 5560 train 3.7723 , allloss: 3.7723, dt: 708.27ms, fracRes: 0.1892, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6045, norm(y): 0.9794, norm:0.4155, tok/sec: 185058.98, flops:194.28, batch-reuse:1
@ 5561 train 3.7301 , allloss: 3.7301, dt: 702.86ms, fracRes: 0.1884, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6036, norm(y): 0.9755, norm:0.4179, tok/sec: 186483.57, flops:195.77, batch-reuse:1
@ 5562 train 3.6431 , allloss: 3.6431, dt: 700.54ms, fracRes: 0.1876, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5961, norm(y): 0.9717, norm:0.4321, tok/sec: 187100.98, flops:196.42, batch-reuse:1
@ 5563 train 3.7892 , allloss: 3.7892, dt: 706.26ms, fracRes: 0.1876, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6014, norm(y): 0.9685, norm:0.3959, tok/sec: 185586.05, flops:194.83, batch-reuse:1
@ 5564 train 3.8141 , allloss: 3.8141, dt: 700.39ms, fracRes: 0.1879, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6007, norm(y): 0.9680, norm:0.4607, tok/sec: 187141.04, flops:196.46, batch-reuse:1
@ 5565 train 3.7630 , allloss: 3.7630, dt: 707.87ms, fracRes: 0.1900, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6038, norm(y): 0.9691, norm:0.4448, tok/sec: 185164.25, flops:194.39, batch-reuse:1
@ 5566 train 3.8004 , allloss: 3.8004, dt: 713.43ms, fracRes: 0.1886, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6001, norm(y): 0.9723, norm:0.5204, tok/sec: 183721.65, flops:192.87, batch-reuse:1
@ 5567 train 3.8063 , allloss: 3.8063, dt: 705.54ms, fracRes: 0.1877, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.5951, norm(y): 0.9721, norm:0.4531, tok/sec: 185775.76, flops:195.03, batch-reuse:1
@ 5568 train 3.8606 , allloss: 3.8606, dt: 700.17ms, fracRes: 0.1901, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6145, norm(y): 0.9731, norm:0.5488, tok/sec: 187200.56, flops:196.52, batch-reuse:1
@ 5569 train 3.7656 , allloss: 3.7656, dt: 706.79ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6003, norm(y): 0.9778, norm:0.6623, tok/sec: 185445.89, flops:194.68, batch-reuse:1
@ 5570 train 3.7179 , allloss: 3.7179, dt: 705.30ms, fracRes: 0.1881, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5986, norm(y): 0.9778, norm:0.5094, tok/sec: 185839.07, flops:195.09, batch-reuse:1
@ 5571 train 3.8247 , allloss: 3.8247, dt: 702.46ms, fracRes: 0.1861, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5940, norm(y): 0.9761, norm:0.5909, tok/sec: 186590.10, flops:195.88, batch-reuse:1
@ 5572 train 3.8202 , allloss: 3.8202, dt: 697.00ms, fracRes: 0.1863, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6022, norm(y): 0.9777, norm:0.4944, tok/sec: 188050.94, flops:197.42, batch-reuse:1
@ 5573 train 3.7522 , allloss: 3.7522, dt: 691.04ms, fracRes: 0.1864, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6046, norm(y): 0.9763, norm:0.6020, tok/sec: 189674.31, flops:199.12, batch-reuse:1
@ 5574 train 3.8365 , allloss: 3.8365, dt: 709.10ms, fracRes: 0.1876, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.5975, norm(y): 0.9697, norm:0.4399, tok/sec: 184841.82, flops:194.05, batch-reuse:1
@ 5575 train 3.8328 , allloss: 3.8328, dt: 711.01ms, fracRes: 0.1880, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5970, norm(y): 0.9675, norm:0.5296, tok/sec: 184345.48, flops:193.53, batch-reuse:1
@ 5576 train 3.6960 , allloss: 3.6960, dt: 708.38ms, fracRes: 0.1872, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.5983, norm(y): 0.9699, norm:0.4223, tok/sec: 185029.45, flops:194.24, batch-reuse:1
@ 5577 train 3.6670 , allloss: 3.6670, dt: 710.70ms, fracRes: 0.1853, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5939, norm(y): 0.9714, norm:0.5002, tok/sec: 184427.91, flops:193.61, batch-reuse:1
@ 5578 train 3.7961 , allloss: 3.7961, dt: 710.43ms, fracRes: 0.1857, norm(attn): 38.2500, norm(output): 0.4492, norm(x): 0.5970, norm(y): 0.9670, norm:0.4579, tok/sec: 184495.68, flops:193.68, batch-reuse:1
@ 5579 train 3.8709 , allloss: 3.8709, dt: 716.50ms, fracRes: 0.1876, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.6015, norm(y): 0.9678, norm:0.4221, tok/sec: 182933.88, flops:192.04, batch-reuse:1
@ 5580 train 4.0934 , allloss: 4.0934, dt: 707.21ms, fracRes: 0.1930, norm(attn): 37.7500, norm(output): 0.4609, norm(x): 0.6166, norm(y): 0.9727, norm:0.5284, tok/sec: 185337.92, flops:194.57, batch-reuse:1
@ 5581 train 4.0264 , allloss: 4.0264, dt: 707.10ms, fracRes: 0.1924, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6112, norm(y): 0.9719, norm:0.6234, tok/sec: 185364.85, flops:194.60, batch-reuse:1
@ 5582 train 3.8880 , allloss: 3.8880, dt: 711.84ms, fracRes: 0.1908, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.5993, norm(y): 0.9672, norm:0.4711, tok/sec: 184131.84, flops:193.30, batch-reuse:1
@ 5583 train 4.0257 , allloss: 4.0257, dt: 718.92ms, fracRes: 0.1905, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6057, norm(y): 0.9669, norm:0.4909, tok/sec: 182317.80, flops:191.40, batch-reuse:1
@ 5584 train 3.8272 , allloss: 3.8272, dt: 716.62ms, fracRes: 0.1913, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6118, norm(y): 0.9661, norm:0.5069, tok/sec: 182901.80, flops:192.01, batch-reuse:1
@ 5585 train 3.8974 , allloss: 3.8974, dt: 712.76ms, fracRes: 0.1911, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6034, norm(y): 0.9630, norm:0.4573, tok/sec: 183894.10, flops:193.05, batch-reuse:1
@ 5586 train 3.9482 , allloss: 3.9482, dt: 711.77ms, fracRes: 0.1909, norm(attn): 37.2500, norm(output): 0.4414, norm(x): 0.5974, norm(y): 0.9598, norm:0.4630, tok/sec: 184150.04, flops:193.32, batch-reuse:1
@ 5587 train 3.8655 , allloss: 3.8655, dt: 709.55ms, fracRes: 0.1913, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5982, norm(y): 0.9635, norm:0.4402, tok/sec: 184724.44, flops:193.92, batch-reuse:1
@ 5588 train 3.8148 , allloss: 3.8148, dt: 703.93ms, fracRes: 0.1911, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6059, norm(y): 0.9688, norm:0.4183, tok/sec: 186199.10, flops:195.47, batch-reuse:1
@ 5589 train 3.9683 , allloss: 3.9683, dt: 712.96ms, fracRes: 0.1901, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6086, norm(y): 0.9725, norm:0.4212, tok/sec: 183840.84, flops:193.00, batch-reuse:1
@ 5590 train 3.9167 , allloss: 3.9167, dt: 707.04ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6045, norm(y): 0.9763, norm:0.4253, tok/sec: 185380.16, flops:194.61, batch-reuse:1
@ 5591 train 3.9944 , allloss: 3.9944, dt: 703.12ms, fracRes: 0.1885, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6073, norm(y): 0.9777, norm:0.3938, tok/sec: 186415.72, flops:195.70, batch-reuse:1
@ 5592 train 3.8362 , allloss: 3.8362, dt: 699.54ms, fracRes: 0.1881, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.6006, norm(y): 0.9773, norm:0.3664, tok/sec: 187367.66, flops:196.70, batch-reuse:1
@ 5593 train 3.8217 , allloss: 3.8217, dt: 694.79ms, fracRes: 0.1882, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5942, norm(y): 0.9721, norm:0.4113, tok/sec: 188649.97, flops:198.05, batch-reuse:1
@ 5594 train 3.9753 , allloss: 3.9753, dt: 703.08ms, fracRes: 0.1885, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.5979, norm(y): 0.9694, norm:0.4165, tok/sec: 186424.95, flops:195.71, batch-reuse:1
@ 5595 train 3.9698 , allloss: 3.9698, dt: 706.34ms, fracRes: 0.1898, norm(attn): 38.2500, norm(output): 0.4531, norm(x): 0.6057, norm(y): 0.9713, norm:0.4117, tok/sec: 185565.44, flops:194.81, batch-reuse:1
@ 5596 train 3.9404 , allloss: 3.9404, dt: 697.95ms, fracRes: 0.1906, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6100, norm(y): 0.9761, norm:0.4507, tok/sec: 187796.17, flops:197.15, batch-reuse:1
@ 5597 train 4.0040 , allloss: 4.0040, dt: 713.58ms, fracRes: 0.1898, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6000, norm(y): 0.9799, norm:0.4210, tok/sec: 183683.04, flops:192.83, batch-reuse:1
@ 5598 train 3.9736 , allloss: 3.9736, dt: 712.48ms, fracRes: 0.1878, norm(attn): 38.7500, norm(output): 0.4395, norm(x): 0.5912, norm(y): 0.9803, norm:0.4133, tok/sec: 183966.65, flops:193.13, batch-reuse:1
@ 5599 train 3.9169 , allloss: 3.9169, dt: 693.36ms, fracRes: 0.1885, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5976, norm(y): 0.9810, norm:0.4693, tok/sec: 189038.01, flops:198.45, batch-reuse:1
@ 5600 train 3.9182 , allloss: 3.9182, dt: 698.32ms, fracRes: 0.1883, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5955, norm(y): 0.9836, norm:0.3708, tok/sec: 187695.06, flops:197.04, batch-reuse:1
@ 5601 train 4.0333 , allloss: 4.0333, dt: 690.09ms, fracRes: 0.1900, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.6020, norm(y): 0.9859, norm:0.5064, tok/sec: 189933.28, flops:199.39, batch-reuse:1
@ 5602 train 4.1152 , allloss: 4.1152, dt: 695.16ms, fracRes: 0.1895, norm(attn): 39.0000, norm(output): 0.4531, norm(x): 0.6040, norm(y): 0.9867, norm:0.4603, tok/sec: 188549.55, flops:197.94, batch-reuse:1
@ 5603 train 3.9597 , allloss: 3.9597, dt: 710.74ms, fracRes: 0.1904, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.6018, norm(y): 0.9877, norm:0.4619, tok/sec: 184415.85, flops:193.60, batch-reuse:1
@ 5604 train 3.9507 , allloss: 3.9507, dt: 704.35ms, fracRes: 0.1900, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6048, norm(y): 0.9857, norm:0.4379, tok/sec: 186088.42, flops:195.36, batch-reuse:1
@ 5605 train 3.8427 , allloss: 3.8427, dt: 701.16ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6016, norm(y): 0.9816, norm:0.4086, tok/sec: 186937.09, flops:196.25, batch-reuse:1
@ 5606 train 4.1001 , allloss: 4.1001, dt: 702.01ms, fracRes: 0.1890, norm(attn): 38.5000, norm(output): 0.6836, norm(x): 0.8395, norm(y): 0.9779, norm:2.6434, tok/sec: 186709.68, flops:196.01, batch-reuse:1
@ 5607 train 3.9643 , allloss: 3.9643, dt: 701.41ms, fracRes: 0.1886, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6051, norm(y): 0.9701, norm:0.5237, tok/sec: 186868.21, flops:196.17, batch-reuse:1
@ 5608 train 3.9522 , allloss: 3.9522, dt: 704.50ms, fracRes: 0.1899, norm(attn): 36.7500, norm(output): 0.4590, norm(x): 0.6109, norm(y): 0.9555, norm:0.5192, tok/sec: 186050.64, flops:195.32, batch-reuse:1
@ 5609 train 4.0140 , allloss: 4.0140, dt: 708.45ms, fracRes: 0.1893, norm(attn): 35.7500, norm(output): 0.4668, norm(x): 0.6189, norm(y): 0.9267, norm:0.5529, tok/sec: 185011.83, flops:194.23, batch-reuse:1
@ 5610 train 7.9666 , allloss: 7.9666, dt: 691.90ms, fracRes: 0.1885, norm(attn): 34.0000, norm(output): 25.8750, norm(x): 25.9015, norm(y): 0.9183, norm:6.6457, tok/sec: 189438.17, flops:198.87, batch-reuse:1
@ 5611 train 3.9440 , allloss: 3.9440, dt: 710.44ms, fracRes: 0.1887, norm(attn): 35.2500, norm(output): 0.4492, norm(x): 0.6050, norm(y): 0.9239, norm:0.7775, tok/sec: 184493.70, flops:193.68, batch-reuse:1
@ 5612 train 3.8073 , allloss: 3.8073, dt: 710.09ms, fracRes: 0.1880, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5995, norm(y): 0.9561, norm:0.5285, tok/sec: 184585.75, flops:193.78, batch-reuse:1
@ 5613 train 3.9729 , allloss: 3.9729, dt: 695.84ms, fracRes: 0.1883, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6082, norm(y): 0.9743, norm:0.6095, tok/sec: 188365.82, flops:197.75, batch-reuse:1
@ 5614 train 3.8665 , allloss: 3.8665, dt: 708.03ms, fracRes: 0.1883, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.6001, norm(y): 0.9822, norm:0.5197, tok/sec: 185121.98, flops:194.34, batch-reuse:1
@ 5615 train 3.8678 , allloss: 3.8678, dt: 695.66ms, fracRes: 0.1889, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5966, norm(y): 0.9862, norm:0.5070, tok/sec: 188413.72, flops:197.80, batch-reuse:1
@ 5616 train 3.8900 , allloss: 3.8900, dt: 721.01ms, fracRes: 0.1891, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5968, norm(y): 0.9883, norm:0.5365, tok/sec: 181789.32, flops:190.84, batch-reuse:1
@ 5617 train 3.7705 , allloss: 3.7705, dt: 708.34ms, fracRes: 0.1881, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6030, norm(y): 0.9887, norm:0.4654, tok/sec: 185040.35, flops:194.26, batch-reuse:1
@ 5618 train 3.8853 , allloss: 3.8853, dt: 710.53ms, fracRes: 0.1872, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6004, norm(y): 0.9888, norm:0.4112, tok/sec: 184471.17, flops:193.66, batch-reuse:1
@ 5619 train 3.9487 , allloss: 3.9487, dt: 698.65ms, fracRes: 0.1883, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6071, norm(y): 0.9901, norm:0.3977, tok/sec: 187606.92, flops:196.95, batch-reuse:1
@ 5620 train 3.7935 , allloss: 3.7935, dt: 701.22ms, fracRes: 0.1896, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6068, norm(y): 0.9901, norm:0.3835, tok/sec: 186920.44, flops:196.23, batch-reuse:1
@ 5621 train 3.9122 , allloss: 3.9122, dt: 706.83ms, fracRes: 0.1900, norm(attn): 40.0000, norm(output): 0.4590, norm(x): 0.6097, norm(y): 0.9914, norm:0.3935, tok/sec: 185436.44, flops:194.67, batch-reuse:1
@ 5622 train 3.9011 , allloss: 3.9011, dt: 707.72ms, fracRes: 0.1900, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6047, norm(y): 0.9912, norm:0.3992, tok/sec: 185201.99, flops:194.43, batch-reuse:1
@ 5623 train 3.8926 , allloss: 3.8926, dt: 693.03ms, fracRes: 0.1903, norm(attn): 40.0000, norm(output): 0.4531, norm(x): 0.6060, norm(y): 0.9918, norm:0.4296, tok/sec: 189128.93, flops:198.55, batch-reuse:1
@ 5624 train 3.9397 , allloss: 3.9397, dt: 705.70ms, fracRes: 0.1882, norm(attn): 40.0000, norm(output): 0.4473, norm(x): 0.6003, norm(y): 0.9916, norm:0.3921, tok/sec: 185733.40, flops:194.98, batch-reuse:1
@ 5625 train 3.9090 , allloss: 3.9090, dt: 717.07ms, fracRes: 0.1885, norm(attn): 40.0000, norm(output): 0.4512, norm(x): 0.5997, norm(y): 0.9918, norm:0.3815, tok/sec: 182787.41, flops:191.89, batch-reuse:1
@ 5626 train 3.8258 , allloss: 3.8258, dt: 714.19ms, fracRes: 0.1895, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6049, norm(y): 0.9915, norm:0.3581, tok/sec: 183525.02, flops:192.66, batch-reuse:1
@ 5627 train 3.9973 , allloss: 3.9973, dt: 713.97ms, fracRes: 0.1895, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6073, norm(y): 0.9922, norm:0.3978, tok/sec: 183582.14, flops:192.72, batch-reuse:1
@ 5628 train 3.8567 , allloss: 3.8567, dt: 704.09ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6034, norm(y): 0.9910, norm:0.3511, tok/sec: 186158.62, flops:195.43, batch-reuse:1
@ 5629 train 4.0221 , allloss: 4.0221, dt: 707.76ms, fracRes: 0.1910, norm(attn): 39.2500, norm(output): 0.4590, norm(x): 0.6091, norm(y): 0.9922, norm:0.3690, tok/sec: 185191.95, flops:194.41, batch-reuse:1
@ 5630 train 3.9465 , allloss: 3.9465, dt: 691.48ms, fracRes: 0.1914, norm(attn): 39.5000, norm(output): 0.4629, norm(x): 0.6162, norm(y): 0.9917, norm:0.4151, tok/sec: 189551.95, flops:198.99, batch-reuse:1
@ 5631 train 3.9687 , allloss: 3.9687, dt: 709.28ms, fracRes: 0.1895, norm(attn): 39.2500, norm(output): 0.4551, norm(x): 0.6089, norm(y): 0.9912, norm:0.3760, tok/sec: 184797.09, flops:194.00, batch-reuse:1
@ 5632 train 3.7844 , allloss: 3.7844, dt: 711.57ms, fracRes: 0.1897, norm(attn): 39.2500, norm(output): 0.4609, norm(x): 0.6113, norm(y): 0.9910, norm:0.4064, tok/sec: 184202.30, flops:193.38, batch-reuse:1
@ 5633 train 3.8446 , allloss: 3.8446, dt: 708.88ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6017, norm(y): 0.9903, norm:0.4008, tok/sec: 184899.27, flops:194.11, batch-reuse:1
@ 5634 train 3.8280 , allloss: 3.8280, dt: 695.51ms, fracRes: 0.1874, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5978, norm(y): 0.9903, norm:0.3552, tok/sec: 188455.25, flops:197.84, batch-reuse:1
@ 5635 train 4.0314 , allloss: 4.0314, dt: 701.52ms, fracRes: 0.1884, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6002, norm(y): 0.9912, norm:0.4342, tok/sec: 186838.74, flops:196.14, batch-reuse:1
@ 5636 train 3.8301 , allloss: 3.8301, dt: 695.94ms, fracRes: 0.1878, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5995, norm(y): 0.9905, norm:0.3643, tok/sec: 188337.43, flops:197.72, batch-reuse:1
@ 5637 train 3.9630 , allloss: 3.9630, dt: 708.21ms, fracRes: 0.1880, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5976, norm(y): 0.9910, norm:0.3775, tok/sec: 185076.23, flops:194.29, batch-reuse:1
@ 5638 train 3.9209 , allloss: 3.9209, dt: 704.27ms, fracRes: 0.1876, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5975, norm(y): 0.9909, norm:0.3563, tok/sec: 186111.10, flops:195.38, batch-reuse:1
@ 5639 train 3.8180 , allloss: 3.8180, dt: 710.49ms, fracRes: 0.1909, norm(attn): 38.7500, norm(output): 0.4570, norm(x): 0.6136, norm(y): 0.9915, norm:0.4791, tok/sec: 184482.00, flops:193.67, batch-reuse:1
@ 5640 train 3.8984 , allloss: 3.8984, dt: 713.81ms, fracRes: 0.1893, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6081, norm(y): 0.9902, norm:0.5585, tok/sec: 183623.71, flops:192.77, batch-reuse:1
@ 5641 train 3.9188 , allloss: 3.9188, dt: 717.19ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6064, norm(y): 0.9909, norm:0.4085, tok/sec: 182758.73, flops:191.86, batch-reuse:1
@ 5642 train 3.9155 , allloss: 3.9155, dt: 706.87ms, fracRes: 0.1908, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6095, norm(y): 0.9919, norm:0.5039, tok/sec: 185425.56, flops:194.66, batch-reuse:1
@ 5643 train 3.9731 , allloss: 3.9731, dt: 702.73ms, fracRes: 0.1896, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5957, norm(y): 0.9914, norm:0.4915, tok/sec: 186518.63, flops:195.81, batch-reuse:1
@ 5644 train 3.9640 , allloss: 3.9640, dt: 703.09ms, fracRes: 0.1907, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6027, norm(y): 0.9909, norm:0.4182, tok/sec: 186422.42, flops:195.71, batch-reuse:1
@ 5645 train 3.7927 , allloss: 3.7927, dt: 715.69ms, fracRes: 0.1895, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6045, norm(y): 0.9900, norm:0.5381, tok/sec: 183139.98, flops:192.26, batch-reuse:1
@ 5646 train 3.8273 , allloss: 3.8273, dt: 716.88ms, fracRes: 0.1898, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6069, norm(y): 0.9898, norm:0.4365, tok/sec: 182836.84, flops:191.94, batch-reuse:1
@ 5647 train 3.9637 , allloss: 3.9637, dt: 719.04ms, fracRes: 0.1882, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5998, norm(y): 0.9904, norm:0.4717, tok/sec: 182287.70, flops:191.37, batch-reuse:1
@ 5648 train 3.8396 , allloss: 3.8396, dt: 717.43ms, fracRes: 0.1884, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5999, norm(y): 0.9906, norm:0.4265, tok/sec: 182695.33, flops:191.79, batch-reuse:1
@ 5649 train 3.9446 , allloss: 3.9446, dt: 717.46ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6035, norm(y): 0.9918, norm:0.5049, tok/sec: 182688.89, flops:191.79, batch-reuse:1
@ 5650 train 3.7564 , allloss: 3.7564, dt: 708.61ms, fracRes: 0.1896, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6052, norm(y): 0.9911, norm:0.4622, tok/sec: 184971.18, flops:194.18, batch-reuse:1
@ 5651 train 3.8703 , allloss: 3.8703, dt: 717.12ms, fracRes: 0.1870, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5961, norm(y): 0.9906, norm:0.4689, tok/sec: 182774.90, flops:191.88, batch-reuse:1
@ 5652 train 3.8628 , allloss: 3.8628, dt: 711.44ms, fracRes: 0.1884, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6053, norm(y): 0.9905, norm:0.4478, tok/sec: 184234.65, flops:193.41, batch-reuse:1
@ 5653 train 3.8560 , allloss: 3.8560, dt: 709.30ms, fracRes: 0.1876, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6011, norm(y): 0.9903, norm:0.4647, tok/sec: 184790.50, flops:193.99, batch-reuse:1
@ 5654 train 3.9221 , allloss: 3.9221, dt: 712.99ms, fracRes: 0.1887, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6024, norm(y): 0.9907, norm:0.5032, tok/sec: 183833.46, flops:192.99, batch-reuse:1
@ 5655 train 3.9511 , allloss: 3.9511, dt: 707.16ms, fracRes: 0.1884, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6003, norm(y): 0.9911, norm:0.4188, tok/sec: 185350.16, flops:194.58, batch-reuse:1
@ 5656 train 3.9143 , allloss: 3.9143, dt: 699.20ms, fracRes: 0.1899, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6083, norm(y): 0.9916, norm:0.5113, tok/sec: 187459.66, flops:196.80, batch-reuse:1
@ 5657 train 3.8953 , allloss: 3.8953, dt: 713.24ms, fracRes: 0.1900, norm(attn): 39.5000, norm(output): 0.4609, norm(x): 0.6111, norm(y): 0.9911, norm:0.4145, tok/sec: 183769.31, flops:192.92, batch-reuse:1
@ 5658 train 3.8534 , allloss: 3.8534, dt: 710.10ms, fracRes: 0.1918, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6113, norm(y): 0.9907, norm:0.4588, tok/sec: 184581.79, flops:193.77, batch-reuse:1
@ 5659 train 3.8771 , allloss: 3.8771, dt: 700.80ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6028, norm(y): 0.9903, norm:0.4303, tok/sec: 187030.71, flops:196.35, batch-reuse:1
@ 5660 train 3.8863 , allloss: 3.8863, dt: 695.21ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6032, norm(y): 0.9902, norm:0.4338, tok/sec: 188536.62, flops:197.93, batch-reuse:1
@ 5661 train 3.9854 , allloss: 3.9854, dt: 695.92ms, fracRes: 0.1891, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6019, norm(y): 0.9912, norm:0.4292, tok/sec: 188344.01, flops:197.72, batch-reuse:1
@ 5662 train 3.9333 , allloss: 3.9333, dt: 713.47ms, fracRes: 0.1880, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5929, norm(y): 0.9907, norm:0.4013, tok/sec: 183709.62, flops:192.86, batch-reuse:1
@ 5663 train 3.9527 , allloss: 3.9527, dt: 713.29ms, fracRes: 0.1884, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5947, norm(y): 0.9912, norm:0.4262, tok/sec: 183757.88, flops:192.91, batch-reuse:1
@ 5664 train 3.8372 , allloss: 3.8372, dt: 714.42ms, fracRes: 0.1884, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5992, norm(y): 0.9907, norm:0.4109, tok/sec: 183467.02, flops:192.60, batch-reuse:1
@ 5665 train 3.8938 , allloss: 3.8938, dt: 711.62ms, fracRes: 0.1879, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6063, norm(y): 0.9909, norm:0.4071, tok/sec: 184187.55, flops:193.36, batch-reuse:1
@ 5666 train 3.9382 , allloss: 3.9382, dt: 704.03ms, fracRes: 0.1891, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6023, norm(y): 0.9905, norm:0.3973, tok/sec: 186174.19, flops:195.45, batch-reuse:1
@ 5667 train 3.8735 , allloss: 3.8735, dt: 711.74ms, fracRes: 0.1902, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6050, norm(y): 0.9905, norm:0.3864, tok/sec: 184156.64, flops:193.33, batch-reuse:1
@ 5668 train 3.8607 , allloss: 3.8607, dt: 701.09ms, fracRes: 0.1877, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5937, norm(y): 0.9905, norm:0.4012, tok/sec: 186953.56, flops:196.26, batch-reuse:1
@ 5669 train 3.8704 , allloss: 3.8704, dt: 711.90ms, fracRes: 0.1895, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6033, norm(y): 0.9906, norm:0.4071, tok/sec: 184115.56, flops:193.28, batch-reuse:1
@ 5670 train 3.9132 , allloss: 3.9132, dt: 712.14ms, fracRes: 0.1898, norm(attn): 39.0000, norm(output): 0.4492, norm(x): 0.6054, norm(y): 0.9907, norm:0.3932, tok/sec: 184054.85, flops:193.22, batch-reuse:1
@ 5671 train 3.9674 , allloss: 3.9674, dt: 699.70ms, fracRes: 0.1897, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6045, norm(y): 0.9911, norm:0.3734, tok/sec: 187325.45, flops:196.65, batch-reuse:1
@ 5672 train 3.8672 , allloss: 3.8672, dt: 715.38ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5968, norm(y): 0.9906, norm:0.3868, tok/sec: 183221.34, flops:192.35, batch-reuse:1
@ 5673 train 3.8106 , allloss: 3.8106, dt: 706.42ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5959, norm(y): 0.9906, norm:0.3623, tok/sec: 185543.84, flops:194.78, batch-reuse:1
@ 5674 train 3.8121 , allloss: 3.8121, dt: 704.09ms, fracRes: 0.1874, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.5997, norm(y): 0.9901, norm:0.3742, tok/sec: 186157.80, flops:195.43, batch-reuse:1
@ 5675 train 3.8397 , allloss: 3.8397, dt: 710.93ms, fracRes: 0.1880, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6023, norm(y): 0.9900, norm:0.3712, tok/sec: 184366.99, flops:193.55, batch-reuse:1
@ 5676 train 3.9618 , allloss: 3.9618, dt: 716.65ms, fracRes: 0.1886, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.6021, norm(y): 0.9910, norm:0.3982, tok/sec: 182896.57, flops:192.01, batch-reuse:1
@ 5677 train 3.8013 , allloss: 3.8013, dt: 707.46ms, fracRes: 0.1890, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5953, norm(y): 0.9900, norm:0.3889, tok/sec: 185270.71, flops:194.50, batch-reuse:1
@ 5678 train 3.7659 , allloss: 3.7659, dt: 714.90ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5980, norm(y): 0.9898, norm:0.3982, tok/sec: 183342.39, flops:192.47, batch-reuse:1
@ 5679 train 3.7884 , allloss: 3.7884, dt: 708.84ms, fracRes: 0.1895, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5994, norm(y): 0.9892, norm:0.3448, tok/sec: 184910.96, flops:194.12, batch-reuse:1
@ 5680 train 3.8731 , allloss: 3.8731, dt: 710.79ms, fracRes: 0.1893, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5990, norm(y): 0.9900, norm:0.3930, tok/sec: 184402.24, flops:193.59, batch-reuse:1
@ 5681 train 3.8011 , allloss: 3.8011, dt: 702.17ms, fracRes: 0.1903, norm(attn): 39.2500, norm(output): 0.4570, norm(x): 0.6124, norm(y): 0.9909, norm:0.3889, tok/sec: 186668.22, flops:195.96, batch-reuse:1
@ 5682 train 3.7849 , allloss: 3.7849, dt: 694.59ms, fracRes: 0.1914, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6089, norm(y): 0.9902, norm:0.4305, tok/sec: 188702.87, flops:198.10, batch-reuse:1
@ 5683 train 3.8347 , allloss: 3.8347, dt: 718.90ms, fracRes: 0.1889, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.5992, norm(y): 0.9897, norm:0.4197, tok/sec: 182324.03, flops:191.40, batch-reuse:1
@ 5684 train 3.8334 , allloss: 3.8334, dt: 700.87ms, fracRes: 0.1906, norm(attn): 39.0000, norm(output): 0.4512, norm(x): 0.6038, norm(y): 0.9892, norm:0.4108, tok/sec: 187012.57, flops:196.33, batch-reuse:1
@ 5685 train 3.8318 , allloss: 3.8318, dt: 705.99ms, fracRes: 0.1912, norm(attn): 39.0000, norm(output): 0.4551, norm(x): 0.6064, norm(y): 0.9902, norm:0.4254, tok/sec: 185657.56, flops:194.90, batch-reuse:1
@ 5686 train 3.7908 , allloss: 3.7908, dt: 703.61ms, fracRes: 0.1908, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6052, norm(y): 0.9902, norm:0.4738, tok/sec: 186285.35, flops:195.56, batch-reuse:1
@ 5687 train 3.8389 , allloss: 3.8389, dt: 700.76ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5952, norm(y): 0.9891, norm:0.4125, tok/sec: 187043.18, flops:196.36, batch-reuse:1
@ 5688 train 3.8252 , allloss: 3.8252, dt: 717.97ms, fracRes: 0.1916, norm(attn): 39.0000, norm(output): 0.4473, norm(x): 0.6024, norm(y): 0.9897, norm:0.4349, tok/sec: 182558.52, flops:191.65, batch-reuse:1
@ 5689 train 3.8369 , allloss: 3.8369, dt: 716.07ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5984, norm(y): 0.9898, norm:0.4009, tok/sec: 183044.79, flops:192.16, batch-reuse:1
@ 5690 train 3.7440 , allloss: 3.7440, dt: 712.77ms, fracRes: 0.1900, norm(attn): 39.2500, norm(output): 0.4590, norm(x): 0.6124, norm(y): 0.9910, norm:0.4024, tok/sec: 183891.88, flops:193.05, batch-reuse:1
@ 5691 train 3.8246 , allloss: 3.8246, dt: 702.68ms, fracRes: 0.1885, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6000, norm(y): 0.9901, norm:0.4215, tok/sec: 186530.27, flops:195.82, batch-reuse:1
@ 5692 train 3.7871 , allloss: 3.7871, dt: 706.10ms, fracRes: 0.1891, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5949, norm(y): 0.9886, norm:0.3807, tok/sec: 185628.29, flops:194.87, batch-reuse:1
@ 5693 train 3.8174 , allloss: 3.8174, dt: 707.81ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5970, norm(y): 0.9894, norm:0.4193, tok/sec: 185178.54, flops:194.40, batch-reuse:1
@ 5694 train 3.8095 , allloss: 3.8095, dt: 712.51ms, fracRes: 0.1884, norm(attn): 39.0000, norm(output): 0.4512, norm(x): 0.6038, norm(y): 0.9900, norm:0.3850, tok/sec: 183958.15, flops:193.12, batch-reuse:1
@ 5695 train 3.8069 , allloss: 3.8069, dt: 722.85ms, fracRes: 0.1878, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5941, norm(y): 0.9892, norm:0.4075, tok/sec: 181327.45, flops:190.36, batch-reuse:1
@ 5696 train 3.8230 , allloss: 3.8230, dt: 724.73ms, fracRes: 0.1875, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5862, norm(y): 0.9886, norm:0.3864, tok/sec: 180856.85, flops:189.86, batch-reuse:1
@ 5697 train 3.8299 , allloss: 3.8299, dt: 706.65ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.5984, norm(y): 0.9896, norm:0.3947, tok/sec: 185483.05, flops:194.72, batch-reuse:1
@ 5698 train 3.8651 , allloss: 3.8651, dt: 706.14ms, fracRes: 0.1890, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6021, norm(y): 0.9905, norm:0.4733, tok/sec: 185617.20, flops:194.86, batch-reuse:1
@ 5699 train 3.8865 , allloss: 3.8865, dt: 697.95ms, fracRes: 0.1901, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6075, norm(y): 0.9902, norm:0.4884, tok/sec: 187794.76, flops:197.15, batch-reuse:1
@ 5700 train 3.8718 , allloss: 3.8718, dt: 703.17ms, fracRes: 0.1897, norm(attn): 38.7500, norm(output): 0.4609, norm(x): 0.6166, norm(y): 0.9902, norm:0.4468, tok/sec: 186401.44, flops:195.68, batch-reuse:1
@ 5701 train 3.8050 , allloss: 3.8050, dt: 715.62ms, fracRes: 0.1880, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6024, norm(y): 0.9893, norm:0.4663, tok/sec: 183158.89, flops:192.28, batch-reuse:1
@ 5702 train 3.8603 , allloss: 3.8603, dt: 708.85ms, fracRes: 0.1879, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5972, norm(y): 0.9892, norm:0.4204, tok/sec: 184906.79, flops:194.12, batch-reuse:1
@ 5703 train 3.8550 , allloss: 3.8550, dt: 707.21ms, fracRes: 0.1883, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6065, norm(y): 0.9899, norm:0.3977, tok/sec: 185336.73, flops:194.57, batch-reuse:1
@ 5704 train 3.8097 , allloss: 3.8097, dt: 713.89ms, fracRes: 0.1888, norm(attn): 38.7500, norm(output): 0.4473, norm(x): 0.6013, norm(y): 0.9895, norm:0.4656, tok/sec: 183602.44, flops:192.75, batch-reuse:1
@ 5705 train 3.8240 , allloss: 3.8240, dt: 716.24ms, fracRes: 0.1878, norm(attn): 39.0000, norm(output): 0.4434, norm(x): 0.5950, norm(y): 0.9896, norm:0.3679, tok/sec: 183000.68, flops:192.11, batch-reuse:1
@ 5706 train 3.9046 , allloss: 3.9046, dt: 717.56ms, fracRes: 0.1878, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5916, norm(y): 0.9895, norm:0.4412, tok/sec: 182663.34, flops:191.76, batch-reuse:1
@ 5707 train 3.8264 , allloss: 3.8264, dt: 710.25ms, fracRes: 0.1885, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5981, norm(y): 0.9899, norm:0.3890, tok/sec: 184542.63, flops:193.73, batch-reuse:1
@ 5708 train 3.8285 , allloss: 3.8285, dt: 701.15ms, fracRes: 0.1880, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.6010, norm(y): 0.9895, norm:0.4135, tok/sec: 186937.92, flops:196.25, batch-reuse:1
@ 5709 train 3.7401 , allloss: 3.7401, dt: 713.17ms, fracRes: 0.1873, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.5966, norm(y): 0.9890, norm:0.4147, tok/sec: 183788.35, flops:192.94, batch-reuse:1
@ 5710 train 3.7872 , allloss: 3.7872, dt: 713.13ms, fracRes: 0.1869, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5892, norm(y): 0.9884, norm:0.4170, tok/sec: 183799.29, flops:192.95, batch-reuse:1
@ 5711 train 3.9134 , allloss: 3.9134, dt: 710.41ms, fracRes: 0.1877, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5941, norm(y): 0.9881, norm:0.4227, tok/sec: 184502.25, flops:193.69, batch-reuse:1
@ 5712 train 3.8360 , allloss: 3.8360, dt: 700.46ms, fracRes: 0.1874, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5933, norm(y): 0.9892, norm:0.4016, tok/sec: 187123.71, flops:196.44, batch-reuse:1
@ 5713 train 3.8411 , allloss: 3.8411, dt: 715.34ms, fracRes: 0.1883, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6004, norm(y): 0.9895, norm:0.4253, tok/sec: 183229.77, flops:192.35, batch-reuse:1
@ 5714 train 3.8694 , allloss: 3.8694, dt: 718.10ms, fracRes: 0.1884, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5930, norm(y): 0.9886, norm:0.3774, tok/sec: 182525.97, flops:191.62, batch-reuse:1
@ 5715 train 3.8733 , allloss: 3.8733, dt: 708.06ms, fracRes: 0.1876, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5918, norm(y): 0.9888, norm:0.3881, tok/sec: 185113.06, flops:194.33, batch-reuse:1
@ 5716 train 3.8419 , allloss: 3.8419, dt: 713.16ms, fracRes: 0.1876, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5886, norm(y): 0.9890, norm:0.4137, tok/sec: 183791.00, flops:192.94, batch-reuse:1
@ 5717 train 3.8540 , allloss: 3.8540, dt: 719.48ms, fracRes: 0.1886, norm(attn): 39.0000, norm(output): 0.4434, norm(x): 0.5969, norm(y): 0.9893, norm:0.3723, tok/sec: 182174.86, flops:191.25, batch-reuse:1
@ 5718 train 3.8216 , allloss: 3.8216, dt: 719.55ms, fracRes: 0.1891, norm(attn): 38.7500, norm(output): 0.4531, norm(x): 0.6078, norm(y): 0.9892, norm:0.4825, tok/sec: 182157.41, flops:191.23, batch-reuse:1
@ 5719 train 3.6691 , allloss: 3.6691, dt: 702.52ms, fracRes: 0.1889, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.5992, norm(y): 0.9890, norm:0.3855, tok/sec: 186574.46, flops:195.87, batch-reuse:1
@ 5720 train 3.7306 , allloss: 3.7306, dt: 713.34ms, fracRes: 0.1878, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5961, norm(y): 0.9880, norm:0.4085, tok/sec: 183744.86, flops:192.90, batch-reuse:1
@ 5721 train 3.6349 , allloss: 3.6349, dt: 712.39ms, fracRes: 0.1871, norm(attn): 39.0000, norm(output): 0.4492, norm(x): 0.6022, norm(y): 0.9883, norm:0.4002, tok/sec: 183990.35, flops:193.15, batch-reuse:1
@ 5722 train 3.8723 , allloss: 3.8723, dt: 711.70ms, fracRes: 0.1876, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6016, norm(y): 0.9887, norm:0.4797, tok/sec: 184168.30, flops:193.34, batch-reuse:1
@ 5723 train 3.9351 , allloss: 3.9351, dt: 710.94ms, fracRes: 0.1903, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6089, norm(y): 0.9906, norm:0.4299, tok/sec: 184365.32, flops:193.55, batch-reuse:1
@ 5724 train 3.7326 , allloss: 3.7326, dt: 713.51ms, fracRes: 0.1887, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5977, norm(y): 0.9893, norm:0.4016, tok/sec: 183699.31, flops:192.85, batch-reuse:1
@ 5725 train 4.0921 , allloss: 4.0921, dt: 700.44ms, fracRes: 0.1904, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5998, norm(y): 0.9903, norm:0.6075, tok/sec: 187126.90, flops:196.45, batch-reuse:1
@ 5726 train 3.7447 , allloss: 3.7447, dt: 706.04ms, fracRes: 0.1896, norm(attn): 38.7500, norm(output): 0.4473, norm(x): 0.6015, norm(y): 0.9891, norm:0.5144, tok/sec: 185643.71, flops:194.89, batch-reuse:1
@ 5727 train 3.7234 , allloss: 3.7234, dt: 704.21ms, fracRes: 0.1887, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5966, norm(y): 0.9889, norm:0.4701, tok/sec: 186125.53, flops:195.39, batch-reuse:1
@ 5728 train 3.7022 , allloss: 3.7022, dt: 700.96ms, fracRes: 0.1878, norm(attn): 39.0000, norm(output): 0.4414, norm(x): 0.5921, norm(y): 0.9888, norm:0.4214, tok/sec: 186988.40, flops:196.30, batch-reuse:1
@ 5729 train 3.7616 , allloss: 3.7616, dt: 712.09ms, fracRes: 0.1879, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5905, norm(y): 0.9881, norm:0.4455, tok/sec: 184065.57, flops:193.23, batch-reuse:1
@ 5730 train 3.8389 , allloss: 3.8389, dt: 709.18ms, fracRes: 0.1874, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5938, norm(y): 0.9888, norm:0.4677, tok/sec: 184823.06, flops:194.03, batch-reuse:1
@ 5731 train 3.8099 , allloss: 3.8099, dt: 705.59ms, fracRes: 0.1880, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.5991, norm(y): 0.9881, norm:0.3806, tok/sec: 185761.77, flops:195.01, batch-reuse:1
@ 5732 train 3.6690 , allloss: 3.6690, dt: 711.25ms, fracRes: 0.1885, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6002, norm(y): 0.9877, norm:0.4247, tok/sec: 184282.88, flops:193.46, batch-reuse:1
@ 5733 train 3.7866 , allloss: 3.7866, dt: 695.80ms, fracRes: 0.1889, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5997, norm(y): 0.9890, norm:0.4335, tok/sec: 188377.24, flops:197.76, batch-reuse:1
@ 5734 train 3.7943 , allloss: 3.7943, dt: 715.94ms, fracRes: 0.1902, norm(attn): 38.2500, norm(output): 0.4551, norm(x): 0.6090, norm(y): 0.9900, norm:0.4431, tok/sec: 183077.34, flops:192.19, batch-reuse:1
@ 5735 train 3.7589 , allloss: 3.7589, dt: 705.79ms, fracRes: 0.1882, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5946, norm(y): 0.9885, norm:0.4103, tok/sec: 185710.37, flops:194.96, batch-reuse:1
@ 5736 train 3.7266 , allloss: 3.7266, dt: 709.08ms, fracRes: 0.1885, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.5987, norm(y): 0.9882, norm:0.4389, tok/sec: 184846.67, flops:194.05, batch-reuse:1
@ 5737 train 3.8715 , allloss: 3.8715, dt: 720.88ms, fracRes: 0.1886, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5970, norm(y): 0.9885, norm:0.4829, tok/sec: 181821.73, flops:190.88, batch-reuse:1
@ 5738 train 3.7934 , allloss: 3.7934, dt: 719.64ms, fracRes: 0.1877, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5942, norm(y): 0.9891, norm:0.4327, tok/sec: 182135.69, flops:191.21, batch-reuse:1
@ 5739 train 3.7444 , allloss: 3.7444, dt: 719.27ms, fracRes: 0.1890, norm(attn): 39.0000, norm(output): 0.4473, norm(x): 0.6021, norm(y): 0.9891, norm:0.4409, tok/sec: 182228.60, flops:191.30, batch-reuse:1
@ 5740 train 3.7208 , allloss: 3.7208, dt: 711.29ms, fracRes: 0.1881, norm(attn): 38.7500, norm(output): 0.4531, norm(x): 0.6068, norm(y): 0.9897, norm:0.4213, tok/sec: 184272.81, flops:193.45, batch-reuse:1
@ 5741 train 3.6958 , allloss: 3.6958, dt: 702.77ms, fracRes: 0.1895, norm(attn): 39.0000, norm(output): 0.4512, norm(x): 0.6073, norm(y): 0.9898, norm:0.4094, tok/sec: 186507.30, flops:195.80, batch-reuse:1
@ 5742 train 3.7801 , allloss: 3.7801, dt: 711.90ms, fracRes: 0.1889, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.6048, norm(y): 0.9905, norm:0.3780, tok/sec: 184115.13, flops:193.28, batch-reuse:1
@ 5743 train 3.8106 , allloss: 3.8106, dt: 714.16ms, fracRes: 0.1907, norm(attn): 39.0000, norm(output): 0.4551, norm(x): 0.6092, norm(y): 0.9899, norm:0.4410, tok/sec: 183532.38, flops:192.67, batch-reuse:1
@ 5744 train 3.7278 , allloss: 3.7278, dt: 709.08ms, fracRes: 0.1894, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6010, norm(y): 0.9898, norm:0.4422, tok/sec: 184848.66, flops:194.05, batch-reuse:1
@ 5745 train 3.7290 , allloss: 3.7290, dt: 704.72ms, fracRes: 0.1911, norm(attn): 39.0000, norm(output): 0.4629, norm(x): 0.6113, norm(y): 0.9890, norm:0.4251, tok/sec: 185991.97, flops:195.25, batch-reuse:1
@ 5746 train 3.8198 , allloss: 3.8198, dt: 706.56ms, fracRes: 0.1911, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6056, norm(y): 0.9897, norm:0.3980, tok/sec: 185507.71, flops:194.75, batch-reuse:1
@ 5747 train 3.7538 , allloss: 3.7538, dt: 702.60ms, fracRes: 0.1904, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5981, norm(y): 0.9891, norm:0.3820, tok/sec: 186552.87, flops:195.84, batch-reuse:1
@ 5748 train 3.6760 , allloss: 3.6760, dt: 693.60ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5959, norm(y): 0.9890, norm:0.3763, tok/sec: 188973.62, flops:198.38, batch-reuse:1
@ 5749 train 3.7651 , allloss: 3.7651, dt: 711.94ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5943, norm(y): 0.9894, norm:0.4201, tok/sec: 184106.01, flops:193.27, batch-reuse:1
@ 5750 train 3.7244 , allloss: 3.7244, dt: 713.63ms, fracRes: 0.1881, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.6012, norm(y): 0.9903, norm:0.3946, tok/sec: 183670.40, flops:192.82, batch-reuse:1
@ 5751 train 3.9376 , allloss: 3.9376, dt: 696.38ms, fracRes: 0.1879, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5988, norm(y): 0.9911, norm:0.4566, tok/sec: 188219.30, flops:197.59, batch-reuse:1
@ 5752 train 3.8236 , allloss: 3.8236, dt: 706.26ms, fracRes: 0.1885, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6075, norm(y): 0.9915, norm:0.4630, tok/sec: 185585.99, flops:194.83, batch-reuse:1
@ 5753 train 3.7007 , allloss: 3.7007, dt: 703.48ms, fracRes: 0.1861, norm(attn): 39.7500, norm(output): 0.4512, norm(x): 0.6020, norm(y): 0.9897, norm:0.4813, tok/sec: 186319.50, flops:195.60, batch-reuse:1
@ 5754 train 3.7545 , allloss: 3.7545, dt: 708.12ms, fracRes: 0.1851, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5956, norm(y): 0.9886, norm:0.4309, tok/sec: 185098.54, flops:194.32, batch-reuse:1
@ 5755 train 3.8021 , allloss: 3.8021, dt: 701.43ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.5962, norm(y): 0.9894, norm:0.4033, tok/sec: 186865.10, flops:196.17, batch-reuse:1
@ 5756 train 3.8222 , allloss: 3.8222, dt: 706.02ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6016, norm(y): 0.9901, norm:0.4451, tok/sec: 185648.66, flops:194.89, batch-reuse:1
@ 5757 train 3.7327 , allloss: 3.7327, dt: 712.37ms, fracRes: 0.1905, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.6051, norm(y): 0.9896, norm:0.4221, tok/sec: 183995.28, flops:193.16, batch-reuse:1
@ 5758 train 3.8058 , allloss: 3.8058, dt: 710.33ms, fracRes: 0.1889, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6044, norm(y): 0.9886, norm:0.4513, tok/sec: 184522.87, flops:193.71, batch-reuse:1
@ 5759 train 3.6792 , allloss: 3.6792, dt: 699.74ms, fracRes: 0.1883, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.6020, norm(y): 0.9879, norm:0.4583, tok/sec: 187315.75, flops:196.64, batch-reuse:1
@ 5760 train 3.7571 , allloss: 3.7571, dt: 705.54ms, fracRes: 0.1875, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5967, norm(y): 0.9882, norm:0.4343, tok/sec: 185775.76, flops:195.03, batch-reuse:1
@ 5761 train 3.5896 , allloss: 3.5896, dt: 707.31ms, fracRes: 0.1881, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5935, norm(y): 0.9882, norm:0.4328, tok/sec: 185310.12, flops:194.54, batch-reuse:1
@ 5762 train 3.7055 , allloss: 3.7055, dt: 713.03ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5978, norm(y): 0.9888, norm:0.3871, tok/sec: 183823.26, flops:192.98, batch-reuse:1
@ 5763 train 3.6435 , allloss: 3.6435, dt: 707.27ms, fracRes: 0.1883, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5960, norm(y): 0.9875, norm:0.4233, tok/sec: 185321.67, flops:194.55, batch-reuse:1
@ 5764 train 3.8499 , allloss: 3.8499, dt: 711.52ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5975, norm(y): 0.9887, norm:0.3863, tok/sec: 184214.95, flops:193.39, batch-reuse:1
@ 5765 train 3.8015 , allloss: 3.8015, dt: 718.84ms, fracRes: 0.1898, norm(attn): 39.7500, norm(output): 0.4512, norm(x): 0.6053, norm(y): 0.9888, norm:0.4303, tok/sec: 182339.45, flops:191.42, batch-reuse:1
@ 5766 train 3.9726 , allloss: 3.9726, dt: 692.68ms, fracRes: 0.1918, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6129, norm(y): 0.9903, norm:0.3981, tok/sec: 189223.52, flops:198.65, batch-reuse:1
@ 5767 train 4.0215 , allloss: 4.0215, dt: 707.17ms, fracRes: 0.1905, norm(attn): 39.7500, norm(output): 0.4609, norm(x): 0.6149, norm(y): 0.9904, norm:0.4314, tok/sec: 185346.35, flops:194.58, batch-reuse:1
@ 5768 train 3.9137 , allloss: 3.9137, dt: 707.35ms, fracRes: 0.1911, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6090, norm(y): 0.9883, norm:0.4439, tok/sec: 185300.31, flops:194.53, batch-reuse:1
@ 5769 train 4.0267 , allloss: 4.0267, dt: 708.99ms, fracRes: 0.1920, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6132, norm(y): 0.9890, norm:0.4699, tok/sec: 184872.59, flops:194.08, batch-reuse:1
@ 5770 train 4.0577 , allloss: 4.0577, dt: 706.38ms, fracRes: 0.1905, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.6019, norm(y): 0.9891, norm:0.4872, tok/sec: 185555.49, flops:194.80, batch-reuse:1
@ 5771 train 3.9187 , allloss: 3.9187, dt: 695.72ms, fracRes: 0.1919, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.6044, norm(y): 0.9882, norm:0.5038, tok/sec: 188396.74, flops:197.78, batch-reuse:1
@ 5772 train 3.9205 , allloss: 3.9205, dt: 699.01ms, fracRes: 0.1886, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.6021, norm(y): 0.9885, norm:0.4525, tok/sec: 187511.00, flops:196.85, batch-reuse:1
@ 5773 train 3.8598 , allloss: 3.8598, dt: 703.27ms, fracRes: 0.1865, norm(attn): 39.7500, norm(output): 0.4531, norm(x): 0.6038, norm(y): 0.9868, norm:0.5269, tok/sec: 186375.53, flops:195.66, batch-reuse:1
@ 5774 train 3.9247 , allloss: 3.9247, dt: 703.72ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.6021, norm(y): 0.9865, norm:0.4413, tok/sec: 186257.01, flops:195.53, batch-reuse:1
@ 5775 train 4.0191 , allloss: 4.0191, dt: 708.80ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5975, norm(y): 0.9871, norm:0.5248, tok/sec: 184920.54, flops:194.13, batch-reuse:1
@ 5776 train 3.9052 , allloss: 3.9052, dt: 707.68ms, fracRes: 0.1906, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.6041, norm(y): 0.9866, norm:0.3986, tok/sec: 185213.04, flops:194.44, batch-reuse:1
@ 5777 train 3.8337 , allloss: 3.8337, dt: 714.13ms, fracRes: 0.1906, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.6044, norm(y): 0.9869, norm:0.5010, tok/sec: 183539.79, flops:192.68, batch-reuse:1
@ 5778 train 3.8460 , allloss: 3.8460, dt: 713.43ms, fracRes: 0.1910, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6052, norm(y): 0.9856, norm:0.4086, tok/sec: 183720.36, flops:192.87, batch-reuse:1
@ 5779 train 4.0025 , allloss: 4.0025, dt: 705.53ms, fracRes: 0.1904, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5952, norm(y): 0.9850, norm:0.4577, tok/sec: 185778.21, flops:195.03, batch-reuse:1
@ 5780 train 3.9729 , allloss: 3.9729, dt: 692.01ms, fracRes: 0.1924, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6061, norm(y): 0.9860, norm:0.5892, tok/sec: 189408.86, flops:198.84, batch-reuse:1
@ 5781 train 3.8693 , allloss: 3.8693, dt: 706.10ms, fracRes: 0.1909, norm(attn): 39.5000, norm(output): 0.4531, norm(x): 0.6101, norm(y): 0.9861, norm:0.5176, tok/sec: 185626.79, flops:194.87, batch-reuse:1
@ 5782 train 3.9258 , allloss: 3.9258, dt: 703.54ms, fracRes: 0.1902, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6069, norm(y): 0.9867, norm:0.4686, tok/sec: 186302.45, flops:195.58, batch-reuse:1
@ 5783 train 3.8339 , allloss: 3.8339, dt: 700.68ms, fracRes: 0.1893, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.6031, norm(y): 0.9866, norm:0.4871, tok/sec: 187064.31, flops:196.38, batch-reuse:1
@ 5784 train 3.9079 , allloss: 3.9079, dt: 706.85ms, fracRes: 0.1892, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5984, norm(y): 0.9866, norm:0.4373, tok/sec: 185431.69, flops:194.67, batch-reuse:1
@ 5785 train 3.9306 , allloss: 3.9306, dt: 708.10ms, fracRes: 0.1914, norm(attn): 39.7500, norm(output): 0.4551, norm(x): 0.6134, norm(y): 0.9881, norm:0.4803, tok/sec: 185103.28, flops:194.32, batch-reuse:1
@ 5786 train 3.8845 , allloss: 3.8845, dt: 709.98ms, fracRes: 0.1911, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6072, norm(y): 0.9877, norm:0.4582, tok/sec: 184613.83, flops:193.81, batch-reuse:1
@ 5787 train 3.9006 , allloss: 3.9006, dt: 706.30ms, fracRes: 0.1909, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6049, norm(y): 0.9880, norm:0.4583, tok/sec: 185576.66, flops:194.82, batch-reuse:1
@ 5788 train 3.9302 , allloss: 3.9302, dt: 705.35ms, fracRes: 0.1891, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5982, norm(y): 0.9873, norm:0.4415, tok/sec: 185825.43, flops:195.08, batch-reuse:1
@ 5789 train 3.8534 , allloss: 3.8534, dt: 707.03ms, fracRes: 0.1890, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5958, norm(y): 0.9847, norm:0.3801, tok/sec: 185383.23, flops:194.62, batch-reuse:1
@ 5790 train 3.9069 , allloss: 3.9069, dt: 706.77ms, fracRes: 0.1897, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5979, norm(y): 0.9843, norm:0.4466, tok/sec: 185452.58, flops:194.69, batch-reuse:1
@ 5791 train 3.9314 , allloss: 3.9314, dt: 698.17ms, fracRes: 0.1910, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6046, norm(y): 0.9846, norm:0.3897, tok/sec: 187736.14, flops:197.09, batch-reuse:1
@ 5792 train 4.0197 , allloss: 4.0197, dt: 708.10ms, fracRes: 0.1912, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6120, norm(y): 0.9860, norm:0.4488, tok/sec: 185104.90, flops:194.32, batch-reuse:1
@ 5793 train 3.8924 , allloss: 3.8924, dt: 728.16ms, fracRes: 0.1931, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6092, norm(y): 0.9843, norm:0.4614, tok/sec: 180005.13, flops:188.97, batch-reuse:1
@ 5794 train 3.8338 , allloss: 3.8338, dt: 724.80ms, fracRes: 0.1912, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6027, norm(y): 0.9822, norm:0.4071, tok/sec: 180838.29, flops:189.84, batch-reuse:1
@ 5795 train 3.8622 , allloss: 3.8622, dt: 723.19ms, fracRes: 0.1893, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5981, norm(y): 0.9817, norm:0.4424, tok/sec: 181240.35, flops:190.27, batch-reuse:1
@ 5796 train 3.9570 , allloss: 3.9570, dt: 723.73ms, fracRes: 0.1881, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5986, norm(y): 0.9823, norm:0.4902, tok/sec: 181106.85, flops:190.13, batch-reuse:1
@ 5797 train 3.8828 , allloss: 3.8828, dt: 729.25ms, fracRes: 0.1869, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5896, norm(y): 0.9816, norm:0.4004, tok/sec: 179734.94, flops:188.69, batch-reuse:1
@ 5798 train 3.9335 , allloss: 3.9335, dt: 728.42ms, fracRes: 0.1871, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5930, norm(y): 0.9812, norm:0.4227, tok/sec: 179939.79, flops:188.90, batch-reuse:1
@ 5799 train 3.7654 , allloss: 3.7654, dt: 709.49ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5945, norm(y): 0.9801, norm:0.4066, tok/sec: 184741.82, flops:193.94, batch-reuse:1
@ 5800 train 3.8550 , allloss: 3.8550, dt: 710.03ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5963, norm(y): 0.9810, norm:0.4267, tok/sec: 184599.89, flops:193.79, batch-reuse:1
@ 5801 train 3.8823 , allloss: 3.8823, dt: 706.62ms, fracRes: 0.1909, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6057, norm(y): 0.9794, norm:0.4273, tok/sec: 185491.19, flops:194.73, batch-reuse:1
@ 5802 train 4.0526 , allloss: 4.0526, dt: 708.17ms, fracRes: 0.1909, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6066, norm(y): 0.9797, norm:0.4628, tok/sec: 185084.58, flops:194.30, batch-reuse:1
@ 5803 train 3.8501 , allloss: 3.8501, dt: 707.90ms, fracRes: 0.1917, norm(attn): 39.0000, norm(output): 0.4492, norm(x): 0.6069, norm(y): 0.9794, norm:0.4375, tok/sec: 185155.15, flops:194.38, batch-reuse:1
@ 5804 train 4.0022 , allloss: 4.0022, dt: 710.35ms, fracRes: 0.1920, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6054, norm(y): 0.9794, norm:0.4174, tok/sec: 184518.23, flops:193.71, batch-reuse:1
@ 5805 train 4.0001 , allloss: 4.0001, dt: 711.77ms, fracRes: 0.1897, norm(attn): 38.7500, norm(output): 0.4473, norm(x): 0.6003, norm(y): 0.9764, norm:0.4820, tok/sec: 184149.61, flops:193.32, batch-reuse:1
@ 5806 train 3.8550 , allloss: 3.8550, dt: 709.12ms, fracRes: 0.1908, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.6001, norm(y): 0.9700, norm:0.3717, tok/sec: 184837.23, flops:194.04, batch-reuse:1
@ 5807 train 3.8490 , allloss: 3.8490, dt: 705.32ms, fracRes: 0.1894, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6002, norm(y): 0.9666, norm:0.4362, tok/sec: 185833.47, flops:195.09, batch-reuse:1
@ 5808 train 3.8662 , allloss: 3.8662, dt: 716.36ms, fracRes: 0.1878, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5987, norm(y): 0.9648, norm:0.4271, tok/sec: 182969.25, flops:192.08, batch-reuse:1
@ 5809 train 3.9182 , allloss: 3.9182, dt: 714.77ms, fracRes: 0.1869, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5925, norm(y): 0.9536, norm:0.4142, tok/sec: 183375.84, flops:192.51, batch-reuse:1
@ 5810 train 3.9454 , allloss: 3.9454, dt: 705.55ms, fracRes: 0.1886, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5982, norm(y): 0.9648, norm:0.4437, tok/sec: 185774.07, flops:195.03, batch-reuse:1
@ 5811 train 3.9285 , allloss: 3.9285, dt: 708.28ms, fracRes: 0.1893, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6038, norm(y): 0.9755, norm:0.4207, tok/sec: 185056.61, flops:194.27, batch-reuse:1
@ 5812 train 3.8865 , allloss: 3.8865, dt: 704.59ms, fracRes: 0.1895, norm(attn): 39.0000, norm(output): 0.4473, norm(x): 0.6030, norm(y): 0.9805, norm:0.4499, tok/sec: 186026.59, flops:195.29, batch-reuse:1
@ 5813 train 3.8911 , allloss: 3.8911, dt: 702.78ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5980, norm(y): 0.9834, norm:0.4102, tok/sec: 186504.26, flops:195.79, batch-reuse:1
@ 5814 train 3.9269 , allloss: 3.9269, dt: 704.56ms, fracRes: 0.1905, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6006, norm(y): 0.9850, norm:0.4093, tok/sec: 186034.14, flops:195.30, batch-reuse:1
@ 5815 train 3.8779 , allloss: 3.8779, dt: 725.79ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.6001, norm(y): 0.9868, norm:0.3793, tok/sec: 180593.42, flops:189.59, batch-reuse:1
@ 5816 train 3.8406 , allloss: 3.8406, dt: 712.52ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5967, norm(y): 0.9881, norm:0.3915, tok/sec: 183956.06, flops:193.12, batch-reuse:1
@ 5817 train 3.9129 , allloss: 3.9129, dt: 717.98ms, fracRes: 0.1887, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5937, norm(y): 0.9889, norm:0.4365, tok/sec: 182557.79, flops:191.65, batch-reuse:1
@ 5818 train 4.0141 , allloss: 4.0141, dt: 719.65ms, fracRes: 0.1897, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.6021, norm(y): 0.9904, norm:0.4644, tok/sec: 182131.83, flops:191.20, batch-reuse:1
@ 5819 train 3.9044 , allloss: 3.9044, dt: 696.38ms, fracRes: 0.1895, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5967, norm(y): 0.9890, norm:0.4174, tok/sec: 188219.10, flops:197.59, batch-reuse:1
@ 5820 train 3.8679 , allloss: 3.8679, dt: 694.45ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5954, norm(y): 0.9884, norm:0.4590, tok/sec: 188742.46, flops:198.14, batch-reuse:1
@ 5821 train 3.8800 , allloss: 3.8800, dt: 701.22ms, fracRes: 0.1895, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5950, norm(y): 0.9873, norm:0.3908, tok/sec: 186920.31, flops:196.23, batch-reuse:1
@ 5822 train 3.8358 , allloss: 3.8358, dt: 704.56ms, fracRes: 0.1896, norm(attn): 39.7500, norm(output): 0.4492, norm(x): 0.6020, norm(y): 0.9882, norm:0.4476, tok/sec: 186034.14, flops:195.30, batch-reuse:1
@ 5823 train 3.8790 , allloss: 3.8790, dt: 696.53ms, fracRes: 0.1896, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5985, norm(y): 0.9874, norm:0.3642, tok/sec: 188179.67, flops:197.55, batch-reuse:1
@ 5824 train 3.9039 , allloss: 3.9039, dt: 708.65ms, fracRes: 0.1886, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5966, norm(y): 0.9876, norm:0.4249, tok/sec: 184960.48, flops:194.17, batch-reuse:1
@ 5825 train 3.8701 , allloss: 3.8701, dt: 713.80ms, fracRes: 0.1888, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6036, norm(y): 0.9877, norm:0.4418, tok/sec: 183625.74, flops:192.77, batch-reuse:1
@ 5826 train 3.9167 , allloss: 3.9167, dt: 711.40ms, fracRes: 0.1884, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5955, norm(y): 0.9880, norm:0.4184, tok/sec: 184245.27, flops:193.42, batch-reuse:1
@ 5827 train 3.8666 , allloss: 3.8666, dt: 712.76ms, fracRes: 0.1876, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5954, norm(y): 0.9879, norm:0.3780, tok/sec: 183893.79, flops:193.05, batch-reuse:1
@ 5828 train 3.8735 , allloss: 3.8735, dt: 713.49ms, fracRes: 0.1866, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5963, norm(y): 0.9878, norm:0.4126, tok/sec: 183705.08, flops:192.85, batch-reuse:1
@ 5829 train 3.9485 , allloss: 3.9485, dt: 717.36ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6011, norm(y): 0.9886, norm:0.4319, tok/sec: 182714.88, flops:191.81, batch-reuse:1
@ 5830 train 3.8872 , allloss: 3.8872, dt: 703.75ms, fracRes: 0.1894, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5973, norm(y): 0.9876, norm:0.4384, tok/sec: 186246.98, flops:195.52, batch-reuse:1
@ 5831 train 3.9242 , allloss: 3.9242, dt: 706.40ms, fracRes: 0.1904, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6050, norm(y): 0.9885, norm:0.4046, tok/sec: 185548.97, flops:194.79, batch-reuse:1
@ 5832 train 3.8874 , allloss: 3.8874, dt: 712.72ms, fracRes: 0.1897, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5991, norm(y): 0.9878, norm:0.3991, tok/sec: 183903.69, flops:193.06, batch-reuse:1
@ 5833 train 3.9263 , allloss: 3.9263, dt: 704.43ms, fracRes: 0.1900, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5983, norm(y): 0.9881, norm:0.3695, tok/sec: 186068.77, flops:195.34, batch-reuse:1
@ 5834 train 3.9121 , allloss: 3.9121, dt: 711.51ms, fracRes: 0.1893, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5971, norm(y): 0.9878, norm:0.3900, tok/sec: 184217.42, flops:193.39, batch-reuse:1
@ 5835 train 3.8717 , allloss: 3.8717, dt: 710.16ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5995, norm(y): 0.9872, norm:0.3672, tok/sec: 184566.98, flops:193.76, batch-reuse:1
@ 5836 train 3.8100 , allloss: 3.8100, dt: 703.74ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5949, norm(y): 0.9868, norm:0.3812, tok/sec: 186251.08, flops:195.53, batch-reuse:1
@ 5837 train 3.9714 , allloss: 3.9714, dt: 707.66ms, fracRes: 0.1910, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5986, norm(y): 0.9874, norm:0.3949, tok/sec: 185218.65, flops:194.44, batch-reuse:1
@ 5838 train 3.7838 , allloss: 3.7838, dt: 708.27ms, fracRes: 0.1924, norm(attn): 39.2500, norm(output): 0.4609, norm(x): 0.6176, norm(y): 0.9871, norm:0.4000, tok/sec: 185059.54, flops:194.28, batch-reuse:1
@ 5839 train 3.8293 , allloss: 3.8293, dt: 705.45ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6058, norm(y): 0.9876, norm:0.4652, tok/sec: 185798.05, flops:195.05, batch-reuse:1
@ 5840 train 3.8803 , allloss: 3.8803, dt: 708.60ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5921, norm(y): 0.9866, norm:0.4131, tok/sec: 184972.05, flops:194.18, batch-reuse:1
@ 5841 train 3.9355 , allloss: 3.9355, dt: 706.71ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5893, norm(y): 0.9859, norm:0.4145, tok/sec: 185466.91, flops:194.70, batch-reuse:1
@ 5842 train 3.9747 , allloss: 3.9747, dt: 702.55ms, fracRes: 0.1881, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5956, norm(y): 0.9854, norm:0.3996, tok/sec: 186565.28, flops:195.86, batch-reuse:1
@ 5843 train 3.8473 , allloss: 3.8473, dt: 711.89ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6043, norm(y): 0.9845, norm:0.5181, tok/sec: 184117.17, flops:193.29, batch-reuse:1
@ 5844 train 3.8434 , allloss: 3.8434, dt: 714.80ms, fracRes: 0.1884, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5999, norm(y): 0.9815, norm:0.4152, tok/sec: 183368.50, flops:192.50, batch-reuse:1
@ 5845 train 3.8463 , allloss: 3.8463, dt: 705.60ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.6005, norm(y): 0.9794, norm:0.4479, tok/sec: 185759.57, flops:195.01, batch-reuse:1
@ 5846 train 3.8993 , allloss: 3.8993, dt: 699.76ms, fracRes: 0.1880, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5942, norm(y): 0.9744, norm:0.4321, tok/sec: 187309.24, flops:196.64, batch-reuse:1
@ 5847 train 3.8048 , allloss: 3.8048, dt: 706.07ms, fracRes: 0.1876, norm(attn): 38.2500, norm(output): 0.4414, norm(x): 0.5935, norm(y): 0.9672, norm:0.3952, tok/sec: 185635.62, flops:194.88, batch-reuse:1
@ 5848 train 3.8800 , allloss: 3.8800, dt: 713.57ms, fracRes: 0.1882, norm(attn): 38.0000, norm(output): 0.4414, norm(x): 0.5919, norm(y): 0.9615, norm:0.4358, tok/sec: 183685.87, flops:192.83, batch-reuse:1
@ 5849 train 3.8619 , allloss: 3.8619, dt: 710.69ms, fracRes: 0.1869, norm(attn): 38.7500, norm(output): 0.4395, norm(x): 0.5905, norm(y): 0.9733, norm:0.3949, tok/sec: 184429.09, flops:193.61, batch-reuse:1
@ 5850 train 3.9341 , allloss: 3.9341, dt: 700.74ms, fracRes: 0.1876, norm(attn): 38.7500, norm(output): 0.4375, norm(x): 0.5913, norm(y): 0.9798, norm:0.3861, tok/sec: 187048.97, flops:196.36, batch-reuse:1
@ 5851 train 3.9419 , allloss: 3.9419, dt: 712.17ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5936, norm(y): 0.9823, norm:0.4003, tok/sec: 184046.84, flops:193.21, batch-reuse:1
@ 5852 train 3.9337 , allloss: 3.9337, dt: 703.01ms, fracRes: 0.1911, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5997, norm(y): 0.9838, norm:0.4037, tok/sec: 186445.25, flops:195.73, batch-reuse:1
@ 5853 train 3.8618 , allloss: 3.8618, dt: 701.53ms, fracRes: 0.1911, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5954, norm(y): 0.9850, norm:0.4037, tok/sec: 186838.49, flops:196.14, batch-reuse:1
@ 5854 train 3.9095 , allloss: 3.9095, dt: 703.23ms, fracRes: 0.1907, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5959, norm(y): 0.9864, norm:0.4098, tok/sec: 186385.64, flops:195.67, batch-reuse:1
@ 5855 train 4.0338 , allloss: 4.0338, dt: 706.69ms, fracRes: 0.1898, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6017, norm(y): 0.9877, norm:0.4467, tok/sec: 185472.23, flops:194.71, batch-reuse:1
@ 5856 train 3.9882 , allloss: 3.9882, dt: 696.52ms, fracRes: 0.1910, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6027, norm(y): 0.9884, norm:0.4241, tok/sec: 188181.67, flops:197.55, batch-reuse:1
@ 5857 train 3.9554 , allloss: 3.9554, dt: 715.80ms, fracRes: 0.1934, norm(attn): 39.7500, norm(output): 0.4688, norm(x): 0.6218, norm(y): 0.9894, norm:0.6195, tok/sec: 183111.61, flops:192.23, batch-reuse:1
@ 5858 train 3.8467 , allloss: 3.8467, dt: 693.54ms, fracRes: 0.1919, norm(attn): 39.5000, norm(output): 0.4570, norm(x): 0.6121, norm(y): 0.9889, norm:0.5327, tok/sec: 188990.64, flops:198.40, batch-reuse:1
@ 5859 train 3.8480 , allloss: 3.8480, dt: 708.35ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5977, norm(y): 0.9880, norm:0.4324, tok/sec: 185037.74, flops:194.25, batch-reuse:1
@ 5860 train 3.8471 , allloss: 3.8471, dt: 711.63ms, fracRes: 0.1897, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5967, norm(y): 0.9876, norm:0.4163, tok/sec: 184184.65, flops:193.36, batch-reuse:1
@ 5861 train 3.8737 , allloss: 3.8737, dt: 695.12ms, fracRes: 0.1892, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5905, norm(y): 0.9879, norm:0.4347, tok/sec: 188561.39, flops:197.95, batch-reuse:1
@ 5862 train 3.7997 , allloss: 3.7997, dt: 703.20ms, fracRes: 0.1901, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6033, norm(y): 0.9892, norm:0.4532, tok/sec: 186392.72, flops:195.68, batch-reuse:1
@ 5863 train 3.7651 , allloss: 3.7651, dt: 711.80ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5951, norm(y): 0.9880, norm:0.4018, tok/sec: 184142.14, flops:193.31, batch-reuse:1
@ 5864 train 3.9501 , allloss: 3.9501, dt: 715.69ms, fracRes: 0.1919, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6031, norm(y): 0.9887, norm:0.4278, tok/sec: 183139.61, flops:192.26, batch-reuse:1
@ 5865 train 3.9285 , allloss: 3.9285, dt: 713.32ms, fracRes: 0.1910, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5962, norm(y): 0.9879, norm:0.4361, tok/sec: 183750.15, flops:192.90, batch-reuse:1
@ 5866 train 3.8212 , allloss: 3.8212, dt: 696.23ms, fracRes: 0.1910, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5988, norm(y): 0.9883, norm:0.4424, tok/sec: 188259.13, flops:197.63, batch-reuse:1
@ 5867 train 3.7725 , allloss: 3.7725, dt: 711.76ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5918, norm(y): 0.9884, norm:0.3963, tok/sec: 184151.52, flops:193.32, batch-reuse:1
@ 5868 train 3.8682 , allloss: 3.8682, dt: 704.19ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5914, norm(y): 0.9884, norm:0.4145, tok/sec: 186132.40, flops:195.40, batch-reuse:1
@ 5869 train 3.8870 , allloss: 3.8870, dt: 700.84ms, fracRes: 0.1874, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5875, norm(y): 0.9882, norm:0.5168, tok/sec: 187021.35, flops:196.34, batch-reuse:1
@ 5870 train 3.8809 , allloss: 3.8809, dt: 703.37ms, fracRes: 0.1873, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5892, norm(y): 0.9879, norm:0.4220, tok/sec: 186347.92, flops:195.63, batch-reuse:1
@ 5871 train 3.8129 , allloss: 3.8129, dt: 715.50ms, fracRes: 0.1879, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5941, norm(y): 0.9875, norm:0.4307, tok/sec: 183189.47, flops:192.31, batch-reuse:1
@ 5872 train 3.8176 , allloss: 3.8176, dt: 708.79ms, fracRes: 0.1896, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5974, norm(y): 0.9881, norm:0.3960, tok/sec: 184923.96, flops:194.13, batch-reuse:1
@ 5873 train 3.8567 , allloss: 3.8567, dt: 709.76ms, fracRes: 0.1898, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5992, norm(y): 0.9901, norm:0.4086, tok/sec: 184670.70, flops:193.87, batch-reuse:1
@ 5874 train 3.7378 , allloss: 3.7378, dt: 704.52ms, fracRes: 0.1885, norm(attn): 39.7500, norm(output): 0.4355, norm(x): 0.5877, norm(y): 0.9887, norm:0.4207, tok/sec: 186043.77, flops:195.31, batch-reuse:1
@ 5875 train 3.8360 , allloss: 3.8360, dt: 699.73ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5934, norm(y): 0.9889, norm:0.3818, tok/sec: 187316.84, flops:196.65, batch-reuse:1
@ 5876 train 3.8482 , allloss: 3.8482, dt: 703.21ms, fracRes: 0.1870, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.5944, norm(y): 0.9889, norm:0.3935, tok/sec: 186391.26, flops:195.67, batch-reuse:1
@ 5877 train 3.8908 , allloss: 3.8908, dt: 699.92ms, fracRes: 0.1869, norm(attn): 39.7500, norm(output): 0.4395, norm(x): 0.5901, norm(y): 0.9884, norm:0.3934, tok/sec: 187266.30, flops:196.59, batch-reuse:1
@ 5878 train 3.9534 , allloss: 3.9534, dt: 703.22ms, fracRes: 0.1880, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.5966, norm(y): 0.9894, norm:0.3904, tok/sec: 186387.98, flops:195.67, batch-reuse:1
@ 5879 train 3.9363 , allloss: 3.9363, dt: 701.19ms, fracRes: 0.1893, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5958, norm(y): 0.9882, norm:0.3673, tok/sec: 186929.21, flops:196.24, batch-reuse:1
@ 5880 train 3.8102 , allloss: 3.8102, dt: 705.46ms, fracRes: 0.1895, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5960, norm(y): 0.9869, norm:0.3938, tok/sec: 185796.99, flops:195.05, batch-reuse:1
@ 5881 train 3.7636 , allloss: 3.7636, dt: 721.13ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6019, norm(y): 0.9853, norm:0.4458, tok/sec: 181758.07, flops:190.81, batch-reuse:1
@ 5882 train 3.8396 , allloss: 3.8396, dt: 719.19ms, fracRes: 0.1880, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5915, norm(y): 0.9836, norm:0.3930, tok/sec: 182250.11, flops:191.33, batch-reuse:1
@ 5883 train 3.9654 , allloss: 3.9654, dt: 709.53ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5980, norm(y): 0.9843, norm:0.4180, tok/sec: 184731.02, flops:193.93, batch-reuse:1
@ 5884 train 3.7975 , allloss: 3.7975, dt: 723.19ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5979, norm(y): 0.9812, norm:0.3693, tok/sec: 181241.90, flops:190.27, batch-reuse:1
@ 5885 train 3.8419 , allloss: 3.8419, dt: 723.58ms, fracRes: 0.1886, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5963, norm(y): 0.9767, norm:0.3977, tok/sec: 181142.59, flops:190.16, batch-reuse:1
@ 5886 train 3.8992 , allloss: 3.8992, dt: 702.38ms, fracRes: 0.1895, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5966, norm(y): 0.9710, norm:0.3863, tok/sec: 186610.30, flops:195.90, batch-reuse:1
@ 5887 train 3.8939 , allloss: 3.8939, dt: 699.15ms, fracRes: 0.1890, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5938, norm(y): 0.9634, norm:0.3829, tok/sec: 187474.10, flops:196.81, batch-reuse:1
@ 5888 train 3.8016 , allloss: 3.8016, dt: 716.17ms, fracRes: 0.1899, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5944, norm(y): 0.9510, norm:0.3825, tok/sec: 183017.86, flops:192.13, batch-reuse:1
@ 5889 train 3.8994 , allloss: 3.8994, dt: 713.85ms, fracRes: 0.1891, norm(attn): 36.5000, norm(output): 0.4414, norm(x): 0.5923, norm(y): 0.9415, norm:0.3517, tok/sec: 183613.84, flops:192.76, batch-reuse:1
@ 5890 train 3.8621 , allloss: 3.8621, dt: 718.68ms, fracRes: 0.1889, norm(attn): 37.7500, norm(output): 0.4414, norm(x): 0.5871, norm(y): 0.9543, norm:0.3898, tok/sec: 182378.89, flops:191.46, batch-reuse:1
@ 5891 train 3.8155 , allloss: 3.8155, dt: 713.68ms, fracRes: 0.1890, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5848, norm(y): 0.9629, norm:0.4342, tok/sec: 183657.58, flops:192.80, batch-reuse:1
@ 5892 train 3.8870 , allloss: 3.8870, dt: 713.83ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5907, norm(y): 0.9725, norm:0.3663, tok/sec: 183618.69, flops:192.76, batch-reuse:1
@ 5893 train 3.8578 , allloss: 3.8578, dt: 716.20ms, fracRes: 0.1899, norm(attn): 39.0000, norm(output): 0.4473, norm(x): 0.6003, norm(y): 0.9782, norm:0.3939, tok/sec: 183011.10, flops:192.13, batch-reuse:1
@ 5894 train 3.8046 , allloss: 3.8046, dt: 720.21ms, fracRes: 0.1886, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5956, norm(y): 0.9783, norm:0.3715, tok/sec: 181990.86, flops:191.05, batch-reuse:1
@ 5895 train 3.7951 , allloss: 3.7951, dt: 704.25ms, fracRes: 0.1890, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5956, norm(y): 0.9793, norm:0.3823, tok/sec: 186116.46, flops:195.39, batch-reuse:1
@ 5896 train 3.8756 , allloss: 3.8756, dt: 716.94ms, fracRes: 0.1903, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5934, norm(y): 0.9812, norm:0.3689, tok/sec: 182822.61, flops:191.93, batch-reuse:1
@ 5897 train 3.8631 , allloss: 3.8631, dt: 708.99ms, fracRes: 0.1912, norm(attn): 39.2500, norm(output): 0.4395, norm(x): 0.5951, norm(y): 0.9830, norm:0.3999, tok/sec: 184871.66, flops:194.08, batch-reuse:1
@ 5898 train 3.8576 , allloss: 3.8576, dt: 699.29ms, fracRes: 0.1898, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5990, norm(y): 0.9845, norm:0.4857, tok/sec: 187434.54, flops:196.77, batch-reuse:1
@ 5899 train 3.7144 , allloss: 3.7144, dt: 701.85ms, fracRes: 0.1897, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5976, norm(y): 0.9849, norm:0.5108, tok/sec: 186753.38, flops:196.05, batch-reuse:1
@ 5900 train 3.8272 , allloss: 3.8272, dt: 708.06ms, fracRes: 0.1891, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5930, norm(y): 0.9855, norm:0.3698, tok/sec: 185113.13, flops:194.33, batch-reuse:1
@ 5901 train 3.7894 , allloss: 3.7894, dt: 699.46ms, fracRes: 0.1877, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5941, norm(y): 0.9857, norm:0.4899, tok/sec: 187389.24, flops:196.72, batch-reuse:1
@ 5902 train 3.7598 , allloss: 3.7598, dt: 710.47ms, fracRes: 0.1889, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5957, norm(y): 0.9843, norm:0.3898, tok/sec: 184486.09, flops:193.67, batch-reuse:1
@ 5903 train 3.8823 , allloss: 3.8823, dt: 702.03ms, fracRes: 0.1897, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5989, norm(y): 0.9848, norm:0.4305, tok/sec: 186704.22, flops:196.00, batch-reuse:1
@ 5904 train 3.9098 , allloss: 3.9098, dt: 703.68ms, fracRes: 0.1935, norm(attn): 39.2500, norm(output): 0.4551, norm(x): 0.6111, norm(y): 0.9848, norm:0.4438, tok/sec: 186266.03, flops:195.54, batch-reuse:1
@ 5905 train 3.6760 , allloss: 3.6760, dt: 712.65ms, fracRes: 0.1896, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5999, norm(y): 0.9845, norm:0.4274, tok/sec: 183920.86, flops:193.08, batch-reuse:1
@ 5906 train 3.7226 , allloss: 3.7226, dt: 703.55ms, fracRes: 0.1878, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.5965, norm(y): 0.9844, norm:0.4540, tok/sec: 186299.61, flops:195.58, batch-reuse:1
@ 5907 train 3.7830 , allloss: 3.7830, dt: 707.10ms, fracRes: 0.1878, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5980, norm(y): 0.9858, norm:0.4096, tok/sec: 185365.35, flops:194.60, batch-reuse:1
@ 5908 train 3.8140 , allloss: 3.8140, dt: 708.89ms, fracRes: 0.1894, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5963, norm(y): 0.9868, norm:0.3854, tok/sec: 184898.71, flops:194.11, batch-reuse:1
@ 5909 train 3.8619 , allloss: 3.8619, dt: 714.49ms, fracRes: 0.1914, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.6045, norm(y): 0.9876, norm:0.4340, tok/sec: 183448.90, flops:192.58, batch-reuse:1
@ 5910 train 3.8292 , allloss: 3.8292, dt: 728.80ms, fracRes: 0.1914, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6041, norm(y): 0.9861, norm:0.3885, tok/sec: 179845.19, flops:188.80, batch-reuse:1
@ 5911 train 3.8330 , allloss: 3.8330, dt: 710.10ms, fracRes: 0.1897, norm(attn): 39.5000, norm(output): 0.4453, norm(x): 0.5994, norm(y): 0.9849, norm:0.4105, tok/sec: 184583.34, flops:193.78, batch-reuse:1
@ 5912 train 3.7678 , allloss: 3.7678, dt: 708.53ms, fracRes: 0.1899, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6021, norm(y): 0.9847, norm:0.3938, tok/sec: 184992.53, flops:194.21, batch-reuse:1
@ 5913 train 3.8994 , allloss: 3.8994, dt: 701.95ms, fracRes: 0.1907, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6032, norm(y): 0.9844, norm:0.4297, tok/sec: 186724.33, flops:196.02, batch-reuse:1
@ 5914 train 3.7127 , allloss: 3.7127, dt: 702.47ms, fracRes: 0.1888, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5904, norm(y): 0.9842, norm:0.3877, tok/sec: 186586.87, flops:195.88, batch-reuse:1
@ 5915 train 3.7657 , allloss: 3.7657, dt: 691.78ms, fracRes: 0.1891, norm(attn): 39.2500, norm(output): 0.4473, norm(x): 0.5991, norm(y): 0.9843, norm:0.3955, tok/sec: 189471.60, flops:198.91, batch-reuse:1
@ 5916 train 3.6104 , allloss: 3.6104, dt: 711.76ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.5991, norm(y): 0.9837, norm:0.3852, tok/sec: 184151.39, flops:193.32, batch-reuse:1
@ 5917 train 3.7443 , allloss: 3.7443, dt: 711.72ms, fracRes: 0.1885, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5928, norm(y): 0.9796, norm:0.4418, tok/sec: 184161.08, flops:193.33, batch-reuse:1
@ 5918 train 3.7746 , allloss: 3.7746, dt: 708.42ms, fracRes: 0.1878, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5925, norm(y): 0.9763, norm:0.3606, tok/sec: 185019.99, flops:194.23, batch-reuse:1
@ 5919 train 3.8420 , allloss: 3.8420, dt: 712.32ms, fracRes: 0.1888, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5952, norm(y): 0.9756, norm:0.4541, tok/sec: 184008.46, flops:193.17, batch-reuse:1
@ 5920 train 3.7186 , allloss: 3.7186, dt: 715.33ms, fracRes: 0.1890, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5943, norm(y): 0.9730, norm:0.3821, tok/sec: 183232.21, flops:192.36, batch-reuse:1
@ 5921 train 3.7366 , allloss: 3.7366, dt: 709.95ms, fracRes: 0.1896, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5948, norm(y): 0.9721, norm:0.4291, tok/sec: 184621.46, flops:193.82, batch-reuse:1
@ 5922 train 3.7356 , allloss: 3.7356, dt: 702.42ms, fracRes: 0.1919, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6050, norm(y): 0.9744, norm:0.4154, tok/sec: 186600.04, flops:195.89, batch-reuse:1
@ 5923 train 3.7814 , allloss: 3.7814, dt: 714.69ms, fracRes: 0.1901, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5965, norm(y): 0.9741, norm:0.4115, tok/sec: 183398.23, flops:192.53, batch-reuse:1
@ 5924 train 3.7602 , allloss: 3.7602, dt: 704.07ms, fracRes: 0.1889, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5921, norm(y): 0.9715, norm:0.4265, tok/sec: 186163.35, flops:195.43, batch-reuse:1
@ 5925 train 3.9815 , allloss: 3.9815, dt: 704.59ms, fracRes: 0.1911, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6020, norm(y): 0.9716, norm:0.5074, tok/sec: 186025.14, flops:195.29, batch-reuse:1
@ 5926 train 3.7089 , allloss: 3.7089, dt: 706.77ms, fracRes: 0.1891, norm(attn): 38.2500, norm(output): 0.4434, norm(x): 0.5940, norm(y): 0.9707, norm:0.4646, tok/sec: 185450.83, flops:194.69, batch-reuse:1
@ 5927 train 3.8868 , allloss: 3.8868, dt: 700.14ms, fracRes: 0.1876, norm(attn): 38.2500, norm(output): 0.4512, norm(x): 0.6000, norm(y): 0.9686, norm:0.4728, tok/sec: 187207.25, flops:196.53, batch-reuse:1
@ 5928 train 3.7341 , allloss: 3.7341, dt: 709.76ms, fracRes: 0.1867, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5875, norm(y): 0.9687, norm:0.4052, tok/sec: 184671.57, flops:193.87, batch-reuse:1
@ 5929 train 3.7639 , allloss: 3.7639, dt: 715.22ms, fracRes: 0.1883, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5960, norm(y): 0.9717, norm:0.4464, tok/sec: 183260.86, flops:192.39, batch-reuse:1
@ 5930 train 3.7607 , allloss: 3.7607, dt: 707.75ms, fracRes: 0.1882, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5970, norm(y): 0.9718, norm:0.4547, tok/sec: 185194.57, flops:194.42, batch-reuse:1
@ 5931 train 3.7543 , allloss: 3.7543, dt: 720.02ms, fracRes: 0.1873, norm(attn): 38.2500, norm(output): 0.4453, norm(x): 0.5947, norm(y): 0.9681, norm:0.4694, tok/sec: 182039.92, flops:191.11, batch-reuse:1
@ 5932 train 3.7185 , allloss: 3.7185, dt: 714.57ms, fracRes: 0.1874, norm(attn): 38.2500, norm(output): 0.4414, norm(x): 0.5924, norm(y): 0.9638, norm:0.4651, tok/sec: 183427.91, flops:192.56, batch-reuse:1
@ 5933 train 3.7805 , allloss: 3.7805, dt: 716.03ms, fracRes: 0.1886, norm(attn): 38.0000, norm(output): 0.4375, norm(x): 0.5906, norm(y): 0.9618, norm:0.5000, tok/sec: 183054.97, flops:192.17, batch-reuse:1
@ 5934 train 3.8964 , allloss: 3.8964, dt: 719.66ms, fracRes: 0.1897, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6002, norm(y): 0.9604, norm:0.4424, tok/sec: 182131.22, flops:191.20, batch-reuse:1
@ 5935 train 3.7004 , allloss: 3.7004, dt: 707.73ms, fracRes: 0.1890, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6025, norm(y): 0.9588, norm:0.4375, tok/sec: 185200.81, flops:194.42, batch-reuse:1
@ 5936 train 3.5808 , allloss: 3.5808, dt: 700.11ms, fracRes: 0.1888, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5947, norm(y): 0.9577, norm:0.4455, tok/sec: 187217.45, flops:196.54, batch-reuse:1
@ 5937 train 3.7260 , allloss: 3.7260, dt: 706.60ms, fracRes: 0.1884, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5936, norm(y): 0.9657, norm:0.3788, tok/sec: 185497.95, flops:194.74, batch-reuse:1
@ 5938 train 3.8414 , allloss: 3.8414, dt: 707.60ms, fracRes: 0.1879, norm(attn): 38.2500, norm(output): 0.4414, norm(x): 0.5927, norm(y): 0.9716, norm:0.4577, tok/sec: 185235.38, flops:194.46, batch-reuse:1
@ 5939 train 3.6479 , allloss: 3.6479, dt: 696.75ms, fracRes: 0.1893, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.6012, norm(y): 0.9740, norm:0.4442, tok/sec: 188120.11, flops:197.49, batch-reuse:1
@ 5940 train 3.7005 , allloss: 3.7005, dt: 712.91ms, fracRes: 0.1891, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5910, norm(y): 0.9748, norm:0.4077, tok/sec: 183855.84, flops:193.01, batch-reuse:1
@ 5941 train 3.6268 , allloss: 3.6268, dt: 709.43ms, fracRes: 0.1878, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.5966, norm(y): 0.9780, norm:0.4224, tok/sec: 184757.84, flops:193.96, batch-reuse:1
@ 5942 train 3.7929 , allloss: 3.7929, dt: 706.28ms, fracRes: 0.1870, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5924, norm(y): 0.9817, norm:0.4004, tok/sec: 185580.35, flops:194.82, batch-reuse:1
@ 5943 train 3.7735 , allloss: 3.7735, dt: 711.24ms, fracRes: 0.1892, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5987, norm(y): 0.9828, norm:0.4108, tok/sec: 184287.26, flops:193.47, batch-reuse:1
@ 5944 train 3.7326 , allloss: 3.7326, dt: 712.09ms, fracRes: 0.1888, norm(attn): 39.0000, norm(output): 0.4414, norm(x): 0.5941, norm(y): 0.9814, norm:0.3667, tok/sec: 184066.06, flops:193.23, batch-reuse:1
@ 5945 train 3.7616 , allloss: 3.7616, dt: 713.60ms, fracRes: 0.1895, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.5960, norm(y): 0.9788, norm:0.4093, tok/sec: 183676.84, flops:192.82, batch-reuse:1
@ 5946 train 3.6564 , allloss: 3.6564, dt: 711.93ms, fracRes: 0.1890, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5977, norm(y): 0.9776, norm:0.3826, tok/sec: 184109.09, flops:193.28, batch-reuse:1
@ 5947 train 3.7618 , allloss: 3.7618, dt: 704.62ms, fracRes: 0.1896, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5986, norm(y): 0.9779, norm:0.3595, tok/sec: 186016.70, flops:195.28, batch-reuse:1
@ 5948 train 3.6452 , allloss: 3.6452, dt: 716.50ms, fracRes: 0.1871, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5875, norm(y): 0.9754, norm:0.3744, tok/sec: 182934.79, flops:192.05, batch-reuse:1
@ 5949 train 3.7674 , allloss: 3.7674, dt: 715.15ms, fracRes: 0.1860, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5836, norm(y): 0.9671, norm:0.3714, tok/sec: 183278.51, flops:192.41, batch-reuse:1
@ 5950 train 3.7601 , allloss: 3.7601, dt: 694.02ms, fracRes: 0.1873, norm(attn): 37.0000, norm(output): 0.4375, norm(x): 0.5886, norm(y): 0.9507, norm:0.4248, tok/sec: 188858.32, flops:198.26, batch-reuse:1
@ 5951 train 3.8929 , allloss: 3.8929, dt: 701.58ms, fracRes: 0.1892, norm(attn): 36.2500, norm(output): 0.4434, norm(x): 0.5953, norm(y): 0.9392, norm:0.4588, tok/sec: 186824.27, flops:196.13, batch-reuse:1
@ 5952 train 3.9389 , allloss: 3.9389, dt: 705.07ms, fracRes: 0.1896, norm(attn): 34.2500, norm(output): 0.4727, norm(x): 0.6247, norm(y): 0.9078, norm:2.9929, tok/sec: 185898.32, flops:195.16, batch-reuse:1
@ 5953 train 3.9526 , allloss: 3.9526, dt: 693.44ms, fracRes: 0.1894, norm(attn): 36.5000, norm(output): 0.4395, norm(x): 0.5953, norm(y): 0.9440, norm:0.5790, tok/sec: 189017.86, flops:198.43, batch-reuse:1
@ 5954 train 3.8856 , allloss: 3.8856, dt: 700.14ms, fracRes: 0.1897, norm(attn): 38.0000, norm(output): 0.4414, norm(x): 0.5943, norm(y): 0.9682, norm:0.4245, tok/sec: 187208.15, flops:196.53, batch-reuse:1
@ 5955 train 3.9723 , allloss: 3.9723, dt: 700.49ms, fracRes: 0.1910, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.6010, norm(y): 0.9803, norm:0.5428, tok/sec: 187113.78, flops:196.43, batch-reuse:1
@ 5956 train 3.9593 , allloss: 3.9593, dt: 710.82ms, fracRes: 0.1896, norm(attn): 39.0000, norm(output): 0.4414, norm(x): 0.5956, norm(y): 0.9856, norm:0.4487, tok/sec: 184394.94, flops:193.58, batch-reuse:1
@ 5957 train 3.8519 , allloss: 3.8519, dt: 711.58ms, fracRes: 0.1892, norm(attn): 39.7500, norm(output): 0.4414, norm(x): 0.5943, norm(y): 0.9866, norm:0.4463, tok/sec: 184197.73, flops:193.37, batch-reuse:1
@ 5958 train 3.9433 , allloss: 3.9433, dt: 714.16ms, fracRes: 0.1898, norm(attn): 39.7500, norm(output): 0.4375, norm(x): 0.5865, norm(y): 0.9876, norm:0.4755, tok/sec: 183533.60, flops:192.67, batch-reuse:1
@ 5959 train 3.8838 , allloss: 3.8838, dt: 712.77ms, fracRes: 0.1913, norm(attn): 40.0000, norm(output): 0.4453, norm(x): 0.5984, norm(y): 0.9903, norm:0.3970, tok/sec: 183890.41, flops:193.05, batch-reuse:1
@ 5960 train 3.8862 , allloss: 3.8862, dt: 704.85ms, fracRes: 0.1911, norm(attn): 40.0000, norm(output): 0.4453, norm(x): 0.6008, norm(y): 0.9902, norm:0.4494, tok/sec: 185957.12, flops:195.22, batch-reuse:1
@ 5961 train 3.8597 , allloss: 3.8597, dt: 690.57ms, fracRes: 0.1890, norm(attn): 40.0000, norm(output): 0.4629, norm(x): 0.6132, norm(y): 0.9906, norm:0.4980, tok/sec: 189802.27, flops:199.25, batch-reuse:1
@ 5962 train 3.8885 , allloss: 3.8885, dt: 706.18ms, fracRes: 0.1916, norm(attn): 40.2500, norm(output): 0.4531, norm(x): 0.6050, norm(y): 0.9903, norm:0.4467, tok/sec: 185607.36, flops:194.85, batch-reuse:1
@ 5963 train 3.9183 , allloss: 3.9183, dt: 703.28ms, fracRes: 0.1920, norm(attn): 40.0000, norm(output): 0.4590, norm(x): 0.6141, norm(y): 0.9914, norm:0.5190, tok/sec: 186372.88, flops:195.65, batch-reuse:1
@ 5964 train 4.0185 , allloss: 4.0185, dt: 707.12ms, fracRes: 0.1872, norm(attn): 40.0000, norm(output): 0.4434, norm(x): 0.5977, norm(y): 0.9917, norm:0.4806, tok/sec: 185360.85, flops:194.59, batch-reuse:1
@ 5965 train 3.9201 , allloss: 3.9201, dt: 704.88ms, fracRes: 0.1882, norm(attn): 40.0000, norm(output): 0.4492, norm(x): 0.6015, norm(y): 0.9916, norm:0.4517, tok/sec: 185949.88, flops:195.21, batch-reuse:1
@ 5966 train 3.9613 , allloss: 3.9613, dt: 706.04ms, fracRes: 0.1905, norm(attn): 40.0000, norm(output): 0.4492, norm(x): 0.6049, norm(y): 0.9915, norm:0.4650, tok/sec: 185644.09, flops:194.89, batch-reuse:1
@ 5967 train 3.8791 , allloss: 3.8791, dt: 707.31ms, fracRes: 0.1913, norm(attn): 40.0000, norm(output): 0.4512, norm(x): 0.6071, norm(y): 0.9914, norm:0.4125, tok/sec: 185310.05, flops:194.54, batch-reuse:1
@ 5968 train 3.8520 , allloss: 3.8520, dt: 711.28ms, fracRes: 0.1916, norm(attn): 39.7500, norm(output): 0.4570, norm(x): 0.6105, norm(y): 0.9906, norm:0.4953, tok/sec: 184275.03, flops:193.45, batch-reuse:1
@ 5969 train 3.8347 , allloss: 3.8347, dt: 706.68ms, fracRes: 0.1915, norm(attn): 39.7500, norm(output): 0.4473, norm(x): 0.6017, norm(y): 0.9898, norm:0.3955, tok/sec: 185475.79, flops:194.71, batch-reuse:1
@ 5970 train 3.8935 , allloss: 3.8935, dt: 706.77ms, fracRes: 0.1909, norm(attn): 39.7500, norm(output): 0.4453, norm(x): 0.6000, norm(y): 0.9902, norm:0.4722, tok/sec: 185451.14, flops:194.69, batch-reuse:1
@ 5971 train 3.7815 , allloss: 3.7815, dt: 703.15ms, fracRes: 0.1907, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6009, norm(y): 0.9900, norm:0.4183, tok/sec: 186407.95, flops:195.69, batch-reuse:1
@ 5972 train 3.8467 , allloss: 3.8467, dt: 703.74ms, fracRes: 0.1891, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.5996, norm(y): 0.9898, norm:0.4326, tok/sec: 186249.63, flops:195.53, batch-reuse:1
@ 5973 train 3.8983 , allloss: 3.8983, dt: 711.07ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5939, norm(y): 0.9898, norm:0.3942, tok/sec: 184329.90, flops:193.51, batch-reuse:1
@ 5974 train 3.8817 , allloss: 3.8817, dt: 705.94ms, fracRes: 0.1901, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5950, norm(y): 0.9897, norm:0.4181, tok/sec: 185668.91, flops:194.92, batch-reuse:1
@ 5975 train 3.9835 , allloss: 3.9835, dt: 701.91ms, fracRes: 0.1902, norm(attn): 39.7500, norm(output): 0.4434, norm(x): 0.5929, norm(y): 0.9899, norm:0.3886, tok/sec: 186734.98, flops:196.03, batch-reuse:1
@ 5976 train 4.1105 , allloss: 4.1105, dt: 700.27ms, fracRes: 0.1931, norm(attn): 39.2500, norm(output): 0.4512, norm(x): 0.6110, norm(y): 0.9912, norm:0.5373, tok/sec: 187172.90, flops:196.49, batch-reuse:1
@ 5977 train 3.9479 , allloss: 3.9479, dt: 705.30ms, fracRes: 0.1925, norm(attn): 38.7500, norm(output): 0.4531, norm(x): 0.6089, norm(y): 0.9908, norm:0.5254, tok/sec: 185839.32, flops:195.09, batch-reuse:1
@ 5978 train 3.8594 , allloss: 3.8594, dt: 700.96ms, fracRes: 0.1886, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5961, norm(y): 0.9893, norm:0.4372, tok/sec: 186989.29, flops:196.30, batch-reuse:1
@ 5979 train 3.9244 , allloss: 3.9244, dt: 710.35ms, fracRes: 0.1892, norm(attn): 39.5000, norm(output): 0.4512, norm(x): 0.6042, norm(y): 0.9890, norm:0.5190, tok/sec: 184517.61, flops:193.71, batch-reuse:1
@ 5980 train 4.0082 , allloss: 4.0082, dt: 713.13ms, fracRes: 0.1905, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6086, norm(y): 0.9904, norm:0.6530, tok/sec: 183799.11, flops:192.95, batch-reuse:1
@ 5981 train 3.8688 , allloss: 3.8688, dt: 702.96ms, fracRes: 0.1902, norm(attn): 39.5000, norm(output): 0.4551, norm(x): 0.6101, norm(y): 0.9901, norm:0.6747, tok/sec: 186456.31, flops:195.74, batch-reuse:1
@ 5982 train 3.8911 , allloss: 3.8911, dt: 717.26ms, fracRes: 0.1879, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5913, norm(y): 0.9899, norm:0.5020, tok/sec: 182739.29, flops:191.84, batch-reuse:1
@ 5983 train 3.9167 , allloss: 3.9167, dt: 717.51ms, fracRes: 0.1881, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5893, norm(y): 0.9895, norm:0.4827, tok/sec: 182675.78, flops:191.77, batch-reuse:1
@ 5984 train 3.8204 , allloss: 3.8204, dt: 705.85ms, fracRes: 0.1905, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5972, norm(y): 0.9895, norm:0.5420, tok/sec: 185693.62, flops:194.94, batch-reuse:1
@ 5985 train 3.8571 , allloss: 3.8571, dt: 714.32ms, fracRes: 0.1901, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.6011, norm(y): 0.9900, norm:0.4246, tok/sec: 183491.95, flops:192.63, batch-reuse:1
@ 5986 train 3.9219 , allloss: 3.9219, dt: 710.51ms, fracRes: 0.1926, norm(attn): 38.7500, norm(output): 0.4473, norm(x): 0.6034, norm(y): 0.9898, norm:0.4665, tok/sec: 184477.11, flops:193.66, batch-reuse:1
@ 5987 train 3.9396 , allloss: 3.9396, dt: 715.73ms, fracRes: 0.1934, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.6014, norm(y): 0.9897, norm:0.4041, tok/sec: 183129.24, flops:192.25, batch-reuse:1
@ 5988 train 3.9230 , allloss: 3.9230, dt: 716.02ms, fracRes: 0.1940, norm(attn): 39.2500, norm(output): 0.4434, norm(x): 0.6034, norm(y): 0.9892, norm:0.5072, tok/sec: 183056.37, flops:192.17, batch-reuse:1
@ 5989 train 3.8235 , allloss: 3.8235, dt: 714.35ms, fracRes: 0.1941, norm(attn): 39.2500, norm(output): 0.4492, norm(x): 0.6096, norm(y): 0.9888, norm:0.4278, tok/sec: 183485.27, flops:192.62, batch-reuse:1
@ 5990 train 3.8233 , allloss: 3.8233, dt: 708.89ms, fracRes: 0.1920, norm(attn): 39.2500, norm(output): 0.4453, norm(x): 0.6021, norm(y): 0.9885, norm:0.4548, tok/sec: 184897.84, flops:194.11, batch-reuse:1
@ 5991 train 3.8515 , allloss: 3.8515, dt: 723.49ms, fracRes: 0.1904, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5922, norm(y): 0.9887, norm:0.4200, tok/sec: 181166.47, flops:190.19, batch-reuse:1
@ 5992 train 3.8357 , allloss: 3.8357, dt: 701.86ms, fracRes: 0.1902, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5920, norm(y): 0.9886, norm:0.4876, tok/sec: 186749.82, flops:196.05, batch-reuse:1
@ 5993 train 3.9750 , allloss: 3.9750, dt: 712.29ms, fracRes: 0.1927, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6059, norm(y): 0.9904, norm:0.4357, tok/sec: 184014.19, flops:193.18, batch-reuse:1
@ 5994 train 3.8127 , allloss: 3.8127, dt: 712.25ms, fracRes: 0.1894, norm(attn): 39.0000, norm(output): 0.4375, norm(x): 0.5924, norm(y): 0.9888, norm:0.4459, tok/sec: 184025.21, flops:193.19, batch-reuse:1
@ 5995 train 3.8914 , allloss: 3.8914, dt: 709.58ms, fracRes: 0.1890, norm(attn): 39.2500, norm(output): 0.4395, norm(x): 0.5956, norm(y): 0.9891, norm:0.4214, tok/sec: 184717.18, flops:193.92, batch-reuse:1
@ 5996 train 3.9418 , allloss: 3.9418, dt: 697.67ms, fracRes: 0.1889, norm(attn): 39.5000, norm(output): 0.4434, norm(x): 0.5978, norm(y): 0.9888, norm:0.4731, tok/sec: 187870.16, flops:197.23, batch-reuse:1
@ 5997 train 3.9378 , allloss: 3.9378, dt: 706.23ms, fracRes: 0.1907, norm(attn): 39.5000, norm(output): 0.4473, norm(x): 0.6044, norm(y): 0.9892, norm:0.4647, tok/sec: 185593.26, flops:194.84, batch-reuse:1
@ 5998 train 3.8842 , allloss: 3.8842, dt: 706.41ms, fracRes: 0.1885, norm(attn): 39.2500, norm(output): 0.4375, norm(x): 0.5916, norm(y): 0.9889, norm:0.3962, tok/sec: 185545.53, flops:194.79, batch-reuse:1
@ 5999 train 3.8920 , allloss: 3.8920, dt: 699.31ms, fracRes: 0.1874, norm(attn): 39.5000, norm(output): 0.4375, norm(x): 0.5891, norm(y): 0.9888, norm:0.4047, tok/sec: 187430.00, flops:196.76, batch-reuse:1
@ 6000 val 3.8312
@ 6000 train 4.0870 , allloss: 4.0870, dt: 1073.12ms, fracRes: 0.1865, norm(attn): 39.5000, norm(output): 0.4355, norm(x): 0.5896, norm(y): 0.9902, norm:0.4290, tok/sec: 122140.57, flops:128.22, batch-reuse:1
@ 6001 train 3.9005 , allloss: 3.9005, dt: 698.19ms, fracRes: 0.1874, norm(attn): 39.2500, norm(output): 0.4375, norm(x): 0.5895, norm(y): 0.9893, norm:0.4386, tok/sec: 187732.42, flops:197.08, batch-reuse:1
@ 6002 train 3.9764 , allloss: 3.9764, dt: 701.56ms, fracRes: 0.1902, norm(attn): 39.2500, norm(output): 0.4531, norm(x): 0.6056, norm(y): 0.9904, norm:0.4305, tok/sec: 186829.73, flops:196.13, batch-reuse:1
@ 6003 train 3.8619 , allloss: 3.8619, dt: 704.42ms, fracRes: 0.1888, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5937, norm(y): 0.9891, norm:0.4388, tok/sec: 186071.54, flops:195.34, batch-reuse:1
@ 6004 train 3.8691 , allloss: 3.8691, dt: 710.31ms, fracRes: 0.1889, norm(attn): 38.7500, norm(output): 0.4473, norm(x): 0.6007, norm(y): 0.9893, norm:0.4127, tok/sec: 184528.32, flops:193.72, batch-reuse:1
@ 6005 train 3.9378 , allloss: 3.9378, dt: 704.14ms, fracRes: 0.1888, norm(attn): 38.7500, norm(output): 0.4492, norm(x): 0.6019, norm(y): 0.9893, norm:0.3794, tok/sec: 186144.44, flops:195.41, batch-reuse:1
@ 6006 train 3.8908 , allloss: 3.8908, dt: 710.63ms, fracRes: 0.1898, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6023, norm(y): 0.9894, norm:0.4073, tok/sec: 184443.88, flops:193.63, batch-reuse:1
@ 6007 train 3.8723 , allloss: 3.8723, dt: 699.38ms, fracRes: 0.1900, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5974, norm(y): 0.9888, norm:0.3831, tok/sec: 187411.35, flops:196.74, batch-reuse:1
@ 6008 train 3.9497 , allloss: 3.9497, dt: 704.80ms, fracRes: 0.1899, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5969, norm(y): 0.9891, norm:0.4106, tok/sec: 185971.78, flops:195.23, batch-reuse:1
@ 6009 train 3.9714 , allloss: 3.9714, dt: 704.69ms, fracRes: 0.1898, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5953, norm(y): 0.9888, norm:0.3887, tok/sec: 186000.72, flops:195.26, batch-reuse:1
@ 6010 train 3.9061 , allloss: 3.9061, dt: 704.76ms, fracRes: 0.1894, norm(attn): 38.7500, norm(output): 0.4414, norm(x): 0.5963, norm(y): 0.9888, norm:0.3779, tok/sec: 185980.77, flops:195.24, batch-reuse:1
@ 6011 train 3.8678 , allloss: 3.8678, dt: 710.46ms, fracRes: 0.1901, norm(attn): 38.7500, norm(output): 0.4453, norm(x): 0.5991, norm(y): 0.9888, norm:0.3988, tok/sec: 184489.25, flops:193.68, batch-reuse:1
@ 6012 train 3.8843 , allloss: 3.8843, dt: 713.93ms, fracRes: 0.1893, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5992, norm(y): 0.9889, norm:0.3695, tok/sec: 183591.95, flops:192.74, batch-reuse:1
@ 6013 train 3.9065 , allloss: 3.9065, dt: 705.31ms, fracRes: 0.1886, norm(attn): 38.7500, norm(output): 0.4375, norm(x): 0.5917, norm(y): 0.9882, norm:0.4020, tok/sec: 185836.68, flops:195.09, batch-reuse:1
@ 6014 train 3.8582 , allloss: 3.8582, dt: 713.10ms, fracRes: 0.1893, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.5952, norm(y): 0.9884, norm:0.3462, tok/sec: 183805.56, flops:192.96, batch-reuse:1
@ 6015 train 3.9133 , allloss: 3.9133, dt: 713.28ms, fracRes: 0.1911, norm(attn): 39.0000, norm(output): 0.4453, norm(x): 0.6008, norm(y): 0.9893, norm:0.3961, tok/sec: 183760.71, flops:192.91, batch-reuse:1
@ 6016 train 3.8695 , allloss: 3.8695, dt: 713.04ms, fracRes: 0.1919, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.6016, norm(y): 0.9892, norm:0.3564, tok/sec: 183820.56, flops:192.98, batch-reuse:1
@ 6017 train 3.9622 , allloss: 3.9622, dt: 700.35ms, fracRes: 0.1915, norm(attn): 38.7500, norm(output): 0.4434, norm(x): 0.5990, norm(y): 0.9894, norm:0.4702, tok/sec: 187151.74, flops:196.47, batch-reuse:1
@ 6018 train 3.7516 , allloss: 3.7516, dt: 704.32ms, fracRes: 0.1903, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5963, norm(y): 0.9878, norm:0.4512, tok/sec: 186096.04, flops:195.36, batch-reuse:1
@ 6019 train 3.7895 , allloss: 3.7895, dt: 704.83ms, fracRes: 0.1894, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5984, norm(y): 0.9881, norm:0.4014, tok/sec: 185963.16, flops:195.22, batch-reuse:1
@ 6020 train 3.9232 , allloss: 3.9232, dt: 706.33ms, fracRes: 0.1906, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6042, norm(y): 0.9891, norm:0.4199, tok/sec: 185568.20, flops:194.81, batch-reuse:1
@ 6021 train 3.8692 , allloss: 3.8692, dt: 712.08ms, fracRes: 0.1906, norm(attn): 39.0000, norm(output): 0.4414, norm(x): 0.5962, norm(y): 0.9890, norm:0.4248, tok/sec: 184070.44, flops:193.24, batch-reuse:1
@ 6022 train 3.7819 , allloss: 3.7819, dt: 710.50ms, fracRes: 0.1902, norm(attn): 38.7500, norm(output): 0.4355, norm(x): 0.5908, norm(y): 0.9879, norm:0.3986, tok/sec: 184478.66, flops:193.67, batch-reuse:1
@ 6023 train 3.8802 , allloss: 3.8802, dt: 715.16ms, fracRes: 0.1883, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5932, norm(y): 0.9878, norm:0.4009, tok/sec: 183277.35, flops:192.40, batch-reuse:1
@ 6024 train 3.8337 , allloss: 3.8337, dt: 716.15ms, fracRes: 0.1891, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6033, norm(y): 0.9886, norm:0.4483, tok/sec: 183023.71, flops:192.14, batch-reuse:1
@ 6025 train 3.9045 , allloss: 3.9045, dt: 699.06ms, fracRes: 0.1898, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6008, norm(y): 0.9885, norm:0.4381, tok/sec: 187498.21, flops:196.84, batch-reuse:1
@ 6026 train 3.8210 , allloss: 3.8210, dt: 697.41ms, fracRes: 0.1903, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5982, norm(y): 0.9891, norm:0.4055, tok/sec: 187940.55, flops:197.30, batch-reuse:1
@ 6027 train 3.8548 , allloss: 3.8548, dt: 704.15ms, fracRes: 0.1910, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5946, norm(y): 0.9878, norm:0.3893, tok/sec: 186142.29, flops:195.41, batch-reuse:1
@ 6028 train 3.9324 , allloss: 3.9324, dt: 705.33ms, fracRes: 0.1913, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5962, norm(y): 0.9884, norm:0.6714, tok/sec: 185830.90, flops:195.09, batch-reuse:1
@ 6029 train 3.8264 , allloss: 3.8264, dt: 706.79ms, fracRes: 0.1921, norm(attn): 38.2500, norm(output): 0.4414, norm(x): 0.5949, norm(y): 0.9879, norm:0.4936, tok/sec: 185446.20, flops:194.68, batch-reuse:1
@ 6030 train 3.8133 , allloss: 3.8133, dt: 706.28ms, fracRes: 0.1920, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5936, norm(y): 0.9872, norm:0.4573, tok/sec: 185579.54, flops:194.82, batch-reuse:1
@ 6031 train 4.0467 , allloss: 4.0467, dt: 709.24ms, fracRes: 0.1904, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5974, norm(y): 0.9889, norm:0.4799, tok/sec: 184806.47, flops:194.01, batch-reuse:1
@ 6032 train 3.8776 , allloss: 3.8776, dt: 711.03ms, fracRes: 0.1914, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6046, norm(y): 0.9881, norm:0.4780, tok/sec: 184341.40, flops:193.52, batch-reuse:1
@ 6033 train 3.9028 , allloss: 3.9028, dt: 707.85ms, fracRes: 0.1914, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6064, norm(y): 0.9890, norm:0.4143, tok/sec: 185169.37, flops:194.39, batch-reuse:1
@ 6034 train 3.9241 , allloss: 3.9241, dt: 702.93ms, fracRes: 0.1911, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5965, norm(y): 0.9881, norm:0.4552, tok/sec: 186465.04, flops:195.75, batch-reuse:1
@ 6035 train 3.8355 , allloss: 3.8355, dt: 702.06ms, fracRes: 0.1894, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5931, norm(y): 0.9875, norm:0.4116, tok/sec: 186697.44, flops:196.00, batch-reuse:1
@ 6036 train 3.9213 , allloss: 3.9213, dt: 705.07ms, fracRes: 0.1880, norm(attn): 38.5000, norm(output): 0.4395, norm(x): 0.5876, norm(y): 0.9877, norm:0.4078, tok/sec: 185898.76, flops:195.16, batch-reuse:1
@ 6037 train 3.7402 , allloss: 3.7402, dt: 701.05ms, fracRes: 0.1904, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6013, norm(y): 0.9875, norm:0.4606, tok/sec: 186964.17, flops:196.28, batch-reuse:1
@ 6038 train 3.8469 , allloss: 3.8469, dt: 705.09ms, fracRes: 0.1894, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5869, norm(y): 0.9876, norm:0.4290, tok/sec: 185894.43, flops:195.15, batch-reuse:1
@ 6039 train 3.8680 , allloss: 3.8680, dt: 702.64ms, fracRes: 0.1919, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.5999, norm(y): 0.9880, norm:0.4442, tok/sec: 186542.80, flops:195.83, batch-reuse:1
@ 6040 train 3.9260 , allloss: 3.9260, dt: 723.77ms, fracRes: 0.1917, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6057, norm(y): 0.9888, norm:0.4369, tok/sec: 181096.47, flops:190.12, batch-reuse:1
@ 6041 train 3.8907 , allloss: 3.8907, dt: 712.21ms, fracRes: 0.1914, norm(attn): 38.2500, norm(output): 0.4492, norm(x): 0.6047, norm(y): 0.9886, norm:0.4597, tok/sec: 184035.75, flops:193.20, batch-reuse:1
@ 6042 train 3.8868 , allloss: 3.8868, dt: 699.47ms, fracRes: 0.1919, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5984, norm(y): 0.9885, norm:0.4964, tok/sec: 187387.52, flops:196.72, batch-reuse:1
@ 6043 train 3.7316 , allloss: 3.7316, dt: 714.67ms, fracRes: 0.1902, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5924, norm(y): 0.9875, norm:0.5411, tok/sec: 183401.78, flops:192.54, batch-reuse:1
@ 6044 train 3.8912 , allloss: 3.8912, dt: 714.87ms, fracRes: 0.1898, norm(attn): 38.5000, norm(output): 0.4414, norm(x): 0.5963, norm(y): 0.9889, norm:0.4543, tok/sec: 183349.79, flops:192.48, batch-reuse:1
@ 6045 train 3.8381 , allloss: 3.8381, dt: 702.92ms, fracRes: 0.1905, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6012, norm(y): 0.9883, norm:0.4809, tok/sec: 186467.82, flops:195.75, batch-reuse:1
@ 6046 train 3.8406 , allloss: 3.8406, dt: 708.35ms, fracRes: 0.1911, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.5991, norm(y): 0.9886, norm:0.4230, tok/sec: 185038.48, flops:194.25, batch-reuse:1
@ 6047 train 3.8542 , allloss: 3.8542, dt: 720.28ms, fracRes: 0.1907, norm(attn): 38.5000, norm(output): 0.4375, norm(x): 0.5903, norm(y): 0.9876, norm:0.4660, tok/sec: 181974.36, flops:191.04, batch-reuse:1
@ 6048 train 3.9204 , allloss: 3.9204, dt: 714.45ms, fracRes: 0.1927, norm(attn): 38.2500, norm(output): 0.4414, norm(x): 0.5958, norm(y): 0.9883, norm:0.4766, tok/sec: 183459.74, flops:192.60, batch-reuse:1
@ 6049 train 3.8931 , allloss: 3.8931, dt: 718.94ms, fracRes: 0.1913, norm(attn): 38.5000, norm(output): 0.7422, norm(x): 0.8954, norm(y): 0.9873, norm:30.0553, tok/sec: 182311.70, flops:191.39, batch-reuse:1
tensor([[1.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4922, 0.5078, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.9102, 0.0664, 0.0228, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6328, 0.1709, 0.1396, 0.0571, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.6016, 0.2383, 0.0635, 0.0481, 0.0474, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.5664, 0.2295, 0.0688, 0.0481, 0.0383, 0.0493, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.4121, 0.2559, 0.0654, 0.0522, 0.0535, 0.0908, 0.0708, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.3457, 0.2393, 0.0574, 0.0378, 0.0723, 0.0835, 0.0903, 0.0747, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.2451, 0.2178, 0.0618, 0.0496, 0.0864, 0.1377, 0.0908, 0.0732, 0.0376, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1709, 0.2051, 0.0889, 0.0398, 0.0811, 0.1001, 0.1357, 0.1089, 0.0508, 0.0184, 0.0000, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1914, 0.0928, 0.0579, 0.0464, 0.0889, 0.1797, 0.1260, 0.0889, 0.0620, 0.0192, 0.0469, 0.0000, 0.0000, 0.0000, 0.0000],
        [0.1270, 0.1138, 0.0454, 0.0339, 0.0654, 0.1455, 0.1797, 0.1279, 0.0884, 0.0254, 0.0270, 0.0214, 0.0000, 0.0000, 0.0000],
        [0.2002, 0.0820, 0.0118, 0.0115, 0.0491, 0.1475, 0.1885, 0.1338, 0.1040, 0.0119, 0.0280, 0.0100, 0.0214, 0.0000, 0.0000],
        [0.0776, 0.0820, 0.0255, 0.0209, 0.0547, 0.1387, 0.1260, 0.0986, 0.1123, 0.0366, 0.0942, 0.0466, 0.0376, 0.0479, 0.0000],
        [0.0579, 0.0369, 0.0361, 0.0173, 0.0515, 0.0679, 0.1167, 0.0791, 0.1621, 0.0562, 0.0923, 0.0520, 0.0405, 0.0884, 0.0452]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ 0.0540, -0.7539, -1.5625, -1.2344, -1.2031, -0.9766, -0.9297, -0.6914, -1.1250, -1.8984, -1.3125, -1.7344, -0.9219, -1.1172, -1.3828],
        [ 0.0371,  0.0698, -0.8477, -1.5625, -0.9844, -0.9961, -0.9375, -0.6953, -0.9219, -1.5156, -1.4531, -1.5312, -1.3438, -1.3281, -1.3359],
        [-0.0142, -2.6406, -3.7031, -4.0312, -3.6406, -3.5469, -3.5781, -3.5312, -4.3438, -4.9688, -4.4688, -5.0000, -4.2188, -4.8438, -4.6250],
        [-0.0388, -1.3516, -1.5469, -2.4375, -2.1250, -2.5000, -2.3281, -2.1875, -2.6719, -2.6094, -2.7031, -2.5469, -2.3281, -3.0156, -2.7188],
        [ 0.0278, -0.8984, -2.2188, -2.5000, -2.5156, -1.9531, -2.5312, -2.4688, -3.1875, -3.8906, -3.1562, -3.4062, -2.7812, -3.3594, -3.3438],
        [ 0.0320, -0.8711, -2.0781, -2.4375, -2.6562, -2.4062, -2.5938, -2.4219, -3.1250, -3.9375, -2.8594, -3.0000, -2.5469, -3.0781, -3.2188],
        [ 0.0728, -0.4062, -1.7656, -1.9922, -1.9688, -1.4375, -1.6875, -1.8281, -2.5469, -3.5625, -2.8125, -3.2031, -2.2812, -2.4688, -2.2500],
        [ 0.1289, -0.2383, -1.6641, -2.0781, -1.4375, -1.2891, -1.2109, -1.4062, -2.0469, -3.3438, -2.2969, -3.1562, -2.2188, -1.8828, -2.0781],
        [ 0.1133, -0.0052, -1.2656, -1.4844, -0.9297, -0.4609, -0.8828, -1.0938, -1.7656, -2.9219, -1.7812, -2.5156, -1.9219, -1.7500, -1.8750],
        [ 0.1406,  0.3223, -0.5156, -1.3203, -0.6094, -0.3984, -0.0928, -0.3145, -1.0781, -2.0938, -1.6094, -1.5781, -1.2422, -1.3516, -1.1875],
        [ 0.1094, -0.6094, -1.0859, -1.3047, -0.6562,  0.0488, -0.3086, -0.6562, -1.0156, -2.1875, -1.2969, -2.4062, -1.6484, -1.4375, -1.4531],
        [ 0.1543,  0.0437, -0.8711, -1.1641, -0.5078,  0.2871,  0.4980,  0.1621, -0.2100, -1.4531, -1.3984, -1.6250, -1.0703, -0.7500, -0.9336],
        [ 0.2197, -0.6719, -2.6094, -2.6406, -1.1875, -0.0835,  0.1592, -0.1846, -0.4375, -2.6094, -1.7500, -2.7812, -2.0156, -1.6406, -2.1406],
        [ 0.1475,  0.2041, -0.9609, -1.1641, -0.2041,  0.7305,  0.6328,  0.3867,  0.5195, -0.6055,  0.3398, -0.3594, -0.5742, -0.3359, -0.7148],
        [ 0.1104, -0.3379, -0.3594, -1.0938, -0.0063,  0.2695,  0.8125,  0.4238,  1.1406,  0.0825,  0.5820,  0.0058, -0.2432,  0.5352, -0.1338]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3495],
        [0.3123],
        [0.1940],
        [0.2370],
        [0.2028],
        [0.1765],
        [0.1377],
        [0.1467],
        [0.1059],
        [0.1297],
        [0.0672],
        [0.1417],
        [0.1009],
        [0.0515]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0005,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9688,     0.0299,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9922,     0.0062,     0.0030,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9688,     0.0141,     0.0001,     0.0153,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9570,     0.0009,     0.0001,     0.0028,     0.0408,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9180,     0.0012,     0.0000,     0.0061,     0.0023,     0.0718,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9648,     0.0005,     0.0001,     0.0066,     0.0013,     0.0151,     0.0110,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.8867,     0.0060,     0.0002,     0.0029,     0.0157,     0.0184,     0.0078,     0.0603,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7852,     0.0023,     0.0046,     0.0034,     0.0002,     0.0111,     0.0010,     0.1914,     0.0023,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.7227,     0.0006,     0.0001,     0.0057,     0.0005,     0.0062,     0.0014,     0.1982,     0.0049,     0.0615,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.7461,     0.0164,     0.0007,     0.0104,     0.0126,     0.0077,     0.1387,     0.0135,     0.0028,     0.0003,     0.0505,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.5234,     0.0006,     0.0000,     0.0008,     0.0002,     0.0048,     0.0114,     0.4082,     0.0033,     0.0001,     0.0069,     0.0417,     0.0000,     0.0000],
        [    0.0000,     0.3262,     0.0053,     0.0002,     0.0022,     0.0085,     0.0052,     0.0044,     0.0166,     0.5508,     0.0015,     0.0344,     0.0011,     0.0447,     0.0000],
        [    0.0001,     0.7695,     0.0312,     0.0004,     0.0237,     0.0002,     0.0071,     0.0086,     0.0206,     0.0503,     0.0092,     0.0167,     0.0001,     0.0065,     0.0544]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0211,      0.8711,      0.5195,      0.0513,      0.3652,      0.4414,      0.5391,      0.5742,      0.4551,      0.4043,      0.0115,      0.5156,      0.2500,      0.3066,      0.4082],
        [     0.1318,      7.6875,      5.6875,      1.8516,      3.6875,      4.4688,      4.7188,      4.4062,      3.7500,      4.1250,      1.4219,      4.1875,      1.4688,      3.1875,      4.6250],
        [     0.1016,     12.0625,      8.5625,     15.5000,     10.5000,      6.8125,      8.8750,      6.2188,      7.3438,      6.6250,      4.3750,      6.6875,      3.3125,      5.8438,      6.4688],
        [     0.0996,     13.7500,      8.6875,      7.9688,     17.8750,      9.5625,     10.6250,     13.0625,      9.9375,      8.0625,      3.3906,      9.8125,      5.7188,      5.7812,      8.1250],
        [     0.2793,     12.8125,      8.5625,      3.6094,      8.6250,     14.8750,      9.8125,      9.5000,      5.8125,      8.6250,     -1.3594,      8.1875,      4.0938,      3.8281,      7.5312],
        [     0.2578,     11.8125,      4.8750,      2.7344,      5.9688,      8.6250,     12.7500,     10.5000,      8.7500,      6.3125,     -0.2119,      7.0625,      2.5312,      5.2500,      6.5625],
        [     0.2949,     12.8750,      6.2500,      0.3730,      7.9062,      6.9062,     10.3750,     14.0625,      9.3750,      7.1250,      0.5234,      9.2500,      5.7500,      7.0625,      8.0000],
        [     0.2988,     11.6875,      4.1250,      2.7344,      6.7188,      5.0938,      7.5312,      7.2188,     14.0000,      7.3438,      4.7188,      8.5000,      3.3750,     12.0000,      7.1562],
        [     0.2168,      9.8750,      4.9062,      1.4375,      4.1875,      5.8750,      6.0312,      5.1562,      7.2188,     10.8750,      3.9531,      7.6562,      2.2812,      6.0312,     10.9375],
        [     0.0957,     11.6250,      5.7500,      6.4688,      6.1562,      3.0781,      7.3438,      4.9375,     10.1875,      5.7812,     16.2500,     10.0625,      3.7031,      9.8125,      7.5625],
        [     0.1885,     12.6250,      5.5625,      3.7656,      7.7500,      5.4062,      7.8438,      6.3438,     11.3125,      7.6250,     10.1250,     14.0625,      6.5000,     10.0000,      9.2500],
        [     0.0757,      9.5625,      5.7188,      2.5312,      5.2812,      5.4688,      4.9688,      7.8750,      5.5312,      3.9688,      1.6562,      6.8750,     16.3750,      9.8125,      5.6562],
        [     0.3066,     13.6875,      6.8438,      3.9219,      7.2188,      5.6875,      9.0000,      9.8750,     13.4375,      8.6250,      4.4375,      9.3125,     11.1250,     16.7500,     11.0000],
        [     0.1689,      9.5000,      5.3750,      1.9531,      4.4688,      5.8438,      5.3750,      5.1875,      6.5000,     10.0000,      4.0938,      7.2500,      3.7656,      7.5000,     11.8750],
        [     0.1074,      9.4375,      6.2188,      1.9375,      5.9375,      0.9375,      4.7500,      4.9375,      5.8125,      6.6875,      5.0000,      5.5938,      0.5625,      4.6562,      6.7812]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.3940],
        [0.2938],
        [0.2001],
        [0.2631],
        [0.2656],
        [0.1610],
        [0.1688],
        [0.2317],
        [0.2719],
        [0.2017],
        [0.2349],
        [0.1871],
        [0.2089],
        [0.1842]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0027,     0.9961,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0077,     0.7070,     0.2871,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0588,     0.3418,     0.1094,     0.4902,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0044,     0.5195,     0.1865,     0.0042,     0.2852,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1895,     0.1768,     0.0422,     0.2285,     0.0277,     0.3340,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0036,     0.0239,     0.0106,     0.0037,     0.0771,     0.0093,     0.8711,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0149,     0.0058,     0.0036,     0.0135,     0.0016,     0.0142,     0.8984,     0.0498,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0011,     0.0084,     0.0053,     0.0001,     0.0041,     0.0012,     0.0000,     0.0003,     0.9805,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0310,     0.0928,     0.0684,     0.0128,     0.0109,     0.0972,     0.0286,     0.0825,     0.2559,     0.3203,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0059,     0.0311,     0.0259,     0.0026,     0.0217,     0.0159,     0.0012,     0.0244,     0.4824,     0.1982,     0.1904,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0020,     0.0256,     0.0090,     0.0214,     0.0002,     0.0698,     0.0131,     0.1787,     0.0625,     0.4160,     0.1406,     0.0613,     0.0000,     0.0000,     0.0000],
        [    0.0071,     0.0060,     0.0026,     0.0069,     0.0014,     0.0049,     0.6680,     0.0349,     0.0047,     0.0173,     0.0197,     0.0664,     0.1621,     0.0000,     0.0000],
        [    0.0009,     0.0113,     0.0020,     0.0001,     0.0020,     0.0012,     0.0001,     0.0013,     0.3770,     0.0109,     0.0420,     0.0144,     0.0177,     0.5195,     0.0000],
        [    0.0017,     0.0542,     0.0133,     0.0021,     0.0015,     0.0256,     0.0012,     0.0530,     0.2363,     0.1318,     0.0498,     0.0294,     0.1055,     0.2188,     0.0762]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0014,     -0.0530,     -0.0767,     -0.1035,     -0.0645,     -0.0679,     -0.0371,     -0.0776,     -0.0874,     -0.0757,     -0.0967,     -0.0544,     -0.0786,     -0.0850,     -0.0938],
        [    -0.1758,      5.7188,      4.0312,     -1.0625,      2.7344,      3.1094,      0.2480,      1.6250,      4.6875,      3.6562,      3.4219,      1.9062,      1.8594,      4.7500,      4.4062],
        [     0.0825,      4.5938,      3.7031,      5.9688,      1.7500,      6.4375,      4.3438,      6.8125,      4.3125,      5.4375,      4.6875,      4.1875,      6.6250,      3.1406,      4.0000],
        [    -0.1787,      1.5859,      0.4434,      1.9453,      0.3027,      1.9219,      4.7500,      2.4219,     -1.5078,      0.0903,     -0.4297,      1.7188,      1.7031,     -2.0781,      0.1367],
        [    -0.0708,      4.6875,      3.6719,     -0.1328,      4.0938,      2.0781,     -0.4180,      1.1641,      4.1250,      2.4219,      2.3125,      2.4219,     -0.6992,      3.1250,      3.1406],
        [    -0.2002,     -0.2676,     -1.7031,     -0.0126,     -2.1250,      0.3672,      6.6562,      1.8906,     -5.2812,     -1.1875,     -3.6719,      0.6250,      1.6641,     -6.1562,     -2.5625],
        [    -0.1816,      1.7266,      0.9102,     -0.1289,      2.8906,      0.7891,      5.3125,      2.0938,      0.3418,      0.1904,     -1.1953,      2.0000,      0.5000,     -1.3828,      0.9805],
        [    -0.1162,     -1.0625,     -1.5469,     -0.2158,     -2.3438,     -0.1631,      3.9844,      1.0938,     -2.5000,     -0.4453,     -2.1406,      1.0625,      0.3105,     -3.5938,     -1.6875],
        [     0.0299,      2.0625,      1.6016,     -2.5312,      1.3438,      0.1504,     -5.2188,     -1.2812,      6.8125,      1.6406,      2.5781,      1.6641,      0.1387,      6.1250,      5.2812],
        [    -0.0280,      1.0703,      0.7578,     -0.9141,     -1.0781,      1.1172,     -0.1108,      0.9492,      2.0781,      2.2969,      1.1016,      1.4766,      2.0938,      1.7109,      2.1406],
        [     0.0359,      1.7031,      1.5156,     -0.7734,      1.3438,      1.0234,     -1.5703,      1.4609,      4.4375,      3.5469,      3.5156,      2.2812,      2.8438,      4.6250,      4.2812],
        [     0.1377,      2.6875,      1.6328,      2.5000,     -2.3906,      3.6875,      2.0156,      4.6250,      3.5781,      5.4688,      4.3750,      3.5469,      6.0625,      3.1094,      3.7031],
        [    -0.1118,     -0.2754,     -1.1172,     -0.1387,     -1.7188,     -0.4883,      4.4375,      1.4844,     -0.5195,      0.7852,      0.9062,      2.1250,      3.0156,     -0.3379,      0.9805],
        [     0.0317,      2.5625,      0.8203,     -1.8047,      0.8398,      0.3320,     -2.5312,      0.3984,      6.0625,      2.5312,      3.8906,      2.8125,      3.0156,      6.4062,      6.0625],
        [     0.0483,      3.5156,      2.1094,      0.2656,     -0.0850,      2.7656,     -0.2637,      3.4844,      4.9688,      4.4062,      3.4219,      2.9062,      4.1875,      4.9062,      3.8438]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6831],
        [0.3379],
        [0.3878],
        [0.3912],
        [0.2603],
        [0.1752],
        [0.2374],
        [0.3280],
        [0.2822],
        [0.2298],
        [0.1372],
        [0.2470],
        [0.2122],
        [0.1425]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0001,     0.0012,     0.0001,     0.0018,     0.0000,     0.0011,     0.0000,     0.0005,     0.0002,     0.0007,     0.0000,     0.0000,     0.0001,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[ -0.0938,  -0.9375,  -1.0938,  -1.0469,  -1.1484,  -1.3203,  -1.1094,  -1.2812,  -1.0391,  -1.0234,  -0.9453,  -1.4844,  -1.3281,  -1.3750,  -1.6875],
        [ -2.8594, -32.0000, -36.5000, -36.2500, -40.7500, -46.7500, -38.5000, -42.7500, -33.7500, -33.7500, -31.8750, -49.7500, -45.2500, -43.7500, -54.2500],
        [ -0.9531, -14.0625, -13.6875, -15.5000, -13.7500, -21.0000, -15.6875, -21.6250, -14.3750, -12.6250, -12.4375, -19.3750, -20.3750, -16.1250, -17.7500],
        [ -1.3359, -19.2500, -19.3750, -20.1250, -21.1250, -27.5000, -21.6250, -25.5000, -18.5000, -18.6250, -17.2500, -26.8750, -26.0000, -22.5000, -27.0000],
        [ -1.9375, -24.5000, -25.3750, -26.0000, -27.8750, -35.0000, -26.2500, -31.1250, -23.6250, -25.5000, -23.2500, -35.2500, -31.7500, -30.0000, -37.5000],
        [ -1.4531, -20.0000, -18.6250, -20.5000, -19.6250, -25.6250, -19.6250, -23.7500, -18.7500, -20.6250, -19.5000, -26.1250, -25.2500, -25.0000, -29.5000],
        [ -1.8281, -23.0000, -22.5000, -23.7500, -25.6250, -31.8750, -24.7500, -29.0000, -22.0000, -22.5000, -21.2500, -31.7500, -29.2500, -27.3750, -33.0000],
        [ -1.8984, -26.5000, -23.5000, -25.2500, -27.0000, -34.7500, -26.2500, -32.0000, -24.1250, -23.8750, -23.7500, -33.0000, -32.7500, -30.5000, -34.0000],
        [ -2.5469, -30.5000, -28.2500, -29.1250, -33.2500, -38.5000, -29.2500, -36.0000, -27.5000, -30.0000, -28.2500, -40.2500, -37.7500, -36.7500, -44.2500],
        [ -1.5547, -21.3750, -18.1250, -21.1250, -21.0000, -28.5000, -22.2500, -29.3750, -21.1250, -18.5000, -17.7500, -25.2500, -29.2500, -24.3750, -25.1250],
        [ -1.6797, -18.5000, -18.6250, -20.6250, -21.2500, -24.3750, -20.8750, -23.6250, -19.3750, -19.1250, -18.0000, -25.6250, -25.2500, -25.5000, -30.1250],
        [ -1.2500, -17.1250, -17.7500, -18.5000, -17.0000, -22.7500, -17.3750, -24.0000, -18.1250, -17.2500, -15.6875, -24.5000, -23.8750, -22.5000, -25.0000],
        [ -2.0312, -26.6250, -25.1250, -25.8750, -28.2500, -35.5000, -28.0000, -32.2500, -24.6250, -24.7500, -24.2500, -34.7500, -33.0000, -31.2500, -35.5000],
        [ -2.4375, -29.7500, -28.7500, -30.1250, -32.7500, -39.5000, -31.1250, -37.5000, -28.2500, -29.3750, -28.0000, -40.7500, -39.2500, -36.7500, -44.0000],
        [ -0.4863,  -9.5625,  -7.1562,  -9.3125,  -6.7812, -11.7500,  -7.2500, -13.3750,  -8.1875,  -8.8125,  -7.7500, -11.2500, -12.3125,  -9.3750,  -9.8750]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.7227],
        [0.5638],
        [0.6328],
        [0.6796],
        [0.5312],
        [0.6686],
        [0.5872],
        [0.6670],
        [0.6441],
        [0.6614],
        [0.5916],
        [0.6652],
        [0.6675],
        [0.5329]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0201,     -1.7500,     -2.7188,     -2.1094,     -1.9688,     -3.1875,     -1.5547,     -2.1250,     -3.3125,     -3.0469,     -2.4688,     -3.3906,     -2.7031,     -3.6094,     -3.4375],
        [    -0.4980,    -42.5000,    -68.5000,    -53.7500,    -49.5000,    -81.5000,    -41.0000,    -54.5000,    -82.5000,    -77.0000,    -63.0000,    -86.5000,    -70.0000,    -90.0000,    -88.0000],
        [    -0.3613,    -34.2500,    -50.0000,    -39.2500,    -36.5000,    -58.5000,    -27.7500,    -39.0000,    -61.2500,    -57.5000,    -46.2500,    -63.0000,    -49.7500,    -67.5000,    -64.0000],
        [    -0.5000,    -44.5000,    -67.0000,    -50.5000,    -49.7500,    -77.5000,    -37.5000,    -51.5000,    -83.5000,    -75.5000,    -61.2500,    -82.0000,    -65.0000,    -90.0000,    -83.5000],
        [    -0.4727,    -41.7500,    -63.0000,    -50.0000,    -46.7500,    -75.0000,    -38.0000,    -50.5000,    -78.0000,    -71.5000,    -58.0000,    -79.5000,    -64.5000,    -85.0000,    -79.5000],
        [    -0.7852,    -68.5000,   -102.5000,    -82.0000,    -76.0000,   -126.0000,    -60.7500,    -84.0000,   -129.0000,   -119.5000,    -98.5000,   -133.0000,   -106.5000,   -141.0000,   -134.0000],
        [    -0.5000,    -44.5000,    -66.0000,    -51.7500,    -49.2500,    -78.0000,    -38.5000,    -52.5000,    -81.5000,    -75.5000,    -60.5000,    -82.5000,    -66.5000,    -89.0000,    -83.0000],
        [    -0.5352,    -46.7500,    -71.0000,    -54.0000,    -51.7500,    -83.0000,    -40.5000,    -55.2500,    -87.5000,    -80.5000,    -65.5000,    -89.0000,    -70.5000,    -95.5000,    -89.5000],
        [    -0.7578,    -65.5000,    -99.0000,    -78.0000,    -72.5000,   -120.5000,    -57.7500,    -79.5000,   -124.5000,   -114.0000,    -93.5000,   -125.5000,   -102.0000,   -134.0000,   -127.5000],
        [    -0.7305,    -62.7500,   -101.0000,    -77.0000,    -74.0000,   -118.0000,    -58.0000,    -79.0000,   -122.0000,   -112.5000,    -91.5000,   -125.0000,   -100.5000,   -132.0000,   -126.5000],
        [    -0.5625,    -46.7500,    -79.0000,    -60.5000,    -55.5000,    -92.0000,    -45.7500,    -61.5000,    -92.5000,    -85.5000,    -71.0000,    -99.5000,    -80.0000,   -100.5000,   -100.0000],
        [    -0.5547,    -55.5000,    -77.5000,    -61.7500,    -59.0000,    -94.0000,    -44.5000,    -64.0000,   -100.0000,    -92.5000,    -76.0000,   -100.5000,    -79.0000,   -110.0000,   -102.5000],
        [    -0.6680,    -59.2500,    -92.0000,    -71.5000,    -66.0000,   -107.5000,    -53.7500,    -72.5000,   -110.0000,   -103.0000,    -84.0000,   -116.5000,    -93.0000,   -121.0000,   -117.0000],
        [    -0.7383,    -65.5000,   -101.5000,    -79.0000,    -73.5000,   -119.5000,    -59.2500,    -80.5000,   -124.0000,   -114.5000,    -93.5000,   -128.0000,   -103.0000,   -135.0000,   -129.0000],
        [    -0.5586,    -51.7500,    -77.0000,    -59.0000,    -57.0000,    -90.0000,    -42.5000,    -60.5000,    -96.0000,    -87.5000,    -72.0000,    -96.5000,    -75.5000,   -104.5000,    -98.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.9808],
        [0.8345],
        [0.7337],
        [0.9170],
        [0.6431],
        [0.9167],
        [0.5363],
        [0.9178],
        [0.8378],
        [0.9160],
        [0.7923],
        [0.8381],
        [0.9174],
        [0.6720]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.6836,     0.3145,     0.0012,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0623,     0.4336,     0.2734,     0.2324,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0014,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0026,     0.0640,     0.1089,     0.0117,     0.8125,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9883,     0.0097,     0.0001,     0.0001,     0.0003,     0.0011,     0.0017,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0008,     0.0078,     0.0283,     0.1348,     0.0151,     0.5703,     0.0369,     0.2041,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9961,     0.0047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9062,     0.0791,     0.0008,     0.0005,     0.0020,     0.0017,     0.0084,     0.0004,     0.0014,     0.0004,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9727,     0.0259,     0.0000,     0.0000,     0.0001,     0.0001,     0.0008,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1035,     0.4531,     0.0197,     0.0312,     0.0598,     0.0649,     0.0603,     0.0182,     0.0938,     0.0209,     0.0679,     0.0053,     0.0000,     0.0000,     0.0000],
        [    0.6367,     0.2412,     0.0025,     0.0044,     0.0088,     0.0306,     0.0284,     0.0079,     0.0172,     0.0026,     0.0079,     0.0003,     0.0117,     0.0000,     0.0000],
        [    0.9922,     0.0068,     0.0000,     0.0000,     0.0000,     0.0001,     0.0002,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0001,     0.0138,     0.0058,     0.0879,     0.0381,     0.1543,     0.0574,     0.0361,     0.1016,     0.0129,     0.4004,     0.0364,     0.0052,     0.0165,     0.0339]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0014,     -0.0260,     -0.1250,     -0.0101,     -0.0469,     -0.0488,     -0.0398,     -0.0684,     -0.0620,     -0.1719,     -0.0240,     -0.1001,     -0.1465,     -0.1367,     -0.0845],
        [    -0.5977,     -9.0625,    -13.9375,    -15.2500,    -14.1875,    -14.0000,    -12.6875,    -15.3750,    -14.4375,    -13.8125,    -14.3125,    -18.8750,    -14.8125,    -15.6875,    -17.5000],
        [    -0.1943,     -0.9688,     -6.5000,     -6.0938,     -4.1562,     -5.8750,     -4.5312,     -5.7812,     -4.2500,     -7.2500,     -5.9688,     -7.7188,     -6.2500,     -5.0312,     -8.3750],
        [     0.1289,      2.0625,      1.6094,      1.4453,      1.1641,      3.1562,      1.4141,      1.6250,      2.3438,      1.8984,      3.0625,      1.7891,      1.5469,      1.3125,      1.3438],
        [    -0.4492,     -7.0312,    -12.8125,    -11.3750,    -10.3125,     -8.8125,     -8.9375,    -11.5000,    -10.8125,    -12.1875,    -10.4375,    -15.5000,    -11.5625,    -12.6875,    -13.2500],
        [     0.3789,      4.8438,      8.0000,      8.5625,      6.3125,     10.5625,      7.6250,      8.6250,      8.3750,      9.0625,     10.2500,     10.0625,      8.2500,      7.7188,      9.0625],
        [    -0.3496,     -4.9688,     -9.6250,     -9.2500,     -8.3750,     -7.1875,     -6.6875,     -9.2500,     -8.6250,     -9.0000,     -9.0625,    -11.9375,     -9.4375,     -9.9375,    -10.8750],
        [     0.2275,      2.5469,      3.8438,      5.4062,      3.2031,      6.8438,      4.0938,      5.8125,      5.0938,      4.6250,      6.7188,      5.3750,      5.0000,      3.8750,      5.4062],
        [    -0.5312,     -5.8750,    -14.2500,    -13.2500,    -11.1875,    -10.4375,     -9.1875,    -13.6875,    -11.8750,    -14.8125,    -12.4375,    -17.6250,    -13.3750,    -13.3125,    -16.7500],
        [    -0.2949,     -2.7344,     -7.3750,     -7.8750,     -6.4062,     -6.5938,     -4.9688,     -8.0000,     -6.7812,     -8.0000,     -7.7188,     -9.5625,     -7.8125,     -7.1875,     -9.9375],
        [    -0.4688,     -4.0938,    -11.4375,    -11.5625,     -9.5000,     -9.8750,     -7.5938,    -12.5625,    -10.3125,    -12.8750,    -11.8125,    -15.0625,    -12.3750,    -11.3125,    -15.2500],
        [    -0.0085,      1.4688,     -1.6719,     -1.2031,     -0.5586,     -0.4766,     -0.5508,     -1.7500,     -0.1079,     -1.6094,     -0.4336,     -2.9688,     -2.0000,     -1.4609,     -3.5625],
        [    -0.2188,     -1.1875,     -5.7500,     -5.1875,     -4.5000,     -3.2500,     -3.3281,     -4.5938,     -3.8281,     -5.7188,     -4.5938,     -7.8125,     -4.2188,     -4.6562,     -6.9375],
        [    -0.5234,     -5.5000,    -13.9375,    -13.6250,    -10.9375,     -9.9375,     -9.1875,    -12.9375,    -11.1250,    -14.0000,    -12.0625,    -17.7500,    -11.7500,    -12.1875,    -16.3750],
        [     0.2734,      5.1250,      4.2812,      7.0000,      6.1562,      7.5312,      6.5625,      6.0938,      7.1250,      5.0625,      8.5000,      6.0938,      4.1562,      5.3125,      6.0312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[1.0000],
        [0.6904],
        [0.2994],
        [0.1353],
        [0.4211],
        [0.1758],
        [0.4159],
        [0.1942],
        [0.3145],
        [0.2425],
        [0.3243],
        [0.0942],
        [0.3750],
        [0.2491],
        [0.0839]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.9922,     0.0060,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0007,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0654,     0.8906,     0.0420,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0005,     1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0522,     0.9180,     0.0276,     0.0001,     0.0012,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0011,     0.9961,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.2061,     0.7891,     0.0046,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0009,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0026,     0.9961,     0.0022,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0189,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9805,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0030,     0.3457,     0.0062,     0.0000,     0.0001,     0.0000,     0.0001,     0.0000,     0.0039,     0.0001,     0.6406,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0009,     0.2148,     0.0005,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0001,     0.0000,     0.7852,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0308,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.9375,     0.0000,     0.0000,     0.0320]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,     -0.0082,      0.0894,      0.0811,      0.0078,      0.0542,      0.0197,      0.0493,      0.0248,      0.0737,      0.0503,      0.1123,      0.0271,      0.0483,      0.1025],
        [     0.0320,     -5.0938,     -8.3125,     -5.7812,      1.0859,     -2.4219,     -0.4258,     -2.7344,      0.4062,     -5.2812,     -2.5625,     -9.6250,     -1.2188,     -2.7656,     -8.3125],
        [    -0.1172,     15.7500,     33.7500,     27.6250,      6.5312,     18.5000,      8.8750,     18.6250,      7.4062,     25.3750,     17.0000,     38.0000,      9.6250,     16.8750,     35.0000],
        [    -0.1230,     21.3750,     31.6250,     24.2500,      6.5000,     15.5000,      8.3125,     16.0000,      5.4375,     22.3750,     14.6875,     34.0000,      7.7500,     14.6250,     31.3750],
        [    -0.0430,      9.6875,     12.3125,      9.2500,      2.9844,      5.9375,      3.5781,      6.1875,      2.1562,      8.6875,      5.7500,     12.7500,      2.9844,      5.6875,     12.0625],
        [    -0.1045,     19.7500,     27.3750,     20.3750,      5.4062,     12.5625,      7.0000,     13.0000,      3.9375,     19.0000,     12.1875,     28.6250,      6.1250,     12.0000,     26.6250],
        [    -0.0354,      9.1250,     11.9375,      8.4375,      2.5312,      5.2812,      3.1094,      5.5938,      1.7734,      8.3125,      5.2812,     11.6875,      2.5469,      4.9062,     11.2500],
        [    -0.0903,     16.8750,     23.7500,     17.7500,      4.7812,     11.1250,      6.0938,     11.5000,      3.7031,     16.6250,     10.8125,     24.8750,      5.4062,     10.5625,     23.2500],
        [    -0.0762,     15.6250,     17.0000,     11.8125,      3.6719,      6.6562,      4.2812,      7.1562,      1.5547,     10.9375,      6.7188,     16.8750,      3.1094,      6.8438,     15.6250],
        [    -0.1260,     20.5000,     30.7500,     23.7500,      6.1875,     14.9375,      7.9688,     15.3750,      5.0000,     21.7500,     14.3125,     33.2500,      7.4062,     14.2500,     30.6250],
        [    -0.1055,     18.3750,     24.3750,     18.2500,      5.0938,     11.0000,      6.3438,     11.5000,      3.2031,     16.7500,     10.6250,     25.8750,      5.5000,     10.8750,     23.7500],
        [    -0.1562,     25.0000,     39.7500,     31.3750,      8.1250,     20.2500,     10.5000,     20.7500,      7.4375,     28.6250,     19.0000,     43.7500,     10.3125,     19.2500,     40.2500],
        [    -0.0554,     10.8125,     15.5625,     11.5000,      3.0781,      7.2188,      3.8594,      7.3750,      2.3750,     11.0625,      7.1562,     16.1250,      3.5938,      6.7500,     15.2500],
        [    -0.1045,     19.2500,     24.6250,     18.5000,      5.5625,     11.3750,      6.5938,     11.9375,      3.7500,     17.1250,     11.0625,     26.0000,      5.6875,     11.2500,     24.0000],
        [    -0.1543,     24.8750,     38.7500,     30.1250,      7.8125,     19.2500,     10.0000,     19.7500,      6.8438,     27.6250,     18.1250,     42.2500,      9.6875,     18.2500,     38.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.4488],
        [    0.0833],
        [    0.0000],
        [    0.0128],
        [    0.0000],
        [    0.0040],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0004,     0.9961,     0.0027,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0084,     0.0000,     0.9922,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0004,     0.0000,     0.9492,     0.0000,     0.0505,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0036,     0.0000,     0.8672,     0.0000,     0.1299,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0000,     0.7617,     0.0000,     0.0408,     0.0000,     0.1953,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0004,     0.0000,     0.7109,     0.0000,     0.0557,     0.0000,     0.2256,     0.0089,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0000,     0.6484,     0.0000,     0.0371,     0.0000,     0.1729,     0.0046,     0.1377,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0002,     0.0037,     0.0479,     0.0061,     0.2500,     0.0131,     0.1465,     0.0215,     0.2080,     0.1045,     0.1982,     0.0010,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0003,     0.0000,     0.6211,     0.0000,     0.0405,     0.0000,     0.1787,     0.0059,     0.1455,     0.0000,     0.0096,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0002,     0.0000,     0.6172,     0.0000,     0.0403,     0.0000,     0.1758,     0.0056,     0.1445,     0.0000,     0.0091,     0.0081,     0.0000],
        [    0.0000,     0.0001,     0.0181,     0.0003,     0.2969,     0.0012,     0.1138,     0.0031,     0.1953,     0.0576,     0.1826,     0.0000,     0.0674,     0.0645,     0.0001]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0006,      0.0106,      0.1504,      0.0344,      0.1050,      0.0483,      0.0864,      0.0515,      0.0913,      0.0698,      0.0889,      0.0147,      0.0771,      0.0752,      0.0255],
        [     0.0099,    -12.4375,    -34.0000,    -19.1250,    -39.7500,    -23.1250,    -37.2500,    -26.2500,    -37.5000,    -35.0000,    -37.7500,     -8.3125,    -35.5000,    -35.2500,    -13.8125],
        [    -0.0178,     10.5625,     32.2500,     16.5000,     35.7500,     20.5000,     33.0000,     23.0000,     34.0000,     30.6250,     33.7500,      7.2188,     31.3750,     31.0000,     12.0625],
        [    -0.0232,      7.2188,     15.0000,      9.0625,     19.1250,     11.1250,     17.7500,     12.5000,     18.5000,     16.7500,     18.3750,      4.0312,     17.0000,     16.8750,      6.5938],
        [    -0.0369,     14.6250,     36.7500,     21.2500,     45.0000,     26.1250,     41.7500,     29.3750,     43.2500,     39.2500,     43.0000,      9.3750,     40.0000,     39.7500,     15.4375],
        [    -0.0238,      8.5000,     17.8750,     10.6875,     22.7500,     13.1875,     21.0000,     14.7500,     22.0000,     19.8750,     21.8750,      4.7500,     20.1250,     20.0000,      7.7812],
        [    -0.0356,     13.7500,     32.2500,     19.0000,     40.2500,     23.2500,     37.2500,     26.1250,     38.7500,     35.0000,     38.5000,      8.3750,     35.5000,     35.5000,     13.7500],
        [    -0.0287,      9.6250,     20.0000,     12.0000,     25.3750,     14.7500,     23.5000,     16.5000,     24.6250,     22.2500,     24.5000,      5.3438,     22.5000,     22.5000,      8.6875],
        [    -0.0364,     14.0625,     31.6250,     18.6250,     39.5000,     23.0000,     36.7500,     25.7500,     38.2500,     34.5000,     38.0000,      8.2500,     35.0000,     35.0000,     13.5625],
        [    -0.0398,     13.0625,     27.8750,     16.7500,     35.2500,     20.6250,     32.7500,     23.1250,     34.2500,     31.0000,     34.0000,      7.4375,     31.3750,     31.2500,     12.1875],
        [    -0.0386,     13.9375,     30.8750,     18.3750,     39.0000,     22.6250,     36.0000,     25.3750,     37.5000,     34.0000,     37.2500,      8.1250,     34.5000,     34.2500,     13.3125],
        [    -0.0091,      2.8438,      5.4062,      3.3438,      7.0625,      4.1250,      6.5312,      4.5938,      6.8750,      6.1875,      6.8438,      1.5000,      6.2500,      6.2500,      2.4219],
        [    -0.0376,     13.4375,     29.0000,     17.2500,     36.5000,     21.2500,     34.0000,     23.8750,     35.2500,     32.0000,     35.2500,      7.6562,     32.5000,     32.2500,     12.5625],
        [    -0.0398,     13.8750,     30.0000,     18.1250,     38.0000,     22.1250,     35.2500,     24.8750,     36.7500,     33.2500,     36.5000,      8.0000,     33.7500,     33.7500,     13.1250],
        [    -0.0162,      5.0312,     10.3750,      6.2500,     13.1250,      7.6562,     12.1875,      8.6250,     12.7500,     11.5000,     12.6875,      2.7656,     11.6875,     11.6250,      4.5312]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.6242],
        [    0.0000],
        [    0.0001],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0011],
        [    0.0000],
        [    0.0000],
        [    0.0002]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.6523,     0.3496,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.6328,     0.3652,     0.0024,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.5312,     0.2852,     0.0010,     0.1836,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.5000,     0.2949,     0.0022,     0.2021,     0.0008,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4688,     0.2539,     0.0009,     0.1641,     0.0003,     0.1123,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.1455,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.8555,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4062,     0.2578,     0.0041,     0.1875,     0.0017,     0.1416,     0.0000,     0.0001,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0010,     0.3047,     0.2432,     0.0334,     0.2080,     0.0222,     0.1816,     0.0000,     0.0047,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.4512,     0.2480,     0.0010,     0.1621,     0.0003,     0.1118,     0.0000,     0.0000,     0.0000,     0.0261,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0119,     0.2207,     0.1914,     0.0591,     0.1748,     0.0466,     0.1611,     0.0000,     0.0181,     0.0006,     0.1152,     0.0001,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000],
        [    0.0000,     0.0000,     0.3906,     0.2090,     0.0006,     0.1338,     0.0002,     0.0903,     0.0000,     0.0000,     0.0000,     0.0195,     0.0000,     0.0000,     0.1562]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0001,      0.1445,      0.1992,      0.1973,      0.1816,      0.1963,      0.1777,      0.1953,     -0.0071,      0.1660,      0.1201,      0.1895,      0.0967,     -0.0928,      0.1963],
        [    -0.0269,     62.2500,     87.5000,     86.5000,     79.0000,     86.0000,     77.5000,     85.5000,     -5.8438,     72.0000,     51.2500,     83.5000,     40.7500,    -44.2500,     86.0000],
        [    -0.0295,     50.0000,     70.0000,     69.5000,     63.5000,     69.0000,     62.2500,     68.5000,     -5.0625,     57.7500,     40.7500,     67.0000,     32.5000,    -35.7500,     69.0000],
        [    -0.0291,     48.7500,     68.5000,     68.0000,     62.0000,     67.5000,     60.7500,     67.0000,     -4.9688,     56.5000,     40.0000,     65.5000,     31.6250,    -35.0000,     67.5000],
        [    -0.0264,     42.7500,     59.7500,     59.0000,     54.0000,     58.7500,     53.0000,     58.2500,     -4.4375,     49.2500,     34.7500,     57.0000,     27.5000,    -30.6250,     58.7500],
        [    -0.0288,     48.2500,     67.5000,     67.0000,     61.2500,     66.5000,     60.0000,     66.0000,     -4.9375,     55.7500,     39.5000,     64.5000,     31.2500,    -34.5000,     66.5000],
        [    -0.0256,     41.5000,     58.0000,     57.2500,     52.5000,     57.0000,     51.5000,     56.7500,     -4.3125,     47.7500,     33.7500,     55.2500,     26.7500,    -29.7500,     57.0000],
        [    -0.0286,     47.7500,     67.0000,     66.0000,     60.5000,     66.0000,     59.2500,     65.5000,     -4.8750,     55.0000,     39.0000,     64.0000,     30.8750,    -34.2500,     66.0000],
        [     0.0065,    -23.2500,    -34.5000,    -34.2500,    -31.5000,    -34.0000,    -30.8750,    -34.0000,      1.7734,    -28.7500,    -20.7500,    -33.2500,    -16.5000,     17.0000,    -34.2500],
        [    -0.0232,     35.2500,     48.7500,     48.2500,     44.2500,     48.0000,     43.2500,     47.7500,     -3.7812,     40.2500,     28.3750,     46.7500,     22.5000,    -25.2500,     48.2500],
        [    -0.0146,     17.1250,     22.8750,     22.6250,     20.6250,     22.5000,     20.2500,     22.3750,     -2.1094,     18.7500,     13.0625,     21.8750,     10.3125,    -12.1250,     22.5000],
        [    -0.0275,     46.7500,     65.5000,     65.0000,     59.2500,     64.5000,     58.0000,     64.0000,     -4.7812,     54.0000,     38.0000,     62.5000,     30.2500,    -33.5000,     64.5000],
        [    -0.0108,     10.3750,     13.3125,     13.1250,     11.9375,     13.0625,     11.7500,     12.9375,     -1.4453,     10.7500,      7.4062,     12.6250,      5.8125,     -7.2500,     13.0625],
        [     0.0188,    -45.7500,    -66.5000,    -66.0000,    -60.2500,    -65.5000,    -59.2500,    -65.0000,      3.9688,    -55.0000,    -39.2500,    -63.7500,    -31.3750,     33.2500,    -65.5000],
        [    -0.0289,     49.0000,     68.5000,     68.0000,     62.2500,     67.5000,     61.0000,     67.0000,     -4.9688,     56.5000,     40.0000,     65.5000,     31.7500,    -35.0000,     67.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0735],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.1901],
        [    0.0000],
        [    0.0009],
        [    0.0000],
        [    0.0082],
        [    0.0009],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.5117,     0.4863,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3594,     0.3418,     0.2988,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2695,     0.2559,     0.2236,     0.2520,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2197,     0.2090,     0.1826,     0.2070,     0.1826,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1826,     0.1729,     0.1514,     0.1719,     0.1514,     0.1699,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1641,     0.1562,     0.1367,     0.1543,     0.1367,     0.1533,     0.0005,     0.0972,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1582,     0.1504,     0.1328,     0.1484,     0.1328,     0.1484,     0.0012,     0.0957,     0.0334,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1387,     0.1318,     0.1157,     0.1309,     0.1157,     0.1299,     0.0004,     0.0820,     0.0267,     0.1270,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1318,     0.1260,     0.1128,     0.1250,     0.1128,     0.1240,     0.0209,     0.0840,     0.0334,     0.1216,     0.0084,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000,     0.0000],
        [    0.0000,     0.0000,     0.1221,     0.1162,     0.1016,     0.1147,     0.1016,     0.1143,     0.0004,     0.0718,     0.0234,     0.1118,     0.0040,     0.0000,     0.1177]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[    -0.0000,      0.0850,      0.0342,      0.0342,      0.0339,      0.0342,      0.0339,      0.0342,     -0.2090,      0.0337,      0.0320,      0.0342,      0.0271,      0.1934,      0.0344],
        [     0.0030,     13.0625,     19.0000,     19.0000,     19.0000,     19.0000,     19.0000,     19.0000,     10.1250,     18.7500,     18.2500,     19.0000,     17.2500,     -8.1875,     19.0000],
        [     0.0062,     21.3750,     35.7500,     35.7500,     35.7500,     35.7500,     35.7500,     35.7500,     30.0000,     35.2500,     34.2500,     35.7500,     32.5000,    -25.5000,     35.7500],
        [     0.0061,     21.2500,     35.7500,     35.7500,     35.5000,     35.7500,     35.5000,     35.7500,     30.0000,     35.2500,     34.2500,     35.7500,     32.2500,    -25.3750,     35.7500],
        [     0.0061,     21.2500,     35.7500,     35.5000,     35.5000,     35.5000,     35.5000,     35.5000,     29.8750,     35.0000,     34.0000,     35.5000,     32.2500,    -25.2500,     35.5000],
        [     0.0061,     21.3750,     35.7500,     35.7500,     35.5000,     35.7500,     35.5000,     35.7500,     30.0000,     35.2500,     34.2500,     35.7500,     32.2500,    -25.3750,     35.7500],
        [     0.0061,     21.2500,     35.7500,     35.5000,     35.5000,     35.5000,     35.5000,     35.5000,     29.8750,     35.0000,     34.0000,     35.5000,     32.2500,    -25.2500,     35.5000],
        [     0.0062,     21.2500,     35.7500,     35.7500,     35.5000,     35.7500,     35.5000,     35.7500,     30.0000,     35.2500,     34.0000,     35.7500,     32.2500,    -25.3750,     35.7500],
        [     0.0009,      0.6758,     18.1250,     18.1250,     18.0000,     18.1250,     18.0000,     18.1250,     55.7500,     17.8750,     17.3750,     18.0000,     16.8750,    -49.2500,     18.1250],
        [     0.0060,     21.0000,     35.2500,     35.2500,     35.2500,     35.2500,     35.2500,     35.2500,     29.5000,     34.7500,     33.7500,     35.2500,     32.0000,    -25.0000,     35.2500],
        [     0.0056,     20.0000,     33.7500,     33.7500,     33.5000,     33.7500,     33.5000,     33.7500,     28.8750,     33.2500,     32.2500,     33.7500,     30.5000,    -24.5000,     33.7500],
        [     0.0061,     21.2500,     35.7500,     35.7500,     35.5000,     35.7500,     35.5000,     35.7500,     29.8750,     35.2500,     34.0000,     35.7500,     32.2500,    -25.3750,     35.7500],
        [     0.0044,     17.2500,     30.2500,     30.1250,     30.0000,     30.1250,     30.0000,     30.1250,     28.3750,     29.7500,     28.8750,     30.1250,     27.5000,    -24.1250,     30.1250],
        [    -0.0033,     -0.3906,    -16.7500,    -16.7500,    -16.6250,    -16.7500,    -16.6250,    -16.7500,    -51.5000,    -16.5000,    -16.0000,    -16.6250,    -15.5000,     45.5000,    -16.7500],
        [     0.0061,     21.2500,     35.7500,     35.7500,     35.5000,     35.7500,     35.5000,     35.7500,     30.0000,     35.2500,     34.2500,     35.7500,     32.2500,    -25.3750,     35.7500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.3355],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.0834],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.3333],
        [    0.0687],
        [    0.0000]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.5000,     0.5000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.3320,     0.3320,     0.3359,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.2490,     0.2490,     0.2520,     0.2490,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1982,     0.1992,     0.2021,     0.1992,     0.2021,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1660,     0.1660,     0.1680,     0.1660,     0.1680,     0.1660,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1650,     0.1660,     0.1689,     0.1660,     0.1689,     0.1660,     0.0003,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1426,     0.1426,     0.1445,     0.1426,     0.1445,     0.1426,     0.0000,     0.1426,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1279,     0.1279,     0.1299,     0.1279,     0.1299,     0.1279,     0.0000,     0.1279,     0.1001,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.1138,     0.1138,     0.1152,     0.1138,     0.1152,     0.1138,     0.0000,     0.1138,     0.0884,     0.1128,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.0001,     0.1133,     0.1133,     0.1143,     0.1133,     0.1143,     0.1133,     0.0000,     0.1133,     0.0923,     0.1128,     0.0002,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0781,     0.0781,     0.0801,     0.0781,     0.0801,     0.0781,     0.0000,     0.0781,     0.0518,     0.0771,     0.0000,     0.3203,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0000,      0.1406,      0.1670,      0.1670,      0.1670,      0.1670,      0.1670,      0.1670,      0.1050,      0.1670,      0.1650,      0.1670,      0.1377,      0.1553,     -0.0571],
        [     0.0146,     27.3750,     33.2500,     33.2500,     33.2500,     33.2500,     33.2500,     33.2500,     23.7500,     33.2500,     33.2500,     33.2500,     28.1250,     31.0000,    -11.8750],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0244,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0479,     46.7500,     56.5000,     56.5000,     56.5000,     56.5000,     56.5000,     56.5000,     50.2500,     56.5000,     56.2500,     56.5000,     48.0000,     59.2500,    -22.6250],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0242,     40.7500,     50.0000,     50.0000,     50.0000,     50.0000,     50.0000,     50.0000,     36.0000,     50.0000,     49.7500,     50.0000,     42.2500,     46.7500,    -17.8750],
        [     0.0245,     41.7500,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     51.0000,     36.7500,     51.0000,     50.7500,     51.0000,     43.0000,     47.5000,    -18.2500],
        [     0.0201,     33.0000,     40.2500,     40.2500,     40.5000,     40.2500,     40.5000,     40.2500,     29.6250,     40.2500,     40.2500,     40.2500,     34.0000,     38.0000,    -14.5625],
        [     0.0542,     66.0000,     79.5000,     79.5000,     79.5000,     79.5000,     79.5000,     79.5000,     65.5000,     79.5000,     79.0000,     79.5000,     67.0000,     80.5000,    -30.6250],
        [    -0.0199,    -24.3750,    -29.6250,    -29.6250,    -29.6250,    -29.6250,    -29.6250,    -29.6250,    -23.8750,    -29.6250,    -29.5000,    -29.6250,    -25.0000,    -29.3750,     11.2500]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0421]], device='cuda:0')
tensor([[    1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     1.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000],
        [    0.0000,     0.9844,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0146,     0.0000,     0.0000],
        [    0.0000,     0.6133,     0.0040,     0.0040,     0.0041,     0.0040,     0.0040,     0.0040,     0.0000,     0.0041,     0.0043,     0.0041,     0.3496,     0.0000,     0.0000],
        [    0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     0.0000,     1.0000]], device='cuda:0', dtype=torch.bfloat16)
RAWVALUES
tensor([[     0.0008,      0.4375,      0.3828,      0.3828,      0.3828,      0.3828,      0.3828,      0.3828,      0.1660,      0.3828,      0.3828,      0.3828,      0.4316,      0.0415,     -0.2168],
        [     0.6211,    336.0000,    296.0000,    296.0000,    296.0000,    296.0000,    296.0000,    296.0000,    126.5000,    296.0000,    298.0000,    296.0000,    332.0000,     31.5000,   -165.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.0000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.2402,    133.0000,    116.0000,    116.0000,    116.0000,    116.0000,    116.0000,    116.0000,     52.5000,    116.0000,    116.5000,    116.0000,    131.0000,     14.6250,    -67.5000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.5000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.5000,    249.0000,    250.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.5234,    282.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    249.0000,    104.5000,    249.0000,    249.0000,    249.0000,    278.0000,     25.1250,   -137.0000],
        [     0.6094,    332.0000,    292.0000,    292.0000,    292.0000,    292.0000,    292.0000,    292.0000,    124.0000,    292.0000,    292.0000,    292.0000,    328.0000,     30.7500,   -163.0000],
        [     0.0554,     33.0000,     28.0000,     28.0000,     28.0000,     28.0000,     28.0000,     28.0000,     14.5000,     28.0000,     28.0000,     28.0000,     32.5000,      5.0312,    -17.8750],
        [    -0.3242,   -179.0000,   -156.0000,   -156.0000,   -156.0000,   -156.0000,   -156.0000,   -156.0000,    -69.0000,   -156.0000,   -157.0000,   -156.0000,   -176.0000,    -18.6250,     89.5000]], device='cuda:0', dtype=torch.bfloat16)
========
RESW: tensor([[    1.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0833],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.0000],
        [    0.1406],
        [    0.0000]], device='cuda:0')
rank 0 sample 0: A Poem for you! Roses are red, Potatoes are 
------
		(-:0.0001,:0.6250-:0.0001-:0.0001-:0.0001-:0.0000 and:0.0396,:0.0762)
,
------
		(,:0.6250-:0.0001-:0.0001-:0.0001-:0.0000 and:0.0396,:0.0762,:0.0762)
,,,,,,,,,,,,,,,
@ 6050 train 4.1483 , allloss: 4.1483, dt: 1178.28ms, fracRes: 0.1874, norm(attn): 38.2500, norm(output): 3.1250, norm(x): 3.2767, norm(y): 0.9830, norm:37.9833, tok/sec: 111239.97, flops:116.78, batch-reuse:1
@ 6051 train 5.5764 , allloss: 5.5764, dt: 711.11ms, fracRes: 0.1724, norm(attn): 36.5000, norm(output): 11.5000, norm(x): 11.5567, norm(y): 0.9659, norm:494.8026, tok/sec: 184319.83, flops:193.50, batch-reuse:1
@ 6052 train 4.0020 , allloss: 4.0020, dt: 725.00ms, fracRes: 0.1957, norm(attn): 38.0000, norm(output): 0.9883, norm(x): 1.1503, norm(y): 0.9867, norm:761.7654, tok/sec: 180788.45, flops:189.79, batch-reuse:1
@ 6053 train 3.9478 , allloss: 3.9478, dt: 727.24ms, fracRes: 0.2004, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6231, norm(y): 0.9870, norm:1.3922, tok/sec: 180232.27, flops:189.21, batch-reuse:1
@ 6054 train 3.9474 , allloss: 3.9474, dt: 727.54ms, fracRes: 0.2010, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6162, norm(y): 0.9856, norm:0.6645, tok/sec: 180156.78, flops:189.13, batch-reuse:1
@ 6055 train 3.9691 , allloss: 3.9691, dt: 723.61ms, fracRes: 0.1983, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6128, norm(y): 0.9862, norm:0.6431, tok/sec: 181136.92, flops:190.16, batch-reuse:1
@ 6056 train 4.0442 , allloss: 4.0442, dt: 715.71ms, fracRes: 0.1915, norm(attn): 38.5000, norm(output): 0.9258, norm(x): 1.0771, norm(y): 0.9856, norm:11.4323, tok/sec: 183135.04, flops:192.26, batch-reuse:1
@ 6057 train 3.9810 , allloss: 3.9810, dt: 719.23ms, fracRes: 0.1949, norm(attn): 39.5000, norm(output): 0.4492, norm(x): 0.6051, norm(y): 0.9881, norm:0.9761, tok/sec: 182239.72, flops:191.32, batch-reuse:1
@ 6058 train 3.9387 , allloss: 3.9387, dt: 717.94ms, fracRes: 0.1937, norm(attn): 39.5000, norm(output): 0.4414, norm(x): 0.5960, norm(y): 0.9882, norm:0.8639, tok/sec: 182566.64, flops:191.66, batch-reuse:1
@ 6059 train 3.9010 , allloss: 3.9010, dt: 721.97ms, fracRes: 0.1934, norm(attn): 39.5000, norm(output): 0.4395, norm(x): 0.5927, norm(y): 0.9883, norm:0.6050, tok/sec: 181546.49, flops:190.59, batch-reuse:1
@ 6060 train 3.8449 , allloss: 3.8449, dt: 718.09ms, fracRes: 0.1934, norm(attn): 39.2500, norm(output): 0.4414, norm(x): 0.5975, norm(y): 0.9887, norm:0.5680, tok/sec: 182528.70, flops:191.62, batch-reuse:1
@ 6061 train 3.8630 , allloss: 3.8630, dt: 704.69ms, fracRes: 0.1939, norm(attn): 38.5000, norm(output): 0.4434, norm(x): 0.6010, norm(y): 0.9893, norm:0.5112, tok/sec: 186000.28, flops:195.26, batch-reuse:1
@ 6062 train 3.8466 , allloss: 3.8466, dt: 707.92ms, fracRes: 0.1935, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6056, norm(y): 0.9905, norm:0.5203, tok/sec: 185151.47, flops:194.37, batch-reuse:1
@ 6063 train 3.9045 , allloss: 3.9045, dt: 716.84ms, fracRes: 0.1932, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6043, norm(y): 0.9902, norm:0.5032, tok/sec: 182847.30, flops:191.95, batch-reuse:1
@ 6064 train 3.9047 , allloss: 3.9047, dt: 721.63ms, fracRes: 0.1931, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6037, norm(y): 0.9895, norm:0.4685, tok/sec: 181634.36, flops:190.68, batch-reuse:1
@ 6065 train 3.9031 , allloss: 3.9031, dt: 713.10ms, fracRes: 0.1930, norm(attn): 38.5000, norm(output): 0.6172, norm(x): 0.7696, norm(y): 0.9882, norm:9.4044, tok/sec: 183806.79, flops:192.96, batch-reuse:1
@ 6066 train 3.8530 , allloss: 3.8530, dt: 713.45ms, fracRes: 0.1930, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.5979, norm(y): 0.9888, norm:0.5732, tok/sec: 183716.93, flops:192.87, batch-reuse:1
@ 6067 train 3.8455 , allloss: 3.8455, dt: 697.74ms, fracRes: 0.1936, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6011, norm(y): 0.9884, norm:0.4160, tok/sec: 187852.06, flops:197.21, batch-reuse:1
@ 6068 train 3.8604 , allloss: 3.8604, dt: 698.92ms, fracRes: 0.1948, norm(attn): 38.5000, norm(output): 0.4473, norm(x): 0.6054, norm(y): 0.9889, norm:0.5013, tok/sec: 187536.07, flops:196.88, batch-reuse:1
@ 6069 train 3.9036 , allloss: 3.9036, dt: 711.91ms, fracRes: 0.1950, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6093, norm(y): 0.9890, norm:0.4474, tok/sec: 184113.22, flops:193.28, batch-reuse:1
@ 6070 train 3.8674 , allloss: 3.8674, dt: 705.40ms, fracRes: 0.1944, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6103, norm(y): 0.9902, norm:0.4095, tok/sec: 185811.87, flops:195.07, batch-reuse:1
@ 6071 train 3.8192 , allloss: 3.8192, dt: 709.70ms, fracRes: 0.1957, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.6067, norm(y): 0.9897, norm:0.3953, tok/sec: 184686.52, flops:193.88, batch-reuse:1
@ 6072 train 3.8298 , allloss: 3.8298, dt: 712.87ms, fracRes: 0.1942, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.6021, norm(y): 0.9893, norm:0.3865, tok/sec: 183865.25, flops:193.02, batch-reuse:1
@ 6073 train 3.9087 , allloss: 3.9087, dt: 698.45ms, fracRes: 0.1941, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6096, norm(y): 0.9896, norm:0.3898, tok/sec: 187661.42, flops:197.01, batch-reuse:1
@ 6074 train 3.8257 , allloss: 3.8257, dt: 697.48ms, fracRes: 0.1931, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6057, norm(y): 0.9893, norm:0.4269, tok/sec: 187921.92, flops:197.28, batch-reuse:1
@ 6075 train 3.8949 , allloss: 3.8949, dt: 699.84ms, fracRes: 0.1948, norm(attn): 37.5000, norm(output): 0.4609, norm(x): 0.6129, norm(y): 0.9897, norm:0.4005, tok/sec: 187288.95, flops:196.62, batch-reuse:1
@ 6076 train 3.8224 , allloss: 3.8224, dt: 713.80ms, fracRes: 0.1938, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6095, norm(y): 0.9896, norm:0.4132, tok/sec: 183625.92, flops:192.77, batch-reuse:1
@ 6077 train 3.7855 , allloss: 3.7855, dt: 712.95ms, fracRes: 0.1932, norm(attn): 37.7500, norm(output): 0.4473, norm(x): 0.6003, norm(y): 0.9887, norm:0.3445, tok/sec: 183843.92, flops:193.00, batch-reuse:1
@ 6078 train 3.7949 , allloss: 3.7949, dt: 696.74ms, fracRes: 0.1923, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5980, norm(y): 0.9885, norm:0.4025, tok/sec: 188120.88, flops:197.49, batch-reuse:1
@ 6079 train 3.7546 , allloss: 3.7546, dt: 708.78ms, fracRes: 0.1927, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6047, norm(y): 0.9885, norm:0.3677, tok/sec: 184925.08, flops:194.13, batch-reuse:1
@ 6080 train 3.8432 , allloss: 3.8432, dt: 695.65ms, fracRes: 0.1925, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6001, norm(y): 0.9885, norm:0.3610, tok/sec: 188417.40, flops:197.80, batch-reuse:1
@ 6081 train 3.8321 , allloss: 3.8321, dt: 719.61ms, fracRes: 0.1934, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6013, norm(y): 0.9883, norm:0.3547, tok/sec: 182143.59, flops:191.21, batch-reuse:1
@ 6082 train 3.9159 , allloss: 3.9159, dt: 715.82ms, fracRes: 0.1938, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6126, norm(y): 0.9892, norm:0.4088, tok/sec: 183106.86, flops:192.23, batch-reuse:1
@ 6083 train 3.7582 , allloss: 3.7582, dt: 718.46ms, fracRes: 0.1919, norm(attn): 37.7500, norm(output): 0.4590, norm(x): 0.6085, norm(y): 0.9878, norm:0.3841, tok/sec: 182434.51, flops:191.52, batch-reuse:1
@ 6084 train 3.7910 , allloss: 3.7910, dt: 692.55ms, fracRes: 0.1936, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6080, norm(y): 0.9883, norm:0.3706, tok/sec: 189259.61, flops:198.69, batch-reuse:1
@ 6085 train 3.8321 , allloss: 3.8321, dt: 701.18ms, fracRes: 0.1938, norm(attn): 37.7500, norm(output): 0.4492, norm(x): 0.6031, norm(y): 0.9882, norm:0.3500, tok/sec: 186929.72, flops:196.24, batch-reuse:1
@ 6086 train 3.7830 , allloss: 3.7830, dt: 689.80ms, fracRes: 0.1943, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6080, norm(y): 0.9888, norm:0.4499, tok/sec: 190015.80, flops:199.48, batch-reuse:1
@ 6087 train 3.8623 , allloss: 3.8623, dt: 708.28ms, fracRes: 0.1933, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.6014, norm(y): 0.9884, norm:0.3782, tok/sec: 185055.92, flops:194.27, batch-reuse:1
@ 6088 train 3.8577 , allloss: 3.8577, dt: 707.71ms, fracRes: 0.1927, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6035, norm(y): 0.9882, norm:0.3672, tok/sec: 185204.74, flops:194.43, batch-reuse:1
@ 6089 train 3.8782 , allloss: 3.8782, dt: 708.20ms, fracRes: 0.1934, norm(attn): 37.7500, norm(output): 0.4590, norm(x): 0.6140, norm(y): 0.9895, norm:0.3977, tok/sec: 185076.55, flops:194.29, batch-reuse:1
@ 6090 train 3.8883 , allloss: 3.8883, dt: 709.18ms, fracRes: 0.1930, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6049, norm(y): 0.9892, norm:0.4097, tok/sec: 184821.07, flops:194.03, batch-reuse:1
@ 6091 train 3.8689 , allloss: 3.8689, dt: 706.61ms, fracRes: 0.1924, norm(attn): 37.7500, norm(output): 0.4434, norm(x): 0.5990, norm(y): 0.9884, norm:0.3728, tok/sec: 185493.63, flops:194.73, batch-reuse:1
@ 6092 train 3.7890 , allloss: 3.7890, dt: 708.98ms, fracRes: 0.1931, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6065, norm(y): 0.9878, norm:0.3866, tok/sec: 184873.77, flops:194.08, batch-reuse:1
@ 6093 train 3.7812 , allloss: 3.7812, dt: 706.58ms, fracRes: 0.1920, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6038, norm(y): 0.9875, norm:0.3852, tok/sec: 185502.08, flops:194.74, batch-reuse:1
@ 6094 train 3.7285 , allloss: 3.7285, dt: 715.26ms, fracRes: 0.1915, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6045, norm(y): 0.9878, norm:0.3496, tok/sec: 183249.92, flops:192.38, batch-reuse:1
@ 6095 train 3.7601 , allloss: 3.7601, dt: 714.08ms, fracRes: 0.1911, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6028, norm(y): 0.9876, norm:0.3688, tok/sec: 183552.78, flops:192.69, batch-reuse:1
@ 6096 train 3.7648 , allloss: 3.7648, dt: 713.02ms, fracRes: 0.1921, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6058, norm(y): 0.9877, norm:0.3973, tok/sec: 183826.09, flops:192.98, batch-reuse:1
@ 6097 train 3.7669 , allloss: 3.7669, dt: 717.63ms, fracRes: 0.1906, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.5997, norm(y): 0.9871, norm:0.4023, tok/sec: 182644.64, flops:191.74, batch-reuse:1
@ 6098 train 3.7422 , allloss: 3.7422, dt: 711.09ms, fracRes: 0.1905, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6005, norm(y): 0.9871, norm:0.3891, tok/sec: 184324.89, flops:193.50, batch-reuse:1
@ 6099 train 3.6568 , allloss: 3.6568, dt: 724.47ms, fracRes: 0.1920, norm(attn): 37.7500, norm(output): 0.4590, norm(x): 0.6121, norm(y): 0.9883, norm:0.4071, tok/sec: 180920.36, flops:189.93, batch-reuse:1
@ 6100 train 3.8582 , allloss: 3.8582, dt: 717.40ms, fracRes: 0.1929, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6103, norm(y): 0.9877, norm:0.4776, tok/sec: 182703.40, flops:191.80, batch-reuse:1
@ 6101 train 3.6739 , allloss: 3.6739, dt: 720.79ms, fracRes: 0.1931, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6083, norm(y): 0.9863, norm:0.4502, tok/sec: 181845.91, flops:190.90, batch-reuse:1
@ 6102 train 4.0931 , allloss: 4.0931, dt: 706.75ms, fracRes: 0.1941, norm(attn): 38.0000, norm(output): 0.4707, norm(x): 0.6239, norm(y): 0.9889, norm:0.5700, tok/sec: 185458.59, flops:194.69, batch-reuse:1
@ 6103 train 3.6808 , allloss: 3.6808, dt: 1022.62ms, fracRes: 0.1927, norm(attn): 38.0000, norm(output): 0.4414, norm(x): 0.5971, norm(y): 0.9873, norm:0.4866, tok/sec: 128173.25, flops:134.56, batch-reuse:1
@ 6104 train 3.6906 , allloss: 3.6906, dt: 732.49ms, fracRes: 0.1923, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.5983, norm(y): 0.9879, norm:0.4693, tok/sec: 178940.72, flops:187.85, batch-reuse:1
@ 6105 train 3.7041 , allloss: 3.7041, dt: 731.66ms, fracRes: 0.1925, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6093, norm(y): 0.9866, norm:0.4404, tok/sec: 179142.76, flops:188.06, batch-reuse:1
@ 6106 train 3.7420 , allloss: 3.7420, dt: 729.25ms, fracRes: 0.1909, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6047, norm(y): 0.9868, norm:0.4253, tok/sec: 179735.30, flops:188.69, batch-reuse:1
@ 6107 train 3.9150 , allloss: 3.9150, dt: 712.93ms, fracRes: 0.1916, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6083, norm(y): 0.9878, norm:0.4564, tok/sec: 183850.25, flops:193.01, batch-reuse:1
@ 6108 train 3.8084 , allloss: 3.8084, dt: 704.26ms, fracRes: 0.1920, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6095, norm(y): 0.9878, norm:0.4317, tok/sec: 186112.42, flops:195.38, batch-reuse:1
@ 6109 train 3.7446 , allloss: 3.7446, dt: 707.66ms, fracRes: 0.1938, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6149, norm(y): 0.9884, norm:0.4381, tok/sec: 185217.84, flops:194.44, batch-reuse:1
@ 6110 train 3.7689 , allloss: 3.7689, dt: 702.82ms, fracRes: 0.1921, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6017, norm(y): 0.9870, norm:0.4209, tok/sec: 186494.90, flops:195.78, batch-reuse:1
@ 6111 train 3.7083 , allloss: 3.7083, dt: 703.47ms, fracRes: 0.1920, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6023, norm(y): 0.9865, norm:0.4217, tok/sec: 186322.79, flops:195.60, batch-reuse:1
@ 6112 train 3.7460 , allloss: 3.7460, dt: 700.23ms, fracRes: 0.1927, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6040, norm(y): 0.9870, norm:0.4447, tok/sec: 187183.86, flops:196.51, batch-reuse:1
@ 6113 train 3.6536 , allloss: 3.6536, dt: 711.91ms, fracRes: 0.1924, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.5983, norm(y): 0.9865, norm:0.3899, tok/sec: 184113.96, flops:193.28, batch-reuse:1
@ 6114 train 3.8398 , allloss: 3.8398, dt: 717.74ms, fracRes: 0.1932, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6173, norm(y): 0.9885, norm:0.5973, tok/sec: 182616.68, flops:191.71, batch-reuse:1
@ 6115 train 3.7735 , allloss: 3.7735, dt: 716.32ms, fracRes: 0.1904, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5959, norm(y): 0.9877, norm:0.3758, tok/sec: 182979.24, flops:192.09, batch-reuse:1
@ 6116 train 3.6741 , allloss: 3.6741, dt: 717.97ms, fracRes: 0.1916, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6008, norm(y): 0.9873, norm:0.4449, tok/sec: 182557.97, flops:191.65, batch-reuse:1
@ 6117 train 3.7283 , allloss: 3.7283, dt: 706.66ms, fracRes: 0.1916, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6040, norm(y): 0.9874, norm:0.4176, tok/sec: 185479.86, flops:194.72, batch-reuse:1
@ 6118 train 3.7674 , allloss: 3.7674, dt: 703.67ms, fracRes: 0.1922, norm(attn): 37.7500, norm(output): 0.4590, norm(x): 0.6091, norm(y): 0.9878, norm:0.4012, tok/sec: 186269.44, flops:195.55, batch-reuse:1
@ 6119 train 3.7514 , allloss: 3.7514, dt: 706.92ms, fracRes: 0.1926, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6090, norm(y): 0.9872, norm:0.3927, tok/sec: 185413.61, flops:194.65, batch-reuse:1
@ 6120 train 3.8159 , allloss: 3.8159, dt: 713.39ms, fracRes: 0.1931, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6071, norm(y): 0.9876, norm:0.3725, tok/sec: 183730.06, flops:192.88, batch-reuse:1
@ 6121 train 3.6878 , allloss: 3.6878, dt: 714.45ms, fracRes: 0.1939, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6041, norm(y): 0.9865, norm:0.3962, tok/sec: 183459.19, flops:192.60, batch-reuse:1
@ 6122 train 3.6468 , allloss: 3.6468, dt: 710.08ms, fracRes: 0.1923, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.5997, norm(y): 0.9864, norm:0.3653, tok/sec: 184587.92, flops:193.78, batch-reuse:1
@ 6123 train 3.6817 , allloss: 3.6817, dt: 710.93ms, fracRes: 0.1922, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6009, norm(y): 0.9861, norm:0.4072, tok/sec: 184366.00, flops:193.55, batch-reuse:1
@ 6124 train 3.8582 , allloss: 3.8582, dt: 720.58ms, fracRes: 0.1919, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.5998, norm(y): 0.9875, norm:0.4320, tok/sec: 181899.15, flops:190.96, batch-reuse:1
@ 6125 train 3.7174 , allloss: 3.7174, dt: 720.28ms, fracRes: 0.1936, norm(attn): 37.7500, norm(output): 0.4492, norm(x): 0.6014, norm(y): 0.9864, norm:0.4134, tok/sec: 181972.91, flops:191.04, batch-reuse:1
@ 6126 train 3.7254 , allloss: 3.7254, dt: 722.18ms, fracRes: 0.1920, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.5984, norm(y): 0.9863, norm:0.3974, tok/sec: 181495.31, flops:190.53, batch-reuse:1
@ 6127 train 3.7466 , allloss: 3.7466, dt: 714.35ms, fracRes: 0.1924, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6033, norm(y): 0.9864, norm:0.3803, tok/sec: 183483.43, flops:192.62, batch-reuse:1
@ 6128 train 3.7553 , allloss: 3.7553, dt: 716.91ms, fracRes: 0.1916, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6086, norm(y): 0.9857, norm:0.4202, tok/sec: 182829.05, flops:191.93, batch-reuse:1
@ 6129 train 3.6832 , allloss: 3.6832, dt: 700.42ms, fracRes: 0.1923, norm(attn): 37.7500, norm(output): 0.4570, norm(x): 0.6087, norm(y): 0.9859, norm:0.3870, tok/sec: 187133.40, flops:196.45, batch-reuse:1
@ 6130 train 3.7752 , allloss: 3.7752, dt: 711.75ms, fracRes: 0.1934, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6075, norm(y): 0.9877, norm:0.4027, tok/sec: 184155.77, flops:193.33, batch-reuse:1
@ 6131 train 3.6437 , allloss: 3.6437, dt: 707.96ms, fracRes: 0.1918, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5993, norm(y): 0.9860, norm:0.4134, tok/sec: 185141.06, flops:194.36, batch-reuse:1
@ 6132 train 3.6521 , allloss: 3.6521, dt: 711.58ms, fracRes: 0.1907, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.5994, norm(y): 0.9861, norm:0.3885, tok/sec: 184198.78, flops:193.37, batch-reuse:1
@ 6133 train 3.6904 , allloss: 3.6904, dt: 707.59ms, fracRes: 0.1899, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6003, norm(y): 0.9857, norm:0.4441, tok/sec: 185237.50, flops:194.46, batch-reuse:1
@ 6134 train 3.8065 , allloss: 3.8065, dt: 709.88ms, fracRes: 0.1907, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6033, norm(y): 0.9855, norm:0.4000, tok/sec: 184639.81, flops:193.84, batch-reuse:1
@ 6135 train 3.7684 , allloss: 3.7684, dt: 704.42ms, fracRes: 0.1910, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5998, norm(y): 0.9848, norm:0.4007, tok/sec: 186072.05, flops:195.34, batch-reuse:1
@ 6136 train 3.7559 , allloss: 3.7559, dt: 703.98ms, fracRes: 0.1925, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6022, norm(y): 0.9841, norm:0.4000, tok/sec: 186188.25, flops:195.46, batch-reuse:1
@ 6137 train 3.8404 , allloss: 3.8404, dt: 698.04ms, fracRes: 0.1930, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6022, norm(y): 0.9826, norm:0.3753, tok/sec: 187770.89, flops:197.12, batch-reuse:1
@ 6138 train 3.7546 , allloss: 3.7546, dt: 702.17ms, fracRes: 0.1924, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6047, norm(y): 0.9825, norm:0.4164, tok/sec: 186666.69, flops:195.96, batch-reuse:1
@ 6139 train 3.9305 , allloss: 3.9305, dt: 713.08ms, fracRes: 0.1959, norm(attn): 37.2500, norm(output): 0.4570, norm(x): 0.6138, norm(y): 0.9849, norm:0.3956, tok/sec: 183811.46, flops:192.97, batch-reuse:1
@ 6140 train 3.9203 , allloss: 3.9203, dt: 698.24ms, fracRes: 0.1970, norm(attn): 37.5000, norm(output): 0.4668, norm(x): 0.6245, norm(y): 0.9861, norm:0.4312, tok/sec: 187716.91, flops:197.07, batch-reuse:1
@ 6141 train 3.9072 , allloss: 3.9072, dt: 704.24ms, fracRes: 0.1929, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6035, norm(y): 0.9855, norm:0.4429, tok/sec: 186117.65, flops:195.39, batch-reuse:1
@ 6142 train 4.0071 , allloss: 4.0071, dt: 712.11ms, fracRes: 0.1962, norm(attn): 37.2500, norm(output): 0.4570, norm(x): 0.6186, norm(y): 0.9873, norm:0.4448, tok/sec: 184060.21, flops:193.23, batch-reuse:1
@ 6143 train 3.9023 , allloss: 3.9023, dt: 695.95ms, fracRes: 0.1960, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6181, norm(y): 0.9876, norm:0.5358, tok/sec: 188334.78, flops:197.71, batch-reuse:1
@ 6144 train 3.9674 , allloss: 3.9674, dt: 710.13ms, fracRes: 0.1964, norm(attn): 37.5000, norm(output): 0.4609, norm(x): 0.6171, norm(y): 0.9878, norm:0.4019, tok/sec: 184574.41, flops:193.77, batch-reuse:1
@ 6145 train 3.8254 , allloss: 3.8254, dt: 709.74ms, fracRes: 0.1940, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6074, norm(y): 0.9873, norm:0.5086, tok/sec: 184675.35, flops:193.87, batch-reuse:1
@ 6146 train 3.8787 , allloss: 3.8787, dt: 712.29ms, fracRes: 0.1903, norm(attn): 37.0000, norm(output): 0.4570, norm(x): 0.6072, norm(y): 0.9864, norm:0.5066, tok/sec: 184014.74, flops:193.18, batch-reuse:1
@ 6147 train 4.1222 , allloss: 4.1222, dt: 709.91ms, fracRes: 0.1918, norm(attn): 36.5000, norm(output): 0.4648, norm(x): 0.6181, norm(y): 0.9890, norm:0.5598, tok/sec: 184632.37, flops:193.83, batch-reuse:1
@ 6148 train 3.9228 , allloss: 3.9228, dt: 695.89ms, fracRes: 0.1945, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6019, norm(y): 0.9871, norm:0.5710, tok/sec: 188351.81, flops:197.73, batch-reuse:1
@ 6149 train 3.9020 , allloss: 3.9020, dt: 710.96ms, fracRes: 0.1957, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6023, norm(y): 0.9874, norm:0.4302, tok/sec: 184358.15, flops:193.54, batch-reuse:1
@ 6150 train 3.8877 , allloss: 3.8877, dt: 708.74ms, fracRes: 0.1943, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6069, norm(y): 0.9879, norm:2.3695, tok/sec: 184937.08, flops:194.15, batch-reuse:1
@ 6151 train 3.7676 , allloss: 3.7676, dt: 710.95ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6188, norm(y): 0.9891, norm:0.5807, tok/sec: 184362.35, flops:193.54, batch-reuse:1
@ 6152 train 3.9308 , allloss: 3.9308, dt: 689.74ms, fracRes: 0.1970, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6188, norm(y): 0.9881, norm:0.4864, tok/sec: 190031.30, flops:199.50, batch-reuse:1
@ 6153 train 3.8804 , allloss: 3.8804, dt: 704.46ms, fracRes: 0.1945, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6051, norm(y): 0.9879, norm:0.4745, tok/sec: 186060.02, flops:195.33, batch-reuse:1
@ 6154 train 3.9615 , allloss: 3.9615, dt: 696.10ms, fracRes: 0.1937, norm(attn): 37.7500, norm(output): 0.4492, norm(x): 0.6049, norm(y): 0.9880, norm:0.5199, tok/sec: 188294.98, flops:197.67, batch-reuse:1
@ 6155 train 3.9300 , allloss: 3.9300, dt: 709.32ms, fracRes: 0.1942, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6081, norm(y): 0.9884, norm:0.4924, tok/sec: 184786.53, flops:193.99, batch-reuse:1
@ 6156 train 3.8223 , allloss: 3.8223, dt: 707.49ms, fracRes: 0.1934, norm(attn): 37.7500, norm(output): 0.4609, norm(x): 0.6111, norm(y): 0.9887, norm:0.4532, tok/sec: 185262.16, flops:194.49, batch-reuse:1
@ 6157 train 3.9000 , allloss: 3.9000, dt: 707.09ms, fracRes: 0.1951, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6123, norm(y): 0.9891, norm:0.4484, tok/sec: 185368.73, flops:194.60, batch-reuse:1
@ 6158 train 3.8877 , allloss: 3.8877, dt: 698.58ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6149, norm(y): 0.9883, norm:0.4721, tok/sec: 187627.09, flops:196.97, batch-reuse:1
@ 6159 train 3.8265 , allloss: 3.8265, dt: 706.98ms, fracRes: 0.1962, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6050, norm(y): 0.9875, norm:0.4369, tok/sec: 185395.79, flops:194.63, batch-reuse:1
@ 6160 train 3.8105 , allloss: 3.8105, dt: 697.85ms, fracRes: 0.1977, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6155, norm(y): 0.9887, norm:0.4734, tok/sec: 187821.51, flops:197.18, batch-reuse:1
@ 6161 train 3.8628 , allloss: 3.8628, dt: 708.15ms, fracRes: 0.1964, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6151, norm(y): 0.9886, norm:0.4071, tok/sec: 185091.87, flops:194.31, batch-reuse:1
@ 6162 train 3.8410 , allloss: 3.8410, dt: 703.95ms, fracRes: 0.1940, norm(attn): 37.7500, norm(output): 0.4570, norm(x): 0.6088, norm(y): 0.9886, norm:0.4907, tok/sec: 186194.56, flops:195.47, batch-reuse:1
@ 6163 train 3.9315 , allloss: 3.9315, dt: 707.76ms, fracRes: 0.1941, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6131, norm(y): 0.9887, norm:0.4132, tok/sec: 185191.76, flops:194.41, batch-reuse:1
@ 6164 train 3.9055 , allloss: 3.9055, dt: 709.37ms, fracRes: 0.1955, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6101, norm(y): 0.9896, norm:0.4568, tok/sec: 184772.74, flops:193.97, batch-reuse:1
@ 6165 train 3.8580 , allloss: 3.8580, dt: 708.09ms, fracRes: 0.1977, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6193, norm(y): 0.9887, norm:0.4440, tok/sec: 185106.77, flops:194.33, batch-reuse:1
@ 6166 train 4.0155 , allloss: 4.0155, dt: 716.88ms, fracRes: 0.1974, norm(attn): 38.0000, norm(output): 0.4707, norm(x): 0.6265, norm(y): 0.9899, norm:0.4273, tok/sec: 182835.50, flops:191.94, batch-reuse:1
@ 6167 train 3.9028 , allloss: 3.9028, dt: 714.93ms, fracRes: 0.1971, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6175, norm(y): 0.9882, norm:0.4399, tok/sec: 183335.11, flops:192.47, batch-reuse:1
@ 6168 train 3.8682 , allloss: 3.8682, dt: 717.75ms, fracRes: 0.1963, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6153, norm(y): 0.9865, norm:0.4104, tok/sec: 182616.19, flops:191.71, batch-reuse:1
@ 6169 train 3.9022 , allloss: 3.9022, dt: 715.22ms, fracRes: 0.1974, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6242, norm(y): 0.9873, norm:0.4231, tok/sec: 183261.71, flops:192.39, batch-reuse:1
@ 6170 train 3.8504 , allloss: 3.8504, dt: 714.29ms, fracRes: 0.1983, norm(attn): 37.7500, norm(output): 0.4668, norm(x): 0.6240, norm(y): 0.9867, norm:0.3830, tok/sec: 183498.62, flops:192.64, batch-reuse:1
@ 6171 train 3.8321 , allloss: 3.8321, dt: 717.70ms, fracRes: 0.1982, norm(attn): 38.0000, norm(output): 0.4629, norm(x): 0.6222, norm(y): 0.9864, norm:0.3883, tok/sec: 182627.84, flops:191.72, batch-reuse:1
@ 6172 train 3.8662 , allloss: 3.8662, dt: 713.01ms, fracRes: 0.1980, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6211, norm(y): 0.9867, norm:0.4129, tok/sec: 183828.49, flops:192.98, batch-reuse:1
@ 6173 train 3.8521 , allloss: 3.8521, dt: 713.85ms, fracRes: 0.1951, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6101, norm(y): 0.9849, norm:0.3698, tok/sec: 183611.94, flops:192.76, batch-reuse:1
@ 6174 train 3.9312 , allloss: 3.9312, dt: 714.79ms, fracRes: 0.1966, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6214, norm(y): 0.9852, norm:0.4166, tok/sec: 183371.07, flops:192.50, batch-reuse:1
@ 6175 train 3.8798 , allloss: 3.8798, dt: 717.31ms, fracRes: 0.1971, norm(attn): 38.0000, norm(output): 0.4688, norm(x): 0.6239, norm(y): 0.9844, norm:0.4087, tok/sec: 182727.21, flops:191.83, batch-reuse:1
@ 6176 train 3.8160 , allloss: 3.8160, dt: 693.37ms, fracRes: 0.1957, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6150, norm(y): 0.9824, norm:0.3915, tok/sec: 189035.74, flops:198.45, batch-reuse:1
@ 6177 train 3.8426 , allloss: 3.8426, dt: 705.81ms, fracRes: 0.1948, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6092, norm(y): 0.9816, norm:0.3733, tok/sec: 185703.60, flops:194.95, batch-reuse:1
@ 6178 train 3.8382 , allloss: 3.8382, dt: 709.76ms, fracRes: 0.1949, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6084, norm(y): 0.9815, norm:0.4092, tok/sec: 184669.58, flops:193.87, batch-reuse:1
@ 6179 train 3.8234 , allloss: 3.8234, dt: 701.46ms, fracRes: 0.1963, norm(attn): 38.2500, norm(output): 0.4570, norm(x): 0.6148, norm(y): 0.9811, norm:0.3638, tok/sec: 186856.46, flops:196.16, batch-reuse:1
@ 6180 train 3.8818 , allloss: 3.8818, dt: 704.76ms, fracRes: 0.1958, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6128, norm(y): 0.9811, norm:0.4098, tok/sec: 185982.09, flops:195.24, batch-reuse:1
@ 6181 train 4.0234 , allloss: 4.0234, dt: 705.38ms, fracRes: 0.1976, norm(attn): 38.2500, norm(output): 0.4668, norm(x): 0.6214, norm(y): 0.9801, norm:0.4177, tok/sec: 185817.65, flops:195.07, batch-reuse:1
@ 6182 train 4.0543 , allloss: 4.0543, dt: 708.07ms, fracRes: 0.1984, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6241, norm(y): 0.9807, norm:0.4265, tok/sec: 185110.45, flops:194.33, batch-reuse:1
@ 6183 train 3.8660 , allloss: 3.8660, dt: 713.61ms, fracRes: 0.1973, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6182, norm(y): 0.9786, norm:0.4085, tok/sec: 183675.00, flops:192.82, batch-reuse:1
@ 6184 train 3.8671 , allloss: 3.8671, dt: 699.06ms, fracRes: 0.1977, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6204, norm(y): 0.9747, norm:0.3957, tok/sec: 187496.74, flops:196.83, batch-reuse:1
@ 6185 train 4.0137 , allloss: 4.0137, dt: 703.08ms, fracRes: 0.1961, norm(attn): 38.0000, norm(output): 0.4668, norm(x): 0.6226, norm(y): 0.9655, norm:0.4398, tok/sec: 186426.66, flops:195.71, batch-reuse:1
@ 6186 train 4.0212 , allloss: 4.0212, dt: 710.77ms, fracRes: 0.1957, norm(attn): 37.5000, norm(output): 0.4629, norm(x): 0.6174, norm(y): 0.9750, norm:0.4493, tok/sec: 184408.73, flops:193.59, batch-reuse:1
@ 6187 train 3.8528 , allloss: 3.8528, dt: 710.62ms, fracRes: 0.1928, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6093, norm(y): 0.9828, norm:0.4471, tok/sec: 184446.85, flops:193.63, batch-reuse:1
@ 6188 train 3.9331 , allloss: 3.9331, dt: 702.79ms, fracRes: 0.1923, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6140, norm(y): 0.9866, norm:0.4460, tok/sec: 186503.57, flops:195.79, batch-reuse:1
@ 6189 train 3.7590 , allloss: 3.7590, dt: 691.79ms, fracRes: 0.1911, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6071, norm(y): 0.9873, norm:0.4376, tok/sec: 189469.05, flops:198.90, batch-reuse:1
@ 6190 train 4.1373 , allloss: 4.1373, dt: 707.95ms, fracRes: 0.1946, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6210, norm(y): 0.9920, norm:0.5696, tok/sec: 185143.92, flops:194.36, batch-reuse:1
@ 6191 train 3.9096 , allloss: 3.9096, dt: 699.29ms, fracRes: 0.1951, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6147, norm(y): 0.9887, norm:0.4771, tok/sec: 187435.43, flops:196.77, batch-reuse:1
@ 6192 train 3.8465 , allloss: 3.8465, dt: 717.00ms, fracRes: 0.1922, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6181, norm(y): 0.9896, norm:0.5356, tok/sec: 182806.26, flops:191.91, batch-reuse:1
@ 6193 train 3.8995 , allloss: 3.8995, dt: 709.91ms, fracRes: 0.1961, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6198, norm(y): 0.9902, norm:0.4087, tok/sec: 184630.70, flops:193.83, batch-reuse:1
@ 6194 train 3.9076 , allloss: 3.9076, dt: 706.09ms, fracRes: 0.1982, norm(attn): 38.5000, norm(output): 0.4648, norm(x): 0.6229, norm(y): 0.9899, norm:0.4567, tok/sec: 185630.80, flops:194.88, batch-reuse:1
@ 6195 train 3.9655 , allloss: 3.9655, dt: 702.17ms, fracRes: 0.1989, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6239, norm(y): 0.9901, norm:0.4347, tok/sec: 186666.63, flops:195.96, batch-reuse:1
@ 6196 train 3.8903 , allloss: 3.8903, dt: 700.35ms, fracRes: 0.1970, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6109, norm(y): 0.9897, norm:0.4649, tok/sec: 187151.17, flops:196.47, batch-reuse:1
@ 6197 train 3.8120 , allloss: 3.8120, dt: 706.71ms, fracRes: 0.1973, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6163, norm(y): 0.9896, norm:0.4110, tok/sec: 185468.53, flops:194.71, batch-reuse:1
@ 6198 train 3.9138 , allloss: 3.9138, dt: 706.78ms, fracRes: 0.1979, norm(attn): 38.5000, norm(output): 0.4590, norm(x): 0.6141, norm(y): 0.9899, norm:0.4291, tok/sec: 185448.39, flops:194.68, batch-reuse:1
@ 6199 train 3.8893 , allloss: 3.8893, dt: 706.89ms, fracRes: 0.1970, norm(attn): 38.2500, norm(output): 0.4629, norm(x): 0.6189, norm(y): 0.9901, norm:0.4189, tok/sec: 185420.68, flops:194.65, batch-reuse:1
@ 6200 train 3.9144 , allloss: 3.9144, dt: 702.29ms, fracRes: 0.1973, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6088, norm(y): 0.9900, norm:0.4024, tok/sec: 186635.45, flops:195.93, batch-reuse:1
@ 6201 train 3.8509 , allloss: 3.8509, dt: 705.53ms, fracRes: 0.1972, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6109, norm(y): 0.9904, norm:0.3921, tok/sec: 185779.15, flops:195.03, batch-reuse:1
@ 6202 train 3.8453 , allloss: 3.8453, dt: 709.04ms, fracRes: 0.1983, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6152, norm(y): 0.9908, norm:0.3908, tok/sec: 184858.79, flops:194.07, batch-reuse:1
@ 6203 train 3.8999 , allloss: 3.8999, dt: 706.80ms, fracRes: 0.1972, norm(attn): 38.0000, norm(output): 0.4629, norm(x): 0.6134, norm(y): 0.9905, norm:0.4068, tok/sec: 185444.89, flops:194.68, batch-reuse:1
@ 6204 train 3.9567 , allloss: 3.9567, dt: 690.75ms, fracRes: 0.1951, norm(attn): 38.2500, norm(output): 0.4648, norm(x): 0.6201, norm(y): 0.9909, norm:0.4517, tok/sec: 189754.05, flops:199.20, batch-reuse:1
@ 6205 train 3.9041 , allloss: 3.9041, dt: 701.23ms, fracRes: 0.1939, norm(attn): 38.5000, norm(output): 0.4648, norm(x): 0.6179, norm(y): 0.9907, norm:0.4303, tok/sec: 186916.75, flops:196.23, batch-reuse:1
@ 6206 train 3.8189 , allloss: 3.8189, dt: 705.51ms, fracRes: 0.1931, norm(attn): 38.5000, norm(output): 0.4648, norm(x): 0.6175, norm(y): 0.9903, norm:0.4361, tok/sec: 185784.11, flops:195.04, batch-reuse:1
@ 6207 train 3.8587 , allloss: 3.8587, dt: 704.54ms, fracRes: 0.1962, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6200, norm(y): 0.9896, norm:0.3910, tok/sec: 186038.48, flops:195.30, batch-reuse:1
@ 6208 train 3.9283 , allloss: 3.9283, dt: 706.89ms, fracRes: 0.1968, norm(attn): 38.0000, norm(output): 0.4668, norm(x): 0.6198, norm(y): 0.9901, norm:0.4071, tok/sec: 185420.12, flops:194.65, batch-reuse:1
@ 6209 train 3.8273 , allloss: 3.8273, dt: 704.43ms, fracRes: 0.1960, norm(attn): 38.0000, norm(output): 0.4668, norm(x): 0.6201, norm(y): 0.9902, norm:0.3652, tok/sec: 186067.83, flops:195.33, batch-reuse:1
@ 6210 train 3.8655 , allloss: 3.8655, dt: 704.14ms, fracRes: 0.1940, norm(attn): 38.2500, norm(output): 0.4551, norm(x): 0.6101, norm(y): 0.9901, norm:0.3859, tok/sec: 186145.82, flops:195.42, batch-reuse:1
@ 6211 train 3.8661 , allloss: 3.8661, dt: 704.78ms, fracRes: 0.1953, norm(attn): 38.2500, norm(output): 0.4570, norm(x): 0.6115, norm(y): 0.9897, norm:0.4360, tok/sec: 185974.48, flops:195.24, batch-reuse:1
@ 6212 train 3.8834 , allloss: 3.8834, dt: 714.67ms, fracRes: 0.1952, norm(attn): 38.5000, norm(output): 0.4590, norm(x): 0.6121, norm(y): 0.9904, norm:0.3630, tok/sec: 183403.25, flops:192.54, batch-reuse:1
@ 6213 train 3.8775 , allloss: 3.8775, dt: 705.38ms, fracRes: 0.1941, norm(attn): 38.2500, norm(output): 0.4609, norm(x): 0.6139, norm(y): 0.9910, norm:0.4243, tok/sec: 185816.96, flops:195.07, batch-reuse:1
@ 6214 train 3.7791 , allloss: 3.7791, dt: 696.58ms, fracRes: 0.1933, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6148, norm(y): 0.9895, norm:0.4319, tok/sec: 188164.22, flops:197.54, batch-reuse:1
@ 6215 train 3.8884 , allloss: 3.8884, dt: 705.16ms, fracRes: 0.1939, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6075, norm(y): 0.9900, norm:0.4313, tok/sec: 185874.69, flops:195.13, batch-reuse:1
@ 6216 train 3.8797 , allloss: 3.8797, dt: 702.42ms, fracRes: 0.1947, norm(attn): 38.2500, norm(output): 0.4551, norm(x): 0.6101, norm(y): 0.9900, norm:0.3966, tok/sec: 186599.79, flops:195.89, batch-reuse:1
@ 6217 train 3.7991 , allloss: 3.7991, dt: 700.21ms, fracRes: 0.1968, norm(attn): 38.0000, norm(output): 0.4648, norm(x): 0.6246, norm(y): 0.9904, norm:0.4853, tok/sec: 187190.04, flops:196.51, batch-reuse:1
@ 6218 train 3.8436 , allloss: 3.8436, dt: 702.47ms, fracRes: 0.1929, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6124, norm(y): 0.9895, norm:0.4207, tok/sec: 186586.49, flops:195.88, batch-reuse:1
@ 6219 train 3.8764 , allloss: 3.8764, dt: 701.00ms, fracRes: 0.1923, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6118, norm(y): 0.9891, norm:0.4932, tok/sec: 186979.88, flops:196.29, batch-reuse:1
@ 6220 train 3.9150 , allloss: 3.9150, dt: 699.44ms, fracRes: 0.1933, norm(attn): 38.2500, norm(output): 0.4570, norm(x): 0.6135, norm(y): 0.9906, norm:0.4142, tok/sec: 187394.93, flops:196.73, batch-reuse:1
@ 6221 train 3.8009 , allloss: 3.8009, dt: 701.40ms, fracRes: 0.1928, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6026, norm(y): 0.9894, norm:0.4705, tok/sec: 186872.72, flops:196.18, batch-reuse:1
@ 6222 train 3.8832 , allloss: 3.8832, dt: 699.53ms, fracRes: 0.1921, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6039, norm(y): 0.9903, norm:0.4161, tok/sec: 187372.51, flops:196.70, batch-reuse:1
@ 6223 train 3.9526 , allloss: 3.9526, dt: 702.32ms, fracRes: 0.1933, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6129, norm(y): 0.9894, norm:0.4429, tok/sec: 186626.96, flops:195.92, batch-reuse:1
@ 6224 train 3.8801 , allloss: 3.8801, dt: 700.13ms, fracRes: 0.1919, norm(attn): 38.5000, norm(output): 0.4453, norm(x): 0.6023, norm(y): 0.9897, norm:0.4446, tok/sec: 187209.93, flops:196.53, batch-reuse:1
@ 6225 train 3.8556 , allloss: 3.8556, dt: 704.36ms, fracRes: 0.1947, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6101, norm(y): 0.9897, norm:0.4319, tok/sec: 186087.54, flops:195.36, batch-reuse:1
@ 6226 train 3.8901 , allloss: 3.8901, dt: 708.25ms, fracRes: 0.1941, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6119, norm(y): 0.9901, norm:0.4127, tok/sec: 185065.64, flops:194.28, batch-reuse:1
@ 6227 train 3.9346 , allloss: 3.9346, dt: 707.04ms, fracRes: 0.1941, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6187, norm(y): 0.9907, norm:0.4311, tok/sec: 185382.60, flops:194.61, batch-reuse:1
@ 6228 train 3.7867 , allloss: 3.7867, dt: 708.56ms, fracRes: 0.1937, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6120, norm(y): 0.9907, norm:0.4577, tok/sec: 184984.38, flops:194.20, batch-reuse:1
@ 6229 train 3.7427 , allloss: 3.7427, dt: 703.38ms, fracRes: 0.1946, norm(attn): 38.5000, norm(output): 0.4512, norm(x): 0.6101, norm(y): 0.9897, norm:0.4251, tok/sec: 186346.53, flops:195.63, batch-reuse:1
@ 6230 train 3.8695 , allloss: 3.8695, dt: 706.02ms, fracRes: 0.1945, norm(attn): 38.5000, norm(output): 0.4590, norm(x): 0.6119, norm(y): 0.9895, norm:0.4534, tok/sec: 185648.35, flops:194.89, batch-reuse:1
@ 6231 train 3.7928 , allloss: 3.7928, dt: 698.68ms, fracRes: 0.1968, norm(attn): 38.5000, norm(output): 0.4648, norm(x): 0.6206, norm(y): 0.9896, norm:0.3953, tok/sec: 187599.88, flops:196.94, batch-reuse:1
@ 6232 train 3.8230 , allloss: 3.8230, dt: 702.99ms, fracRes: 0.1959, norm(attn): 38.5000, norm(output): 0.4590, norm(x): 0.6170, norm(y): 0.9895, norm:0.4811, tok/sec: 186449.23, flops:195.73, batch-reuse:1
@ 6233 train 3.8587 , allloss: 3.8587, dt: 712.03ms, fracRes: 0.1963, norm(attn): 38.5000, norm(output): 0.4609, norm(x): 0.6130, norm(y): 0.9897, norm:0.3840, tok/sec: 184082.09, flops:193.25, batch-reuse:1
@ 6234 train 3.8174 , allloss: 3.8174, dt: 709.23ms, fracRes: 0.1962, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6106, norm(y): 0.9899, norm:0.4397, tok/sec: 184808.58, flops:194.01, batch-reuse:1
@ 6235 train 3.8968 , allloss: 3.8968, dt: 708.13ms, fracRes: 0.1953, norm(attn): 38.5000, norm(output): 0.4492, norm(x): 0.6058, norm(y): 0.9899, norm:0.4337, tok/sec: 185096.05, flops:194.31, batch-reuse:1
@ 6236 train 3.8928 , allloss: 3.8928, dt: 701.20ms, fracRes: 0.1948, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6086, norm(y): 0.9897, norm:0.4264, tok/sec: 186925.65, flops:196.23, batch-reuse:1
@ 6237 train 3.9331 , allloss: 3.9331, dt: 708.81ms, fracRes: 0.1959, norm(attn): 38.5000, norm(output): 0.4727, norm(x): 0.6286, norm(y): 0.9909, norm:0.6682, tok/sec: 184919.04, flops:194.13, batch-reuse:1
@ 6238 train 3.8003 , allloss: 3.8003, dt: 698.61ms, fracRes: 0.1959, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6100, norm(y): 0.9900, norm:0.5782, tok/sec: 187617.61, flops:196.96, batch-reuse:1
@ 6239 train 3.8744 , allloss: 3.8744, dt: 697.10ms, fracRes: 0.1962, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6107, norm(y): 0.9901, norm:0.4723, tok/sec: 188025.92, flops:197.39, batch-reuse:1
@ 6240 train 3.8554 , allloss: 3.8554, dt: 700.64ms, fracRes: 0.1952, norm(attn): 38.2500, norm(output): 0.4512, norm(x): 0.6105, norm(y): 0.9901, norm:0.4759, tok/sec: 187074.05, flops:196.39, batch-reuse:1
@ 6241 train 3.7517 , allloss: 3.7517, dt: 701.92ms, fracRes: 0.1951, norm(attn): 38.5000, norm(output): 0.4531, norm(x): 0.6068, norm(y): 0.9897, norm:0.4405, tok/sec: 186734.41, flops:196.03, batch-reuse:1
@ 6242 train 3.8629 , allloss: 3.8629, dt: 692.59ms, fracRes: 0.1943, norm(attn): 38.2500, norm(output): 0.4492, norm(x): 0.6057, norm(y): 0.9902, norm:0.4629, tok/sec: 189249.51, flops:198.67, batch-reuse:1
@ 6243 train 3.9364 , allloss: 3.9364, dt: 697.11ms, fracRes: 0.1962, norm(attn): 37.7500, norm(output): 0.4492, norm(x): 0.6078, norm(y): 0.9900, norm:0.4274, tok/sec: 188023.09, flops:197.39, batch-reuse:1
@ 6244 train 3.7558 , allloss: 3.7558, dt: 702.63ms, fracRes: 0.1962, norm(attn): 38.2500, norm(output): 0.4551, norm(x): 0.6065, norm(y): 0.9888, norm:0.4476, tok/sec: 186545.21, flops:195.84, batch-reuse:1
@ 6245 train 3.8964 , allloss: 3.8964, dt: 697.91ms, fracRes: 0.1957, norm(attn): 38.2500, norm(output): 0.4512, norm(x): 0.6110, norm(y): 0.9898, norm:0.4020, tok/sec: 187806.95, flops:197.16, batch-reuse:1
@ 6246 train 3.9504 , allloss: 3.9504, dt: 704.55ms, fracRes: 0.1934, norm(attn): 38.2500, norm(output): 0.4531, norm(x): 0.6096, norm(y): 0.9896, norm:0.3932, tok/sec: 186037.79, flops:195.30, batch-reuse:1
@ 6247 train 3.6695 , allloss: 3.6695, dt: 711.69ms, fracRes: 0.1928, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6073, norm(y): 0.9876, norm:0.4027, tok/sec: 184169.04, flops:193.34, batch-reuse:1
@ 6248 train 3.7950 , allloss: 3.7950, dt: 709.96ms, fracRes: 0.1934, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6087, norm(y): 0.9882, norm:0.3765, tok/sec: 184618.98, flops:193.81, batch-reuse:1
@ 6249 train 3.8032 , allloss: 3.8032, dt: 701.36ms, fracRes: 0.1942, norm(attn): 38.5000, norm(output): 0.4570, norm(x): 0.6110, norm(y): 0.9891, norm:0.4101, tok/sec: 186882.19, flops:196.19, batch-reuse:1
@ 6250 train 3.7792 , allloss: 3.7792, dt: 702.48ms, fracRes: 0.1956, norm(attn): 38.0000, norm(output): 0.4668, norm(x): 0.6203, norm(y): 0.9899, norm:0.3860, tok/sec: 186585.35, flops:195.88, batch-reuse:1
@ 6251 train 3.8447 , allloss: 3.8447, dt: 712.17ms, fracRes: 0.1949, norm(attn): 38.2500, norm(output): 0.4590, norm(x): 0.6160, norm(y): 0.9902, norm:0.4555, tok/sec: 184045.42, flops:193.21, batch-reuse:1
@ 6252 train 3.8630 , allloss: 3.8630, dt: 712.14ms, fracRes: 0.1947, norm(attn): 38.5000, norm(output): 0.4551, norm(x): 0.6094, norm(y): 0.9893, norm:0.3582, tok/sec: 184053.49, flops:193.22, batch-reuse:1
@ 6253 train 3.8040 , allloss: 3.8040, dt: 707.53ms, fracRes: 0.1932, norm(attn): 38.2500, norm(output): 0.4453, norm(x): 0.6018, norm(y): 0.9888, norm:0.4139, tok/sec: 185252.85, flops:194.48, batch-reuse:1
@ 6254 train 3.9096 , allloss: 3.9096, dt: 720.19ms, fracRes: 0.1941, norm(attn): 38.2500, norm(output): 0.4453, norm(x): 0.6041, norm(y): 0.9889, norm:0.3843, tok/sec: 181996.35, flops:191.06, batch-reuse:1
@ 6255 train 4.0015 , allloss: 4.0015, dt: 721.54ms, fracRes: 0.1975, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6178, norm(y): 0.9900, norm:0.4128, tok/sec: 181656.09, flops:190.70, batch-reuse:1
@ 6256 train 3.8200 , allloss: 3.8200, dt: 716.70ms, fracRes: 0.1973, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6118, norm(y): 0.9899, norm:0.4175, tok/sec: 182882.94, flops:191.99, batch-reuse:1
@ 6257 train 3.7840 , allloss: 3.7840, dt: 716.78ms, fracRes: 0.1948, norm(attn): 38.2500, norm(output): 0.4531, norm(x): 0.6053, norm(y): 0.9884, norm:0.3893, tok/sec: 182860.98, flops:191.97, batch-reuse:1
@ 6258 train 3.7547 , allloss: 3.7547, dt: 717.72ms, fracRes: 0.1939, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6057, norm(y): 0.9877, norm:0.3875, tok/sec: 182623.71, flops:191.72, batch-reuse:1
@ 6259 train 3.8779 , allloss: 3.8779, dt: 718.89ms, fracRes: 0.1947, norm(attn): 37.7500, norm(output): 0.4570, norm(x): 0.6085, norm(y): 0.9878, norm:0.3917, tok/sec: 182326.33, flops:191.41, batch-reuse:1
@ 6260 train 3.8486 , allloss: 3.8486, dt: 719.27ms, fracRes: 0.1956, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6156, norm(y): 0.9899, norm:0.3641, tok/sec: 182229.21, flops:191.30, batch-reuse:1
@ 6261 train 3.8982 , allloss: 3.8982, dt: 717.89ms, fracRes: 0.1954, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6090, norm(y): 0.9894, norm:0.4011, tok/sec: 182580.53, flops:191.67, batch-reuse:1
@ 6262 train 3.7581 , allloss: 3.7581, dt: 706.78ms, fracRes: 0.1962, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6147, norm(y): 0.9886, norm:0.3997, tok/sec: 185449.51, flops:194.69, batch-reuse:1
@ 6263 train 3.7737 , allloss: 3.7737, dt: 708.40ms, fracRes: 0.1958, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6115, norm(y): 0.9885, norm:0.3884, tok/sec: 185025.10, flops:194.24, batch-reuse:1
@ 6264 train 3.7460 , allloss: 3.7460, dt: 709.82ms, fracRes: 0.1958, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6099, norm(y): 0.9876, norm:0.4051, tok/sec: 184655.81, flops:193.85, batch-reuse:1
@ 6265 train 3.7337 , allloss: 3.7337, dt: 708.72ms, fracRes: 0.1956, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6091, norm(y): 0.9875, norm:0.4093, tok/sec: 184942.68, flops:194.15, batch-reuse:1
@ 6266 train 3.7475 , allloss: 3.7475, dt: 704.02ms, fracRes: 0.1951, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6047, norm(y): 0.9879, norm:0.4150, tok/sec: 186175.26, flops:195.45, batch-reuse:1
@ 6267 train 3.7735 , allloss: 3.7735, dt: 711.40ms, fracRes: 0.1970, norm(attn): 37.7500, norm(output): 0.4590, norm(x): 0.6154, norm(y): 0.9889, norm:0.3934, tok/sec: 184244.28, flops:193.42, batch-reuse:1
@ 6268 train 3.8305 , allloss: 3.8305, dt: 714.06ms, fracRes: 0.1969, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6106, norm(y): 0.9889, norm:0.3896, tok/sec: 183558.48, flops:192.70, batch-reuse:1
@ 6269 train 3.7913 , allloss: 3.7913, dt: 709.59ms, fracRes: 0.1969, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6117, norm(y): 0.9884, norm:0.4173, tok/sec: 184714.26, flops:193.91, batch-reuse:1
@ 6270 train 3.7389 , allloss: 3.7389, dt: 712.42ms, fracRes: 0.1947, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6111, norm(y): 0.9883, norm:0.4197, tok/sec: 183980.13, flops:193.14, batch-reuse:1
@ 6271 train 3.7270 , allloss: 3.7270, dt: 706.68ms, fracRes: 0.1943, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6046, norm(y): 0.9879, norm:0.4269, tok/sec: 185474.54, flops:194.71, batch-reuse:1
@ 6272 train 3.8216 , allloss: 3.8216, dt: 716.22ms, fracRes: 0.1936, norm(attn): 37.7500, norm(output): 0.4473, norm(x): 0.6013, norm(y): 0.9880, norm:0.3737, tok/sec: 183006.22, flops:192.12, batch-reuse:1
@ 6273 train 3.8020 , allloss: 3.8020, dt: 708.93ms, fracRes: 0.1938, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.5996, norm(y): 0.9877, norm:0.3972, tok/sec: 184886.40, flops:194.09, batch-reuse:1
@ 6274 train 3.8222 , allloss: 3.8222, dt: 717.23ms, fracRes: 0.1950, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6114, norm(y): 0.9883, norm:0.3692, tok/sec: 182748.47, flops:191.85, batch-reuse:1
@ 6275 train 3.7709 , allloss: 3.7709, dt: 708.28ms, fracRes: 0.1949, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6078, norm(y): 0.9887, norm:0.3854, tok/sec: 185057.86, flops:194.27, batch-reuse:1
@ 6276 train 3.8195 , allloss: 3.8195, dt: 702.47ms, fracRes: 0.1963, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6148, norm(y): 0.9894, norm:0.3730, tok/sec: 186586.55, flops:195.88, batch-reuse:1
@ 6277 train 3.7987 , allloss: 3.7987, dt: 707.84ms, fracRes: 0.1953, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6148, norm(y): 0.9887, norm:0.4130, tok/sec: 185172.73, flops:194.39, batch-reuse:1
@ 6278 train 3.7374 , allloss: 3.7374, dt: 707.18ms, fracRes: 0.1959, norm(attn): 38.0000, norm(output): 0.4707, norm(x): 0.6222, norm(y): 0.9882, norm:0.3962, tok/sec: 185344.10, flops:194.57, batch-reuse:1
@ 6279 train 3.5782 , allloss: 3.5782, dt: 712.71ms, fracRes: 0.1960, norm(attn): 37.7500, norm(output): 0.4609, norm(x): 0.6096, norm(y): 0.9868, norm:0.4092, tok/sec: 183905.85, flops:193.06, batch-reuse:1
@ 6280 train 3.7022 , allloss: 3.7022, dt: 710.76ms, fracRes: 0.1949, norm(attn): 38.2500, norm(output): 0.4512, norm(x): 0.6060, norm(y): 0.9869, norm:0.4129, tok/sec: 184410.47, flops:193.59, batch-reuse:1
@ 6281 train 3.7378 , allloss: 3.7378, dt: 699.18ms, fracRes: 0.1950, norm(attn): 38.0000, norm(output): 0.4609, norm(x): 0.6101, norm(y): 0.9873, norm:0.3951, tok/sec: 187466.50, flops:196.80, batch-reuse:1
@ 6282 train 3.6710 , allloss: 3.6710, dt: 701.17ms, fracRes: 0.1964, norm(attn): 38.0000, norm(output): 0.4551, norm(x): 0.6107, norm(y): 0.9870, norm:0.3920, tok/sec: 186934.10, flops:196.24, batch-reuse:1
@ 6283 train 3.6838 , allloss: 3.6838, dt: 714.60ms, fracRes: 0.1965, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6033, norm(y): 0.9868, norm:0.3804, tok/sec: 183421.11, flops:192.56, batch-reuse:1
@ 6284 train 3.8127 , allloss: 3.8127, dt: 704.94ms, fracRes: 0.1959, norm(attn): 38.0000, norm(output): 0.4512, norm(x): 0.6052, norm(y): 0.9876, norm:0.4246, tok/sec: 185934.79, flops:195.19, batch-reuse:1
@ 6285 train 3.7244 , allloss: 3.7244, dt: 706.75ms, fracRes: 0.1962, norm(attn): 38.0000, norm(output): 0.4531, norm(x): 0.6072, norm(y): 0.9868, norm:0.3916, tok/sec: 185456.90, flops:194.69, batch-reuse:1
@ 6286 train 3.6408 , allloss: 3.6408, dt: 704.64ms, fracRes: 0.1960, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6102, norm(y): 0.9868, norm:0.4396, tok/sec: 186011.79, flops:195.28, batch-reuse:1
@ 6287 train 3.7235 , allloss: 3.7235, dt: 696.22ms, fracRes: 0.1949, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.6015, norm(y): 0.9868, norm:0.4160, tok/sec: 188262.35, flops:197.64, batch-reuse:1
@ 6288 train 3.7944 , allloss: 3.7944, dt: 708.78ms, fracRes: 0.1958, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6059, norm(y): 0.9878, norm:0.4351, tok/sec: 184926.01, flops:194.14, batch-reuse:1
@ 6289 train 3.8233 , allloss: 3.8233, dt: 697.76ms, fracRes: 0.1962, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6069, norm(y): 0.9881, norm:0.3867, tok/sec: 187847.05, flops:197.20, batch-reuse:1
@ 6290 train 3.7365 , allloss: 3.7365, dt: 688.53ms, fracRes: 0.1956, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6105, norm(y): 0.9871, norm:0.3769, tok/sec: 190365.78, flops:199.85, batch-reuse:1
@ 6291 train 3.6528 , allloss: 3.6528, dt: 703.32ms, fracRes: 0.1947, norm(attn): 38.0000, norm(output): 0.4590, norm(x): 0.6112, norm(y): 0.9863, norm:0.4138, tok/sec: 186360.62, flops:195.64, batch-reuse:1
@ 6292 train 3.6953 , allloss: 3.6953, dt: 707.27ms, fracRes: 0.1958, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6050, norm(y): 0.9851, norm:0.3893, tok/sec: 185320.61, flops:194.55, batch-reuse:1
@ 6293 train 3.7356 , allloss: 3.7356, dt: 705.31ms, fracRes: 0.1951, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6038, norm(y): 0.9857, norm:0.4466, tok/sec: 185835.55, flops:195.09, batch-reuse:1
@ 6294 train 3.8332 , allloss: 3.8332, dt: 716.62ms, fracRes: 0.1934, norm(attn): 37.5000, norm(output): 0.4629, norm(x): 0.6123, norm(y): 0.9886, norm:0.5508, tok/sec: 182901.86, flops:192.01, batch-reuse:1
@ 6295 train 3.7770 , allloss: 3.7770, dt: 705.30ms, fracRes: 0.1945, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6150, norm(y): 0.9882, norm:0.4533, tok/sec: 185837.37, flops:195.09, batch-reuse:1
@ 6296 train 3.7651 , allloss: 3.7651, dt: 710.17ms, fracRes: 0.1966, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6105, norm(y): 0.9878, norm:0.4613, tok/sec: 184563.57, flops:193.76, batch-reuse:1
@ 6297 train 3.7255 , allloss: 3.7255, dt: 711.23ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6158, norm(y): 0.9878, norm:0.4715, tok/sec: 184288.87, flops:193.47, batch-reuse:1
@ 6298 train 3.7049 , allloss: 3.7049, dt: 699.41ms, fracRes: 0.1985, norm(attn): 37.5000, norm(output): 0.4629, norm(x): 0.6132, norm(y): 0.9859, norm:0.4360, tok/sec: 187403.30, flops:196.74, batch-reuse:1
@ 6299 train 3.7259 , allloss: 3.7259, dt: 707.93ms, fracRes: 0.1980, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6121, norm(y): 0.9851, norm:0.5039, tok/sec: 185147.85, flops:194.37, batch-reuse:1
@ 6300 train 3.6406 , allloss: 3.6406, dt: 699.10ms, fracRes: 0.1962, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6031, norm(y): 0.9853, norm:0.5257, tok/sec: 187487.53, flops:196.82, batch-reuse:1
@ 6301 train 3.7457 , allloss: 3.7457, dt: 719.81ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6111, norm(y): 0.9858, norm:0.4674, tok/sec: 182092.86, flops:191.16, batch-reuse:1
@ 6302 train 3.7877 , allloss: 3.7877, dt: 693.13ms, fracRes: 0.1970, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6116, norm(y): 0.9859, norm:0.4612, tok/sec: 189101.09, flops:198.52, batch-reuse:1
@ 6303 train 3.7006 , allloss: 3.7006, dt: 706.72ms, fracRes: 0.1969, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6060, norm(y): 0.9862, norm:0.4110, tok/sec: 185465.53, flops:194.70, batch-reuse:1
@ 6304 train 3.7409 , allloss: 3.7409, dt: 726.81ms, fracRes: 0.1955, norm(attn): 38.0000, norm(output): 0.4473, norm(x): 0.6024, norm(y): 0.9857, norm:0.4369, tok/sec: 180337.68, flops:189.32, batch-reuse:1
@ 6305 train 3.6818 , allloss: 3.6818, dt: 725.36ms, fracRes: 0.1953, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6055, norm(y): 0.9861, norm:0.4428, tok/sec: 180698.31, flops:189.70, batch-reuse:1
@ 6306 train 3.8698 , allloss: 3.8698, dt: 710.10ms, fracRes: 0.1979, norm(attn): 38.0000, norm(output): 0.4492, norm(x): 0.6081, norm(y): 0.9872, norm:0.4941, tok/sec: 184583.40, flops:193.78, batch-reuse:1
@ 6307 train 3.6736 , allloss: 3.6736, dt: 704.45ms, fracRes: 0.1987, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6134, norm(y): 0.9856, norm:0.4850, tok/sec: 186061.66, flops:195.33, batch-reuse:1
@ 6308 train 3.7939 , allloss: 3.7939, dt: 709.53ms, fracRes: 0.1976, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.6042, norm(y): 0.9855, norm:0.4113, tok/sec: 184730.96, flops:193.93, batch-reuse:1
@ 6309 train 3.7817 , allloss: 3.7817, dt: 699.73ms, fracRes: 0.1971, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6104, norm(y): 0.9869, norm:0.4516, tok/sec: 187316.84, flops:196.65, batch-reuse:1
@ 6310 train 3.7316 , allloss: 3.7316, dt: 708.34ms, fracRes: 0.1956, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6084, norm(y): 0.9858, norm:0.4385, tok/sec: 185040.29, flops:194.26, batch-reuse:1
@ 6311 train 3.8114 , allloss: 3.8114, dt: 707.68ms, fracRes: 0.1949, norm(attn): 37.5000, norm(output): 0.4609, norm(x): 0.6121, norm(y): 0.9857, norm:0.4501, tok/sec: 185214.66, flops:194.44, batch-reuse:1
@ 6312 train 3.7217 , allloss: 3.7217, dt: 702.82ms, fracRes: 0.1959, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6030, norm(y): 0.9859, norm:0.4681, tok/sec: 186493.70, flops:195.78, batch-reuse:1
@ 6313 train 3.8514 , allloss: 3.8514, dt: 703.51ms, fracRes: 0.1961, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6063, norm(y): 0.9857, norm:0.4998, tok/sec: 186312.49, flops:195.59, batch-reuse:1
@ 6314 train 3.6347 , allloss: 3.6347, dt: 697.13ms, fracRes: 0.1968, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6066, norm(y): 0.9831, norm:0.4849, tok/sec: 188016.46, flops:197.38, batch-reuse:1
@ 6315 train 3.6936 , allloss: 3.6936, dt: 702.66ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6127, norm(y): 0.9831, norm:0.3895, tok/sec: 186536.41, flops:195.83, batch-reuse:1
@ 6316 train 3.7625 , allloss: 3.7625, dt: 709.51ms, fracRes: 0.1969, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6158, norm(y): 0.9842, norm:0.4762, tok/sec: 184734.93, flops:193.94, batch-reuse:1
@ 6317 train 3.7003 , allloss: 3.7003, dt: 709.02ms, fracRes: 0.1967, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6010, norm(y): 0.9838, norm:0.4504, tok/sec: 184864.45, flops:194.07, batch-reuse:1
@ 6318 train 3.7845 , allloss: 3.7845, dt: 696.40ms, fracRes: 0.1963, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6048, norm(y): 0.9851, norm:0.4500, tok/sec: 188213.11, flops:197.59, batch-reuse:1
@ 6319 train 3.6192 , allloss: 3.6192, dt: 712.46ms, fracRes: 0.1945, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6015, norm(y): 0.9843, norm:0.4506, tok/sec: 183972.13, flops:193.13, batch-reuse:1
@ 6320 train 3.7824 , allloss: 3.7824, dt: 710.83ms, fracRes: 0.1927, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.5956, norm(y): 0.9836, norm:0.4725, tok/sec: 184391.60, flops:193.57, batch-reuse:1
@ 6321 train 3.7894 , allloss: 3.7894, dt: 695.88ms, fracRes: 0.1962, norm(attn): 37.0000, norm(output): 0.4531, norm(x): 0.6116, norm(y): 0.9846, norm:0.4401, tok/sec: 188354.65, flops:197.74, batch-reuse:1
@ 6322 train 3.6177 , allloss: 3.6177, dt: 707.86ms, fracRes: 0.1951, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6052, norm(y): 0.9847, norm:0.4570, tok/sec: 185166.81, flops:194.39, batch-reuse:1
@ 6323 train 3.8008 , allloss: 3.8008, dt: 708.26ms, fracRes: 0.1958, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6108, norm(y): 0.9852, norm:0.4071, tok/sec: 185061.97, flops:194.28, batch-reuse:1
@ 6324 train 3.7581 , allloss: 3.7581, dt: 705.01ms, fracRes: 0.1945, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6060, norm(y): 0.9839, norm:0.4505, tok/sec: 185914.92, flops:195.17, batch-reuse:1
@ 6325 train 3.7041 , allloss: 3.7041, dt: 701.68ms, fracRes: 0.1955, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6104, norm(y): 0.9841, norm:0.4165, tok/sec: 186798.62, flops:196.10, batch-reuse:1
@ 6326 train 3.7597 , allloss: 3.7597, dt: 703.65ms, fracRes: 0.1935, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5997, norm(y): 0.9838, norm:0.3936, tok/sec: 186274.30, flops:195.55, batch-reuse:1
@ 6327 train 3.8979 , allloss: 3.8979, dt: 697.66ms, fracRes: 0.1979, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6082, norm(y): 0.9840, norm:0.4029, tok/sec: 187872.99, flops:197.23, batch-reuse:1
@ 6328 train 3.8843 , allloss: 3.8843, dt: 706.33ms, fracRes: 0.1987, norm(attn): 37.0000, norm(output): 0.4570, norm(x): 0.6120, norm(y): 0.9842, norm:0.4505, tok/sec: 185567.70, flops:194.81, batch-reuse:1
@ 6329 train 3.8947 , allloss: 3.8947, dt: 698.47ms, fracRes: 0.1996, norm(attn): 37.2500, norm(output): 0.4629, norm(x): 0.6233, norm(y): 0.9844, norm:0.4718, tok/sec: 187657.00, flops:197.00, batch-reuse:1
@ 6330 train 3.9464 , allloss: 3.9464, dt: 714.12ms, fracRes: 0.1984, norm(attn): 37.2500, norm(output): 0.4629, norm(x): 0.6203, norm(y): 0.9841, norm:0.4421, tok/sec: 183542.98, flops:192.68, batch-reuse:1
@ 6331 train 3.7633 , allloss: 3.7633, dt: 705.90ms, fracRes: 0.1994, norm(attn): 37.0000, norm(output): 0.4551, norm(x): 0.6142, norm(y): 0.9829, norm:0.4268, tok/sec: 185681.39, flops:194.93, batch-reuse:1
@ 6332 train 3.9559 , allloss: 3.9559, dt: 705.03ms, fracRes: 0.1983, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6128, norm(y): 0.9834, norm:0.4345, tok/sec: 185909.70, flops:195.17, batch-reuse:1
@ 6333 train 3.9192 , allloss: 3.9192, dt: 705.54ms, fracRes: 0.1975, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6078, norm(y): 0.9810, norm:0.4494, tok/sec: 185775.70, flops:195.03, batch-reuse:1
@ 6334 train 3.8684 , allloss: 3.8684, dt: 707.94ms, fracRes: 0.2000, norm(attn): 36.7500, norm(output): 0.4629, norm(x): 0.6204, norm(y): 0.9807, norm:0.4950, tok/sec: 185144.42, flops:194.36, batch-reuse:1
@ 6335 train 3.8723 , allloss: 3.8723, dt: 703.58ms, fracRes: 0.1978, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6128, norm(y): 0.9810, norm:0.4200, tok/sec: 186293.05, flops:195.57, batch-reuse:1
@ 6336 train 3.8280 , allloss: 3.8280, dt: 721.48ms, fracRes: 0.1964, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6043, norm(y): 0.9807, norm:0.4255, tok/sec: 181670.50, flops:190.72, batch-reuse:1
@ 6337 train 3.8101 , allloss: 3.8101, dt: 704.18ms, fracRes: 0.1966, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6057, norm(y): 0.9809, norm:0.3975, tok/sec: 186134.79, flops:195.40, batch-reuse:1
@ 6338 train 3.8203 , allloss: 3.8203, dt: 705.24ms, fracRes: 0.1989, norm(attn): 37.2500, norm(output): 0.4551, norm(x): 0.6145, norm(y): 0.9812, norm:0.4182, tok/sec: 185853.77, flops:195.11, batch-reuse:1
@ 6339 train 3.8593 , allloss: 3.8593, dt: 718.80ms, fracRes: 0.1989, norm(attn): 37.0000, norm(output): 0.4570, norm(x): 0.6132, norm(y): 0.9809, norm:0.4041, tok/sec: 182347.86, flops:191.43, batch-reuse:1
@ 6340 train 3.8283 , allloss: 3.8283, dt: 716.75ms, fracRes: 0.1969, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6106, norm(y): 0.9801, norm:0.3969, tok/sec: 182870.35, flops:191.98, batch-reuse:1
@ 6341 train 4.1779 , allloss: 4.1779, dt: 704.66ms, fracRes: 0.1994, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6158, norm(y): 0.9795, norm:0.4781, tok/sec: 186006.70, flops:195.27, batch-reuse:1
@ 6342 train 3.9201 , allloss: 3.9201, dt: 703.47ms, fracRes: 0.2000, norm(attn): 37.0000, norm(output): 0.4551, norm(x): 0.6176, norm(y): 0.9818, norm:0.4984, tok/sec: 186323.29, flops:195.60, batch-reuse:1
@ 6343 train 3.9353 , allloss: 3.9353, dt: 702.83ms, fracRes: 0.1998, norm(attn): 37.2500, norm(output): 0.4570, norm(x): 0.6160, norm(y): 0.9808, norm:0.3903, tok/sec: 186492.18, flops:195.78, batch-reuse:1
@ 6344 train 3.8303 , allloss: 3.8303, dt: 717.12ms, fracRes: 0.1966, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6111, norm(y): 0.9807, norm:0.4326, tok/sec: 182775.08, flops:191.88, batch-reuse:1
@ 6345 train 3.8648 , allloss: 3.8648, dt: 709.92ms, fracRes: 0.1964, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6096, norm(y): 0.9809, norm:0.3956, tok/sec: 184628.65, flops:193.82, batch-reuse:1
@ 6346 train 4.0291 , allloss: 4.0291, dt: 693.31ms, fracRes: 0.1987, norm(attn): 37.2500, norm(output): 0.4629, norm(x): 0.6201, norm(y): 0.9822, norm:0.4897, tok/sec: 189052.84, flops:198.47, batch-reuse:1
@ 6347 train 3.9323 , allloss: 3.9323, dt: 701.80ms, fracRes: 0.1993, norm(attn): 37.0000, norm(output): 0.4531, norm(x): 0.6151, norm(y): 0.9822, norm:0.4558, tok/sec: 186764.54, flops:196.07, batch-reuse:1
@ 6348 train 3.9275 , allloss: 3.9275, dt: 702.12ms, fracRes: 0.1970, norm(attn): 37.0000, norm(output): 0.4473, norm(x): 0.6040, norm(y): 0.9793, norm:0.4437, tok/sec: 186679.24, flops:195.98, batch-reuse:1
@ 6349 train 3.8334 , allloss: 3.8334, dt: 707.18ms, fracRes: 0.1956, norm(attn): 36.5000, norm(output): 0.4434, norm(x): 0.6016, norm(y): 0.9763, norm:0.4209, tok/sec: 185343.35, flops:194.57, batch-reuse:1
@ 6350 train 3.9195 , allloss: 3.9195, dt: 700.79ms, fracRes: 0.1961, norm(attn): 36.7500, norm(output): 0.4492, norm(x): 0.6051, norm(y): 0.9763, norm:0.4493, tok/sec: 187033.32, flops:196.35, batch-reuse:1
@ 6351 train 3.9049 , allloss: 3.9049, dt: 711.74ms, fracRes: 0.1969, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6135, norm(y): 0.9769, norm:0.4640, tok/sec: 184158.06, flops:193.33, batch-reuse:1
@ 6352 train 3.8514 , allloss: 3.8514, dt: 710.79ms, fracRes: 0.1993, norm(attn): 36.7500, norm(output): 0.4492, norm(x): 0.6114, norm(y): 0.9727, norm:0.4724, tok/sec: 184402.24, flops:193.59, batch-reuse:1
@ 6353 train 3.8586 , allloss: 3.8586, dt: 715.91ms, fracRes: 0.1980, norm(attn): 36.5000, norm(output): 0.4570, norm(x): 0.6156, norm(y): 0.9731, norm:0.4206, tok/sec: 183084.54, flops:192.20, batch-reuse:1
@ 6354 train 3.8734 , allloss: 3.8734, dt: 715.01ms, fracRes: 0.1977, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6093, norm(y): 0.9726, norm:0.4552, tok/sec: 183315.61, flops:192.45, batch-reuse:1
@ 6355 train 3.9369 , allloss: 3.9369, dt: 716.24ms, fracRes: 0.1978, norm(attn): 36.2500, norm(output): 0.4453, norm(x): 0.6055, norm(y): 0.9710, norm:0.4418, tok/sec: 183001.04, flops:192.11, batch-reuse:1
@ 6356 train 3.8522 , allloss: 3.8522, dt: 718.17ms, fracRes: 0.1986, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6043, norm(y): 0.9692, norm:0.4059, tok/sec: 182508.40, flops:191.60, batch-reuse:1
@ 6357 train 3.8362 , allloss: 3.8362, dt: 722.54ms, fracRes: 0.1992, norm(attn): 36.2500, norm(output): 0.4531, norm(x): 0.6134, norm(y): 0.9708, norm:0.4378, tok/sec: 181404.45, flops:190.44, batch-reuse:1
@ 6358 train 3.9203 , allloss: 3.9203, dt: 707.65ms, fracRes: 0.1991, norm(attn): 36.5000, norm(output): 0.4551, norm(x): 0.6142, norm(y): 0.9731, norm:0.5220, tok/sec: 185220.27, flops:194.44, batch-reuse:1
@ 6359 train 3.8328 , allloss: 3.8328, dt: 717.53ms, fracRes: 0.1961, norm(attn): 37.0000, norm(output): 0.4492, norm(x): 0.6093, norm(y): 0.9748, norm:0.5007, tok/sec: 182670.38, flops:191.77, batch-reuse:1
@ 6360 train 3.8168 , allloss: 3.8168, dt: 717.77ms, fracRes: 0.1948, norm(attn): 36.7500, norm(output): 0.4512, norm(x): 0.6082, norm(y): 0.9785, norm:0.4132, tok/sec: 182610.91, flops:191.71, batch-reuse:1
@ 6361 train 3.9333 , allloss: 3.9333, dt: 701.98ms, fracRes: 0.1966, norm(attn): 37.2500, norm(output): 0.4551, norm(x): 0.6137, norm(y): 0.9817, norm:0.5019, tok/sec: 186717.22, flops:196.02, batch-reuse:1
@ 6362 train 3.8936 , allloss: 3.8936, dt: 710.51ms, fracRes: 0.1978, norm(attn): 36.7500, norm(output): 0.4531, norm(x): 0.6118, norm(y): 0.9790, norm:0.4370, tok/sec: 184476.86, flops:193.66, batch-reuse:1
@ 6363 train 3.9110 , allloss: 3.9110, dt: 706.82ms, fracRes: 0.1978, norm(attn): 37.0000, norm(output): 0.4453, norm(x): 0.6081, norm(y): 0.9769, norm:0.4155, tok/sec: 185439.88, flops:194.68, batch-reuse:1
@ 6364 train 3.9676 , allloss: 3.9676, dt: 710.30ms, fracRes: 0.2006, norm(attn): 36.5000, norm(output): 0.4629, norm(x): 0.6216, norm(y): 0.9755, norm:0.4859, tok/sec: 184530.80, flops:193.72, batch-reuse:1
@ 6365 train 3.8713 , allloss: 3.8713, dt: 714.38ms, fracRes: 0.1967, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6144, norm(y): 0.9705, norm:0.4302, tok/sec: 183475.41, flops:192.61, batch-reuse:1
@ 6366 train 3.9290 , allloss: 3.9290, dt: 696.16ms, fracRes: 0.1982, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6119, norm(y): 0.9704, norm:0.4310, tok/sec: 188277.50, flops:197.65, batch-reuse:1
@ 6367 train 3.7740 , allloss: 3.7740, dt: 709.28ms, fracRes: 0.1967, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6071, norm(y): 0.9692, norm:0.4272, tok/sec: 184797.09, flops:194.00, batch-reuse:1
@ 6368 train 3.7583 , allloss: 3.7583, dt: 702.04ms, fracRes: 0.1965, norm(attn): 36.2500, norm(output): 0.4570, norm(x): 0.6142, norm(y): 0.9653, norm:0.4731, tok/sec: 186701.12, flops:196.00, batch-reuse:1
@ 6369 train 3.8370 , allloss: 3.8370, dt: 702.66ms, fracRes: 0.1966, norm(attn): 36.2500, norm(output): 0.4551, norm(x): 0.6136, norm(y): 0.9665, norm:0.4246, tok/sec: 186536.66, flops:195.83, batch-reuse:1
@ 6370 train 3.7696 , allloss: 3.7696, dt: 705.16ms, fracRes: 0.1963, norm(attn): 36.2500, norm(output): 0.4492, norm(x): 0.6054, norm(y): 0.9635, norm:0.4047, tok/sec: 185876.45, flops:195.13, batch-reuse:1
@ 6371 train 3.8875 , allloss: 3.8875, dt: 708.55ms, fracRes: 0.1986, norm(attn): 36.0000, norm(output): 0.4512, norm(x): 0.6095, norm(y): 0.9552, norm:0.3981, tok/sec: 184985.19, flops:194.20, batch-reuse:1
@ 6372 train 3.9790 , allloss: 3.9790, dt: 711.47ms, fracRes: 0.1985, norm(attn): 36.0000, norm(output): 0.4453, norm(x): 0.6043, norm(y): 0.9482, norm:0.4048, tok/sec: 184226.74, flops:193.40, batch-reuse:1
@ 6373 train 3.8083 , allloss: 3.8083, dt: 693.86ms, fracRes: 0.1985, norm(attn): 34.5000, norm(output): 0.4531, norm(x): 0.6137, norm(y): 0.9170, norm:0.5126, tok/sec: 188902.97, flops:198.31, batch-reuse:1
@ 6374 train 3.8677 , allloss: 3.8677, dt: 701.80ms, fracRes: 0.1975, norm(attn): 36.0000, norm(output): 0.4473, norm(x): 0.6062, norm(y): 0.9521, norm:0.4807, tok/sec: 186766.76, flops:196.07, batch-reuse:1
@ 6375 train 3.9868 , allloss: 3.9868, dt: 702.29ms, fracRes: 0.1978, norm(attn): 36.7500, norm(output): 0.4453, norm(x): 0.6062, norm(y): 0.9735, norm:0.4261, tok/sec: 186634.31, flops:195.93, batch-reuse:1
@ 6376 train 3.8744 , allloss: 3.8744, dt: 694.20ms, fracRes: 0.1978, norm(attn): 37.2500, norm(output): 0.4453, norm(x): 0.6059, norm(y): 0.9812, norm:0.4926, tok/sec: 188809.16, flops:198.21, batch-reuse:1
@ 6377 train 3.8972 , allloss: 3.8972, dt: 696.69ms, fracRes: 0.1976, norm(attn): 37.0000, norm(output): 0.4473, norm(x): 0.6094, norm(y): 0.9847, norm:0.3695, tok/sec: 188136.59, flops:197.51, batch-reuse:1
@ 6378 train 3.7749 , allloss: 3.7749, dt: 718.42ms, fracRes: 0.1971, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6086, norm(y): 0.9850, norm:0.4565, tok/sec: 182445.35, flops:191.53, batch-reuse:1
@ 6379 train 3.8058 , allloss: 3.8058, dt: 706.07ms, fracRes: 0.1960, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.6002, norm(y): 0.9850, norm:0.3682, tok/sec: 185636.75, flops:194.88, batch-reuse:1
@ 6380 train 3.7963 , allloss: 3.7963, dt: 694.83ms, fracRes: 0.1956, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5984, norm(y): 0.9854, norm:0.4216, tok/sec: 188638.19, flops:198.03, batch-reuse:1
@ 6381 train 3.8802 , allloss: 3.8802, dt: 710.55ms, fracRes: 0.1957, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6120, norm(y): 0.9876, norm:0.4180, tok/sec: 184466.65, flops:193.65, batch-reuse:1
@ 6382 train 3.9065 , allloss: 3.9065, dt: 692.20ms, fracRes: 0.1976, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6159, norm(y): 0.9894, norm:0.4185, tok/sec: 189354.58, flops:198.78, batch-reuse:1
@ 6383 train 3.8974 , allloss: 3.8974, dt: 708.34ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6168, norm(y): 0.9889, norm:0.4553, tok/sec: 185041.91, flops:194.26, batch-reuse:1
@ 6384 train 3.9437 , allloss: 3.9437, dt: 693.41ms, fracRes: 0.1987, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6126, norm(y): 0.9882, norm:0.4065, tok/sec: 189025.01, flops:198.44, batch-reuse:1
@ 6385 train 3.7928 , allloss: 3.7928, dt: 716.11ms, fracRes: 0.1979, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.6026, norm(y): 0.9873, norm:0.4106, tok/sec: 183033.34, flops:192.15, batch-reuse:1
@ 6386 train 3.9179 , allloss: 3.9179, dt: 714.84ms, fracRes: 0.2001, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6174, norm(y): 0.9892, norm:0.4753, tok/sec: 183357.31, flops:192.49, batch-reuse:1
@ 6387 train 3.8364 , allloss: 3.8364, dt: 699.81ms, fracRes: 0.1977, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6084, norm(y): 0.9878, norm:0.4028, tok/sec: 187297.82, flops:196.63, batch-reuse:1
@ 6388 train 3.8542 , allloss: 3.8542, dt: 705.23ms, fracRes: 0.1995, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6133, norm(y): 0.9880, norm:0.4248, tok/sec: 185857.73, flops:195.11, batch-reuse:1
@ 6389 train 3.8519 , allloss: 3.8519, dt: 704.32ms, fracRes: 0.1973, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6047, norm(y): 0.9883, norm:0.4038, tok/sec: 186096.36, flops:195.36, batch-reuse:1
@ 6390 train 3.8326 , allloss: 3.8326, dt: 702.26ms, fracRes: 0.1964, norm(attn): 37.7500, norm(output): 0.4434, norm(x): 0.6015, norm(y): 0.9879, norm:0.4135, tok/sec: 186642.36, flops:195.94, batch-reuse:1
@ 6391 train 4.0118 , allloss: 4.0118, dt: 703.75ms, fracRes: 0.1971, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6057, norm(y): 0.9891, norm:0.4055, tok/sec: 186248.87, flops:195.52, batch-reuse:1
@ 6392 train 3.7874 , allloss: 3.7874, dt: 705.45ms, fracRes: 0.1975, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6029, norm(y): 0.9881, norm:0.4142, tok/sec: 185797.93, flops:195.05, batch-reuse:1
@ 6393 train 3.7964 , allloss: 3.7964, dt: 703.82ms, fracRes: 0.1990, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6087, norm(y): 0.9878, norm:0.3895, tok/sec: 186230.26, flops:195.50, batch-reuse:1
@ 6394 train 3.8498 , allloss: 3.8498, dt: 703.84ms, fracRes: 0.1978, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6088, norm(y): 0.9880, norm:0.4446, tok/sec: 186224.96, flops:195.50, batch-reuse:1
@ 6395 train 3.8158 , allloss: 3.8158, dt: 697.80ms, fracRes: 0.1976, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6041, norm(y): 0.9880, norm:0.3619, tok/sec: 187836.78, flops:197.19, batch-reuse:1
@ 6396 train 3.8973 , allloss: 3.8973, dt: 709.04ms, fracRes: 0.1993, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6123, norm(y): 0.9891, norm:0.4147, tok/sec: 184858.11, flops:194.06, batch-reuse:1
@ 6397 train 3.7861 , allloss: 3.7861, dt: 693.58ms, fracRes: 0.1981, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6105, norm(y): 0.9887, norm:0.4034, tok/sec: 188980.11, flops:198.39, batch-reuse:1
@ 6398 train 3.8720 , allloss: 3.8720, dt: 707.05ms, fracRes: 0.1961, norm(attn): 37.5000, norm(output): 0.4590, norm(x): 0.6160, norm(y): 0.9892, norm:0.4098, tok/sec: 185379.98, flops:194.61, batch-reuse:1
@ 6399 train 3.8558 , allloss: 3.8558, dt: 703.70ms, fracRes: 0.1948, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6083, norm(y): 0.9878, norm:0.3976, tok/sec: 186260.35, flops:195.54, batch-reuse:1
@ 6400 train 3.9021 , allloss: 3.9021, dt: 720.65ms, fracRes: 0.1956, norm(attn): 38.0000, norm(output): 0.4434, norm(x): 0.6017, norm(y): 0.9886, norm:0.3988, tok/sec: 181880.86, flops:190.94, batch-reuse:1
@ 6401 train 3.8650 , allloss: 3.8650, dt: 707.73ms, fracRes: 0.1971, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6058, norm(y): 0.9894, norm:0.3954, tok/sec: 185200.31, flops:194.42, batch-reuse:1
@ 6402 train 3.8216 , allloss: 3.8216, dt: 706.54ms, fracRes: 0.1958, norm(attn): 37.7500, norm(output): 0.4434, norm(x): 0.6014, norm(y): 0.9886, norm:0.4172, tok/sec: 185513.03, flops:194.75, batch-reuse:1
@ 6403 train 4.1779 , allloss: 4.1779, dt: 708.90ms, fracRes: 0.1979, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6173, norm(y): 0.9899, norm:1.0003, tok/sec: 184894.73, flops:194.10, batch-reuse:1
@ 6404 train 4.0086 , allloss: 4.0086, dt: 705.47ms, fracRes: 0.2001, norm(attn): 37.5000, norm(output): 0.4727, norm(x): 0.6319, norm(y): 0.9904, norm:0.8749, tok/sec: 185793.22, flops:195.05, batch-reuse:1
@ 6405 train 3.9051 , allloss: 3.9051, dt: 707.31ms, fracRes: 0.1989, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6158, norm(y): 0.9891, norm:0.5142, tok/sec: 185311.05, flops:194.54, batch-reuse:1
@ 6406 train 3.8781 , allloss: 3.8781, dt: 710.08ms, fracRes: 0.1964, norm(attn): 38.0000, norm(output): 0.4414, norm(x): 0.5991, norm(y): 0.9880, norm:0.5657, tok/sec: 184586.68, flops:193.78, batch-reuse:1
@ 6407 train 3.7904 , allloss: 3.7904, dt: 706.33ms, fracRes: 0.1951, norm(attn): 37.7500, norm(output): 0.4375, norm(x): 0.5961, norm(y): 0.9878, norm:0.5161, tok/sec: 185568.83, flops:194.81, batch-reuse:1
@ 6408 train 3.8562 , allloss: 3.8562, dt: 716.21ms, fracRes: 0.1974, norm(attn): 37.7500, norm(output): 0.4551, norm(x): 0.6112, norm(y): 0.9879, norm:0.4737, tok/sec: 183006.65, flops:192.12, batch-reuse:1
@ 6409 train 3.9054 , allloss: 3.9054, dt: 714.64ms, fracRes: 0.1975, norm(attn): 38.0000, norm(output): 0.4570, norm(x): 0.6146, norm(y): 0.9878, norm:0.4118, tok/sec: 183411.08, flops:192.55, batch-reuse:1
@ 6410 train 3.9044 , allloss: 3.9044, dt: 718.12ms, fracRes: 0.1968, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6123, norm(y): 0.9882, norm:0.4471, tok/sec: 182521.85, flops:191.61, batch-reuse:1
@ 6411 train 3.8391 , allloss: 3.8391, dt: 715.68ms, fracRes: 0.1988, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6158, norm(y): 0.9878, norm:0.3839, tok/sec: 183143.39, flops:192.26, batch-reuse:1
@ 6412 train 3.8391 , allloss: 3.8391, dt: 715.15ms, fracRes: 0.1964, norm(attn): 37.7500, norm(output): 0.4473, norm(x): 0.6061, norm(y): 0.9879, norm:0.4297, tok/sec: 183278.82, flops:192.41, batch-reuse:1
@ 6413 train 3.8151 , allloss: 3.8151, dt: 713.70ms, fracRes: 0.1971, norm(attn): 37.7500, norm(output): 0.4531, norm(x): 0.6106, norm(y): 0.9884, norm:0.3959, tok/sec: 183650.52, flops:192.80, batch-reuse:1
@ 6414 train 3.8460 , allloss: 3.8460, dt: 707.49ms, fracRes: 0.1976, norm(attn): 37.7500, norm(output): 0.4473, norm(x): 0.6069, norm(y): 0.9881, norm:0.4316, tok/sec: 185263.28, flops:194.49, batch-reuse:1
@ 6415 train 3.9555 , allloss: 3.9555, dt: 705.60ms, fracRes: 0.1973, norm(attn): 38.0000, norm(output): 0.4453, norm(x): 0.6040, norm(y): 0.9891, norm:0.4199, tok/sec: 185758.88, flops:195.01, batch-reuse:1
@ 6416 train 3.8235 , allloss: 3.8235, dt: 703.10ms, fracRes: 0.1986, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6092, norm(y): 0.9883, norm:0.3874, tok/sec: 186419.90, flops:195.70, batch-reuse:1
@ 6417 train 3.8630 , allloss: 3.8630, dt: 698.14ms, fracRes: 0.1988, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6109, norm(y): 0.9890, norm:0.3850, tok/sec: 187744.48, flops:197.09, batch-reuse:1
@ 6418 train 3.8088 , allloss: 3.8088, dt: 709.63ms, fracRes: 0.1983, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6076, norm(y): 0.9886, norm:0.3640, tok/sec: 184704.08, flops:193.90, batch-reuse:1
@ 6419 train 3.8007 , allloss: 3.8007, dt: 710.92ms, fracRes: 0.1981, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6064, norm(y): 0.9871, norm:0.3691, tok/sec: 184368.91, flops:193.55, batch-reuse:1
@ 6420 train 3.9158 , allloss: 3.9158, dt: 703.87ms, fracRes: 0.1983, norm(attn): 37.5000, norm(output): 0.4551, norm(x): 0.6104, norm(y): 0.9876, norm:0.3975, tok/sec: 186215.81, flops:195.49, batch-reuse:1
@ 6421 train 3.7752 , allloss: 3.7752, dt: 709.56ms, fracRes: 0.2002, norm(attn): 37.5000, norm(output): 0.4648, norm(x): 0.6185, norm(y): 0.9879, norm:0.3734, tok/sec: 184722.33, flops:193.92, batch-reuse:1
@ 6422 train 3.7708 , allloss: 3.7708, dt: 713.30ms, fracRes: 0.1997, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6084, norm(y): 0.9875, norm:0.4163, tok/sec: 183755.30, flops:192.91, batch-reuse:1
@ 6423 train 3.9697 , allloss: 3.9697, dt: 710.89ms, fracRes: 0.1981, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6118, norm(y): 0.9883, norm:0.4306, tok/sec: 184376.88, flops:193.56, batch-reuse:1
@ 6424 train 3.8754 , allloss: 3.8754, dt: 719.85ms, fracRes: 0.2005, norm(attn): 37.0000, norm(output): 0.4570, norm(x): 0.6172, norm(y): 0.9879, norm:0.4065, tok/sec: 182081.94, flops:191.15, batch-reuse:1
@ 6425 train 3.8473 , allloss: 3.8473, dt: 702.15ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6102, norm(y): 0.9883, norm:0.3995, tok/sec: 186671.13, flops:195.97, batch-reuse:1
@ 6426 train 3.8326 , allloss: 3.8326, dt: 719.23ms, fracRes: 0.1971, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6050, norm(y): 0.9877, norm:0.4037, tok/sec: 182239.11, flops:191.31, batch-reuse:1
@ 6427 train 3.8220 , allloss: 3.8220, dt: 714.42ms, fracRes: 0.1975, norm(attn): 37.5000, norm(output): 0.4414, norm(x): 0.6018, norm(y): 0.9868, norm:0.3922, tok/sec: 183467.33, flops:192.60, batch-reuse:1
@ 6428 train 3.7576 , allloss: 3.7576, dt: 692.17ms, fracRes: 0.1981, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.6031, norm(y): 0.9870, norm:0.3937, tok/sec: 189364.50, flops:198.80, batch-reuse:1
@ 6429 train 3.7481 , allloss: 3.7481, dt: 713.29ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6137, norm(y): 0.9879, norm:0.3875, tok/sec: 183756.96, flops:192.91, batch-reuse:1
@ 6430 train 3.8018 , allloss: 3.8018, dt: 721.08ms, fracRes: 0.1989, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6095, norm(y): 0.9875, norm:0.4472, tok/sec: 181772.13, flops:190.82, batch-reuse:1
@ 6431 train 3.7760 , allloss: 3.7760, dt: 721.06ms, fracRes: 0.1996, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6073, norm(y): 0.9877, norm:0.3833, tok/sec: 181777.00, flops:190.83, batch-reuse:1
@ 6432 train 3.8409 , allloss: 3.8409, dt: 695.33ms, fracRes: 0.2006, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6081, norm(y): 0.9879, norm:0.4117, tok/sec: 188503.78, flops:197.89, batch-reuse:1
@ 6433 train 3.8733 , allloss: 3.8733, dt: 702.47ms, fracRes: 0.2012, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6103, norm(y): 0.9882, norm:0.4253, tok/sec: 186586.49, flops:195.88, batch-reuse:1
@ 6434 train 3.7495 , allloss: 3.7495, dt: 702.15ms, fracRes: 0.1987, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6085, norm(y): 0.9875, norm:0.4075, tok/sec: 186673.41, flops:195.97, batch-reuse:1
@ 6435 train 3.9377 , allloss: 3.9377, dt: 694.96ms, fracRes: 0.1986, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6130, norm(y): 0.9884, norm:0.4823, tok/sec: 188602.85, flops:198.00, batch-reuse:1
@ 6436 train 3.8397 , allloss: 3.8397, dt: 703.30ms, fracRes: 0.1976, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6111, norm(y): 0.9885, norm:0.4148, tok/sec: 186368.26, flops:195.65, batch-reuse:1
@ 6437 train 3.7669 , allloss: 3.7669, dt: 707.99ms, fracRes: 0.1997, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6075, norm(y): 0.9873, norm:0.4224, tok/sec: 185131.70, flops:194.35, batch-reuse:1
@ 6438 train 3.7305 , allloss: 3.7305, dt: 708.79ms, fracRes: 0.1987, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6056, norm(y): 0.9870, norm:0.4256, tok/sec: 184923.34, flops:194.13, batch-reuse:1
@ 6439 train 3.8675 , allloss: 3.8675, dt: 704.10ms, fracRes: 0.1996, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6072, norm(y): 0.9869, norm:0.4025, tok/sec: 186155.21, flops:195.43, batch-reuse:1
@ 6440 train 3.6909 , allloss: 3.6909, dt: 708.30ms, fracRes: 0.1975, norm(attn): 37.5000, norm(output): 0.4531, norm(x): 0.6064, norm(y): 0.9869, norm:0.4170, tok/sec: 185051.94, flops:194.27, batch-reuse:1
@ 6441 train 3.8966 , allloss: 3.8966, dt: 699.51ms, fracRes: 0.1971, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6050, norm(y): 0.9881, norm:0.4097, tok/sec: 187376.53, flops:196.71, batch-reuse:1
@ 6442 train 3.7803 , allloss: 3.7803, dt: 718.15ms, fracRes: 0.1977, norm(attn): 37.7500, norm(output): 0.4453, norm(x): 0.6039, norm(y): 0.9874, norm:0.3945, tok/sec: 182514.52, flops:191.60, batch-reuse:1
@ 6443 train 3.9114 , allloss: 3.9114, dt: 718.19ms, fracRes: 0.1979, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6093, norm(y): 0.9888, norm:0.4002, tok/sec: 182504.40, flops:191.59, batch-reuse:1
@ 6444 train 4.0992 , allloss: 4.0992, dt: 713.45ms, fracRes: 0.1998, norm(attn): 37.0000, norm(output): 0.4609, norm(x): 0.6261, norm(y): 0.9897, norm:0.6566, tok/sec: 183715.88, flops:192.87, batch-reuse:1
@ 6445 train 3.8197 , allloss: 3.8197, dt: 712.19ms, fracRes: 0.1991, norm(attn): 37.2500, norm(output): 0.4609, norm(x): 0.6160, norm(y): 0.9879, norm:0.6434, tok/sec: 184040.00, flops:193.21, batch-reuse:1
@ 6446 train 3.8309 , allloss: 3.8309, dt: 713.83ms, fracRes: 0.1996, norm(attn): 37.0000, norm(output): 0.4473, norm(x): 0.6097, norm(y): 0.9870, norm:0.4720, tok/sec: 183618.20, flops:192.76, batch-reuse:1
@ 6447 train 3.7705 , allloss: 3.7705, dt: 713.92ms, fracRes: 0.2011, norm(attn): 36.7500, norm(output): 0.4473, norm(x): 0.6104, norm(y): 0.9861, norm:0.5164, tok/sec: 183594.28, flops:192.74, batch-reuse:1
@ 6448 train 3.7520 , allloss: 3.7520, dt: 710.61ms, fracRes: 0.1990, norm(attn): 37.0000, norm(output): 0.4590, norm(x): 0.6190, norm(y): 0.9882, norm:0.5162, tok/sec: 184449.20, flops:193.64, batch-reuse:1
@ 6449 train 3.8617 , allloss: 3.8617, dt: 707.96ms, fracRes: 0.1987, norm(attn): 37.2500, norm(output): 0.4453, norm(x): 0.6062, norm(y): 0.9881, norm:0.4254, tok/sec: 185139.19, flops:194.36, batch-reuse:1
@ 6450 train 3.7993 , allloss: 3.7993, dt: 697.13ms, fracRes: 0.1975, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6073, norm(y): 0.9883, norm:0.4798, tok/sec: 188017.17, flops:197.38, batch-reuse:1
@ 6451 train 3.7180 , allloss: 3.7180, dt: 716.18ms, fracRes: 0.1966, norm(attn): 37.5000, norm(output): 0.4395, norm(x): 0.5974, norm(y): 0.9874, norm:0.4195, tok/sec: 183015.30, flops:192.13, batch-reuse:1
@ 6452 train 3.8663 , allloss: 3.8663, dt: 715.15ms, fracRes: 0.1990, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6125, norm(y): 0.9882, norm:0.4365, tok/sec: 183277.84, flops:192.41, batch-reuse:1
@ 6453 train 3.7905 , allloss: 3.7905, dt: 727.85ms, fracRes: 0.2004, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6083, norm(y): 0.9873, norm:0.4310, tok/sec: 180081.01, flops:189.05, batch-reuse:1
@ 6454 train 3.7953 , allloss: 3.7953, dt: 714.65ms, fracRes: 0.2015, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6142, norm(y): 0.9873, norm:0.4365, tok/sec: 183408.26, flops:192.54, batch-reuse:1
@ 6455 train 3.8564 , allloss: 3.8564, dt: 723.06ms, fracRes: 0.1983, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6083, norm(y): 0.9875, norm:0.3685, tok/sec: 181273.22, flops:190.30, batch-reuse:1
@ 6456 train 3.7730 , allloss: 3.7730, dt: 716.99ms, fracRes: 0.1982, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6072, norm(y): 0.9875, norm:0.4217, tok/sec: 182808.08, flops:191.91, batch-reuse:1
@ 6457 train 3.7294 , allloss: 3.7294, dt: 714.40ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6069, norm(y): 0.9868, norm:0.3752, tok/sec: 183470.82, flops:192.61, batch-reuse:1
@ 6458 train 3.7623 , allloss: 3.7623, dt: 718.94ms, fracRes: 0.2001, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6075, norm(y): 0.9872, norm:0.3950, tok/sec: 182312.97, flops:191.39, batch-reuse:1
@ 6459 train 3.8700 , allloss: 3.8700, dt: 724.87ms, fracRes: 0.1994, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6096, norm(y): 0.9881, norm:0.3837, tok/sec: 180822.41, flops:189.83, batch-reuse:1
@ 6460 train 3.8507 , allloss: 3.8507, dt: 710.06ms, fracRes: 0.1986, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6065, norm(y): 0.9871, norm:0.3693, tok/sec: 184593.94, flops:193.79, batch-reuse:1
@ 6461 train 3.8595 , allloss: 3.8595, dt: 714.60ms, fracRes: 0.1996, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6108, norm(y): 0.9885, norm:0.4127, tok/sec: 183421.11, flops:192.56, batch-reuse:1
@ 6462 train 3.8426 , allloss: 3.8426, dt: 719.31ms, fracRes: 0.1985, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6077, norm(y): 0.9880, norm:0.3640, tok/sec: 182219.66, flops:191.29, batch-reuse:1
@ 6463 train 3.7019 , allloss: 3.7019, dt: 711.75ms, fracRes: 0.1966, norm(attn): 37.5000, norm(output): 0.4434, norm(x): 0.5988, norm(y): 0.9861, norm:0.3661, tok/sec: 184153.55, flops:193.32, batch-reuse:1
@ 6464 train 3.7626 , allloss: 3.7626, dt: 716.66ms, fracRes: 0.1974, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6036, norm(y): 0.9866, norm:0.4074, tok/sec: 182891.95, flops:192.00, batch-reuse:1
@ 6465 train 3.6079 , allloss: 3.6079, dt: 705.73ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4492, norm(x): 0.6073, norm(y): 0.9863, norm:0.3661, tok/sec: 185725.62, flops:194.98, batch-reuse:1
@ 6466 train 3.6538 , allloss: 3.6538, dt: 707.02ms, fracRes: 0.1994, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6083, norm(y): 0.9862, norm:0.3727, tok/sec: 185385.98, flops:194.62, batch-reuse:1
@ 6467 train 3.7924 , allloss: 3.7924, dt: 706.49ms, fracRes: 0.1993, norm(attn): 37.0000, norm(output): 0.4531, norm(x): 0.6173, norm(y): 0.9884, norm:0.4261, tok/sec: 185524.43, flops:194.76, batch-reuse:1
@ 6468 train 3.7821 , allloss: 3.7821, dt: 707.87ms, fracRes: 0.1965, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6037, norm(y): 0.9866, norm:0.4303, tok/sec: 185163.75, flops:194.39, batch-reuse:1
@ 6469 train 3.7341 , allloss: 3.7341, dt: 704.82ms, fracRes: 0.1979, norm(attn): 37.0000, norm(output): 0.4531, norm(x): 0.6101, norm(y): 0.9871, norm:0.4267, tok/sec: 185966.49, flops:195.23, batch-reuse:1
@ 6470 train 3.7194 , allloss: 3.7194, dt: 700.72ms, fracRes: 0.1953, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6004, norm(y): 0.9867, norm:0.4426, tok/sec: 187053.55, flops:196.37, batch-reuse:1
@ 6471 train 3.6668 , allloss: 3.6668, dt: 709.00ms, fracRes: 0.1977, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6043, norm(y): 0.9860, norm:0.4131, tok/sec: 184869.24, flops:194.08, batch-reuse:1
@ 6472 train 3.7140 , allloss: 3.7140, dt: 710.73ms, fracRes: 0.1967, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6042, norm(y): 0.9863, norm:0.4447, tok/sec: 184418.32, flops:193.60, batch-reuse:1
@ 6473 train 3.6846 , allloss: 3.6846, dt: 719.10ms, fracRes: 0.1998, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6130, norm(y): 0.9871, norm:0.4181, tok/sec: 182272.71, flops:191.35, batch-reuse:1
@ 6474 train 3.6979 , allloss: 3.6979, dt: 687.40ms, fracRes: 0.1991, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6112, norm(y): 0.9880, norm:0.4082, tok/sec: 190677.62, flops:200.17, batch-reuse:1
@ 6475 train 3.7497 , allloss: 3.7497, dt: 698.57ms, fracRes: 0.1973, norm(attn): 37.5000, norm(output): 0.4453, norm(x): 0.6030, norm(y): 0.9871, norm:0.3865, tok/sec: 187627.73, flops:196.97, batch-reuse:1
@ 6476 train 3.8238 , allloss: 3.8238, dt: 707.45ms, fracRes: 0.1987, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6120, norm(y): 0.9873, norm:0.4181, tok/sec: 185272.96, flops:194.50, batch-reuse:1
@ 6477 train 3.6313 , allloss: 3.6313, dt: 711.91ms, fracRes: 0.1982, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6039, norm(y): 0.9859, norm:0.4289, tok/sec: 184114.45, flops:193.28, batch-reuse:1
@ 6478 train 3.6801 , allloss: 3.6801, dt: 713.42ms, fracRes: 0.1990, norm(attn): 36.7500, norm(output): 0.4570, norm(x): 0.6127, norm(y): 0.9870, norm:0.3824, tok/sec: 183723.25, flops:192.87, batch-reuse:1
@ 6479 train 3.6678 , allloss: 3.6678, dt: 709.55ms, fracRes: 0.1982, norm(attn): 37.2500, norm(output): 0.4590, norm(x): 0.6105, norm(y): 0.9864, norm:0.3916, tok/sec: 184724.31, flops:193.92, batch-reuse:1
@ 6480 train 3.7920 , allloss: 3.7920, dt: 697.77ms, fracRes: 0.1991, norm(attn): 37.5000, norm(output): 0.4512, norm(x): 0.6101, norm(y): 0.9875, norm:0.4204, tok/sec: 187844.74, flops:197.20, batch-reuse:1
@ 6481 train 3.7753 , allloss: 3.7753, dt: 721.58ms, fracRes: 0.1994, norm(attn): 37.5000, norm(output): 0.4570, norm(x): 0.6124, norm(y): 0.9871, norm:0.4476, tok/sec: 181646.91, flops:190.69, batch-reuse:1
@ 6482 train 3.6665 , allloss: 3.6665, dt: 719.53ms, fracRes: 0.1990, norm(attn): 37.2500, norm(output): 0.4473, norm(x): 0.6060, norm(y): 0.9860, norm:0.4049, tok/sec: 182162.12, flops:191.23, batch-reuse:1
@ 6483 train 3.8185 , allloss: 3.8185, dt: 724.52ms, fracRes: 0.2022, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6162, norm(y): 0.9881, norm:0.4206, tok/sec: 180907.91, flops:189.92, batch-reuse:1
@ 6484 train 3.6686 , allloss: 3.6686, dt: 699.95ms, fracRes: 0.2005, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6116, norm(y): 0.9873, norm:0.4378, tok/sec: 187258.33, flops:196.58, batch-reuse:1
@ 6485 train 3.7827 , allloss: 3.7827, dt: 695.22ms, fracRes: 0.2008, norm(attn): 37.2500, norm(output): 0.4531, norm(x): 0.6122, norm(y): 0.9870, norm:0.4310, tok/sec: 188532.03, flops:197.92, batch-reuse:1
@ 6486 train 3.6729 , allloss: 3.6729, dt: 703.41ms, fracRes: 0.1994, norm(attn): 37.2500, norm(output): 0.4512, norm(x): 0.6067, norm(y): 0.9858, norm:0.4343, tok/sec: 186337.18, flops:195.62, batch-reuse:1
@ 6487 train 3.6623 , allloss: 3.6623, dt: 703.74ms, fracRes: 0.2003, norm(attn): 37.0000, norm(output): 0.4551, norm(x): 0.6129, norm(y): 0.9860, norm:0.4404, tok/sec: 186251.46, flops:195.53, batch-reuse:1
@ 6488 train 3.7748 , allloss: 3.7748, dt: 705.91ms, fracRes: 0.2008, norm(attn): 37.0000, norm(output): 0.4609, norm(x): 0.6153, norm(y): 0.9872, norm:0.5175, tok/sec: 185677.00, flops:194.92, batch-reuse:1
@ 6489 train 3.7303 , allloss: 3.7303, dt: 705.15ms, fracRes: 0.2014, norm(attn): 36.7500, norm(output): 0.4492, norm(x): 0.6102, norm(y): 0.9869, norm:0.4413, tok/sec: 185879.41, flops:195.14, batch-reuse:1
@ 6490 train 3.6211 , allloss: 3.6211, dt: 708.48ms, fracRes: 0.1973, norm(attn): 37.2500, norm(output): 0.4453, norm(x): 0.6052, norm(y): 0.9864, norm:0.4638, tok/sec: 185004.49, flops:194.22, batch-reuse:1
@ 6491 train 3.7592 , allloss: 3.7592, dt: 703.53ms, fracRes: 0.1948, norm(attn): 37.5000, norm(output): 0.4473, norm(x): 0.6049, norm(y): 0.9860, norm:0.4716, tok/sec: 186306.05, flops:195.58, batch-reuse:1
@ 6492 train 3.6811 , allloss: 3.6811, dt: 707.83ms, fracRes: 0.1953, norm(attn): 37.2500, norm(output): 0.4570, norm(x): 0.6132, norm(y): 0.9866, norm:0.4603, tok/sec: 185174.48, flops:194.40, batch-reuse:1
@ 6493 train 3.8130 , allloss: 3.8130, dt: 706.59ms, fracRes: 0.1992, norm(attn): 37.0000, norm(output): 0.4766, norm(x): 0.6346, norm(y): 0.9880, norm:0.6857, tok/sec: 185498.57, flops:194.74, batch-reuse:1
@ 6494 train 3.6152 , allloss: 3.6152, dt: 705.94ms, fracRes: 0.1996, norm(attn): 37.0000, norm(output): 0.4414, norm(x): 0.6049, norm(y): 0.9863, norm:0.5179, tok/sec: 185668.91, flops:194.92, batch-reuse:1
@ 6495 train 3.7529 , allloss: 3.7529, dt: 709.30ms, fracRes: 0.1973, norm(attn): 37.2500, norm(output): 0.4492, norm(x): 0.6041, norm(y): 0.9863, norm:0.4584, tok/sec: 184790.50, flops:193.99, batch-reuse:1
@ 6496 train 3.6969 , allloss: 3.6969, dt: 711.68ms, fracRes: 0.1977, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6073, norm(y): 0.9861, norm:0.4910, tok/sec: 184173.11, flops:193.35, batch-reuse:1
@ 6497 train 3.6971 , allloss: 3.6971, dt: 709.70ms, fracRes: 0.1983, norm(attn): 36.7500, norm(output): 0.4473, norm(x): 0.6039, norm(y): 0.9847, norm:0.4634, tok/sec: 184686.58, flops:193.88, batch-reuse:1
@ 6498 train 3.6848 , allloss: 3.6848, dt: 702.81ms, fracRes: 0.2012, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6105, norm(y): 0.9856, norm:0.4705, tok/sec: 186496.54, flops:195.78, batch-reuse:1
@ 6499 train 3.7736 , allloss: 3.7736, dt: 716.42ms, fracRes: 0.2014, norm(attn): 36.7500, norm(output): 0.4453, norm(x): 0.6055, norm(y): 0.9857, norm:0.4093, tok/sec: 182953.91, flops:192.07, batch-reuse:1
@ 6500 train 3.8446 , allloss: 3.8446, dt: 714.61ms, fracRes: 0.2019, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6077, norm(y): 0.9862, norm:0.4668, tok/sec: 183418.24, flops:192.55, batch-reuse:1
@ 6501 train 3.7769 , allloss: 3.7769, dt: 712.36ms, fracRes: 0.2002, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6089, norm(y): 0.9858, norm:0.4400, tok/sec: 183997.99, flops:193.16, batch-reuse:1
@ 6502 train 3.6720 , allloss: 3.6720, dt: 711.02ms, fracRes: 0.1995, norm(attn): 36.7500, norm(output): 0.4492, norm(x): 0.6096, norm(y): 0.9861, norm:0.5116, tok/sec: 184342.63, flops:193.52, batch-reuse:1
@ 6503 train 3.7077 , allloss: 3.7077, dt: 709.80ms, fracRes: 0.2001, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6075, norm(y): 0.9857, norm:0.4640, tok/sec: 184660.78, flops:193.86, batch-reuse:1
@ 6504 train 3.7334 , allloss: 3.7334, dt: 708.09ms, fracRes: 0.1993, norm(attn): 36.7500, norm(output): 0.4453, norm(x): 0.6042, norm(y): 0.9858, norm:0.4683, tok/sec: 185106.58, flops:194.33, batch-reuse:1
@ 6505 train 3.6062 , allloss: 3.6062, dt: 706.70ms, fracRes: 0.1995, norm(attn): 36.5000, norm(output): 0.4551, norm(x): 0.6129, norm(y): 0.9862, norm:0.4539, tok/sec: 185471.79, flops:194.71, batch-reuse:1
@ 6506 train 3.5390 , allloss: 3.5390, dt: 696.33ms, fracRes: 0.1983, norm(attn): 36.5000, norm(output): 0.4492, norm(x): 0.6062, norm(y): 0.9854, norm:0.4502, tok/sec: 188233.02, flops:197.61, batch-reuse:1
@ 6507 train 3.6860 , allloss: 3.6860, dt: 707.47ms, fracRes: 0.1978, norm(attn): 36.7500, norm(output): 0.4453, norm(x): 0.6002, norm(y): 0.9848, norm:0.4493, tok/sec: 185269.65, flops:194.50, batch-reuse:1
@ 6508 train 3.7838 , allloss: 3.7838, dt: 706.66ms, fracRes: 0.1973, norm(attn): 36.7500, norm(output): 0.4434, norm(x): 0.5993, norm(y): 0.9860, norm:0.4178, tok/sec: 185480.55, flops:194.72, batch-reuse:1
@ 6509 train 3.7131 , allloss: 3.7131, dt: 717.83ms, fracRes: 0.1989, norm(attn): 36.5000, norm(output): 0.4434, norm(x): 0.6042, norm(y): 0.9865, norm:0.4586, tok/sec: 182594.90, flops:191.69, batch-reuse:1
@ 6510 train 3.8200 , allloss: 3.8200, dt: 713.90ms, fracRes: 0.2016, norm(attn): 36.5000, norm(output): 0.4551, norm(x): 0.6160, norm(y): 0.9876, norm:0.4103, tok/sec: 183600.17, flops:192.74, batch-reuse:1
@ 6511 train 3.9481 , allloss: 3.9481, dt: 706.48ms, fracRes: 0.2021, norm(attn): 36.5000, norm(output): 0.4609, norm(x): 0.6181, norm(y): 0.9873, norm:0.5185, tok/sec: 185527.37, flops:194.77, batch-reuse:1
@ 6512 train 4.0054 , allloss: 4.0054, dt: 706.36ms, fracRes: 0.2035, norm(attn): 36.5000, norm(output): 0.4570, norm(x): 0.6204, norm(y): 0.9882, norm:0.4417, tok/sec: 185559.31, flops:194.80, batch-reuse:1
@ 6513 train 3.8905 , allloss: 3.8905, dt: 697.76ms, fracRes: 0.2008, norm(attn): 36.5000, norm(output): 0.4512, norm(x): 0.6149, norm(y): 0.9884, norm:0.5018, tok/sec: 187846.54, flops:197.20, batch-reuse:1
@ 6514 train 3.9000 , allloss: 3.9000, dt: 704.34ms, fracRes: 0.2019, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6155, norm(y): 0.9870, norm:0.4430, tok/sec: 186091.89, flops:195.36, batch-reuse:1
@ 6515 train 3.9484 , allloss: 3.9484, dt: 701.00ms, fracRes: 0.1996, norm(attn): 36.5000, norm(output): 0.4492, norm(x): 0.6087, norm(y): 0.9861, norm:0.5693, tok/sec: 186977.85, flops:196.29, batch-reuse:1
@ 6516 train 3.8999 , allloss: 3.8999, dt: 700.15ms, fracRes: 0.2027, norm(attn): 36.5000, norm(output): 0.4590, norm(x): 0.6181, norm(y): 0.9870, norm:0.4147, tok/sec: 187205.15, flops:196.53, batch-reuse:1
@ 6517 train 3.8988 , allloss: 3.8988, dt: 705.98ms, fracRes: 0.2013, norm(attn): 36.5000, norm(output): 0.4570, norm(x): 0.6172, norm(y): 0.9879, norm:0.5461, tok/sec: 185659.57, flops:194.91, batch-reuse:1
@ 6518 train 3.8456 , allloss: 3.8456, dt: 711.98ms, fracRes: 0.1995, norm(attn): 36.5000, norm(output): 0.4551, norm(x): 0.6113, norm(y): 0.9867, norm:0.3849, tok/sec: 184094.05, flops:193.26, batch-reuse:1
@ 6519 train 3.9959 , allloss: 3.9959, dt: 702.91ms, fracRes: 0.1974, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6077, norm(y): 0.9866, norm:0.4767, tok/sec: 186470.67, flops:195.76, batch-reuse:1
@ 6520 train 3.8744 , allloss: 3.8744, dt: 703.71ms, fracRes: 0.1988, norm(attn): 36.7500, norm(output): 0.4551, norm(x): 0.6102, norm(y): 0.9866, norm:0.4274, tok/sec: 186257.39, flops:195.53, batch-reuse:1
@ 6521 train 3.9537 , allloss: 3.9537, dt: 708.88ms, fracRes: 0.1990, norm(attn): 36.7500, norm(output): 0.4473, norm(x): 0.6061, norm(y): 0.9876, norm:0.4041, tok/sec: 184899.27, flops:194.11, batch-reuse:1
@ 6522 train 3.8755 , allloss: 3.8755, dt: 710.92ms, fracRes: 0.1983, norm(attn): 36.7500, norm(output): 0.4414, norm(x): 0.6024, norm(y): 0.9877, norm:0.4874, tok/sec: 184370.08, flops:193.55, batch-reuse:1
@ 6523 train 3.8584 , allloss: 3.8584, dt: 710.42ms, fracRes: 0.2012, norm(attn): 36.5000, norm(output): 0.4473, norm(x): 0.6072, norm(y): 0.9868, norm:0.4148, tok/sec: 184499.52, flops:193.69, batch-reuse:1
@ 6524 train 3.9702 , allloss: 3.9702, dt: 706.24ms, fracRes: 0.2013, norm(attn): 36.5000, norm(output): 0.4570, norm(x): 0.6168, norm(y): 0.9873, norm:0.4724, tok/sec: 185590.75, flops:194.83, batch-reuse:1
@ 6525 train 3.8891 , allloss: 3.8891, dt: 709.62ms, fracRes: 0.2016, norm(attn): 36.5000, norm(output): 0.4551, norm(x): 0.6158, norm(y): 0.9872, norm:0.4325, tok/sec: 184706.32, flops:193.91, batch-reuse:1
@ 6526 train 4.1114 , allloss: 4.1114, dt: 702.35ms, fracRes: 0.2037, norm(attn): 36.2500, norm(output): 0.4551, norm(x): 0.6197, norm(y): 0.9888, norm:0.5854, tok/sec: 186619.36, flops:195.91, batch-reuse:1
@ 6527 train 3.9084 , allloss: 3.9084, dt: 704.54ms, fracRes: 0.2022, norm(attn): 36.5000, norm(output): 0.4531, norm(x): 0.6120, norm(y): 0.9871, norm:0.4152, tok/sec: 186038.30, flops:195.30, batch-reuse:1
@ 6528 train 3.9268 , allloss: 3.9268, dt: 709.66ms, fracRes: 0.2028, norm(attn): 36.5000, norm(output): 0.4609, norm(x): 0.6209, norm(y): 0.9876, norm:0.4014, tok/sec: 184697.13, flops:193.90, batch-reuse:1
@ 6529 train 3.9086 , allloss: 3.9086, dt: 712.02ms, fracRes: 0.2010, norm(attn): 36.5000, norm(output): 0.4590, norm(x): 0.6195, norm(y): 0.9873, norm:0.4345, tok/sec: 184083.87, flops:193.25, batch-reuse:1
@ 6530 train 3.8546 , allloss: 3.8546, dt: 700.25ms, fracRes: 0.2017, norm(attn): 36.2500, norm(output): 0.4609, norm(x): 0.6226, norm(y): 0.9868, norm:0.4605, tok/sec: 187179.59, flops:196.50, batch-reuse:1
@ 6531 train 3.8019 , allloss: 3.8019, dt: 700.60ms, fracRes: 0.1984, norm(attn): 36.5000, norm(output): 0.4414, norm(x): 0.6027, norm(y): 0.9856, norm:0.4461, tok/sec: 187086.59, flops:196.40, batch-reuse:1
@ 6532 train 3.9122 , allloss: 3.9122, dt: 714.75ms, fracRes: 0.2010, norm(attn): 36.5000, norm(output): 0.4629, norm(x): 0.6292, norm(y): 0.9874, norm:0.5386, tok/sec: 183382.32, flops:192.52, batch-reuse:1
@ 6533 train 4.0068 , allloss: 4.0068, dt: 711.15ms, fracRes: 0.2024, norm(attn): 36.2500, norm(output): 0.4492, norm(x): 0.6161, norm(y): 0.9873, norm:0.4508, tok/sec: 184310.99, flops:193.49, batch-reuse:1
@ 6534 train 3.8501 , allloss: 3.8501, dt: 707.65ms, fracRes: 0.2020, norm(attn): 36.5000, norm(output): 0.4492, norm(x): 0.6156, norm(y): 0.9876, norm:0.4249, tok/sec: 185221.83, flops:194.45, batch-reuse:1
@ 6535 train 3.8644 , allloss: 3.8644, dt: 712.90ms, fracRes: 0.2022, norm(attn): 36.2500, norm(output): 0.4492, norm(x): 0.6143, norm(y): 0.9865, norm:0.3795, tok/sec: 183857.69, flops:193.01, batch-reuse:1
@ 6536 train 3.9362 , allloss: 3.9362, dt: 707.77ms, fracRes: 0.2042, norm(attn): 36.2500, norm(output): 0.4570, norm(x): 0.6236, norm(y): 0.9874, norm:0.5090, tok/sec: 185189.02, flops:194.41, batch-reuse:1
@ 6537 train 3.9156 , allloss: 3.9156, dt: 690.38ms, fracRes: 0.2043, norm(attn): 36.2500, norm(output): 0.4609, norm(x): 0.6258, norm(y): 0.9868, norm:0.4831, tok/sec: 189856.21, flops:199.31, batch-reuse:1
@ 6538 train 3.8037 , allloss: 3.8037, dt: 711.57ms, fracRes: 0.2018, norm(attn): 36.2500, norm(output): 0.4629, norm(x): 0.6263, norm(y): 0.9874, norm:0.4334, tok/sec: 184202.30, flops:193.38, batch-reuse:1
@ 6539 train 3.9034 , allloss: 3.9034, dt: 713.26ms, fracRes: 0.2000, norm(attn): 36.2500, norm(output): 0.4453, norm(x): 0.6099, norm(y): 0.9867, norm:0.4760, tok/sec: 183764.27, flops:192.92, batch-reuse:1
@ 6540 train 3.9155 , allloss: 3.9155, dt: 711.59ms, fracRes: 0.1993, norm(attn): 36.2500, norm(output): 0.4414, norm(x): 0.6030, norm(y): 0.9864, norm:0.4483, tok/sec: 184196.37, flops:193.37, batch-reuse:1
@ 6541 train 3.9235 , allloss: 3.9235, dt: 697.42ms, fracRes: 0.1999, norm(attn): 36.5000, norm(output): 0.4453, norm(x): 0.6079, norm(y): 0.9862, norm:0.4665, tok/sec: 187938.95, flops:197.30, batch-reuse:1
